#include <a_samp>
//NOTICE!!!

//==============================================================================
#define FIXES_Single 				1
#include <fixes>
#include <fixes2>
//#include <vehicleplus>
//==============================================================================
#include <crashdetect>
#include <a_mysql>
#include <streamer>
#include <irp_zcmd>
#include <sscanf2>
#include <OPSP>
#include <foreach>
#include <dataHandler> // 系统物品插件 作者: Tony & THC-11
#include <zones>
#include <floodcontrol>
#include <rapidfire>
#include <dof2>
#include <Dini>
#include <lookup>
#include <mapandreas>
#include <a_actor>

//目前全时工作列表:
//pJob = 1. 物流运输
//pJob = 2. 垃圾收集
//pJob = 3. 披萨运送
//pJob = 4. 偷车贼
//pJob = 5. 伐木工
//pJob = 6. 木头运送

// 兼职列表
//pSidejob = 1. 运尸工
//
//
//

//死尸
#define MAX_REMAINS 			(25)
#define TYPE_REMAINS_PERSON 	(1)
#define TYPE_REMAINS_CAR 		(2)
#define INVALID_SCRIPT_ID 		(-1)
#define INVALID_NAME			"N\A"
#define INVALID_AGE				(0)

new Iterator:Remains<MAX_REMAINS>;

enum DataRemains
{
	Type,
	Model,
	Time,
	Name[MAX_PLAYER_NAME],
	Age,
	Float:coPos[2],
	Text3D:Information
}
new RemainsData[MAX_REMAINS][DataRemains];

new bool:IsCarryingBody[MAX_PLAYERS];
new bool:IsChecking[MAX_PLAYERS];
new bool:ColorSelectedWhite[MAX_PLAYERS];
new bool:ColorSelectedBlue[MAX_PLAYERS];
//new Remains_Timer;
//END
//==============================================================================
#define flashtime 115

#define COLOR_RED 0xFF0000FF

#define BODY_PART_TORSO             (3)
#define BODY_PART_HEAD              (9)
#define BODY_PART_GROIN             (4)
#define BODY_PART_LEFT_ARM          (5)
#define BODY_PART_RIGHT_ARM         (6)
#define BODY_PART_LEFT_LEG          (7)
#define BODY_PART_RIGHT_LEG         (8)
//==============================================================================
#define 	SPRAYTAG_FOLDER 			"spraytags/%s.ini"
//==============================================================================
#define 	MAX_PLAYERS_TAGS 			(15) // Maximum spray tags created by player.
#define 	SPRAY_TAG_TIMER 			(2) // Seconds to create the spray tag.
#define 	SPRAY_TAG_OBJECT 			(19353) // Spray Tag Object ID
#define 	SPRAY_TAG_OBJECT_DISTANCE 	(200.0) // Distance that can be seen the spray tag.
//==============================================================================
#define 	TYPE_LIST_MENU 				(0)
#define 	TYPE_LIST_EDIT 				(1)
#define 	TYPE_LIST_CREATE 			(2)
#define 	TYPE_LIST_TAGS 				(3)
#define 	TYPE_LIST_TAGS_DELETE 		(4)
#define 	TYPE_LIST_TAGS_CREATE 		(5)
#define 	TYPE_LIST_TAGS_FIND 		(6)
//==============================================================================
#define 	SPRAYTAG_MENU 				(9800)
#define 	SPRAYTAG_DELETE 			(9801)
#define 	SPRAYTAG_CREATE 			(9802)
#define 	SPRAYTAG_CREATE_MAIN 		(9803)
#define 	SPRAYTAG_CREATE_TEXT 		(9804)
#define 	SPRAYTAG_CREATE_FONT 		(9805)
#define 	SPRAYTAG_CREATE_SIZE 		(9806)
#define 	SPRAYTAG_CREATE_COLOR 		(9807)
#define 	SPRAYTAG_CREATE_FINISH 		(9808)
#define 	SPRAYTAG_EDIT_MAIN 			(9809)
#define 	SPRAYTAG_EDIT_TEXT 			(9810)
#define 	SPRAYTAG_EDIT_FONT 			(9811)
#define 	SPRAYTAG_EDIT_SIZE 			(9812)
#define 	SPRAYTAG_EDIT_COLOR 		(9813)
#define 	SPRAYTAG_EDIT_FINISH 		(9814)
#define 	SPRAYTAG_EDIT_LIST 			(9815)
#define 	SPRAYTAG_FIND				(9816)
#define 	SPRAYTAG_DIALOG_RETURN		(9817)
//==============================================================================
#define FOREACH_NO_BOTS             1
#define MAX_COMMAND_FREQUENCY 		4r
#pragma tabsize 0
#define MAX_PING 1200
#define SCM SendClientMessage
#define SCMALL SendClientMessageToAll
//==============================================================================
#define HOLDOBJECT_CLOTH4 1
#define MAX_SHELLS 300
//==============================================================================
#define neondialog 9750

#define CHEDOU_MODEL 478
#define MAX_TENTS 100
#define HOLDING(%0) ((newkeys & (%0)) == (%0))
//==============================================================================
#define ALARM_PRICE 3500
#define HOTLINE_IMPOUND             823
#define HOTLINE_TAXI                544
#define HOTLINE_MECHANIC            422
#define HOTLINE_EMERGENCY           911
#define DEBUG                       0
#define GM_SCRIPT_PEPPER            "Js26?12sag29"
#define SPECIAL_ACTION_PISSING      68
#define GM_NAME     				"LNG:RP"
#define GM_VERSION  				"ver_1.2r1b"
#define GM_SV_NAME  				"Los Angeles Roleplay [0.3.7]"
#define GM_SV_MAPNAME       		"Los Angeles, CA."
#define GM_SV_HOSTNAME          	"Los Angeles Roleplay [0.3.7]"
#define GM_SV_WEBSITE           	"www.lifengame.com"
#define GM_STD_SKIN             	240
#define GM_STD_SKIN_FEMALE          93
#define GM_BREAKDOWN_HEALTH     	300
#define GM_LOCKER_VOLUME            40
#define GM_MIN_HOUSE_PRICE      	100
#define GM_MAX_HOUSE_PRICE      	10000000
#define GM_HOUSE_SELL_PERCENTAGE 	75
#define GM_MIN_RENTALFEE     		10
#define GM_MAX_RENTALFEE            9999
#define GM_PAY_MIN                  1
#define GM_PAY_MAX                  30000
#define GM_FUELTIMER                300000
#define GM_MIN_TIME_PAYCHECK        3600
#define GM_MIN_BUSINESS_PRICE       100
#define GM_MAX_BUSINESS_PRICE       20000000
#define GM_BUSINESS_SELL_PERCENTAGE 75
#define GM_MAX_ENTRANCE_FEE         1000
#define GM_GASPRICE                 3
#define NON_OBJ_ITEM                19264
#define NAMETAG_DRAWDISTANCE        30.0
#define MAX_TRASHMASTER             72
//==============================================================================
#define SET_MAX_LOGIN_ATTEMPTS      3
//==============================================================================
#define MAX_HOUSES                  3000
#define MAX_BUSINESSES              3000
#define MAX_FACTIONS                12
#define MAX_ROADBLOCKS              50
#define MAX_POLICELINES              100
#define MAX_TICKETS                 50
#define MAX_WARRANTS                50
#define MAX_BOOMBOXES               75
#define MAX_ITEMS                   100
#define MAX_DROPPED_ITEMS           50
#define MAX_CALLS                   25
#define MAX_NOTES                   60
#define MAX_CONTACTS                60
#define MAX_SPIKESTRIPS 			200
#define MAX_OPIUM                   300
#define MAX_WEED                    300
#define MAXLEN 						80
//==============================================================================
#define DIALOG_SCAN       600
#define dcam_UpdateRate   250
#define dcam_Distance     135.0
#define ar_UpdateRate     600
#define ar_Distance       5.0
#define MAX_ZONE_NAME     28
//==============================================================================
#define RELEASED(%0) \
	(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
//==============================================================================
#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
//==============================================================================
#define ALTCOMMAND:%1->%2;           \
COMMAND:%1(playerid, params[])   \
return cmd_%2(playerid, params);
//==============================================================================
#define KickDelay(%1) \
        SetTimerEx("KickDelayCall", 1000, 0, "i", (%1))
//==============================================================================
#if !defined MAX_STRING
	#define MAX_STRING	256
#endif
//==============================================================================
#define KickDelay(%1) \
        SetTimerEx("KickDelayCall", 1000, 0, "i", (%1))
//==============================================================================
#define chrtolower(%1) \
	(((%1) > 0x40 && (%1) <= 0x5A) ? ((%1) | 0x20) : (%1))

#define chrtoupper(%1) \
	(((%1) > 0x60 && (%1) <= 0x7A) ? ((%1) ^ 0x20) : (%1))
//==============================================================================
#define SAKURACMD:(%1) COMMAND:%1(playerid, params[])
#define XB_CMD:(%1) CMD:%1(playerid, params[])

#define COL_WHITE "{FFFFFF}"
#define COL_RED "{F81414}"
#define COL_GREEN "{00FF22}"
#define COL_LIGHTBLUE "{00CED1}"

#define SPRAYCANSOUND "http://download.sucaitianxia.com/yinxiaosucai/rcyx/rc012.WAV"

#define    DIALOG_WELCOME 9700
#define    DIALOG_SELECT 9701
#define    DIALOG_INPUTGRAFF 9702
#define    DIALOG_COLOR 9703
#define    DIALOG_HAPPY 9704
#define    DIALOG_LIST 9705

#define COL_GREY "{C3C3C3}" // 1
#define COL_WHITE "{FFFFFF}" // 2
#define COL_RED "{F81414}" // 3
#define COL_GREEN "{00FF22}" // 4
#define COL_LIGHTBLUE "{00CED1}" // 5
#define COL_ORANGE "{FF9900}" // 6
#define COL_BLACK "{000000}"

#define GRAFFDIALOG ShowPlayerDialog(playerid, DIALOG_SELECT, DIALOG_STYLE_LIST, "涂鸦菜单", "开始涂鸦\n已创作的涂鸦", "选择", "离开");
#define GRAFFINPUT ShowPlayerDialog(playerid, DIALOG_INPUTGRAFF, DIALOG_STYLE_INPUT, "涂鸦", "请输入涂鸦内容", "继续", "取消");
#define GRAFFINPUTER ShowPlayerDialog(playerid, DIALOG_INPUTGRAFF, DIALOG_STYLE_INPUT, ""COL_WHITE"涂鸦", ""COL_RED"错误: 你还没有输入任何内容 \n请再次尝试!", "继续", "取消");
#define GRAFFCOLOR ShowPlayerDialog(playerid, DIALOG_COLOR, DIALOG_STYLE_LIST, "颜色菜单", "{000000}黑色\n{FFFFFF}白色\n{F81414}红色\n{00FF22}绿色\n{0000FF}蓝色\n{C3C3C3}灰色", "选择", "取消");
#define GRAFFHAPPY ShowPlayerDialog(playerid, DIALOG_HAPPY, DIALOG_STYLE_MSGBOX, "涂鸦菜单", "你是否想开始创作?", "确定", "取消");
#define GRAFFLIST ShowPlayerDialog(playerid, DIALOG_LIST,DIALOG_STYLE_LIST,"涂鸦列表",string,"确定","取消");

#define MAXGRAFFS 50
#define Graffitis "/Graffitis/%d.ini"

new sprayammount[MAX_PLAYERS];
new POBJECT[MAX_PLAYERS];
new POBJECTN[MAX_PLAYERS][96];
new POBJECTC[MAX_PLAYERS][24];
new Float:XYZ[MAX_PLAYERS][6];
new GRAVEH[MAX_PLAYERS];
new spraytimer[MAX_PLAYERS];
new spraytimerch[MAX_PLAYERS];
new sprayammountch[MAX_PLAYERS];
new isveh[MAX_PLAYERS] = 0;
new sprays = 0;
new graffmenup[MAX_PLAYERS] = 0;
new creator[MAX_PLAYERS][MAX_PLAYER_NAME];
new gammount;
new spraytimerx[MAX_PLAYERS];
new allowkf[MAX_PLAYERS];
new JACK_LABEL;
new jackmodel[4];
// 新版修车内测
new SprayT,
	SprayTBW,
	SprayTEN;


new MechSpray[MAX_PLAYERS];
new mechpick, mechcolor;
new Service[MAX_PLAYERS][3];
new ServiceOffer[MAX_PLAYERS][3];

new MechVehID;
new Float:MechCar[4];

new tempSerial[MAX_PLAYERS];
//tracer
enum UPDATE_P
{
 updating,
 updateon,
 timer,
}
new update[MAX_PLAYERS][UPDATE_P];
//end

fixencode_tires(tire1, tire2, tire3, tire4) return tire1 | (tire2 << 1) | (tire3 << 2) | (tire4 << 3);
fixencode_panels(flp, frp, rlp, rrp, windshield, front_bumper, rear_bumper)
{
    return flp | (frp << 4) | (rlp << 8) | (rrp << 12) | (windshield << 16) | (front_bumper << 20) | (rear_bumper << 24);
}
fixencode_doors(bonnet, boot, driver_door, passenger_door, behind_driver_door, behind_passenger_door)
{
    #pragma unused behind_driver_door
    #pragma unused behind_passenger_door
    return bonnet | (boot << 8) | (driver_door << 16) | (passenger_door << 24);
}
fixencode_lights(light1, light2, light3, light4)
{
    return light1 | (light2 << 1) | (light3 << 2) | (light4 << 3);
}

// 新版修车内测

#define DEATH_RESET     true
#define MAX_WEAPONS 55
#define MAX_BODY_PARTS 7

new BrokenLegs[MAX_PLAYERS];
new Damage[MAX_PLAYERS][MAX_BODY_PARTS][MAX_WEAPONS];


new Text:updateTD[MAX_PLAYERS];

new PlayerText3D:xb_flabel[MAX_PLAYERS];
new bool:xb_flabelexist[MAX_PLAYERS];
new bool:BreakinCD[MAX_PLAYERS];
new bool:EntranceCD[MAX_PLAYERS];
//自拍
new HouseScanMission[MAX_PLAYERS];
new system_findcar[MAX_PLAYERS];
new takingselfie[MAX_PLAYERS];
new Float:Degree[MAX_PLAYERS];
const Float: szRadius = 1.4;
const Float: szSpeed  = 1.25;
const Float: szHeight = 1.0;
new Float:lX[MAX_PLAYERS];
new Float:lY[MAX_PLAYERS];
new Float:lZ[MAX_PLAYERS];
//
new PlayerCmdFrq[MAX_PLAYERS]; //Player Command Frequency
new AddictionCheck[MAX_PLAYERS];
new Nightclub[254];
new Prisonlounge[210];
new PrisonShower[127];

new xb_fobj[MAX_PLAYERS];

new LoggedIn[MAX_PLAYERS];

forward UpdateCmdFreq();
forward loadgraffs();
forward spraying(playerid);
forward sprayingch(playerid);
forward killgr(playerid);
forward creategraff(playerid);

new Float:BreakX[MAX_VEHICLES];
new Float:BreakY[MAX_VEHICLES];
new Float:BreakZ[MAX_VEHICLES];
new BreakInTimer[MAX_PLAYERS];
new IsBreakingIn[MAX_PLAYERS];
new IsBreaking[MAX_PLAYERS];
new BreakDownTimer[MAX_PLAYERS];

new Text3D:DeathReason[MAX_PLAYERS];

#define XB_TARGET_MAPICON 40
new bool:xb_cuttree[MAX_PLAYERS];
new bool:xb_woodinhand[MAX_PLAYERS];
enum SPRAYTAG_DATA
{
	_spObject,
	_spText[50],
	_spFontColor,
	_spBold,
	_spFontSize,
	_spFont[50],
	Float:_spPosX,
	Float:_spPosY,
	Float:_spPosZ,
	Float:_spPosRX,
	Float:_spPosRY,
	Float:_spPosRZ,
	_spVW,
	_spInt
}

new
	SprayTags[MAX_PLAYERS][MAX_PLAYERS_TAGS][SPRAYTAG_DATA],
	spraytag_object[MAX_PLAYERS],
	spraytag_timer[MAX_PLAYERS],
	spraytag_timer_left[MAX_PLAYERS],
	spraytag_find[MAX_PLAYERS],
	spraytag_slot[MAX_PLAYERS],
	spraytag_text[MAX_PLAYERS],
	spraytag_size[MAX_PLAYERS],
	spraytag_bold[MAX_PLAYERS],
	spraytag_color[MAX_PLAYERS],
	spraytag_font[MAX_PLAYERS],
	Float:spraytag_positions[MAX_PLAYERS][6]
;

new
    bool:OPRF_Processed[MAX_PLAYERS] = {false, ...};

new Iterator:iter_boomboxes<MAX_BOOMBOXES>;

new Limbo[MAX_PLAYERS];

new FPS;
new FPSTurned[MAX_PLAYERS];
new Text:CrossHair1;
new Text:CrossHair2;
new Text:CrossHair3;
new Text:CrossHair4;
//
new Flash[MAX_VEHICLES];
new FlashTime[MAX_VEHICLES];
//
/* ------ flash bang ----------- */

new Text:flashbangStage[5];
new FlashbangStage[MAX_PLAYERS];
new FlashbangSwayLevel[MAX_PLAYERS];

/* ------ MDC defines -------- */

new gWanted[MAX_PLAYERS char];
new gAntiRadar[MAX_PLAYERS char];
new gAntiRadarAuto[MAX_PLAYERS char];
new gAntiRadarCheck[MAX_PLAYERS];
new gAntiRadarBeep[MAX_PLAYERS char];
new gDashCam[MAX_PLAYERS char];
new gDashCamAuto[MAX_PLAYERS char];
new gDashCamCheck[MAX_PLAYERS];
new gIsInMDC[MAX_PLAYERS char];
new Text:BloodDraw[3];
new Text:WoundDraw[2];
new Text:AntiRadar[2];
new Text:DashCam[2],
	PlayerText:pDashCam[MAX_PLAYERS];
new Text:MDC[12],
	PlayerText:mdc_Close[MAX_PLAYERS],
	PlayerText:mdc_Players[MAX_PLAYERS],
	PlayerText:mdc_Vehicles[MAX_PLAYERS],
	PlayerText:mdc_Preview[MAX_PLAYERS],
	PlayerText:mdc_Info[MAX_PLAYERS],
	PlayerText:mdc_Main[MAX_PLAYERS],
	PlayerText:mdc_DashCamMenu[MAX_PLAYERS];
	
new hour1, minute1;
new timestr[16];
new day1, month1, year1;
new datestr[16];
	
new DrugTime[MAX_PLAYERS];
new WeedTime[MAX_PLAYERS];
new CocaineTime[MAX_PLAYERS];
new HeroinTime[MAX_PLAYERS];
new EcstasyTime[MAX_PLAYERS];
new CrackTime[MAX_PLAYERS];

new RecentlyFired[MAX_PLAYERS];
/* ---- MDC LETTERS ------ */

static const gSAZones[][SAZONE_MAIN] =
{
	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Manhattan St",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Manhattan St",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Manhattan St",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Manhattan St",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Manhattan St",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Manhattan St",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Staples Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Staples Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Angeles",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Angeles",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Angeles",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Angeles",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Angeles",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Angeles",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Angeles",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Angeles",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Angeles",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"Hermosa Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"Hermosa Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"Hermosa Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"Hermosa Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Angeles",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Angeles",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Angeles",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Angeles",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Angeles",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Angeles",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Angeles",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Camino",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Camino",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Compton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Compton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Elysian Park St",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Elysian Park St",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Elysian Park St",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Inglewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Inglewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Inglewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Inglewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Inglewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Inglewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Molino St",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Molino St",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Molino St",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Molino St",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Molino St",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Molino St",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Santa Fe Ave",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Santa Fe Ave",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Santa Fe Ave",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Santa Fe Ave",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Santa Fe Ave",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Santa Fe Ave",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Santa Fe Ave",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Vegas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Vegas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Vegas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Vegas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Tokyo",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Tokyo",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"San Pedro St",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"San Pedro St",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"Los Angeles International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Los Angeles International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"Los Angeles International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"Los Angeles International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Los Angeles International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"Los Angeles International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Washington Blvd",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Washington Blvd",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Washington Blvd",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Washington Blvd",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Los Angeles Mart",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"CESAR E. CHAVEZ AVE",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"CESAR E. CHAVEZ AVE",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"CESAR E. CHAVEZ AVE",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"CESAR E. CHAVEZ AVE",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"CESAR E. CHAVEZ AVE",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"CESAR E. CHAVEZ AVE",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"CESAR E. CHAVEZ AVE",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"CESAR E. CHAVEZ AVE",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"CESAR E. CHAVEZ AVE",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"CESAR E. CHAVEZ AVE",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"CESAR E. CHAVEZ AVE",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"CESAR E. CHAVEZ AVE",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"CESAR E. CHAVEZ AVE",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"CESAR E. CHAVEZ AVE",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Spring",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Hermosa Ave",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Hermosa Ave",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Hermosa Ave",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Hermosa Ave",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Hermosa Ave",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Hermosa Ave",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Hermosa Ave",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Hermosa Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Hermosa Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Hermosa Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Vegas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Long Beach",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Industrial Estate",  {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Hollywood",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Hollywood",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Hollywood",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Hollywood",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Hollywood",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Hollywood",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Hollywood",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Hollywood",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Hollywood",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Hollywood",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo Rd",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo Rd",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo Rd",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo Rd",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo Rd",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo Rd",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo Rd",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo Rd",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo Rd",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo Rd",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo Rd",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo Rd",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"California Plaza",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Monica Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Monica Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple St",                  {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple St",                  {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple St",                  {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple St",                  {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple St",                  {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple St",                  {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"The Four Dragons Casino",     {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Union Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Sunset Blvd",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Sunset Blvd",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Sunset Blvd",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Sunset Blvd",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Venice Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Venice Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Venice Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Venice Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Venice Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Santa Monica Blvd",           {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Santa Monica Blvd",           {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Santa Monica Blvd",           {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Santa Monica Blvd",           {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Pico Blvd",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Pico Blvd",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Pico Blvd",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Pico Blvd",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Pico Blvd",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Pico Blvd",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Pico Blvd",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	
	// Main Zones
	{"Los Angeles",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Vegas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Francisco",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

/*enum SAZONE_MAINpTicket
{
	SAZONE_NAME[MAX_ZONE_NAME],
	Float:SAZONE_AREA[6]
};*/

//==============================================================================

/* --- Variables & Arrays --- */

enum graffInfo
{
	graffcreator[MAX_PLAYER_NAME],graffname[96],Float:Xpos,Float:Ypos,Float:Zpos,Float:XYpos,Float:YYpos,Float:ZYpos,OBJECTID
}
new gInfo[MAXGRAFFS][graffInfo];

new
	Text:FlashBang,
 	Lotterynumbers[4],
	sqlHandle,
    countdownTimer,
	NotMoving[MAX_PLAYERS],
	WeaponID[MAX_PLAYERS],
	CheckCrouch[MAX_PLAYERS],
	Ammo[MAX_PLAYERS][48],
    antiBunnyHop = 1,
    actToggle = 1,
    doublepaycheck = 1,
	Float:gInterestRate = 0.01,
	Float:gIncomeTaxRate = 0.1,
	Float:gSavingsRate = 0.010,
	gVar3000[3000],
	rentalCounter,
	seatbelt[MAX_PLAYERS],
	AJPickup[MAX_PLAYERS],
	helmet[MAX_PLAYERS],
	dmvdrive[MAX_PLAYERS],
	dealerExit[MAX_PLAYERS],
	businessCP[MAX_BUSINESSES],
	houseCP[MAX_HOUSES],
	renters[MAX_HOUSES][MAX_PLAYERS],
	Paused[MAX_PLAYERS],
	depRadio[MAX_PLAYERS],
	LastUpdate[MAX_PLAYERS],
	afkCounter[MAX_PLAYERS],
	serverrestart,
	ooc,
	gWeather,
	Barrier[14],
	barriers = 1,
	JumpCounter[MAX_PLAYERS],
	weaponAttached[MAX_PLAYERS],
	trainID,
	trainCount,
	skinData[MAX_PLAYERS][300],
	currentVehicleComponent[MAX_PLAYERS],
	surfVehicles[MAX_PLAYERS],
	addedModifications[MAX_PLAYERS][14],
	addedModificationsPrice[MAX_PLAYERS],
	tmpSerial[MAX_PLAYERS],
	sanInterviewRequest[3] = {-1, -1, 0};

/* --- Timer Variables --- */

new AcceptDeathTimer[MAX_PLAYERS],
	AcceptDeathHospitalTimer[MAX_PLAYERS],
	//ToggleTackleTimer[MAX_PLAYERS],
	InfoTimerVar[MAX_PLAYERS],
	StopTalkVar[MAX_PLAYERS],
	//AntiSurfTimerVar[MAX_PLAYERS],
	JumpTimerVar[MAX_PLAYERS],
	DMVTimerVar[MAX_PLAYERS],
	CameraTimerVar[MAX_PLAYERS],
	TripTimerVar[MAX_PLAYERS],
	ReportTimerVar[MAX_PLAYERS],
	HelpmeTimerVar[MAX_PLAYERS],
	FuelTimerVar[MAX_VEHICLES],
	AntiMoneyHackTimerVar[MAX_PLAYERS],
	AntiArmourHackTimerVar[MAX_PLAYERS],
	AntiHealthHackTimerVar[MAX_PLAYERS],
	AntiHealthHackTimerVar2[MAX_PLAYERS],
	AntiWeaponHackTimerVar[MAX_PLAYERS],
	AntiSpeedHackVehicleTimerVar[MAX_PLAYERS],
	AntiSpeedHackFootTimerVar[MAX_PLAYERS],
	fadeTimerVar[MAX_PLAYERS],
	AntiCBugTimerVar[MAX_PLAYERS],
	PaycheckTimerVar[MAX_PLAYERS],
	UnfreezeTimerVar[MAX_PLAYERS],
	LotteryTimerVar[MAX_PLAYERS];


new defaulttrees = 50;

/* --- Object Variables --- */

new diagnosisLazer;
new diagnosisStep;
new HospitalDoor1;
new HospitalDoor2;
new HospitalDoor1Sate;
new HospitalDoor2Sate;
new LAPDDoor1,
	LAPDDoor2,
	LAPDDoor3,
	LAPDDoor1State,
	LAPDDoor2State,
	LAPDDoor3State;
	
new FDReceptionDoorState,
	FDHallwayDoorState,
	FDCellsDoorState,
	prisonBarrier,
	prisonBarrierState,
	prisonGate1,
	prisonGate2,
	prisonGateState,
	sanGates[2],
	sanGatesStatus[2];

new LAPDBarrier;
new LAPDGate;
new LAPDGate2;
new FDGateNorth;
new FDGateSouth;
new LAPDGateStatus;
new SwatGateStatus;
new SwatGate;
new AirportGateStatus;
new AirportGate;
new ImpoundGateStatus;
new ImpoundGate;
new SFStatus;
new SFGate;
new HsuiStatus;
new HsuiGate;
new FBIStatus;
new FBIGate;
new FDGateNorthStatus;
new FDGateSouthStatus;
new LAPDBarrierStatus;
new BarrierStatus[15];
new garage[5],
	garageState[5];

new FDdoor1;
new FDdoor2;
new FDdoor3;

/* --- 3D Text Labels --- */

new Text3D:spawncarlabel[MAX_VEHICLES];
new Text3D:BreakCarLB[MAX_VEHICLES];
/* --- Pickup Variables --- */

new RentalPickup;
new BankPickup;
new LAPDEntrance;
new Dealer_UpperPickup;
new Dealer_NormalPickup;
new EmploymentPickup;
new DMVPickup;
new PrisonPickup;
new GuardPickup;
new ApartmentPickup1AGP;
new ApartmentPickup1AI;
new ApartmentPickup2AI;
new WeaponWarehouse;
new AmmoWarehouse;
new DrugWarehouse;
new CokeWarehouse;
new InsuranceCompany;
new PrisonShowers;
new HardwareCompany;
new HeavyWarehouse;
new PrisonCells;
new DoC;
new DoC2;
new LAPDCP;
new LAPDLockerPickup;
new LAPDArmoury;
new LAPDCells;
new LSFDPickup;
new LSFDDutyPickup;
new HospitalPickupFront;
new HospitalPickupBack;
new sanNewsPickup,
	sanNewsDutyPickup,
	pizzaPickup,
	deliveryPickup;

new DoorNumber[MAX_PLAYERS];
/* --- Checkpoint Variables --- */
new
	HouseScanCP[MAX_PLAYERS],
	//Lotterystand[2],
	RentalCP,
	BankCP[5],
	BarrierCP[14],
	skinChangeCP[6],
	EmploymentCP,
	StoreCP,
	WarehouseCP,
	CocaineCP,
	MilitaryCP,
	HeavyCP,
	AmmoCP,
	TraphouseCP,
	ConvertCP,
	InsuranceCP,
	HardwareCP,
	BuylockCP,
	SerialCP,
	AmmunationCP[4],
	DMVCP,
	Hospital,
	LAPDArmouryCP,
	PrisonCP,
	AcademyCP,
	AcademyCP1,
	AcademyCP2,
	sanNewsAdvertCP;

/* --- Textdraw Variables --- */
new Text:Lottery[29];
new Text:TD_CC_Box = Text:INVALID_TEXT_DRAW;
new Text:TD_CC_Headline = Text:INVALID_TEXT_DRAW;
new Text:TD_CC_Info = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_CC_AgeValue = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_CC_GenderLeft = Text:INVALID_TEXT_DRAW;
new Text:TD_CC_GenderTitle = Text:INVALID_TEXT_DRAW;
new Text:TD_CC_OutfitRight = Text:INVALID_TEXT_DRAW;
new Text:TD_CC_OutfitTitle = Text:INVALID_TEXT_DRAW;
new Text:TD_CC_OutfitLeft = Text:INVALID_TEXT_DRAW;
new Text:TD_CC_AgeRight = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_CC_OutfitValue = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_CC_AgeTitle = Text:INVALID_TEXT_DRAW;
new Text:TD_CC_AgeLeft = Text:INVALID_TEXT_DRAW;
new Text:TD_CC_ArrivalLeft = Text:INVALID_TEXT_DRAW;
new Text:TD_CC_GenderRight = Text:INVALID_TEXT_DRAW;
new Text:TD_CC_ArrivalRight = Text:INVALID_TEXT_DRAW;
new Text:TD_CC_ArrivalTitle = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_CC_GenderValue = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_CC_ArrivalValue = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_CC_Spawn = Text:INVALID_TEXT_DRAW;
new Text:TD_CC_SpawnBox = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_JOB_FirstLine = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_JOB_SecondLine = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_Zone = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_AD_HeadBox = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_Mid_Info = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_Money_Update = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_AD_Price = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_AD_BoxTwo = Text:INVALID_TEXT_DRAW;
new Text:TD_AD_BoxOne = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_AD_CityZip = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_AD_Headline = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_AD_Taxes = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_AD_BoxThree = Text:INVALID_TEXT_DRAW;
new Text:TD_AD_Seller = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_AD_PriceValue = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_AD_TaxesValue = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_AD_SellerValue = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_AD_HousenumberStreet = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_P_Box = Text:INVALID_TEXT_DRAW;
new Text:TD_P_Time = Text:INVALID_TEXT_DRAW;
new Text:TD_P_Price = Text:INVALID_TEXT_DRAW;
new Text:TD_P_Headline = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_P_PriceValue = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_P_TimeValue = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_D_Box = Text:INVALID_TEXT_DRAW;
new Text:TD_M_Price = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_M_PriceValue = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_M_CompRight = Text:INVALID_TEXT_DRAW;
new Text:TD_M_CompLeft = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_M_Comp = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_M_Buy = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_M_Add = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_M_Leave = Text:INVALID_TEXT_DRAW;
new Text:TD_M_Vehicle = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_M_VehicleValue = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_M_Viewing = Text:INVALID_TEXT_DRAW;
new Text:TD_M_ViewingLeft = Text:INVALID_TEXT_DRAW;
new Text:TD_M_ViewingRight = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_Fader = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_D_Vehicle = Text:INVALID_TEXT_DRAW;
new Text:TD_D_Color1 = Text:INVALID_TEXT_DRAW;
new Text:TD_D_Color2 = Text:INVALID_TEXT_DRAW;
new Text:TD_D_Price = Text:INVALID_TEXT_DRAW;
new Text:TD_D_Name = Text:INVALID_TEXT_DRAW;
new Text:TD_D_Seats = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_D_SeatsValue = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_D_NameValue = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_D_PriceValue = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_D_Buy = Text:INVALID_TEXT_DRAW;
new Text:TD_D_Leave = Text:INVALID_TEXT_DRAW;
new Text:TD_D_VehicleLeft = Text:INVALID_TEXT_DRAW;
new Text:TD_D_Color1Left = Text:INVALID_TEXT_DRAW;
new Text:TD_D_Color2Left = Text:INVALID_TEXT_DRAW;
new Text:TD_D_Color2Right = Text:INVALID_TEXT_DRAW;
new Text:TD_D_Color1Right = Text:INVALID_TEXT_DRAW;
new Text:TD_D_VehicleRight = Text:INVALID_TEXT_DRAW;
new Text:TD_D_Cargo = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_D_CargoValue = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_D_Tank = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_D_TankValue = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_C_Box = Text:INVALID_TEXT_DRAW;
new Text:TD_C_Headline = Text:INVALID_TEXT_DRAW;
new Text:TD_C_Fare = Text:INVALID_TEXT_DRAW;
new Text:TD_C_Time = Text:INVALID_TEXT_DRAW;
new Text:TD_C_Payment = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_C_PaymentValue = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_C_TimeValue = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_C_FareValue = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_Bar_Top = Text:INVALID_TEXT_DRAW;
new Text:TD_Bar_Bottom = Text:INVALID_TEXT_DRAW;
new Text:TD_SC_BoxNext = Text:INVALID_TEXT_DRAW;
new Text:TD_SC_BoxBack = Text:INVALID_TEXT_DRAW;
new Text:TD_SC_Next = Text:INVALID_TEXT_DRAW;
new Text:TD_SC_Back = Text:INVALID_TEXT_DRAW;
new Text:TD_SC_BoxBuy = Text:INVALID_TEXT_DRAW;
new Text:TD_SC_Buy = Text:INVALID_TEXT_DRAW;
new Text:TD_SC_BoxCancel = Text:INVALID_TEXT_DRAW;
new Text:TD_SC_Cancel = Text:INVALID_TEXT_DRAW;
new Text:TD_SC_Select = Text:INVALID_TEXT_DRAW;
new Text:TD_Website = Text:INVALID_TEXT_DRAW;
new Text:TD_Spawn_Box = Text:INVALID_TEXT_DRAW;
new Text:TD_Spawn_Arrow_Left = Text:INVALID_TEXT_DRAW;
new Text:TD_Spawn_Arrow_Right = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_Spawn_String = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_SM_Box = Text:INVALID_TEXT_DRAW;
new Text:TD_SM_Vehiclename = Text:INVALID_TEXT_DRAW;
new Text:TD_SM_Speed = Text:INVALID_TEXT_DRAW;
new Text:TD_SM_Fuel = Text:INVALID_TEXT_DRAW;

new Text:TD_F_Box = Text:INVALID_TEXT_DRAW;
new Text:TD_F_Furniture = Text:INVALID_TEXT_DRAW;
new Text:TD_F_Woodsleft = Text:INVALID_TEXT_DRAW;
new Text:TD_F_Type = Text:INVALID_TEXT_DRAW;
new Text:TD_F_Type2 = Text:INVALID_TEXT_DRAW;
new Text:TD_F_Right = Text:INVALID_TEXT_DRAW;
new Text:TD_F_TypeRight = Text:INVALID_TEXT_DRAW;
new Text:TD_F_TypeLeft = Text:INVALID_TEXT_DRAW;
new Text:TD_F_Left = Text:INVALID_TEXT_DRAW;
new Text:TD_F_Leave = Text:INVALID_TEXT_DRAW;
new Text:TD_F_Buy = Text:INVALID_TEXT_DRAW;
new Text:TD_F_Woods = Text:INVALID_TEXT_DRAW;
new Text:TD_F_Name = Text:INVALID_TEXT_DRAW;
new Text:TD_F_Price = Text:INVALID_TEXT_DRAW;

new PlayerText:TD_PF_Woods = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_PF_Name = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_PF_Price = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_PF_Woodsleft = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_PF_Type = PlayerText:INVALID_TEXT_DRAW;
/*new Text:TD_T_Box = Text:INVALID_TEXT_DRAW;
new Text:TD_T_Headline = Text:INVALID_TEXT_DRAW;
new Text:TD_T_HeadBox = Text:INVALID_TEXT_DRAW;
new Text:TD_T_Info = Text:INVALID_TEXT_DRAW;
new Text:TD_T_Instruction = Text:INVALID_TEXT_DRAW;*/
new PlayerText:TD_SM_SBH = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_SM_SBH_Value = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_SM_Vehiclename_Value = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_SM_Speed_Value = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_SM_Fuel_Value = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_Ammu_Box = Text:INVALID_TEXT_DRAW;
new Text:TD_Ammu_Headline = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_Ammu_Weapon = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_LAPD_Box = Text:INVALID_TEXT_DRAW;
new Text:TD_LAPD_Uniform = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_LAPD_Skin = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_LAPD_Arrow_Right = Text:INVALID_TEXT_DRAW;
new Text:TD_LAPD_Choose = Text:INVALID_TEXT_DRAW;
new Text:TD_LAPD_Arrow_Left = Text:INVALID_TEXT_DRAW;
new Text:TD_DMV_Box = Text:INVALID_TEXT_DRAW;
new Text:TD_DMV_Headline = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_DMV_Text1 = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_DMV_Text2 = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_DMV_Text3 = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_Info_Box = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_Info_Value = PlayerText:INVALID_TEXT_DRAW;
new Text:TD_Info_Headbox = Text:INVALID_TEXT_DRAW;
new Text:TD_Info_Headline = Text:INVALID_TEXT_DRAW;
new Text:TD_Info_Icon = Text:INVALID_TEXT_DRAW;
new Text:TD_R_Truck = Text:INVALID_TEXT_DRAW;
new Text:TD_R_Gun = Text:INVALID_TEXT_DRAW;
new Text:TD_R_GunText = Text:INVALID_TEXT_DRAW;
new Text:TD_R_Hunger[4] = Text:INVALID_TEXT_DRAW;
new Text:TD_R_Thirst[4] = Text:INVALID_TEXT_DRAW;
new PlayerText:TD_R_TruckText = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_R_HungerText = PlayerText:INVALID_TEXT_DRAW;
new PlayerText:TD_R_ThirstText = PlayerText:INVALID_TEXT_DRAW;

/* --- Dialogs Defines --- */

#define DIALOG_LOGIN        		 	 2
#define DIALOG_HOUSE                 	 7
#define DIALOG_HOUSE_MONEY           	 10
#define DIALOG_HOUSE_WMONEY          	 11
#define DIALOG_HOUSE_RENTAL	         	 12
#define DIALOG_HOUSE_SETRENTAL	     	 13
#define DIALOG_HOUSE_SETRENTALFEE    	 14
#define DIALOG_HOUSE_RENTERS		 	 15
#define DIALOG_RENTAL_QUESTION       	 20
#define DIALOG_RENTAL_VEHICLE        	 21
#define DIALOG_RENTAL_SIGN	         	 22
#define DIALOG_RENTAL_UNQUESTION     	 23
#define DIALOG_RENTAL_DURATION       	 24
#define DIALOG_HOUSE_RADIO           	 37
#define DIALOG_HOUSE_SELECTRADIO     	 38
#define DIALOG_HOUSE_RADIOLINK       	 39


#define DIALOG_SIREN                 	 41
#define DIALOG_BUSINESS              	 45
#define DIALOG_BUSINESS_MONEY        	 46
#define DIALOG_BUSINESS_WMONEY       	 47
#define DIALOG_VEHICLESPAWN          	 60
#define DIALOG_CAR_RADIO             	 61
#define DIALOG_CAR_SELECTRADIO       	 62
#define DIALOG_CAR_RADIOLINK         	 63
#define DIALOG_FILL                  	 67
#define DIALOG_GARBAGE               	 78
//#define DIALOG_LAPD_MDC              	 80
#define DIALOG_MDC_NAME              	 81
#define DIALOG_MDC_PLATE             	 82
#define DIALOG_WALKSTYLE_CHOOSE      	 90
#define DIALOG_CHATSTYLE_CHOOSE      	 91
#define DIALOG_MDC_INFO              	 95
#define DIALOG_STAFFLOGIN            	 97
#define DIALOG_CREATESTAFFLOGIN      	 98
#define DIALOG_PDROADBLOCK           	 102
#define DIALOG_LSFDDUTY              	 106

#define DIALOG_COMMANDS_ADMIN     	     				135
#define DIALOG_COMMANDS_ADMIN2   	     				136
#define DIALOG_COMMANDS_LADMIN       	 				137
#define DIALOG_COMMANDS_ADMIN_FINISH 	 				138
#define DIALOG_CLOSE                 	 				139
#define DIALOG_COMMANDS_HELP         	 				140
#define DIALOG_SETFACTION            	 				143
#define DIALOG_SETFACTION_ADMIN      	 				144
#define DIALOG_SETFACTION_LEADER     	 				145
#define DIALOG_SETFACTION_CREATE     	 				146
#define DIALOG_SETFACTION_SETLEADER  	 				147
#define DIALOG_SETFACTION_SETNAME    	 				148
#define DIALOG_SETFACTION_RANKLIMIT  	 				149
#define DIALOG_SETFACTION_DELETE         				150
#define DIALOG_SETFACTION_ADD_FV         				151
#define DIALOG_SETFACTION_DELETE_FV      				152
#define DIALOG_SETFACTION_PLATE_FV       				153
#define DIALOG_SETFACTION_INVITE         				154
#define DIALOG_SETFACTION_MOTD           				155
#define DIALOG_SETFACTION_RANKS          				156
#define DIALOG_SETFACTION_EDITRANK       				157
#define DIALOG_SETFACTION_MEMBERS        				158
#define DIALOG_SETFACTION_PROMOTE        				159
#define DIALOG_SETFACTION_DEMOTE         				160
#define DIALOG_SETFACTION_EDITMEMBER     				161
#define DIALOG_ITEMS_ATMCARD             				162
#define DIALOG_ITEMS_CELLPHONE           				163
#define DIALOG_ITEMS_DICE                				164
#define DIALOG_ITEMS_CARDDECK            				165
#define DIALOG_ITEMS_CLIP7               				166
#define DIALOG_ITEMS_CLIP30              				167
#define DIALOG_ITEMS_ROUNDS              				168
#define DIALOG_ITEMS_CIGARETTES         				169
#define DIALOG_ITEMS_LIGHTER             				170
#define DIALOG_ITEMS_FLASHLIGHT          				171
#define DIALOG_ITEMS_HAMMER              				172
#define DIALOG_ITEMS_SCREWDRIVER         				173
#define DIALOG_ITEMS_SPRUNK              				174
#define DIALOG_ITEMS_CELLPHONE_DIAL      				175
#define DIALOG_ITEMS_CELLPHONE_SMS       				176
#define DIALOG_ITEMS_CELLPHONE_SMS_SEND  				177
#define DIALOG_ITEMS_CLOTHES             				178
#define DIALOG_ITEMS_BASKETBALL         				179
#define DIALOG_ITEMS_GASCAN              				180
#define DIALOG_ITEMS_CAMERA	             				181
#define DIALOG_ITEMS_BRIEFCASE           				182
#define DIALOG_ITEMS_PIZZA_SLICE         				183
#define DIALOG_ITEMS_HAMBURGER           				184
#define DIALOG_ITEMS_PIZZA_BOX           				185
#define DIALOG_ITEMS_WEAPON		        				186
#define DIALOG_ITEMS_CELLPHONE_NOTES    				187
#define DIALOG_ITEMS_CELLPHONE_VIEW_NOTE 				188
#define DIALOG_ITEMS_CELLPHONE_NOTE_CREATE 				189
#define DIALOG_ITEMS_CELLPHONE_CONTACTS 				190
#define DIALOG_ITEMS_CELLPHONE_CONTACT_CREATE 			191
#define DIALOG_ITEMS_CELLPHONE_CONTACT_CREATE_NUMBER 	192
#define DIALOG_ITEMS_CELLPHONE_CONTACT_VIEW 			193
#define DIALOG_CHECKITEMS                               194
#define DIALOG_CHECKITEMS_OPTIONS                       195
#define DIALOG_CHECKITEMS_OPTIONS_VAR                   196
#define DIALOG_DEALERSHIP_BUY                           197
#define DIALOG_GOTO_LOCATION                            198
#define DIALOG_BUSINESSTAXES                            199
#define DIALOG_BUSINESS_PRICE                           200
#define DIALOG_BUSINESS_INTERIOR                        201
#define DIALOG_BUSINESSADRESS                           202
#define DIALOG_BUSINESSNUMBER                           203
#define DIALOG_BUSINESSZIP                              204
#define DIALOG_SETBUSINESS                              205
#define DIALOG_SETBUSINESS_NAME                         206
#define DIALOG_SETBUSINESS_STREET                       207
#define DIALOG_SETBUSINESS_HOUSENUMBER                  208
#define DIALOG_SETBUSINESS_ZIP		                    209
#define DIALOG_SETBUSINESS_INTERIOR                     210
#define DIALOG_SETBUSINESS_TAXES                        211
#define DIALOG_BUSINESS_RADIO                           212
#define DIALOG_BUSINESS_SELECTRADIO    					213
#define DIALOG_BUSINESS_RADIOLINK                       214
#define DIALOG_BUSINESS_FEE                             215
#define DIALOG_BUSINESS_NAME         	 				216
#define DIALOG_BANK                                     217
#define DIALOG_BANK_WITHDRAW         	 				218
#define DIALOG_BANK_DEPOSIT          	 				219
#define DIALOG_REG_LEAVE          	     				220
#define DIALOG_ITEMS                                    221
#define DIALOG_BANK_SAVINGS_WITHDRAW                    222
#define DIALOG_BANK_SAVINGS_DEPOSIT                     223
#define DIALOG_BARRIER               	 				224
#define DIALOG_ATM_WITHDRAW                             225
#define DIALOG_ATM                   	 				226
#define DIALOG_EMPLOY_CHOOSE         	 				227
#define DIALOG_ADVERTISEMENT        	 				228
#define DIALOG_SAN_ADVERTISEMENT                        229
#define DIALOG_CITATIONS                                230
#define DIALOG_CITATION_VIEW                            231
#define DIALOG_LAPD                             		232
#define DIALOG_PAYCITATIONS                             233
#define DIALOG_CITATION_PAY                             234
#define DIALOG_BADGE                 	 				235
#define DIALOG_LAPDDUTY              					236
#define DIALOG_TRUNK                                    237
#define DIALOG_TRUNK_STORE                              238
#define DIALOG_TRUNK_TAKE                               239
#define DIALOG_TRUNK_CHECK                              240
#define DIALOG_TRUNK_CHECK_ITEM                         241
#define DIALOG_HOUSE_PRICE      	 	 				242
#define DIALOG_HOUSE_INTERIOR   	 	 				243
#define DIALOG_HOUSEADRESS           	 				244
#define DIALOG_HOUSENUMBER           	 				245
#define DIALOG_HOUSEZIP              					246
#define DIALOG_HOUSETAXES              					247
#define DIALOG_SETHOUSE		                            248
#define DIALOG_SETHOUSE_STREET                       	249
#define DIALOG_SETHOUSE_HOUSENUMBER                  	250
#define DIALOG_SETHOUSE_ZIP		                    	251
#define DIALOG_SETHOUSE_INTERIOR                     	252
#define DIALOG_SETHOUSE_TAXES                        	253
#define DIALOG_SETHOUSE_PRICE                        	254
#define DIALOG_SETBUSINESS_PRICE                        255
#define DIALOG_FRISK                                    256
#define DIALOG_LOCKER                                   257
#define DIALOG_LOCKER_STORE                             258
#define DIALOG_LOCKER_TAKE                              259
#define DIALOG_ITEMS_RADIO                              260
#define DIALOG_ITEMS_HANDCUFFS                          261
#define DIALOG_ITEMS_RIOT_SHIELD                        262
#define DIALOG_GIVE_ITEMS                               263
#define DIALOG_SEARCH_LOCKER                            264
#define DIALOG_LAPD_ARMOURY                             265
#define DIALOG_LAPD_ARMOURY_OTHER                       266
#define DIALOG_LAPD_ARMOURY_RETURN                      267
#define DIALOG_CHANGEPASS                               268
#define DIALOG_CHANGEPASS_NEW							269
#define DIALOG_DMV                   	 				270
#define DIALOG_SANDUTY              					271
#define DIALOG_SETFACTION_SKINS                         272
#define DIALOG_SETFACTION_SKINS_NEW                     273
#define DIALOG_SETFACTION_SKINS_REMOVE                  274
#define DIALOG_ITEMS_TRASH_BAG                          275
#define DIALOG_ITEMS_BOX                                276
#define DIALOG_ITEMS_TASER                              277
#define DIALOG_BUSINESS_ITEMS                           278
#define DIALOG_ITEMS_GASCAN_USE                         279
#define DIALOG_ITEMS_GASCAN_REFILL                      280
#define DIALOG_REGISTER                                 281
#define DIALOG_BUSINESS_ITEMS_CLOTHES                   282
#define DIALOG_BUSINESS_ITEMS_CLOTHES_HAT               283
#define DIALOG_BUSINESS_ITEMS_CLOTHES_BANDANA           284
#define DIALOG_BUSINESS_ITEMS_CLOTHES_GLASSES           285
#define DIALOG_BUSINESS_ITEMS_CLOTHES_WATCHES           286
#define DIALOG_LAPD_CHARGE                              287
#define DIALOG_FACTION_DUTY                             288
#define DIALOG_ITEMS_BOOMBOX                            289
#define DIALOG_BOOMBOX                                  290
#define DIALOG_BOOMBOX_SELECTRADIO                      291
#define DIALOG_BOOMBOX_RADIOLINK                        292
#define DIALOG_CK                                       293
#define DIALOG_SETBUSINESS_OWNER                        294
#define DIALOG_SETHOUSE_OWNER                           295

#define DIALOG_TRAPHOUSE                                296
#define DIALOG_DRUGHOUSE                                297

#define DIALOG_WARRANTS                                 300

#define DIALOG_HOUSE_DRUGS                              301
#define DIALOG_HOUSE_DEPOSIT_DRUGS                      302
#define DIALOG_HOUSE_WITHDRAW_DRUGS                     303

#define DIALOG_HOUSE_DEPOSIT_WEED                       304
#define DIALOG_HOUSE_DEPOSIT_COCAINE                    305
#define DIALOG_HOUSE_DEPOSIT_ECSTASY                    306
#define DIALOG_HOUSE_DEPOSIT_CRACK                      307
#define DIALOG_HOUSE_DEPOSIT_HEROIN                     308

#define DIALOG_HOUSE_WITHDRAW_WEED                      309
#define DIALOG_HOUSE_WITHDRAW_COCAINE                   310
#define DIALOG_HOUSE_WITHDRAW_ECSTASY                   311
#define DIALOG_HOUSE_WITHDRAW_CRACK                     312
#define DIALOG_HOUSE_WITHDRAW_HEROIN                    313

#define DIALOG_WARRANTS_EDIT                            314
#define DIALOG_CITATIONS_PD                             315
#define DIALOG_WARRANTS_CHA                             316
#define DIALOG_WARRANTS_DEL                             317
#define DIALOG_FACTIONS_VIEW 							318

#define DIALOG_HOUSE_ALARM_ACESS_ON                     319
#define	DIALOG_HOUSE_ALARM_ACESS_OFF                    320
#define DIALOG_HOUSE_ALARM_CPASS                        321
#define DIALOG_HOUSE_ALARM_NPASS                        322
#define DIALOG_HOUSE_ALARM_ACESS_SHUT                   323
#define DIALOG_HOUSE_ALARM                          	324
#define DIALOG_PDSELECT                                 325

#define DIALOG_BUY_HEROIN                               963

#define DIALOG_GARBAGE_INSTRUCTIONS 					964
#define DIALOG_ADMIN_GUIDE 								965
#define DIALOG_SHOW_LOCATIONS 							966
#define DIALOG_LOCATIONS                                967
#define DIALOG_SETFREQ                                  968

#define DIALOG_PRISON                                   969
#define DIALOG_LOCATE_PHONE                             970
#define DIALOG_HARDWARE                                 971
#define DIALOG_BUY_LOCK                                 972
#define DIALOG_LOCATE_SUSPECT                           8622

#define DIALOG_SCAN_WARRANT                             973
#define DIALOG_SCAN_TICKET                              974
#define	DIALOG_SCAN_STREET	                            975
#define	DIALOG_SCAN_DOOR	                            976
#define	DIALOG_PLATE_VIEW                               977
#define DIALOG_NAME_VIEW                                978
#define DIALOG_SCAN_PLATE                               979
#define DIALOG_SCAN_NAME                                980
#define DIALOG_LAPD_MDC                                 981

#define DIALOG_FACTORY_STORE                            982
#define DIALOG_CRACK                                    983
#define DIALOG_SERIAL                                   984
#define DIALOG_GUNSHOP                                  985
#define DIALOG_LAPD_ARMOURY_SIDE                        986
#define DIALOG_LAPD_ARMOURY_HEAVY                       987
#define DIALOG_LAPD_OBJECTS	                            988
#define DIALOG_LAPD_MENU	                            989
#define DIALOG_WEAPONS_HEAVY	                        990
#define DIALOG_WEAPONS_MILITARY                         991
#define DIALOG_BUY_ECSTASY                              992
#define DIALOG_BUY_COCAINE                              993
#define DIALOG_COCAINE                                  994
#define DIALOG_LOAN                                     995
#define DIALOG_INSURANCE                                996
#define DIALOG_CONVERT                             		997
#define DIALOG_WEAPONS_AMMO                             998
#define DIALOG_WEAPONS_FACTION         	 				999

#define DIALOG_LOTTERY 									1000
#define DIALOG_LOTTERY2 								1001
#define DIALOG_MSGG 								1002

#define DIALOG_BUY_PARACHUTE 4107
#define DIALOG_BET_COW 4108
#define DIALOG_RENTAL_QUESTIONEX       	 4109
#define DIALOG_RENTAL_VEHICLEEX           4110
#define DIALOG_RENTAL_SIGNEX               4111
#define DIALOG_MOUNTIANFOOD 4112
#define DIALOG_HOSPITAL_HEAL 4113
#define DIALOG_REQUEST_TAKE 4114
#define DIALOG_CORPSE 4115
/* --- Color Defines --- */

#define COLOR_CYAN                  0x80FFFFFF
#define COLOR_TAN   				0xFFDBA07D
#define COLOR_CONNECT				0xFF969696
#define COLOR_MANAGEMENT            0xFF4853A4
#define COLOR_SENIORGREEN           0xFF009F00
#define COLOR_BRIGHTGREEN			0x0CF710FF
#define COLOR_LIGHTGREEN    		0x80A05CFF
#define COLOR_WHITE             	0xFFFFFFFF
#define COLOR_LIGHTRED          	0xFF6347FF
#define COLOR_GOLD              	0xD7BD52FF
#define COLOR_PINK		        	0xBEA1D3FF
#define COLOR_GREY              	0xB5B5B5FF
#define COLOR_FADE1 				0xE6E6E6E6
#define COLOR_FADE2 				0xC8C8C8C8
#define COLOR_FADE3 				0xAAAAAAAA
#define COLOR_FADE4 				0x8C8C8C8C
#define COLOR_FADE5 				0x6E6E6E6E
#define COLOR_BLUE                  0x7E7EFCFF
#define COLOR_FACTIONGREEN          0x7BDDA5FF
#define COLOR_YELLOW                0xF0F000FF
#define COLOR_DARKYELLOW            0xE5C43EFF
#define COLOR_DEATHRED              0xAA3333AA
#define COLOR_OOC                   0xA9C4E4FF
#define COLOR_ADVERT                0x00D900FF
#define COLOR_CHAT                  0x2D8289FF
#define COLOR_COPBLUE               0x9291E7FF
#define COLOR_EMTRED                0xE27979FF
#define COLOR_ORANGE                0xE2A31DFF
#define COLOR_MODERATORS            0x2587CEFF
#define COLOR_LEADS		            0xAA0000FF
#define COLOR_ADMINS                0x009900FF
#define COLOR_MODS                  0x6f1919FF
#define COLOR_OLD_RADIO             0xF9F57DFF
#define COLOR_LIGHTBLUE 			0x33CCFFAA
#define COLOR_GREENISHGOLD 			0xCCFFDD56
#define COLOR_BLUEGREEN 			0x46BBAA00
#define COLOR_GREEN					0x33AA33AA
#define COLOR_RADIO 				0xFFFFCCAA
#define COLOR_YELLOW2               0xF5DEB3FF

/* --- Whirlpool Native --- */

native WP_Hash(buffer[], len, const str[]);

/* --- IsValidVehicle(vehicleid) --- */
native IsValidVehicle(vehicleid);

/* --- Vehicle Types --- */

#define VEHICLE_ADMIN           1
#define VEHICLE_OWNED           3
#define VEHICLE_DMV             4
#define VEHICLE_JOB             5

/* --- IDX Types --- */

#define IDX_STD_ITEM            0
#define IDX_HAT_ITEM            1
#define IDX_GLASSES_ITEM        2
#define IDX_BANDANA_ITEM        3
#define IDX_WATCH_ITEM          4
#define IDX_CELLPHONE           5
#define IDX_LEFT_ARM_ITEM       6
#define IDX_HELMET              7
#define IDX_VEST                8
#define IDX_BADGE_ITEM          9

/* --- Item Types --- */

#define ITEM_STD                1
#define ITEM_CLOTHING           2
#define ITEM_WEAPON             3
#define ITEM_LAPD               4

/* --- Enumerations --- */

enum serverEnum
{
	maskID,
	DroppedItem,
	plateNumber,
	plateLetter1,
	plateLetter2,
	plateLetter3,
	phone
}
new ServerSettings[serverEnum];

enum TentEnum
{
	Float:tPos[3],
	tProcess,
	bool:tIsBuilt,
	tTimer,
	tObject,
	Text3D:tLebal
}
new TentInfo[MAX_TENTS][TentEnum];

enum playerEnum
{
	pName[MAX_PLAYER_NAME],
	pPassword[129],
	pSalt[64],
	pIP[16],
	pGender,
	pSkin,
	pWalkstyle,
	pChatstyle,
	pAdminlevel,
	pMoney,
	pAge,
	pRentHouse,
	Float:pX,
	Float:pY,
	Float:pZ,
	Float:pA,
	pInt,
	pVW,
	pScore,
	pFaction,
	pRank,
	pDriveLic,
	pBank,
	Float:pHealth,
	pAJCPs,
	pWeaponLic,
	pFish,
	pJob,
	pModLevel,
	pPaycheck,
	pFine,
	pJobTime,
	pPayTimer,
	pStaffPassword[129],
	pRadio,
	pBadge,
	Float:pDisX,
	Float:pDisY,
	Float:pDisZ,
	Float:pDisA,
	pDisInt,
	pDisVW,
	pTrainticket,
	pTaxiBusy,
	pForumName[30],
	pItemIndex[11],
	pItemType[11],
	pItemVar[11],
	pItemID[11],
	Float:pItemX[11],
	Float:pItemY[11],
	Float:pItemZ[11],
	Float:pItemrX[11],
	Float:pItemrY[11],
	Float:pItemrZ[11],
	Float:pItemsX[11],
	Float:pItemsY[11],
	Float:pItemsZ[11],
	Text3D:pMask3D,
	pSavings,
	pAllowFalseEnter,
	pSpaceName[MAX_PLAYER_NAME],
	pAirplaneLic,
	pTaxiLic,
	Float:pAdminJailX,
	Float:pAdminJailY,
	Float:pAdminJailZ,
	pBoombox,
	pNamechanges,
	pWeed,
	pCocaine,
	pEcstasy,
	pCrack,
	pHeroin,
	pWeedAddiction,
	pCocaineAddiction,
	pEcstasyAddiction,
	pCrackAddiction,
	pHeroinAddiction,
	pWeedSeeds,
	pOpiumSeeds,
	pFertilizer,
	pRawOpium,
	pCuffed,
	pSearchID,
	pCarID,
	pDonateRank,
	pDonateYear,
	pDonateMonth,
	pDonateDay,
	pHadPayday,
	bool:pMayLotto,
	PNumbers[3],
	PlayerText:LotteryNumbersTD,
	pTicket,
	pCarBomb,
	pInHouseID,
	bool:pIsHousingInfo,
	bool:peeking,
	Float:PeekingAngel,
	pScrapWait,
	pMasked,
	pMaskID,
	pBakingSoda,
	pLoaned,
	pLoanCash,
	pPrisonTime,
	pPrisoned,
	pMask,
	pSWAT,
	pFreq,
	pToolKit,
	pSwatCooldown,
	pTentID,
	pTentTimerVar,
	pTentTimer,
	pTentProcess,
	pShowtheway_ID,
	pAdminGuide,
	Text:pHitmark,
	pLocations,
	pActivated,
	pSTagPerm,
	pWoodmat,
	pHunger,
	pThirst,
	pCold,
	pCancer,
	pColdVar,
	pCancerVar,
	pIsHospital,
	pPDet,
	pPDMask,
	pSidejob
}
new PlayerInfo[MAX_PLAYERS][playerEnum];

new Text3D:veicolo_callsign_testo[MAX_VEHICLES];
new veicolo_callsign_status[MAX_VEHICLES];
//==============================================================================
enum cInfo
{
	Float:camPosLookX,
	Float:camPosLookY,
	Float:camPosLookZ
}
new CameraInfo[MAX_PLAYERS][cInfo];
//==============================================================================
enum shellInfo
{
	shellDropped,
    shellPlaced,
    shellTime,
    Text3D:ShellCasing,
	Float:shellX,
	Float:shellY,
	Float:shellZ,
	shellWorld,
	shellSerial
};
new ShellInfo[MAX_SHELLS][shellInfo];
//==============================================================================
enum weedInfo
{
    weedPlanted,
    weedTime,
    weedObject,
	Float:weedX,
	Float:weedY,
	Float:weedZ,
	weedWorld,
	weedName[128]
};
new WeedInfo[MAX_WEED][weedInfo];
//==============================================================================
enum opiumInfo
{
    opiumPlanted,
    opiumTime,
    opiumObject,
	Float:opiumX,
	Float:opiumY,
	Float:opiumZ,
	opiumWorld,
	opiumName[128]
};
new OpiumInfo[MAX_OPIUM][opiumInfo];
//==============================================================================
// end

enum vehicleEnum
{
	vOwner[MAX_PLAYER_NAME],
	Float:vX,
	Float:vY,
	Float:vZ,
	Float:vA,
	vType,
	vPlate[10],
	vWindows,
	vFuel,
	vColor1,
	vColor2,
	vFaction,
	vKey,
	vRadio[200],
	vTM,
	vTMPayment,
	vTMTime,
	vTMCounter,
	Float:vHealth,
	vAvoidUpdate,
    vHoodPopped,
    vFVID,
    vRented,
    vID,
    vModifications[24],
    vSiren,
    vPizzas,
    vTrashbags,
    vBoxes,
    vRespawn,
    vPaintjob,
    vBomb,
    vInsurance,
    vScrapped,
    vLockType,
    vWood,
	bool:vIsBreak,
	vDamages
}
new VehicleInfo[MAX_VEHICLES][vehicleEnum];

enum houseEnum {
	hID,
	hOwner[MAX_PLAYER_NAME],
	Float:hX,
	Float:hY,
	Float:hZ,
	hInt,
 	hPrice,
 	hMoney,
 	hRentalFee,
 	hLocked,
 	hRadio[200],
 	hStreet[40],
 	hHousenumber,
 	hZip,
 	hTaxes,
 	hWeed,
 	hCocaine,
 	hEcstasy,
 	hCrack,
 	hHeroin,
 	hAlarm,
 	bool:hActivatedHalarm,
 	hAlarmPassword[10],
 	bool:hYellingAlarm
}
new HouseInfo[MAX_HOUSES][houseEnum];

enum boomboxEnum {
	boomOwner[MAX_PLAYER_NAME],
	boomItemType,
	Float:boomX,
	Float:boomY,
	Float:boomZ,
	boomItemID,
	boomItemVar,
	boomItemIdx,
	boomObjID,
	boomRadio[200]
}
new boomboxes[MAX_BOOMBOXES][boomboxEnum];

enum spawnLocEnum {
	spawnName[15],
	Float:spawnX,
	Float:spawnY,
	Float:spawnZ,
	Float:spawnA
}

new spawnLocations[][spawnLocEnum] = {
	{"Airport", 1685.6084, -2241.3220, 13.5469, 179.4228},
	{"Train Station", 1742.8090, -1859.7273, 13.4141, 0.0000},
	{"Santa Maria", 385.3991, -1804.6035, 7.8299, 46.9187},
	{"Market", 823.6663, -1335.1587, 13.5469, 0.3714}
};

enum E_SHOT_INFO
{
	 Chest,
	 Crotch,
	 LArm,
	 RArm,
	 LLeg,
	 RLeg,
	 Head,
	 Misc
}
new sInfo[MAX_PLAYERS][E_SHOT_INFO];

enum businessEnum {
	bID,
	Float:bX,
	Float:bY,
	Float:bZ,
	bPrice,
	bInt,
	bMoney,
	bLocked,
	bOwner[MAX_PLAYER_NAME],
	bName[20],
	bRadio[200],
	bFee,
	bStreet[40],
	bHousenumber,
	bBusinesszip,
	bTaxes,
	bFaction,
	bGoods,
}
new BusinessInfo[MAX_BUSINESSES][businessEnum];

enum intDataEnum {
	intVal,
	Float:intX,
	Float:intY,
	Float:intZ,
	Float:intA,
	intName[50],
	businessIntCP
}

enum spikeInfo {
	spikeCreated,
    Float:spikeX,
    Float:spikeY,
    Float:spikeZ,
    spikeObject,
}
new SpikeInfo[MAX_SPIKESTRIPS][spikeInfo];

enum factionEnum {
	fID,
	fLeaderrank,
	fGovern,
	fName[40],
	fmotd[200],
	fChat,
	fRights_Weapons,
	fRights_Narcotics,
	fRights_Scrap
}
new FactionInfo[MAX_FACTIONS][factionEnum];
new FactionRanks[MAX_FACTIONS][30][30];

enum componentEnum {
	comName[50],
	comPermission,
	comPrice,
	comSlot
}

enum policelineEnum {
	objectID
}
new PoliceLines[MAX_POLICELINES][policelineEnum];

enum PDRoadblockEnum {
	objectID
}
new eRoadblocks[MAX_ROADBLOCKS][PDRoadblockEnum];

enum FDRoadblockEnum {
	objectID
}
new eFDRoadblocks[MAX_ROADBLOCKS][FDRoadblockEnum];

enum ticketEnum {
	tID,
	tReason[120],
	tCharge,
	tDate[30],
	tTimestamp,
	tIssuer[MAX_PLAYER_NAME],
	tAgency[30]
}
new TicketInfo[MAX_PLAYERS][MAX_TICKETS][ticketEnum];

enum warrantEnum
{
	wID,
	wReason[120],
	wDate[30],
	wTimestamp,
	wIssuer[MAX_PLAYER_NAME],
	wAgency[30]
}
new WarrantInfo[MAX_PLAYERS][MAX_WARRANTS][warrantEnum];

enum fadeEnum {
	fID,
	fInt,
	Float:fadeX,
	Float:fadeY,
	Float:fadeZ,
	fVW,
	fUnfreeze,
	Float:fAngle,
	fR,
	fG,
	fB,
	fA
}
new fade[MAX_PLAYERS][fadeEnum];

enum rentalEnum {
	rVehicleID,
	rVehiclePrice,
	rVehicleLicense
}

enum radioEnum {
	rName[40],
	rLink[200]
}

enum idleEnum {
	Float:idleX,
	Float:idleY,
	Float:idleZ,
	minCounter,
	idleMode,
	unset
}
new IdleInfo[MAX_PLAYERS][idleEnum];



enum itemEnum
{
	itemName[40],
	objID,
	weight,
	storable,
	Float:attX,
	Float:attY,
	Float:attZ,
	Float:attRotX,
	Float:attRotY,
	Float:attRotZ,
	Float:adjZ,
	Float:adjRotX,
	Float:adjRotY,
	Float:adjRotZ,
	bone,
	iIdx,
	itemType,
	weaponID,
	lowerCase,
	Float:volume,
	PDReturnable,
	itemPrice,
	itemClothingStore
}

/*enum customweaponsEnum
{
	itemName[40],
	objID,
	weight,
	storable,
	Float:attX,
	Float:attY,
	Float:attZ,
	Float:attRotX,
	Float:attRotY,
	Float:attRotZ,
	Float:adjZ,
	Float:adjRotX,
	Float:adjRotY,
	Float:adjRotZ,
	bone,
	iIdx,
	itemType,
	weaponID,
	lowerCase,
	Float:volume,
	PDReturnable,
	itemPrice,
	itemClothingStore
}*/

enum LocEnum {
	locName[60],
	Float:locX,
	Float:locY,
	Float:locZ
}

enum adminLocEnum {
	locName[60],
	locInt,
	locVW,
	Float:locX,
	Float:locY,
	Float:locZ
}

enum DroppedItemsEnum {
	Float:iX,
	Float:iY,
	Float:iZ,
	iID,
	objID,
	Text3D:txt3D,
 	itemVar,
 	itemType,
 	itemInt,
 	itemVW,
 	itemIdx
}
new DroppedItems[MAX_DROPPED_ITEMS][DroppedItemsEnum];

enum IncomingCallsEnum {
	cCalledNumber,
	cCallingNumber,
	cCaller,
	cCalled,
	cFail
}
new IncomingCalls[MAX_CALLS][IncomingCallsEnum];

enum weaponEnum {
	itemType,
	reloadable,
	ammoType, /* 0: None, 1: Clip 7, 2: Clip 30, 3: Rounds, 4:  */
	ammoSize,
	reloadAnim,
	ammoTypeItem,
	wepDamage
}

enum vehicleDataEnum {
	typeName[30],
	seats,
	volume,
	typePrice,
	dealership,
	tank,
	blacklisted,
	licenseType
}

enum staticVehicleData {
	jModel,
	jType,
	Float:jX,
	Float:jY,
	Float:jZ,
	Float:jA,
	sColor1,
	sColor2,
	sPlate[10]
}

new randomColor1Picker[] = {0, 1, 2, 3, 4, 6, 7, 8};
new randomColor2Picker[] = {0, 1, 8, 24, 27};
new staticVehicles[][staticVehicleData] = {
	/*{403, VEHICLE_JOB, 2486.4744, -2122.6860, 14.1531, 359.8009, -1, -1, "DVA-172"},
	{403, VEHICLE_JOB, 2494.1289, -2122.7144, 14.1530, 0.4261, -1, -1, "DVB-172"},
	{403, VEHICLE_JOB, 2501.3804, -2122.8074, 14.1533, 359.7254, -1, -1, "DVC-172"},
	{440, VEHICLE_JOB, 2510.3376, -2124.3518, 13.6663, 359.6861, -1, -1, "DVD-172"},
	{440, VEHICLE_JOB, 2516.2419, -2124.3721, 13.6654, 359.8846, -1, -1, "DVE-172"},
	{440, VEHICLE_JOB, 2525.2095, -2124.4270, 13.6580, 0.3522, -1, -1, "DVF-172"},
	{456, VEHICLE_JOB, 2472.2939, -2124.3132, 13.7261, 270.1454, -1, -1, "DVG-172"},
	{456, VEHICLE_JOB, 2472.1843, -2115.2522, 13.7203, 270.6114, -1, -1, "DVH-172"},
	{499, VEHICLE_JOB, 2470.9238, -2109.3752, 13.5375, 270.4576, -1, -1, "DVI-172"},
	{499, VEHICLE_JOB, 2471.1416, -2131.7612, 13.5387, 269.9799, -1, -1, "DVJ-172"},
	{609, VEHICLE_JOB, 2470.7046, -2139.1357, 13.6141, 270.2487, -1, -1, "DVK-172"},
	{414, VEHICLE_JOB, 2445.8076, -2131.6748, 13.6406, 90.3273, -1, -1, "DVL-172"},
	{414, VEHICLE_JOB, 2445.7417, -2124.1768, 13.6406, 89.9621, -1, -1, "DVM-172"},
	{414, VEHICLE_JOB, 2445.9102, -2139.1128, 13.6406, 89.9737, -1, -1, "DVN-172"},
	{515, VEHICLE_JOB, 2444.2190, -2115.4333, 14.5705, 90.0536, -1, -1, "DVO-172"},
	{515, VEHICLE_JOB, 2444.1614, -2109.2219, 14.5677, 90.9093, -1, -1, "DVP-172"},
	{514, VEHICLE_JOB, 2443.6089, -2100.5559, 14.1316, 90.7244, -1, -1, "DVQ-172"},
	{422, VEHICLE_JOB, 2469.3982, -2078.9507, 13.5369, 179.4958, -1, -1, "DVR-172"},
	{422, VEHICLE_JOB, 2470.4463, -2069.8296, 13.5362, 271.2735, -1, -1, "DVS-172"},
	{482, VEHICLE_JOB, 2488.4185, -2079.0693, 13.6667, 180.2943, -1, -1, "DVT-172"},
	{482, VEHICLE_JOB, 2488.8196, -2069.8191, 13.6722, 269.6543, -1, -1, "DVU-172"},
	{422, VEHICLE_JOB, 2463.6211, -2078.6311, 13.5355, 179.6778, -1, -1, "DVV-172"},
	{422, VEHICLE_JOB, 2456.0486, -2078.6270, 13.5356, 179.7897, -1, -1, "DVW-172"},
	{422, VEHICLE_JOB, 2482.6782, -2079.0171, 13.5357, 179.8979, -1, -1, "DVX-172"},
	{422, VEHICLE_JOB, 2494.0234, -2079.4216, 13.5352, 179.7150, -1, -1, "DVY-172"},*/ // Until here: Trucker Job
	{482, VEHICLE_JOB,  2257.5503, -2458.8823, 13.6670, 89.7517, 28, 0, "DVN-172"},
	{482, VEHICLE_JOB,  2202.1648, -2509.4749, 13.6669, 359.2818, 28, 0, "DVO-172"},
	{482, VEHICLE_JOB,  2211.2773, -2532.7502, 13.6678, 269.4547, 28, 0, "DVP-172"},
	{482, VEHICLE_JOB,  2205.2375, -2572.2031, 13.6645, 269.3086, 28, 0, "DVQ-172"},
	{482, VEHICLE_JOB,  2211.4602, -2600.9058, 13.6684, 269.6934, 28, 0, "DVR-172"},
	{482, VEHICLE_JOB,  2259.6899, -2649.5010, 13.7104, 89.7358, 28, 0, "DVS-172"},
	{482, VEHICLE_JOB,  2216.4719, -2663.3186, 13.6724, 269.9016, 28, 0, "DVT-172"},
	{482, VEHICLE_JOB,  2325.1597, -2357.6064, 13.6691, 44.1838, 28, 0, "DVU-172"},
	{482, VEHICLE_JOB,  2349.8689, -2330.5347, 13.6623, 44.5903, 28, 0, "DVV-172"},
	{482, VEHICLE_JOB,  2416.1753, -2224.2593, 13.6640, 224.4642, 28, 0, "DVW-172"},
	{482, VEHICLE_JOB,  2433.2361, -2251.9478, 13.6619, 314.8424, 28, 0, "DVX-172"},
	{482, VEHICLE_JOB,  2413.6064, -2450.2070, 13.7434, 314.5681, 28, 0, "DVY-172"},
	{482, VEHICLE_JOB, 2470.2288, -2100.5457, 13.6670, 269.9446, 28, 0, "DVZ-172"}, // Until here: Delivery Job
	{448, VEHICLE_JOB, 2107.8191, -1784.1136, 12.9871, 359.6203, 3, 0, "DWA-172"},
	{448, VEHICLE_JOB, 2101.9739, -1784.1251, 12.9916, 358.8912, 3, 0, "DWB-172"},
	{448, VEHICLE_JOB, 2103.9458, -1784.1056, 12.9873, 359.0404, 3, 0, "DWC-172"},
	{448, VEHICLE_JOB, 2105.9026, -1784.1243, 12.9859, 0.1088, 3, 0, "DWD-172"},
	{448, VEHICLE_JOB, 2097.1152, -1799.0482, 12.9882, 91.2868, 3, 0, "DWE-172"},
	{448, VEHICLE_JOB, 2097.1152, -1797.2482, 12.9882, 91.2868, 3, 0, "DWF-172"},
	{448, VEHICLE_JOB, 2097.1152, -1794.4482, 12.9882, 91.2868, 3, 0, "DWG-172"},
	{448, VEHICLE_JOB, 2097.1152, -1792.6293, 12.9882, 91.2287, 3, 0, "DWH-172"}, // Until here: Pizza Deliverer
	{408, VEHICLE_JOB, 1766.5958, -2073.1929, 14.1616, 0.1295, 16, 0, "DWI-172"},
	{408, VEHICLE_JOB, 1772.8181, -2073.0403, 14.1500, 359.5162, 16, 0, "DWJ-172"},
	{408, VEHICLE_JOB, 1778.5417, -2072.9592, 14.1463, 359.6107, 16, 0, "DWK-172"},
	{408, VEHICLE_JOB, 1806.6097, -2023.9847, 14.1020, 180.3436, 16, 0, "DWL-172"},
	{408, VEHICLE_JOB, 1799.9742, -2023.9692, 14.0008, 181.2290, 16, 0, "DWM-172"},
	{408, VEHICLE_JOB, 1793.3512, -2023.9712, 14.0508, 179.5781, 16, 0, "DWN-172"},
	{408, VEHICLE_JOB, 1786.8062, -2024.0703, 14.0404, 180.5283, 16, 0, "DWO-172"}, // Until here: Garbage Collector
	{445, VEHICLE_DMV, 1328.1521, -1183.9875, 23.4531, 90.0233, -1, -1, "DWP-172"},
	{445, VEHICLE_DMV, 1328.1521, -1178.5292, 23.4557, 90.0233, -1, -1, "DWQ-172"},
	{445, VEHICLE_DMV, 1328.1521, -1173.062, 23.4557, 90.0233, -1, -1, "DWR-172"},
	{445, VEHICLE_DMV, 1328.1521, -1167.604, 23.4557, 90.0233, -1, -1, "DWS-172"},
	{445, VEHICLE_DMV, 1328.1521, 1328.1628,-1189.3026,23.4531, -1, -1, "DWR-172"},
	{445, VEHICLE_DMV, 1328.0687,-1162.4688,23.7031, 90.0233, -1, -1, "DWS-172"},
	{445, VEHICLE_DMV, 1328.5063,-1189.6631,23.3214, 91.5750, -1, -1, "DWS-172"},
	{487, VEHICLE_DMV, 1308.5972, -1195.7361, 65.5753, 0.4790, 9, 1, "DWT-172"}, // Until here: DMV
	{448, VEHICLE_JOB, 2109.7273, -1784.0940, 12.9858, 359.1429, 3, 0, "DWU-172"},
	{448, VEHICLE_JOB, 2111.7241, -1784.0741, 12.9860, 359.8218, 3, 0, "DWV-172"},
	{448, VEHICLE_JOB, 2113.6682, -1784.1019, 12.9861, 0.8158, 3, 0, "DWW-172"}, // Until here: Pizza Deliverer
	{482, VEHICLE_JOB, 2463.4878, -2614.4287, 13.7783, 272.1330, 28, 0, "DXA-172"},
	{482, VEHICLE_JOB, 2463.2532, -2609.4136, 13.7799, 272.1641, 28, 0, "DXB-172"},
	{482, VEHICLE_JOB, 2463.3120, -2603.8142, 13.7814, 269.0840, 28, 0, "DXC-172"},
	{482, VEHICLE_JOB, 2776.5378, -2469.9124, 13.7558, 89.6151, 28, 0, "DXD-172"},
	{482, VEHICLE_JOB, 2745.0356, -2450.0969, 13.7734, 269.8853, 28, 0, "DXE-172"},
	{482, VEHICLE_JOB, 2776.6101, -2431.8208, 13.7566, 89.3104, 28, 0, "DXF-172"},
	{482, VEHICLE_JOB, 2756.3391, -2379.1694, 13.7547, 178.9634, 28, 0, "DXG-172"},
	{482, VEHICLE_JOB, 2726.8281, -2416.5688, 13.7450, 268.8098, 28, 0, "DXH-172"}, // Until here: Delivery Job
	{408, VEHICLE_JOB, 1761.0383, -2072.8577, 14.1593, 0.2797, 16, 0, "DXI-172"},
	{408, VEHICLE_JOB, 1755.1335, -2072.8926, 14.1727, 359.8701, 16, 0, "DXJ-172"},
	{408, VEHICLE_JOB, 1749.8472, -2072.8210, 14.1826, 0.3884, 16, 0, "DXK-172"},
	{408, VEHICLE_JOB, 1745.0750, -2072.8381, 14.1737, 0.4774, 16, 0, "DXL-172"}
};

/* --- Prepared Arrays --- */

/*new vehicleData[][vehicleDataEnum] = {//老车价
	{"Landstalker", 4, 1200, 129000, 1, 75, 0, 1},
	{"Bravura", 2, 420, 46000, 1, 55, 0, 1},
	{"Buffalo", 2, 320, 220000, 1, 55, 0, 1},
	{"Linerunner", 2, 0, 300000, 0, 120, 0, 1},
	{"Perenniel", 4, 1400, 27000, 1, 50, 0, 1},
	{"Sentinel", 4, 500, 70000, 1, 60, 0, 1},
	{"Dumper", 1, 0, 70000, 0, 200, 0, 1},
	{"Firetruck", 2, 0, 200000, 0, 100, 0, 1},
	{"Trashmaster", 2, 0, 200000, 0, 100, 0, 1},
	{"Stretch", 4, 700, 210000, 1, 65, 0, 1},
	{"Manana", 2, 430, 22000, 1, 50, 0, 1},
	{"Infernus", 2, 150, 270000, 1, 45, 0, 1},
	{"Voodoo", 2, 530, 36000, 1, 45, 0, 1},
	{"Pony", 4, 5500, 60000, 1, 70, 0, 1},
	{"Mule", 2, 6500, 66000, 1, 80, 0, 1},
	{"Cheetah", 2, 150, 220000, 1, 55, 0, 1},
	{"Ambulance", 4, 6000, 140000, 0, 80, 0, 1},
	{"Leviathan", 2, 0, 400000, 0, 150, 0, 3},
	{"Moonbeam", 4, 950, 24000, 1, 70, 0, 1},
	{"Esperanto", 2, 430, 36000, 1, 55, 0, 1},
	{"Taxi", 4, 480, 7000, 1, 70, 0, 2},
	{"Washington", 4, 600, 64000, 1, 60, 0, 1},
	{"Bobcat", 2, 1500, 25000, 1, 70, 0, 1},
	{"Mr. Whoopee Van", 2, 0, 40000, 1, 70, 0, 1},
	{"BF Injection", 2, 0, 30000, 0, 30, 0, 1},
	{"Hunter", 1, 0, 500000, 0, 100, 1, 3},
	{"Premier", 4, 426, 82000, 1, 65, 0, 1},
	{"Enforcer", 4, 6500, 240000, 0, 70, 0, 1},
	{"Securicar", 2, 6500, 300000, 0, 80, 0, 1},
	{"Banshee", 2, 240, 190000, 1, 55, 0, 1},
	{"Predator", 1, 0, 160000, 0, 80, 0, 0},
	{"Bus", 4, 0, 50000, 0, 100, 0, 1},
	{"Rhino", 1, 0, 0, 0, 0, 1, 1},
	{"Barracks", 2, 9700, 200000, 0, 100, 0, 1},
	{"Hotknife", 2, 0, 170000, 0, 40, 0, 1},
	{"Trailer", 0, 0, 0, 0, 0, 1, 0},
	{"Previon", 2, 250, 26000, 1, 50, 0, 1},
	{"Coach", 8, 150, 1500000, 1, 100, 0, 1},
	{"Cabbie", 4, 500, 9000, 1, 70, 0, 2},
	{"Stallion", 2, 380, 92000, 1, 55, 0, 1},
	{"Rumpo", 4, 5700, 50000, 1, 70, 0, 1},
	{"RC Bandit", 0, 0, 0, 0, 0, 1, 0},
	{"Romero", 2, 1300, 40000, 1, 50, 0, 1},
	{"Packer", 2, 0, 200000, 0, 120, 0, 1},
	{"Monster", 2, 0, 100000, 0, 60, 0, 1},
	{"Admiral", 4, 480, 62000, 1, 50, 0, 1},
	{"Squalo", 1, 0, 0, 0, 0, 0, 0},
	{"Seasparrow", 2, 0, 0, 0, 0, 0, 3},
	{"Pizzaboy", 1, 50, 2000, 0, 6, 0, 1},
	{"Tram", 0, 0, 0, 0, 0, 1, 1},
	{"Trailer", 0, 0, 0, 0, 0, 1, 0},
	{"Turismo", 2, 230, 300000, 1, 55, 0, 1},
	{"Speeder", 1, 0, 0, 0, 0, 0, 0},
	{"Reefer", 1, 0, 0, 0, 0, 0, 0},
	{"Tropic", 1, 0, 0, 0, 0, 0, 0},
	{"Flatbed", 2, 8400, 200000, 0, 120, 0, 1},
	{"Yankee", 2, 9800, 100000, 0, 120, 0, 1},
	{"Caddy", 2, 0, 20000, 0, 25, 0, 1},
	{"Solair", 4, 500, 26000, 1, 50, 0, 1},
	{"Berkley's RC Van", 4, 6300, 36000, 1, 75, 0, 1},
	{"Skimmer", 2, 0, 0, 0, 0, 0, 3},
	{"PCJ-600", 2, 40, 12000, 1, 10, 0, 1},
	{"Faggio", 2, 50, 3000, 1, 6, 0, 1},
	{"Freeway", 2, 65, 7500, 1, 20, 0, 1},
	{"RC Baron", 0, 0, 0, 0, 0, 1, 0},
	{"RC Raider", 4, 0, 0, 0, 0, 1, 0},
	{"Glendale", 4, 700, 23500, 1, 50, 0, 1},
	{"Oceanic", 4, 700, 34000, 1, 55, 0, 1},
	{"Sanchez", 2, 40, 9000, 1, 7, 0, 1},
	{"Sparrow", 4, 0, 0, 0, 0, 0, 3},
	{"Patriot", 2, 350, 60000, 0, 80, 0, 1},
	{"Quad", 2, 50, 36200, 1, 6, 0, 1},
	{"Coastguard", 1, 0, 0, 0, 0, 0, 0},
	{"Dinghy", 2, 0, 0, 0, 0, 0, 0},
	{"Hermes", 2, 820, 48000, 1, 50, 0, 1},
	{"Sabre", 2, 480, 126000, 1, 50, 0, 1},
	{"Rustler", 2, 0, 0, 0, 0, 0, 3},
	{"ZR-350", 2, 480, 198000, 1, 55, 0, 1},
	{"Walton", 2, 1500, 24000, 1, 60, 0, 1},
	{"Regina", 4, 900, 22000, 1, 50, 0, 1},
	{"Comet", 2, 150, 129000, 1, 50, 0, 1},
	{"BMX", 1, 0, 1000, 1, 0, 0, 0},
	{"Burrito", 4, 5800, 80000, 1, 75, 0, 1},
	{"Camper", 4, 800, 49000, 1, 65, 0, 1},
	{"Marquis", 1, 0, 0, 0, 0, 0, 0},
	{"Baggage", 1, 0, 0, 0, 0, 0, 1},
	{"Dozer", 4, 0, 0, 0, 0, 0, 1},
	{"Maverick", 2, 0, 0, 0, 100, 0, 3},
	{"News Chopper", 2, 0, 0, 0, 0, 0, 3},
	{"Rancher", 2, 1400, 98000, 1, 80, 0, 1},
	{"FBI Rancher", 2, 1400, 62000, 0, 80, 0, 1},
	{"Virgo", 2, 520, 62000, 1, 60, 0, 1},
	{"Greenwood", 4, 480, 41000, 1, 60, 0, 1},
	{"Jetmax", 2, 0, 0, 0, 0, 0, 0},
	{"Hotring", 2, 0, 200000, 0, 40, 0, 1},
	{"Sandking", 2, 850, 240000, 0, 80, 0, 1},
	{"Blista Compact", 2, 300, 134000, 1, 50, 0, 1},
	{"Police Maverick", 4, 0, 0, 0, 100, 0, 3},
	{"Boxville", 4, 7100, 62000, 1, 75, 0, 1},
	{"Benson", 2, 6500, 60000, 1, 75, 0, 1},
	{"Mesa", 2, 480, 168000, 1, 75, 0, 1},
	{"RC Goblin", 2, 0, 0, 0, 0, 1, 0},
	{"Hotring Racer A", 2, 0, 200000, 0, 40, 0, 1},
	{"Hotring Racer B", 2, 0, 200000, 0, 40, 0, 1},
	{"Bloodring Banger", 2, 0, 120000, 0, 40, 0, 1},
	{"Rancher", 2, 1400, 98000, 0, 80, 0, 1},
	{"Super GT", 2, 320, 150000, 1, 50, 0, 1},
	{"Elegant", 4, 600, 62000, 1, 60, 0, 1},
	{"Journey", 2, 3600, 46000, 1, 75, 0, 1},
	{"Bike", 1, 0, 1000, 1, 0, 0, 0},
	{"Mountain Bike", 2, 0, 1200, 1, 0, 0, 0},
	{"Beagle", 1, 0, 0, 0, 0, 0, 3},
	{"Cropduster", 1, 0, 0, 0, 0, 0, 3},
	{"Stuntplane", 2, 0, 0, 0, 0, 0, 3},
	{"Tanker", 2, 0, 250000, 0, 120, 0, 1},
	{"RoadTrain", 4, 0, 250000, 0, 120, 0, 1},
	{"Nebula", 4, 520, 22000, 1, 50, 0, 1},
	{"Majestic", 2, 320, 62000, 1, 55, 0, 1},
	{"Buccaneer", 2, 450, 49000, 1, 55, 0, 1},
	{"Shamal", 1, 0, 0, 0, 0, 0, 3},
	{"Hydra", 2, 0, 0, 0, 0, 1, 3},
	{"FCR-900", 2, 40, 150000, 1, 12, 0, 1},
	{"NRG-500", 2, 20, 256666, 0, 12, 0, 1},
	{"HPV1000", 2, 50, 60000, 0, 20, 0, 1},
	{"Cement Truck", 2, 0, 150000, 0, 120, 0, 1},
	{"TowTruck", 2, 50, 6500, 1, 65, 0, 1},
	{"Fortune", 2, 200, 40000, 1, 50, 0, 1},
	{"Cadrona", 2, 380, 32000, 1, 50, 0, 1},
	{"FBI Truck", 4, 800, 45000, 0, 60, 0, 1},
	{"Willard", 4, 470, 75000, 1, 50, 0, 1},
	{"Forklift", 1, 0, 0, 0, 0, 0, 1},
	{"Tractor", 1, 0, 4750, 1, 50, 0, 1},
	{"Combine", 2, 0, 0, 0, 0, 0, 1},
	{"Feltzer", 2, 660, 120000, 1, 55, 0, 1},
	{"Remington", 2, 520, 80000, 1, 55, 0, 1},
	{"Slamvan", 2, 1500, 98000, 1, 55, 0, 1},
	{"Blade", 2, 520, 67000, 1, 50, 0, 1},
	{"Freight", 2, 0, 0, 0, 0, 1, 1},
	{"Streak", 1, 0, 0, 0, 0, 1, 1},
	{"Vortex", 4, 0, 0, 0, 0, 0, 1},
	{"Vincent", 4, 450, 71000, 1, 55, 0, 1},
	{"Bullet", 2, 50, 260000, 1, 50, 0, 1},
	{"Clover", 2, 380, 79000, 1, 55, 0, 1},
	{"Sadler", 2, 1300, 69000, 1, 65, 0, 1},
	{"Firetruck", 2, 0, 200000, 0, 100, 0, 1},
	{"Hustler", 2, 400, 90000, 1, 60, 0, 1},
	{"Intruder", 4, 420, 62000, 1, 55, 0, 1},
	{"Primo", 4, 430, 69000, 1, 55, 0, 1},
	{"Cargobob", 2, 0, 0, 0, 0, 0, 3},
	{"Tampa", 2, 480, 32000, 1, 50, 0, 1},
	{"Sunrise", 4, 450, 78000, 1, 55, 0, 1},
	{"Merit", 4, 350, 150000, 1, 50, 0, 1},
	{"Utility Van", 1, 1500, 35000, 0, 65, 0, 1},
	{"Nevada", 2, 0, 0, 0, 0, 0, 3},
	{"Yosemite", 2, 1500, 129000, 1, 70, 0, 1},
	{"Windsor", 2, 150, 87000, 1, 50, 0, 1},
	{"Monster A", 2, 0, 85000, 0, 60, 0, 1},
	{"Monster B", 2, 0, 85000, 0, 60, 0, 1},
	{"Uranus", 2, 400, 139000, 1, 50, 0, 1},
	{"Jester", 2, 300, 199000, 1, 50, 0, 1},
	{"Sultan", 4, 300, 210000, 1, 55, 0, 1},
	{"Stratum", 4, 700, 140000, 1, 50, 0, 1},
	{"Elegy", 2, 250, 192000, 1, 50, 0, 1},
	{"Raindance", 0, 0, 0, 0, 0, 0, 3},
	{"RC Tiger", 2, 0, 0, 0, 0, 1, 1},
	{"Flash", 2, 350, 98234, 1, 50, 0, 1},
	{"Tahoma", 4, 450, 68000, 1, 50, 0, 1},
	{"Savanna", 4, 530, 78000, 1, 55, 0, 1},
	{"Bandito", 0, 0, 0, 0, 0, 0, 1},
	{"Freight", 3, 0, 0, 0, 0, 1, 0},
	{"Trailer", 1, 0, 0, 0, 0, 1, 0},
	{"Kart", 1, 0, 0, 0, 0, 0, 1},
	{"Mower", 2, 0, 0, 0, 0, 0, 1},
	{"Dune", 1, 0, 450000, 0, 150, 0, 1},
	{"Sweeper", 2, 0, 0, 0, 0, 0, 1},
	{"Broadway", 2, 300, 41000, 1, 50, 0, 1},
	{"Tornado", 2, 550, 41000, 1, 45, 0, 1},
	{"AT-400", 2, 0, 0, 0, 0, 0, 3},
	{"DFT-30", 4, 0, 120000, 0, 100, 0, 1},
	{"Huntley", 4, 580, 280000, 1, 75, 0, 1},
	{"Stafford", 4, 500, 67000, 1, 60, 0, 1},
	{"BF-400", 2, 40, 22000, 1, 8, 0, 1},
	{"Newsvan", 1, 4100, 65000, 0, 85, 0, 1},
	{"Tug", 0, 0, 0, 0, 0, 0, 1},
	{"Trailer A", 4, 0, 0, 0, 0, 1, 0},
	{"Emperor", 4, 420, 14000, 1, 55, 0, 1},
	{"Wayfarer", 2, 50, 10000, 1, 15, 0, 1},
	{"Euros", 2, 650, 125000, 1, 50, 0, 1},
	{"Hotdog Van", 2, 1200, 21000, 1, 70, 0, 1},
	{"Club", 2, 350, 82000, 1, 50, 0, 1},
	{"Trailer B", 0, 0, 0, 0, 0, 1, 0},
	{"Trailer C", 1, 0, 0, 0, 0, 1, 0},
	{"Andromada", 2, 0, 0, 0, 0, 0, 3},
	{"Dodo", 0, 0, 0, 0, 0, 0, 3},
	{"RC Cam", 1, 0, 0, 0, 0, 1, 0},
	{"Launch", 4, 0, 0, 0, 0, 0, 0},
	{"LAPD Cruiser", 4, 480, 45000, 0, 55, 0, 1},
	{"SFPD Cruiser", 4, 480, 45000, 0, 55, 0, 1},
	{"LVPD Cruiser", 2, 480, 45000, 0, 55, 0, 1},
	{"Police Ranger", 2, 1200, 55000, 0, 75, 0, 1},
	{"Picador", 2, 930, 20000, 1, 60, 0, 1},
	{"S.W.A.T. Van", 2, 0, 0, 0, 0, 0, 1},
	{"Alpha", 2, 450, 63000, 1, 50, 0, 1},
	{"Phoenix", 2, 360, 60000, 1, 50, 0, 1},
	{"Glendale Shit", 2, 700, 5000, 0, 50, 0, 1},
	{"Sadler Shit", 0, 1800, 10000, 0, 50, 0, 1},
	{"Luggage Trailer A", 0, 0, 0, 0, 0, 1, 0},
	{"Luggage Trailer B", 0, 0, 0, 0, 0, 1, 0},
	{"Stair Trailer", 4, 0, 0, 0, 0, 1, 0},
	{"Boxville", 4, 7100, 30000, 0, 75, 0, 1},
	{"Farm Plow", 0, 0, 0, 0, 0, 1, 0},
	{"Utility Trailer", 0, 0, 0, 0, 0, 1, 0}
};*/

new vehicleData[][vehicleDataEnum] = {
	{"Landstalker", 4, 1200, 70000, 1, 75, 0, 1},
	{"Bravura", 2, 420, 28000, 1, 55, 0, 1},
	{"Buffalo", 2, 320, 120000, 1, 55, 0, 1},
	{"Linerunner", 2, 0, 150000, 0, 120, 0, 1},
	{"Perenniel", 4, 1400, 23500, 1, 50, 0, 1},
	{"Sentinel", 4, 500, 35000, 1, 60, 0, 1},
	{"Dumper", 1, 0, 350000, 0, 200, 0, 1},
	{"Firetruck", 2, 0, 100000, 0, 100, 0, 1},
	{"Trashmaster", 2, 0, 100000, 0, 100, 0, 1},
	{"Stretch", 4, 700, 105000, 1, 65, 0, 1},
	{"Manana", 2, 430, 24000, 1, 50, 0, 1},
	{"Infernus", 2, 150, 235000, 1, 45, 0, 1},
	{"Voodoo", 2, 530, 28000, 1, 45, 0, 1},
	{"Pony", 4, 5500, 30000, 1, 70, 0, 1},
	{"Mule", 2, 6500, 33000, 1, 80, 0, 1},
	{"Cheetah", 2, 150, 290000, 1, 55, 0, 1},
	{"Ambulance", 4, 6000, 70000, 0, 80, 0, 1},
	{"Leviathan", 2, 0, 200000, 0, 150, 0, 3},
	{"Moonbeam", 4, 950, 12000, 1, 70, 0, 1},
	{"Esperanto", 2, 430, 18000, 1, 55, 0, 1},
	{"Taxi", 4, 480, 4500, 1, 70, 0, 2},
	{"Washington", 4, 600, 32000, 1, 60, 0, 1},
	{"Bobcat", 2, 1500, 12500, 1, 70, 0, 1},
	{"Mr. Whoopee Van", 2, 0, 20000, 1, 70, 0, 1},
	{"BF Injection", 2, 0, 15000, 0, 30, 0, 1},
	{"Hunter", 1, 0, 500000, 0, 100, 1, 3},
	{"Premier", 4, 426, 51000, 1, 65, 0, 1},
	{"Enforcer", 4, 6500, 120000, 0, 70, 0, 1},
	{"Securicar", 2, 6500, 150000, 0, 80, 0, 1},
	{"Banshee", 2, 240, 245000, 1, 55, 0, 1},
	{"Predator", 1, 0, 80000, 0, 80, 0, 0},
	{"Bus", 4, 0, 50000, 0, 100, 0, 1},
	{"Rhino", 1, 0, 0, 0, 0, 1, 1},
	{"Barracks", 2, 9700, 100000, 0, 100, 0, 1},
	{"Hotknife", 2, 0, 65000, 0, 40, 0, 1},
	{"Trailer", 0, 0, 0, 0, 0, 1, 0},
	{"Previon", 2, 250, 13000, 1, 50, 0, 1},
	{"Coach", 4, 0, 50000, 0, 100, 0, 1},
	{"Cabbie", 4, 500, 5000, 1, 70, 0, 2},
	{"Stallion", 2, 380, 46000, 1, 55, 0, 1},
	{"Rumpo", 4, 5700, 25000, 1, 70, 0, 1},
	{"RC Bandit", 0, 0, 0, 0, 0, 1, 0},
	{"Romero", 2, 1300, 20000, 1, 50, 0, 1},
	{"Packer", 2, 0, 150000, 0, 120, 0, 1},
	{"Monster", 2, 0, 45000, 0, 60, 0, 1},
	{"Admiral", 4, 480, 31000, 1, 50, 0, 1},
	{"Squalo", 1, 0, 0, 0, 0, 0, 0},
	{"Seasparrow", 2, 0, 0, 0, 0, 0, 3},
	{"Pizzaboy", 1, 50, 4000, 0, 6, 0, 1},
	{"Tram", 0, 0, 0, 0, 0, 1, 1},
	{"Trailer", 0, 0, 0, 0, 0, 1, 0},
	{"Turismo", 2, 230, 320000, 1, 55, 0, 1},
	{"Speeder", 1, 0, 0, 0, 0, 0, 0},
	{"Reefer", 1, 0, 0, 0, 0, 0, 0},
	{"Tropic", 1, 0, 0, 0, 0, 0, 0},
	{"Flatbed", 2, 8400, 150000, 0, 120, 0, 1},
	{"Yankee", 2, 9800, 100000, 0, 120, 0, 1},
	{"Caddy", 2, 0, 10000, 0, 25, 0, 1},
	{"Solair", 4, 500, 13500, 1, 50, 0, 1},
	{"Berkley's RC Van", 4, 6300, 36000, 1, 75, 0, 1},
	{"Skimmer", 2, 0, 0, 0, 0, 0, 3},
	{"PCJ-600", 2, 40, 9000, 1, 10, 0, 1},
	{"Faggio", 2, 50, 4500, 1, 6, 0, 1},
	{"Freeway", 2, 65, 6500, 1, 20, 0, 1},
	{"RC Baron", 0, 0, 0, 0, 0, 1, 0},
	{"RC Raider", 4, 0, 0, 0, 0, 1, 0},
	{"Glendale", 4, 700, 13500, 1, 50, 0, 1},
	{"Oceanic", 4, 700, 14000, 1, 55, 0, 1},
	{"Sanchez", 2, 40, 9500, 1, 7, 0, 1},
	{"Sparrow", 4, 0, 0, 0, 0, 0, 3},
	{"Patriot", 2, 350, 60000, 0, 80, 0, 1},
	{"Quad", 2, 50, 12500, 1, 6, 0, 1},
	{"Coastguard", 1, 0, 0, 0, 0, 0, 0},
	{"Dinghy", 2, 0, 0, 0, 0, 0, 0},
	{"Hermes", 2, 820, 28000, 1, 50, 0, 1},
	{"Sabre", 2, 480, 67000, 1, 50, 0, 1},
	{"Rustler", 2, 0, 0, 0, 0, 0, 3},
	{"ZR-350", 2, 480, 160000, 1, 55, 0, 1},
	{"Walton", 2, 1500, 21000, 1, 60, 0, 1},
	{"Regina", 4, 900, 17000, 1, 50, 0, 1},
	{"Comet", 2, 150, 128000, 1, 50, 0, 1},
	{"BMX", 1, 0, 1000, 1, 0, 0, 0},
	{"Burrito", 4, 5800, 36000, 1, 75, 0, 1},
	{"Camper", 4, 800, 26000, 1, 65, 0, 1},
	{"Marquis", 1, 0, 0, 0, 0, 0, 0},
	{"Baggage", 1, 0, 0, 0, 0, 0, 1},
	{"Dozer", 4, 0, 0, 0, 0, 0, 1},
	{"Maverick", 2, 0, 0, 0, 100, 0, 3},
	{"News Chopper", 2, 0, 0, 0, 0, 0, 3},
	{"Rancher", 2, 1400, 41000, 1, 80, 0, 1},
	{"FBI Rancher", 2, 1400, 61000, 0, 80, 0, 1},
	{"Virgo", 2, 520, 25000, 1, 60, 0, 1},
	{"Greenwood", 4, 480, 31000, 1, 60, 0, 1},
	{"Jetmax", 2, 0, 0, 0, 0, 0, 0},
	{"Hotring", 2, 0, 100000, 0, 40, 0, 1},
	{"Sandking", 2, 850, 110000, 0, 80, 0, 1},
	{"Blista Compact", 2, 300, 52000, 1, 50, 0, 1},
	{"Police Maverick", 4, 0, 0, 0, 100, 0, 3},
	{"Boxville", 4, 7100, 32000, 1, 75, 0, 1},
	{"Benson", 2, 6500, 30000, 1, 75, 0, 1},
	{"Mesa", 2, 480, 58000, 1, 75, 0, 1},
	{"RC Goblin", 2, 0, 0, 0, 0, 1, 0},
	{"Hotring Racer A", 2, 0, 150000, 0, 40, 0, 1},
	{"Hotring Racer B", 2, 0, 150000, 0, 40, 0, 1},
	{"Bloodring Banger", 2, 0, 60000, 0, 40, 0, 1},
	{"Rancher", 2, 1400, 51000, 0, 80, 0, 1},
	{"Super GT", 2, 320, 120000, 1, 50, 0, 1},
	{"Elegant", 4, 600, 34000, 1, 60, 0, 1},
	{"Journey", 2, 3600, 28000, 1, 75, 0, 1},
	{"Bike", 1, 0, 460, 1, 0, 0, 0},
	{"Mountain Bike", 2, 0, 980, 1, 0, 0, 0},
	{"Beagle", 1, 0, 0, 0, 0, 0, 3},
	{"Cropduster", 1, 0, 0, 0, 0, 0, 3},
	{"Stuntplane", 2, 0, 0, 0, 0, 0, 3},
	{"Tanker", 2, 0, 150000, 0, 120, 0, 1},
	{"RoadTrain", 4, 0, 150000, 0, 120, 0, 1},
	{"Nebula", 4, 520, 22000, 1, 50, 0, 1},
	{"Majestic", 2, 320, 31000, 1, 55, 0, 1},
	{"Buccaneer", 2, 450, 14000, 1, 55, 0, 1},
	{"Shamal", 1, 0, 0, 0, 0, 0, 3},
	{"Hydra", 2, 0, 0, 0, 0, 1, 3},
	{"FCR-900", 2, 40, 50000, 1, 12, 0, 1},
	{"NRG-500", 2, 20, 150000, 0, 12, 0, 1},
	{"HPV1000", 2, 50, 30000, 0, 20, 0, 1},
	{"Cement Truck", 2, 0, 150000, 0, 120, 0, 1},
	{"TowTruck", 2, 50, 4000, 1, 65, 0, 1},
	{"Fortune", 2, 200, 20000, 1, 50, 0, 1},
	{"Cadrona", 2, 380, 22000, 1, 50, 0, 1},
	{"FBI Truck", 4, 800, 45000, 0, 60, 0, 1},
	{"Willard", 4, 470, 15000, 1, 50, 0, 1},
	{"Forklift", 1, 0, 0, 0, 0, 0, 1},
	{"Tractor", 1, 0, 2750, 1, 50, 0, 1},
	{"Combine", 2, 0, 0, 0, 0, 0, 1},
	{"Feltzer", 2, 660, 60000, 1, 55, 0, 1},
	{"Remington", 2, 520, 39000, 1, 55, 0, 1},
	{"Slamvan", 2, 1500, 58000, 1, 55, 0, 1},
	{"Blade", 2, 520, 32000, 1, 50, 0, 1},
	{"Freight", 2, 0, 0, 0, 0, 1, 1},
	{"Streak", 1, 0, 0, 0, 0, 1, 1},
	{"Vortex", 4, 0, 0, 0, 0, 0, 1},
	{"Vincent", 4, 450, 21000, 1, 55, 0, 1},
	{"Bullet", 2, 50, 200000, 1, 50, 0, 1},
	{"Clover", 2, 380, 11000, 1, 55, 0, 1},
	{"Sadler", 2, 1300, 12200, 1, 65, 0, 1},
	{"Firetruck", 2, 0, 100000, 0, 100, 0, 1},
	{"Hustler", 2, 400, 32000, 1, 60, 0, 1},
	{"Intruder", 4, 420, 14000, 1, 55, 0, 1},
	{"Primo", 4, 430, 12000, 1, 55, 0, 1},
	{"Cargobob", 2, 0, 0, 0, 0, 0, 3},
	{"Tampa", 2, 480, 11000, 1, 50, 0, 1},
	{"Sunrise", 4, 450, 15000, 1, 55, 0, 1},
	{"Merit", 4, 350, 45000, 1, 50, 0, 1},
	{"Utility Van", 1, 1500, 15000, 0, 65, 0, 1},
	{"Nevada", 2, 0, 0, 0, 0, 0, 3},
	{"Yosemite", 2, 1500, 62000, 1, 70, 0, 1},
	{"Windsor", 2, 150, 47000, 1, 50, 0, 1},
	{"Monster A", 2, 0, 45000, 0, 60, 0, 1},
	{"Monster B", 2, 0, 45000, 0, 60, 0, 1},
	{"Uranus", 2, 400, 55000, 1, 50, 0, 1},
	{"Jester", 2, 300, 140000, 1, 50, 0, 1},
	{"Sultan", 4, 300, 120000, 1, 55, 0, 1},
	{"Stratum", 4, 700, 50000, 1, 50, 0, 1},
	{"Elegy", 2, 250, 90000, 1, 50, 0, 1},
	{"Raindance", 0, 0, 0, 0, 0, 0, 3},
	{"RC Tiger", 2, 0, 0, 0, 0, 1, 1},
	{"Flash", 2, 350, 75000, 1, 50, 0, 1},
	{"Tahoma", 4, 450, 32000, 1, 50, 0, 1},
	{"Savanna", 4, 530, 48000, 1, 55, 0, 1},
	{"Bandito", 0, 0, 0, 0, 0, 0, 1},
	{"Freight", 3, 0, 0, 0, 0, 1, 0},
	{"Trailer", 1, 0, 0, 0, 0, 1, 0},
	{"Kart", 1, 0, 0, 0, 0, 0, 1},
	{"Mower", 2, 0, 0, 0, 0, 0, 1},
	{"Dune", 1, 0, 250000, 0, 150, 0, 1},
	{"Sweeper", 2, 0, 0, 0, 0, 0, 1},
	{"Broadway", 2, 300, 21000, 1, 50, 0, 1},
	{"Tornado", 2, 550, 21000, 1, 45, 0, 1},
	{"AT-400", 2, 0, 0, 0, 0, 0, 3},
	{"DFT-30", 4, 0, 120000, 0, 100, 0, 1},
	{"Huntley", 4, 580, 126000, 1, 75, 0, 1},
	{"Stafford", 4, 500, 37000, 1, 60, 0, 1},
	{"BF-400", 2, 40, 12000, 1, 8, 0, 1},
	{"Newsvan", 1, 4100, 65000, 0, 85, 0, 1},
	{"Tug", 0, 0, 0, 0, 0, 0, 1},
	{"Trailer A", 4, 0, 0, 0, 0, 1, 0},
	{"Emperor", 4, 420, 14000, 1, 55, 0, 1},
	{"Wayfarer", 2, 50, 10000, 1, 15, 0, 1},
	{"Euros", 2, 650, 75000, 1, 50, 0, 1},
	{"Hotdog Van", 2, 1200, 21000, 1, 70, 0, 1},
	{"Club", 2, 350, 42000, 1, 50, 0, 1},
	{"Trailer B", 0, 0, 0, 0, 0, 1, 0},
	{"Trailer C", 1, 0, 0, 0, 0, 1, 0},
	{"Andromada", 2, 0, 0, 0, 0, 0, 3},
	{"Dodo", 0, 0, 0, 0, 0, 0, 3},
	{"RC Cam", 1, 0, 0, 0, 0, 1, 0},
	{"Launch", 4, 0, 0, 0, 0, 0, 0},
	{"LAPD cruiser", 4, 480, 45000, 0, 55, 0, 1},
	{"SFPD cruiser", 4, 480, 45000, 0, 55, 0, 1},
	{"LVPD cruiser", 2, 480, 45000, 0, 55, 0, 1},
	{"Police Ranger", 2, 1200, 55000, 0, 75, 0, 1},
	{"Picador", 2, 930, 20000, 1, 60, 0, 1},
	{"S.W.A.T. Van", 2, 0, 0, 0, 0, 0, 1},
	{"Alpha", 2, 450, 73000, 1, 50, 0, 1},
	{"Phoenix", 2, 360, 64000, 1, 50, 0, 1},
	{"Glendale Shit", 2, 700, 5000, 0, 50, 0, 1},
	{"Sadler Shit", 0, 1800, 10000, 0, 50, 0, 1},
	{"Luggage Trailer A", 0, 0, 0, 0, 0, 1, 0},
	{"Luggage Trailer B", 0, 0, 0, 0, 0, 1, 0},
	{"Stair Trailer", 4, 0, 0, 0, 0, 1, 0},
	{"Boxville", 4, 7100, 30000, 0, 75, 0, 1},
	{"Farm Plow", 0, 0, 0, 0, 0, 1, 0},
	{"Utility Trailer", 0, 0, 0, 0, 0, 1, 0}
};

new Locs[][LocEnum] = {
    {"公民就职中心", 1310.0868,-1367.3768,13.5310},
	{"租赁中心", 1616.0786, -1896.3529, 13.5489},
	{"城市银行", 593.2187, -1249.9857, 18.2146},
	{"垃圾回收站", 1812.4395, -2072.4558, 13.5527},
	{"英格尔伍德披萨店 (旗舰店)", 2109.0012, -1788.9446, 13.5608},
	{"物流公司", 2283.4673, -2299.3845, 13.3772},
	{"洛杉矶之声传媒台", 648.2817, -1357.8223, 13.5734},
	{"罗德车辆销售中心", 542.2992, -1292.1060, 17.2422},
	{"莫利诺车辆销售中心", 2131.7964, -1150.2208, 24.1810},
	{"联合火车站", 1742.8090, -1859.7273, 13.4141},
	{"洛杉矶警局", 1542.3568, -1675.1830, 13.5543},
	{"英格尔伍德修车场", 2073.9824, -1831.3842, 13.5469},
	{"塔莫浦改装店", 1041.3319, -1027.6871, 32.1016},
	{"潘兴圣徒医院", 1513.1852, -1569.4840, 14.6543},
	{"洛杉矶消防局", 1494.7041, -1510.0973, 14.1449},
	{"DMV (驾校)", 1317.8936, -1183.2419, 23.5981},
	{"加尼福利亚州立监狱(法院)", 257.1475, 1426.5883, 10.5930},
	{"加尼福利亚州立监狱 (入口)", 283.4659, 1416.9503, 10.4083},
	{"木材加工厂",2153.7068, -2151.3359, 13.5839},
	{"伐木场",-375.7715, -1418.1702, 25.7708},
	{"卡米诺家具店 (旗舰店)",1915.149, -1866.495 ,13.562}
};

new adminLocs[][adminLocEnum] = {//汉化
    {"Employment Center", 0, 0, 1310.0868,-1367.3768,13.5310},
	{"RC Battlefield", 10, 0, -1130.1594, 1057.5538, 1346.4141},
	{"Rental Center", 0, 0, 1616.0786, -1896.3529, 13.5489},
	{"Los Angeles Bank", 0, 0, 593.2187, -1249.9857, 18.2146},
	{"San Andreas Network", 0, 0, 648.2817, -1357.8223, 13.5734},
	{"Rodeo Dealership", 0, 0, 542.2992, -1292.1060, 17.2422},
	{"Jefferson Dealership", 0, 0, 2131.7964, -1150.2208, 24.1810},
	{"Unity Station", 0, 0, 1742.8090, -1859.7273, 13.4141},
	{"Los Angeles Police Department", 0, 0, 1542.3568, -1675.1830, 13.5543},
	{"Garbage Job", 0, 0, 1812.4395, -2072.4558, 13.5527},
	{"Pizza Job", 0, 0, 2109.0012, -1788.9446, 13.5608},
	{"Waste Management Job", 0, 0, 2283.4673, -2299.3845, 13.3772},
	{"Pay'n'Spray Idlewood", 0, 0, 2073.9824, -1831.3842, 13.5469},
	{"Pay'n'Spray Dillimore", 0, 0, 719.6918, -466.6411, 16.3437},
	{"Pay'n'Spray Temple", 0, 0, 1025.0676, -1031.7937, 31.9556},
	{"Pay'n'Spray Santa Maria", 0, 0, 488.4973, -1730.9447, 10.8725},
	{"Modding Garage Temple", 0, 0, 1041.3319, -1027.6871, 32.1016},
	{"Ocean Docks", 0, 0, 2771.8950, -2450.3188, 13.6375},
	{"All Saints General Hospital Front-Entrance", 0, 0, 1513.1852, -1569.4840, 14.6543},
	{"All Saints General Hospital Back-Entrance", 0, 0, 1507.8983, -1540.5138, 13.5474},
	{"Los Angeles Fire Department", 0, 0, 1494.7041, -1510.0973, 14.1449},
	{"Department of Motor Vehicles", 0, 0, 1317.8936, -1183.2419, 23.5981},
	{"Montgomery", 0, 0, 1314.2813, 322.9581, 19.5547},
	{"Blueberry", 0, 0, 189.7613, -219.1013, 1.5781},
	{"Blueberry Farm", 0, 0, -105.9288, -79.3093, 3.1172},
	{"Dillimore", 0, 0, 673.9786, -536.7366, 16.3359},
	{"Palomino Creek", 0, 0, 2336.3037, 99.0676, 26.4844},
	{"Angel Pine", 0, 0, -2146.8132, -2400.8062, 30.6250},
	{"Mount Chiliad", 0, 0, -2235.5093, -1743.6031, 480.8507},
	{"Bayside", 0, 0, -2472.2507, 2322.2373, 4.9908},
	{"El Quebrados", 0, 0, -1488.8893, 2593.7268, 55.8403},
	{"Fort Carson", 0, 0, -72.6403, 1090.4437, 19.7422},
	{"Las Barrancas", 0, 0, -839.7873, 1485.3995, 17.7566},
	{"Las Payasadas", 0, 0, -250.2533, 2642.3545, 62.6213},
	{"Las Venturas", 0, 0, 1689.4100, 1447.7084, 10.7670},
	{"San Fierro", 0, 0, -1985.8326, 138.6790, 27.6875},
	{"San Andreas High Facility Prison (Court)", 0, 0, 257.1475, 1426.5883, 10.5930},
	{"San Andreas High Facility Prison (Entrance)", 0, 0, 283.4659, 1416.9503, 10.4083},
	{"Grove Street", 0, 0, 2493.2717,-1667.5364,13.3438},
	{"North Rock", 0, 0, 2358.8149,-654.6149,128.1432},
	{"East Beach", 0, 0, 2852.8220,-1140.8948,24.9204},
	{"San Fierro's mountain", 0, 0, -1428.7856,-952.5302,201.0059},
	{"Abonded Airport(Las Venturas)", 0, 0, 386.5217,2536.6704,16.5391},
	{"Area 51(Bone County)", 0, 0, 87.0772,1920.6918,17.8411},
	{"Pig Pen", 0, 0, 2423.1255,-1230.2810,24.8438},
	{"Santa Maria Beach's pier", 0, 0, 368.8293,-2026.5593,7.6719},
	{"Star Tower", 0, 0, 1544.1173,-1353.4899,329.4740},
	{"Drug Warehouse (Weed & Heroin)", 0, 0, -376.9299,2242.3718,42.6185},
	{"Weapon Warehouse", 0, 0, -1469.6418,2615.5959,58.7879},
	{"Ammo Warehouse", 0, 0, -2184.3328,710.4023,53.8906},
	{"Drug Warehouse (Cocaine & Ecstasy)", 0, 0, -1051.7054,1550.0031,33.4376},
	{"Military Warehouse", 0, 0, -1328.6182,494.4556,11.1953}
};


new LAPDSkins[] = {
	280,
	281,
	282,
	283,
	284,
	288,
	265,
	266,
	267,
	306,//new LAPD1
	307,//new LAPD2
	308,//new SASD1
	309,//new SASD2
	300,
	301,
	302,
	303,
	304,
	305,
	310,
	311
};

new LSFDSkins[] = {
	70,
	211,
	274,
	275,
	276,
	277,
	278,
	279,
	228
};

new SanSkins[] = {
	17,
	59,
	141,
	148,
	150,
	219
};

new Float:cuffOffsets[][] = {
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // CJ - Does not work
	//{-0.027999, 0.051998, -0.029999, -18.699926, 0.000000, 104.199928, 1.489999, 3.036000, 1.957998},
	{-0.027999, 0.052999, -0.029999, -18.099925, -14.000000, 104.199928, 1.405999, 3.036000, 1.635999},
	{-0.015998, 0.021999, -0.029999, -18.099925, -14.000000, 104.199928, 1.157999, 2.612998, 1.561999},
	{-0.027999, 0.078998, -0.029999, -18.699926, 0.000000, 104.199928, 1.489999, 3.036000, 1.957998},
	{-0.027999, 0.078998, -0.029999, -18.699926, 0.000000, 104.199928, 1.982999, 3.036000, 2.327999},
	{-0.016998, 0.074999, -0.024000, -6.299927, -14.000000, 107.499961, 1.999999, 2.612998, 2.404001},
	{0.015001, 0.027999, -0.024000, -6.299927, -14.000000, 107.499961, 1.444999, 2.612998, 1.844001},
	{0.015001, 0.038999, -0.035000, -6.299927, -14.000000, 107.499961, 1.444999, 2.612998, 1.844001},
	{0.015001, 0.038999, -0.035000, -6.299927, -14.000000, 107.499961, 1.444999, 2.612998, 1.844001},
	{0.015001, 0.006999, -0.039000, -6.299927, -14.000000, 107.499961, 1.065999, 2.612998, 1.424002},
	{0.015001, 0.006999, -0.039000, -6.299927, -14.000000, 107.499961, 1.065999, 2.612998, 1.424002},
	{-0.013998, -0.005000, -0.013000, -6.299927, -14.000000, 107.499961, 0.773998, 2.612998, 1.419001},
	{-0.013998, -0.005000, -0.013000, -6.299927, -14.000000, 107.499961, 0.773998, 2.612998, 1.419001},
	{-0.013998, -0.005000, -0.013000, -6.299927, -14.000000, 107.499961, 0.773998, 2.612998, 1.419001},
	{-0.013998, 0.051999, -0.013000, -6.299927, -14.000000, 107.499961, 1.274998, 2.612998, 2.159001},
	{-0.013998, 0.025999, -0.023000, -6.299927, -14.000000, 107.499961, 1.124998, 2.612998, 2.016000},
	{-0.013998, 0.040999, -0.032000, -6.299927, -14.000000, 107.499961, 1.344999, 2.612998, 2.492002},
	{-0.013998, 0.040999, -0.032000, -6.299927, -14.000000, 107.499961, 1.344999, 2.612998, 2.492002},
	{-0.013998, 0.026999, -0.013000, -6.299927, -14.000000, 107.499961, 1.344999, 2.612998, 2.492002},
	{-0.013998, 0.026999, -0.013000, -6.299927, -14.000000, 107.499961, 1.344999, 2.612998, 2.492002},
	{-0.013998, 0.026999, -0.013000, -6.299927, -14.000000, 107.499961, 1.344999, 2.612998, 2.492002},
	{-0.013998, 0.026999, -0.013000, -6.299927, -14.000000, 107.499961, 1.344999, 2.612998, 2.492002},
	{-0.013998, 0.026999, -0.033000, -6.299927, -14.000000, 107.499961, 1.344999, 2.612998, 2.492002},
	{-0.013998, 0.060999, -0.033000, -6.299927, -14.000000, 107.499961, 1.344999, 2.612998, 2.492002},
	{-0.003998, 0.032999, -0.014000, -6.299927, -14.000000, 107.499961, 1.344999, 2.612998, 2.492002},
	{-0.002998, 0.028999, -0.021000, -6.299927, -14.000000, 107.499961, 1.525998, 2.612998, 2.492002},
	{-0.002998, 0.049999, -0.021000, -6.299927, -14.000000, 107.499961, 1.525998, 2.612998, 2.492002},
	{-0.002998, 0.033999, -0.021000, -6.299927, -14.000000, 107.499961, 1.316998, 2.612998, 1.977001},
	{-0.002998, 0.026999, -0.021000, -6.299927, -14.000000, 107.499961, 1.189998, 2.612998, 1.869001},
	{-0.002998, 0.040999, -0.018000, -6.299927, -14.000000, 107.499961, 1.189998, 2.612998, 1.869001},
	{-0.002998, 0.034999, -0.018000, -6.299927, -14.000000, 107.499961, 1.189998, 2.612998, 1.869001},
	{-0.006998, 0.020999, -0.039000, -6.299927, -14.000000, 107.499961, 0.971998, 2.612998, 1.627001},
	{-0.006998, 0.020999, -0.009000, -6.299927, -14.000000, 107.499961, 0.971998, 2.612998, 1.627001},
	{0.026001, 0.032999, -0.009000, -6.299927, -14.000000, 107.499961, 0.971998, 2.612998, 1.627001},
	{-0.013998, 0.053999, -0.009000, -6.299927, -14.000000, 107.499961, 1.330997, 2.612998, 2.222002},
	{-0.013998, 0.027999, -0.017000, -6.299927, -14.000000, 107.499961, 1.123997, 2.573997, 1.688002},
	{-0.013998, 0.027999, -0.017000, -6.299927, -14.000000, 107.499961, 1.123997, 2.573997, 1.688002},
	{-0.013998, 0.027999, -0.017000, -6.299927, -14.000000, 107.499961, 1.123997, 2.573997, 1.688002},
	{-0.013998, 0.027999, -0.038000, -6.299927, -14.000000, 107.499961, 1.123997, 2.573997, 1.688002},
	{0.006001, 0.027999, -0.038000, -6.299927, -14.000000, 107.499961, 1.123997, 2.573997, 1.688002},
	{0.006001, 0.011999, -0.010000, -6.299927, -14.000000, 107.499961, 0.872997, 2.573997, 1.168002},
	{0.006001, 0.011999, -0.010000, -6.299927, -14.000000, 107.499961, 0.872997, 2.573997, 1.168002},
	{0.006001, 0.026999, -0.024000, -6.299927, -14.000000, 107.499961, 1.147997, 2.573997, 1.755001},
	{0.006001, 0.021999, -0.012000, -6.299927, -14.000000, 107.499961, 0.928997, 2.573997, 1.435001},
	{0.006001, 0.035999, -0.012000, -6.299927, -14.000000, 107.499961, 1.044997, 2.573997, 1.554002},
	{0.006001, 0.035999, -0.012000, -6.299927, -14.000000, 107.499961, 1.044997, 2.573997, 1.554002},
	{0.006001, 0.035999, -0.012000, -6.299927, -14.000000, 107.499961, 1.044997, 2.573997, 1.554002},
	{0.006001, 0.035999, -0.012000, -6.299927, -14.000000, 107.499961, 1.044997, 2.573997, 1.554002},
	{0.006001, 0.035999, -0.012000, -6.299927, -14.000000, 107.499961, 1.044997, 2.573997, 1.554002},
	{-0.011998, 0.001999, -0.028000, -6.299927, -14.000000, 107.499961, 1.044997, 2.573997, 1.554002},
	{0.004001, 0.025999, -0.028000, -6.299927, -14.000000, 107.499961, 1.419997, 2.573997, 2.230002},
	{0.004001, 0.044999, -0.028000, -6.299927, -14.000000, 107.499961, 1.419997, 2.573997, 2.230002},
	{0.004001, 0.044999, -0.028000, -6.299927, -14.000000, 107.499961, 1.419997, 2.573997, 2.230002},
	{0.004001, 0.019999, -0.028000, -6.299927, -14.000000, 107.499961, 1.026996, 2.573997, 1.536001},
	{0.004001, 0.019999, -0.028000, -6.299927, -14.000000, 107.499961, 1.026996, 2.573997, 1.536001},
	{0.004001, 0.007999, -0.005000, -6.299927, -14.000000, 107.499961, 0.824997, 2.573997, 1.341000},
	{0.004001, 0.007999, -0.005000, -6.299927, -14.000000, 107.499961, 1.056996, 2.573997, 1.879001},
	{0.004001, 0.007999, -0.005000, -6.299927, -14.000000, 107.499961, 1.056996, 2.573997, 1.879001},
	{0.004001, 0.042999, -0.005000, -6.299927, -14.000000, 107.499961, 1.056996, 2.573997, 1.879001},
	{-0.024998, 0.026999, -0.025000, -6.299927, -14.000000, 107.499961, 1.056996, 2.573997, 1.879001},
	{-0.009998, 0.039999, -0.010000, -6.299927, -14.000000, 107.499961, 1.056996, 2.573997, 1.879001},
	{0.018001, 0.049999, -0.025000, -6.299927, -14.000000, 107.499961, 1.225996, 2.573997, 2.201001},
	{-0.009998, 0.075999, -0.024000, -10.599922, -26.000003, 106.999954, 1.591997, 2.573997, 2.532999},
	{-0.009998, 0.003999, -0.004000, -10.599922, -26.000003, 106.999954, 0.719997, 2.573997, 1.799999},
	{-0.009998, 0.003999, -0.004000, -10.599922, -26.000003, 106.999954, 0.719997, 2.573997, 1.799999},
	{-0.009998, 0.003999, -0.004000, -10.599922, -26.000003, 106.999954, 0.719997, 2.573997, 1.799999},
	{0.004001, 0.029999, -0.010000, -10.599922, -26.000003, 106.999954, 0.946997, 2.573997, 2.151999},
	{0.004001, 0.029999, -0.010000, -10.599922, -26.000003, 106.999954, 0.946997, 2.573997, 2.151999},
	{0.004001, 0.034999, -0.022000, -10.599922, -26.000003, 106.999954, 1.082998, 2.573997, 2.240000},
	{-0.020998, -0.009000, -0.022000, -10.599922, -26.000003, 106.999954, 0.945998, 2.573997, 1.684999},
	{0.023001, 0.041999, -0.020000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{-0.008998, 0.041999, -0.020000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{-0.008998, 0.050999, -0.020000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{-0.008998, 0.050999, -0.020000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{0.053000, 0.050999, -0.020000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{-0.023999, -0.010000, -0.020000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{0.027000, 0.006999, 0.003999, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{0.027000, 0.039999, -0.026000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{0.027000, 0.039999, -0.026000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{0.027000, 0.039999, -0.026000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{0.027000, 0.039999, -0.026000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{0.027000, 0.039999, -0.026000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{0.027000, 0.039999, -0.026000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{0.027000, 0.039999, -0.026000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{0.027000, 0.039999, -0.026000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{0.027000, -0.012000, -0.026000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{0.027000, 0.040999, -0.026000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{-0.037999, -0.027000, -0.026000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{-0.011999, 0.018999, -0.038000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{-0.011999, 0.018999, -0.038000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{-0.011999, -0.000000, -0.038000, -10.599922, -26.000003, 106.999954, 1.308998, 2.573997, 2.138000},
	{-0.011999, 0.010999, -0.006000, -10.599922, -26.000003, 106.999954, 1.074998, 2.573997, 1.762999},
	{-0.011999, 0.010999, -0.006000, -10.599922, -26.000003, 106.999954, 1.074998, 2.573997, 1.762999},
	{-0.011999, -0.006000, -0.037000, -10.599922, -26.000003, 106.999954, 1.074998, 2.573997, 1.762999},
	{-0.011999, 0.007999, -0.037000, -10.599922, -26.000003, 106.999954, 1.074998, 2.573997, 1.762999},
	{-0.011999, 0.026999, -0.024000, -10.599922, -26.000003, 106.999954, 1.373998, 2.573997, 2.071999},
	{-0.011999, 0.050999, -0.024000, -10.599922, -26.000003, 106.999954, 1.373998, 2.573997, 2.071999},
	{-0.011999, 0.029999, -0.024000, -10.599922, -26.000003, 106.999954, 1.425998, 2.573997, 2.134999},
	{-0.011999, 0.029999, -0.024000, -10.599922, -26.000003, 106.999954, 1.425998, 2.573997, 2.134999},
	{-0.011999, 0.029999, -0.024000, -10.599922, -26.000003, 106.999954, 1.425998, 2.573997, 2.134999},
	{-0.011999, 0.023999, -0.024000, -10.599922, -26.000003, 106.999954, 1.425998, 2.573997, 2.134999},
	{0.007000, 0.023999, -0.024000, -10.599922, -26.000003, 106.999954, 1.425998, 2.573997, 2.134999},
	{0.006000, 0.043999, -0.000000, -10.599922, -26.000003, 106.999954, 1.231999, 2.573997, 1.906999},
	{0.006000, 0.109999, -0.041000, -10.599922, -26.000003, 106.999954, 2.172999, 2.573997, 2.635000},
	{0.004000, 0.046999, -0.004000, -10.599922, -26.000003, 106.999954, 1.382000, 2.573997, 2.559998},
	{-0.048999, 0.131999, -0.004000, -10.599922, -26.000003, 106.999954, 2.232000, 2.573997, 3.521998},
	{0.000000, 0.037999, -0.004000, -10.599922, -26.000003, 106.999954, 1.075000, 2.573997, 1.932999},
	{0.000000, 0.029999, -0.004000, -10.599922, -26.000003, 106.999954, 1.075000, 2.573997, 1.932999},
	{0.000000, 0.062999, -0.004000, -10.599922, -26.000003, 106.999954, 1.075000, 2.573997, 1.932999},
	{0.000000, 0.039999, -0.004000, -10.599922, -26.000003, 106.999954, 1.075000, 2.573997, 1.932999},
	{0.000000, 0.039999, -0.004000, -10.599922, -26.000003, 106.999954, 1.075000, 2.573997, 1.932999},
	{0.017000, 0.045999, -0.031000, -10.599922, -26.000003, 106.999954, 1.075000, 2.573997, 1.932999},
	{0.017000, 0.045999, -0.031000, -10.599922, -26.000003, 106.999954, 1.075000, 2.573997, 1.932999},
	{0.034000, 0.045999, -0.031000, -10.599922, -26.000003, 106.999954, 1.189000, 2.573997, 2.121999},
	{0.034000, 0.034999, -0.031000, -10.599922, -26.000003, 106.999954, 1.189000, 2.573997, 2.121999},
	{0.034000, 0.034999, -0.031000, -10.599922, -26.000003, 106.999954, 1.189000, 2.573997, 2.121999},
	{0.034000, 0.034999, -0.031000, -10.599922, -26.000003, 106.999954, 1.189000, 2.573997, 2.121999},
	{0.009000, 0.023999, -0.012000, -10.599922, -26.000003, 106.999954, 0.973000, 2.573997, 1.650999},
	{0.009000, 0.023999, -0.012000, -10.599922, -26.000003, 106.999954, 0.973000, 2.573997, 1.650999},
	{0.009000, 0.023999, -0.012000, -10.599922, -26.000003, 106.999954, 0.973000, 2.573997, 1.650999},
	{0.009000, 0.071999, -0.012000, -10.599922, -26.000003, 106.999954, 1.606999, 2.573997, 2.610999},
	{0.009000, 0.071999, -0.012000, -10.599922, -26.000003, 106.999954, 1.606999, 2.573997, 2.610999},
	{0.009000, 0.062999, -0.012000, -10.599922, -26.000003, 106.999954, 1.606999, 2.573997, 2.610999},
	{0.009000, 0.050999, -0.012000, -10.599922, -26.000003, 106.999954, 1.606999, 2.573997, 2.610999},
	{0.009000, 0.040999, -0.012000, -10.599922, -26.000003, 106.999954, 1.606999, 2.573997, 2.610999},
	{0.009000, 0.030999, -0.012000, -10.599922, -26.000003, 106.999954, 1.606999, 2.573997, 2.610999},
	{-0.000999, 0.035999, -0.026000, -10.599922, -26.000003, 106.999954, 1.606999, 2.573997, 2.610999},
	{-0.000999, 0.064999, -0.026000, -10.599922, -26.000003, 106.999954, 1.606999, 2.573997, 2.610999},
	{-0.000999, 0.064999, -0.026000, -10.599922, -26.000003, 106.999954, 1.606999, 2.573997, 2.610999},
	{-0.000999, 0.015999, -0.020000, -10.599922, -26.000003, 106.999954, 1.203999, 2.573997, 2.227999},
	{-0.013999, 0.029999, -0.029000, -10.599922, -26.000003, 106.999954, 1.203999, 2.573997, 2.227999},
	{-0.013999, 0.002999, -0.029000, -10.599922, -26.000003, 106.999954, 1.203999, 2.573997, 2.227999},
	{-0.013999, 0.034999, -0.018000, -10.599922, -26.000003, 106.999954, 1.203999, 2.573997, 1.778998},
	{-0.013999, 0.050999, -0.018000, -10.599922, -26.000003, 106.999954, 1.203999, 2.573997, 1.778998},
	{-0.013999, 0.038999, -0.018000, -10.599922, -26.000003, 106.999954, 1.203999, 2.573997, 1.778998},
	{0.008000, 0.038999, -0.018000, -10.599922, -26.000003, 106.999954, 1.400999, 2.573997, 2.047998},
	{0.008000, 0.038999, -0.018000, -10.599922, -26.000003, 106.999954, 1.400999, 2.573997, 2.047998},
	{0.008000, 0.030999, -0.002000, -10.599922, -26.000003, 106.999954, 1.117999, 2.573997, 1.710999},
	{0.008000, 0.010999, -0.002000, -10.599922, -26.000003, 106.999954, 1.117999, 2.573997, 1.710999},
	{0.008000, 0.010999, -0.002000, -10.599922, -26.000003, 106.999954, 1.117999, 2.573997, 1.710999},
	{0.008000, 0.010999, -0.002000, -10.599922, -26.000003, 106.999954, 1.117999, 2.573997, 1.710999},
	{0.008000, 0.010999, -0.002000, -10.599922, -26.000003, 106.999954, 1.117999, 2.573997, 1.710999},
	{0.008000, 0.038999, -0.002000, -10.599922, -26.000003, 106.999954, 1.117999, 2.573997, 1.710999},
	{0.008000, 0.038999, -0.002000, -10.599922, -26.000003, 106.999954, 1.314999, 2.573997, 2.124999},
	{0.008000, 0.038999, -0.002000, -10.599922, -26.000003, 106.999954, 1.314999, 2.573997, 2.124999},
	{0.008000, 0.017999, -0.002000, -10.599922, -26.000003, 106.999954, 1.314999, 2.573997, 2.124999},
	{0.008000, 0.058999, -0.002000, -10.599922, -26.000003, 106.999954, 1.314999, 2.573997, 2.124999},
	{0.008000, 0.053999, -0.002000, -10.599922, -26.000003, 106.999954, 1.314999, 2.573997, 2.124999},
	{0.008000, 0.023999, -0.002000, -10.599922, -26.000003, 106.999954, 1.314999, 2.573997, 2.124999},
	{0.008000, 0.047999, -0.015000, -10.599922, -26.000003, 106.999954, 1.314999, 2.573997, 2.124999},
	{0.008000, 0.019999, -0.015000, -10.599922, -26.000003, 106.999954, 1.067999, 2.573997, 1.860999},
	{0.008000, 0.027999, -0.015000, -10.599922, -26.000003, 106.999954, 1.067999, 2.573997, 1.860999},
	{-0.008999, -0.002000, -0.028000, -10.599922, -26.000003, 106.999954, 1.067999, 2.573997, 1.860999},
	{-0.008999, 0.044999, -0.028000, -10.599922, -26.000003, 106.999954, 1.067999, 2.573997, 1.860999},
	{-0.008999, 0.029999, -0.028000, -10.599922, -26.000003, 106.999954, 1.067999, 2.573997, 1.860999},
	{-0.008999, 0.029999, -0.028000, -10.599922, -26.000003, 106.999954, 1.067999, 2.573997, 1.860999},
	{-0.008999, 0.051999, -0.028000, -10.599922, -26.000003, 106.999954, 1.271999, 2.573997, 2.094999},
	{-0.008999, 0.002999, -0.028000, -10.599922, -26.000003, 106.999954, 0.653999, 2.573997, 1.504999},
	{-0.008999, 0.046999, -0.028000, -10.599922, -26.000003, 106.999954, 1.552998, 2.573997, 2.796000},
	{-0.008999, 0.020999, -0.008000, -10.599922, -26.000003, 106.999954, 1.064998, 2.573997, 2.115999},
	{-0.008999, 0.025999, -0.008000, -10.599922, -26.000003, 106.999954, 1.064998, 2.573997, 2.115999},
	{-0.008999, 0.025999, -0.008000, -10.599922, -26.000003, 106.999954, 1.064998, 2.573997, 2.115999},
	{-0.018999, 0.025999, -0.014000, -10.599922, -26.000003, 106.999954, 1.064998, 2.573997, 2.115999},
	{-0.018999, 0.042999, -0.014000, -10.599922, -26.000003, 106.999954, 1.328998, 2.573997, 2.533999},
	{-0.018999, 0.042999, -0.014000, -10.599922, -26.000003, 106.999954, 1.328998, 2.573997, 2.533999},
	{-0.018999, -0.006000, -0.045000, -10.599922, -26.000003, 106.999954, 0.907998, 2.573997, 1.861999},
	{-0.018999, -0.006000, -0.045000, -10.599922, -26.000003, 106.999954, 0.907998, 2.573997, 1.861999},
	{-0.018999, 0.027999, -0.045000, -10.599922, -26.000003, 106.999954, 1.306998, 2.573997, 2.221999},
	{-0.018999, 0.013999, -0.045000, -10.599922, -26.000003, 106.999954, 1.306998, 2.573997, 2.221999},
	{-0.018999, 0.000999, -0.045000, -10.599922, -26.000003, 106.999954, 1.090998, 2.573997, 1.614999},
	{-0.018999, 0.026999, -0.045000, -10.599922, -26.000003, 106.999954, 1.328998, 2.573997, 2.105999},
	{-0.018999, 0.018999, -0.045000, -10.599922, -26.000003, 106.999954, 1.328998, 2.573997, 2.105999},
	{-0.018999, -0.017000, -0.045000, -10.599922, -26.000003, 106.999954, 1.085998, 2.573997, 1.653999},
	{-0.018999, 0.030999, -0.023999, -10.599922, -26.000003, 106.999954, 1.546998, 2.573997, 2.329000},
	{-0.018999, 0.030999, -0.023999, -10.599922, -26.000003, 106.999954, 1.546998, 2.573997, 2.329000},
	{-0.018999, 0.030999, -0.023999, -10.599922, -26.000003, 106.999954, 1.546998, 2.573997, 2.329000},
	{-0.018999, 0.030999, -0.023999, -10.599922, -26.000003, 106.999954, 1.546998, 2.573997, 2.329000},
	{-0.018999, 0.030999, -0.023999, -10.599922, -26.000003, 106.999954, 1.546998, 2.573997, 2.329000},
	{-0.018999, -0.003000, -0.023999, -10.599922, -26.000003, 106.999954, 1.129998, 2.573997, 2.010000},
	{-0.018999, 0.027999, -0.023999, -10.599922, -26.000003, 106.999954, 1.129998, 2.573997, 2.010000},
	{-0.018999, 0.027999, -0.023999, -10.599922, -26.000003, 106.999954, 1.129998, 2.573997, 2.010000},
	{-0.018999, 0.047999, -0.023999, -10.599922, -26.000003, 106.999954, 1.502998, 2.573997, 2.519000},
	{-0.018999, 0.030999, -0.023999, -10.599922, -26.000003, 106.999954, 1.502998, 2.573997, 2.519000},
	{-0.018999, 0.030999, -0.023999, -10.599922, -26.000003, 106.999954, 1.502998, 2.573997, 2.519000},
	{-0.018999, 0.030999, -0.023999, -10.599922, -26.000003, 106.999954, 1.502998, 2.573997, 2.519000},
	{-0.018999, 0.030999, -0.023999, -10.599922, -26.000003, 106.999954, 1.502998, 2.573997, 2.519000},
	{0.024000, 0.043999, -0.023999, -10.599922, -26.000003, 106.999954, 1.502998, 2.573997, 2.519000},
	{0.024000, 0.043999, -0.023999, -10.599922, -26.000003, 106.999954, 1.502998, 2.573997, 2.519000},
	{0.012000, 0.043999, -0.023999, -10.599922, -26.000003, 106.999954, 1.502998, 2.573997, 2.519000},
	{-0.010999, 0.023999, -0.023999, -10.599922, -26.000003, 106.999954, 1.332998, 2.573997, 2.051000},
	{-0.001999, 0.010999, -0.020999, -10.599922, -26.000003, 106.999954, 0.949998, 2.573997, 2.051000},
	{-0.001999, 0.021999, -0.010999, -10.599922, -26.000003, 106.999954, 0.949998, 2.573997, 1.658000},
	{-0.001999, 0.021999, -0.010999, -10.599922, -26.000003, 106.999954, 0.949998, 2.573997, 1.658000},
	{-0.001999, 0.021999, -0.010999, -10.599922, -26.000003, 106.999954, 0.949998, 2.573997, 1.658000},
	{-0.001999, 0.021999, -0.010999, -10.599922, -26.000003, 106.999954, 0.949998, 2.573997, 1.658000},
	{-0.001999, 0.021999, -0.010999, -10.599922, -26.000003, 106.999954, 0.949998, 2.573997, 1.658000},
	{-0.001999, 0.021999, -0.010999, -10.599922, -26.000003, 106.999954, 0.949998, 2.573997, 1.658000},
	{-0.001999, 0.021999, -0.010999, -10.599922, -26.000003, 106.999954, 0.949998, 2.573997, 1.658000},
	{-0.001999, 0.021999, -0.010999, -10.599922, -26.000003, 106.999954, 0.949998, 2.573997, 1.658000},
	{-0.001999, 0.021999, -0.010999, -10.599922, -26.000003, 106.999954, 0.949998, 2.573997, 1.658000},
	{-0.001999, 0.055999, -0.010999, -10.599922, -26.000003, 106.999954, 1.488999, 2.573997, 2.591001},
	{-0.001999, 0.018999, -0.010999, -10.599922, -26.000003, 106.999954, 0.995998, 2.573997, 1.734001},
	{-0.001999, 0.050999, -0.010999, -10.599922, -26.000003, 106.999954, 1.318998, 2.573997, 2.427001},
	{0.016000, 0.032999, -0.010999, -10.599922, -26.000003, 106.999954, 1.318998, 2.573997, 2.649002},
	{0.016000, 0.032999, -0.010999, -10.599922, -26.000003, 106.999954, 1.318998, 2.573997, 2.649002},
	{0.016000, 0.032999, -0.010999, -10.599922, -26.000003, 106.999954, 1.318998, 2.573997, 2.649002},
	{0.016000, 0.063999, -0.010999, -10.599922, -26.000003, 106.999954, 1.318998, 2.573997, 2.649002},
	{-0.012999, 0.008999, -0.010999, -10.599922, -26.000003, 106.999954, 0.782998, 2.573997, 1.527001},
	{0.035000, 0.019999, -0.010999, -10.599922, -26.000003, 106.999954, 1.023998, 2.573997, 2.074001},
	{0.035000, 0.030999, -0.010999, -10.599922, -26.000003, 106.999954, 1.023998, 2.573997, 2.074001},
	{0.035000, 0.030999, -0.010999, -10.599922, -26.000003, 106.999954, 1.023998, 2.573997, 2.074001},
	{-0.019999, 0.000999, -0.010999, -10.599922, -26.000003, 106.999954, 1.023998, 2.573997, 2.074001},
	{-0.019999, 0.027999, -0.010999, -10.599922, -26.000003, 106.999954, 1.285998, 2.573997, 2.470001},
	{-0.019999, 0.027999, -0.010999, -10.599922, -26.000003, 106.999954, 1.285998, 2.573997, 2.470001},
	{-0.019999, 0.013999, -0.010999, -10.599922, -26.000003, 106.999954, 0.957997, 2.573997, 1.784001},
	{0.005000, 0.013999, -0.010999, -10.599922, -26.000003, 106.999954, 1.263998, 2.573997, 2.263001},
	{0.005000, 0.013999, -0.010999, -10.599922, -26.000003, 106.999954, 1.263998, 2.573997, 2.263001},
	{0.005000, 0.058999, -0.010999, -10.599922, -26.000003, 106.999954, 1.263998, 2.573997, 2.263001},
	{0.005000, 0.025999, -0.040999, -10.599922, -26.000003, 106.999954, 0.959998, 2.573997, 1.387001},
	{0.005000, 0.009999, -0.040999, -10.599922, -26.000003, 106.999954, 0.959998, 2.573997, 1.387001},
	{0.005000, 0.041999, -0.013999, -10.599922, -26.000003, 106.999954, 1.294998, 2.573997, 2.168000},
	{0.005000, 0.063999, -0.013999, -10.599922, -26.000003, 106.999954, 1.294998, 2.573997, 2.168000},
	{0.005000, 0.063999, -0.013999, -10.599922, -26.000003, 106.999954, 1.294998, 2.573997, 2.168000},
	{-0.032999, 0.023999, -0.013999, -10.599922, -26.000003, 106.999954, 1.294998, 2.573997, 2.168000},
	{-0.032999, 0.004999, -0.013999, -10.599922, -26.000003, 106.999954, 1.294998, 2.573997, 2.168000},
	{-0.032999, 0.004999, -0.013999, -10.599922, -26.000003, 106.999954, 1.294998, 2.573997, 2.168000},
	{-0.032999, 0.004999, -0.013999, -10.599922, -26.000003, 106.999954, 1.294998, 2.573997, 2.168000},
	{0.010000, 0.004999, -0.034999, -10.599922, -26.000003, 106.999954, 1.294998, 2.573997, 2.168000},
	{0.010000, 0.004999, -0.034999, -10.599922, -26.000003, 106.999954, 1.294998, 2.573997, 2.168000},
	{0.010000, 0.029999, -0.034999, -10.599922, -26.000003, 106.999954, 0.933998, 2.573997, 1.888000},
	{0.010000, 0.037999, -0.011999, -10.599922, -26.000003, 106.999954, 1.043997, 2.573997, 2.135000},
	{0.010000, 0.037999, -0.011999, -10.599922, -26.000003, 106.999954, 1.043997, 2.573997, 2.135000},
	{0.010000, 0.037999, -0.011999, -10.599922, -26.000003, 106.999954, 1.043997, 2.573997, 2.135000},
	{0.010000, 0.001999, -0.011999, -10.599922, -26.000003, 106.999954, 1.043997, 2.573997, 2.135000},
	{-0.006999, 0.038999, -0.011999, -10.599922, -26.000003, 106.999954, 1.043997, 2.573997, 2.135000},
	{-0.006999, 0.030999, -0.011999, -10.599922, -26.000003, 106.999954, 1.043997, 2.573997, 2.135000},
	{-0.006999, 0.030999, -0.011999, -10.599922, -26.000003, 106.999954, 1.043997, 2.573997, 2.135000},
	{-0.022999, 0.008999, -0.011999, -10.599922, -26.000003, 106.999954, 1.043997, 2.573997, 2.135000},
	{-0.022999, 0.008999, -0.011999, -10.599922, -26.000003, 106.999954, 1.043997, 2.573997, 2.135000},
	{-0.022999, 0.027999, -0.011999, -10.599922, -26.000003, 106.999954, 1.431997, 2.573997, 2.910001},
	{-0.022999, 0.027999, -0.011999, -10.599922, -26.000003, 106.999954, 1.431997, 2.573997, 2.910001},
	{-0.022999, 0.027999, -0.011999, -10.599922, -26.000003, 106.999954, 1.431997, 2.573997, 2.910001},
	{-0.022999, 0.027999, -0.011999, -10.599922, -26.000003, 106.999954, 1.431997, 2.573997, 2.910001},
	{-0.022999, 0.008999, -0.011999, -10.599922, -26.000003, 106.999954, 0.837997, 2.573997, 2.142000},
	{-0.022999, -0.025000, -0.011999, -10.599922, -26.000003, 106.999954, 0.837997, 2.573997, 2.142000},
	{-0.022999, 0.026999, -0.011999, -10.599922, -26.000003, 106.999954, 1.562997, 2.573997, 2.611000},
	{-0.022999, -0.015000, -0.011999, -10.599922, -26.000003, 106.999954, 0.991997, 2.573997, 1.622996},
	{-0.022999, 0.036999, -0.025999, -10.599922, -26.000003, 106.999954, 1.304997, 2.573997, 1.857996},
	{-0.022999, 0.021999, -0.025999, -10.599922, -26.000003, 106.999954, 1.304997, 2.573997, 1.857996},
	{-0.022999, 0.021999, -0.025999, -10.599922, -26.000003, 106.999954, 1.743997, 2.573997, 2.624996},
	{-0.022999, 0.044999, -0.025999, -10.599922, -26.000003, 106.999954, 1.414997, 2.573997, 1.979995},
	{-0.022999, 0.008999, -0.025999, -10.599922, -26.000003, 106.999954, 0.964996, 2.573997, 1.467995},
	{-0.022999, 0.053999, -0.025999, -10.599922, -26.000003, 106.999954, 1.693996, 2.573997, 2.664995},
	{-0.022999, 0.023999, -0.004999, -10.599922, -26.000003, 106.999954, 1.166996, 2.573997, 2.171994},
	{-0.022999, 0.040999, -0.004999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, 0.040999, -0.004999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, -0.008000, -0.004999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, -0.008000, -0.004999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, 0.061999, -0.020999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, 0.061999, -0.020999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, 0.026999, -0.020999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, 0.026999, -0.020999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, 0.026999, -0.020999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, 0.001999, -0.020999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, 0.023999, -0.020999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, 0.023999, -0.020999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, 0.023999, -0.020999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, -0.006000, -0.020999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, 0.031999, -0.020999, -10.599922, -26.000003, 106.999954, 1.212996, 2.573997, 2.383994},
	{-0.022999, 0.046999, -0.020999, -10.599922, -26.000003, 106.999954, 1.563997, 2.573997, 2.764994},
	{-0.022999, 0.032999, -0.020999, -10.599922, -26.000003, 106.999954, 1.175997, 2.573997, 2.325994},
	{-0.022999, 0.032999, -0.020999, -10.599922, -26.000003, 106.999954, 1.175997, 2.573997, 2.325994},
	{0.031000, 0.066999, -0.020999, -10.599922, -26.000003, 106.999954, 1.505997, 2.573997, 2.687994},
	{-0.001999, -0.005000, -0.020999, -10.599922, -26.000003, 106.999954, 0.748999, 2.573997, 1.579993},
	{-0.001999, 0.037999, -0.020999, -10.599922, -26.000003, 106.999954, 0.987999, 2.573997, 2.194994},
	{-0.001999, 0.037999, -0.020999, -10.599922, -26.000003, 106.999954, 0.987999, 2.573997, 2.194994},
	{-0.001999, 0.037999, -0.020999, -10.599922, -26.000003, 106.999954, 0.987999, 2.573997, 2.194994},
	{-0.001999, 0.037999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.037999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.037999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.037999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.037999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.037999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.037999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.018999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.018999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.046999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.046999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.046999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.046999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.042999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.026999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.058999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.029999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.029999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, -0.001000, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, -0.001000, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.027999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.011999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994},
	{-0.001999, 0.044999, -0.020999, -10.599922, -26.000003, 106.999954, 1.146999, 2.573997, 2.483994}
};

new Float:impoundparking[][] = {

    {1655.0492,-1806.7419,13.1700,90.4648},
	{1653.9932,-1820.8568,13.1683,92.2135},
	{1653.6919,-1838.5199,13.1711,358.1572},
	{1606.6510,-1838.2467,13.1327,0.8361},
	{1605.9897,-1824.9310,13.0983,270.3790},
	{1600.4506,-1814.6299,13.0550,270.6475},
	{1601.6239,-1791.5659,13.0022,269.0117},
	{1611.0148,-1783.8990,13.1149,179.0114},
	{1626.5481,-1787.2057,13.1376,179.2746},
	{1630.6727,-1846.1343,13.1636,91.2658}
};


new Float:trashcans[][] = {
	{1223.25, -956.45, 42.72},
	{837.61, -1010.19, 27.55},
	{768.78, -1035.81, 23.87},
	{718.12, -1134.74, 17.08},
	{447.41, -1294.24, 14.98},
	{213.33, -1750.49, 4.26},
	{303.14, -1422.52, 13.75},
	{385.62, -1730.85, 8.80},
	{477.65, -1744.21, 9.19},
	{646.60, -1761.85, 13.12},
	{1072.44, -1882.88, 13.40},
	{1072.44, -1882.88, 13.40},
	{1227.69, -1863.45, 13.30},
	{1336.81, -1839.60, 13.11},
	{1381.12, -1893.03, 13.11},
	{1439.08, -1847.41, 13.42},
	{1376.97, -1824.18, 13.42},
	{1337.23, -1760.82, 13.21},
	{1341.57, -1680.86, 13.21},
	{1348.28, -1590.00, 13.10},
	{1331.74, -1531.32, 13.30},
	{1358.76, -1483.72, 13.31},
	{1370.51, -1368.93, 13.21},
	{1331.42, -1231.55, 13.41},
	{1282.11, -1268.52, 13.41},
	{1073.72, -1328.15, 13.41},
	{1032.75, -1383.78, 13.41},
	{905.63, -1357.34, 13.21},
	{866.94, -1383.72, 13.31},
	{691.12, -1423.84, 14.66},
	{615.05, -1523.14, 14.76},
	{584.19, -1570.38, 15.94},
	{322.82, -1451.61, 34.09},
	{528.93, -1363.37, 15.74},
	{578.65, -1420.84, 13.82},
	{615.07, -1345.01, 13.31},
	{868.15, -1338.80, 13.31},
	{1566.45, -1580.72, 13.20},
	{1718.01, -1582.78, 13.31},
	{1810.14, -1685.70, 13.30},
	{1832.80, -1792.28, 13.30},
	{1745.06, -1805.29, 13.31},
	{1617.14, -1861.06, 13.41},
	{1558.39, -1841.57, 13.41},
	{1502.12, -1861.08, 13.41},
	{1832.87, -1888.75, 13.30},
	{1950.17, -1888.67, 13.30},
	{1973.21, -1786.52, 13.30},
	{2037.49, -1740.51, 13.32},
	{2037.48, -1625.35, 13.22},
	{2067.95, -1592.00, 13.22},
	{2232.32, -1688.16, 13.82},
	{2331.47, -1693.84, 13.21},
	{2276.09, -1671.70, 15.05},
	{2438.71, -1638.15, 13.28},
	{2483.96, -1690.44, 13.28},
	{2486.05, -1761.60, 13.39},
	{2520.52, -1720.79, 13.28},
	{2519.61, -1946.40, 13.28},
	{2624.93, -1943.56, 13.28},
	{2682.88, -2015.25, 13.28},
	{2725.63, -2018.55, 13.28},
	{2451.94, -1996.49, 13.16},
	{2456.48, -1947.00, 13.36},
	{2424.97, -1883.86, 13.36},
	{2401.80, -2017.17, 13.26},
	{2287.59, -2023.47, 13.26},
	{2202.01, -1981.64, 13.26},
	{2172.87, -1729.14, 13.26},
	{2201.06, -1495.43, 23.76},
	{2356.57, -1470.44, 23.76},
	{2331.31, -1370.51, 23.76},
	{2335.74, -1315.35, 23.87},
	{2391.77, -1244.40, 24.03},
	{2409.06, -1270.18, 24.03},
	{2410.01, -1372.98, 24.23},
	{2387.66, -1456.70, 24.03},
	{2418.73, -1470.26, 23.73},
	{2439.09, -1414.84, 23.84},
	{2507.59, -1245.38, 34.98},
	{2522.93, -1360.59, 28.29},
	{2539.27, -1476.30, 23.85},
	{2140.64, -1495.54, 23.76},
	{2114.41, -1373.08, 23.77},
	{2093.34, -1340.33, 23.77},
	{2155.63, -1340.31, 23.77},
	{2204.92, -1312.15, 23.77},
	{2159.70, -1258.70, 23.77},
	{2083.58, -1258.76, 23.77},
	{2183.58, -1256.10, 23.67},
	{2259.23, -1258.50, 23.67},
	{2163.06, -1088.38, 25.15},
	{2259.25, -1258.50, 23.67},
	{2056.35, -1101.80, 24.24},
	{2083.42, -1196.06, 23.64},
	{1991.62, -1089.09, 24.24},
	{1962.52, -1096.78, 25.33},
	{1878.41, -1090.26, 23.59},
	{1707.29, -1453.34, 13.32},
	{1965.43, -1329.58, 23.63},
	{1803.15, -1435.52, 13.22},
	{1443.45, -1323.43, 13.31},
	{1493.32, -1113.68, 23.72},
	{1433.08, -1047.69, 23.62},
	{1285.64, -1027.28, 31.40},
	{1140.69, -1001.76, 29.59},
	{1073.33, -991.61, 38.75},
	{1054.16, -1052.63, 30.88},
	{1010.89, -1028.51, 31.81},
	{973.85, -1098.66, 23.63},
	{961.47, -1209.03, 16.79},
	{953.97, -1276.71, 14.88},
	{1182.65, -1129.69, 23.72},
	{1227.55, -1175.27, 22.52},
	{1116.44, -1160.80, 23.62},
	{1252.73, -1160.46, 23.72}
};

new Float:pilotLicenseCPs[][3] = {
	{1302.4843, -1149.5156, 76.8443},
	{1170.4972, -1012.5686, 117.0916},
	{949.3857, -825.0179, 161.1002},
	{703.7202, -559.4245, 171.5145},
	{508.6650, -262.0484, 100.6363},
	{346.9587, -107.0190, 37.2224},
	{69.6681, -77.1550, 48.7878},
	{-335.0266, -40.1292, 91.6211},
	{-495.7455, -2.0999, 95.4543},
	{-349.1541, 166.6152, 81.7869},
	{205.8615, 410.4816, 69.9407},
	{707.0961, 412.9601, 85.3618},
	{1117.6494, 56.1772, 115.1217},
	{1493.3540, -260.8403, 131.1486},
	{1664.0802, -616.1659, 147.0460},
	{1527.2355, -929.4729, 133.5297},
	{1349.7612, -1114.6520, 100.7510}
};

new alphabet[][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"};
new numbers[][] = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
new figures[][] = {"A", "1", "2", "3", "4", "5", "6", "7", "8", "9", "J", "Q", "K"};
new symbols[][] = {"黑桃", "红心", "方块", "梅花"};
		
new items[][itemEnum] =
{
    {"空闲的物品槽", NON_OBJ_ITEM, 0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.993749, 0.000000, 0.000000, 0.000000, 0, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.0, 0, 0, 0},
	{"篮球", 2114, 600, 0, -0.007999, 0.167999, 0.042000, 0.000000, 0.000000, 0.000000, -0.865312, 60.000000, 20.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 1.0, 0, 10, 1},
	{"银行卡", NON_OBJ_ITEM, 5, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.993749, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 0, 0.1, 0, 0, 0},
	//{"裹尸袋", 19944, 400, 0, 0.117999, 0.024000, 0.046000, 2.299999, -94.300003, 0.699997, -0.696874, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 2.7, 0, 30, 0},
	
	{"汽油桶", 1650, 4600, 0, 0.117999, 0.024000, 0.046000, 2.299999, -94.300003, 0.699997, -0.696874, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 2.7, 0, 30, 0},
	{"金色手机", 18865, 140, 1, 0.098999, 0.009999, 0.006, 92.3, -179.699966, 0.899997, -1.011875, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.2, 0, 350, 0},
	{"蓝色手机", 18866, 140, 1, 0.098999, 0.009999, 0.006, 92.3, -179.699966, 0.899997, -1.011875, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.2, 0, 350, 0},
	{"橙色手机", 18867, 140, 1, 0.098999, 0.009999, 0.006, 92.3, -179.699966, 0.899997, -1.011875, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.2, 0, 350, 0},
	{"黑色手机", 18868, 140, 1, 0.098999, 0.009999, 0.006, 92.3, -179.699966, 0.899997, -1.011875, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.2, 0, 350, 0},
	{"紫色手机", 18869, 140, 1, 0.098999, 0.009999, 0.006, 92.3, -179.699966, 0.899997, -1.011875, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.2, 0, 350, 0},
	{"红色手机", 18870, 140, 1, 0.098999, 0.009999, 0.006, 92.3, -179.699966, 0.899997, -1.011875, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.2, 0, 350, 0},
	{"绿色手机", 18871, 140, 1, 0.098999, 0.009999, 0.006, 92.3, -179.699966, 0.899997, -1.011875, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.2, 0, 350, 0},
	{"暗蓝色手机", 18872, 140, 1, 0.098999, 0.009999, 0.006, 92.3, -179.699966, 0.899997, -1.011875, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.2, 0, 350, 0},
	{"黄色手机", 18873, 140, 1, 0.098999, 0.009999, 0.006, 92.3, -179.699966, 0.899997, -1.011875, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.2, 0, 350, 0},
	{"银色手机", 18874, 140, 1, 0.098999, 0.009999, 0.006, 92.3, -179.699966, 0.899997, -1.011875, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.2, 0, 350, 0},
	{"相机", 367, 1100, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.969875, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 43, 1, 0.3, 1, 26, 0},
	{"骰子", NON_OBJ_ITEM, 4, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.993749, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.1, 0, 2, 0},
	{"扑克牌", NON_OBJ_ITEM, 60, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.993749, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.1, 0, 2, 0},
	{"手枪弹夹", 327, 350, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1.021875, 90.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.3, 1, 350, 0},
	{"自动枪械弹匣", 328, 950, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1.010296, 91.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.35, 1, 10, 0},
	{"重型枪械弹匣", 327, 800, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1.021875, 90.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.25, 1, 250, 0},
	{"一盒香烟", NON_OBJ_ITEM, 15, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  -0.993749, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.1, 0, 7, 0},
	{"打火机", 327, 30, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1.021875, 90.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.1, 0, 2, 0},
	{"公文包", 1210, 2500, 0, 0.280999, 0.086000, 0.014999, 2.099994, -90.999977, -4.099996, -0.903875, 90.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 2.4, 0, 120, 0},
	{"手电筒", 18641, 500, 1, 0.063999, 0.030000, 0.045999, 0.000000, 170.899963, 0.000000, -0.971875, 92.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.6, 1, 10, 0},
	{"锤头", 18635, 400, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1.006875, 90.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.4, 0, 10, 0},
	{"螺丝刀", 18644, 15, 1, 0.061999, 0.025000, 0.000000, 0.000000, 172.699966, 0.000000, -0.976875, 90.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.2, 0, 8, 0},
	{"披萨", 2881, 25, 0, 0.173000, 0.121000, -0.054000, -85.899986, -11.200008, -165.800079, -1.058750, 205.000000, 105.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.2, 0, 5, 0},
	{"汉堡", 2880, 75, 0, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1.003749, 205.000000, 100.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.3, 0, 5, 0},
	{"汽水", 2601, 400, 0, 0.050999, 0.050999, 0.019000, 0.000000, 0.000000, 0.000000, -0.913749, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.25, 0, 3, 0},
	{"披萨盒", 1582, 300, 0, 0.102999, 0.001999, -0.147999, -109.400062, 2.700000, -10.599996, -0.998749, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 1.2, 0, 10, 0},
	{"M4A1", 356, 2600, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.968295, -94.700141, -83.800010, -82.200012, 6, IDX_STD_ITEM, ITEM_WEAPON, 31, 0, 8.4, 1, 1400, 0},
	{"汤米帽", 2052, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.992812, 0.000000, 0.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"杰瑞帽", 2053, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.952812, 0.000000, 0.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"船长帽", 2054, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.992812, 0.000000, 0.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"建筑头盔", 18638, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.932812, -2.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"黑色牛仔帽", 18639, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.932812, -2.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"灰色的贝雷帽", 18921, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"红色的贝雷帽", 18922, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"蓝色的贝雷帽", 18923, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"迷彩贝雷帽", 18924, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"法国贝雷帽", 18925, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"迷彩帽", 18926, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"蓝色帽子", 18927, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"彩色帽子", 18928, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"暗灰色帽子", 18929, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"橙色帽子", 18930, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"暗蓝色帽子", 18931, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"橙色帽子", 18932, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"灰色帽子", 18933, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"亮红色帽子", 18934, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"黄色帽子", 18935, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"灰色头盔", 18936, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.907812, 35.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"红色头盔", 18937, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.907812, 35.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"紫色头盔", 18938, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.907812, 35.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"暗蓝色帽子 (后面)", 18939, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.945812, -20.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"蓝色帽子 (后面)", 18940, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.945812, -20.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"黑色帽子 (后面)", 18941, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.945812, -20.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"灰色帽子 (后面)", 18942, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.945812, -20.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"绿色帽子 (后面)", 18943, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.945812, -20.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"橙色渔夫帽", 18944, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"灰色渔夫帽", 18945, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"黑色渔夫帽", 18946, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"黑色礼帽", 18947, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -15.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"蓝色礼帽", 18948, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -15.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"绿色礼帽", 18949, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -15.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"红色礼帽", 18950, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -15.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"黄色礼帽", 18951, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.962812, -15.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"拳击护头", 18952, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.932812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"黑色编织帽", 18953, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.002812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"灰色编织帽", 18954, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.002812, -10.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"橙色帽子 (特殊)", 18955, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.992812, 10.000000, 24.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"暗蓝帽子 (特殊)", 18956, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.992812, 10.000000, 24.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"蓝色帽子 (特殊)", 18957, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.992812, 10.000000, 24.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"黄色帽子 (特殊)", 18958, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.992812, 10.000000, 24.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"迷彩帽子", 18959, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.992812, 10.000000, 24.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"彩色帽子 (特殊)", 18960, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.992812, 0.000000, 10.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"卡车帽", 18961, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.972812, 0.000000, 5.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"牛仔帽", 18962, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.932812, 0.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"黑色棉帽", 18964, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.972812, 0.000000, 40.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"绿色棉帽", 18965, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.972812, 0.000000, 40.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"彩色棉帽", 18966, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.972812, 0.000000, 40.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"黑色船夫帽", 18967, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.952812, 0.000000, 10.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"蓝色船夫帽", 18968, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.952812, 0.000000, 10.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"橙色船夫帽", 18969, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.952812, 0.000000, 10.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"棕色牛仔帽", 18970, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.982812, 0.000000, 10.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"黑白牛仔帽", 18971, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.982812, 0.000000, 10.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"橙色牛仔帽", 18972, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.982812, 0.000000, 10.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"绿色牛仔帽", 18973, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.982812, 0.000000, 10.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"佐罗面具", 18974, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.972812, 0.000000, 180.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"白色曲棍球面具", 19036, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.922812, 0.000000, -35.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"灰曲棍球面具", 19037, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.922812, 0.000000, -35.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"绿色曲棍球面具", 19038, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.922812, 0.000000, -35.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"圣诞帽1", 19064, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.972812, 0.000000, 40.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 0},
	{"圣诞帽2", 19065, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.972812, 0.000000, 40.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 0, 0.4, 0, 20, 0},
	{"圣诞帽3", 19066, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.972812, 0.000000, 40.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 0, 0.4, 0, 20, 0},
	{"红色帽衫", 19067, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.972812, 0.000000, 40.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"灰色帽衫", 19068, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.972812, 0.000000, 40.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"黑色帽衫", 19069, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.972812, 0.000000, 40.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"建筑头盔", 19093, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.992812, 0.000000, -93.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"棕色牛仔帽2", 19095, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.942812, -3.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"黑色牛仔帽", 19096, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.942812, -3.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"红色牛仔帽", 19097, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.942812, -3.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"棕色牛仔帽3", 19098, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.942812, -3.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"纯红色头盔", 19117, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.932812, -15.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"纯绿色头盔", 19118, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.932812, -15.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"纯蓝色头盔", 19119, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.932812, -15.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"纯黄色头盔", 19120, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.932812, -15.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"建筑头盔", 19160, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.002812, -2.000000, -90.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"顶帽", 19352, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.002812, 0.000000, 0.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.4, 0, 20, 1},
	{"红色眼镜", 19006, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948437, 0.000000, 5.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"橙色眼镜1", 19007, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948437, 0.000000, 5.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"绿色眼镜", 19008, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948437, 0.000000, 5.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"黑色眼镜1", 19009, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948437, 0.000000, 5.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"粉色眼镜", 19010, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948437, 0.000000, 5.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"黑白眼镜1", 19011, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948437, 0.000000, 5.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"黑色眼镜2", 19012, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948437, 0.000000, 5.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"黑白眼镜2", 19013, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948437, 0.000000, 5.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"象棋眼镜1", 19014, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948437, 0.000000, 5.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"镜框", 19015, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948437, 0.000000, 5.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"橙色眼镜2", 19016, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.956240, 0.000000, 5.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"黄色镜框", 19017, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.957953, 0.000000, 6.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"橙色镜框", 19018, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.958151, 0.000000, 6.000000, 0.00000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"红色镜框", 19019, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.956078, 0.000000, 6.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"蓝色镜框", 19020, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.955962, 0.000000, 6.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"绿色镜框", 19021, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.954351, 0.000000, 6.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"黑薄色眼镜1", 19022, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.967669, 0.000000, 1.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"蓝薄色眼镜1", 19023, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.967844, 0.000000, 1.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"紫薄色眼镜", 19024, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960100, 0.000000, 1.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"粉薄色眼镜", 19025, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960279, 0.000000, 1.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"红薄色眼镜1", 19026, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.968514, 0.000000, 1.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"橙薄色眼镜", 19027, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.969144, 0.000000, 0.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"黄薄色眼镜1", 19028, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.961728, 0.000000, 0.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"绿薄色眼镜", 19029, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.969675, 0.000000, 0.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"棕薄色眼镜", 19030, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.970052, 0.000000, 0.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"黄薄色眼镜2", 19031, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.970798, 0.000000, 0.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"红薄色眼镜2", 19032, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.970847, 0.000000, 0.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"黑薄色眼镜2", 19033, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.971062, 0.000000, 0.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"象棋眼镜2", 19034, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.970951, 0.000000, 0.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"蓝薄色眼镜2", 19035, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.972924, 0.000000, 0.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.3, 0, 20, 1},
    {"紫色印花手帕", 18891, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.971574, 105.000000, 0.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"红色印花手帕", 18892, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.970919, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"红白印花手帕", 18893, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.970038, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"橙色印花手帕", 18894, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.969101, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"黑色方巾", 18895, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.968707, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"黑色印花手帕", 18896, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.968218, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"蓝色印花手帕", 18897, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.967771, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"绿色印花手帕", 18898, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.967321, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"粉色印花手帕", 18899, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.966804, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"多色印花手帕", 18900, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.966250, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"棕色印花手帕", 18901, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.965716, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"黄色印花手帕", 18902, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.965270, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"紫色方巾", 18903, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.964753, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"暗蓝印花手帕", 18904, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.956470, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"暗黄方巾", 18905, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.955942, 105.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"橙色方巾", 18906, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.984999, 125.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"多色方巾", 18907, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.984999, 125.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"蓝色印花手帕", 18908, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.984999, 125.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"高亮蓝印花手帕", 18909, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.984999, 125.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"暗橙印花手帕", 18910, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.984999, 125.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"黑色方巾", 18911, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.909999, 60.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"黑色印花手帕", 18912, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.909999, 60.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"绿色印花手帕", 18913, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.909999, 60.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"迷彩方巾", 18914, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.909999, 60.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"多色头巾", 18915, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.909999, 60.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"高亮黄方巾", 18916, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.909999, 60.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"暗蓝方巾", 18917, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.909999, 60.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"灰色方巾", 18918, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.909999, 60.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"灰白方巾", 18919, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.909999, 60.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"棕色印花手帕", 18920, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.909999, 60.000000, 0.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
    {"白金手表1", 19039, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.986551, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
    {"银色手表1", 19040, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.986669, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
    {"白金手表2", 19041, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.986728, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
    {"金色手表", 19042, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.987096, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
    {"银色手表2", 19043, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.987263, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"粉色手表1", 19044, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.987304, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"红色手表", 19045, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.987336, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"绿色手表", 19046, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.987417, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"紫色手表", 19047, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.987625, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"暗蓝色手表", 19048, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.980120, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"彩色手表", 19049, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.980225, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"蓝色手表", 19050, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.980359, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"橙色手表", 19051, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.980880, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"粉色手表2", 19052, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.980487, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"暗棕色手表", 19053, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.981225, -10.000000, 0.000000, 0.000000, 5, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"眼罩", 19085, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.981449, 10.000000, -10.000000, 0.000000, 2, IDX_WATCH_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"单片眼镜", 19349, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.000733, 0.000000, 0.000000, 0.000000, 2, IDX_GLASSES_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"围巾", 19469, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.001285, 150.000000, 80.000000, 0.000000, 2, IDX_BANDANA_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"GIMP面具", 19163, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.927471, -19.500028, 0.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 1, 0.2, 0, 20, 1},
	{"指节铜环", 331, 300, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.027812, 105.000000, 90.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 1, 1, 0.2, 1, 10, 0},
	{"高尔夫球棍", 333, 1400, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.032812, 87.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 2, 1, 0.6, 1, 20, 0},
	{"警棍", 334, 500, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.012812, 91.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 3, 1, 0.8, 1, 20, 0},
	{"匕首", 335, 300, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.022812, 91.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 4, 1, 0.25, 1, 15, 0},
	{"棒球棍", 336, 750, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.012812, 85.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 5, 1, 7.0, 1, 20, 0},
	{"铁锹", 337, 1200, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.915939, 0.000000, 90.400001, 1.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 6, 1, 2.3, 1, 20, 0},
	{"桌球杆", 338, 650, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.917812, 0.000000, 90.000000, 8.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 7, 1, 0.9, 1, 20, 0},
	{"砍刀", 339, 400, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.002812, 85.000000, 45.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 8, 1, 0.7, 1, 50, 0},
	{"电锯", 341, 2200, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.774112, 0.000000, 30.800004, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 9, 1, 60.0, 1, 200, 0},
	{"双头假阳具", 321, 300, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.017812, 90.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 10, 1, 0.75, 1, 35, 0},
	{"假阴茎", 322, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.017812, 90.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 11, 1, 0.15, 1, 20, 1},
	{"振动器", 323, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.058176, -0.299999, -85.300048, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 12, 1, 0.12, 1, 25, 0},
    {"银色振动器", 324, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000000, -0.899559, 0.000000, 94.599945, 6, IDX_STD_ITEM, ITEM_WEAPON, 13, 1, 0.16, 1, 30, 0},
    {"鲜花", 325, 100, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.017812, 70.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 14, 1, 2.4, 1, 10, 0},
    {"拐杖", 326, 350, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.008868, 87.299949, 0.000000, 92.400039, 6, IDX_STD_ITEM, ITEM_WEAPON, 15, 1, 0.4, 1, 15, 0},
    {"手榴弹", 342, 750, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.952812, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 16, 1, 0.35, 1, 0, 0},
    {"催泪瓦斯", 343, 750, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.952812, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 17, 1, 0.4, 1, 0, 0},
    {"燃烧弹", 344, 750, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.810008, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 18, 1, 0.55, 1, 0, 0},
/*	{"柯尔特 1911", 346, 1200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.008431, 86.800071, 96.900001, 89.999992, 6, IDX_STD_ITEM, ITEM_WEAPON, 22, 1, 1.1, 1, 1500, 0},
    {"9mm (消音器)", 347, 1400, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.967008, -85.499946, -84.000022, -91.199996, 6, IDX_STD_ITEM, ITEM_WEAPON, 23, 1, 1.5, 1, 0, 0},
    {"格洛克 .37", 348, 1300, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960035, -89.299995, -11.099970, -6.799968, 6, IDX_STD_ITEM, ITEM_WEAPON, 24, 0, 1.2, 1, 3000, 0},
    {"雷明顿 870", 349, 2050, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.945620, -96.999954, -80.599998, -88.900016, 6, IDX_STD_ITEM, ITEM_WEAPON, 25, 1, 4.1, 1, 2750, 0},
    {"肖欧夫霞弹枪", 350, 1850, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.959289, -87.799957, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 26, 1, 3.4, 1, 0, 0},
    {"耶利哥 941F", 348, 1300, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960035, -89.299995, -11.099970, -6.799968, 6, IDX_STD_ITEM, ITEM_WEAPON, 24, 0, 1.2, 1, 3000, 0},
    {"微型冲锋枪", 352, 1450, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960504, -87.699928, 87.399955, 87.199943, 6, IDX_STD_ITEM, ITEM_WEAPON, 28, 0, 1.2, 1, 0, 0},
    {"MP5", 353, 1900, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.956525, -81.100135, 91.900032, 89.099998, 6, IDX_STD_ITEM, ITEM_WEAPON, 29, 0, 3.2, 1, 0, 0},
    {"AK-47", 355, 2600, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.028826, 95.800003, 99.700012, -98.099998, 6, IDX_STD_ITEM, ITEM_WEAPON, 30, 0, 4.65, 1, 0, 0},
    {"Tec-9", 372, 1800, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.959918, -92.099967, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 32, 0, 1.2, 1, 0, 0},
    {"科尔托猎枪", 357, 2000, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.947113, -83.000000, 85.599990, 85.699974, 6, IDX_STD_ITEM, ITEM_WEAPON, 33, 1, 4.3, 1, 2250, 0},
    {"M24狙击步枪", 358, 3200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.025231, 84.000015, -98.700012, 100.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 34, 1, 6.0, 1, 0, 0},
    {"Sig Pro 9mm", 348, 1300, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960035, -89.299995, -11.099970, -6.799968, 6, IDX_STD_ITEM, ITEM_WEAPON, 24, 0, 1.2, 1, 3000, 0},
    {"AR-15", 356, 2600, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.968295, -94.700141, -83.800010, -82.200012, 6, IDX_STD_ITEM, ITEM_WEAPON, 31, 0, 8.4, 1, 1400, 0},
    {"UMP 45", 353, 1900, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.956525, -81.100135, 91.900032, 89.099998, 6, IDX_STD_ITEM, ITEM_WEAPON, 29, 0, 3.2, 1, 0, 0},
    {"AK-74SU", 355, 2600, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.028826, 95.800003, 99.700012, -98.099998, 6, IDX_STD_ITEM, ITEM_WEAPON, 30, 0, 4.65, 1, 0, 0},
    {"Mac-10", 352, 1450, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960504, -87.699928, 87.399955, 87.199943, 6, IDX_STD_ITEM, ITEM_WEAPON, 28, 0, 1.2, 1, 0, 0},
    {"沙漠之鹰", 348, 1300, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960035, -89.299995, -11.099970, -6.799968, 6, IDX_STD_ITEM, ITEM_WEAPON, 24, 0, 1.2, 1, 3000, 0},*/
    
    {"Colt 1911", 346, 1200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.008431, 86.800071, 96.900001, 89.999992, 6, IDX_STD_ITEM, ITEM_WEAPON, 22, 1, 1.1, 1, 1500, 0},
    {"Silenced 9mm", 347, 1400, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.967008, -85.499946, -84.000022, -91.199996, 6, IDX_STD_ITEM, ITEM_WEAPON, 23, 1, 1.5, 1, 0, 0},
    {"Glock .37", 348, 1300, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960035, -89.299995, -11.099970, -6.799968, 6, IDX_STD_ITEM, ITEM_WEAPON, 24, 0, 1.2, 1, 3000, 0},
    {"Remington 870", 349, 2050, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.945620, -96.999954, -80.599998, -88.900016, 6, IDX_STD_ITEM, ITEM_WEAPON, 25, 1, 4.1, 1, 2750, 0},
    {"Sawnoff Shotgun", 350, 1850, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.959289, -87.799957, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 26, 1, 3.4, 1, 0, 0},
    {"Jericho 941F", 348, 1300, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960035, -89.299995, -11.099970, -6.799968, 6, IDX_STD_ITEM, ITEM_WEAPON, 24, 0, 1.2, 1, 3000, 0},
    {"Micro SMG", 352, 1450, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960504, -87.699928, 87.399955, 87.199943, 6, IDX_STD_ITEM, ITEM_WEAPON, 28, 0, 1.2, 1, 0, 0},
    {"MP5", 353, 1900, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.956525, -81.100135, 91.900032, 89.099998, 6, IDX_STD_ITEM, ITEM_WEAPON, 29, 0, 3.2, 1, 0, 0},
    {"AK-47", 355, 2600, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.028826, 95.800003, 99.700012, -98.099998, 6, IDX_STD_ITEM, ITEM_WEAPON, 30, 0, 4.65, 1, 0, 0},
    {"Tec-9", 372, 1800, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.959918, -92.099967, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 32, 0, 1.2, 1, 0, 0},
    {"Country Rifle", 357, 2000, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.947113, -83.000000, 85.599990, 85.699974, 6, IDX_STD_ITEM, ITEM_WEAPON, 33, 1, 4.3, 1, 2250, 0},
    {"M24 Sniper Rifle", 358, 3200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.025231, 84.000015, -98.700012, 100.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 34, 1, 6.0, 1, 0, 0},
    {"Sig Pro 9mm", 348, 1300, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960035, -89.299995, -11.099970, -6.799968, 6, IDX_STD_ITEM, ITEM_WEAPON, 24, 0, 1.2, 1, 3000, 0},
    {"AR-15", 356, 2600, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.968295, -94.700141, -83.800010, -82.200012, 6, IDX_STD_ITEM, ITEM_WEAPON, 31, 0, 8.4, 1, 1400, 0},
    {"UMP 45", 353, 1900, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.956525, -81.100135, 91.900032, 89.099998, 6, IDX_STD_ITEM, ITEM_WEAPON, 29, 0, 3.2, 1, 0, 0},
    {"AK-74SU", 355, 2600, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.028826, 95.800003, 99.700012, -98.099998, 6, IDX_STD_ITEM, ITEM_WEAPON, 30, 0, 4.65, 1, 0, 0},
    {"Mac-10", 352, 1450, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960504, -87.699928, 87.399955, 87.199943, 6, IDX_STD_ITEM, ITEM_WEAPON, 28, 0, 1.2, 1, 0, 0},
    {"Desert Eagle", 348, 1300, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960035, -89.299995, -11.099970, -6.799968, 6, IDX_STD_ITEM, ITEM_WEAPON, 24, 0, 1.2, 1, 3000, 0},
    
    {"喷漆罐", 365, 275, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.850008, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 41, 1, 0.3, 1, 20, 0},
    {"震爆枪", 349, 2050, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.945620, -96.999954, -80.599998, -88.900016, 6, IDX_STD_ITEM, ITEM_WEAPON, 25, 1, 4.1, 1, 2750, 0},
    {"SWAT 防弹衣", 19142, 175, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.069615, -0.200002, -88.499992, 0.000000, 1, IDX_VEST, ITEM_CLOTHING, 0, 0, 0.4, 1, 0, 0},
    {"SWAT 头盔", 19141, 175, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.069615, -0.200002, -88.499992, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 0, 0.4, 1, 0, 0},
    {"飞行帽", 19520, 250, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.934603, -10.499992, -90.099975, -2.600000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 0, 0.4, 0, 0, 0},
    {"黄色消防帽", 19330, 950, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.898995, 0.000000, -87.300003, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 0, 0.8, 0, 0, 0},
    {"黑色消防帽", 19331, 950, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.898995, 0.000000, -87.300003, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 0, 0.8, 0, 0, 0},
    {"摩托罗拉 APX 4000 无线电", NON_OBJ_ITEM, 650, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.993749, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 0, 0.75, 1, 0, 0},
    {"手铐", 19418, 245, 1, 0.149000, 0.000000, 0.042999, 0.000000, 0.300001, 0.000000, -1.004051, -85.600067, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.75, 1, 0, 0},
    {"防暴盾牌", 18637, 1100, 0, 0.084999, 0.048000, -0.021000, 100.100006, 8.399998, 150.199951, -1.060005, 0.000000, 0.000000, 0.000000, 1, IDX_LEFT_ARM_ITEM, ITEM_STD, 0, 0, 1.0, 1, 0, 0},
    {"警用头盔", 19200, 950, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.909861, 0.000000, -88.999984, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 0, 0.7, 1, 0, 0},
    {"警帽", 18636, 175, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.969573, 0.000000, 0.000000, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 0, 0.3, 1, 0, 0},
    {"防毒面具", 19472, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.920902, -3.300001, -89.200004, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 0, 0.4, 1, 0, 0},
    {"棕色警帽", 19100, 200, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.939828, -3.599999, -91.100044, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 0, 0.4, 1, 0, 0},
    {"黑色警帽", 19161, 175, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.019018, 3.699997, -88.499969, 0.000000, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 0, 0.3, 1, 0, 0},
    {"车间帽", 19521, 175, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948040, -12.199997, -90.600013, 0.699999, 2, IDX_HAT_ITEM, ITEM_CLOTHING, 0, 0, 0.3, 1, 0, 0},
    {"垃圾袋", 1265, 265, 0, 0.169000, 0.470999, 0.123999, -83.999961, -13.600013, 58.799987, -0.532383, 0.000000, 0.000000, 0.000000, 5, IDX_STD_ITEM, ITEM_STD, 0, 1, 10.5, 0, 0, 0},
    {"箱子", 2912, 850, 0, 0.072000, 0.412999, -0.121000, 9.499998, 9.599999, 9.099998, -1.009429, 0.000000, 0.000000, 0.000000, 5, IDX_STD_ITEM, ITEM_STD, 0, 1, 650.0, 0, 0, 0},
    {"电击器", 347, 1400, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.967008, -85.499946, -84.000022, -91.199996, 6, IDX_STD_ITEM, ITEM_WEAPON, 23, 1, 3.5, 1, 0, 0},
    {"徽章", 19347, 175, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.948040, -12.199997, -90.600013, 0.699999, 1, IDX_BADGE_ITEM, ITEM_CLOTHING, 0, 0, 0.3, 1, 0, 0},
    {"伏特加", 1544, 960, 0, 0.067999, 0.024000, -0.233000, 0.000000, 0.000000, 0.000000, -1.030007, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 0, 0.25, 0, 2, 0},
    {"红葡萄酒", 1543, 960, 0, 0.080999, 0.024999, -0.238000, 0.000000, 0.000000, 0.000000, -1.002208, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 0, 0.25, 0, 4, 0},
    {"鸡尾酒", 1487, 960, 0, 0.062000, 0.030999, -0.066999, 0.000000, 0.000000, 0.000000, -0.801845, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 0.25, 0, 2, 0},
    {"威士忌", 1484, 960, 0, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1.035774, 0.000000, -58.199970, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 0, 0.25, 0, 8, 0},
    {"龙舌兰", 1484, 960, 0, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -1.035774, 0.000000, -58.199970, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 0, 0.25, 0, 9, 0},
    {"轩诗尼", 1543, 960, 0, 0.080999, 0.024999, -0.238000, 0.000000, 0.000000, 0.000000, -1.002208, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 0, 0.25, 0, 5, 0},
    {"红色音响", 2226, 1215, 0, 0.407999, 0.000000, 0.010999, -0.699999, -89.599983, 0.000000, -1.010009, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 40.0, 0, 345, 0},
    {"黑色音响", 2102, 1215, 0, 0.379999, 0.000000, 0.000999, 0.000000, -87.700035, 0.000000, -1.010375, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 40.0, 0, 345, 0},
    {"银色音响", 2103, 1315, 0, 0.527999, 0.000000, 0.051999, 0.000000, -92.900024, 0.000000, -1.010375, 0.000000, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_STD, 0, 1, 55.0, 0, 345, 0},
	{"Beretta 92FS", 348, 1300, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.960035, -89.299995, -11.099970, -6.799968, 6, IDX_STD_ITEM, ITEM_WEAPON, 24, 0, 1.2, 1, 2700, 0},
    {"KG-9", 372, 1800, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.959918, -92.099967, 0.000000, 0.000000, 6, IDX_STD_ITEM, ITEM_WEAPON, 32, 0, 1.2, 1, 0, 0},
    {"AK-M", 355, 2600, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.028826, 95.800003, 99.700012, -98.099998, 6, IDX_STD_ITEM, ITEM_WEAPON, 30, 0, 4.65, 1, 0, 0}
};

new WeaponData[][weaponEnum] =
{
	{0, 0, 0, 0, 0, 0, 5},
	{188, 0, 0, 0, 0, 0, 8},
	{189, 0, 0, 0, 0, 0, 10},
	{190, 0, 0, 0, 0, 0, 10},
	{191, 0, 0, 0, 0, 0, 0},
	{192, 0, 0, 0, 0, 0, 10},
	{193, 0, 0, 0, 0, 0, 10},
    {194, 0, 0, 0, 0, 0, 10},
    {195, 0, 0, 0, 0, 0, 0},
    {196, 0, 0, 0, 0, 0, 0},
    {197, 0, 0, 0, 0, 0, 6},
    {198, 0, 0, 0, 0, 0, 6},
    {199, 0, 0, 0, 0, 0, 6},
    {200, 0, 0, 0, 0, 0, 6},
    {201, 0, 0, 0, 0, 0, 0},
    {202, 0, 0, 0, 0, 0, 10},
    {203, 0, 0, 0, 0, 0, 0},
    {204, 0, 0, 0, 0, 0, 0},
    {205, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0},
    {206, 1, 1, 7, 0, 17, 0},
    {207, 1, 1, 7, 0, 17, 30},
    {208, 1, 1, 7, 0, 17, 35},
    {209, 1, 3, 4, 1, 19, 60},
    {210, 1, 3, 2, 1, 19, 0},
    {211, 1, 3, 12, 1, 19, 0},
    {212, 1, 2, 30, 0, 18, 15},
    {213, 1, 2, 30, 1, 18, 20},
    {214, 1, 2, 30, 1, 18, 35},
    {30, 1, 2, 30, 1, 18, 25},
    {215, 1, 2, 30, 1, 18, 15},
    {216, 1, 3, 2, 1, 19, 40},
    {217, 1, 1, 7, 1, 17, 100},
    {218, 0, 0, 0, 0, 0, 0},
    {219, 0, 0, 0, 0, 0, 0},
    {220, 0, 0, 0, 0, 0, 0},
    {221, 0, 0, 0, 0, 0, 0},
    {222, 0, 0, 0, 0, 0, 0},
    {223, 0, 0, 0, 0, 0, 0},
    {224, 0, 0, 100, 0, 0, 3},
    {225, 0, 0, 100, 0, 0, 3},
    {14, 0, 0, 15, 0, 0, 0},
    {226, 0, 0, 0, 0, 0, 0},
    {227, 0, 0, 0, 0, 0, 0}
};

new DeathReasons[][] = {
	"Fists", "Brass Knuckles", "Golf Club", "Baton", "Knife", "Baseball Bat", "Shovel", "Pool Cue", "Katana", "Chainsaw", "Purple Dildo", "Small White Vibrator", "Large White Vibrator",
	"Silver Vibrator", "Flowers", "Cane", "Grenade", "Tear Gas", "Molotov Cocktail", "Unknown", "Unknown", "Unknown", "Colt 1911", "Silenced 9mm", "Glock .37", "Remington 870", "Sawn-off Shotgun",
	"Combat Shotgun", "Micro SMG", "MP5", "AK-47", "M4", "Tec9", "Country Rifle", "M24 Sniper Rifle", "Rocket Launcher", "Heat Seeking Rocket Launcher", "Flamethrower", "Minigun",
	"Satchel Charge", "Detonator", "Spraycan", "Fire Extinguisher", "Camera", "Nightvision Goggles", "Thermal Goggles", "Parachute", "Fake Pistol", "Unknown", "Vehicle", "Helicopter Blades",
	"Explosion", "Unknown", "Drowned", "Splat"
};

new MaleSkins[] = {
	1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61,
	62, 66, 67, 68, 72, 73, 78, 79, 80, 81, 82, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 137, 142, 143, 144, 146, 147, 149, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 200, 202, 203, 204, 206, 208, 209, 210, 212, 213, 217, 220, 221, 222, 223, 227, 228, 229,
	230, 234, 235, 236, 239, 240, 241, 242, 247, 248, 249, 250, 252, 253, 254, 255, 258, 259, 260, 261, 262, 264, 268, 269, 270, 271, 272, 273, 289, 290, 291, 292, 293, 294, 295, 296,
	297, 299, 303, 304, 305
};

new FemaleSkins[] = {
	9, 10, 11, 12, 13, 31, 38, 39, 40, 41, 53, 54, 55, 56, 63, 64, 65, 69, 75, 76, 77, 85, 87, 88, 89, 90, 91, 92, 93, 129, 130, 131, 138, 139, 140, 141, 145, 148, 150, 151, 152, 157,
	169, 172, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 205, 207, 211, 214, 215, 216, 218, 219, 224, 225, 226, 231, 232, 233, 237, 238, 243, 244, 245, 246, 251, 256,
	257, 263, 298
};

new RentalInfo[][rentalEnum] = {
	{509, 18, 0},
	{510, 21, 0},
	{462, 46, 1},
	{436, 74, 1},
	{478, 86, 1},
	{479, 83, 1},
	{527, 78, 1},
	{529, 89, 1},
	{543, 87, 1},
	{547, 92, 1},
	{459, 98, 1}
};

new radiochannels[][radioEnum] =
{
	{"Zero Pirates - ROCK", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99181794"},
	{"1.FM ROCK CLASSICS", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=387127"},
	{"181.fm - Rock 40", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=45402"},
	{"Classic Hits 931 - ROCK", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99179454"},
	{"Alt Rock 101", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99179940"},
	{"Altantis.fm Rock", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99180711"},
	{"Rock'n Roll", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=302893"},
	{"East Coast Hip Hop 90's", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99190752"},
	{"G'D UP RADIO", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=60607"},
	{"2 Pac - Forum Radio", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=281301"},
	{"HOT 108 JAMZ", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=8318"},
	{"POWERHITZ", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=107949"},
	{"Classic Rap", "hhttp://yp.shoutcast.com/sbin/tunein-station.pls?id=99179304"},
	{"FLOW 103 - HIP HOP and R&B", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=293191"},
	{"Reggaeton & Hip Hop", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=156395"},
	{"Hot Jamz Radio", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=54072"},
	{"Its a Trap Radio", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99183630"},
	{"South Florida Hip Hop", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99181917"},
	{"Dutch Trap & Hip Hop", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99182109"},
	{"HipHop Substance Radio", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99189639"},
	{"Balkan Hip-Hop Radio", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1660804"},
	{"Radio Face", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=112201"},
	{"Radio Star DJ Hip Hop", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=157288"},
	{"PulsRadio", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=2000"},
	{"181.FM", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=221706"},
	{"Dubstep.fm", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=379239"},
	{"Massive Dubstep", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=40568"},
	{"VW Electronica", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99179850"},
	{"Dancetime.FM - Feel Alive!", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=230209"},
	{"#MUSIK.HOUSE (FUNKY)", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99194448"},
	{"((:( CLUBKYDZ ):))", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=55929"},
	{"1.FM - CLUB ONE RADIO", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=611"},
	{"Austria AlpenRadio", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=321467"},
	{"AddictedToRadio.com ", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=139019"},
	{"100.9 The Farm", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1495902"},
	{"181.FM - Lite 80's", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=167565"},
	{"80's & Disco", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99180156"},
	{"A 80's", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99180243"},
	{"Back To The 80's Radio!", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=347"},
	{"181.FM - Star 90's", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=237536"},
	{"A90's", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=99180714"},
	{"XMR 90's Rock", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=9492111"},
	{"KQSA", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=71401"}
};

new Float:atms[][] = {
	{1925.3745, -1764.7737, 13.5391},
	{2476.5952, -1746.9703, 13.5469},
	{2390.1189, -1915.9060, 13.5469},
	{2051.0750, -1898.7427, 13.5469},
	{1752.8748, -1864.4607, 13.5738},
	{2417.8826, -1220.3987, 25.3400},
	{2417.8826, -1220.3987, 25.3400},
	{2135.7439, -1152.3331, 23.9922},
	{1617.2559, -1169.1750, 24.0781},
	{386.0391, -1815.9031, 7.8405},
	{1346.0870, -1757.9296, 13.5156},
	{1321.8931, -898.9572, 39.5781},
	{766.4843, -1386.6440, 13.6595},
	{1163.7455, -1765.5869, 13.6159},
	{-34.4530, -90.5970, 1003.5469},
	{-32.7232, -56.7089, 1003.5469},
	{-34.1389, -30.0385, 1003.5573},
	{-4.2285, -30.1119, 1003.5494},
	{1251.2477, -1810.7310, 1464.4860},
	{1406.9257, -1033.2058, 3423.6860},
	{1407.1835, -1035.5967, 3423.6860},
	{1251.9666, -1811.2246, 1464.4860},
	{1251.7947, -1810.1423, 1464.4860},
	{1301.0000000, 299.6000061, 19.1000004},
	{1381.9000244, 466.1000061, 19.7999992},
	{223.1999969, -192.3999939, 1.2000000},
	{242.3999939, -52.2999992, 1.2000000},
	{661.2999878, -553.9000244, 16.0000000},
	{703.0000000, -494.7999878, 16.0000000},
	{57.5000000, 1211.6999512, 18.5000000},
	{-136.5000000, 1173.0996094, 19.3999996},
	{-861.5999756, 1536.5000000, 22.2000008},
	{-2489.6999512, 2341.3999023, 4.5999999},
	{-1505.5999756, 2612.1000977, 55.5000000},
	{2316.1000977, -88.4000015, 26.1000004},
	{-2316.5454, -1636.8324, 483.2516}
};

new Float:mdcs[][] = {
	{234.8459,111.1918,1003.2257},
    {237.1826,122.8153,1003.2188},
    {237.1542,125.6777,1003.2188},
    {234.1734,122.6806,1003.2188},
    {234.1729,125.6848,1003.2188},
    {226.1109,110.5719,1003.2188},
    {228.7008,114.7017,1003.2225},
    {231.0738,114.2299,1003.2188},
    {230.7594,110.3544,1003.2188},
    {219.6950,114.7695,1003.2188},
    {215.7812,114.6276,1003.2188},
    {216.0815,111.3302,1003.2188},
    {218.0843,111.3303,1003.2188},
    {222.7840,107.6813,1003.2188},
    {222.6175,109.7037,1003.2197},
    {223.4786,122.6182,999.0156},
    {223.4751,121.0223,999.0819},
    {226.3924,119.3347,999.0492},
    {219.2828,110.8840,1010.2118},
    {221.5220,109.2034,1010.2188},
    {224.8172,109.2034,1010.2188},
    {257.1187,114.1122,1008.8203}
};

new businessData[][intDataEnum] = {
	{5, 770.8033, -0.7033, 1000.7267, 22.8599, "Gym", -1},
	{3, 974.0177, -9.5937, 1001.1484, 22.6045, "Brothel", -1},
	{3, 961.9308, -51.9071, 1001.1172, 95.5381, "Brothel 2", -1},
	{3, 832.6550, 7.7432, 1004.1797, 89.4913, "Inside Track Betting", -1},
	{3, 1037.8276, 0.397, 1001.2845, 353.9335, "Blastin' Fools Records", -1},
	{3, 1212.1489, -28.5388, 1000.9531, 170.5692, "The Big Spread Ranch", -1},
	{3, 418.5903, -82.6228, 1001.8047, 358.5892, "Barber Shop", -1},
	{3, 207.1511, -138.6574, 1003.5078, 359.0279, "Pro-Laps", -1},
	{3, -100.2674, -22.9376, 1000.7188, 17.285, "Sex Shop", -1},//-104.0012, -24.3850, 1000.7732, -180.0
	{3, -204.0974, -42.9398, 1002.2734, 356.0408, "Las Venturas Tattoo parlor", -1},
	{17, -203.8164, -8.0566, 1002.2734, 335.5573, "Lost San Fierro Tattoo parlor", -1},
	{17, -25.7220, -187.8216, 1003.5469, 5.0760, "24/7 (version 1)", -1},
	{5, 443.1863, -105.7209, 999.5372, 266.0924, "Diner 1", -1},
	{5, 372.5565, -131.3607, 1001.4922, 354.2285, "Pizza Stack", -1},
	{17, 377.0208, -191.9405, 1000.6328, 359.4198, "Rusty Brown's Donuts", -1},
	{7, 314.9279, -142.1312, 999.6016, 44.6863, "Ammunation", -1},
	{5, 225.0306, -9.1838, 1002.218, 85.5322, "Victim", -1},
	{10, 6.0856, -28.8966, 1003.5494, 5.0365, "24/7 (version 2 - large)", -1},
	{7, 773.7318, -74.6957, 1000.6542, 5.2304, "Below The Belt Gym (Las Venturas)", -1},
	{1, 445.6003, -6.9823, 1000.7344, 172.2105, "World of Coq", -1},
	{1, 285.8361, -39.0166, 1001.5156, 0.7529, "Ammu-nation (version 2)", -1},
	{1, 204.1174, -46.8047, 1001.8047, 357.5777, "SubUrban", -1},
	{2, 1204.6689, -13.5429, 1000.9219, 350.0204, "The Pig Pen (strip club 2)", -1},
	{10, 2016.1156, 1017.1541, 996.875, 88.0055, "Four Dragons", -1},
	{10, 366.0248, -73.3478, 1001.5078, 292.0084, "Burger shot", -1},
	{1, 2233.9363, 1711.8038, 1011.6312, 184.3891, "Caligula's Casino", -1},
	{2, 411.8862, -21.9847, 1001.8047, 356.9562, "Barber Shop 2 (Reece's)", -1},
	{18, -30.9875, -89.6806, 1003.5469, 359.8401, "24/7 (version 3)", -1},
	{18, 161.4048, -94.2416, 1001.8047, 0.7938, "Zip", -1},
	{3, -2636.6672, 1404.6567, 906.4609, 359.7385, "The Pleasure Domes", -1},
	{2, 2542.1589, -1303.7170, 1025.0703, 266.9318, "Big Smoke's Crack Palace", -1},
	{1, -2158.5833, 642.0964, 1052.3750, 176.4910, "Wu-Zi Mu's", -1},
	{14, 204.3731, -166.4377, 1000.5234, 1.3000, "Didier Sachs", -1},
	{12, 1133.1376, -13.5431, 1000.6797, 358.2367, "Casino (Redsands West)", -1},
	{17, 493.1443, -24.2607, 1000.6797, 356.9864, "Alhambra", -1},
	{16, -204.2934, -26.3658, 1002.2734, 358.7231, "Los Angeles Tattoo Parlor", -1},
	{16, -26.1856, -140.9164, 1003.5469, 2.9087, "24/7 (version 4)", -1},
	{15, 2217.281, -1150.5349, 1025.7969, 273.7328, "Jefferson Motel", -1},
	{1, 681.5249, -451.6523, -25.6172, 179.3730, "The Welcome Pump", -1},
	{15, 207.5219, -109.7448, 1005.1328, 358.62, "Binco", -1},
	{18, -227.5703, 1401.5544, 27.7656, 269.2978, "Lil' Probe Inn", -1},
	{4, 285.6100, -84.7953, 1001.5156, 359.4669, "Ammu-nation (version 3)", -1},
	{4, 459.1434, -88.9813, 999.5547, 89.3475, "Jay's Diner", -1},
	{4, -27.844, -26.6737, 1003.5573, 184.3118, "24/7 (version 5)", -1},
	{1, 964.2291, 2160.3606, 1011.0303, 89.4589, "Sindacco Abatoir", -1},
	{12, 411.9386, -53.3502, 1001.8984, 359.1533, "Barber Shop 3", -1},
	{6, 773.8887, -47.7698, 1000.5859, 10.7161, "Cobra Gym", -1},
	{3, 1494.7192, 1304.6188, 1093.2891, 1.8925, "Bike School", -1},
	{6, -2240.1028, 136.973, 1035.4141, 269.0954, "Zero's RC Shop", -1},
	{6, 297.144, -109.8702, 1001.5156, 20.2254, "Ammu-nation (version 4)", -1},
	{6, 316.5025, -167.6272, 999.5938, 10.3031, "Ammu-nation (version 5)", -1},
	{6, 442.1295, -52.4782, 999.7167, 177.9394, "Secret Valley Diner", -1},
	{2, 2189.6060, 1622.9275, 1043.4104, 359.5947, "Rosenberg's Office in Caligulas", -1},
	{6, 744.2952, 1437.3826, 1102.7031, 356.8468, "Fanny Batter's Whore House", -1},
	{9, 364.9312, -10.3085, 1001.8516, 358.8699, "Cluckin' Bell", -1},
	{3, -2029.6740, -118.3983, 1035.1719, 7.9219, "Driving School", -1},
	{11, 501.9578, -70.5648, 998.7578, 171.5706, "Bar", -1},
	{1, 2331.5408, -1783.5026, 1724.0759, 271.0361, "Sports Shop", -1},
	{1, -794.6364, 491.9909, 1376.1953, 0.9400, "Liberty City Restaurant", -1},
	{1, 1100.2360, -3.3023, 1019.4659, 92.6025, "Irish Pub", -1},
	{0, 2014.2883, 1345.3920, 107.4834, 88.7678, "Modern Club Interior", -1},
	{6, -26.8339, -55.5846, 1003.5469, 3.9528, "24/7 (version 5)", -1},
	{0, 2296.3315, 1302.9165, 11.7676, 0.0, "Modern Furniture", -1},
	{0, 2218.4929, 1678.2880, 1008.4016, 0.0, "Police Academy (Interior)", -1}
};

new businessItems[][] = {
	{0},
	{244, 245, 246, 247, 248, 249, 28, 0},
	{244, 245, 246, 247, 248, 249, 28, 0},
	{0},
	{0},
	{244, 245, 246, 247, 248, 249, 28, 0},
	{0},
	{0}, // Clothes
	{198, 199, 200, 197, 0},
	{0},
	{0},
	{3, 15, 16, 20, 21, 24, 25, 201, 0},
	{26, 27, 246, 28, 0},
	{26, 27, 246, 28, 0},
	{26, 27, 246, 28, 0},
	{208, 206, 209, 216, 17, 19, 0},
	{0}, // Clothes
	{3, 15, 16, 20, 21, 24, 25, 201, 0},
	{0},
	{0},
	{208, 206, 209, 216, 17, 19, 0}, // gun store
	{0}, // Clothes
	{244, 245, 246, 247, 248, 249, 28, 0},
	{244, 245, 246, 247, 248, 249, 28, 0},
	{26, 27, 246, 28, 0},
	{244, 245, 246, 247, 248, 249, 28, 0},
	{0},
	{3, 15, 16, 20, 21, 24, 25, 201, 0},
	{0}, // Clothes
	{244, 245, 246, 247, 248, 249, 28, 0},
	{0},
	{0},
	{0}, // Clothes
	{244, 245, 246, 247, 248, 249, 28, 0},
	{244, 245, 246, 247, 248, 249, 28, 0},
	{0},
	{3, 15, 16, 20, 21, 24, 25, 201, 0},
	{0},
	{244, 245, 246, 247, 248, 249, 28, 0},
	{0}, // Clothes
	{244, 245, 246, 247, 248, 249, 28, 0},
	{208, 206, 209, 216, 17, 19, 0},
	{26, 27, 246, 28, 0},
	{3, 15, 16, 20, 21, 24, 25, 201, 0},
	{0},
	{0},
	{0},
	{0},
	{4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 193, 250, 251, 252, 0},
	{208, 206, 209, 216, 17, 19, 0},
	{208, 206, 209, 216, 17, 19, 0},
	{3, 15, 16, 20, 21, 24, 25, 201, 0},
	{26, 27, 246, 28, 0},
	{0},
	{244, 245, 246, 247, 248, 249, 28, 0},
	{26, 27, 246, 28, 0},
	{0},
	{244, 245, 246, 247, 248, 249, 28, 0},
	{1, 194, 192, 189, 202, 0},
	{244, 245, 246, 247, 248, 249, 28, 0},
	{244, 245, 246, 247, 248, 249, 28, 0}
};

new houseData[][intDataEnum] = {
	{2, 1521.3774, -47.9412, 1002.1310, 269.7825, "B Dup's Crack Palace", -1},
	{3, 516.7811, -14.4919, 1001.5653, 359.9041, "OG Loc's House", -1},
	{1, 244.6894, 305.0296, 999.1484, 268.2159, "Denise's Bedroom", -1},
	{3, 291.6850, 309.9722, 999.1484, 93.0609, "Helena's Barn", -1},
	{5, 322.2575, 303.5451, 999.1484, 357.9750, "Barbara's Love nest", -1},
	{2, 2467.5305, -1698.2900, 1013.5078, 89.3008, "Ryder's house", -1},
	{1, 2525.2314, -1679.3997, 1015.4986, 270.6991, "Sweet's House", -1},
	{3, 2496.0269, -1693.1582, 1014.7422, 180.1683, "The Johnson House", -1},
	{2, 267.6065, 305.0040, 999.1484, 271.6625, "Katie's Lovenest", -1},
	{2, 1.5301, -3.1218, 999.4284, 91.8075, "Angel Pine Trailer", -1},
	{5, 1261.7203, -785.3524, 1091.9063, 267.2993, "Madd Dogg's Mansion", -1},
	{5, 2351.7104, -1180.9335, 1027.9766, 89.6375, "Burning Desire Building", -1},
	{10, 421.2976, 2536.4780, 10.0000, 88.3842, "Abandoned AC tower", -1},
	{5, 2233.6367, -1114.1604, 1050.8828, 359.3967, "Safe House group 1", -1},
	{6, 2333.1372, -1076.2625, 1049.0234, 359.0365, "Safe House group 2", -1},
	{9, 2317.7263, -1025.7103, 1050.2178, 359.9999, "Safe House group 3", -1},
	{10, 2260.3652, -1135.8866, 1050.6328, 270.4092, "Safe House group 4", -1},
	{3, 235.2123, 1187.8346, 1080.2578, 0.0234, "Burglary House X1", -1},
	{2, 225.4907, 1239.9020, 1082.1406, 90.8674, "Burglary House X2", -1},
	{1, 223.1965, 1287.8779, 1082.1406, 358.7467, "Burglary House X3", -1},
	{5, 227.3771, 1114.1902, 1080.9984, 270.6993, "Burglary House X4", -1},
	{15, 295.0659, 1473.0923, 1080.2578, 1.2534, "4 Burglary houses", -1},
	{12, 446.6425, 507.4056, 1001.4195, 1.5667, "Budget Inn Motel Room", -1},
	{2, 447.0198, 1397.8021, 1084.3047, 359.0600, "Pair of Burglary Houses", -1},
	{5, 318.5706, 1115.6407, 1083.8828, 359.0833, "Crack Den", -1},
	{4, 261.0234, 1287.1184, 1080.2578, 358.4567, "Burglary House X12", -1},
	{4, 306.1966, 307.819, 1003.3047, 203.1354, "Michelle's Love Nest", -1},
	{10, 23.9336, 1340.8634, 1084.3750, 4.0967, "Burglary House X14", -1},
	{4, 221.7630, 1140.8862, 1082.6094, 1.2767, "Burglary House X13", -1},
	{12, 2324.3413, -1148.5531, 1050.7101, 358.1435, "Unused Safe House", -1},
	{6, 344.8470, 304.9991, 999.1484, 268.8191, "Millie's Bedroom", -1},
	{4, -261.4442, 1456.6102, 1084.3672, 89.6142, "Burglary House X15", -1},
	{5, 22.7900, 1403.9451, 1084.4297, 0.9400, "Burglary House X16", -1},
	{5, 140.1955, 1367.6368, 1083.8618, 0.6500, "Burglary House X17", -1},
	{6, 234.1192, 1064.6741, 1084.2108, 358.4333, "Burglary House X18", -1},
	{6, -68.8671, 1352.2137, 1080.2109, 359.3967, "Burglary House X19", -1},
	{15, -284.5055, 1470.9626, 1084.3750, 89.9276, "Burglary House X20", -1},
	{8, 2807.5532, -1173.7344, 1025.5703, 3.7827, "Colonel Furhberger's", -1},
	{1, 2217.3459, -1076.2615, 1050.4844, 87.7342, "The Camel's Toe Safehouse", -1},
	{8, -42.5810, 1406.7134, 1084.4297,  0.0233, "Burglary House X21", -1},
	{9, 82.9821, 1323.1594, 1083.8662, 0.0000, "Burglary House X22", -1},
	{9, 260.7421, 1238.2261, 1084.2578, 0.0000, "Burglary House X23", -1},
	{7, 225.7951, 1022.7686, 1084.0139, 360.0000, "Burglary House X24", -1},
	{15, 327.9575, 1478.5406, 1084.4375, 359.0600, "Burglary House X25", -1},
	{15, 385.9644, 1471.7802, 1080.1875, 88.6742, "Burglary House X26", -1},
	{9, 2254.2551, -1139.9379, 1050.6328, 90.2410, "Golden Bed Motel Room", -1},
	{10, 2269.2085, -1210.5094, 1047.5625, 88.9875, "Hashbury House", -1},
	{8, 2365.2161, -1134.4622, 1050.8750, 359.0599, "Verdant Bluffs Safehouse", -1},
	{6, 2308.8196, -1212.1652, 1049.0234, 358.1433, "Burglary House X28", -1},
	{2, 2237.5269, -1080.7817, 1049.0234, 358.1433, "Burglary House X29", -1},
	{6, 2195.8557, -1204.2797, 1049.0234, 89.6142, "Burglary House X30", -1},
	{15, 376.2472, 1417.3671, 1081.3281, 89.3008, "Burglary House X31", -1},
	{0, 1054.4662,1048.5332, 1201.4961, 86.6489, "Custom Ghetto House - One Floor", -1},
	{0, 1054.1781,1048.6232, 1205.3561, 91.4147, "Modern Apartment - One Floor", -1},
 	{0, 301.8794,-1607.8965, 96.3535, 89.6608, "GTA V Style Interior - Single Use", -1},
 	{0, 1332.7844,-635.2563, 108.8556, 198.0751, "Mulloholland House - Single Use", -1},
 	{0, 325.2129, -562.5135, -20.8840, 198.0751, "Small Apartment House", -1},
 	{1, 1415.6283, 3.5881, 1001.8276, -90.0, "Blank Interior", -1}
};

new vehicleComponents[][componentEnum] = {
	{"Pro Spoiler", 1, 1450, 0},
	{"Win Spoiler", 1, 1450, 0},
	{"Drag Spoiler", 1, 1450, 0},
	{"Alpha Spoiler", 1, 1450, 0},
	{"Champ Scoop Hood", 1, 650, 1},
	{"Fury Scoop Hood", 1, 650, 1},
	{"Roof Scoop", 1, 975, 2},
	{"Sideskirt", 1, 1150, 3},
	{"5x Nitro", 0, 5650, 5},
	{"2x Nitro", 0, 5650, 5},
	{"10x Nitro", 0, 5650, 5},
	{"Race Scoop Hood", 1, 650, 1},
	{"Worx Scoop Hood", 1, 650, 1},
	{"Round Fog Lamps", 1, 475, 4},
	{"Champ Spoiler", 1, 1450, 0},
	{"Race Spoiler", 1, 1450, 0},
	{"Worx Spoiler", 1, 1450, 0},
	{"Left Sideskirt", 0, 1150, 3},
	{"Upswept Exhaust", 1, 1750, 6},
	{"Twin Exhaust", 1, 1750, 6},
	{"Large Exhaust", 1, 1750, 6},
	{"Medium Exhaust", 1, 1750, 6},
	{"Small Exhaust", 1, 1750, 6},
	{"Fury Spoiler", 1, 1450, 0},
	{"Square Fog Lamps", 1, 475, 4},
	{"Offroad Wheels", 1, 1675, 7},
	{"Alien Sideskirt", 1, 1150, 3},
	{"Left Alien Sideskirt", 0, 1150, 3},
	{"Alien Exhaust", 1, 1750, 6},
	{"X-Flow Exhaust", 1, 1750, 6},
	{"Left X-Flow Sideskirt", 0, 1150, 3},
	{"X-Flow Sideskirt", 1, 1150, 3},
	{"Alien Roof Vent", 1, 975, 2},
	{"X-Flow Roof Vent", 1, 975, 2},
	{"Alien Exhaust", 1, 1750, 6},
	{"X-Flow Roof Vent", 1, 975, 2},
	{"Alien Sideskirt", 1, 1150, 3},
	{"X-Flow Exhaust", 1, 1750, 6},
	{"Alien Roof Vent", 1, 975, 2},
	{"X-Flow Sideskirt", 1, 1150, 3},
	{"Left Alien Sideskirt", 0, 1150, 3},
	{"X-Flow Sideskirt", 1, 1150, 3},
	{"Chrome Sideskirt", 1, 1150, 3},
	{"Slamin Exhaust", 1, 1750, 6},
	{"Chrome Exhaust", 1, 1750, 6},
	{"X-Flow Exhaust", 1, 1750, 6},
	{"Alien Exhaust", 1, 1750, 6},
	{"Alien Sideskirt", 1, 1150, 3},
	{"X-Flow Sideskirt", 1, 1150, 3},
	{"Alien Spoiler", 1, 1450, 0},
	{"X-Flow Spoiler", 1, 1450, 0},
	{"Left Alien Sideskirt", 0, 1150, 3},
	{"Left X-Flow Sideskirt", 0, 1150, 3},
	{"X-Flow Roof", 1, 975, 2},
	{"Alien Roof", 1, 975, 2},
	{"Alien Roof", 1, 975, 2},
	{"Alien Sideskirt", 1, 1150, 3},
	{"X-Flow Sideskirt", 1, 1150, 3},
	{"Alien Spoiler", 1, 1450, 0},
	{"X-Flow Exhaust", 1, 1750, 6},
	{"X-Flow Spoiler", 1, 1450, 0},
	{"X-Flow Roof", 1, 975, 2},
	{"Left Alien Sideskirt", 0, 1150, 3},
	{"Left X-Flow Sideskirt", 0, 1150, 3},
	{"Alien Exhaust", 1, 1750, 6},
	{"Alien Exhaust", 1, 1750, 6},
	{"X-Flow Exhaust", 1, 1750, 6},
	{"Alien Roof", 1, 975, 2},
	{"X-Flow Roof", 1, 975, 2},
	{"Alien Sideskirt", 1, 1150, 3},
	{"X-Flow Sideskirt", 1, 1150, 3},
	{"Left Alien Sideskirt", 0, 1150, 3},
	{"Left X-Flow Sideskirt", 0, 1150, 3},
	{"Shadow Wheels", 1, 1675, 7},
	{"Mega Wheels", 1, 1675, 7},
	{"Rimshine Wheels", 1, 1675, 7},
	{"Wires Wheels", 1, 1675, 7},
	{"Classic Wheels", 1, 1675, 7},
	{"Twist Wheels", 1, 1675, 7},
	{"Cutter Wheels", 1, 1675, 7},
	{"Switch Wheels", 1, 1675, 7},
	{"Grove Wheels", 1, 1675, 7},
	{"Import Wheels", 1, 1675, 7},
	{"Dollar Wheels", 1, 1675, 7},
	{"Trance Wheels", 1, 1675, 7},
	{"Atomic Wheels", 1, 1675, 7},
	{"Stereo Sound", 1, 875, 8},
	{"Hydraulics", 1, 2750, 9},
	{"Alien Roof", 1, 975, 2},
	{"X-Flow Exhaust", 1, 1750, 6},
	{"Alien Sideskirt", 1, 1150, 3},
	{"X-Flow Roof", 1, 975, 2},
	{"Alien Exhaust", 1, 1750, 6},
	{"X-Flow Sideskirt", 1, 1150, 3},
	{"Left Alien Sideskirt", 0, 1150, 3},
	{"X-Flow Sideskirt", 1, 1150, 3},
	{"Ahab Wheels", 1, 1675, 7},
	{"Virtual Wheels", 1, 1675, 7},
	{"Access Wheels", 1, 1675, 7},
	{"Left Chrome Sideskirt", 0, 1150, 3},
	{"Chrome Grill Bullbar", 1, 1350, 10},
	{"Left Chrome Flames Sideskirt", 0, 1150, 3},
	{"Left Chrome Strip Sideskirt", 0, 1150, 3},
	{"Corvetible Roof", 1, 975, 2},
	{"Chrome Exhaust", 1, 1750, 6},
	{"Slamin Exhaust", 1, 1750, 6},
	{"Chrome Arches Sideskirt", 1, 1150, 3},
	{"Left Chrome Strip Sideskirt", 0, 1150, 3},
	{"Chrome Strip Sideskirt", 1, 1150, 3},
	{"Chrome Rear Bullbars", 1, 1200, 11},
	{"Slamin Rear Bullbars", 1, 1200, 11},
	{"Little Front Sign", 1, 650, 1},
	{"Little Front Sign", 1, 650, 1},
	{"Chrome Exhaust", 1, 1750, 6},
	{"Slamin Exhaust", 1, 1750, 6},
	{"Chrome Front Bullbars", 1, 1350, 10},
	{"Slamin Front Bullbars", 1, 1350, 10},
	{"Chrome Front Bumper", 1, 1350, 10},
	{"Chrome Trim Sideskirt", 1, 1150, 3},
	{"Wheelcovers Sideskirt", 1, 1150, 3},
	{"Left Chrome Trim Sideskirt", 0, 1150, 3},
	{"Left Wheelcovers Sideskirt", 0, 1150, 3},
	{"Chrome Flames Sideskirt", 1, 1150, 3},
	{"Bullbar Chrome Bars", 1, 1350, 10},
	{"Left Chrome Arches Sideskirt", 0, 1150, 3},
	{"Bullbar Chrome Lights", 1, 1350, 10},
	{"Chrome Exhaust", 1, 1750, 6},
	{"Slamin Exhaust", 1, 1750, 6},
	{"Vinyl Hardtop", 1, 975, 2},
	{"Chrome Exhaust", 1, 1750, 6},
	{"Hardtop Roof", 1, 975, 2},
	{"Softtop Roof", 1, 975, 2},
	{"Slamin Exhaust", 1, 1750, 6},
	{"Chrome Strip Sideskirt", 1, 1150, 3},
	{"Chrome Strip Sideskirt", 1, 1150, 3},
	{"Slamin Exhaust", 1, 1750, 6},
	{"Chrome Exhaust", 1, 1750, 6},
	{"Left Chrome Strip Sideskirt", 0, 1150, 3},
	{"Alien Spoiler", 1, 1450, 0},
	{"X-Flow Spoiler", 1, 1450, 0},
	{"X-Flow Rear Bumper", 1, 1200, 11},
	{"Alien Rear Bumper", 1, 1200, 11},
	{"Left Oval Vents", 1, 950, 12},
	{"Right Oval Vents", 1, 950, 13},
	{"Left Square Vents", 1, 950, 12},
	{"Right Square Vents", 1, 950, 13},
	{"X-Flow Spoiler", 1, 1450, 0},
	{"Alien Spoiler", 1, 1450, 0},
	{"X-Flow Rear Bumper", 1, 1200, 11},
	{"Alien Rear Bumper", 1, 1200, 11},
	{"Alien Rear Bumper", 1, 1200, 11},
	{"X-Flow Rear Bumper", 1, 1200, 11},
	{"X-Flow Front Bumper", 1, 1350, 10},
	{"Alien Front Bumper", 1, 1350, 10},
	{"Alien Rear Bumper", 1, 1200, 11},
	{"Alien Front Bumper", 1, 1350, 10},
	{"X-Flow Rear Bumper", 1, 1200, 11},
	{"X-Flow Front Bumper", 1, 1350, 10},
	{"X-Flow Spoiler", 1, 1450, 0},
	{"Alien Rear Bumper", 1, 1200, 11},
	{"Alien Front Bumper", 1, 1350, 10},
	{"X-Flow Rear Bumper", 1, 1200, 11},
	{"Alien Spoiler", 1, 1450, 0},
	{"X-Flow Spoiler", 1, 1450, 0},
	{"Alien Spoiler", 1, 1450, 0},
	{"X-Flow Front Bumper", 1, 1350, 10},
	{"Alien Front Bumper", 1, 1350, 10},
	{"X-Flow Rear Bumper", 1, 1200, 11},
	{"Alien Rear Bumper", 1, 1200, 11},
	{"Alien Front Bumper", 1, 1350, 10},
	{"X-Flow Front Bumper", 1, 1350, 10},
	{"Alien Front Bumper", 1, 1350, 10},
	{"X-Flow Front Bumper", 1, 1350, 10},
	{"X-Flow Front Bumper", 1, 1350, 10},
	{"Chrome Front Bumper", 1, 1350, 10},
	{"Slamin Front Bumper", 1, 1350, 10},
	{"Chrome Rear Bumper", 1, 1200, 11},
	{"Slamin Rear Bumper", 1, 1200, 11},
	{"Slamin Rear Bumper", 1, 1200, 11},
	{"Chrome Front Bumper", 1, 1350, 10},
	{"Chrome Rear Bumper", 1, 1200, 11},
	{"Slamin Front Bumper", 1, 1350, 10},
	{"Chrome Front Bumper", 1, 1350, 10},
	{"Slamin Rear Bumper", 1, 1200, 11},
	{"Chrome Rear Bumper", 1, 1200, 11},
	{"Slamin Front Bumper", 1, 1350, 10},
	{"Slamin Rear Bumper", 1, 1200, 11},
	{"Chrome Rear Bumper", 1, 1200, 11},
	{"Slamin Front Bumper", 1, 1350, 10},
	{"Chrome Front Bumper", 1, 1350, 10},
	{"Slamin Front Bumper", 1, 1350, 10},
	{"Chrome Front Bumper", 1, 1350, 10},
	{"Chrome Rear Bumper", 1, 1200, 11},
	{"Slamin Rear Bumper", 1, 1200, 11}
};

new validModelComponents[][] = {
	{1008, 1009, 1010, 1013, 1018, 1019, 1020, 1021, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1000, 1002, 1007, 1008, 1009, 1010, 1013, 1016, 1017, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1000, 1001, 1008, 1009, 1010, 1014, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1001, 1003, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1001, 1003, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1002, 1006, 1008, 1009, 1010, 1016, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1001, 1003, 1004, 1005, 1008, 1009, 1010, 1019, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1000, 1008, 1009, 1010, 1014, 1016, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1019, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1001, 1003, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1021, 1022, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1001, 1003, 1007, 1008, 1009, 1010, 1013, 1017, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1004, 1005, 1008, 1009, 1010, 1012, 1013, 1020, 1021, 1022, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1086, 0},
	{1000, 1002, 1004, 1005, 1006, 1008, 1009, 1010, 1013, 1016, 1018, 1019, 1020, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1003, 1007, 1008, 1009, 1010, 1014, 1017, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1086, 0},
	{1000, 1004, 1005, 1006, 1008, 1009, 1010, 1016, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1001, 1002, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1017, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1013, 1019, 1020, 1021, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1000, 1002, 1004, 1007, 1008, 1009, 1010, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1002, 1003, 1007, 1008, 1009, 1010, 1016, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1086, 0},
	{1001, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1018, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1086, 0},
	{1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1001, 1007, 1008, 1009, 1010, 1014, 1015, 1017, 1018, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1001, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1100, 1101, 1106, 1122, 1123, 1124, 1125, 1126, 1127, 1178, 1179, 1180, 1185, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1109, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1103, 1104, 1105, 1107, 1108, 1128, 1181, 1182, 1183, 1184, 1086, 0},
	{1086, 0},
	{1086, 0},
	{1086, 0},
	{1001, 1004, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1014, 1015, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1144, 1145, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1001, 1002, 1004, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1086, 0},
	{1000, 1003, 1008, 1009, 1010, 1016, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1086, 0},
	{1086, 0},
	{1001, 1003, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1086, 0},
	{1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1086, 0},
	{1002, 1003, 1005, 1006, 1008, 1009, 1010, 1016, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1163, 1164, 1165, 1166, 1167, 1168, 1086, 0},
	{1008, 1009, 1010, 1025, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1158, 1159, 1160, 1161, 1162, 1173, 1086, 0},
	{1008, 1009, 1010, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1138, 1139, 1140, 1141, 1169, 1170, 1086, 0},
	{1008, 1009, 1010, 1025, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1154, 1155, 1156, 1157, 1086, 0},
	{1008, 1009, 1010, 1025, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1146, 1147, 1148, 1149, 1171, 1172, 1086, 0},
	{1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1150, 1151, 1152, 1153, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1102, 1129, 1130, 1131, 1132, 1133, 1186, 1187, 1188, 1189, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1042, 1043, 1044, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1099, 1174, 1175, 1176, 1177, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1134, 1135, 1136, 1137, 1190, 1191, 1192, 1193, 1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1001, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1001, 1003, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1000, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1016, 1017, 1018, 1020, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1144, 1145, 1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1018, 1020, 1022, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1001, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0},
	{1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1096, 1097, 1098, 1086, 0}
};

/* --- Starting System ... */

main() {}

/* --- Callbacks --- */

#include "furniture.pwn"
#include "Mountain.pwn"

forward HideHitMark(playerid);
public HideHitMark(playerid)
{
	TextDrawHideForPlayer(playerid, PlayerInfo[playerid][pHitmark]);
	return 1;
}

forward KickDelayCall(playerid);
public KickDelayCall(playerid) return Kick(playerid);


forward BanExDelayCall(playerid, reason[]);
public BanExDelayCall(playerid, reason[]) return BanEx(playerid, reason);


public OnPlayerCommandText(playerid,cmdtext[])
{
    if(PlayerCmdFrq[playerid] != 0)
    {
        SendClientMessage(playerid, COLOR_LIGHTRED, "请你先等待一会再使用其他指令.");
        return 1;
    }
    return PlayerCmdFrq[playerid] = 3;
}

forward FPSTimer(playerid);
public FPSTimer(playerid)
{
	new Float:X, Float:Y, Float:Z, Float:X2, Float:Y2;
	GetPlayerPos(playerid, X, Y, Z);
	GetXYInFrontOfPlayer(playerid, X2, Y2, 0.4);
	SetPlayerCameraPos(playerid, X2, Y2, Z+0.9);
	GetXYInFrontOfPlayer(playerid, X2, Y2, 5.0);
	SetPlayerCameraLookAt(playerid, X2, Y2, Z);
}

forward GetCameraLookAt(playerid, &Float:x, &Float:y, &Float:z);
public GetCameraLookAt(playerid, &Float:x, &Float:y, &Float:z)
{
	x = CameraInfo[playerid][camPosLookX];
	y = CameraInfo[playerid][camPosLookY];
	z = CameraInfo[playerid][camPosLookZ];
	return 1;
}

public OnGameModeInit()
{
	print(" ");
	print(" ");
	print(" ");
	
	LoadGraffitis();
	loadgraffs();
	foreach(Player, i)
	{
	    killgr(i);
	}
    
    print("系统正在尝试连接数据库... (1)");
    mysql_log(LOG_ERROR | LOG_WARNING, LOG_TYPE_TEXT);
    
    //mysql_debug(1);
	//mysql_log(LOG_ERROR | LOG_WARNING | LOG_DEBUG);
	
    sqlHandle = mysql_connect("localhost", "LGNGaming", "sarp", "lgn_gamer.makin$$_stay.d1rty"); // Local a8039063

    
    if(mysql_errno() != 0)
	{
		print("系统尝试连接数据库失败...");
		print("服务器将在3秒后自动关闭, 请检查配置文件.");
		SendRconCommand("exit");
	}
	else
	{
	    print("系统尝试连接数据库成功, 等待服务器响应...");
	}

    /* --- Setting up streamer-plugin --- */

    Streamer_TickRate(60);
	Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 500);

    /* --- Setting permanent preferences --- */
    
    for(new s = 0; s != 300; s++) {
		AddPlayerClass(s, 10, 10, 3, 0, 0, 0, 0, 0, 0, 0);
	}
	if(!fexist("Woods_Fac.ini"))dini_Create("Woods_Fac.ini");
	new woods=dini_Int("Woods_Fac.ini","woods");
	new woodstring[128];
	CreateActor(161,-375.7680, -1420.5500, 25.7300,0.0);
	format(woodstring,128,"<木材加工厂>\n<木材存货: %d>\n<输入“/buywoodmat”购买木材>",woods);
    XB_WoodFac=Create3DTextLabel(woodstring,COLOR_YELLOW2,2153.7068, -2151.3359, 13.5839,30,0,1);
    if(!fexist("Woods_Str.ini"))dini_Create("Woods_Str.ini");
	woods=dini_Int("Woods_Str.ini","woods");
	format(woodstring,128,"<木材仓库>\n<木头: %d根>\n输入“/wood”存放木头",woods);
    XB_WoodStr=Create3DTextLabel(woodstring,COLOR_YELLOW2,-372.2013, -1428.6089, 25.8901,30,0,1);
    CreateObject(3860, -375.75403, -1420.18762, 25.80030,   0.00000, 0.00000, -180.42017);
    CreateObject(341, -376.12085, -1419.67932, 25.45731,   94.74001, 98.40001, -33.42000);
	Create3DTextLabel("<输入“/getsaw”获得电锯>",COLOR_YELLOW2,-375.7715, -1418.1702, 25.7708,30,0,0);
	JACK_LABEL=CreateObject(3077, 2502.68237, -1459.00598, 23.01092,   0.00000, 0.00000, 0.00000);
	OnJackLabelUpdate();
	SetTimer("OnJackLabelUpdate",3600000,1);
	CreateObject(19498, 2291.93335, 1293.29871, 11.45030,   0.00000, 0.00000, 0.00000);
	CreateObject(19355, 2290.28809, 1293.15381, 10.63647,   0.00000, 0.00000, 0.00000);
	CreateObject(19355, 2290.08789, 1289.59180, 10.63647,   0.00000, 0.00000, 0.00000);
	CreateObject(19355, 2287.39722, 1297.25452, 10.81647,   0.00000, 0.00000, 0.19999);
	CreateObject(19355, 2287.39722, 1301.57532, 10.81647,   0.00000, 0.00000, 0.00000);
	CreateObject(19355, 2301.59180, 1301.57532, 10.81647,   0.00000, 0.00000, 0.00000);
	CreateObject(19355, 2301.59180, 1293.58459, 10.81647,   0.00000, 0.00000, 0.00000);
	CreateObject(18687, 2301.43555, 1288.01099, 10.72794,   0.00000, 0.00000, 91.40001);
	CreateObject(18687, 2295.71704, 1288.15454, 10.72837,   0.00000, 0.10000, -90.29995);
	CreateObject(18090, 2295.81982, 1302.47803, 12.36179,   0.00000, 0.00000, 89.59996);
	CreateObject(18102, 2292.23462, 1293.52100, 14.64437,   0.00000, 0.00000, 191.74005);
	CreateObject(1775, 2297.72412, 1288.40662, 10.86440,   0.00000, 0.00000, 180.00000);
	CreateObject(2232, 2291.82666, 1300.29272, 10.46634,   0.00000, 0.00000, 33.40001);
	CreateObject(2232, 2300.17090, 1299.66260, 10.41634,   0.00000, 0.00000, -37.10000);
	CreateObject(2372, 2290.62793, 1295.66077, 9.70975,   0.00000, 0.00000, 0.00000);
	CreateObject(2372, 2290.62427, 1299.21606, 9.73515,   0.00000, 0.00000, 0.00000);
	CreateObject(2372, 2290.62793, 1302.14575, 9.72840,   0.00000, 0.00000, 0.00000);
	CreateObject(2125, 2289.45825, 1295.63086, 10.19975,   0.00000, 0.00000, 0.00000);
	CreateObject(2125, 2288.33447, 1295.57764, 10.19773,   0.00000, 0.00000, 0.00000);
	CreateObject(2125, 2289.39746, 1297.20862, 10.19461,   0.00000, 0.00000, 0.00000);
	CreateObject(1823, 2288.41187, 1295.92102, 9.88975,   0.00000, 0.00000, 0.00000);
	CreateObject(1823, 2288.41187, 1302.07349, 9.88975,   0.00000, 0.00000, 0.00000);
	CreateObject(2125, 2289.39746, 1303.62085, 10.19461,   0.00000, 0.00000, 0.00000);
	CreateObject(2125, 2288.33447, 1297.23779, 10.19773,   0.00000, 0.00000, 0.00000);
	CreateObject(2125, 2289.39746, 1301.47913, 10.19461,   0.00000, 0.00000, 0.00000);
	CreateObject(2125, 2288.33447, 1303.56958, 10.19773,   0.00000, 0.00000, 0.00000);
	CreateObject(2125, 2288.33447, 1301.44922, 10.19773,   0.00000, 0.00000, 0.00000);
	CreateObject(1823, 2288.41187, 1299.13171, 9.88975,   0.00000, 0.00000, 0.00000);
	CreateObject(2125, 2289.39746, 1300.61938, 10.19461,   0.00000, 0.00000, 0.00000);
	CreateObject(2125, 2288.33447, 1300.58887, 10.19773,   0.00000, 0.00000, 0.00000);
	CreateObject(2125, 2288.33447, 1298.56824, 10.19773,   0.00000, 0.00000, 0.00000);
	CreateObject(2125, 2289.39746, 1298.58936, 10.19461,   0.00000, 0.00000, 0.00000);
	CreateObject(2707, 2301.32544, 1301.18420, 12.62976,   0.00000, 0.00000, 0.00000);
	CreateObject(2707, 2300.69263, 1301.18103, 12.63604,   0.00000, 0.00000, 0.00000);
	CreateObject(2707, 2300.05615, 1301.18579, 12.63110,   0.00000, 0.00000, 0.00000);
	CreateObject(2596, 2297.64600, 1303.45752, 12.12115,   0.00000, 0.00000, 0.00000);
	CreateObject(2596, 2294.03296, 1303.45752, 12.12115,   0.00000, 0.00000, 0.00000);
	CreateObject(1541, 2299.85498, 1301.81494, 10.99164,   0.00000, 0.00000, 0.00000);
	CreateObject(1541, 2295.42749, 1301.80481, 10.96604,   0.00000, 0.00000, 0.00000);
	CreateObject(1541, 2293.37939, 1301.83203, 10.99751,   0.00000, 0.00000, 0.00000);
	CreateObject(1548, 2295.38452, 1301.50891, 10.85233,   0.00000, 0.00000, 0.00000);
	CreateObject(1548, 2293.32178, 1301.50085, 10.87361,   0.00000, 0.00000, 0.00000);
	CreateObject(1548, 2297.99121, 1301.49414, 10.88476,   0.00000, 0.00000, 0.00000);
	CreateObject(1548, 2299.83521, 1301.49390, 10.84913,   0.00000, 0.00000, 0.00000);
	CreateObject(1541, 2297.99390, 1301.81494, 10.99164,   0.00000, 0.00000, 0.00000);
	CreateObject(1544, 2296.67627, 1301.14673, 10.81787,   0.00000, 0.00000, 0.00000);
	CreateObject(1544, 2296.27441, 1301.15137, 10.86615,   0.00000, 0.00000, 0.00000);
	CreateObject(1544, 2294.82690, 1300.75220, 10.86128,   0.00000, 0.00000, 0.00000);
	CreateObject(1544, 2298.34253, 1300.87512, 10.79432,   0.00000, 0.00000, 0.00000);
	CreateObject(1544, 2292.28418, 1301.19263, 10.81464,   0.00000, 0.00000, 0.00000);
	CreateObject(1544, 2294.77075, 1300.89185, 10.80303,   0.00000, 0.00000, 0.00000);
	CreateObject(1544, 2295.77344, 1303.79712, 11.43018,   0.00000, 0.00000, 0.00000);
	CreateObject(1544, 2289.17871, 1302.29248, 10.36923,   0.00000, 0.00000, 0.00000);
	CreateObject(1544, 2288.85400, 1299.72607, 10.35917,   0.00000, 0.00000, 0.00000);
	CreateObject(1544, 2289.04468, 1296.62964, 10.35978,   0.00000, 0.00000, 0.00000);
	CreateObject(1544, 2288.48315, 1296.12463, 10.37259,   0.00000, 0.00000, 0.00000);
	CreateObject(14565, 2301.35107, 1304.56299, 12.63976,   0.00000, 0.00000, 89.89998);
	CreateObject(2800, 2288.89453, 1302.52844, 10.20216,   0.00000, 0.00000, 0.00000);
	CreateObject(18717, 2301.41113, 1303.88599, 14.28499,   0.00000, 179.99995, 0.00000);
	CreateObject(18717, 2287.64087, 1304.18628, 14.28499,   0.00000, 179.99995, 0.00000);
	CreateObject(18717, 2287.67090, 1295.25427, 14.28499,   0.00000, 179.99995, 0.00000);
	CreateObject(2258, 2287.52368, 1301.63037, 11.79924,   0.00000, 0.00000, 89.59996);
	CreateObject(2256, 2287.51489, 1297.53662, 11.65218,   0.00000, 0.00000, 89.90001);
	CreateObject(26, 2296.33154, 1302.91650, 11.76760,   90.00000, 0.00000, 0.00000);
	CreateObject(1775, 2298.91431, 1288.41541, 10.86440,   0.00000, 0.00000, 180.00000);
	CreateObject(19355, 2298.90552, 1287.82385, 10.63650,   0.00000, 0.00000, 90.00000);

	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	ShowPlayerMarkers(0);
    ManualVehicleEngineAndLights();
    SetNameTagDrawDistance(NAMETAG_DRAWDISTANCE);
    new hour,
		minute,
		second;

	gettime(hour, minute, second);
	SetWorldTime(hour);
	gWeather = random(20);
	SetWeather(gWeather);
	XB_WeatherReport(gWeather);


	/* --- Preparing Vehicle-Array --- */

	for(new i = 0; i != MAX_VEHICLES; i++) {
		ResetVehicleData(i);
	}

    /* --- Creating Train --- */

	trainID = AddStaticVehicleEx(538, -1946.0692, 183.2777, 26.7534, 355.7218, 24, 77, 0);
	VehicleInfo[trainID][vFuel] = 100;
	VehicleInfo[trainID][vWindows] = 0;
	SetVehicleParamsEx(trainID, 1, 1, 0, 0, 0, 0, 0);
    //ConnectNPC("AmmoBot","ammo_dealer");
	ConnectNPC("TrainBot", "train_ls");
	//ConnectNPC("RentalBot", "RentalBot");
	ConnectNPC("DMVBot", "DMVBot");
	ConnectNPC("EmploymentBot", "EmploymentBot");

	/* --- Loading & Setting Gamemode-Data --- */

	DeleteUnownedItems();
	LoadServerSettings();
	LoadHouses(1);
	LoadBusinesses();
	LoadFactions();
	LoadTextDraws(); // MDC Text Draws
	LoadFactionVehicles();
	LoadStaticVehicles();
	CreateBusinesses();
	CreatePayNSprays();

	/* --- Creating Objects --- */
	Objects_PoliceAGC();//警校毕业典礼
    Objects_NEW_IDLEWOOD();// made by SAKURA
    Objects_RentalCenter();
    Objects_Interiors();
	Objects_LosSantos();
	Objects_LAPD();
	Objects_RentalCenterExterior();
	Objects_UnemploymentCenter();
	Objects_Bank();
	Objects_BarriersAndBankExterior();
	Objects_GasStation();
	Objects_AdminJail();
	//Objects_BikerAreaCommerce();
	Objects_SportsShop();
	Objects_FireDepartment();
	Objects_HospitalInterior();
	Objects_Motel();
	Objects_Grottis();
	Objects_Club();
	Objects_Transfender();
	Objects_PayNSpray();
	Objects_FixesForInteriors();
	Objects_FixesForExterior();
	Objects_Prison();
	Objects_PrisonInterior();
	Objects_SanNews();
	Objects_DMV();
	Objects_Center();
	LoadDrugHouse();
	//Objects_PrivateGarages();

	/* --- Preparing Incoming Calls --- */

	for(new i = 0; i != MAX_CALLS; i++) {
		IncomingCalls[i][cCaller] = -1;
		IncomingCalls[i][cCalled] = -1;
	}

	/* --- Starting permanent Timers --- */
	SetTimer("RemainsTimer", 1000, true);
 	SetTimer("UpdateCmdFreq", 2000, 1);
	SetTimer("UpdateTimeAndDate", 3 * 1000, 1); // MDC TIMER 1
    SetTimer("OneSecondTimer", 1000, true);
	SetTimer("OneMinuteTimer", 60000, true);
	SetTimer("OneHourTimer", 3600000, true);
	//SetTimer("ThirtyMinuteTimer", 1800000, true);
	
	SetTimer("FiveSecondTimer", 5000, true);//disgrade

	/* --- Setting permanent Pickups --- */

	deliveryPickup = CreateDynamicPickup(2912, 23, 2781.6343, -2447.9790, 13.6352);
	
	Dealer_UpperPickup = CreateDynamicPickup(1239, 23, 542.2992, -1292.1060, 17.2422);
	Dealer_NormalPickup = CreateDynamicPickup(1239, 23, 2131.7964, -1150.2208, 24.1810);
	DMVPickup = CreateDynamicPickup(1239, 23, 1317.8936, -1183.2419, 23.5981);
	sanNewsPickup = CreateDynamicPickup(1239, 23, 648.2817, -1357.8223, 13.5734);
	sanNewsDutyPickup = CreateDynamicPickup(1239, 23, 345.4447, 164.7374, 1014.1875);
	PrisonPickup = CreateDynamicPickup(1239, 23, 1807.2378,-1538.6150,5700.4287);
	CreateDynamic3DTextLabel("圣安地列斯州立监狱\n [/prison]", COLOR_DARKYELLOW, 1807.2378,-1538.6150,5700.4287, 3, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
	GuardPickup = CreateDynamicPickup(1239, 23, 252.1557,1390.4894,11.1420);
	
	/*CreateDynamicPickup(1239, 23, 2189.7007,-1255.6732,1529.1060);
 	CreateDynamic3DTextLabel("/usemenu", COLOR_DARKYELLOW, 2189.7007,-1255.6732,1529.1060, 3, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
 	CreateDynamicPickup(1239, 23, 2186.4661,1618.8871,999.9766);
 	CreateDynamic3DTextLabel("/usemenu", COLOR_DARKYELLOW, 2186.4661,1618.8871,999.9766, 3, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);*/
 	
    ApartmentPickup1AGP = CreateDynamicPickup(1318, 23, 1990.7379,-1282.6858,23.9713);
    ApartmentPickup1AI = CreateDynamicPickup(1318, 23, 2177.2534,-1770.5592,13.5391);
    ApartmentPickup2AI = CreateDynamicPickup(1318, 23, 1863.8026,-1597.2938,14.3062);
    
    WeaponWarehouse = CreateDynamicPickup(1254, 23, -1469.6418,2615.5959,58.7879);
    AmmoWarehouse = CreateDynamicPickup(1254, 23, -2184.3328,710.4023,53.8906);
    DrugWarehouse = CreateDynamicPickup(1254, 23, -376.9299,2242.3718,42.6185);
    CokeWarehouse = CreateDynamicPickup(1254, 23, -1051.7054,1550.0031,33.4376);
    
    HeavyWarehouse = CreateDynamicPickup(1239, 23, 2266.4453,-1701.0996,13.6901);
    InsuranceCompany = CreateDynamicPickup(1239, 23, 2045.7609,-1908.0037,13.5469);
    PrisonShowers = CreateDynamicPickup(1239, 23, 249.7023,1437.3875,10.5890);
    PrisonCells = CreateDynamicPickup(1239, 23, 201.7772,1437.0233,10.5950);
    HardwareCompany = CreateDynamicPickup(1239, 23, 1154.7292,-1440.1539,15.7969);
	DoC = CreateDynamicPickup(1239, 23, 174.4342,1365.4073,10.5859);
	DoC2 = CreateDynamicPickup(1239, 23, 154.6967,1404.2869,10.5950);
    
    CreateDynamicPickup(1239, 23, 1262.8807,1734.5267,1001.5000);
    
    CreateDynamic3DTextLabel("扣押场\n [/impound]", COLOR_LIGHTRED, 1621.4081,-1808.7053,13.5177, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
    CreateDynamicPickup(1239, 23, 1621.4081,-1808.7053,13.5177);
    
    CreateDynamic3DTextLabel("销毁场\n [/scrap]", COLOR_LIGHTRED, -1867.1847,-1682.2609,21.4557, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
    CreateDynamicPickup(1239, 23, -1867.1847,-1682.2609,21.4557);
    
    CreateDynamic3DTextLabel("彩票摊\n {80A05C}[/lottery]", -1, 1778.2074,-1814.1509,13.5536, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
	/* --- Setting permanent Checkpoints --- */

	CreateBusinessCheckpoints();
    CreateDynamicCP(1771.8794, -2048.9001, 13.1607, 3.0, -1, -1, -1, 20.0);
	//fishingcp = CreateDynamicCP(2155.1235, -2290.7302, 13.3995, 4, -1, -1, -1, 5.0);
	DMVCP = CreateDynamicCP(1490.9266, 1305.9607, 1093.2964, 1.5, -1, -1, -1, 5.0);
	sanNewsAdvertCP = CreateDynamicCP(359.1859, 174.9162, 1014.1875, 1.5, -1, -1, -1, 20.0);
	Hospital = CreateDynamicCP(1502.483,-1546.355,1970.786,1.5,-1,1,-1,20.0);
	/* --- Setting permanent 3D-Text-Labels --- */
	
	CreateDynamic3DTextLabel("回收站\n [/unload]", COLOR_DARKYELLOW, 1771.8794, -2048.9001, 13.1607, 20, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);

	CreateDynamic3DTextLabel("加油站\n [/fill]", COLOR_DARKYELLOW, 1940.1053, -1772.8323, 13.3906, 20, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
    CreateDynamic3DTextLabel("加油站\n [/fill]", COLOR_DARKYELLOW, 1004.0475, -938.3154, 42.1797, 20, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
    CreateDynamic3DTextLabel("加油站\n [/fill]", COLOR_DARKYELLOW, -91.4394, -1169.2651, 1.9978, 20, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
    CreateDynamic3DTextLabel("加油站\n [/fill]", COLOR_DARKYELLOW, 1584.1018, -1674.7207, 5.9000, 20, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);

    CreateDynamic3DTextLabel("火车站\n 购票处 \n [/trainticket]", COLOR_DARKYELLOW, 2857.0017, 1314.5372, 11.3906, 20, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
    CreateDynamic3DTextLabel("火车站\n 购票处 \n [/trainticket]", COLOR_DARKYELLOW, -1972.4020, 117.3223, 27.6940, 20, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
    CreateDynamic3DTextLabel("火车站\n 购票处 \n [/trainticket]", COLOR_DARKYELLOW, 1436.7983, 2619.9780, 11.3926, 20, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
    CreateDynamic3DTextLabel("火车站\n 购票处 \n [/trainticket]", COLOR_DARKYELLOW, 2857.1873, 1267.0105, 11.3906, 20, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
    CreateDynamic3DTextLabel("火车站\n 购票处 \n [/trainticket]", COLOR_DARKYELLOW, 1746.9236, -1943.7249, 13.5692, 20, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
    CreateDynamic3DTextLabel("火车站\n 购票处 \n [/trainticket]", COLOR_DARKYELLOW, 1756.9825, -1943.8870, 13.56860, 20, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);

	/* --- Setting Serverpreferences --- */

	new rcon[128];

	format(rcon, sizeof(rcon), "%s %s", GM_NAME, GM_VERSION);
	SetGameModeText(rcon);

	format(rcon, sizeof(rcon), "mapname %s", GM_SV_MAPNAME);
	SendRconCommand(rcon);

	format(rcon, sizeof(rcon), "hostname %s", GM_SV_HOSTNAME);
	SendRconCommand(rcon);

	format(rcon, sizeof(rcon), "weburl %s", GM_SV_WEBSITE);
	SendRconCommand(rcon);

	/* --- Creating Textdraws --- */
	//blood screen
	
	BloodDraw[0] = TextDrawCreate(330.000000, 98.000000, "ld_shtr:ex4");
	TextDrawBackgroundColor(BloodDraw[0], 255);
	TextDrawFont(BloodDraw[0], 4);
	TextDrawLetterSize(BloodDraw[0], 0.500000, 1.000000);
	TextDrawColor(BloodDraw[0], -16777116);
	TextDrawSetOutline(BloodDraw[0], 0);
	TextDrawSetProportional(BloodDraw[0], 1);
	TextDrawSetShadow(BloodDraw[0], 1);
	TextDrawUseBox(BloodDraw[0], 1);
	TextDrawBoxColor(BloodDraw[0], 255);
	TextDrawTextSize(BloodDraw[0], 343.000000, 330.000000);
	BloodDraw[1] = TextDrawCreate(0.000000, -12.000000, "ld_shtr:ex4");
	TextDrawBackgroundColor(BloodDraw[1], 255);
	TextDrawFont(BloodDraw[1], 4);
	TextDrawLetterSize(BloodDraw[1], 0.500000, 1.000000);
	TextDrawColor(BloodDraw[1], -16777136);
	TextDrawSetOutline(BloodDraw[1], 0);
	TextDrawSetProportional(BloodDraw[1], 1);
	TextDrawSetShadow(BloodDraw[1], 1);
	TextDrawUseBox(BloodDraw[1], 1);
	TextDrawBoxColor(BloodDraw[1], 255);
	TextDrawTextSize(BloodDraw[1], 403.000000, 370.000000);
	BloodDraw[2] = TextDrawCreate(60.000000, 228.000000, "ld_shtr:ex4");
	TextDrawBackgroundColor(BloodDraw[2], 255);
	TextDrawFont(BloodDraw[2], 4);
	TextDrawLetterSize(BloodDraw[2], 0.500000, 1.000000);
	TextDrawColor(BloodDraw[2], -16777106);
	TextDrawSetOutline(BloodDraw[2], 0);
	TextDrawSetProportional(BloodDraw[2], 1);
	TextDrawSetShadow(BloodDraw[2], 1);
	TextDrawUseBox(BloodDraw[2], 1);
	TextDrawBoxColor(BloodDraw[2], 255);
	TextDrawTextSize(BloodDraw[2], 343.000000, 330.000000);
    WoundDraw[0] = TextDrawCreate(150.000000, 388.000000, "~r~You must recover your gun wound at the hospital");
    TextDrawBackgroundColor(WoundDraw[0], 255);
    TextDrawFont(WoundDraw[0], 2);
    TextDrawLetterSize(WoundDraw[0], 0.340000, 1.200000);
    TextDrawColor(WoundDraw[0], -1);
    TextDrawSetOutline(WoundDraw[0], 0);
    TextDrawSetProportional(WoundDraw[0], 1);
    TextDrawSetShadow(WoundDraw[0], 1);
    WoundDraw[1] = TextDrawCreate(135.000000, 389.000000, "hud:radar_hostpital");
    TextDrawBackgroundColor(WoundDraw[1], 255);
    TextDrawFont(WoundDraw[1], 4);
    TextDrawLetterSize(WoundDraw[1], 0.500000, 1.000000);
    TextDrawColor(WoundDraw[1], -1);
    TextDrawSetOutline(WoundDraw[1], 0);
    TextDrawSetProportional(WoundDraw[1], 1);
    TextDrawSetShadow(WoundDraw[1], 1);
    TextDrawUseBox(WoundDraw[1], 1);
    TextDrawBoxColor(WoundDraw[1], 255);
    TextDrawTextSize(WoundDraw[1], 14.000000, 11.000000);
    
	//blood screen
	FlashBang = TextDrawCreate(-20.000000,2.000000,"|");
	TextDrawUseBox(FlashBang,1);
	TextDrawTextSize(FlashBang,660.000000,22.000000);
	TextDrawAlignment(FlashBang,0);
	TextDrawFont(FlashBang,3);
	TextDrawLetterSize(FlashBang,1.000000,52.200000);
	TextDrawBackgroundColor(FlashBang,0x000000ff);
	TextDrawColor(FlashBang,0x000000ff);
	TextDrawSetOutline(FlashBang,1);
	TextDrawSetProportional(FlashBang,1);
	TextDrawSetShadow(FlashBang,1);

	/* Lottery system*/
	Lottery[0] = TextDrawCreate(208.000000, 126.000000, "MainBox"); //Lottery TD
	TextDrawBackgroundColor(Lottery[0], 0x00000033);
	TextDrawFont(Lottery[0], 5);
	TextDrawUseBox(Lottery[0], 1);
	TextDrawBoxColor(Lottery[0], 0x00000033);
	TextDrawTextSize(Lottery[0], 240.000000, 226.000000);
	TextDrawSetPreviewModel(Lottery[0], 13862);
	Lottery[1] = TextDrawCreate(233.000000, 183.000000, "1"); //Lottery TD
	Lottery[2] = TextDrawCreate(302.000000, 183.000000, "2"); //Lottery TD
	Lottery[3] = TextDrawCreate(370.000000, 183.000000, "3"); //Lottery TD
	Lottery[4] = TextDrawCreate(233.000000, 228.000000, "4"); //Lottery TD
	Lottery[5] = TextDrawCreate(302.000000, 228.000000, "5"); //Lottery TD
	Lottery[6] = TextDrawCreate(370.000000, 228.000000, "6"); //Lottery TD
	Lottery[7] = TextDrawCreate(233.000000, 273.000000, "7"); //Lottery TD
	Lottery[8] = TextDrawCreate(302.000000, 273.000000, "8"); //Lottery TD
	Lottery[9] = TextDrawCreate(370.000000, 273.000000, "9"); //Lottery TD
	Lottery[10] = TextDrawCreate(233.000000, 321.000000, "10"); //Lottery TD
	Lottery[11] = TextDrawCreate(370.000000, 321.000000, "11"); //Lottery TD
	for(new i = 1; i < 12; i++)
	{
		TextDrawBackgroundColor(Lottery[i], 0x00000055);
		TextDrawFont(Lottery[i], 5);
		TextDrawUseBox(Lottery[i], 1);
		TextDrawBoxColor(Lottery[i], 0x00000055);
		TextDrawTextSize(Lottery[i], 56.000000, i < 10 ? 37 : 20);
		TextDrawSetSelectable(Lottery[i], 1);
		TextDrawSetPreviewModel(Lottery[i], 13862);
		TextDrawSetPreviewRot(Lottery[i], 0.0, 0.0, 90.0, 1.0);
	}
	TextDrawTextSize(Lottery[10], 56.000000, 20);
	TextDrawTextSize(Lottery[11], 56.000000, 20);
	Lottery[12] = TextDrawCreate(275.000000, 130.000000, "Lottery"); //Lottery TD
	TextDrawBackgroundColor(Lottery[12], 0x00000033);
	TextDrawFont(Lottery[12], 2);
	TextDrawLetterSize(Lottery[12], 0.580000, 2.399999);
	TextDrawColor(Lottery[12], -1342242561);
	TextDrawSetShadow(Lottery[12], 1);
	Lottery[13] = TextDrawCreate(208.000000, 158.000000, "your numbers box"); //Lottery TD
	TextDrawBackgroundColor(Lottery[13], 0x00000066);
	TextDrawFont(Lottery[13], 5);
	TextDrawUseBox(Lottery[13], 1);
	TextDrawBoxColor(Lottery[13], 0x00000066);
	TextDrawTextSize(Lottery[13], 240.000000, 17.000000);
	TextDrawSetPreviewModel(Lottery[13], 13862);
	Lottery[14] = TextDrawCreate(209.000000, 160.000000, "Your numbers:"); //Lottery TD
	TextDrawBackgroundColor(Lottery[14], 0x00000033);
	TextDrawFont(Lottery[14], 2);
	TextDrawLetterSize(Lottery[14], 0.330000, 1.299999);
	TextDrawColor(Lottery[14], -7274241);
	TextDrawSetShadow(Lottery[14], 1);
	Lottery[16] = TextDrawCreate(245.000000, 323.000000, "UNDO"); //Lottery TD
	Lottery[17] = TextDrawCreate(377.000000, 323.000000, " SEND"); //Lottery TD
	for(new i = 16; i < 18; i++)
	{
		TextDrawBackgroundColor(Lottery[i], 0x00000033);
		TextDrawFont(Lottery[i], 2);
		TextDrawLetterSize(Lottery[i], 0.300000, 1.399999);
		TextDrawColor(Lottery[i], 8716287);
		TextDrawSetShadow(Lottery[i], 1);
	}
	Lottery[18] = TextDrawCreate(255.000000, 188.000000, "1"); //Lottery TD
	Lottery[19] = TextDrawCreate(323.000000, 188.000000, "2"); //Lottery TD
	Lottery[20] = TextDrawCreate(391.000000, 188.000000, "3"); //Lottery TD
	Lottery[21] = TextDrawCreate(254.000000, 233.000000, "4"); //Lottery TD
	Lottery[22] = TextDrawCreate(323.000000, 233.000000, "5"); //Lottery TD
	Lottery[23] = TextDrawCreate(392.000000, 233.000000, "6"); //Lottery TD
	Lottery[24] = TextDrawCreate(256.000000, 278.000000, "7"); //Lottery TD
	Lottery[25] = TextDrawCreate(323.000000, 278.000000, "8"); //Lottery TD
	Lottery[26] = TextDrawCreate(392.000000, 278.000000, "9"); //Lottery TD
	for(new i = 18; i < 27; i++)
	{
		TextDrawBackgroundColor(Lottery[i], 0x00000033);
		TextDrawFont(Lottery[i], 3);
		TextDrawLetterSize(Lottery[i], 0.780000, 2.599999);
		TextDrawColor(Lottery[i], -1);
		TextDrawSetShadow(Lottery[i], 1);
	}
	Lottery[27] = TextDrawCreate(431.000000, 127.000000, "X");
	TextDrawBackgroundColor(Lottery[27], 0x00000033);
	TextDrawFont(Lottery[27], 1);
	TextDrawLetterSize(Lottery[27], 0.500000, 1.000000);
	TextDrawColor(Lottery[27], -16776961);
	TextDrawSetShadow(Lottery[27], 1);
	Lottery[28] = TextDrawCreate(426.000000, 126.000000, "X");
	TextDrawBackgroundColor(Lottery[28], 0x00000033);
	TextDrawFont(Lottery[28], 5);
	TextDrawLetterSize(Lottery[28], 0.500000, 1.000000);
	TextDrawUseBox(Lottery[28], 1);
	TextDrawBoxColor(Lottery[28], 0x00000033);
	TextDrawTextSize(Lottery[28], 22.000000, 12.000000);
	TextDrawSetPreviewModel(Lottery[28], 13862);
	TextDrawSetPreviewRot(Lottery[28], -16.000000, 0.000000, -55.000000, 1.000000);
	TextDrawSetSelectable(Lottery[28], 1);

	/* End of lottery textdraws */
	
	// start
	
	CrossHair1 = TextDrawCreate(313.000000,173.000000,"-");
	CrossHair2 = TextDrawCreate(298.000000,173.000000,"-");
	CrossHair3 = TextDrawCreate(310.000000,164.000000,"I");
	CrossHair4 = TextDrawCreate(310.000000,179.000000,"I");
	TextDrawAlignment(CrossHair1,0);
	TextDrawAlignment(CrossHair2,0);
	TextDrawAlignment(CrossHair3,0);
	TextDrawAlignment(CrossHair4,0);
	TextDrawBackgroundColor(CrossHair1,0x000000ff);
	TextDrawBackgroundColor(CrossHair2,0x000000ff);
	TextDrawBackgroundColor(CrossHair3,0x000000ff);
	TextDrawBackgroundColor(CrossHair4,0x000000ff);
	TextDrawFont(CrossHair1,1);
	TextDrawLetterSize(CrossHair1,1.000000,1.000000);
	TextDrawFont(CrossHair2,3);
	TextDrawLetterSize(CrossHair2,0.899999,1.000000);
	TextDrawFont(CrossHair3,1);
	TextDrawLetterSize(CrossHair3,0.299999,1.500000);
	TextDrawFont(CrossHair4,1);
	TextDrawLetterSize(CrossHair4,0.299999,1.600000);
	TextDrawColor(CrossHair1,0xffffffff);
	TextDrawColor(CrossHair2,0xffffffff);
	TextDrawColor(CrossHair3,0xffffffff);
	TextDrawColor(CrossHair4,0xffffffff);
	TextDrawSetOutline(CrossHair1,1);
	TextDrawSetOutline(CrossHair2,1);
	TextDrawSetOutline(CrossHair3,1);
	TextDrawSetOutline(CrossHair4,1);
	TextDrawSetProportional(CrossHair1,1);
	TextDrawSetProportional(CrossHair2,1);
	TextDrawSetProportional(CrossHair3,1);
	TextDrawSetProportional(CrossHair4,1);
	TextDrawSetShadow(CrossHair1,1);
	TextDrawSetShadow(CrossHair2,1);
	TextDrawSetShadow(CrossHair3,1);
	TextDrawSetShadow(CrossHair4,1);
	
	// flash bang start
	
	for (new t = 1; t <= 4; t++)
	{
		flashbangStage[t] = TextDrawCreate(-20.000000,2.000000,"|");
		TextDrawUseBox(flashbangStage[t],1);
		TextDrawTextSize(flashbangStage[t],660.000000,22.000000);
		TextDrawAlignment(flashbangStage[t],0);
		TextDrawFont(flashbangStage[t],3);
		TextDrawLetterSize(flashbangStage[t],1.000000,52.200000);
		TextDrawBackgroundColor(flashbangStage[t],0x000000ff);
		TextDrawColor(flashbangStage[t],0x000000ff);
		TextDrawSetOutline(flashbangStage[t],1);
		TextDrawSetProportional(flashbangStage[t],1);
		TextDrawSetShadow(flashbangStage[t],1);
	}

	// flash bang end

	TextDrawBoxColor(flashbangStage[1],0xffffffff);
	TextDrawBoxColor(flashbangStage[2],0xffffffaa);
	TextDrawBoxColor(flashbangStage[3],0xffffff55);
	TextDrawBoxColor(flashbangStage[4],0xffffff22);
    TD_AD_BoxOne = TextDrawCreate(529.000000, 270.000000, "_");
	TextDrawAlignment(TD_AD_BoxOne, 2);
	TextDrawBackgroundColor(TD_AD_BoxOne, 255);
	TextDrawFont(TD_AD_BoxOne, 1);
	TextDrawLetterSize(TD_AD_BoxOne, 1.149996, 5.199998);
	TextDrawColor(TD_AD_BoxOne, -303174145);
	TextDrawSetOutline(TD_AD_BoxOne, 1);
	TextDrawSetProportional(TD_AD_BoxOne, 0);
	TextDrawUseBox(TD_AD_BoxOne, 1);
	TextDrawBoxColor(TD_AD_BoxOne, 120);
	TextDrawTextSize(TD_AD_BoxOne, 55.000000, -163.000000);

    TD_AD_HeadBox = TextDrawCreate(529.000000, 239.000000, "_");
	TextDrawAlignment(TD_AD_HeadBox, 2);
	TextDrawBackgroundColor(TD_AD_HeadBox, 255);
	TextDrawFont(TD_AD_HeadBox, 1);
	TextDrawLetterSize(TD_AD_HeadBox, 0.539999, 2.999999);
	TextDrawColor(TD_AD_HeadBox, 170);
	TextDrawSetOutline(TD_AD_HeadBox, 0);
	TextDrawSetProportional(TD_AD_HeadBox, 1);
	TextDrawSetShadow(TD_AD_HeadBox, 1);
	TextDrawUseBox(TD_AD_HeadBox, 1);
	TextDrawBoxColor(TD_AD_HeadBox, 170);
	TextDrawTextSize(TD_AD_HeadBox, 55.000000, -163.000000);

    TD_CC_Box = TextDrawCreate(430.000000, 135.000000, "_");
	TextDrawBackgroundColor(TD_CC_Box, 255);
	TextDrawFont(TD_CC_Box, 1);
	TextDrawLetterSize(TD_CC_Box, 0.500000, 20.000000);
	TextDrawColor(TD_CC_Box, -1);
	TextDrawSetOutline(TD_CC_Box, 0);
	TextDrawSetProportional(TD_CC_Box, 1);
	TextDrawSetShadow(TD_CC_Box, 1);
	TextDrawUseBox(TD_CC_Box, 1);
	TextDrawBoxColor(TD_CC_Box, 100);
	TextDrawTextSize(TD_CC_Box, 607.000000, 0.000000);

	TD_CC_Headline = TextDrawCreate(425.000000, 128.000000, "Character Creation");
	TextDrawBackgroundColor(TD_CC_Headline, 100);
	TextDrawFont(TD_CC_Headline, 2);
	TextDrawLetterSize(TD_CC_Headline, 0.209999, 1.100000);
	TextDrawColor(TD_CC_Headline, -6749953);
	TextDrawSetOutline(TD_CC_Headline, 1);
	TextDrawSetProportional(TD_CC_Headline, 1);

	TD_CC_Info = TextDrawCreate(440.000000, 145.000000, "Use your cursor to create a new~n~character. In case the cursor is~n~missing, hit Enter.");
	TextDrawBackgroundColor(TD_CC_Info, 100);
	TextDrawFont(TD_CC_Info, 2);
	TextDrawLetterSize(TD_CC_Info, 0.189999, 1.200000);
	TextDrawColor(TD_CC_Info, -1);
	TextDrawSetOutline(TD_CC_Info, 1);
	TextDrawSetProportional(TD_CC_Info, 1);

	TD_CC_GenderLeft = TextDrawCreate(503.000000, 195.000000, "~<~");
	TextDrawBackgroundColor(TD_CC_GenderLeft, 100);
	TextDrawFont(TD_CC_GenderLeft, 2);
	TextDrawLetterSize(TD_CC_GenderLeft, 0.189999, 1.200000);
	TextDrawColor(TD_CC_GenderLeft, -1);
	TextDrawSetOutline(TD_CC_GenderLeft, 1);
	TextDrawSetProportional(TD_CC_GenderLeft, 1);
	TextDrawSetSelectable(TD_CC_GenderLeft, 1);
	TextDrawTextSize(TD_CC_GenderLeft, 511.000000, 10.000000);

	TD_CC_GenderTitle = TextDrawCreate(440.000000, 195.000000, "Gender:");
	TextDrawBackgroundColor(TD_CC_GenderTitle, 100);
	TextDrawFont(TD_CC_GenderTitle, 2);
	TextDrawLetterSize(TD_CC_GenderTitle, 0.189999, 1.200000);
	TextDrawColor(TD_CC_GenderTitle, -6749953);
	TextDrawSetOutline(TD_CC_GenderTitle, 1);
	TextDrawSetProportional(TD_CC_GenderTitle, 1);

	TD_CC_AgeRight = TextDrawCreate(588.000000, 231.000000, "~>~");
	TextDrawBackgroundColor(TD_CC_AgeRight, 100);
	TextDrawFont(TD_CC_AgeRight, 2);
	TextDrawLetterSize(TD_CC_AgeRight, 0.189999, 1.200000);
	TextDrawColor(TD_CC_AgeRight, -1);
	TextDrawSetOutline(TD_CC_AgeRight, 1);
	TextDrawSetProportional(TD_CC_AgeRight, 1);
	TextDrawSetSelectable(TD_CC_AgeRight, 1);
	TextDrawTextSize(TD_CC_AgeRight, 596.000000, 10.000000);

	TD_CC_OutfitTitle = TextDrawCreate(440.000000, 213.000000, "Outfit:");
	TextDrawBackgroundColor(TD_CC_OutfitTitle, 100);
	TextDrawFont(TD_CC_OutfitTitle, 2);
	TextDrawLetterSize(TD_CC_OutfitTitle, 0.190000, 1.200000);
	TextDrawColor(TD_CC_OutfitTitle, -6749953);
	TextDrawSetOutline(TD_CC_OutfitTitle, 1);
	TextDrawSetProportional(TD_CC_OutfitTitle, 1);

	TD_CC_OutfitLeft = TextDrawCreate(503.000000, 213.000000, "~<~");
	TextDrawBackgroundColor(TD_CC_OutfitLeft, 100);
	TextDrawFont(TD_CC_OutfitLeft, 2);
	TextDrawLetterSize(TD_CC_OutfitLeft, 0.190000, 1.200000);
	TextDrawColor(TD_CC_OutfitLeft, -1);
	TextDrawSetOutline(TD_CC_OutfitLeft, 1);
	TextDrawSetProportional(TD_CC_OutfitLeft, 1);
	TextDrawSetSelectable(TD_CC_OutfitLeft, 1);
	TextDrawTextSize(TD_CC_OutfitLeft, 511.000000, 10.000000);

	TD_CC_OutfitRight = TextDrawCreate(588.000000, 213.000000, "~>~");
	TextDrawBackgroundColor(TD_CC_OutfitRight, 100);
	TextDrawFont(TD_CC_OutfitRight, 2);
	TextDrawLetterSize(TD_CC_OutfitRight, 0.189999, 1.200000);
	TextDrawColor(TD_CC_OutfitRight, -1);
	TextDrawSetOutline(TD_CC_OutfitRight, 1);
	TextDrawSetProportional(TD_CC_OutfitRight, 1);
	TextDrawSetSelectable(TD_CC_OutfitRight, 1);
	TextDrawTextSize(TD_CC_OutfitRight, 596.000000, 10.000000);

	TD_CC_AgeTitle = TextDrawCreate(440.000000, 231.000000, "Age:");
	TextDrawBackgroundColor(TD_CC_AgeTitle, 100);
	TextDrawFont(TD_CC_AgeTitle, 2);
	TextDrawLetterSize(TD_CC_AgeTitle, 0.189999, 1.200000);
	TextDrawColor(TD_CC_AgeTitle, -6749953);
	TextDrawSetOutline(TD_CC_AgeTitle, 1);
	TextDrawSetProportional(TD_CC_AgeTitle, 1);

	TD_CC_AgeLeft = TextDrawCreate(503.000000, 231.000000, "~<~");
	TextDrawBackgroundColor(TD_CC_AgeLeft, 100);
	TextDrawFont(TD_CC_AgeLeft, 2);
	TextDrawLetterSize(TD_CC_AgeLeft, 0.189999, 1.200000);
	TextDrawColor(TD_CC_AgeLeft, -1);
	TextDrawSetOutline(TD_CC_AgeLeft, 1);
	TextDrawSetProportional(TD_CC_AgeLeft, 1);
	TextDrawSetSelectable(TD_CC_AgeLeft, 1);
	TextDrawTextSize(TD_CC_AgeLeft, 511.000000, 10.000000);

	TD_CC_ArrivalLeft = TextDrawCreate(503.000000, 249.000000, "~<~");
	TextDrawBackgroundColor(TD_CC_ArrivalLeft, 100);
	TextDrawFont(TD_CC_ArrivalLeft, 2);
	TextDrawLetterSize(TD_CC_ArrivalLeft, 0.189999, 1.200000);
	TextDrawColor(TD_CC_ArrivalLeft, -1);
	TextDrawSetOutline(TD_CC_ArrivalLeft, 1);
	TextDrawSetProportional(TD_CC_ArrivalLeft, 1);
	TextDrawSetSelectable(TD_CC_ArrivalLeft, 1);
	TextDrawTextSize(TD_CC_ArrivalLeft, 511.000000, 10.000000);

	TD_CC_GenderRight = TextDrawCreate(588.000000, 195.000000, "~>~");
	TextDrawBackgroundColor(TD_CC_GenderRight, 100);
	TextDrawFont(TD_CC_GenderRight, 2);
	TextDrawLetterSize(TD_CC_GenderRight, 0.189999, 1.200000);
	TextDrawColor(TD_CC_GenderRight, -1);
	TextDrawSetOutline(TD_CC_GenderRight, 1);
	TextDrawSetProportional(TD_CC_GenderRight, 1);
	TextDrawSetSelectable(TD_CC_GenderRight, 1);
	TextDrawTextSize(TD_CC_GenderRight, 596.000000, 10.000000);

	TD_CC_ArrivalRight = TextDrawCreate(588.000000, 249.000000, "~>~");
	TextDrawBackgroundColor(TD_CC_ArrivalRight, 100);
	TextDrawFont(TD_CC_ArrivalRight, 2);
	TextDrawLetterSize(TD_CC_ArrivalRight, 0.189999, 1.200000);
	TextDrawColor(TD_CC_ArrivalRight, -1);
	TextDrawSetOutline(TD_CC_ArrivalRight, 1);
	TextDrawSetProportional(TD_CC_ArrivalRight, 1);
	TextDrawSetSelectable(TD_CC_ArrivalRight, 1);
	TextDrawTextSize(TD_CC_ArrivalRight, 596.000000, 10.000000);

	TD_CC_ArrivalTitle = TextDrawCreate(440.000000, 249.000000, "Arrival:");
	TextDrawBackgroundColor(TD_CC_ArrivalTitle, 100);
	TextDrawFont(TD_CC_ArrivalTitle, 2);
	TextDrawLetterSize(TD_CC_ArrivalTitle, 0.189999, 1.200000);
	TextDrawColor(TD_CC_ArrivalTitle, -6749953);
	TextDrawSetOutline(TD_CC_ArrivalTitle, 1);
	TextDrawSetProportional(TD_CC_ArrivalTitle, 1);

	TD_CC_Spawn = TextDrawCreate(518.000000, 283.000000, "Save settings and spawn player");
	TextDrawAlignment(TD_CC_Spawn, 2);
	TextDrawBackgroundColor(TD_CC_Spawn, 100);
	TextDrawFont(TD_CC_Spawn, 2);
	TextDrawLetterSize(TD_CC_Spawn, 0.189998, 1.200000);
	TextDrawColor(TD_CC_Spawn, -6749953);
	TextDrawSetOutline(TD_CC_Spawn, 1);
	TextDrawSetProportional(TD_CC_Spawn, 1);
	//TextDrawTextSize(TD_CC_Spawn, 597.000000, 30.000000);
	TextDrawSetSelectable(TD_CC_Spawn, 1);

	TD_CC_SpawnBox = TextDrawCreate(440.000000, 273.000000, "_");
	TextDrawBackgroundColor(TD_CC_SpawnBox, 100);
	TextDrawFont(TD_CC_SpawnBox, 2);
	TextDrawLetterSize(TD_CC_SpawnBox, 0.189998, 3.599999);
	TextDrawColor(TD_CC_SpawnBox, -6749953);
	TextDrawSetOutline(TD_CC_SpawnBox, 1);
	TextDrawSetProportional(TD_CC_SpawnBox, 1);
	TextDrawUseBox(TD_CC_SpawnBox, 1);
	TextDrawBoxColor(TD_CC_SpawnBox, 100);
	TextDrawTextSize(TD_CC_SpawnBox, 597.000000, 0.000000);

	TD_AD_BoxTwo = TextDrawCreate(529.000000, 270.000000, "_");
	TextDrawAlignment(TD_AD_BoxTwo, 2);
	TextDrawBackgroundColor(TD_AD_BoxTwo, 255);
	TextDrawFont(TD_AD_BoxTwo, 1);
	TextDrawLetterSize(TD_AD_BoxTwo, 1.149997, 6.899998);
	TextDrawColor(TD_AD_BoxTwo, -303174145);
	TextDrawSetOutline(TD_AD_BoxTwo, 1);
	TextDrawSetProportional(TD_AD_BoxTwo, 0);
	TextDrawUseBox(TD_AD_BoxTwo, 1);
	TextDrawBoxColor(TD_AD_BoxTwo, 120);
	TextDrawTextSize(TD_AD_BoxTwo, 55.000000, -163.000000);

	TD_AD_BoxThree = TextDrawCreate(529.000000, 270.000000, "_");
	TextDrawAlignment(TD_AD_BoxThree, 2);
	TextDrawBackgroundColor(TD_AD_BoxThree, 255);
	TextDrawFont(TD_AD_BoxThree, 1);
	TextDrawLetterSize(TD_AD_BoxThree, 1.149997, 8.699998);
	TextDrawColor(TD_AD_BoxThree, -303174145);
	TextDrawSetOutline(TD_AD_BoxThree, 1);
	TextDrawSetProportional(TD_AD_BoxThree, 0);
	TextDrawUseBox(TD_AD_BoxThree, 1);
	TextDrawBoxColor(TD_AD_BoxThree, 120);
	TextDrawTextSize(TD_AD_BoxThree, 55.000000, -163.000000);

	TD_AD_Seller = TextDrawCreate(458.000000, 333.000000, "Seller:");
	TextDrawBackgroundColor(TD_AD_Seller, 255);
	TextDrawFont(TD_AD_Seller, 2);
	TextDrawLetterSize(TD_AD_Seller, 0.209997, 1.199998);
	TextDrawColor(TD_AD_Seller, -1);
	TextDrawSetOutline(TD_AD_Seller, 0);
	TextDrawSetProportional(TD_AD_Seller, 1);
	TextDrawSetShadow(TD_AD_Seller, 1);

    TD_P_Box = TextDrawCreate(632.000000, 228.000000, "-");
	TextDrawBackgroundColor(TD_P_Box, 255);
	TextDrawFont(TD_P_Box, 1);
	TextDrawLetterSize(TD_P_Box, 0.000000, 6.000000);
	TextDrawColor(TD_P_Box, -1);
	TextDrawSetOutline(TD_P_Box, 0);
	TextDrawSetProportional(TD_P_Box, 1);
	TextDrawSetShadow(TD_P_Box, 1);
	TextDrawUseBox(TD_P_Box, 1);
	TextDrawBoxColor(TD_P_Box, 100);
	TextDrawTextSize(TD_P_Box, 520.000000, 0.000000);

	TD_P_Headline = TextDrawCreate(531.000000, 234.000000, "Pay'n'Spray");
	TextDrawBackgroundColor(TD_P_Headline, 255);
	TextDrawFont(TD_P_Headline, 2);
	TextDrawLetterSize(TD_P_Headline, 0.220000, 1.000000);
	TextDrawColor(TD_P_Headline, -6749953);
	TextDrawSetOutline(TD_P_Headline, 0);
	TextDrawSetProportional(TD_P_Headline, 1);
	TextDrawSetShadow(TD_P_Headline, 1);

	TD_P_Price = TextDrawCreate(531.000000, 250.000000, "Price:");
	TextDrawBackgroundColor(TD_P_Price, 255);
	TextDrawFont(TD_P_Price, 2);
	TextDrawLetterSize(TD_P_Price, 0.220000, 1.000000);
	TextDrawColor(TD_P_Price, -1);
	TextDrawSetOutline(TD_P_Price, 0);
	TextDrawSetProportional(TD_P_Price, 1);
	TextDrawSetShadow(TD_P_Price, 1);

	TD_P_Time = TextDrawCreate(531.000000, 266.000000, "Time left:");
	TextDrawBackgroundColor(TD_P_Time, 255);
	TextDrawFont(TD_P_Time, 2);
	TextDrawLetterSize(TD_P_Time, 0.220000, 1.000000);
	TextDrawColor(TD_P_Time, -1);
	TextDrawSetOutline(TD_P_Time, 0);
	TextDrawSetProportional(TD_P_Time, 1);
	TextDrawSetShadow(TD_P_Time, 1);

    TD_D_Box = TextDrawCreate(650.000000, 450.000000, "-");
	TextDrawBackgroundColor(TD_D_Box, 255);
	TextDrawFont(TD_D_Box, 1);
	TextDrawLetterSize(TD_D_Box, 0.000000, -8.000000);
	TextDrawColor(TD_D_Box, -1);
	TextDrawSetOutline(TD_D_Box, 0);
	TextDrawSetProportional(TD_D_Box, 1);
	TextDrawSetShadow(TD_D_Box, 1);
	TextDrawUseBox(TD_D_Box, 1);
	TextDrawBoxColor(TD_D_Box, 150);
	TextDrawTextSize(TD_D_Box, -2.000000, 0.000000);
	
	TD_F_Box = TextDrawCreate(650.000000, 450.000000, "-");
	TextDrawBackgroundColor(TD_F_Box, 255);
	TextDrawFont(TD_F_Box, 1);
	TextDrawLetterSize(TD_F_Box, 0.000000, -8.000000);
	TextDrawColor(TD_F_Box, -1);
	TextDrawSetOutline(TD_F_Box, 0);
	TextDrawSetProportional(TD_F_Box, 1);
	TextDrawSetShadow(TD_F_Box, 1);
	TextDrawUseBox(TD_F_Box, 1);
	TextDrawBoxColor(TD_F_Box, 150);
	TextDrawTextSize(TD_F_Box, -2.000000, 0.000000);

    TD_M_Price = TextDrawCreate(15.000000, 409.000000, "Price:");
	TextDrawBackgroundColor(TD_M_Price, 255);
	TextDrawFont(TD_M_Price, 2);
	TextDrawLetterSize(TD_M_Price, 0.209999, 1.000000);
	TextDrawColor(TD_M_Price, -1);
	TextDrawSetOutline(TD_M_Price, 0);
	TextDrawSetProportional(TD_M_Price, 1);
	TextDrawSetShadow(TD_M_Price, 1);

    TD_M_CompRight = TextDrawCreate(446.000000, 396.000000, "~>~");
	TextDrawBackgroundColor(TD_M_CompRight, 255);
	TextDrawFont(TD_M_CompRight, 1);
	TextDrawLetterSize(TD_M_CompRight, 0.519999, 1.200000);
	TextDrawColor(TD_M_CompRight, -6748673);
	TextDrawSetOutline(TD_M_CompRight, 0);
	TextDrawSetProportional(TD_M_CompRight, 1);
	TextDrawSetShadow(TD_M_CompRight, 1);
	TextDrawTextSize(TD_M_CompRight, 454.000000, 10.000000);
	TextDrawSetSelectable(TD_M_CompRight, 1);

	TD_M_CompLeft = TextDrawCreate(238.000000, 396.000000, "~<~");
	TextDrawBackgroundColor(TD_M_CompLeft, 255);
	TextDrawFont(TD_M_CompLeft, 1);
	TextDrawLetterSize(TD_M_CompLeft, 0.519999, 1.200000);
	TextDrawColor(TD_M_CompLeft, -1);
	TextDrawSetOutline(TD_M_CompLeft, 0);
	TextDrawSetProportional(TD_M_CompLeft, 1);
	TextDrawSetShadow(TD_M_CompLeft, 1);
	TextDrawTextSize(TD_M_CompLeft, 247.000000, 10.000000);
	TextDrawSetSelectable(TD_M_CompLeft, 1);

	TD_M_Buy = TextDrawCreate(529.000000, 409.000000, "Buy Component(s)");
	TextDrawBackgroundColor(TD_M_Buy, 255);
	TextDrawFont(TD_M_Buy, 2);
	TextDrawLetterSize(TD_M_Buy, 0.209999, 1.000000);
	TextDrawColor(TD_M_Buy, -1);
	TextDrawSetOutline(TD_M_Buy, 0);
	TextDrawSetProportional(TD_M_Buy, 1);
	TextDrawSetShadow(TD_M_Buy, 1);
	TextDrawTextSize(TD_M_Buy, 612.000000, 10.000000);
	TextDrawSetSelectable(TD_M_Buy, 1);

	TD_M_Leave = TextDrawCreate(530.000000, 426.000000, "Leave Garage");
	TextDrawBackgroundColor(TD_M_Leave, 255);
	TextDrawFont(TD_M_Leave, 2);
	TextDrawLetterSize(TD_M_Leave, 0.209999, 1.000000);
	TextDrawColor(TD_M_Leave, -1);
	TextDrawSetOutline(TD_M_Leave, 0);
	TextDrawSetProportional(TD_M_Leave, 1);
	TextDrawSetShadow(TD_M_Leave, 1);
	TextDrawTextSize(TD_M_Leave, 595.000000, 10.000000);
	TextDrawSetSelectable(TD_M_Leave, 1);

	TD_M_Vehicle = TextDrawCreate(15.000000, 392.000000, "Components For:");
	TextDrawBackgroundColor(TD_M_Vehicle, 255);
	TextDrawFont(TD_M_Vehicle, 2);
	TextDrawLetterSize(TD_M_Vehicle, 0.209999, 1.000000);
	TextDrawColor(TD_M_Vehicle, -1);
	TextDrawSetOutline(TD_M_Vehicle, 0);
	TextDrawSetProportional(TD_M_Vehicle, 1);
	TextDrawSetShadow(TD_M_Vehicle, 1);

	TD_M_Viewing = TextDrawCreate(346.000000, 421.000000, "Viewing Angle");
	TextDrawAlignment(TD_M_Viewing, 2);
	TextDrawBackgroundColor(TD_M_Viewing, 255);
	TextDrawFont(TD_M_Viewing, 2);
	TextDrawLetterSize(TD_M_Viewing, 0.209999, 1.000000);
	TextDrawColor(TD_M_Viewing, -1);
	TextDrawSetOutline(TD_M_Viewing, 0);
	TextDrawSetProportional(TD_M_Viewing, 1);
	TextDrawSetShadow(TD_M_Viewing, 1);

	TD_M_ViewingLeft = TextDrawCreate(238.000000, 420.000000, "~<~");
	TextDrawBackgroundColor(TD_M_ViewingLeft, 255);
	TextDrawFont(TD_M_ViewingLeft, 1);
	TextDrawLetterSize(TD_M_ViewingLeft, 0.519999, 1.200000);
	TextDrawColor(TD_M_ViewingLeft, -1);
	TextDrawSetOutline(TD_M_ViewingLeft, 0);
	TextDrawSetProportional(TD_M_ViewingLeft, 1);
	TextDrawSetShadow(TD_M_ViewingLeft, 1);
	TextDrawTextSize(TD_M_ViewingLeft, 247.000000, 10.000000);
	TextDrawSetSelectable(TD_M_ViewingLeft, 1);

	TD_M_ViewingRight = TextDrawCreate(446.000000, 420.000000, "~>~");
	TextDrawBackgroundColor(TD_M_ViewingRight, 255);
	TextDrawFont(TD_M_ViewingRight, 1);
	TextDrawLetterSize(TD_M_ViewingRight, 0.519999, 1.200000);
	TextDrawColor(TD_M_ViewingRight, -1);
	TextDrawSetOutline(TD_M_ViewingRight, 0);
	TextDrawSetProportional(TD_M_ViewingRight, 1);
	TextDrawSetShadow(TD_M_ViewingRight, 1);
	TextDrawTextSize(TD_M_ViewingRight, 454.000000, 10.000000);
	TextDrawSetSelectable(TD_M_ViewingRight, 1);

    TD_C_Box = TextDrawCreate(632.000000, 294.000000, "-");
	TextDrawBackgroundColor(TD_C_Box, 255);
	TextDrawFont(TD_C_Box, 1);
	TextDrawLetterSize(TD_C_Box, 0.000000, 7.400000);
	TextDrawColor(TD_C_Box, -1);
	TextDrawSetOutline(TD_C_Box, 0);
	TextDrawSetProportional(TD_C_Box, 1);
	TextDrawSetShadow(TD_C_Box, 1);
	TextDrawUseBox(TD_C_Box, 1);
	TextDrawBoxColor(TD_C_Box, 100);
	TextDrawTextSize(TD_C_Box, 520.000000, 1.000000);

	TD_C_Headline = TextDrawCreate(531.000000, 300.000000, "Taxi Meter");
	TextDrawBackgroundColor(TD_C_Headline, 255);
	TextDrawFont(TD_C_Headline, 2);
	TextDrawLetterSize(TD_C_Headline, 0.219999, 1.000000);
	TextDrawColor(TD_C_Headline, -6749953);
	TextDrawSetOutline(TD_C_Headline, 0);
	TextDrawSetProportional(TD_C_Headline, 1);
	TextDrawSetShadow(TD_C_Headline, 1);

	TD_C_Time = TextDrawCreate(531.000000, 330.000000, "Time:");
	TextDrawBackgroundColor(TD_C_Time, 255);
	TextDrawFont(TD_C_Time, 2);
	TextDrawLetterSize(TD_C_Time, 0.219999, 1.000000);
	TextDrawColor(TD_C_Time, -1);
	TextDrawSetOutline(TD_C_Time, 0);
	TextDrawSetProportional(TD_C_Time, 1);
	TextDrawSetShadow(TD_C_Time, 1);

	TD_C_Payment = TextDrawCreate(531.000000, 345.000000, "Payment:");
	TextDrawBackgroundColor(TD_C_Payment, 255);
	TextDrawFont(TD_C_Payment, 2);
	TextDrawLetterSize(TD_C_Payment, 0.219999, 1.000000);
	TextDrawColor(TD_C_Payment, -1);
	TextDrawSetOutline(TD_C_Payment, 0);
	TextDrawSetProportional(TD_C_Payment, 1);
	TextDrawSetShadow(TD_C_Payment, 1);

	TD_C_Fare = TextDrawCreate(531.000000, 315.000000, "Fare:");
	TextDrawBackgroundColor(TD_C_Fare, 255);
	TextDrawFont(TD_C_Fare, 2);
	TextDrawLetterSize(TD_C_Fare, 0.219999, 1.000000);
	TextDrawColor(TD_C_Fare, -1);
	TextDrawSetOutline(TD_C_Fare, 0);
	TextDrawSetProportional(TD_C_Fare, 1);
	TextDrawSetShadow(TD_C_Fare, 1);

    /*TD_T_Box = TextDrawCreate(159.000000, 237.000000, "-");
	TextDrawBackgroundColor(TD_T_Box, 255);
	TextDrawFont(TD_T_Box, 1);
	TextDrawLetterSize(TD_T_Box, 0.000000, 10.200001);
	TextDrawColor(TD_T_Box, -1);
	TextDrawSetOutline(TD_T_Box, 0);
	TextDrawSetProportional(TD_T_Box, 1);
	TextDrawSetShadow(TD_T_Box, 1);
	TextDrawUseBox(TD_T_Box, 1);
	TextDrawBoxColor(TD_T_Box, 100);
	TextDrawTextSize(TD_T_Box, 15.000000, -10.000000);

	TD_T_Headline = TextDrawCreate(26.000000, 243.000000, "Taxi Association (Dispatch)");
	TextDrawBackgroundColor(TD_T_Headline, 255);
	TextDrawFont(TD_T_Headline, 2);
	TextDrawLetterSize(TD_T_Headline, 0.200000, 1.000000);
	TextDrawColor(TD_T_Headline, -6749953);
	TextDrawSetOutline(TD_T_Headline, 0);
	TextDrawSetProportional(TD_T_Headline, 1);
	TextDrawSetShadow(TD_T_Headline, 1);

	TD_T_HeadBox = TextDrawCreate(159.000000, 238.000000, "-");
	TextDrawBackgroundColor(TD_T_HeadBox, 255);
	TextDrawFont(TD_T_HeadBox, 1);
	TextDrawLetterSize(TD_T_HeadBox, 0.000000, 2.400001);
	TextDrawColor(TD_T_HeadBox, -1);
	TextDrawSetOutline(TD_T_HeadBox, 0);
	TextDrawSetProportional(TD_T_HeadBox, 1);
	TextDrawSetShadow(TD_T_HeadBox, 1);
	TextDrawUseBox(TD_T_HeadBox, 1);
	TextDrawBoxColor(TD_T_HeadBox, 100);
	TextDrawTextSize(TD_T_HeadBox, 15.000000, -10.000000);

	TD_T_Info = TextDrawCreate(26.000000, 269.000000, "There is a possible~n~passenger close to your~n~location.");
	TextDrawBackgroundColor(TD_T_Info, 255);
	TextDrawFont(TD_T_Info, 2);
	TextDrawLetterSize(TD_T_Info, 0.200000, 1.000000);
	TextDrawColor(TD_T_Info, -6749953);
	TextDrawSetOutline(TD_T_Info, 0);
	TextDrawSetProportional(TD_T_Info, 1);
	TextDrawSetShadow(TD_T_Info, 1);

	TD_T_Instruction = TextDrawCreate(26.000000, 303.000000, "Use /takecall to accept,~n~/denycall to deny!");
	TextDrawBackgroundColor(TD_T_Instruction, 255);
	TextDrawFont(TD_T_Instruction, 2);
	TextDrawLetterSize(TD_T_Instruction, 0.200000, 1.000000);
	TextDrawColor(TD_T_Instruction, -1);
	TextDrawSetOutline(TD_T_Instruction, 0);
	TextDrawSetProportional(TD_T_Instruction, 1);
	TextDrawSetShadow(TD_T_Instruction, 1);*/

	TD_SC_BoxBuy = TextDrawCreate(482.000000, 348.000000, "-");
	TextDrawBackgroundColor(TD_SC_BoxBuy, 255);
	TextDrawFont(TD_SC_BoxBuy, 0);
	TextDrawLetterSize(TD_SC_BoxBuy, 0.000000, 1.700000);
	TextDrawColor(TD_SC_BoxBuy, -1);
	TextDrawSetOutline(TD_SC_BoxBuy, 0);
	TextDrawSetProportional(TD_SC_BoxBuy, 0);
	TextDrawSetShadow(TD_SC_BoxBuy, 1);
	TextDrawUseBox(TD_SC_BoxBuy, 1);
	TextDrawBoxColor(TD_SC_BoxBuy, 100);
	TextDrawTextSize(TD_SC_BoxBuy, 519.000000, -40.000000);

	TD_SC_BoxCancel = TextDrawCreate(602.000000, 348.000000, "-");
	TextDrawBackgroundColor(TD_SC_BoxCancel, 255);
	TextDrawFont(TD_SC_BoxCancel, 0);
	TextDrawLetterSize(TD_SC_BoxCancel, 0.000000, 1.700000);
	TextDrawColor(TD_SC_BoxCancel, -1);
	TextDrawSetOutline(TD_SC_BoxCancel, 0);
	TextDrawSetProportional(TD_SC_BoxCancel, 0);
	TextDrawSetShadow(TD_SC_BoxCancel, 1);
	TextDrawUseBox(TD_SC_BoxCancel, 1);
	TextDrawBoxColor(TD_SC_BoxCancel, 100);
	TextDrawTextSize(TD_SC_BoxCancel, 559.000000, -40.000000);

    TD_SC_Buy = TextDrawCreate(492.000000, 350.000000, "Buy");
	TextDrawBackgroundColor(TD_SC_Buy, 255);
	TextDrawFont(TD_SC_Buy, 2);
	TextDrawLetterSize(TD_SC_Buy, 0.200000, 1.000000);
	TextDrawColor(TD_SC_Buy, -6749953);
	TextDrawSetOutline(TD_SC_Buy, 0);
	TextDrawSetProportional(TD_SC_Buy, 1);
	TextDrawSetShadow(TD_SC_Buy, 1);
	TextDrawTextSize(TD_SC_Buy, 510.000000, 10.000000);
	TextDrawSetSelectable(TD_SC_Buy, true);

 	TD_SC_Select = TextDrawCreate(485.000000, 350.000000, "Select");
	TextDrawBackgroundColor(TD_SC_Select, 255);
	TextDrawFont(TD_SC_Select, 2);
	TextDrawLetterSize(TD_SC_Select, 0.200000, 1.000000);
	TextDrawColor(TD_SC_Select, -6749953);
	TextDrawSetOutline(TD_SC_Select, 0);
	TextDrawSetProportional(TD_SC_Select, 1);
	TextDrawSetShadow(TD_SC_Select, 1);
	TextDrawTextSize(TD_SC_Select, 515.000000, 10.000000);
	TextDrawSetSelectable(TD_SC_Select, true);

	TD_SC_Cancel = TextDrawCreate(565.000000, 350.000000, "Cancel");
	TextDrawBackgroundColor(TD_SC_Cancel, 255);
	TextDrawFont(TD_SC_Cancel, 2);
	TextDrawLetterSize(TD_SC_Cancel, 0.200000, 1.000000);
	TextDrawColor(TD_SC_Cancel, -6749953);
	TextDrawSetOutline(TD_SC_Cancel, 0);
	TextDrawSetProportional(TD_SC_Cancel, 1);
	TextDrawSetShadow(TD_SC_Cancel, 1);
	TextDrawTextSize(TD_SC_Cancel, 595.000000, 10.000000);
	TextDrawSetSelectable(TD_SC_Cancel, true);

    TD_SC_BoxNext = TextDrawCreate(482.000000, 376.000000, "-");
	TextDrawBackgroundColor(TD_SC_BoxNext, 255);
	TextDrawFont(TD_SC_BoxNext, 0);
	TextDrawLetterSize(TD_SC_BoxNext, 0.000000, 1.700000);
	TextDrawColor(TD_SC_BoxNext, -1);
	TextDrawSetOutline(TD_SC_BoxNext, 0);
	TextDrawSetProportional(TD_SC_BoxNext, 0);
	TextDrawSetShadow(TD_SC_BoxNext, 1);
	TextDrawUseBox(TD_SC_BoxNext, 1);
	TextDrawBoxColor(TD_SC_BoxNext, 100);
	TextDrawTextSize(TD_SC_BoxNext, 519.000000, -40.000000);

	TD_SC_BoxBack = TextDrawCreate(602.000000, 376.000000, "-");
	TextDrawBackgroundColor(TD_SC_BoxBack, 255);
	TextDrawFont(TD_SC_BoxBack, 0);
	TextDrawLetterSize(TD_SC_BoxBack, 0.000000, 1.700000);
	TextDrawColor(TD_SC_BoxBack, -1);
	TextDrawSetOutline(TD_SC_BoxBack, 0);
	TextDrawSetProportional(TD_SC_BoxBack, 0);
	TextDrawSetShadow(TD_SC_BoxBack, 1);
	TextDrawUseBox(TD_SC_BoxBack, 1);
	TextDrawBoxColor(TD_SC_BoxBack, 100);
	TextDrawTextSize(TD_SC_BoxBack, 559.000000, -40.000000);

	TD_SC_Back = TextDrawCreate(490.000000, 378.000000, "Back");
	TextDrawBackgroundColor(TD_SC_Back, 255);
	TextDrawFont(TD_SC_Back, 2);
	TextDrawLetterSize(TD_SC_Back, 0.200000, 1.000000);
	TextDrawColor(TD_SC_Back, -6749953);
	TextDrawSetOutline(TD_SC_Back, 0);
	TextDrawSetProportional(TD_SC_Back, 1);
	TextDrawSetShadow(TD_SC_Back, 1);
	TextDrawTextSize(TD_SC_Back, 510.000000, 10.000000);
	TextDrawSetSelectable(TD_SC_Back, true);

	TD_SC_Next = TextDrawCreate(569.000000, 378.000000, "Next");
	TextDrawBackgroundColor(TD_SC_Next, 255);
	TextDrawFont(TD_SC_Next, 2);
	TextDrawLetterSize(TD_SC_Next, 0.200000, 1.000000);
	TextDrawColor(TD_SC_Next, -6749953);
	TextDrawSetOutline(TD_SC_Next, 0);
	TextDrawSetProportional(TD_SC_Next, 1);
	TextDrawSetShadow(TD_SC_Next, 1);
	TextDrawTextSize(TD_SC_Next, 590.000000, 10.000000);
	TextDrawSetSelectable(TD_SC_Next, true);

	TD_Bar_Top = TextDrawCreate(639.000000, 0.000000, "-");
	TextDrawAlignment(TD_Bar_Top, 3);
	TextDrawBackgroundColor(TD_Bar_Top, 255);
	TextDrawFont(TD_Bar_Top, 0);
	TextDrawLetterSize(TD_Bar_Top, 0.500000, 19.000000);
	TextDrawColor(TD_Bar_Top, 255);
	TextDrawSetOutline(TD_Bar_Top, 0);
	TextDrawSetProportional(TD_Bar_Top, 1);
	TextDrawSetShadow(TD_Bar_Top, 1);
	TextDrawUseBox(TD_Bar_Top, 1);
	TextDrawBoxColor(TD_Bar_Top, 255);
	TextDrawTextSize(TD_Bar_Top, 2.000000, 28.000000);

	TD_Bar_Bottom = TextDrawCreate(639.000000, 276.000000, "-");
	TextDrawAlignment(TD_Bar_Bottom, 3);
	TextDrawBackgroundColor(TD_Bar_Bottom, 255);
	TextDrawFont(TD_Bar_Bottom, 0);
	TextDrawLetterSize(TD_Bar_Bottom, 0.500000, 19.000000);
	TextDrawColor(TD_Bar_Bottom, 255);
	TextDrawSetOutline(TD_Bar_Bottom, 0);
	TextDrawSetProportional(TD_Bar_Bottom, 1);
	TextDrawSetShadow(TD_Bar_Bottom, 1);
	TextDrawUseBox(TD_Bar_Bottom, 1);
	TextDrawBoxColor(TD_Bar_Bottom, 255);
	TextDrawTextSize(TD_Bar_Bottom, 2.000000, 28.000000);

	TD_Website = TextDrawCreate(480.000000, 5.000000, "www.lifengame.com");
	TextDrawBackgroundColor(TD_Website, 100);
	TextDrawFont(TD_Website, 3);
	TextDrawLetterSize(TD_Website, 0.250000, 1.200000);
	TextDrawColor(TD_Website, -56);
	TextDrawSetOutline(TD_Website, 1);
	TextDrawSetProportional(TD_Website, 1);

	TD_Spawn_Box = TextDrawCreate(639.000000, 430.000000, "-");
	TextDrawAlignment(TD_Spawn_Box, 3);
	TextDrawBackgroundColor(TD_Spawn_Box, 255);
	TextDrawFont(TD_Spawn_Box, 1);
	TextDrawLetterSize(TD_Spawn_Box, -0.009999, 1.799999);
	TextDrawColor(TD_Spawn_Box, -1);
	TextDrawSetOutline(TD_Spawn_Box, 0);
	TextDrawSetProportional(TD_Spawn_Box, 1);
	TextDrawSetShadow(TD_Spawn_Box, 1);
	TextDrawUseBox(TD_Spawn_Box, 1);
	TextDrawBoxColor(TD_Spawn_Box, 100);
	TextDrawTextSize(TD_Spawn_Box, 0.000000, 0.000000);

	TD_Spawn_Arrow_Left = TextDrawCreate(250.000000, 430.000000, "~<~");
	TextDrawBackgroundColor(TD_Spawn_Arrow_Left, 255);
	TextDrawFont(TD_Spawn_Arrow_Left, 1);
	TextDrawLetterSize(TD_Spawn_Arrow_Left, 1.589999, 1.549999);
	TextDrawColor(TD_Spawn_Arrow_Left, -1);
	TextDrawSetOutline(TD_Spawn_Arrow_Left, 0);
	TextDrawSetProportional(TD_Spawn_Arrow_Left, 1);
	TextDrawSetShadow(TD_Spawn_Arrow_Left, 1);

	TD_Spawn_Arrow_Right = TextDrawCreate(380.000000, 430.000000, "~>~");
	TextDrawBackgroundColor(TD_Spawn_Arrow_Right, 255);
	TextDrawFont(TD_Spawn_Arrow_Right, 1);
	TextDrawLetterSize(TD_Spawn_Arrow_Right, 1.589999, 1.549999);
	TextDrawColor(TD_Spawn_Arrow_Right, -1);
	TextDrawSetOutline(TD_Spawn_Arrow_Right, 0);
	TextDrawSetProportional(TD_Spawn_Arrow_Right, 1);
	TextDrawSetShadow(TD_Spawn_Arrow_Right, 1);

	TD_SM_Box = TextDrawCreate(632.000000, 374.000000, "-");
	TextDrawBackgroundColor(TD_SM_Box, 255);
	TextDrawFont(TD_SM_Box, 1);
	TextDrawLetterSize(TD_SM_Box, 0.000000, 7.399999);
	TextDrawColor(TD_SM_Box, -1);
	TextDrawSetOutline(TD_SM_Box, 0);
	TextDrawSetProportional(TD_SM_Box, 1);
	TextDrawSetShadow(TD_SM_Box, 1);
	TextDrawUseBox(TD_SM_Box, 1);
	TextDrawBoxColor(TD_SM_Box, 100);
	TextDrawTextSize(TD_SM_Box, 460.000000, 19.000000);

	TD_SM_Vehiclename = TextDrawCreate(471.000000, 380.000000, "Vehicle Model:");
	TextDrawBackgroundColor(TD_SM_Vehiclename, 255);
	TextDrawFont(TD_SM_Vehiclename, 2);
	TextDrawLetterSize(TD_SM_Vehiclename, 0.220000, 1.000000);
	TextDrawColor(TD_SM_Vehiclename, -1);
	TextDrawSetOutline(TD_SM_Vehiclename, 0);
	TextDrawSetProportional(TD_SM_Vehiclename, 1);
	TextDrawSetShadow(TD_SM_Vehiclename, 1);

	TD_SM_Speed = TextDrawCreate(471.000000, 395.000000, "Speed:");
	TextDrawBackgroundColor(TD_SM_Speed, 255);
	TextDrawFont(TD_SM_Speed, 2);
	TextDrawLetterSize(TD_SM_Speed, 0.220000, 1.000000);
	TextDrawColor(TD_SM_Speed, -1);
	TextDrawSetOutline(TD_SM_Speed, 0);
	TextDrawSetProportional(TD_SM_Speed, 1);
	TextDrawSetShadow(TD_SM_Speed, 1);

	TD_SM_Fuel = TextDrawCreate(471.000000, 410.000000, "Fuel:");
	TextDrawBackgroundColor(TD_SM_Fuel, 255);
	TextDrawFont(TD_SM_Fuel, 2);
	TextDrawLetterSize(TD_SM_Fuel, 0.220000, 1.000000);
	TextDrawColor(TD_SM_Fuel, -1);
	TextDrawSetOutline(TD_SM_Fuel, 0);
	TextDrawSetProportional(TD_SM_Fuel, 1);
	TextDrawSetShadow(TD_SM_Fuel, 1);

	TD_Ammu_Box = TextDrawCreate(632.000000, 421.000000, "-");
	TextDrawBackgroundColor(TD_Ammu_Box, 255);
	TextDrawFont(TD_Ammu_Box, 1);
	TextDrawLetterSize(TD_Ammu_Box, 0.000000, 1.699999);
	TextDrawColor(TD_Ammu_Box, -1);
	TextDrawSetOutline(TD_Ammu_Box, 0);
	TextDrawSetProportional(TD_Ammu_Box, 1);
	TextDrawSetShadow(TD_Ammu_Box, 1);
	TextDrawUseBox(TD_Ammu_Box, 1);
	TextDrawBoxColor(TD_Ammu_Box, 100);
	TextDrawTextSize(TD_Ammu_Box, 450.000000, 0.000000);

	TD_Ammu_Headline = TextDrawCreate(462.000000, 423.000000, "Current Weapon:");
	TextDrawBackgroundColor(TD_Ammu_Headline, 255);
	TextDrawFont(TD_Ammu_Headline, 2);
	TextDrawLetterSize(TD_Ammu_Headline, 0.200000, 1.000000);
	TextDrawColor(TD_Ammu_Headline, -6749953);
	TextDrawSetOutline(TD_Ammu_Headline, 0);
	TextDrawSetProportional(TD_Ammu_Headline, 1);
	TextDrawSetShadow(TD_Ammu_Headline, 1);

	TD_LAPD_Box = TextDrawCreate(632.000000, 391.000000, "_");
	TextDrawBackgroundColor(TD_LAPD_Box, 255);
	TextDrawFont(TD_LAPD_Box, 1);
	TextDrawLetterSize(TD_LAPD_Box, 1.350000, 1.699999);
	TextDrawColor(TD_LAPD_Box, -1);
	TextDrawSetOutline(TD_LAPD_Box, 0);
	TextDrawSetProportional(TD_LAPD_Box, 1);
	TextDrawSetShadow(TD_LAPD_Box, 1);
	TextDrawUseBox(TD_LAPD_Box, 1);
	TextDrawBoxColor(TD_LAPD_Box, 100);
	TextDrawTextSize(TD_LAPD_Box, 450.000000, -10.000000);

	TD_LAPD_Uniform = TextDrawCreate(462.000000, 394.000000, "Uniform:");
	TextDrawBackgroundColor(TD_LAPD_Uniform, 255);
	TextDrawFont(TD_LAPD_Uniform, 2);
	TextDrawLetterSize(TD_LAPD_Uniform, 0.200000, 1.000000);
	TextDrawColor(TD_LAPD_Uniform, -6749953);
	TextDrawSetOutline(TD_LAPD_Uniform, 0);
	TextDrawSetProportional(TD_LAPD_Uniform, 1);
	TextDrawSetShadow(TD_LAPD_Uniform, 1);

	TD_LAPD_Arrow_Right = TextDrawCreate(614.000000, 394.000000, "~>~");
	TextDrawBackgroundColor(TD_LAPD_Arrow_Right, 255);
	TextDrawFont(TD_LAPD_Arrow_Right, 2);
	TextDrawLetterSize(TD_LAPD_Arrow_Right, 0.200000, 1.000000);
	TextDrawColor(TD_LAPD_Arrow_Right, -1);
	TextDrawSetOutline(TD_LAPD_Arrow_Right, 0);
	TextDrawSetProportional(TD_LAPD_Arrow_Right, 1);
	TextDrawSetShadow(TD_LAPD_Arrow_Right, 1);

	TD_LAPD_Choose = TextDrawCreate(577.000000, 394.000000, "Choose");
	TextDrawBackgroundColor(TD_LAPD_Choose, 255);
	TextDrawFont(TD_LAPD_Choose, 2);
	TextDrawLetterSize(TD_LAPD_Choose, 0.200000, 1.000000);
	TextDrawColor(TD_LAPD_Choose, -1);
	TextDrawSetOutline(TD_LAPD_Choose, 0);
	TextDrawSetProportional(TD_LAPD_Choose, 1);
	TextDrawSetShadow(TD_LAPD_Choose, 1);

	TD_LAPD_Arrow_Left = TextDrawCreate(566.000000, 394.000000, "~<~");
	TextDrawBackgroundColor(TD_LAPD_Arrow_Left, 255);
	TextDrawFont(TD_LAPD_Arrow_Left, 2);
	TextDrawLetterSize(TD_LAPD_Arrow_Left, 0.200000, 1.000000);
	TextDrawColor(TD_LAPD_Arrow_Left, -1);
	TextDrawSetOutline(TD_LAPD_Arrow_Left, 0);
	TextDrawSetProportional(TD_LAPD_Arrow_Left, 1);
	TextDrawSetShadow(TD_LAPD_Arrow_Left, 1);

	TD_DMV_Box = TextDrawCreate(443.000000, 374.000000, "_");
	TextDrawBackgroundColor(TD_DMV_Box, 255);
	TextDrawFont(TD_DMV_Box, 1);
	TextDrawLetterSize(TD_DMV_Box, 0.700000, 7.399999);
	TextDrawColor(TD_DMV_Box, -1);
	TextDrawSetOutline(TD_DMV_Box, 0);
	TextDrawSetProportional(TD_DMV_Box, 1);
	TextDrawSetShadow(TD_DMV_Box, 1);
	TextDrawUseBox(TD_DMV_Box, 1);
	TextDrawBoxColor(TD_DMV_Box, 100);
	TextDrawTextSize(TD_DMV_Box, 206.000000, 0.000000);

	TD_DMV_Headline = TextDrawCreate(218.000000, 380.000000, "Remember:");
	TextDrawBackgroundColor(TD_DMV_Headline, 255);
	TextDrawFont(TD_DMV_Headline, 2);
	TextDrawLetterSize(TD_DMV_Headline, 0.220000, 1.000000);
	TextDrawColor(TD_DMV_Headline, -1);
	TextDrawSetOutline(TD_DMV_Headline, 0);
	TextDrawSetProportional(TD_DMV_Headline, 1);
	TextDrawSetShadow(TD_DMV_Headline, 1);

	// Information-Textdraw (Pickup-Picking)

	TD_Info_Box = TextDrawCreate(609.000000, 136.000000, "_");
	TextDrawBackgroundColor(TD_Info_Box, 255);
	TextDrawFont(TD_Info_Box, 1);
	TextDrawLetterSize(TD_Info_Box, 0.500000, 5.200000);
	TextDrawColor(TD_Info_Box, -1);
	TextDrawSetOutline(TD_Info_Box, 0);
	TextDrawSetProportional(TD_Info_Box, 1);
	TextDrawSetShadow(TD_Info_Box, 10);
	TextDrawUseBox(TD_Info_Box, 1);
	TextDrawBoxColor(TD_Info_Box, 100);
	TextDrawTextSize(TD_Info_Box, 450.000000, 20.000000);

	TD_Info_Headbox = TextDrawCreate(609.000000, 136.000000, "_");
	TextDrawBackgroundColor(TD_Info_Headbox, 255);
	TextDrawFont(TD_Info_Headbox, 1);
	TextDrawLetterSize(TD_Info_Headbox, 0.500000, 2.400000);
	TextDrawColor(TD_Info_Headbox, -1);
	TextDrawSetOutline(TD_Info_Headbox, 0);
	TextDrawSetProportional(TD_Info_Headbox, 1);
	TextDrawSetShadow(TD_Info_Headbox, 10);
	TextDrawUseBox(TD_Info_Headbox, 1);
	TextDrawBoxColor(TD_Info_Headbox, 100);
	TextDrawTextSize(TD_Info_Headbox, 450.000000, -10.000000);

	TD_Info_Headline = TextDrawCreate(461.000000, 142.000000, "Information");
	TextDrawBackgroundColor(TD_Info_Headline, 255);
	TextDrawFont(TD_Info_Headline, 2);
	TextDrawLetterSize(TD_Info_Headline, 0.200000, 1.000000);
	TextDrawColor(TD_Info_Headline, -6749953);
	TextDrawSetOutline(TD_Info_Headline, 0);
	TextDrawSetProportional(TD_Info_Headline, 1);
	TextDrawSetShadow(TD_Info_Headline, 1);

	TD_Info_Icon = TextDrawCreate(590.000000, 127.000000, "LD_CHAT:badchat");
	TextDrawAlignment(TD_Info_Icon, 2);
	TextDrawBackgroundColor(TD_Info_Icon, 255);
	TextDrawFont(TD_Info_Icon, 4);
	TextDrawLetterSize(TD_Info_Icon, -0.299998, 1.000000);
	TextDrawColor(TD_Info_Icon, -1);
	TextDrawSetOutline(TD_Info_Icon, 0);
	TextDrawSetProportional(TD_Info_Icon, 1);
	TextDrawSetShadow(TD_Info_Icon, 1);
	TextDrawUseBox(TD_Info_Icon, 1);
	TextDrawBoxColor(TD_Info_Icon, 255);
	TextDrawTextSize(TD_Info_Icon, 18.000000, 18.000000);

	// Reminder

	TD_R_Truck = TextDrawCreate(528.000000, 106.000000, "hud:radar_truck");
	TextDrawBackgroundColor(TD_R_Truck, 255);
	TextDrawFont(TD_R_Truck, 4);
	TextDrawLetterSize(TD_R_Truck, 0.400000, 1.000000);
	TextDrawColor(TD_R_Truck, -1);
	TextDrawSetOutline(TD_R_Truck, 0);
	TextDrawSetProportional(TD_R_Truck, 1);
	TextDrawSetShadow(TD_R_Truck, 1);
	TextDrawUseBox(TD_R_Truck, 1);
	TextDrawBoxColor(TD_R_Truck, 255);
	TextDrawTextSize(TD_R_Truck, 9.000000, 10.000000);
	/*饥饿*/
TD_R_Hunger[0] = TextDrawCreate(526.000000, 142.000000, "~n~");
TextDrawBackgroundColor(TD_R_Hunger[0], 255);
TextDrawFont(TD_R_Hunger[0], 1);
TextDrawLetterSize(TD_R_Hunger[0], 0.500000, 1.000000);
TextDrawColor(TD_R_Hunger[0], 255);
TextDrawSetOutline(TD_R_Hunger[0], 0);
TextDrawSetProportional(TD_R_Hunger[0], 1);
TextDrawSetShadow(TD_R_Hunger[0], 1);
TextDrawUseBox(TD_R_Hunger[0], 1);
TextDrawBoxColor(TD_R_Hunger[0], 1145324680);
TextDrawTextSize(TD_R_Hunger[0], 597.000000, 28.000000);
TextDrawSetSelectable(TD_R_Hunger[0], 0);

TD_R_Hunger[1] = TextDrawCreate(527.000000, 143.000000, "~n~");
TextDrawBackgroundColor(TD_R_Hunger[1], 255);
TextDrawFont(TD_R_Hunger[1], 1);
TextDrawLetterSize(TD_R_Hunger[1], 0.500000, 0.699999);
TextDrawColor(TD_R_Hunger[1], -1);
TextDrawSetOutline(TD_R_Hunger[1], 0);
TextDrawSetProportional(TD_R_Hunger[1], 1);
TextDrawSetShadow(TD_R_Hunger[1], 1);
TextDrawUseBox(TD_R_Hunger[1], 1);
TextDrawBoxColor(TD_R_Hunger[1], 136);
TextDrawTextSize(TD_R_Hunger[1], 596.000000, 0.000000);
TextDrawSetSelectable(TD_R_Hunger[1], 0);

TD_R_Hunger[2] = TextDrawCreate(540.000000, 144.000000, "~n~");
TextDrawBackgroundColor(TD_R_Hunger[2], 255);
TextDrawFont(TD_R_Hunger[2], 1);
TextDrawLetterSize(TD_R_Hunger[2], 0.500000, 0.399999);
TextDrawColor(TD_R_Hunger[2], -1);
TextDrawSetOutline(TD_R_Hunger[2], 0);
TextDrawSetProportional(TD_R_Hunger[2], 1);
TextDrawSetShadow(TD_R_Hunger[2], 1);
TextDrawUseBox(TD_R_Hunger[2], 1);
TextDrawBoxColor(TD_R_Hunger[2], 255);
TextDrawTextSize(TD_R_Hunger[2], 595.000000, 0.000000);
TextDrawSetSelectable(TD_R_Hunger[2], 0);

TD_R_Hunger[3] = TextDrawCreate(527.000000, 142.000000, "hud:radar_pizza");
TextDrawBackgroundColor(TD_R_Hunger[3], 0);
TextDrawFont(TD_R_Hunger[3], 4);
TextDrawLetterSize(TD_R_Hunger[3], 0.500000, 1.000000);
TextDrawColor(TD_R_Hunger[3], -1);
TextDrawSetOutline(TD_R_Hunger[3], 0);
TextDrawSetProportional(TD_R_Hunger[3], 1);
TextDrawSetShadow(TD_R_Hunger[3], 1);
TextDrawUseBox(TD_R_Hunger[3], 1);
TextDrawBoxColor(TD_R_Hunger[3], 255);
TextDrawTextSize(TD_R_Hunger[3], 9.000000, 8.000000);
TextDrawSetSelectable(TD_R_Hunger[3], 0);
/*饥渴*/
TD_R_Thirst[0] = TextDrawCreate(526.000000, 162.000000, "~n~");
TextDrawBackgroundColor(TD_R_Thirst[0], 255);
TextDrawFont(TD_R_Thirst[0], 1);
TextDrawLetterSize(TD_R_Thirst[0], 0.500000, 1.000000);
TextDrawColor(TD_R_Thirst[0], 255);
TextDrawSetOutline(TD_R_Thirst[0], 0);
TextDrawSetProportional(TD_R_Thirst[0], 1);
TextDrawSetShadow(TD_R_Thirst[0], 1);
TextDrawUseBox(TD_R_Thirst[0], 1);
TextDrawBoxColor(TD_R_Thirst[0], 1145324680);
TextDrawTextSize(TD_R_Thirst[0], 597.000000, 28.000000);
TextDrawSetSelectable(TD_R_Thirst[0], 0);

TD_R_Thirst[1] = TextDrawCreate(527.000000, 163.000000, "~n~");
TextDrawBackgroundColor(TD_R_Thirst[1], 255);
TextDrawFont(TD_R_Thirst[1], 1);
TextDrawLetterSize(TD_R_Thirst[1], 0.500000, 0.699999);
TextDrawColor(TD_R_Thirst[1], -1);
TextDrawSetOutline(TD_R_Thirst[1], 0);
TextDrawSetProportional(TD_R_Thirst[1], 1);
TextDrawSetShadow(TD_R_Thirst[1], 1);
TextDrawUseBox(TD_R_Thirst[1], 1);
TextDrawBoxColor(TD_R_Thirst[1], 136);
TextDrawTextSize(TD_R_Thirst[1], 596.000000, 0.000000);
TextDrawSetSelectable(TD_R_Thirst[1], 0);

TD_R_Thirst[2] = TextDrawCreate(540.000000, 164.000000, "~n~");
TextDrawBackgroundColor(TD_R_Thirst[2], 255);
TextDrawFont(TD_R_Thirst[2], 1);
TextDrawLetterSize(TD_R_Thirst[2], 0.500000, 0.399999);
TextDrawColor(TD_R_Thirst[2], -1);
TextDrawSetOutline(TD_R_Thirst[2], 0);
TextDrawSetProportional(TD_R_Thirst[2], 1);
TextDrawSetShadow(TD_R_Thirst[2], 1);
TextDrawUseBox(TD_R_Thirst[2], 1);
TextDrawBoxColor(TD_R_Thirst[2], 255);
TextDrawTextSize(TD_R_Thirst[2], 595.000000, 0.000000);
TextDrawSetSelectable(TD_R_Thirst[2], 0);

TD_R_Thirst[3] = TextDrawCreate(527.000000, 162.000000, "hud:radar_dateDrink");
TextDrawBackgroundColor(TD_R_Thirst[3], 0);
TextDrawFont(TD_R_Thirst[3], 4);
TextDrawLetterSize(TD_R_Thirst[3], 0.500000, 1.000000);
TextDrawColor(TD_R_Thirst[3], -1);
TextDrawSetOutline(TD_R_Thirst[3], 0);
TextDrawSetProportional(TD_R_Thirst[3], 1);
TextDrawSetShadow(TD_R_Thirst[3], 1);
TextDrawUseBox(TD_R_Thirst[3], 1);
TextDrawBoxColor(TD_R_Thirst[3], 255);
TextDrawTextSize(TD_R_Thirst[3], 9.000000, 8.000000);
TextDrawSetSelectable(TD_R_Thirst[3], 0);

	TD_R_Gun = TextDrawCreate(529.000000, 401.000000, "hud:radar_ammugun");
	TextDrawBackgroundColor(TD_R_Gun, 255);
	TextDrawFont(TD_R_Gun, 4);
	TextDrawLetterSize(TD_R_Gun, 0.500000, 1.000000);
	TextDrawColor(TD_R_Gun, -1);
	TextDrawSetOutline(TD_R_Gun, 0);
	TextDrawSetProportional(TD_R_Gun, 1);
	TextDrawSetShadow(TD_R_Gun, 1);
	TextDrawUseBox(TD_R_Gun, 1);
	TextDrawBoxColor(TD_R_Gun, 255);
	TextDrawTextSize(TD_R_Gun, 8.000000, 8.000000);

	TD_R_GunText = TextDrawCreate(545.000000, 400.000000, "Reload (YES-KEY)");
	TextDrawBackgroundColor(TD_R_GunText, 255);
	TextDrawFont(TD_R_GunText, 2);
	TextDrawLetterSize(TD_R_GunText, 0.200000, 1.000000);
	TextDrawColor(TD_R_GunText, -1);
	TextDrawSetOutline(TD_R_GunText, 0);
	TextDrawSetProportional(TD_R_GunText, 1);
	TextDrawSetShadow(TD_R_GunText, 1);

	// Dealership
    TD_D_Vehicle = TextDrawCreate(417.000000, 392.000000, "Vehicle");
	TextDrawBackgroundColor(TD_D_Vehicle, 255);
	TextDrawFont(TD_D_Vehicle, 2);
	TextDrawLetterSize(TD_D_Vehicle, 0.209999, 1.000000);
	TextDrawColor(TD_D_Vehicle, -1);
	TextDrawSetOutline(TD_D_Vehicle, 0);
	TextDrawSetProportional(TD_D_Vehicle, 1);
	TextDrawSetShadow(TD_D_Vehicle, 1);
	
	TD_D_Color1 = TextDrawCreate(417.000000, 409.000000, "Color 1");
	TextDrawBackgroundColor(TD_D_Color1, 255);
	TextDrawFont(TD_D_Color1, 2);
	TextDrawLetterSize(TD_D_Color1, 0.209999, 1.000000);
	TextDrawColor(TD_D_Color1, -1);
	TextDrawSetOutline(TD_D_Color1, 0);
	TextDrawSetProportional(TD_D_Color1, 1);
	TextDrawSetShadow(TD_D_Color1, 1);

	TD_D_Color2 = TextDrawCreate(417.000000, 426.000000, "Color 2");
	TextDrawBackgroundColor(TD_D_Color2, 255);
	TextDrawFont(TD_D_Color2, 2);
	TextDrawLetterSize(TD_D_Color2, 0.209999, 1.000000);
	TextDrawColor(TD_D_Color2, -1);
	TextDrawSetOutline(TD_D_Color2, 0);
	TextDrawSetProportional(TD_D_Color2, 1);
	TextDrawSetShadow(TD_D_Color2, 1);

	TD_D_Price = TextDrawCreate(15.000000, 409.000000, "Price:");
	TextDrawBackgroundColor(TD_D_Price, 255);
	TextDrawFont(TD_D_Price, 2);
	TextDrawLetterSize(TD_D_Price, 0.209999, 1.000000);
	TextDrawColor(TD_D_Price, -1);
	TextDrawSetOutline(TD_D_Price, 0);
	TextDrawSetProportional(TD_D_Price, 1);
	TextDrawSetShadow(TD_D_Price, 1);

	TD_D_Name = TextDrawCreate(15.000000, 392.000000, "Vehicle Name:");
	TextDrawBackgroundColor(TD_D_Name, 255);
	TextDrawFont(TD_D_Name, 2);
	TextDrawLetterSize(TD_D_Name, 0.209999, 1.000000);
	TextDrawColor(TD_D_Name, -1);
	TextDrawSetOutline(TD_D_Name, 0);
	TextDrawSetProportional(TD_D_Name, 1);
	TextDrawSetShadow(TD_D_Name, 1);

	TD_D_Seats = TextDrawCreate(15.000000, 426.000000, "Seats:");
	TextDrawBackgroundColor(TD_D_Seats, 255);
	TextDrawFont(TD_D_Seats, 2);
	TextDrawLetterSize(TD_D_Seats, 0.209999, 1.000000);
	TextDrawColor(TD_D_Seats, -1);
	TextDrawSetOutline(TD_D_Seats, 0);
	TextDrawSetProportional(TD_D_Seats, 1);
	TextDrawSetShadow(TD_D_Seats, 1);

	TD_D_Buy = TextDrawCreate(528.000000, 392.000000, "Buy Vehicle");
	TextDrawBackgroundColor(TD_D_Buy, 255);
	TextDrawFont(TD_D_Buy, 2);
	TextDrawLetterSize(TD_D_Buy, 0.209999, 1.000000);
	TextDrawColor(TD_D_Buy, -1);
	TextDrawSetOutline(TD_D_Buy, 0);
	TextDrawSetProportional(TD_D_Buy, 1);
	TextDrawSetShadow(TD_D_Buy, 1);
	TextDrawTextSize(TD_D_Buy, 583.000000, 10.000000);
	TextDrawSetSelectable(TD_D_Buy, true);

	TD_D_Leave = TextDrawCreate(528.000000, 409.000000, "Leave Dealership");
	TextDrawBackgroundColor(TD_D_Leave, 255);
	TextDrawFont(TD_D_Leave, 2);
	TextDrawLetterSize(TD_D_Leave, 0.209999, 1.000000);
	TextDrawColor(TD_D_Leave, -1);
	TextDrawSetOutline(TD_D_Leave, 0);
	TextDrawSetProportional(TD_D_Leave, 1);
	TextDrawSetShadow(TD_D_Leave, 1);
	TextDrawTextSize(TD_D_Leave, 611.000000, 10.000000);
	TextDrawSetSelectable(TD_D_Leave, true);

	TD_D_VehicleLeft = TextDrawCreate(400.000000, 391.000000, "~<~");
	TextDrawBackgroundColor(TD_D_VehicleLeft, 255);
	TextDrawFont(TD_D_VehicleLeft, 2);
	TextDrawLetterSize(TD_D_VehicleLeft, 0.209999, 1.200000);
	TextDrawColor(TD_D_VehicleLeft, -1);
	TextDrawSetOutline(TD_D_VehicleLeft, 0);
	TextDrawSetProportional(TD_D_VehicleLeft, 1);
	TextDrawSetShadow(TD_D_VehicleLeft, 1);
	TextDrawTextSize(TD_D_VehicleLeft, 409.000000, 10.000000);
	TextDrawSetSelectable(TD_D_VehicleLeft, true);

	TD_D_Color1Left = TextDrawCreate(400.000000, 408.000000, "~<~");
	TextDrawBackgroundColor(TD_D_Color1Left, 255);
	TextDrawFont(TD_D_Color1Left, 2);
	TextDrawLetterSize(TD_D_Color1Left, 0.209999, 1.200000);
	TextDrawColor(TD_D_Color1Left, -1);
	TextDrawSetOutline(TD_D_Color1Left, 0);
	TextDrawSetProportional(TD_D_Color1Left, 1);
	TextDrawSetShadow(TD_D_Color1Left, 1);
	TextDrawTextSize(TD_D_Color1Left, 409.000000, 10.000000);
	TextDrawSetSelectable(TD_D_Color1Left, true);

	TD_D_Color2Left = TextDrawCreate(400.000000, 425.000000, "~<~");
	TextDrawBackgroundColor(TD_D_Color2Left, 255);
	TextDrawFont(TD_D_Color2Left, 2);
	TextDrawLetterSize(TD_D_Color2Left, 0.209999, 1.200000);
	TextDrawColor(TD_D_Color2Left, -1);
	TextDrawSetOutline(TD_D_Color2Left, 0);
	TextDrawSetProportional(TD_D_Color2Left, 1);
	TextDrawSetShadow(TD_D_Color2Left, 1);
	TextDrawTextSize(TD_D_Color2Left, 409.000000, 10.000000);
	TextDrawSetSelectable(TD_D_Color2Left, true);

	TD_D_Color2Right = TextDrawCreate(462.000000, 425.000000, "~>~");
	TextDrawBackgroundColor(TD_D_Color2Right, 255);
	TextDrawFont(TD_D_Color2Right, 2);
	TextDrawLetterSize(TD_D_Color2Right, 0.209999, 1.200000);
	TextDrawColor(TD_D_Color2Right, -1);
	TextDrawSetOutline(TD_D_Color2Right, 0);
	TextDrawSetProportional(TD_D_Color2Right, 1);
	TextDrawSetShadow(TD_D_Color2Right, 1);
	TextDrawTextSize(TD_D_Color2Right, 469.000000, 10.000000);
	TextDrawSetSelectable(TD_D_Color2Right, true);

	TD_D_Color1Right = TextDrawCreate(462.000000, 408.000000, "~>~");
	TextDrawBackgroundColor(TD_D_Color1Right, 255);
	TextDrawFont(TD_D_Color1Right, 2);
	TextDrawLetterSize(TD_D_Color1Right, 0.209999, 1.200000);
	TextDrawColor(TD_D_Color1Right, -1);
	TextDrawSetOutline(TD_D_Color1Right, 0);
	TextDrawSetProportional(TD_D_Color1Right, 1);
	TextDrawSetShadow(TD_D_Color1Right, 1);
	TextDrawTextSize(TD_D_Color1Right, 469.000000, 10.000000);
	TextDrawSetSelectable(TD_D_Color1Right, true);

	TD_D_VehicleRight = TextDrawCreate(462.000000, 391.000000, "~>~");
	TextDrawBackgroundColor(TD_D_VehicleRight, 255);
	TextDrawFont(TD_D_VehicleRight, 2);
	TextDrawLetterSize(TD_D_VehicleRight, 0.209999, 1.200000);
	TextDrawColor(TD_D_VehicleRight, -6749953);
	TextDrawSetOutline(TD_D_VehicleRight, 0);
	TextDrawSetProportional(TD_D_VehicleRight, 1);
	TextDrawSetShadow(TD_D_VehicleRight, 1);
	TextDrawTextSize(TD_D_VehicleRight, 469.000000, 10.000000);
	TextDrawSetSelectable(TD_D_VehicleRight, true);

	TD_D_Cargo = TextDrawCreate(205.000000, 392.000000, "Cargo Capacity:");
	TextDrawBackgroundColor(TD_D_Cargo, 255);
	TextDrawFont(TD_D_Cargo, 2);
	TextDrawLetterSize(TD_D_Cargo, 0.209999, 1.000000);
	TextDrawColor(TD_D_Cargo, -1);
	TextDrawSetOutline(TD_D_Cargo, 0);
	TextDrawSetProportional(TD_D_Cargo, 1);
	TextDrawSetShadow(TD_D_Cargo, 1);

	TD_D_Tank = TextDrawCreate(205.000000, 409.000000, "Tank Capacity:");
	TextDrawBackgroundColor(TD_D_Tank, 255);
	TextDrawFont(TD_D_Tank, 2);
	TextDrawLetterSize(TD_D_Tank, 0.209999, 1.000000);
	TextDrawColor(TD_D_Tank, -1);
	TextDrawSetOutline(TD_D_Tank, 0);
	TextDrawSetProportional(TD_D_Tank, 1);
	TextDrawSetShadow(TD_D_Tank, 1);
	
	/* --- 家具------------------*/
	TD_F_Furniture = TextDrawCreate(416.000000, 392.000000, "Furniture");
	TextDrawBackgroundColor(TD_F_Furniture, 255);
	TextDrawFont(TD_F_Furniture, 2);
	TextDrawLetterSize(TD_F_Furniture, 0.209999, 1.000000);
	TextDrawColor(TD_F_Furniture, -1);
	TextDrawSetOutline(TD_F_Furniture, 0);
	TextDrawSetProportional(TD_F_Furniture, 1);
	TextDrawSetShadow(TD_F_Furniture, 1);

	TD_F_Type = TextDrawCreate(419.300000, 409.000000, "Type");
	TextDrawBackgroundColor(TD_F_Type, 255);
	TextDrawFont(TD_F_Type, 2);
	TextDrawLetterSize(TD_F_Type, 0.209999, 1.000000);
	TextDrawColor(TD_F_Type, -1);
	TextDrawSetOutline(TD_F_Type, 0);
	TextDrawSetProportional(TD_F_Type, 1);
	TextDrawSetShadow(TD_F_Type, 1);

	TD_F_Price = TextDrawCreate(15.000000, 409.000000, "Price:");
	TextDrawBackgroundColor(TD_F_Price, 255);
	TextDrawFont(TD_F_Price, 2);
	TextDrawLetterSize(TD_F_Price, 0.209999, 1.000000);
	TextDrawColor(TD_F_Price, -1);
	TextDrawSetOutline(TD_F_Price, 0);
	TextDrawSetProportional(TD_F_Price, 1);
	TextDrawSetShadow(TD_F_Price, 1);

	TD_F_Name = TextDrawCreate(15.000000, 392.000000, "Furniture Name:");
	TextDrawBackgroundColor(TD_F_Name, 255);
	TextDrawFont(TD_F_Name, 2);
	TextDrawLetterSize(TD_F_Name, 0.209999, 1.000000);
	TextDrawColor(TD_F_Name, -1);
	TextDrawSetOutline(TD_F_Name, 0);
	TextDrawSetProportional(TD_F_Name, 1);
	TextDrawSetShadow(TD_F_Name, 1);

	TD_F_Woods = TextDrawCreate(15.000000, 426.000000, "Mats:");
	TextDrawBackgroundColor(TD_F_Woods, 255);
	TextDrawFont(TD_F_Woods, 2);
	TextDrawLetterSize(TD_F_Woods, 0.209999, 1.000000);
	TextDrawColor(TD_F_Woods, -1);
	TextDrawSetOutline(TD_F_Woods, 0);
	TextDrawSetProportional(TD_F_Woods, 1);
	TextDrawSetShadow(TD_F_Woods, 1);

	TD_F_Buy = TextDrawCreate(528.000000, 392.000000, "Buy Furniture");
	TextDrawBackgroundColor(TD_F_Buy, 255);
	TextDrawFont(TD_F_Buy, 2);
	TextDrawLetterSize(TD_F_Buy, 0.209999, 1.000000);
	TextDrawColor(TD_F_Buy, -1);
	TextDrawSetOutline(TD_F_Buy, 0);
	TextDrawSetProportional(TD_F_Buy, 1);
	TextDrawSetShadow(TD_F_Buy, 1);
	TextDrawTextSize(TD_F_Buy, 583.000000, 10.000000);
	TextDrawSetSelectable(TD_F_Buy, true);

	TD_F_Leave = TextDrawCreate(528.000000, 419.000000, "Leave Store");
	TextDrawBackgroundColor(TD_F_Leave, 255);
	TextDrawFont(TD_F_Leave, 2);
	TextDrawLetterSize(TD_F_Leave, 0.209999, 1.000000);
	TextDrawColor(TD_F_Leave, -1);
	TextDrawSetOutline(TD_F_Leave, 0);
	TextDrawSetProportional(TD_F_Leave, 1);
	TextDrawSetShadow(TD_F_Leave, 1);
	TextDrawTextSize(TD_F_Leave, 611.000000, 10.000000);
	TextDrawSetSelectable(TD_F_Leave, true);

	TD_F_Left = TextDrawCreate(400.000000, 391.000000, "~<~");
	TextDrawBackgroundColor(TD_F_Left, 255);
	TextDrawFont(TD_F_Left, 2);
	TextDrawLetterSize(TD_F_Left, 0.209999, 1.200000);
	TextDrawColor(TD_F_Left, -1);
	TextDrawSetOutline(TD_F_Left, 0);
	TextDrawSetProportional(TD_F_Left, 1);
	TextDrawSetShadow(TD_F_Left, 1);
	TextDrawTextSize(TD_F_Left, 409.000000, 10.000000);
	TextDrawSetSelectable(TD_F_Left, true);

	TD_F_TypeLeft = TextDrawCreate(400.000000, 408.000000, "~<~");
	TextDrawBackgroundColor(TD_F_TypeLeft, 255);
	TextDrawFont(TD_F_TypeLeft, 2);
	TextDrawLetterSize(TD_F_TypeLeft, 0.209999, 1.200000);
	TextDrawColor(TD_F_TypeLeft, -1);
	TextDrawSetOutline(TD_F_TypeLeft, 0);
	TextDrawSetProportional(TD_F_TypeLeft, 1);
	TextDrawSetShadow(TD_F_TypeLeft, 1);
	TextDrawTextSize(TD_F_TypeLeft, 409.000000, 10.000000);
	TextDrawSetSelectable(TD_F_TypeLeft, true);

	TD_F_TypeRight = TextDrawCreate(462.000000, 408.000000, "~>~");
	TextDrawBackgroundColor(TD_F_TypeRight, 255);
	TextDrawFont(TD_F_TypeRight, 2);
	TextDrawLetterSize(TD_F_TypeRight, 0.209999, 1.200000);
	TextDrawColor(TD_F_TypeRight, -1);
	TextDrawSetOutline(TD_F_TypeRight, 0);
	TextDrawSetProportional(TD_F_TypeRight, 1);
	TextDrawSetShadow(TD_F_TypeRight, 1);
	TextDrawTextSize(TD_F_TypeRight, 469.000000, 10.000000);
	TextDrawSetSelectable(TD_F_TypeRight, true);

	TD_F_Right = TextDrawCreate(462.000000, 391.000000, "~>~");
	TextDrawBackgroundColor(TD_F_Right, 255);
	TextDrawFont(TD_F_Right, 2);
	TextDrawLetterSize(TD_F_Right, 0.209999, 1.200000);
	TextDrawColor(TD_F_Right, -6749953);
	TextDrawSetOutline(TD_F_Right, 0);
	TextDrawSetProportional(TD_F_Right, 1);
	TextDrawSetShadow(TD_F_Right, 1);
	TextDrawTextSize(TD_F_Right, 469.000000, 10.000000);
	TextDrawSetSelectable(TD_F_Right, true);

	TD_F_Woodsleft = TextDrawCreate(205.000000, 392.000000, "Mats Left:");
	TextDrawBackgroundColor(TD_F_Woodsleft, 255);
	TextDrawFont(TD_F_Woodsleft, 2);
	TextDrawLetterSize(TD_F_Woodsleft, 0.209999, 1.000000);
	TextDrawColor(TD_F_Woodsleft, -1);
	TextDrawSetOutline(TD_F_Woodsleft, 0);
	TextDrawSetProportional(TD_F_Woodsleft, 1);
	TextDrawSetShadow(TD_F_Woodsleft, 1);
	
	TD_F_Type2 = TextDrawCreate(205.000000, 409.000000, "Type:");
	TextDrawBackgroundColor(TD_F_Type2, 255);
	TextDrawFont(TD_F_Type2, 2);
	TextDrawLetterSize(TD_F_Type2, 0.209999, 1.000000);
	TextDrawColor(TD_F_Type2, -1);
	TextDrawSetOutline(TD_F_Type2, 0);
	TextDrawSetProportional(TD_F_Type2, 1);
	TextDrawSetShadow(TD_F_Type2, 1);
	
	
	SetTimer("XB_KeepAverage",30000,1);
	MapAndreas_Init(3);
	XB_LoadFurnitures();
	/* --- Executing Success-Message --- */
    XB_CreateMountain();
	print("[GAMEMODE] 服务端验证通过, 正在向获取验证密钥..");
	// Server Verification by SAKURA
	new Safe = GetMaxPlayers();
	new RcInput[] = " ";
	new szCmd[64];
	if(Safe != 0) // get passed
	{
		print("密钥获取成功.. 进行下一步骤.");
		printf("Rcon-Key: %s", GM_SCRIPT_PEPPER);
		format(szCmd, sizeof(szCmd), "password %s", RcInput);
		SendRconCommand(szCmd);
	}
	else // nope, kill this server
	{
	    print("密钥验证失败...");
		print("原因: 服务器内存在用户可能会导致数据溢出等问题.");
		SendRconCommand("exit");
	}
	return 1;
}

public OnGameModeExit() {

//    new panels, doors, lights, tires;

/*	for(new i=0; i<GetVehiclePoolSize(); i++)
	{
	    KillTimer(FlashTime[i]);

	    GetVehicleDamageStatus(i, panels, doors, lights, tires);
	    UpdateVehicleDamageStatus(i, panels, doors, 0, tires);
	}*/
	/* --- Unsetting Includes --- */
	
	/*new iter_next;
	foreach(Remains, a)
	{
		DestroyRemains(a, true);
		Iter_SafeRemove(Remains, a, iter_next);
		a = iter_next;
	}*/
	
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			SaveData(i);
		}
	}
	DOF2_Exit();
	mysql_close(sqlHandle);
	return 1;
}

public OnPlayerRequestClass(playerid, classid) {
    #if DEBUG != 0
	    printf("DEBUG: OnPlayerRequestClass(%i, %i).", playerid, classid);
	#endif
	
    SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], 1027.8540, -1013.3001, 35.7402, 43.2636, 0, 0, 0, 0, 0, 0);
	SpawnPlayer(playerid);
	return 1;
}

public OnPlayerRequestSpawn(playerid) {
    #if DEBUG != 0
	    printf("DEBUG: OnPlayerRequestSpawn(%i).", playerid);
	#endif
	
	return 1;
}

public OnPlayerFloodControl(playerid, iCount, iTimeSpan) {
    if(iCount > 2 && iTimeSpan < 8000) {
        Ban(playerid);
    }
}

public OnLookupComplete(playerid)
{
    new IP[16], version[56], name[MAX_PLAYER_NAME];
    GetPlayerIp(playerid, IP, sizeof(IP));
    GetPlayerVersion(playerid, version, sizeof(version));
    GetPlayerName(playerid, name, sizeof(name));
	if(IsProxyUser(playerid))
	{
 		new string[128];
		format(string, sizeof(string), "管理员提示: %s 链接了服务器 %s. (疑似使用代理)", GetNameWithSpace(playerid), GetPlayerHost(playerid));
		SendMessageToAdmins(string);
	}
	return 1;
}

public OnPlayerConnect(playerid)
{
	#if DEBUG != 0
	    printf("DEBUG: OnPlayerConnect(%i).", playerid);
	#endif
	for(new i = 0; i< GetMaxPlayers(); i++)
	{
        if(!IsPlayerConnected(i)) continue;
        OPRF_Processed[i] = false;
    }
    //TogglePlayerClock(playerid,1);
	allowkf[playerid]=-1;
    Tag_Load(playerid);
    BetCowNumber[playerid]=0;
	PlayerInfo[playerid][pTentID] = -1;
	BrokenLegs[playerid] = 0;
	tempSerial[playerid]=0;
	// mdc shit
	new IP[16], name[MAX_PLAYER_NAME];
    GetPlayerIp(playerid, IP, sizeof(IP));
    GetPlayerName(playerid, name, sizeof(name));
    SendClientMessage(playerid, COLOR_LIGHTRED, "系统正在进行数据验证与接收, 此步骤可能需要10秒左右.");
	LoadPlayerTextDraws(playerid);
	xb_woodinhand[playerid]=false;
	IsChecking[playerid] = false;
	IsCarryingBody[playerid] = false;
	ColorSelectedWhite[playerid] = false;
	ColorSelectedBlue[playerid] = false;
	gWanted{playerid} = 0;
	gAntiRadar{playerid} = 0;
	gAntiRadarAuto{playerid} = 0;
	gAntiRadarBeep{playerid} = 0;
	gDashCam{playerid} = 0;
	gDashCamAuto{playerid} = 0;
	gIsInMDC{playerid} = 0;
	xb_fobj[playerid]=-1;
	PlayerInfo[playerid][pCold]=0;
	PlayerInfo[playerid][pCancer]=0;
	PlayerInfo[playerid][pColdVar]=0;
	PlayerInfo[playerid][pCancerVar]=0;
	
	//MDC tracer
	updateTD[playerid] = TextDrawCreate(500, 140.0, "NO INFO AVAILABLE");
	TextDrawUseBox(updateTD[playerid], 1);
	TextDrawFont(updateTD[playerid], 1);
	TextDrawLetterSize(updateTD[playerid], 0.2, 1);
	TextDrawSetShadow(updateTD[playerid], 0);
	TextDrawSetOutline(updateTD[playerid], 0);
	TextDrawBackgroundColor(updateTD[playerid], 0x000000FF);
	TextDrawBoxColor(updateTD[playerid], 0x000000FF);
	TextDrawColor(updateTD[playerid], 0xFFFFFFFF);
	TextDrawTextSize(updateTD[playerid], 600.0, 250.0);
	// end
	/* --- Anti Hack System --- */

	SetPlayerHealthAndLimit(playerid, 100);
	SetPlayerArmourAndLimit(playerid, 0);
	ResetPlayerMoney(playerid);

	/* --- Player Variables --- */

	SetPVarInt(playerid, "Calling", -1);
	SetPVarInt(playerid, "friskPlayer", -1);
	SetPVarInt(playerid, "BuyPartner", -1);
	SetPVarInt(playerid, "SellPartner", -1);
	SetPVarInt(playerid, "RequestedGreet", -1);
	SetPVarInt(playerid, "OfferRepaint", -1);
	SetPVarInt(playerid, "OfferPaintjob", -1);
	SetPVarInt(playerid, "OfferRefill", -1);
	SetPVarInt(playerid, "OfferPaintjobRemoval", -1);
	SetPVarInt(playerid, "OfferEngineRepair", -1);
	SetPVarInt(playerid, "OfferBodyRepair", -1);
	SetPVarInt(playerid, "TowingVehicle", -1);
	
	SetPVarInt(playerid, "FPObject", 0);
 	SetPVarInt(playerid, "VPObject", 0);
 	SetPVarInt(playerid, "FPS", 0);
	
	/* --- Variables --- */
	
	PlayerInfo[playerid][pBoombox] = -1;
	takingselfie[playerid] = 0;
	system_findcar[playerid] = 0;
	HouseScanMission[playerid] = 0;
	/* --- dataHandler --- */

	newPlayerElement(playerid);

	/* --- Settings --- */

    new Hour,
		Minute,
		Second;

	gettime(Hour, Minute, Second);
	SetWorldTime(Hour);
	SetPlayerTime(playerid, Hour, Minute);
    SetPlayerColor(playerid, COLOR_WHITE);
    TogglePlayerSpectating(playerid, 1);
    StopAudioStreamForPlayer(playerid);
    CancelSelectTextDraw(playerid);

    /* --- Removal of Objects --- */

    RemoveObjects(playerid);

    /* --- Removing all Objects from the Players Body --- */

    for(new i; i != 15; i++) {
    	RemovePlayerAttachedObject(playerid, i);
    }

    /* --- Loading/Creating needed Data --- */

    if(!IsPlayerNPC(playerid))
	{
    	if(serverrestart == 1)
		{
    	    /* --- Kicking connecting users if server is about to restart --- */

		    SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 系统正在重启, 请等一会再试.");
			KickDelay(playerid);
			return 1;
		}
		else
		{
		    GetPlayerName(playerid, PlayerInfo[playerid][pName], MAX_PLAYER_NAME);
			if(!IsValidPlayerName(PlayerInfo[playerid][pName]))
			{
			    /* --- Kicking connecting users with wrong Username-Format --- */
                if(strcmp(PlayerInfo[playerid][pName], "Hash") != 0)
   				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "服务器: 你需要一个角色扮演名称. 格式: 名_姓.");
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "服务器: 名称至少需要3个字节并且为 a-z, A-Z格式, 开头必须大写.");
			 		KickDelay(playerid);
			 		return 1;
		 		}
			}
			else
			{
			    format(PlayerInfo[playerid][pSpaceName], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][pName]);
 				PlayerInfo[playerid][pSpaceName][strfind(PlayerInfo[playerid][pSpaceName], "_")] = ' ';

				/* --- Creating Per-Player-Textdraws --- */
				/// Hit mark
				PlayerInfo[playerid][pHitmark] = TextDrawCreate(334.500000, 173.600000, "X");
				TextDrawBackgroundColor(PlayerInfo[playerid][pHitmark], 255);
				TextDrawFont(PlayerInfo[playerid][pHitmark], 2);
				TextDrawLetterSize(PlayerInfo[playerid][pHitmark], 0.500000, 1.000000);
				TextDrawColor(PlayerInfo[playerid][pHitmark], -1);
				TextDrawSetOutline(PlayerInfo[playerid][pHitmark], 1);
				TextDrawSetProportional(PlayerInfo[playerid][pHitmark], 1);
				
				
                PlayerInfo[playerid][LotteryNumbersTD] = CreatePlayerTextDraw(playerid, 392.000000, 158.000000, "0 - 0 - 0"); //Lottery TD
				PlayerTextDrawBackgroundColor(playerid, PlayerInfo[playerid][LotteryNumbersTD], 0x00000033);
				PlayerTextDrawFont(playerid, PlayerInfo[playerid][LotteryNumbersTD], 2);
				PlayerTextDrawLetterSize(playerid, PlayerInfo[playerid][LotteryNumbersTD], 0.340000, 1.599999);
				PlayerTextDrawSetShadow(playerid, PlayerInfo[playerid][LotteryNumbersTD], 1);
	
                TD_CC_AgeValue = CreatePlayerTextDraw(playerid, 550.000000, 231.000000, "24");
				PlayerTextDrawAlignment(playerid, TD_CC_AgeValue, 2);
				PlayerTextDrawBackgroundColor(playerid, TD_CC_AgeValue, 100);
				PlayerTextDrawFont(playerid, TD_CC_AgeValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_CC_AgeValue, 0.189999, 1.200000);
				PlayerTextDrawColor(playerid, TD_CC_AgeValue, -1);
				PlayerTextDrawSetOutline(playerid, TD_CC_AgeValue, 1);
				PlayerTextDrawSetProportional(playerid, TD_CC_AgeValue, 1);

				TD_CC_OutfitValue = CreatePlayerTextDraw(playerid, 550.000000, 213.000000, "106");
				PlayerTextDrawAlignment(playerid, TD_CC_OutfitValue, 2);
				PlayerTextDrawBackgroundColor(playerid, TD_CC_OutfitValue, 100);
				PlayerTextDrawFont(playerid, TD_CC_OutfitValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_CC_OutfitValue, 0.189999, 1.200000);
				PlayerTextDrawColor(playerid, TD_CC_OutfitValue, -1);
				PlayerTextDrawSetOutline(playerid, TD_CC_OutfitValue, 1);
				PlayerTextDrawSetProportional(playerid, TD_CC_OutfitValue, 1);

				TD_CC_GenderValue = CreatePlayerTextDraw(playerid, 550.000000, 195.000000, "Female");
				PlayerTextDrawAlignment(playerid, TD_CC_GenderValue, 2);
				PlayerTextDrawBackgroundColor(playerid, TD_CC_GenderValue, 100);
				PlayerTextDrawFont(playerid, TD_CC_GenderValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_CC_GenderValue, 0.189999, 1.200000);
				PlayerTextDrawColor(playerid, TD_CC_GenderValue, -1);
				PlayerTextDrawSetOutline(playerid, TD_CC_GenderValue, 1);
				PlayerTextDrawSetProportional(playerid, TD_CC_GenderValue, 1);

				TD_CC_ArrivalValue = CreatePlayerTextDraw(playerid, 550.000000, 249.000000, "Train Station");
				PlayerTextDrawAlignment(playerid, TD_CC_ArrivalValue, 2);
				PlayerTextDrawBackgroundColor(playerid, TD_CC_ArrivalValue, 100);
				PlayerTextDrawFont(playerid, TD_CC_ArrivalValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_CC_ArrivalValue, 0.189999, 1.200000);
				PlayerTextDrawColor(playerid, TD_CC_ArrivalValue, -1);
				PlayerTextDrawSetOutline(playerid, TD_CC_ArrivalValue, 1);
				PlayerTextDrawSetProportional(playerid, TD_CC_ArrivalValue, 1);

                TD_JOB_FirstLine = CreatePlayerTextDraw(playerid, 151.000000, 380.000000, "Delivery to 2162 Guantanamo St., East Los Angeles.");
				PlayerTextDrawBackgroundColor(playerid, TD_JOB_FirstLine, 100);
				PlayerTextDrawFont(playerid, TD_JOB_FirstLine, 2);
				PlayerTextDrawLetterSize(playerid, TD_JOB_FirstLine, 0.219999, 1.000000);
				PlayerTextDrawColor(playerid, TD_JOB_FirstLine, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_JOB_FirstLine, 1);
				PlayerTextDrawSetProportional(playerid, TD_JOB_FirstLine, 1);

				TD_JOB_SecondLine = CreatePlayerTextDraw(playerid, 151.000000, 396.000000, "There are currently 3 pizzas in your pizza bike's box.");
				PlayerTextDrawBackgroundColor(playerid, TD_JOB_SecondLine, 100);
				PlayerTextDrawFont(playerid, TD_JOB_SecondLine, 2);
				PlayerTextDrawLetterSize(playerid, TD_JOB_SecondLine, 0.219999, 1.000000);
				PlayerTextDrawColor(playerid, TD_JOB_SecondLine, -1);
				PlayerTextDrawSetOutline(playerid, TD_JOB_SecondLine, 1);
				PlayerTextDrawSetProportional(playerid, TD_JOB_SecondLine, 1);

				TD_Mid_Info = CreatePlayerTextDraw(playerid, 320.000000, 250.000000, "~b~LAPD ~w~Locker Room~n~~g~Duty: ~w~/duty~n~~g~Locker: ~w~/locker");
				PlayerTextDrawAlignment(playerid, TD_Mid_Info, 2);
				PlayerTextDrawBackgroundColor(playerid, TD_Mid_Info, 255);
				PlayerTextDrawFont(playerid, TD_Mid_Info, 2);
				PlayerTextDrawLetterSize(playerid, TD_Mid_Info, 0.360000, 2.099998);
				PlayerTextDrawColor(playerid, TD_Mid_Info, -1);
				PlayerTextDrawSetOutline(playerid, TD_Mid_Info, 0);
				PlayerTextDrawSetProportional(playerid, TD_Mid_Info, 1);
				PlayerTextDrawSetShadow(playerid, TD_Mid_Info, 1);

				TD_Money_Update = CreatePlayerTextDraw(playerid, 488.000000, 77.000000, "~r~-$300");
				PlayerTextDrawAlignment(playerid, TD_Money_Update, 3);
				PlayerTextDrawBackgroundColor(playerid, TD_Money_Update, 255);
				PlayerTextDrawFont(playerid, TD_Money_Update, 2);
				PlayerTextDrawLetterSize(playerid, TD_Money_Update, 0.360000, 2.099997);
				PlayerTextDrawColor(playerid, TD_Money_Update, -1);
				PlayerTextDrawSetOutline(playerid, TD_Money_Update, 0);
				PlayerTextDrawSetProportional(playerid, TD_Money_Update, 1);
				PlayerTextDrawSetShadow(playerid, TD_Money_Update, 1);

                TD_Zone = CreatePlayerTextDraw(playerid, 10.000000, 430.000000, "Loading ...");
				PlayerTextDrawBackgroundColor(playerid, TD_Zone, 255);
				PlayerTextDrawFont(playerid, TD_Zone, 2);
				PlayerTextDrawLetterSize(playerid, TD_Zone, 0.200000, 1.000000);
				PlayerTextDrawColor(playerid, TD_Zone, -56);
				PlayerTextDrawSetOutline(playerid, TD_Zone, 1);
				PlayerTextDrawSetProportional(playerid, TD_Zone, 1);

                TD_AD_Price = CreatePlayerTextDraw(playerid, 458.000000, 302.000000, "Price:");
				PlayerTextDrawBackgroundColor(playerid, TD_AD_Price, 255);
				PlayerTextDrawFont(playerid, TD_AD_Price, 2);
				PlayerTextDrawLetterSize(playerid, TD_AD_Price, 0.209996, 1.199998);
				PlayerTextDrawColor(playerid, TD_AD_Price, -1);
				PlayerTextDrawSetOutline(playerid, TD_AD_Price, 0);
				PlayerTextDrawSetProportional(playerid, TD_AD_Price, 1);
				PlayerTextDrawSetShadow(playerid, TD_AD_Price, 1);

				TD_AD_Headline = CreatePlayerTextDraw(playerid, 529.000000, 245.000000, "PROPERTY FOR SALE");
				PlayerTextDrawAlignment(playerid, TD_AD_Headline, 2);
				PlayerTextDrawBackgroundColor(playerid, TD_AD_Headline, 255);
				PlayerTextDrawFont(playerid, TD_AD_Headline, 2);
				PlayerTextDrawLetterSize(playerid, TD_AD_Headline, 0.279998, 1.500000);
				PlayerTextDrawColor(playerid, TD_AD_Headline, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_AD_Headline, 0);
				PlayerTextDrawSetProportional(playerid, TD_AD_Headline, 1);
				PlayerTextDrawSetShadow(playerid, TD_AD_Headline, 1);

				TD_AD_Taxes = CreatePlayerTextDraw(playerid, 458.000000, 317.000000, "Taxes:");
				PlayerTextDrawBackgroundColor(playerid, TD_AD_Taxes, 255);
				PlayerTextDrawFont(playerid, TD_AD_Taxes, 2);
				PlayerTextDrawLetterSize(playerid, TD_AD_Taxes, 0.209996, 1.199998);
				PlayerTextDrawColor(playerid, TD_AD_Taxes, -1);
				PlayerTextDrawSetOutline(playerid, TD_AD_Taxes, 0);
				PlayerTextDrawSetProportional(playerid, TD_AD_Taxes, 1);
				PlayerTextDrawSetShadow(playerid, TD_AD_Taxes, 1);

				TD_AD_CityZip = CreatePlayerTextDraw(playerid, 529.000000, 282.000000, "Los Angeles, SA 92802");
				PlayerTextDrawAlignment(playerid, TD_AD_CityZip, 2);
				PlayerTextDrawBackgroundColor(playerid, TD_AD_CityZip, 255);
				PlayerTextDrawFont(playerid, TD_AD_CityZip, 2);
				PlayerTextDrawLetterSize(playerid, TD_AD_CityZip, 0.209997, 1.199998);
				PlayerTextDrawColor(playerid, TD_AD_CityZip, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_AD_CityZip, 0);
				PlayerTextDrawSetProportional(playerid, TD_AD_CityZip, 1);
				PlayerTextDrawSetShadow(playerid, TD_AD_CityZip, 1);

				TD_AD_PriceValue = CreatePlayerTextDraw(playerid, 598.000000, 302.000000, "$45000");
				PlayerTextDrawAlignment(playerid, TD_AD_PriceValue, 3);
				PlayerTextDrawBackgroundColor(playerid, TD_AD_PriceValue, 255);
				PlayerTextDrawFont(playerid, TD_AD_PriceValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_AD_PriceValue, 0.209996, 1.199998);
				PlayerTextDrawColor(playerid, TD_AD_PriceValue, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_AD_PriceValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_AD_PriceValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_AD_PriceValue, 1);

				TD_AD_TaxesValue = CreatePlayerTextDraw(playerid, 598.000000, 317.000000, "$250/per month");
				PlayerTextDrawAlignment(playerid, TD_AD_TaxesValue, 3);
				PlayerTextDrawBackgroundColor(playerid, TD_AD_TaxesValue, 255);
				PlayerTextDrawFont(playerid, TD_AD_TaxesValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_AD_TaxesValue, 0.209996, 1.199998);
				PlayerTextDrawColor(playerid, TD_AD_TaxesValue, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_AD_TaxesValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_AD_TaxesValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_AD_TaxesValue, 1);

				TD_AD_SellerValue = CreatePlayerTextDraw(playerid, 598.000000, 333.000000, "Bank");
				PlayerTextDrawAlignment(playerid, TD_AD_SellerValue, 3);
				PlayerTextDrawBackgroundColor(playerid, TD_AD_SellerValue, 255);
				PlayerTextDrawFont(playerid, TD_AD_SellerValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_AD_SellerValue, 0.209996, 1.199998);
				PlayerTextDrawColor(playerid, TD_AD_SellerValue, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_AD_SellerValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_AD_SellerValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_AD_SellerValue, 1);

				TD_AD_HousenumberStreet = CreatePlayerTextDraw(playerid, 528.000000, 272.000000, "1001 Mason St.");
				PlayerTextDrawAlignment(playerid, TD_AD_HousenumberStreet, 2);
				PlayerTextDrawBackgroundColor(playerid, TD_AD_HousenumberStreet, 255);
				PlayerTextDrawFont(playerid, TD_AD_HousenumberStreet, 2);
				PlayerTextDrawLetterSize(playerid, TD_AD_HousenumberStreet, 0.209996, 1.199998);
				PlayerTextDrawColor(playerid, TD_AD_HousenumberStreet, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_AD_HousenumberStreet, 0);
				PlayerTextDrawSetProportional(playerid, TD_AD_HousenumberStreet, 1);
				PlayerTextDrawSetShadow(playerid, TD_AD_HousenumberStreet, 1);

                TD_P_TimeValue = CreatePlayerTextDraw(playerid, 585.000000, 266.000000, "2:56");
				PlayerTextDrawBackgroundColor(playerid, TD_P_TimeValue, 255);
				PlayerTextDrawFont(playerid, TD_P_TimeValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_P_TimeValue, 0.220000, 1.000000);
				PlayerTextDrawColor(playerid, TD_P_TimeValue, -26113);
				PlayerTextDrawSetOutline(playerid, TD_P_TimeValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_P_TimeValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_P_TimeValue, 1);

				TD_P_PriceValue = CreatePlayerTextDraw(playerid, 585.000000, 250.000000, "$529");
				PlayerTextDrawBackgroundColor(playerid, TD_P_PriceValue, 255);
				PlayerTextDrawFont(playerid, TD_P_PriceValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_P_PriceValue, 0.220000, 1.000000);
				PlayerTextDrawColor(playerid, TD_P_PriceValue, -26113);
				PlayerTextDrawSetOutline(playerid, TD_P_PriceValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_P_PriceValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_P_PriceValue, 1);

                TD_M_VehicleValue = CreatePlayerTextDraw(playerid, 103.000000, 392.000000, "Landstalker");
				PlayerTextDrawBackgroundColor(playerid, TD_M_VehicleValue, 255);
				PlayerTextDrawFont(playerid, TD_M_VehicleValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_M_VehicleValue, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_M_VehicleValue, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_M_VehicleValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_M_VehicleValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_M_VehicleValue, 1);

				TD_M_Add = CreatePlayerTextDraw(playerid, 528.000000, 392.000000, "Add Component");
				PlayerTextDrawBackgroundColor(playerid, TD_M_Add, 255);
				PlayerTextDrawFont(playerid, TD_M_Add, 2);
				PlayerTextDrawLetterSize(playerid, TD_M_Add, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_M_Add, -1);
				PlayerTextDrawSetOutline(playerid, TD_M_Add, 0);
				PlayerTextDrawSetProportional(playerid, TD_M_Add, 1);
				PlayerTextDrawSetShadow(playerid, TD_M_Add, 1);
				PlayerTextDrawTextSize(playerid, TD_M_Add, 617.000000, 10.000000);
				PlayerTextDrawSetSelectable(playerid, TD_M_Add, 1);

                TD_M_PriceValue = CreatePlayerTextDraw(playerid, 103.000000, 409.000000, "$2150");
				PlayerTextDrawBackgroundColor(playerid, TD_M_PriceValue, 255);
				PlayerTextDrawFont(playerid, TD_M_PriceValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_M_PriceValue, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_M_PriceValue, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_M_PriceValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_M_PriceValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_M_PriceValue, 1);

				TD_M_Comp = CreatePlayerTextDraw(playerid, 346.000000, 397.000000, "Slamin Front Bumper Tornado");
				PlayerTextDrawAlignment(playerid, TD_M_Comp, 2);
				PlayerTextDrawBackgroundColor(playerid, TD_M_Comp, 255);
				PlayerTextDrawFont(playerid, TD_M_Comp, 2);
				PlayerTextDrawLetterSize(playerid, TD_M_Comp, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_M_Comp, -1);
				PlayerTextDrawSetOutline(playerid, TD_M_Comp, 0);
				PlayerTextDrawSetProportional(playerid, TD_M_Comp, 1);
				PlayerTextDrawSetShadow(playerid, TD_M_Comp, 1);

                TD_Fader = CreatePlayerTextDraw(playerid, 0.0, 0.0, "-");
				PlayerTextDrawTextSize(playerid, TD_Fader, 640, 480);
				PlayerTextDrawLetterSize(playerid, TD_Fader, 0.0, 50.0);
				PlayerTextDrawUseBox(playerid, TD_Fader, 1);

                TD_C_PaymentValue = CreatePlayerTextDraw(playerid, 585.000000, 345.000000, "$26");
				PlayerTextDrawBackgroundColor(playerid, TD_C_PaymentValue, 255);
				PlayerTextDrawFont(playerid, TD_C_PaymentValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_C_PaymentValue, 0.219999, 1.000000);
				PlayerTextDrawColor(playerid, TD_C_PaymentValue, -26113);
				PlayerTextDrawSetOutline(playerid, TD_C_PaymentValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_C_PaymentValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_C_PaymentValue, 1);

				TD_C_TimeValue = CreatePlayerTextDraw(playerid, 585.000000, 330.000000, "0:25");
				PlayerTextDrawBackgroundColor(playerid, TD_C_TimeValue, 255);
				PlayerTextDrawFont(playerid, TD_C_TimeValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_C_TimeValue, 0.219999, 1.000000);
				PlayerTextDrawColor(playerid, TD_C_TimeValue, -26113);
				PlayerTextDrawSetOutline(playerid, TD_C_TimeValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_C_TimeValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_C_TimeValue, 1);

				TD_C_FareValue = CreatePlayerTextDraw(playerid, 585.000000, 315.000000, "$25");
				PlayerTextDrawBackgroundColor(playerid, TD_C_FareValue, 255);
				PlayerTextDrawFont(playerid, TD_C_FareValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_C_FareValue, 0.219999, 1.000000);
				PlayerTextDrawColor(playerid, TD_C_FareValue, -26113);
				PlayerTextDrawSetOutline(playerid, TD_C_FareValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_C_FareValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_C_FareValue, 1);

				TD_Spawn_String = CreatePlayerTextDraw(playerid, 275.000000, 432.000000, "Spawn: Airport");
				PlayerTextDrawBackgroundColor(playerid, TD_Spawn_String, 255);
				PlayerTextDrawFont(playerid, TD_Spawn_String, 3);
				PlayerTextDrawLetterSize(playerid, TD_Spawn_String, 0.329999, 1.150000);
				PlayerTextDrawColor(playerid, TD_Spawn_String, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_Spawn_String, 0);
				PlayerTextDrawSetProportional(playerid, TD_Spawn_String, 1);
				PlayerTextDrawSetShadow(playerid, TD_Spawn_String, 1);

				TD_SM_SBH = CreatePlayerTextDraw(playerid, 471.000000, 425.000000, "Seatbelt:");
				PlayerTextDrawBackgroundColor(playerid, TD_SM_SBH, 255);
				PlayerTextDrawFont(playerid, TD_SM_SBH, 2);
				PlayerTextDrawLetterSize(playerid, TD_SM_SBH, 0.220000, 1.000000);
				PlayerTextDrawColor(playerid, TD_SM_SBH, -1);
				PlayerTextDrawSetOutline(playerid, TD_SM_SBH, 0);
				PlayerTextDrawSetProportional(playerid, TD_SM_SBH, 1);
				PlayerTextDrawSetShadow(playerid, TD_SM_SBH, 1);

				TD_SM_SBH_Value = CreatePlayerTextDraw(playerid, 551.000000, 425.000000, "ON");
				PlayerTextDrawBackgroundColor(playerid, TD_SM_SBH_Value, 255);
				PlayerTextDrawFont(playerid, TD_SM_SBH_Value, 2);
				PlayerTextDrawLetterSize(playerid, TD_SM_SBH_Value, 0.220000, 1.000000);
				PlayerTextDrawColor(playerid, TD_SM_SBH_Value, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_SM_SBH_Value, 0);
				PlayerTextDrawSetProportional(playerid, TD_SM_SBH_Value, 1);
				PlayerTextDrawSetShadow(playerid, TD_SM_SBH_Value, 1);

				TD_SM_Fuel_Value = CreatePlayerTextDraw(playerid, 551.000000, 410.000000, "78");
				PlayerTextDrawBackgroundColor(playerid, TD_SM_Fuel_Value, 255);
				PlayerTextDrawFont(playerid, TD_SM_Fuel_Value, 2);
				PlayerTextDrawLetterSize(playerid, TD_SM_Fuel_Value, 0.220000, 1.000000);
				PlayerTextDrawColor(playerid, TD_SM_Fuel_Value, -26113);
				PlayerTextDrawSetOutline(playerid, TD_SM_Fuel_Value, 0);
				PlayerTextDrawSetProportional(playerid, TD_SM_Fuel_Value, 1);
				PlayerTextDrawSetShadow(playerid, TD_SM_Fuel_Value, 1);

				TD_SM_Vehiclename_Value = CreatePlayerTextDraw(playerid, 551.000000, 380.000000, "Sultan");
				PlayerTextDrawBackgroundColor(playerid, TD_SM_Vehiclename_Value, 255);
				PlayerTextDrawFont(playerid, TD_SM_Vehiclename_Value, 2);
				PlayerTextDrawLetterSize(playerid, TD_SM_Vehiclename_Value, 0.220000, 1.000000);
				PlayerTextDrawColor(playerid, TD_SM_Vehiclename_Value, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_SM_Vehiclename_Value, 0);
				PlayerTextDrawSetProportional(playerid, TD_SM_Vehiclename_Value, 1);
				PlayerTextDrawSetShadow(playerid, TD_SM_Vehiclename_Value, 1);

				TD_SM_Speed_Value = CreatePlayerTextDraw(playerid, 551.000000, 395.000000, "168");
				PlayerTextDrawBackgroundColor(playerid, TD_SM_Speed_Value, 255);
				PlayerTextDrawFont(playerid, TD_SM_Speed_Value, 2);
				PlayerTextDrawLetterSize(playerid, TD_SM_Speed_Value, 0.220000, 1.000000);
				PlayerTextDrawColor(playerid, TD_SM_Speed_Value, -26113);
				PlayerTextDrawSetOutline(playerid, TD_SM_Speed_Value, 0);
				PlayerTextDrawSetProportional(playerid, TD_SM_Speed_Value, 1);
				PlayerTextDrawSetShadow(playerid, TD_SM_Speed_Value, 1);

				TD_Ammu_Weapon = CreatePlayerTextDraw(playerid, 546.000000, 423.000000, "Desert Eagle");
				PlayerTextDrawBackgroundColor(playerid, TD_Ammu_Weapon, 255);
				PlayerTextDrawFont(playerid, TD_Ammu_Weapon, 2);
				PlayerTextDrawLetterSize(playerid, TD_Ammu_Weapon, 0.200000, 1.000000);
				PlayerTextDrawColor(playerid, TD_Ammu_Weapon, -1);
				PlayerTextDrawSetOutline(playerid, TD_Ammu_Weapon, 0);
				PlayerTextDrawSetProportional(playerid, TD_Ammu_Weapon, 1);
				PlayerTextDrawSetShadow(playerid, TD_Ammu_Weapon, 1);

				TD_LAPD_Skin = CreatePlayerTextDraw(playerid, 509.000000, 394.000000, "Skin 280");
				PlayerTextDrawBackgroundColor(playerid, TD_LAPD_Skin, 255);
				PlayerTextDrawFont(playerid, TD_LAPD_Skin, 2);
				PlayerTextDrawLetterSize(playerid, TD_LAPD_Skin, 0.200000, 1.000000);
				PlayerTextDrawColor(playerid, TD_LAPD_Skin, -1);
				PlayerTextDrawSetOutline(playerid, TD_LAPD_Skin, 0);
				PlayerTextDrawSetProportional(playerid, TD_LAPD_Skin, 1);
				PlayerTextDrawSetShadow(playerid, TD_LAPD_Skin, 1);

				TD_DMV_Text1 = CreatePlayerTextDraw(playerid, 218.000000, 396.000000, "A route has been set up for you on the GPS.");
				PlayerTextDrawBackgroundColor(playerid, TD_DMV_Text1, 255);
				PlayerTextDrawFont(playerid, TD_DMV_Text1, 2);
				PlayerTextDrawLetterSize(playerid, TD_DMV_Text1, 0.220000, 1.000000);
				PlayerTextDrawColor(playerid, TD_DMV_Text1, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_DMV_Text1, 0);
				PlayerTextDrawSetProportional(playerid, TD_DMV_Text1, 1);
				PlayerTextDrawSetShadow(playerid, TD_DMV_Text1, 1);

				TD_DMV_Text2 = CreatePlayerTextDraw(playerid, 218.000000, 406.000000, "Make sure that you follow the stated info");
				PlayerTextDrawBackgroundColor(playerid, TD_DMV_Text2, 255);
				PlayerTextDrawFont(playerid, TD_DMV_Text2, 2);
				PlayerTextDrawLetterSize(playerid, TD_DMV_Text2, 0.220000, 1.000000);
				PlayerTextDrawColor(playerid, TD_DMV_Text2, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_DMV_Text2, 0);
				PlayerTextDrawSetProportional(playerid, TD_DMV_Text2, 1);
				PlayerTextDrawSetShadow(playerid, TD_DMV_Text2, 1);

				TD_DMV_Text3 = CreatePlayerTextDraw(playerid, 218.000000, 416.000000, "and that you do not damage your vehicle.");
				PlayerTextDrawBackgroundColor(playerid, TD_DMV_Text3, 255);
				PlayerTextDrawFont(playerid, TD_DMV_Text3, 2);
				PlayerTextDrawLetterSize(playerid, TD_DMV_Text3, 0.220000, 1.000000);
				PlayerTextDrawColor(playerid, TD_DMV_Text3, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_DMV_Text3, 0);
				PlayerTextDrawSetProportional(playerid, TD_DMV_Text3, 1);
				PlayerTextDrawSetShadow(playerid, TD_DMV_Text3, 1);

				// Information-Textdraw (Pickup-Picking)

				TD_Info_Value = CreatePlayerTextDraw(playerid, 461.000000, 167.000000, "Los Angeles Police Department");
				PlayerTextDrawBackgroundColor(playerid, TD_Info_Value, 255);
				PlayerTextDrawFont(playerid, TD_Info_Value, 2);
				PlayerTextDrawLetterSize(playerid, TD_Info_Value, 0.200000, 1.000000);
				PlayerTextDrawColor(playerid, TD_Info_Value, -1);
				PlayerTextDrawSetOutline(playerid, TD_Info_Value, 0);
				PlayerTextDrawSetProportional(playerid, TD_Info_Value, 1);
				PlayerTextDrawSetShadow(playerid, TD_Info_Value, 1);

				// Reminder

				TD_R_TruckText = CreatePlayerTextDraw(playerid, 545.000000, 106.000000, "Rental~n~~r~3 ~w~Paydays");
				PlayerTextDrawBackgroundColor(playerid, TD_R_TruckText, 255);
				PlayerTextDrawFont(playerid, TD_R_TruckText, 2);
				PlayerTextDrawLetterSize(playerid, TD_R_TruckText, 0.200000, 1.000000);
				PlayerTextDrawColor(playerid, TD_R_TruckText, -1);
				PlayerTextDrawSetOutline(playerid, TD_R_TruckText, 0);
				PlayerTextDrawSetProportional(playerid, TD_R_TruckText, 1);
				PlayerTextDrawSetShadow(playerid, TD_R_TruckText, 1);
				
				TD_R_HungerText = CreatePlayerTextDraw(playerid, 540.000000, 145.500000, "~n~");
				PlayerTextDrawBackgroundColor(playerid, TD_R_HungerText, 255);
				PlayerTextDrawFont(playerid, TD_R_HungerText, 1);
				PlayerTextDrawLetterSize(playerid, TD_R_HungerText, 0.500000, 0.099999);
				PlayerTextDrawColor(playerid, TD_R_HungerText, -1);
				PlayerTextDrawSetOutline(playerid, TD_R_HungerText, 0);
				PlayerTextDrawSetProportional(playerid, TD_R_HungerText, 1);
				PlayerTextDrawSetShadow(playerid, TD_R_HungerText, 1);
				PlayerTextDrawUseBox(playerid, TD_R_HungerText, 1);
				PlayerTextDrawBoxColor(playerid, TD_R_HungerText, -65281);
				PlayerTextDrawTextSize(playerid, TD_R_HungerText, 595.000000, 0.000000);//535 -595
				PlayerTextDrawSetSelectable(playerid, TD_R_HungerText, 0);
				
				TD_R_ThirstText = CreatePlayerTextDraw(playerid, 540.000000, 165.500000, "~n~");
				PlayerTextDrawBackgroundColor(playerid, TD_R_ThirstText, 255);
				PlayerTextDrawFont(playerid, TD_R_ThirstText, 1);
				PlayerTextDrawLetterSize(playerid, TD_R_ThirstText, 0.500000, 0.099999);
				PlayerTextDrawColor(playerid, TD_R_ThirstText, -1);
				PlayerTextDrawSetOutline(playerid, TD_R_ThirstText, 0);
				PlayerTextDrawSetProportional(playerid, TD_R_ThirstText, 1);
				PlayerTextDrawSetShadow(playerid, TD_R_ThirstText, 1);
				PlayerTextDrawUseBox(playerid, TD_R_ThirstText, 1);
				PlayerTextDrawBoxColor(playerid, TD_R_ThirstText, 16777215);
				PlayerTextDrawTextSize(playerid, TD_R_ThirstText, 595.000000, 0.000000);//535 -595
				PlayerTextDrawSetSelectable(playerid, TD_R_ThirstText, 0);

				// Dealership

				TD_D_SeatsValue = CreatePlayerTextDraw(playerid, 88.000000, 426.000000, "4");
				PlayerTextDrawBackgroundColor(playerid, TD_D_SeatsValue, 255);
				PlayerTextDrawFont(playerid, TD_D_SeatsValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_D_SeatsValue, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_D_SeatsValue, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_D_SeatsValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_D_SeatsValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_D_SeatsValue, 1);

				TD_D_NameValue = CreatePlayerTextDraw(playerid, 88.000000, 392.000000, "Landstalker");
				PlayerTextDrawBackgroundColor(playerid, TD_D_NameValue, 255);
				PlayerTextDrawFont(playerid, TD_D_NameValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_D_NameValue, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_D_NameValue, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_D_NameValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_D_NameValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_D_NameValue, 1);

				TD_D_PriceValue = CreatePlayerTextDraw(playerid, 88.000000, 409.000000, "$20000");
				PlayerTextDrawBackgroundColor(playerid, TD_D_PriceValue, 255);
				PlayerTextDrawFont(playerid, TD_D_PriceValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_D_PriceValue, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_D_PriceValue, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_D_PriceValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_D_PriceValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_D_PriceValue, 1);

				TD_D_CargoValue = CreatePlayerTextDraw(playerid, 289.000000, 392.000000, "8200 liters");
				PlayerTextDrawBackgroundColor(playerid, TD_D_CargoValue, 255);
				PlayerTextDrawFont(playerid, TD_D_CargoValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_D_CargoValue, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_D_CargoValue, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_D_CargoValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_D_CargoValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_D_CargoValue, 1);
				
				TD_D_TankValue = CreatePlayerTextDraw(playerid, 289.000000, 409.000000, "65 liters");
				PlayerTextDrawBackgroundColor(playerid, TD_D_TankValue, 255);
				PlayerTextDrawFont(playerid, TD_D_TankValue, 2);
				PlayerTextDrawLetterSize(playerid, TD_D_TankValue, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_D_TankValue, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_D_TankValue, 0);
				PlayerTextDrawSetProportional(playerid, TD_D_TankValue, 1);
				PlayerTextDrawSetShadow(playerid, TD_D_TankValue, 1);
				
				/*家具----------------*/
				TD_PF_Woods = CreatePlayerTextDraw(playerid, 92.000000, 426.000000, "4");
				PlayerTextDrawBackgroundColor(playerid, TD_PF_Woods, 255);
				PlayerTextDrawFont(playerid, TD_PF_Woods, 2);
				PlayerTextDrawLetterSize(playerid, TD_PF_Woods, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_PF_Woods, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_PF_Woods, 0);
				PlayerTextDrawSetProportional(playerid, TD_PF_Woods, 1);
				PlayerTextDrawSetShadow(playerid, TD_PF_Woods, 1);

				TD_PF_Name = CreatePlayerTextDraw(playerid, 92.000000, 392.000000, "Landstalker");
				PlayerTextDrawBackgroundColor(playerid, TD_PF_Name, 255);
				PlayerTextDrawFont(playerid, TD_PF_Name, 2);
				PlayerTextDrawLetterSize(playerid, TD_PF_Name, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_PF_Name, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_PF_Name, 0);
				PlayerTextDrawSetProportional(playerid, TD_PF_Name, 1);
				PlayerTextDrawSetShadow(playerid, TD_PF_Name, 1);

				TD_PF_Price = CreatePlayerTextDraw(playerid, 92.000000, 409.000000, "$20000");
				PlayerTextDrawBackgroundColor(playerid, TD_PF_Price, 255);
				PlayerTextDrawFont(playerid, TD_PF_Price, 2);
				PlayerTextDrawLetterSize(playerid, TD_PF_Price, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_PF_Price, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_PF_Price, 0);
				PlayerTextDrawSetProportional(playerid, TD_PF_Price, 1);
				PlayerTextDrawSetShadow(playerid, TD_PF_Price, 1);

				TD_PF_Woodsleft = CreatePlayerTextDraw(playerid, 289.000000, 392.000000, "8200 liters");
				PlayerTextDrawBackgroundColor(playerid, TD_PF_Woodsleft, 255);
				PlayerTextDrawFont(playerid, TD_PF_Woodsleft, 2);
				PlayerTextDrawLetterSize(playerid, TD_PF_Woodsleft, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_PF_Woodsleft, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_PF_Woodsleft, 0);
				PlayerTextDrawSetProportional(playerid, TD_PF_Woodsleft, 1);
				PlayerTextDrawSetShadow(playerid, TD_PF_Woodsleft, 1);
				
				TD_PF_Type = CreatePlayerTextDraw(playerid, 289.000000, 409.000000, "65 liters");
				PlayerTextDrawBackgroundColor(playerid, TD_PF_Type, 255);
				PlayerTextDrawFont(playerid, TD_PF_Type, 2);
				PlayerTextDrawLetterSize(playerid, TD_PF_Type, 0.209999, 1.000000);
				PlayerTextDrawColor(playerid, TD_PF_Type, -6749953);
				PlayerTextDrawSetOutline(playerid, TD_PF_Type, 0);
				PlayerTextDrawSetProportional(playerid, TD_PF_Type, 1);
				PlayerTextDrawSetShadow(playerid, TD_PF_Type, 1);


				

				/* --- Player-Array Settings --- */

				GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 16);

				/* --- Executing Connect-Message --- */
				new con[128];
                format(con, sizeof(con), "%s 连接了服务器.", GetNameWithSpace(playerid));
				foreach(new i : Player)
				{
					if(GetPVarInt(i, "Showcons") == 1)
					{
						SendClientMessage(i, COLOR_CONNECT, con);
					}
				}

				/* --- Receiving Password from Database (Also: Does User exist?) --- */

				new query[100];
			   	mysql_format(sqlHandle, query, sizeof(query), "SELECT `password`, `salt` FROM `samp_users` WHERE `user` = '%e'", PlayerInfo[playerid][pName]);
			   	mysql_function_query(sqlHandle, query, true, "OnPlayerConnectMessage", "i", playerid);
    		}
		}
	} else {
	    /* --- Spawing NPCs --- */

	    GetPlayerName(playerid, PlayerInfo[playerid][pName], MAX_PLAYER_NAME);
	    if(strcmp(PlayerInfo[playerid][pName], "RentalBot") == 0 || strcmp(PlayerInfo[playerid][pName], "EmploymentBot") == 0 || strcmp(PlayerInfo[playerid][pName], "DMVBot") == 0 ||
		   strcmp(PlayerInfo[playerid][pName], "TrainBot") == 0) {
	        TogglePlayerSpectating(playerid, 0);
	    } else {
			Kick(playerid);
		}
	}

	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(playerid==allowkf[i])
		{
			allowkf[i]=-1;
		}
	}
	if(xb_flabelexist[playerid])
	{
		xb_flabelexist[playerid]=false;
        DeletePlayer3DTextLabel(playerid, xb_flabel[playerid]);
	}
	if(!IsPlayerNPC(playerid))
	{
		if(sanInterviewRequest[0] == playerid)
		{
		    SendClientMessage(sanInterviewRequest[1], COLOR_LIGHTRED, "对方停止了采访..");
		    sanInterviewRequest[0] = -1;
            sanInterviewRequest[1] = -1;
            sanInterviewRequest[2] = 0;
		} else if(sanInterviewRequest[1] == playerid) {
		    SendClientMessage(sanInterviewRequest[0], COLOR_LIGHTRED, "SA Network 停止了采访..");
            sanInterviewRequest[0] = -1;
            sanInterviewRequest[1] = -1;
            sanInterviewRequest[2] = 0;
		}
        if(FPSTurned[playerid] == 1)
		{
			KillTimer(FPS);
			TextDrawHideForPlayer(playerid, CrossHair1);
			TextDrawHideForPlayer(playerid, CrossHair2);
			TextDrawHideForPlayer(playerid, CrossHair3);
			TextDrawHideForPlayer(playerid, CrossHair4);
		}
	    if(GetPVarInt(playerid, "PayNSpray") != 0 && GetPlayerVehicleSeat(playerid) == 0) {
			new sprayedCar = GetPlayerVehicleID(playerid);
			foreach(new passenger : Player) {
				if(GetPlayerVehicleID(passenger) == sprayedCar) {
                    switch(GetPVarInt(passenger, "PayNSpray")) {
						case 1: {
						    SetPlayerPosEx(passenger, 5, 2076.4214, -1838.0778, 13.1692, 179.4030);
						}
						case 2: {
						    SetPlayerPosEx(passenger, 5, 717.2195, -472.7567, 16.0488, 179.5338);
						}
						case 3: {
						    SetPlayerPosEx(passenger, 5, 1014.5531, -1033.7996, 31.2687, 89.7582);
						}
						case 4: {
						    SetPlayerPosEx(passenger, 5, 481.7528, -1730.1110, 10.7038, 82.9610);
						}
						default: {
						    SetPlayerPosEx(passenger, 5, 2076.4214, -1838.0778, 13.1692, 179.4030);
						}
					}
				}
			}

			SetVehicleDead(sprayedCar, 1);
		}
 		if(gDashCam{playerid} == 1)
		{
			KillTimer(gDashCamCheck[playerid]);
			gDashCam{playerid} = 0;
		}
		if(gAntiRadar{playerid} == 1)
		{
	        KillTimer(gAntiRadarCheck[playerid]);
			gAntiRadar{playerid} = 0;
		}
	    if(GetPVarInt(playerid, "InModGarage") != 0 && GetPlayerVehicleSeat(playerid) == 0) {
	        new privateCar = GetPVarInt(playerid, "PrivateCar");
	        foreach(new v : Player) {
				if(GetPlayerVehicleID(v) == privateCar) {
					SetPlayerPosEx(v, 5, 1041.3319, -1027.6871, 32.1016);
				}
			}

            SetVehicleDead(privateCar, 1);
		}

	    new phPartner = GetPVarInt(playerid, "Calling");
	    if(phPartner != -1) {
			if(PlayerInfo[phPartner][pItemVar][0] != GetPVarInt(phPartner, "CallingNumber")) {
			    RemovePlayerAttachedObject(phPartner, 5);
			}

            SetPVarInt(phPartner, "Calling", -1);
			SetPVarInt(phPartner, "CallingNumber", 0);
			SetPVarInt(phPartner, "CallingSpeaker", 0);
			SetPlayerSpecialAction(phPartner, SPECIAL_ACTION_STOPUSECELLPHONE);
			SetPVarInt(phPartner, "UseCellphone", 0);
			SendClientMessage(phPartner, COLOR_GREY, "对方挂断了电话..");
		} else {
			for(new i = 0; i != MAX_CALLS; i++) {
				if(IncomingCalls[i][cCaller] == playerid) {
					UnsetIncomingCall(i);
					break;
				} else if(IncomingCalls[i][cCalled] == playerid) {
				    SetPlayerSpecialAction(IncomingCalls[i][cCaller], SPECIAL_ACTION_STOPUSECELLPHONE);
				    SetPVarInt(IncomingCalls[i][cCaller], "UseCellphone", 0);
				    SendClientMessage(IncomingCalls[i][cCaller], COLOR_GREY, "提示: 您所拨打的用户暂时无法接通请稍后再拨.");
			    	if(PlayerInfo[IncomingCalls[i][cCaller]][pItemVar][0] != IncomingCalls[i][cCallingNumber]) {
			            RemovePlayerAttachedObject(IncomingCalls[i][cCaller], 5);
					}

	                UnsetIncomingCall(i);
					break;
				}
			}
		}
		// stop car jacking
		if(IsBreaking[playerid] == 1)
		{
			new getcarid = GetPVarInt(playerid, "SaveVehicleID");
			new vdata[7];
			GetVehicleParamsEx(getcarid, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
	  		SetVehicleParamsEx(getcarid, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], 0);
	  		VehicleInfo[getcarid][vDamages] = 0;
			VehicleInfo[getcarid][vIsBreak] = true;
			KillTimer(BreakInTimer[playerid]);
			IsBreakingIn[playerid] = 0;
			BreakX[getcarid] = 0.0;
			BreakY[getcarid] = 0.0;
			BreakZ[getcarid] = 0.0;
			BreakDownTimer[playerid] = 0;
	  		IsBreaking[playerid] = 0;
	  		Delete3DTextLabel(BreakCarLB[getcarid]);
	  		DeletePVar(playerid, "SaveVehicleID");
	  		printf("N: %s I: %d has disconnected while stealing the vehicle.", PlayerInfo[playerid][pName], playerid);
		}
		// end
	    /* --- Destroying MaskID --- */

	    if(IsValidDynamic3DTextLabel(PlayerInfo[playerid][pMask3D])) {
			DestroyDynamic3DTextLabel(PlayerInfo[playerid][pMask3D]);
		}

	    /* --- Destroying active AJail-Pickup --- */

	    if(IsValidDynamicPickup(AJPickup[playerid])) {
	        DestroyDynamicPickup(AJPickup[playerid]);
		}

		/* --- Destroying Dealership-Vehicle --- */

		new dealerVehicle = GetPVarInt(playerid, "DealerVehicle");
		if(dealerVehicle != 0) {
			SetVehicleDead(dealerVehicle);
		}

	    /* --- Saving Player-Data --- */

	    if(serverrestart != 1 && GetPVarInt(playerid, "LoadData") == 1) {
			SaveData(playerid);
		}

	    /* --- Executing Disconnect-Message --- */

		if(GetPVarInt(playerid, "Specate") == 0) {
			new str[70];
			switch(reason) {
				case 0: {
		   			format(str, sizeof(str), "** %s (ID: %i) 离开了服务器 (崩溃).", GetNameWithSpace(playerid, 1), playerid);
		   			ProxDetector(12, playerid, str, COLOR_GREY);
					Log(playerid, "Crash", str);
				}
				case 1: {
		  			format(str, sizeof(str), "** %s (ID: %i) 离开了服务器 (离线).", GetNameWithSpace(playerid, 1), playerid);
		  			ProxDetector(12, playerid, str, COLOR_GREY);
					Log(playerid, "Disconnect", str);
				}
				case 2: {
				    format(str, sizeof(str), "** %s (ID: %i) 离开了服务器 (请出/封禁).", GetNameWithSpace(playerid, 1), playerid);
				    ProxDetector(12, playerid, str, COLOR_GREY);
					Log(playerid, "Kicked/Banned", str);
				}
			}
		}
	}

	/* --- Resetting Player-Variables --- */
	DeletePVar(playerid, "CorpseID");
	DeletePVar(playerid, "TookHelpFrom");
	DeletePVar(playerid, "FDRequest");
	tmpSerial[playerid] = 0;

    dmvdrive[playerid] = 0;
	seatbelt[playerid] = 0;
    helmet[playerid] = 0;
	takingselfie[playerid] = 0;
	BrokenLegs[playerid] = 0;
	/* --- Resetting Player-Skin-Data --- */

	for(new s = 0; s != 300; s++) {
		skinData[playerid][s] = 0;
	}

	/* --- Resetting Player-Array --- */

	format(PlayerInfo[playerid][pName], MAX_PLAYER_NAME, "%s", EOS);
	format(PlayerInfo[playerid][pPassword], 129, "%s", EOS);
	format(PlayerInfo[playerid][pSalt], 64, "%s", EOS);
	format(PlayerInfo[playerid][pStaffPassword], 129, "%s", EOS);
	format(PlayerInfo[playerid][pIP], 16, "%s", EOS);
	format(PlayerInfo[playerid][pForumName], 30, "%s", EOS);
	//format(PlayerInfo[playerid][pMaskID], 25, "%s", EOS);
	format(PlayerInfo[playerid][pSpaceName], MAX_PLAYER_NAME, "%s", EOS);
	//PlayerInfo[playerid][pMaskNum] = 0;
	PlayerInfo[playerid][pAllowFalseEnter] = 0;
	PlayerInfo[playerid][pSavings] = 0;
	PlayerInfo[playerid][pSkin] = 0;
	PlayerInfo[playerid][pWalkstyle] = 0;
	PlayerInfo[playerid][pChatstyle] = 0;
	PlayerInfo[playerid][pGender] = 0;
	PlayerInfo[playerid][pTaxiLic] = 0;
	PlayerInfo[playerid][pAirplaneLic] = 0;
	PlayerInfo[playerid][pAdminlevel] = 0;
	PlayerInfo[playerid][pMoney] = 0;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pRentHouse] = 0;
	PlayerInfo[playerid][pX] = 0;
	PlayerInfo[playerid][pY] = 0;
	PlayerInfo[playerid][pZ] = 0;
	PlayerInfo[playerid][pA] = 0;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pVW] = 0;
	PlayerInfo[playerid][pScore] = 0;
	PlayerInfo[playerid][pFaction] = 0;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pDriveLic] = 0;
	PlayerInfo[playerid][pBank] = 0;
	PlayerInfo[playerid][pHealth] = 0;
	PlayerInfo[playerid][pAJCPs] = 0;
	PlayerInfo[playerid][pWeaponLic] = 0;
	PlayerInfo[playerid][pFish] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pModLevel] = 0;
	PlayerInfo[playerid][pPaycheck] = 0;
	PlayerInfo[playerid][pFine] = 0;
	PlayerInfo[playerid][pPayTimer] = 0;
	PlayerInfo[playerid][pRadio] = 0;
	PlayerInfo[playerid][pBadge] = 0;
	PlayerInfo[playerid][pDisX] = 0;
	PlayerInfo[playerid][pDisY] = 0;
	PlayerInfo[playerid][pDisZ] = 0;
	PlayerInfo[playerid][pDisA] = 0;
	PlayerInfo[playerid][pDisInt] = 0;
	PlayerInfo[playerid][pDisVW] = 0;
	PlayerInfo[playerid][pTaxiBusy] = 0;
	PlayerInfo[playerid][pBoombox] = -1;
	PlayerInfo[playerid][pNamechanges] = 0;
	PlayerInfo[playerid][pWeed] = 0;
	PlayerInfo[playerid][pCocaine] = 0;
	PlayerInfo[playerid][pEcstasy] = 0;
	PlayerInfo[playerid][pCrack] = 0;
	PlayerInfo[playerid][pHeroin] = 0;
	LoggedIn[playerid] = 0;
	
	PlayerInfo[playerid][pWeedSeeds] = 0;
	PlayerInfo[playerid][pOpiumSeeds] = 0;
	PlayerInfo[playerid][pFertilizer] = 0;
	PlayerInfo[playerid][pRawOpium] = 0;
	
	PlayerInfo[playerid][pDonateRank] = 0;
	PlayerInfo[playerid][pDonateYear] = 0;
	PlayerInfo[playerid][pDonateMonth] = 0;
	PlayerInfo[playerid][pDonateDay] = 0;
	
	PlayerInfo[playerid][pCarBomb] = 0;
	PlayerInfo[playerid][pScrapWait] = 0;
	PlayerInfo[playerid][pLoaned] = 0;
	PlayerInfo[playerid][pBakingSoda] = 0;
	PlayerInfo[playerid][pLoanCash] = 0;
	PlayerInfo[playerid][pCuffed] = 0;
	
	PlayerInfo[playerid][pPrisoned] = 0;
	PlayerInfo[playerid][pPrisonTime] = 0;
	
	PlayerInfo[playerid][pMasked] = 0;
	PlayerInfo[playerid][pMaskID] = 0;
	PlayerInfo[playerid][pMask] = 0;
	
	PlayerInfo[playerid][pWeedAddiction] = 0;
	PlayerInfo[playerid][pCocaineAddiction] = 0;
	PlayerInfo[playerid][pEcstasyAddiction] = 0;
	PlayerInfo[playerid][pCrackAddiction] = 0;
	PlayerInfo[playerid][pHeroinAddiction] = 0;
	
	PlayerInfo[playerid][pSwatCooldown] = 0;
	PlayerInfo[playerid][pFreq] = 0;
	//CheckpointWait[playerid] = 0;
	Limbo[playerid] = 0;
	PlayerInfo[playerid][pSWAT] = 0;
	
	PlayerInfo[playerid][pActivated] = 0;
	PlayerInfo[playerid][pSTagPerm] = 0;
	PlayerInfo[playerid][pWoodmat] = 0;
	
	IdleInfo[playerid][idleX] = 0;
    IdleInfo[playerid][idleY] = 0;
    IdleInfo[playerid][idleZ] = 0;
    IdleInfo[playerid][minCounter] = 0;
    IdleInfo[playerid][idleMode] = 0;
    IdleInfo[playerid][unset] = 0;
    PlayerInfo[playerid][pAdminJailX] = 0;
    PlayerInfo[playerid][pAdminJailY] = 0;
    PlayerInfo[playerid][pAdminJailZ] = 0;
    depRadio[playerid] = 0;
    
    Delete3DTextLabel(DeathReason[playerid]);
    
    for(new c = 0; c != 10; c++) {
        PlayerInfo[playerid][pItemIndex][c] = 0;
		PlayerInfo[playerid][pItemType][c] = 0;
		PlayerInfo[playerid][pItemVar][c] = 0;
		PlayerInfo[playerid][pItemID][c] = 0;
		PlayerInfo[playerid][pItemX][c] = 0;
		PlayerInfo[playerid][pItemY][c] = 0;
		PlayerInfo[playerid][pItemZ][c] = 0;
		PlayerInfo[playerid][pItemrX][c] = 0;
		PlayerInfo[playerid][pItemrY][c] = 0;
		PlayerInfo[playerid][pItemrZ][c] = 0;
		PlayerInfo[playerid][pItemsX][c] = 0;
		PlayerInfo[playerid][pItemsY][c] = 0;
		PlayerInfo[playerid][pItemsZ][c] = 0;
	}

	/* --- Unloading Fader --- */

	PlayerTextDrawHide(playerid, TD_Fader);
    PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][LotteryNumbersTD]);
	/* --- dataHandler --- */

	erasePlayerElement(playerid);

	/* --- Player-Vars --- */

	SetPVarInt(playerid, "Calling", -1);
	SetPVarInt(playerid, "Login", 0);
	SetPVarInt(playerid, "Spawned", 0);
	SetPVarInt(playerid, "LoadData", 0);
	return 1;
}

public OnPlayerSpawn(playerid) {
    #if DEBUG != 0
	    printf("DEBUG: OnPlayerSpawn(%i).", playerid);
	#endif

	/* --- Preload Animations --- */

	ApplyAnimation(playerid, "AIRPORT", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "Attractors", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BAR", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BASEBALL", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BD_FIRE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BEACH", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "benchpress", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BF_injection", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BIKED", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BIKEH", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BIKELEAP", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BIKES", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BIKEV", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BIKE_DBZ", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BMX", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BOMBER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BOX", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BSKTBALL", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BUDDY", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BUS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CAMERA", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CAR", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CARRY", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CAR_CHAT", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CASINO", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CHAINSAW", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CHOPPA", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CLOTHES", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "COACH", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "COLT45", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "COP_AMBIENT", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "COP_DVBYZ", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CRACK", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CRIB", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DAM_JUMP", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DANCING", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DEALER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DILDO", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DODGE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DOZER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DRIVEBYS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FAT", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FIGHT_B", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FIGHT_C", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FIGHT_D", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FIGHT_E", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FINALE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FINALE2", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FLAME", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "Flowers", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FOOD", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "Freeweights", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GANGS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GHANDS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GHETTO_DB", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "goggles", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GRAFFITI", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GRAVEYARD", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GRENADE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GYMNASIUM", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "HAIRCUTS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "HEIST9", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "INT_HOUSE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "INT_OFFICE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "INT_SHOP", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "JST_BUISNESS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "KART", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "KISSING", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "KNIFE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "LAPDAN1", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "LAPDAN2", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "LAPDAN3", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "LOWRIDER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "MD_CHASE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "MD_END", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "MEDIC", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "MISC", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "MTB", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "MUSCULAR", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "NEVADA", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "ON_LOOKERS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "OTB", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "PARACHUTE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "PARK", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "PAULNMAC", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "ped", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "PLAYER_DVBYS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "PLAYIDLES", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "POLICE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "POOL", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "POOR", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "PYTHON", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "QUAD", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "QUAD_DBZ", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "RAPPING", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "RIFLE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "RIOT", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "ROB_BANK", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "RUSTLER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "RYDER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SCRATCHING", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SHAMAL", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SHOP", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SHOTGUN", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SILENCED", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SKATE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SMOKING", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SNIPER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SPRAYCAN", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "STRIP", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SUNBATHE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SWAT", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SWEET", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SWIM", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SWORD", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "TANK", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "TATTOOS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "TEC", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "TRAIN", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "TRUCK", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "UZI", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "VAN", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "VENDING", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "VORTEX", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "WAYFARER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "WEAPONS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "WUZI", "null", 0.0, 0, 0, 0, 0, 0);

	/* --- No lag-shooting --- */

	SetPlayerTeam(playerid, 5);

	/* --- Settings Player Skill-Level --- */
	if(PlayerInfo[playerid][pDonateRank] == 3)
	{
 		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 9999);
	}
	else
	{
	    SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 200);
	}
    SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 999);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 200);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 200);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 200);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);

	/* --- General Spawn-Settings --- */

	if(GetPVarInt(playerid, "LoadData") == 0) {
		SetPlayerVirtualWorld(playerid, 1000);
	} else {
	    SetPlayerVirtualWorld(playerid, 0);
	}

	SetPVarInt(playerid, "CntTimestamp", gettime());
	SetMapIcons(playerid);
	SetPlayerLevel(playerid);
	ResetPlayerWeapons(playerid);
	FreezePlayer(playerid);
	ResetPlayerMoneyEx(playerid);
	SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
	if(GetPVarInt(playerid, "Spawned") == 0) {
	    SetPlayerHealthAndLimit(playerid, 100);
	}

	/* --- Setting Player-Color --- */

	UpdatePlayerColor(playerid);

	/* --- Reassignment of Vehicles --- */

	for(new i; i != MAX_VEHICLES; i++) {
		if(!isnull(VehicleInfo[i][vOwner]) && strcmp(VehicleInfo[i][vOwner], PlayerInfo[playerid][pName]) == 0 && VehicleInfo[i][vType] == VEHICLE_OWNED) {
	    	SetPVarInt(playerid, "PrivateCar", i);
      	}
  	}

  	/* --- Spawning Player --- */

  	if(IsPlayerNPC(playerid)) {
	    if(strcmp(PlayerInfo[playerid][pName], "RentalBot") == 0) {
	        SetPlayerSkin(playerid, 150);
	        SetPlayerVirtualWorld(playerid, 0);
	        SetPlayerInterior(playerid, 5);
	    } else if(strcmp(PlayerInfo[playerid][pName], "EmploymentBot") == 0) {
	        SetPlayerSkin(playerid, 148);
	        SetPlayerVirtualWorld(playerid, 0);
	        SetPlayerInterior(playerid, 3);
	    } else if(strcmp(PlayerInfo[playerid][pName], "DMVBot") == 0) {
	        SetPlayerSkin(playerid, 194);
	        SetPlayerPos(playerid, 1488.8275, 1305.4380, 1093.2964);
			SetPlayerFacingAngle(playerid, 265.7325);
	        SetPlayerVirtualWorld(playerid, 0);
	        SetPlayerInterior(playerid, 3);
	    } else if(strcmp(PlayerInfo[playerid][pName], "TrainBot") == 0) {
	        SetPlayerVirtualWorld(playerid, 0);
	        SetPlayerInterior(playerid, 0);
	        SetPlayerSkin(playerid, 16);
	        UnfreezePlayer(playerid);
	        PutPlayerInVehicle(playerid, trainID, 0);
		}
	} else {
	    if(GetPVarInt(playerid, "CCActive") != 0) {
	        new info[15];
		    SetPlayerInterior(playerid, 14);
			SetPlayerVirtualWorld(playerid, playerid + 500);
			SetPlayerPos(playerid, 255.3276, -40.6620, 1002.0234);
			SetPlayerFacingAngle(playerid, 221.9870);
			SetPlayerCameraPos(playerid, 258.1876, -42.2255, 1002.0234 + 1.0);
			SetPlayerCameraLookAt(playerid, 255.3276, -40.6620, 1002.0234);
			FreezePlayer(playerid);
			TextDrawShowForPlayer(playerid, TD_CC_Box);
			TextDrawShowForPlayer(playerid, TD_CC_Headline);
			TextDrawShowForPlayer(playerid, TD_CC_Info);
			TextDrawShowForPlayer(playerid, TD_CC_GenderLeft);
			TextDrawShowForPlayer(playerid, TD_CC_GenderTitle);
			TextDrawShowForPlayer(playerid, TD_CC_OutfitRight);
			TextDrawShowForPlayer(playerid, TD_CC_OutfitTitle);
			TextDrawShowForPlayer(playerid, TD_CC_OutfitLeft);
			TextDrawShowForPlayer(playerid, TD_CC_AgeRight);
			TextDrawShowForPlayer(playerid, TD_CC_AgeTitle);
			TextDrawShowForPlayer(playerid, TD_CC_AgeLeft);
			TextDrawShowForPlayer(playerid, TD_CC_ArrivalLeft);
			TextDrawShowForPlayer(playerid, TD_CC_GenderRight);
			TextDrawShowForPlayer(playerid, TD_CC_ArrivalTitle);
			TextDrawShowForPlayer(playerid, TD_CC_ArrivalRight);
			TextDrawShowForPlayer(playerid, TD_CC_Spawn);
			TextDrawShowForPlayer(playerid, TD_CC_SpawnBox);
			PlayerTextDrawSetString(playerid, TD_CC_AgeValue, "15");
			SetPVarInt(playerid, "CCAge", 15);
			PlayerTextDrawShow(playerid, TD_CC_AgeValue);
			format(info, sizeof(info), "%i", MaleSkins[0]);
			PlayerTextDrawSetString(playerid, TD_CC_OutfitValue, info);
			SetPVarInt(playerid, "CCOutfit", 0);
			SetPlayerSkin(playerid, MaleSkins[0]);
			PlayerTextDrawShow(playerid, TD_CC_OutfitValue);
			PlayerTextDrawSetString(playerid, TD_CC_GenderValue, "Male");
			SetPVarInt(playerid, "CCGender", 1);
			PlayerTextDrawShow(playerid, TD_CC_GenderValue);
			format(info, sizeof(info), "%s", spawnLocations[0][spawnName]);
			PlayerTextDrawSetString(playerid, TD_CC_ArrivalValue, info);
			SetPVarInt(playerid, "CCSpawn", 0);
			PlayerTextDrawShow(playerid, TD_CC_ArrivalValue);
			SelectTextDraw(playerid, 0xFF9900FF);
	   	    fade[playerid][fID] = 0;
	        FadeScreen(playerid, 0, 0, 0, 255, 250);
	  	} else if(GetPVarInt(playerid, "LoadData") == 1) {
	  	    if(PlayerInfo[playerid][pDisX] == 0.0 && PlayerInfo[playerid][pDisY] == 0.0 && PlayerInfo[playerid][pDisZ] == 0.0 && PlayerInfo[playerid][pAJCPs] == 0 && PlayerInfo[playerid][pHealth] > 0 && GetPVarInt(playerid, "Specate") == 0) {
	   			SetPlayerHealthAndLimit(playerid, 100);
	   			PlayerInfo[playerid][pDisX] = 1742.8090;
	   			PlayerInfo[playerid][pDisY] = -1859.7273;
	   			PlayerInfo[playerid][pDisZ] = 13.4141;
	   			PlayerInfo[playerid][pDisA] = 358.8559;
	   			SetPlayerPosEx(playerid, 5, 1742.8090, -1859.7273, 13.4141, 358.8559);
			} else if(GetPVarInt(playerid, "Specate") != 0) {
			    SetPVarInt(playerid, "Specate", 0);
				SetPlayerPos(playerid, PlayerInfo[playerid][pX], PlayerInfo[playerid][pY], PlayerInfo[playerid][pZ]);
				SetPlayerFacingAngle(playerid, PlayerInfo[playerid][pA]);
				SetPlayerInterior(playerid, PlayerInfo[playerid][pInt]);
				SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVW]);
				if(GetPVarInt(playerid, "InHouse") != 0) {
				    if(!isnull(HouseInfo[PlayerInfo[playerid][pVW]][hRadio])) {
			       		PlayAudioStreamForPlayer(playerid, HouseInfo[PlayerInfo[playerid][pVW]][hRadio]);
					}
				} else if(GetPVarInt(playerid, "InBusiness") != 0) {
				    if(!isnull(BusinessInfo[PlayerInfo[playerid][pVW]][bRadio])) {
			       		PlayAudioStreamForPlayer(playerid, BusinessInfo[PlayerInfo[playerid][pVW]][bRadio]);
					}
				}

				UnfreezePlayer(playerid);
			} else if(PlayerInfo[playerid][pAJCPs] > 0) {
				SetPVarInt(playerid, "Muted", 1);
				SetPVarInt(playerid, "Death", 0);
                SetPlayerPosEx(playerid, 5, 939.8325, -1251.1356, 781.5216, 0, 25, playerid + 1);
                SetPlayerTime(playerid, 12, 0);
				if(GetPVarInt(playerid, "AdminJailed") == 0) {
				    new query[150];
				    SetPlayerHealthAndLimit(playerid, PlayerInfo[playerid][pHealth]);
					mysql_format(sqlHandle, query, sizeof(query), "SELECT `reason`, `admin`, `checkpoints` FROM `samp_jails` WHERE `user` = '%e' ORDER BY `id` DESC LIMIT 1", PlayerInfo[playerid][pName]);
					mysql_function_query(sqlHandle, query, true, "OnPlayerSpawnAdminJailed", "i", playerid);
				}
			}
			else if(GetPVarInt(playerid, "Arrest") > 0)
			{
			    new msg[100];
                SetPVarInt(playerid, "Death", 0);
				SetPlayerHealthAndLimit(playerid, 100);
				SetCameraBehindPlayer(playerid);
				UnfreezePlayer(playerid);
				PlayerInfo[playerid][pHealth] = 100;
			    format(msg, sizeof(msg), "你被 Los Angeles Police Department 拘留, 所剩看守时间: %i 分钟.", GetPVarInt(playerid, "Arrest"));
			    SendClientMessage(playerid, COLOR_WHITE, msg);
			    SetPVarInt(playerid, "Arrested", 1);
			    SetPlayerPosEx(playerid, 5, 227.1033, 109.8796, 999.0156, 358.4756, 10);
			}
			else if(PlayerInfo[playerid][pPrisonTime] > 0)
			{
			    new msg[100];
                SetPVarInt(playerid, "Death", 0);
				SetPlayerHealthAndLimit(playerid, 100);
				SetCameraBehindPlayer(playerid);
				UnfreezePlayer(playerid);
				PlayerInfo[playerid][pHealth] = 100;
			    format(msg, sizeof(msg), "你被 Los Angeles Police Department 拘留, 所剩监禁时间: %i 分钟.", PlayerInfo[playerid][pPrisonTime]);
			    SendClientMessage(playerid, COLOR_WHITE, msg);
			    PlayerInfo[playerid][pPrisoned] = 1;
			    SetPlayerPos(playerid, 154.7240,1406.3398,10.5950);
			}
			else if(GetPVarInt(playerid, "Death") != 0 || PlayerInfo[playerid][pHealth] == 0)
			{
    			SetPlayerDead(playerid, 1);
			} else {
				SetPlayerHealthAndLimit(playerid, PlayerInfo[playerid][pHealth]);
				SetPlayerPos(playerid, PlayerInfo[playerid][pDisX], PlayerInfo[playerid][pDisY], PlayerInfo[playerid][pDisZ]);
				SetPlayerFacingAngle(playerid, PlayerInfo[playerid][pDisA]);
				SetPlayerInterior(playerid, PlayerInfo[playerid][pDisInt]);
				SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pDisVW]);
				if(GetPVarInt(playerid, "InHouse") != 0) {
				    if(!isnull(HouseInfo[PlayerInfo[playerid][pDisVW]][hRadio])) {
			       		PlayAudioStreamForPlayer(playerid, HouseInfo[PlayerInfo[playerid][pDisVW]][hRadio]);
					}
				} else if(GetPVarInt(playerid, "InBusiness") != 0) {
				    if(!isnull(BusinessInfo[PlayerInfo[playerid][pDisVW]][bRadio])) {
			       		PlayAudioStreamForPlayer(playerid, BusinessInfo[PlayerInfo[playerid][pDisVW]][bRadio]);
					}
				}

				UnfreezePlayer(playerid);
			}
			if(PlayerInfo[playerid][pCuffed] == 1)
			{
			    SetPlayerAttachedObject(playerid, HOLDOBJECT_CLOTH4, 19418, 5, 0.002000,0.037999,-0.004000,-12.600098,126.699996,-119.800048,1.000000,1.000000,1.000000);
			}
			for(new i = 0; i != 9; i++) {
			    if(PlayerInfo[playerid][pItemType][i] != 0 && items[PlayerInfo[playerid][pItemType][i]][objID] != NON_OBJ_ITEM) {
			        if(items[PlayerInfo[playerid][pItemType][i]][itemType] == ITEM_WEAPON) {
						GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][i]][weaponID], PlayerInfo[playerid][pItemVar][i]);
			        } else if(items[PlayerInfo[playerid][pItemType][i]][itemType] != ITEM_CLOTHING) {
						SetPlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][i]][iIdx], items[PlayerInfo[playerid][pItemType][i]][objID],
														  items[PlayerInfo[playerid][pItemType][i]][bone], items[PlayerInfo[playerid][pItemType][i]][attX], items[PlayerInfo[playerid][pItemType][i]][attY],
														  items[PlayerInfo[playerid][pItemType][i]][attZ], items[PlayerInfo[playerid][pItemType][i]][attRotX], items[PlayerInfo[playerid][pItemType][i]][attRotY],
														  items[PlayerInfo[playerid][pItemType][i]][attRotZ]);
					} else {
                        SetPlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][i]][iIdx], items[PlayerInfo[playerid][pItemType][i]][objID],
														  items[PlayerInfo[playerid][pItemType][i]][bone], PlayerInfo[playerid][pItemX][i], PlayerInfo[playerid][pItemY][i],
														  PlayerInfo[playerid][pItemZ][i], PlayerInfo[playerid][pItemrX][i], PlayerInfo[playerid][pItemrY][i],
														  PlayerInfo[playerid][pItemrZ][i], PlayerInfo[playerid][pItemsX][i], PlayerInfo[playerid][pItemsY][i], PlayerInfo[playerid][pItemsZ][i]);
					}
				}
			}
		  } else {
	  	    SetPlayerHealthAndLimit(playerid, 100);
	  	    SetPlayerPos(playerid, 1489.1273, -1719.9194, 8.2388);
		    SetPlayerCameraPos(playerid, 1569.7312, -1707.2067, 50.0168);
		    InterpolateCameraPos(playerid, 2285.0, -1925.6,24.5, 640.5, -1295.7, 55.6, 120000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 2272.5, -1911.3, 21.0, 726.4, -1129.6, 47.7, 120000, CAMERA_MOVE);
	  	}

    	SetPVarInt(playerid, "Spawned", 1);
  	}

	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	if(GetPVarInt(playerid, "Death") == 0)
	{
	    /* --- Closing a player's phone-line --- */
        if(FPSTurned[playerid] == 1)
		{
			KillTimer(FPS);
			TextDrawHideForPlayer(playerid, CrossHair1);
			TextDrawHideForPlayer(playerid, CrossHair2);
			TextDrawHideForPlayer(playerid, CrossHair3);
			TextDrawHideForPlayer(playerid, CrossHair4);
		}
		if(xb_fobj[playerid]!=-1)
		{
			DestroyPlayerObject(playerid,xb_fobj[playerid]);
			xb_fobj[playerid]=-1;
		}
		RemovePlayerAttachedObject(playerid,XB_WOOD_SLOT);
	    xb_woodinhand[playerid]=false;
	    IsChecking[playerid] = false;
	    IsCarryingBody[playerid] = false;
	    new phPartner = GetPVarInt(playerid, "Calling");
	    if(phPartner != HOTLINE_TAXI && phPartner != HOTLINE_EMERGENCY && phPartner != HOTLINE_MECHANIC) {
		    if(phPartner != -1) {
				if(PlayerInfo[phPartner][pItemVar][0] != GetPVarInt(phPartner, "CallingNumber")) {
				    RemovePlayerAttachedObject(phPartner, 5);
				}
				PlayerInfo[playerid][pCuffed] = 0;
	            SetPVarInt(phPartner, "Calling", -1);
				SetPVarInt(phPartner, "CallingNumber", 0);
				SetPVarInt(phPartner, "CallingSpeaker", 0);
				SetPlayerSpecialAction(phPartner, SPECIAL_ACTION_STOPUSECELLPHONE);
				SetPVarInt(phPartner, "UseCellphone", 0);
				SendClientMessage(phPartner, COLOR_GREY, "对方挂断了.");
			} else {
				for(new i = 0; i != MAX_CALLS; i++) {
					if(IncomingCalls[i][cCaller] == playerid) {
						UnsetIncomingCall(i);
						break;
					} else if(IncomingCalls[i][cCalled] == playerid) {
					    SetPlayerSpecialAction(IncomingCalls[i][cCaller], SPECIAL_ACTION_STOPUSECELLPHONE);
					    SetPVarInt(IncomingCalls[i][cCaller], "UseCellphone", 0);
					    SendClientMessage(IncomingCalls[i][cCaller], COLOR_GREY, "您所拨打的用户暂时无法接通请稍后再拨.");
				    	if(PlayerInfo[IncomingCalls[i][cCaller]][pItemVar][0] != IncomingCalls[i][cCallingNumber]) {
				            RemovePlayerAttachedObject(IncomingCalls[i][cCaller], 5);
						}

		                UnsetIncomingCall(i);
						break;
					}
				}
			}
		}
		Delete3DTextLabel(DeathReason[playerid]);
        Limbo[playerid] = 0;
		SetPVarInt(playerid, "Calling", -1);
		SetPVarInt(playerid, "PhoneStep", 0);
		SetPVarInt(playerid, "UseCellphone", 0);
		SetPVarInt(playerid, "CallingNumber", 0);
		SetPVarInt(playerid, "CallingSpeaker", 0);
		DeletePVar(playerid, "TookHelpFrom");
		DeletePVar(playerid, "FDRequest");
		tmpSerial[playerid] = 0;
		DeletePVar(playerid, "CorpseID");
	    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	    if(PlayerInfo[playerid][pItemVar][0] < 1000000) {
			RemovePlayerAttachedObject(playerid, 0);
		}
		/* --- Setting Player-Health to zero (Dead) --- */

		PlayerInfo[playerid][pHealth] = 0;

		/* --- Updating Weapon-Ammo Variables & Dropping Weapon --- */

		new guns[2],
		    Float:X,
			Float:Y,
			Float:Z,
			Float:A,
			dropped,
			query[80];
			
		if(items[PlayerInfo[playerid][pItemType][0]][itemType] == ITEM_WEAPON)
		{
			for(new i = 0; i != 13; i++)
			{
				GetPlayerWeaponData(playerid, i, guns[0], guns[1]);
				if(guns[0] != 0 && guns[0] == items[PlayerInfo[playerid][pItemType][0]][weaponID])
				{
					PlayerInfo[playerid][pItemVar][0] = guns[1];
					setItemVariable(playerid, PlayerInfo[playerid][pItemIndex][0], guns[1]);
					GetPlayerPos(playerid, X, Y, Z);
					GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
					for(new d = 0; d != MAX_DROPPED_ITEMS; d++)
					{
						if(DroppedItems[d][iID] == 0)
						{
						    if(PlayerInfo[playerid][pFaction] != 1)
						    {
								CreateDroppedItem(d, X, Y, Z, PlayerInfo[playerid][pItemType][0], PlayerInfo[playerid][pItemID][0], PlayerInfo[playerid][pItemVar][0], items[PlayerInfo[playerid][pItemType][0]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								dropped = 1;
								break;
							}
						}
					}
					if(dropped == 0)
					{
	  					DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][0], PlayerInfo[playerid][pItemID][0], PlayerInfo[playerid][pItemVar][0], items[PlayerInfo[playerid][pItemType][0]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
	                    if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1)
						{
							ServerSettings[DroppedItem]++;
						}
						else
						{
							ServerSettings[DroppedItem] = 0;
						}
					}
					
					mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL, `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][0], PlayerInfo[playerid][pItemID][0]);
					mysql_function_query(sqlHandle, query, false, "", "");
					RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][0]);
					if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][0]][iIdx]] == PlayerInfo[playerid][pItemID][0])
					{
                        ResetPlayerWeapons(playerid);
						if(IsPlayerAttachedObjectSlotUsed(playerid, items[PlayerInfo[playerid][pItemType][0]][iIdx]))
						{
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][0]][iIdx]);
						}

						PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][0]][iIdx]] = 0;
						PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][0]][iIdx]] = 0;
						PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][0]][iIdx]] = 0;
						PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][0]][iIdx]] = 0;
					}
				}
			}
		}
        BrokenLegs[playerid] = 0;//reset player's legs by tony
		/* --- Setting Death-Variables for OnPlayerSpawn --- */
		
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		SetPVarInt(playerid, "Death", 1);
		SetPVarFloat(playerid, "DeathX", X);
		SetPVarFloat(playerid, "DeathY", Y);
		SetPVarFloat(playerid, "DeathZ", Z);
		SetPVarFloat(playerid, "DeathA", A);
		SetPVarInt(playerid, "DeathInt", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "DeathVW", GetPlayerVirtualWorld(playerid));
		
		// reset carjacking
		if(IsBreaking[playerid] == 1)
		{
			new getcarid = GetPVarInt(playerid, "SaveVehicleID");
			new vdata[7];
			GetVehicleParamsEx(getcarid, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
	  		SetVehicleParamsEx(getcarid, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], 0);
	  		VehicleInfo[getcarid][vDamages] = 0;
			VehicleInfo[getcarid][vIsBreak] = true;
			KillTimer(BreakInTimer[playerid]);
			IsBreakingIn[playerid] = 0;
			BreakX[getcarid] = 0.0;
			BreakY[getcarid] = 0.0;
			BreakZ[getcarid] = 0.0;
			BreakDownTimer[playerid] = 0;
	  		IsBreaking[playerid] = 0;
	  		Delete3DTextLabel(BreakCarLB[getcarid]);
	  		DeletePVar(playerid, "SaveVehicleID");
	  		SCM(playerid, COLOR_LIGHTRED, "由于您偷窃载具时死亡, 任务已经失败!");
	  		printf("N: %s I: %d dead while stealing the vehicle.", PlayerInfo[playerid][pName], playerid);
		}
		// reset
		/* --- Removing Player from Vehicle upon Death --- */

		if(IsPlayerInAnyVehicle(playerid)) {
  	    	SetPlayerPos(playerid, X, Y, Z + 2);
		    SetPVarFloat(playerid, "DeathZ", Z + 2);
		}

		/* --- Setting Player Dead --- */

		FreezePlayer(playerid);
        ApplyAnimation(playerid, "PED", "FLOOR_hit", 4.1, 0, 1, 1, 1, 0, 1);
		SetPlayerDead(playerid);
	}

	return 1;
}

public OnVehicleSpawn(vehicleid)
{
    veicolo_callsign_status[vehicleid] = 0;
	SetVehicleParamsEx(vehicleid, 0, 0, 0, 0, 0, 0, 0);
    if(GetVehicleModel(vehicleid) == 428 || GetVehicleModel(vehicleid) == 487 || GetVehicleModel(vehicleid) == 490 || GetVehicleModel(vehicleid) == 427 || GetVehicleModel(vehicleid) == 601 || GetVehicleModel(vehicleid) == 528)
    {
         SetVehicleHealth(vehicleid, 10000);
    }
	if(VehicleInfo[vehicleid][vRespawn] == 0 && (VehicleInfo[vehicleid][vType] == VEHICLE_JOB || VehicleInfo[vehicleid][vType] == VEHICLE_DMV))
	{
	    VehicleInfo[vehicleid][vRespawn] = 1;
		SetVehicleDead(vehicleid);
	}
	else
	{
        VehicleInfo[vehicleid][vRespawn] = 0;
	}
	VehicleInfo[vehicleid][vWood]=0;
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	if(IsVehicleRemainsType(vehicleid))
	{
		new Float:pos[4];
		GetVehiclePos(vehicleid, pos[0], pos[1], pos[2]);
		GetVehicleZAngle(vehicleid, pos[3]);
		//CreateRemains(TYPE_REMAINS_PERSON, GetPlayerSkin(playerid), 120, PlayerInfo[playerid][pAge], PlayerInfo[playerid][pName], pos[0], pos[1], pos[2], pos[3], GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
		CreateRemains(TYPE_REMAINS_CAR, INVALID_SCRIPT_ID, 120, INVALID_AGE, "N/A", pos[0], pos[1], pos[2], pos[3], GetVehicleVirtualWorld(vehicleid), INVALID_SCRIPT_ID);
	}
    if(VehicleInfo[vehicleid][vType] == VEHICLE_OWNED)
	{
	    new query[128];
		VehicleInfo[vehicleid][vScrapped] = 1;
		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `scrapped` = %i WHERE `id` = %i", VehicleInfo[vehicleid][vScrapped], VehicleInfo[vehicleid][vID]);
		mysql_function_query(sqlHandle, query, false, "", "");
	}
	Delete3DTextLabel(veicolo_callsign_testo[vehicleid]);
	DestroyDynamicObject(VehicleInfo[vehicleid][vSiren]);
	SetVehicleDead(vehicleid);
	return 1;
}

public OnPlayerText(playerid, text[]) {
    IdleInfo[playerid][idleX]++;
    IdleInfo[playerid][idleY]++;
    IdleInfo[playerid][idleZ]++;
    IdleInfo[playerid][minCounter] = 0;
    if(IdleInfo[playerid][idleMode] != 0) {
    	IdleInfo[playerid][unset] = 1;
	}

	if(GetPVarInt(playerid, "Muted") == 0 && GetPVarInt(playerid, "Login") == 1) {
	    new msg[128];
	    if(GetPVarInt(playerid, "UseCellphone") == 0) {
		    if(GetPVarInt(playerid, "Death") == 0) {
		        switch(PlayerInfo[playerid][pChatstyle]) {
					case 1: {
					    ApplyAnimation(playerid, "MISC", "Idle_Chat_02", 4.1, 0, 1, 1, 1, 1);
					}
					case 2: {
					    ApplyAnimation(playerid, "GANGS", "prtial_gngtlkA", 4.1, 0, 1, 1, 1, 1);
					}
					case 3: {
					    ApplyAnimation(playerid, "GANGS", "prtial_gngtlkCt", 4.1, 0, 1, 1, 1, 1);
					}
					case 4: {
					    ApplyAnimation(playerid, "GANGS", "prtial_gngtlkD", 4.1, 0, 1, 1, 1, 1);
					}
					case 5: {
					    ApplyAnimation(playerid, "GANGS", "prtial_gngtlkE", 4.1, 0, 1, 1, 1, 1);
					}
					case 6: {
					    ApplyAnimation(playerid, "GANGS", "prtial_gngtlkF", 4.1, 0, 1, 1, 1, 1);
					}
					case 7: {
					    ApplyAnimation(playerid, "GANGS", "prtial_gngtlkG", 4.1, 0, 1, 1, 1, 1);
					}
					case 8: {
					    ApplyAnimation(playerid, "GANGS", "prtial_gngtlkH", 4.1, 0, 1, 1, 1, 1);
					}
					default: {
					    ApplyAnimation(playerid, "PED", "IDLE_CHAT", 4.1, 0, 1, 1, 1, 1);
					}
				}

				new len = strlen(text);
				StopTalkVar[playerid] = SetTimerEx("StopTalk", strlen(text) *  100, false, "d", playerid);
				if(len + MAX_PLAYER_NAME + 37 > 256) {
				    new buffer[256];
				    strmid(buffer, text, 0, 256 - MAX_PLAYER_NAME - 37 - 4);
				    format(buffer, sizeof(buffer), "%s 说: %s ...", GetNameWithSpace(playerid, 1), buffer);
				    strdel(text, 0, 256 - MAX_PLAYER_NAME - 37 - 4);
					format(msg, sizeof(msg), "%s 说: ... %s", GetNameWithSpace(playerid, 1), text);
			   		ProxDetectorSplittedEx(20, playerid, buffer, msg, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 1, 0, 1);
				} else {
			        format(msg, sizeof(msg), "%s 说: %s", GetNameWithSpace(playerid, 1), text);
					ProxDetectorEx(20, playerid, msg, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 1, 0, 1);
				}
			} else {
			    new len = strlen(text);
				if(len + MAX_PLAYER_NAME + 43 > 256) {
				    new buffer[256];
				    strmid(buffer, text, 0, 256 - MAX_PLAYER_NAME - 43 - 4);
				    format(buffer, sizeof(buffer), "%s 说 [低声地]: %s ...", GetNameWithSpace(playerid, 1), buffer);
				    strdel(text, 0, 256 - MAX_PLAYER_NAME - 43 - 4);
					format(msg, sizeof(msg), "%s 说 [低声地]: ... %s", GetNameWithSpace(playerid, 1), text);
			   		ProxDetectorSplittedEx(3.5, playerid, buffer, msg, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 1, 0, 1);
				} else {
			        format(msg, sizeof(msg), "%s 说 [低声地]: %s", GetNameWithSpace(playerid, 1), text);
					ProxDetectorEx(3.5, playerid, msg, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 1, 0, 1);
				}
			}
		} else if(GetPVarInt(playerid, "UseCellphone") != 0) {
			new phPartner = GetPVarInt(playerid, "Calling");
			if(GetPVarInt(phPartner, "CallingSpeaker") != 0) {
			    new len = strlen(text);
				if(len + MAX_PLAYER_NAME + 47 > 256) {
				    new buffer[256];
				    strmid(buffer, text, 0, 256 - MAX_PLAYER_NAME - 47 - 4);
				    format(buffer, sizeof(buffer), "%s 说: (手机免提) %s ...", GetNameWithSpace(playerid, 1), buffer);
				    strdel(text, 0, 256 - MAX_PLAYER_NAME - 47 - 4);
					format(msg, sizeof(msg), "%s 说: (手机免提) ... %s", GetNameWithSpace(playerid, 1), text);
			   		ProxDetectorSplittedEx(20, playerid, buffer, msg, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 0);
				} else {
           			format(msg, sizeof(msg), "%s 说: (手机免提) %s", GetNameWithSpace(playerid, 1), text);
					ProxDetectorEx(5, phPartner, msg, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 0);
				}
			}

            new len = strlen(text);
			if(len + MAX_PLAYER_NAME + 49 > 256) {
			    new buffer[256],
			        buffer2[256];
			        
				format(buffer2, sizeof(buffer2), "%s", text);
			    strmid(buffer, buffer2, 0, 256 - MAX_PLAYER_NAME - 49 - 4);
			    format(buffer, sizeof(buffer), "%s 说: (通话中) %s ...", GetNameWithSpace(playerid, 1), buffer);
			    strdel(buffer2, 0, 256 - MAX_PLAYER_NAME - 49 - 4);
				format(msg, sizeof(msg), "%s 说: (通话中) ... %s", GetNameWithSpace(playerid, 1), buffer2);
				SendClientMessage(playerid, COLOR_YELLOW, buffer);
		   		SendClientMessage(playerid, COLOR_YELLOW, msg);
		   		SendClientMessage(phPartner, COLOR_DARKYELLOW, buffer);
		   		SendClientMessage(phPartner, COLOR_DARKYELLOW, msg);
		   		ProxDetectorSplittedEx(20, playerid, buffer, msg, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 0, 1, 0, 0);
			} else {
        		format(msg, sizeof(msg), "%s 说: (通话中) %s", GetNameWithSpace(playerid, 1), text);
	            SendClientMessage(playerid, COLOR_YELLOW, msg);
	            SendClientMessage(phPartner, COLOR_DARKYELLOW, msg);
				ProxDetectorEx(20, playerid, msg, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 0, 1, 0, 0);
			}

			switch(phPartner) {
				case HOTLINE_EMERGENCY: {
				    switch(GetPVarInt(playerid, "PhoneStep")) {
						case 1: {
							if(strcmp(text, "police", true) == 0 || strcmp(text, "police department", true) == 0 || strcmp(text, "lapd", true) == 0 || strcmp(text, "pd", true) == 0 || strcmp(text, "police.", true) == 0 || strcmp(text, "police department.", true) == 0 || strcmp(text, "LAPD.", true) == 0 || strcmp(text, "pd.", true) == 0) {
								SetPVarInt(playerid, "PhoneStep", 2);
								SetPVarInt(playerid, "911Request", 1);
								SendClientMessage(playerid, COLOR_DARKYELLOW, "调度员 说: (通话中) 请告诉我们当前您所在的位置.");
							} else if(strcmp(text, "fire department", true) == 0 || strcmp(text, "lsfd", true) == 0 || strcmp(text, "fd", true) == 0 || strcmp(text, "fire department.", true) == 0 || strcmp(text, "lsfd.", true) == 0 || strcmp(text, "fd.", true) == 0) {
							    SetPVarInt(playerid, "PhoneStep", 2);
							    SetPVarInt(playerid, "911Request", 2);
							    SendClientMessage(playerid, COLOR_DARKYELLOW, "调度员 说: (通话中) 请告诉我们当前您所在的位置.");
							} else if(strcmp(text, "both", true) == 0 || strcmp(text, "both.", true) == 0) {
							    SetPVarInt(playerid, "PhoneStep", 2);
							    SetPVarInt(playerid, "911Request", 3);
							    SendClientMessage(playerid, COLOR_DARKYELLOW, "调度员 说: (通话中) 请告诉我们当前您所在的位置.");
							} else {
							    SendClientMessage(playerid, COLOR_DARKYELLOW, "调度员 说: (通话中) 您好, 您能告诉我们你需要什么服务吗? 'LAPD', 'LSFD' 还是 'both'?");
							}
						}
						case 2: {
						    SetPVarInt(playerid, "PhoneStep", 3);
						    SetPVarString(playerid, "911Location", text);
						    SendClientMessage(playerid, COLOR_DARKYELLOW, "调度员 说: (通话中) 请给我们一个简短的描述关于该事件.");
						}
						case 3: {
						    new info[128],
								buffer[128],
						        number = GetPVarInt(playerid, "CallingNumber");

						    SendClientMessage(playerid, COLOR_DARKYELLOW, "调度员 说: (通话中) 感谢来电, 我会尽快调度附近的警力.");
						    switch(GetPVarInt(playerid, "911Request")) {
								case 1: {
								    SendMessageToLAPD("_____________ 911紧急通道 _____________");
								    format(info, sizeof(info), "号码: %i", number);
								    SendMessageToLAPD(info);
								    GetPVarString(playerid, "911Location", buffer, sizeof(buffer));
								    if(strlen(buffer) + 10 > 128) {
										strmid(info, buffer, 0, 128 - 10 - 4);
										format(info, sizeof(info), "地点: %s ...", info);
										SendMessageToLAPD(info);
										strdel(buffer, 0, 128 - 10 - 4);
										format(info, sizeof(info), "地点: ... %s", buffer);
							       		SendMessageToLAPD(info);
									} else {
										format(info, sizeof(info), "地点: %s", buffer);
										SendMessageToLAPD(info);
									}
									
									if(strlen(text) + 13 > 128) {
									    format(buffer, sizeof(buffer), "%s", EOS);
									    strmid(buffer, text, 0, 128 - 13 - 4);
									    format(info, sizeof(info), "事件描述: %s", buffer);
									    SendMessageToLAPD(info);
									    strdel(text, 0, 128 - 13 - 4);
									    format(info, sizeof(info), "事件描述: %s", text);
									    SendMessageToLAPD(info);
									} else {
										format(info, sizeof(info), "事件描述: %s", text);
										SendMessageToLAPD(info);
									}
								}
								case 2: {
									SendMessageToLSFD("_____________ 911紧急通道 _____________");
								    format(info, sizeof(info), "号码: %i", number);
								    SendMessageToLSFD(info);
								    GetPVarString(playerid, "911Location", buffer, sizeof(buffer));
								    if(strlen(buffer) + 10 > 128) {
										strmid(info, buffer, 0, 128 - 10 - 4);
										format(info, sizeof(info), "地点: %s ...", info);
										SendMessageToLSFD(info);
										strdel(buffer, 0, 128 - 10 - 4);
										format(info, sizeof(info), "地点: ... %s", buffer);
							       		SendMessageToLSFD(info);
									} else {
										format(info, sizeof(info), "地点: %s", buffer);
										SendMessageToLSFD(info);
									}

									if(strlen(text) + 13 > 128) {
									    format(buffer, sizeof(buffer), "%s", EOS);
									    strmid(buffer, text, 0, 128 - 13 - 4);
									    format(info, sizeof(info), "事件描述: %s", buffer);
									    SendMessageToLSFD(info);
									    strdel(text, 0, 128 - 13 - 4);
									    format(info, sizeof(info), "事件描述: %s", text);
									    SendMessageToLSFD(info);
									} else {
										format(info, sizeof(info), "事件描述: %s", text);
										SendMessageToLSFD(info);
									}
								}
								case 3: {
								    SendMessageToLSFD("_____________ 911紧急通道 _____________");
								    SendMessageToLAPD("_____________ 911紧急通道 _____________");
								    format(info, sizeof(info), "号码: %i", number);
								    SendMessageToLSFD(info);
								    SendMessageToLAPD(info);
								    GetPVarString(playerid, "911Location", buffer, sizeof(buffer));
								    if(strlen(buffer) + 10 > 128) {
										strmid(info, buffer, 0, 128 - 10 - 4);
										format(info, sizeof(info), "地点: %s ...", info);
										SendMessageToLSFD(info);
										SendMessageToLAPD(info);
										strdel(buffer, 0, 128 - 10 - 4);
										format(info, sizeof(info), "地点: ... %s", buffer);
							       		SendMessageToLSFD(info);
							       		SendMessageToLAPD(info);
									} else {
										format(info, sizeof(info), "地点: %s", buffer);
										SendMessageToLSFD(info);
										SendMessageToLAPD(info);
									}

									if(strlen(text) + 13 > 128) {
									    format(buffer, sizeof(buffer), "%s", EOS);
									    strmid(buffer, text, 0, 128 - 13 - 4);
									    format(info, sizeof(info), "事件描述: %s", buffer);
									    SendMessageToLSFD(info);
									    SendMessageToLAPD(info);
									    strdel(text, 0, 128 - 13 - 4);
									    format(info, sizeof(info), "事件描述: %s", text);
									    SendMessageToLSFD(info);
									    SendMessageToLAPD(info);
									} else {
										format(info, sizeof(info), "事件描述: %s", text);
										SendMessageToLSFD(info);
										SendMessageToLAPD(info);
									}
								}
							}

							SendClientMessage(playerid, COLOR_GREY, "你挂断了.. (如果存在拨号动作缺陷, 请使用 /stopanim 修复.)");
							SetPVarInt(playerid, "Calling", -1);
							SetPVarInt(playerid, "PhoneStep", 0);
							SetPVarInt(playerid, "UseCellphone", 0);
							SetPVarInt(playerid, "CallingNumber", 0);
							SetPVarInt(playerid, "CallingSpeak", 0);
						    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
						    if(PlayerInfo[playerid][pItemVar][0] != number) {
								RemovePlayerAttachedObject(playerid, IDX_CELLPHONE);
							}
						}
					}
				}
				case HOTLINE_IMPOUND:
				{
                    new number = GetPVarInt(playerid, "CallingNumber"),
                        msg1[55],
                        msg2[128],
                        msg3[128],
                        msg4[50];

					format(msg1, sizeof(msg1), "Ph.: %i", number);
					if(strlen(text) + 10 > 128)
					{
					    strmid(msg2, text, 0, 128 - 10 - 4);
						format(msg2, sizeof(msg2), "Location: %s ...", msg2);
						strdel(text, 0, 128 - 10 - 4);
						format(msg3, sizeof(msg3), "Location: ... %s", text);
					}
					else
					{
						format(msg2, sizeof(msg2), "Location: %s", text);
					}

                    SetPVarInt(playerid, "MechanicCall", 1);
		            SendClientMessage(playerid, COLOR_DARKYELLOW, "雇员说: (通话中) 感谢来电, 我们会尽快的回复您.");
				    SendClientMessage(playerid, COLOR_GREY, "你挂断了.. (如果存在拨号动作缺陷, 请使用 /stopanim 修复.)");
                    foreach(new i : Player)
					{
                        if(PlayerInfo[i][pFaction] == 1)
						{
                            SendClientMessage(i, COLOR_GREEN, "__________ 服务通道 __________");
                            SendClientMessage(i, COLOR_WHITE, msg1);
                            SendClientMessage(i, COLOR_WHITE, msg2);
                            if(!isnull(msg3))
							{
                                SendClientMessage(i, COLOR_WHITE, msg3);
                            }

                            SendClientMessage(i, COLOR_WHITE, msg4);
                        }
                    }

					if(PlayerInfo[playerid][pItemVar][0] != number) {
						RemovePlayerAttachedObject(playerid, IDX_CELLPHONE);
					}

					SetPVarInt(playerid, "Calling", -1);
					SetPVarInt(playerid, "UseCellphone", 0);
					SetPVarInt(playerid, "PhoneStep", 0);
					SetPVarInt(playerid, "CallingSpeaker", 0);
					SetPVarInt(playerid, "CallingNumber", 0);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
				}
				case HOTLINE_MECHANIC: {
                    new number = GetPVarInt(playerid, "CallingNumber"),
                        vehicle,
                        msg1[55],
                        msg2[128],
                        msg3[128],
                        msg4[50];
                        
					format(msg4, sizeof(msg4), "使用 /takecall %i 响应该事件.", playerid);
					format(msg1, sizeof(msg1), "号码: %i", number);
					if(strlen(text) + 10 > 128) {
					    strmid(msg2, text, 0, 128 - 10 - 4);
						format(msg2, sizeof(msg2), "地点: %s ...", msg2);
						strdel(text, 0, 128 - 10 - 4);
						format(msg3, sizeof(msg3), "地点: ... %s", text);
					} else {
						format(msg2, sizeof(msg2), "地点: %s", text);
					}
					
                    SetPVarInt(playerid, "MechanicCall", 1);
		            SendClientMessage(playerid, COLOR_DARKYELLOW, "雇员说: (通话中) 感谢来电, 正在上班的汽修工程师会尽快的回复您.");
				    SendClientMessage(playerid, COLOR_GREY, "你挂断了.. (如果存在拨号动作缺陷, 请使用 /stopanim 修复.)");
                    foreach(new i : Player) {
                        vehicle = GetPVarInt(i, "PrivateCar");
                        if(IsVehicleSpawned(vehicle) && GetVehicleModel(vehicle) == 525) {
                            SendClientMessage(i, COLOR_GREEN, "__________ 服务通道 __________");
                            SendClientMessage(i, COLOR_WHITE, msg1);
                            SendClientMessage(i, COLOR_WHITE, msg2);
                            if(!isnull(msg3)) {
                                SendClientMessage(i, COLOR_WHITE, msg3);
                            }

                            SendClientMessage(i, COLOR_WHITE, msg4);
                        }
                    }
                    
					if(PlayerInfo[playerid][pItemVar][0] != number) {
						RemovePlayerAttachedObject(playerid, IDX_CELLPHONE);
					}

					SetPVarInt(playerid, "Calling", -1);
					SetPVarInt(playerid, "UseCellphone", 0);
					SetPVarInt(playerid, "PhoneStep", 0);
					SetPVarInt(playerid, "CallingSpeaker", 0);
					SetPVarInt(playerid, "CallingNumber", 0);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
				}
				case HOTLINE_TAXI: {
                    new number = GetPVarInt(playerid, "CallingNumber"),
                        vehicle,
                        msg1[55],
                        msg2[128],
                        msg3[128],
                        msg4[50];

					format(msg4, sizeof(msg4), "使用 /takecall %i 响应该事件.", playerid);
					format(msg1, sizeof(msg1), "号码: %i", number);
					if(strlen(text) + 10 > 128) {
					    strmid(msg2, text, 0, 128 - 10 - 4);
						format(msg2, sizeof(msg2), "地点: %s ...", msg2);
						strdel(text, 0, 128 - 10 - 4);
						format(msg3, sizeof(msg3), "地点: ... %s", text);
					} else {
						format(msg2, sizeof(msg2), "地点: %s", text);
					}

		            SendClientMessage(playerid, COLOR_DARKYELLOW, "雇员说: (通话中) 感谢来电, 正在上班的出租车司机会尽快回复您的请求.");
				    SendClientMessage(playerid, COLOR_GREY, "你挂断了.. (如果存在拨号动作缺陷, 请使用 /stopanim 修复.)");
                    SetPVarInt(playerid, "TaxiCall", 1);
                    foreach(new i : Player) {
                        vehicle = GetPVarInt(i, "PrivateCar");
                        if(IsVehicleSpawned(vehicle) && (GetVehicleModel(vehicle) == 420 || GetVehicleModel(vehicle) == 438)) {
                            SendClientMessage(i, COLOR_GREEN, "__________ 服务通道 __________");
                            SendClientMessage(i, COLOR_WHITE, msg1);
                            SendClientMessage(i, COLOR_WHITE, msg2);
                            if(!isnull(msg3)) {
                                SendClientMessage(i, COLOR_WHITE, msg3);
                            }

                            SendClientMessage(i, COLOR_WHITE, msg4);
                        }
                    }
                    
					if(PlayerInfo[playerid][pItemVar][0] != number) {
						RemovePlayerAttachedObject(playerid, IDX_CELLPHONE);
					}

					SetPVarInt(playerid, "Calling", -1);
					SetPVarInt(playerid, "UseCellphone", 0);
					SetPVarInt(playerid, "PhoneStep", 0);
					SetPVarInt(playerid, "CallingSpeaker", 0);
					SetPVarInt(playerid, "CallingNumber", 0);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
				}
				/*case HOTLINE_TAXI: {
				    new Float:X,
				        Float:Y,
				        Float:Z,
						Float:distance,
						taxiDriverID = -1,
						vehicle,
						model,
						number = GetPVarInt(playerid, "CallingNumber");

					GetPlayerPos(playerid, X, Y, Z);
					foreach(new i : Player) {
						if(Paused[i] == 0 && IsPlayerInAnyVehicle(i) && playerid != i && PlayerInfo[i][pTaxiBusy] == 0) {
							vehicle = GetPlayerVehicleID(i);
							model = GetVehicleModel(vehicle);
							if((model == 420 || model == 438) && !isnull(VehicleInfo[vehicle][vOwner]) && strcmp(VehicleInfo[vehicle][vOwner], PlayerInfo[i][pName]) == 0) {
		                		if(taxiDriverID == -1 || GetPlayerDistanceFromPoint(i, X, Y, Z) < distance) {
		                            taxiDriverID = i;
		                            distance = GetPlayerDistanceFromPoint(i, X, Y, Z);
								}
							}
						}
					}

					if(taxiDriverID != -1) {
					    TextDrawShowForPlayer(taxiDriverID, TD_T_Box);
					    TextDrawShowForPlayer(taxiDriverID, TD_T_Headline);
					    TextDrawShowForPlayer(taxiDriverID, TD_T_HeadBox);
					    TextDrawShowForPlayer(taxiDriverID, TD_T_Info);
					    TextDrawShowForPlayer(taxiDriverID, TD_T_Instruction);
					    SetPVarInt(taxiDriverID, "takecall", playerid);
					    SetPVarInt(taxiDriverID, "takecallNumber", number);
					    SetPVarInt(playerid, "taxiRequest", 1);
					    SetPVarInt(playerid, "taxiDriver", taxiDriverID);
					    SetPVarString(playerid, "taxiLocation", text);
					    SendClientMessage(playerid, COLOR_DARKYELLOW, "Employee 说: (通话中) Thanks for using this service, the closest taxi driver will be dispatched.");
					} else {
		                SendClientMessage(playerid, COLOR_DARKYELLOW, "Employee 说: (通话中) Thanks for using this service, however, there are currently no available taxi drivers.");
					}

				    SendClientMessage(playerid, COLOR_GREY, "You have hung up, if stuck in phone-animation use /stopanim.");
					if(PlayerInfo[playerid][pItemVar][0] != number) {
						RemovePlayerAttachedObject(playerid, IDX_CELLPHONE);
					}

					SetPVarInt(playerid, "Calling", -1);
					SetPVarInt(playerid, "UseCellphone", 0);
					SetPVarInt(playerid, "PhoneStep", 0);
					SetPVarInt(playerid, "CallingSpeaker", 0);
					SetPVarInt(playerid, "CallingNumber", 0);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
				}*/
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你之前被禁言了.");
	}

	/* --- Disabling global SA:MP Chat --- */

	return 0;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid) {
	if(GetPVarInt(playerid, "AdminJailed") == 0) {
		if(GetPVarInt(playerid, "CurrentPickup") != pickupid) {

		    /* --- Setting new current PickupID --- */

		    SetPVarInt(playerid, "CurrentPickup", pickupid);

			/* --- Hiding House- & Business-Textdraw --- */

			TextDrawHideForPlayer(playerid, TD_AD_HeadBox);
		    TextDrawHideForPlayer(playerid, TD_AD_BoxTwo);
		    TextDrawHideForPlayer(playerid, TD_AD_BoxThree);
		    TextDrawHideForPlayer(playerid, TD_AD_BoxOne);
		    TextDrawHideForPlayer(playerid, TD_AD_Seller);
			PlayerTextDrawHide(playerid, TD_AD_Price);
			PlayerTextDrawHide(playerid, TD_AD_CityZip);
			PlayerTextDrawHide(playerid, TD_AD_Headline);
			PlayerTextDrawHide(playerid, TD_AD_Taxes);
			PlayerTextDrawHide(playerid, TD_AD_PriceValue);
			PlayerTextDrawHide(playerid, TD_AD_TaxesValue);
			PlayerTextDrawHide(playerid, TD_AD_SellerValue);
			PlayerTextDrawHide(playerid, TD_AD_HousenumberStreet);

		    /* --- Hiding Information-Textdraw --- */

		    TextDrawHideForPlayer(playerid, TD_Info_Headbox);
		    TextDrawHideForPlayer(playerid, TD_Info_Headline);
		    TextDrawHideForPlayer(playerid, TD_Info_Box);
		    TextDrawHideForPlayer(playerid, TD_Info_Icon);
		    PlayerTextDrawHide(playerid, TD_Info_Value);

		    /* --- Setting & Displaying Information-Textdraw --- */
		    
			if(pickupid == HospitalPickupFront || pickupid == HospitalPickupBack) {
                ShowPlayerInformationTextDraw(playerid, "All Saints General Hospital");
			} else if(pickupid == DMVPickup) {
			    ShowPlayerInformationTextDraw(playerid, "Department of Motor Vehicles");
			} else if(pickupid == PrisonPickup) {
			    ShowPlayerInformationTextDraw(playerid, "/prison");
			} else if(pickupid == GuardPickup) {
			    ShowPlayerInformationTextDraw(playerid, "Guard Lounge");
			} else if(pickupid == LAPDArmoury) {
			    ShowPlayerInformationTextDraw(playerid, "LAPD Armoury");
			} else if(pickupid == LAPDCells) {
			    ShowPlayerInformationTextDraw(playerid, "LAPD Cells");
			} else if(pickupid == RentalPickup) {
			    ShowPlayerInformationTextDraw(playerid, "Rental Center");
			} else if(pickupid == ApartmentPickup1AGP) {
			    ShowPlayerInformationTextDraw(playerid, "Elysian Park Apartment Complex");
			} else if(pickupid == HeavyWarehouse) {
			    ShowPlayerInformationTextDraw(playerid, "Storage Unit");
			} else if(pickupid == InsuranceCompany) {
			    ShowPlayerInformationTextDraw(playerid, "Insurance Company");
			} else if(pickupid == PrisonShowers) {
			    ShowPlayerInformationTextDraw(playerid, "Showers");
			} else if(pickupid == PrisonCells) {
			    ShowPlayerInformationTextDraw(playerid, "Cell Block");
			} else if(pickupid == HardwareCompany) {
			    ShowPlayerInformationTextDraw(playerid, "General Store");
			} else if(pickupid == DoC) {
			    ShowPlayerInformationTextDraw(playerid, "California Prison Facility");
			} else if(pickupid == DoC2) {
			    ShowPlayerInformationTextDraw(playerid, "California Prison Facility");
			} else if(pickupid == CokeWarehouse) {
			    ShowPlayerInformationTextDraw(playerid, "Drug Warehouse");
			} else if(pickupid == WeaponWarehouse) {
			    ShowPlayerInformationTextDraw(playerid, "Weapon Warehouse");
			} else if(pickupid == AmmoWarehouse) {
			    ShowPlayerInformationTextDraw(playerid, "Ammo Warehouse");
			} else if(pickupid == DrugWarehouse) {
			    ShowPlayerInformationTextDraw(playerid, "Drug Warehouse");
			} else if(pickupid == ApartmentPickup1AI) {
			    ShowPlayerInformationTextDraw(playerid, "Inglewood Apartment Complex");
			} else if(pickupid == ApartmentPickup2AI) {
			    ShowPlayerInformationTextDraw(playerid, "Inglewood Apartment Complex");
			} else if(pickupid == Dealer_UpperPickup) {
			    ShowPlayerInformationTextDraw(playerid, "Rodeo Dealership");
			} else if(pickupid == Dealer_NormalPickup) {
			    ShowPlayerInformationTextDraw(playerid, "Elysian Dealership");
			} else if(pickupid == BankPickup) {
			    ShowPlayerInformationTextDraw(playerid, "Los Angeles Bank");
			} else if(pickupid == LAPDEntrance) {
			    ShowPlayerInformationTextDraw(playerid, "Los Angeles Police Department");
			} else if(pickupid == EmploymentPickup) {
			    ShowPlayerInformationTextDraw(playerid, "Employment Center");
			} else if(pickupid == LSFDPickup) {
			    ShowPlayerInformationTextDraw(playerid, "Los Angeles Fire Department");
			} else if(pickupid == LSFDDutyPickup) {
			    ShowPlayerInfoTextDrawMid(playerid, "~b~LAFD ~w~Locker Room~n~~g~Duty: ~w~/duty~n~~g~Locker: ~w~/locker", 4000);
			} else if(pickupid == LAPDLockerPickup) {
				ShowPlayerInfoTextDrawMid(playerid, "~b~LAPD ~w~Locker Room~n~~g~Duty: ~w~/duty~n~~g~Locker: ~w~/locker", 4000);
			} else if(pickupid == sanNewsPickup) {
				ShowPlayerInformationTextDraw(playerid, "California Network");
			} else if(pickupid == sanNewsDutyPickup) {
				ShowPlayerInfoTextDrawMid(playerid, "~b~Cali. NETWORK ~w~Locker Room~n~~g~Duty: ~w~/duty~n~~g~Locker: ~w~/locker", 4000);
			}
		}
		
		if(PlayerInfo[playerid][pJob] == 2 && pickupid == pizzaPickup) {
			if(PlayerInfo[playerid][pItemType][0] != 0) return SendClientMessage(playerid, COLOR_GREY, "你手上已经有了一个物品.");
			SetPlayerItem(playerid, 29, 0);
			SendClientMessage(playerid, COLOR_WHITE, "你拿起了披萨盒, 请将它存入储物箱 (( /putpizza )).");
		} else if(PlayerInfo[playerid][pJob] == 3 && pickupid == deliveryPickup) {
		    if(PlayerInfo[playerid][pItemType][0] != 0) return SendClientMessage(playerid, COLOR_GREY, "你手上已经有了一个物品.");
			SetPlayerItem(playerid, 241, 0);
			SendClientMessage(playerid, COLOR_WHITE, "你抬起了箱子, 将它存入你的 Burrito 后备箱 (( /putbox )).");
		}
	} else {
		if(pickupid == AJPickup[playerid]) {
			DestroyDynamicPickup(AJPickup[playerid]);
			PlayerInfo[playerid][pAJCPs]--;
			if(PlayerInfo[playerid][pAJCPs] == 0) {
			    new Hour,
			        Minute,
			        Second;

				SendClientMessage(playerid, COLOR_LIGHTRED, "监禁惩罚时间结束..");
				SendClientMessage(playerid, COLOR_LIGHTRED, "请务必遵守服务器规则, 你可以在 www.lifengame.com 找到所有的服务器规则.");
				SetPVarInt(playerid, "Muted", 0);
				SetPVarInt(playerid, "Arrest", 0);
		    	SetPVarInt(playerid, "AdminJailed", 0);
				SetPlayerPosEx(playerid, 5, 1542.3568, -1675.1830, 13.5543);
				gettime(Hour, Minute, Second);
				SetPlayerTime(playerid, Hour, Minute);
			} else {
			    new jailCounter[100];
				format(jailCounter, sizeof(jailCounter), "系统: 你还需要进行 %i 次才能被释放.", PlayerInfo[playerid][pAJCPs]);
				SendClientMessage(playerid, COLOR_LIGHTRED, jailCounter);
				CreateNewAdminJailPickup(playerid);
			}
		}
	}

	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	new Float:X,
		Float:Y,
		Float:Z,
		driver = GetVehicleDriver(vehicleid);
    if(VehicleInfo[vehicleid][vType] == VEHICLE_ADMIN && PlayerInfo[playerid][pAdminlevel] == 0)
	{
		GetPlayerPos(playerid, X, Y, Z);
		SetPlayerPos(playerid, X, Y, Z);
		if(driver != -1)
		{
		    PutPlayerInVehicle(driver, vehicleid, 0);
		}
	}
	else
	{
		new vdata[7];
		GetVehicleParamsEx(vehicleid, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
		if(driver != -1 && ispassenger == 0)
		{
			GetPlayerPos(playerid, X, Y, Z);
			SetPlayerPos(playerid, X, Y, Z);
		    PutPlayerInVehicle(driver, vehicleid, 0);
		    SendClientMessage(playerid, COLOR_LIGHTRED, "警告: 请不要再尝试非法抢车!");
		}
		else
	 	{
		    PlayerInfo[playerid][pAllowFalseEnter] = 1;
		}
	}

	return 1;
}

public OnPlayerShootPlayer(Shooter, Target, Float:HealthLost, Float:ArmourLost) {
    new Float:health,
		Float:armour;

    GetPlayerArmour(Target, armour);
    GetPlayerHealth(Target, health);
    if(GetPVarInt(Target, "AntiHealthHack2") == 0 && health == GetPVarFloat(Target, "Health") && GetPVarInt(Target, "Death") == 0) {
		new healthHack[128];
		format(healthHack, sizeof(healthHack), "*** 作弊警告: %s (ID: %i) 可能使用锁血程序 (该用户的生命值异常).", GetNameWithSpace(Target), Target);
		//AdminMessageLog(healthHack, Target, "HACK WARNING - Health");
		SetPVarInt(Target, "AntiHealthHack2", 1);
		AntiHealthHackTimerVar2[Target] = SetTimerEx("AntiHealthHackTimer2", 60000, false, "i", Target);
	}

    return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	if(spraytag_find[playerid])
	{
		DisablePlayerCheckpoint(playerid);
	}
	if(system_findcar[playerid] != 0)
	{
		SendClientMessage(playerid,COLOR_WHITE," 服务器: 你找到了你的载具.");
		DisablePlayerCheckpoint(playerid);
		system_findcar[playerid] = 0;
	}
	if(HouseScanMission[playerid] != 0)
	{
	    DisablePlayerCheckpoint(DoorNumber[playerid]);
	    HouseScanMission[playerid] = 0;
	}
	return 1;
}


public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	/* --- Hiding old House/Business-TextDraws --- */

	TextDrawHideForPlayer(playerid, TD_AD_HeadBox);
    TextDrawHideForPlayer(playerid, TD_AD_BoxTwo);
    TextDrawHideForPlayer(playerid, TD_AD_BoxThree);
    TextDrawHideForPlayer(playerid, TD_AD_BoxOne);
    TextDrawHideForPlayer(playerid, TD_AD_Seller);
	PlayerTextDrawHide(playerid, TD_AD_Price);
	PlayerTextDrawHide(playerid, TD_AD_CityZip);
	PlayerTextDrawHide(playerid, TD_AD_Headline);
	PlayerTextDrawHide(playerid, TD_AD_Taxes);
	PlayerTextDrawHide(playerid, TD_AD_PriceValue);
	PlayerTextDrawHide(playerid, TD_AD_TaxesValue);
	PlayerTextDrawHide(playerid, TD_AD_SellerValue);
	PlayerTextDrawHide(playerid, TD_AD_HousenumberStreet);
	PlayerTextDrawHide(playerid, TD_Mid_Info);

	/* --- Checking CheckpointID --- */

	switch(GetPlayerVehicleSeat(playerid)) {
	    case -1: {
	        for(new bu = 0; bu != sizeof(businessData); bu++) {
				if(checkpointid == businessData[bu][businessIntCP]) {
					ShowPlayerBusinessBuyDialog(playerid, bu);
					return 1;
				}
			}
	        
	        if(checkpointid == RentalCP) {
			    new query[110];
			    mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_vehicles` WHERE `rented` != 0 AND `owner` = '%e'", PlayerInfo[playerid][pName]);
				mysql_function_query(sqlHandle, query, true, "OnPlayerEnterRentalCP", "i", playerid);
			} else if(checkpointid == MountainRent) {
			    new query[110];
			    mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_vehicles` WHERE `rented` != 0 AND `owner` = '%e'", PlayerInfo[playerid][pName]);
				mysql_function_query(sqlHandle, query, true, "OnPlayerEnterRentalCPEx", "i", playerid);
			}else if(checkpointid == sanNewsAdvertCP) {
			    ShowPlayerDialog(playerid, DIALOG_SAN_ADVERTISEMENT, DIALOG_STYLE_MSGBOX, "{FF9900}California Network", "你想发布一条广告吗? (价格: $100)", "是的", "不了");
			}else if(checkpointid == Hospital)
			{
			    if(GetPVarInt(playerid, "FDRequest") != 0) return SendClientMessage(playerid, COLOR_GREY, "你已经预约了一名医生, 请等待对方回复.");
			    ShowPlayerDialog(playerid, DIALOG_HOSPITAL_HEAL, DIALOG_STYLE_LIST, "{FF9900}医院前台", "挂号 ($6)\n预约专家\n治疗感冒\n取消预约", "确定", "取消");
			}  else if(checkpointid == DMVCP) {
			    if(GetPVarInt(playerid, "DMV") == 0) {
			        SendClientMessage(playerid, COLOR_FADE3, "雇员: 欢迎来到机动车管理局, 我可以帮你吗?");
			    	ShowPlayerDialog(playerid, DIALOG_DMV, DIALOG_STYLE_LIST, "{FF9900}Department of Motor Vehicles", "驾照考试 ($85)\n出租驾驶考试 ($60)\n飞行许可证考试 ($9,500)", "选择", "取消");
				} else {
					SendClientMessage(playerid, COLOR_GREY, "你正在进行驾考, 请专心考试.");
				}
			} else if(checkpointid == LAPDCP) {
			    ShowPlayerDialog(playerid, DIALOG_LAPD, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "支付罚单", "确定", "取消");
			}
			else if(checkpointid == LAPDArmouryCP)
			{
				if(GetPVarInt(playerid, "LAPDDuty") == 0)
				{
				    ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "退还装备", "确定", "取消");
				}
				else
				{
                	ShowPlayerDialog(playerid, DIALOG_LAPD_MENU, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "重型武器\n腰佩枪支\n外设装备\n防弹背心\n额外物品\n退还防弹衣\n退还装备", "确定", "取消");
				}
			}
			else if(checkpointid == PrisonCP)
			{
				if(PlayerInfo[playerid][pFaction] == 5)
				{
				    ShowPlayerDialog(playerid, DIALOG_PRISON, DIALOG_STYLE_LIST, "监狱军库", "汽弹霞弹枪\n电击枪\n防弹衣", "确定", "取消");
				}
			}
			else if(checkpointid == MountainDrink)
			{
				if(mountain_start)
                ShowPlayerBusinessBuyDialog(playerid,5);
			}
			else if(checkpointid == MountainFood)
			{
                if(mountain_start)
                ShowPlayerDialog(playerid,DIALOG_MOUNTIANFOOD,DIALOG_STYLE_LIST,"产品","一片披萨\t$5\n一个汉堡\t$5","购买","取消");
			}
			else if(checkpointid == MountainParachute)
			{
                if(mountain_start)
                ShowPlayerDialog(playerid,DIALOG_BUY_PARACHUTE,DIALOG_STYLE_LIST,"产品","降落伞 50$","购买","取消");
			}
			else if(checkpointid == BetCow)
			{
				if(mountain_start)
				{
					if(BetCowStats!=BET_WAIT)return SendClientMessage(playerid,-1,"{FF0000}拒绝操作:{FFFFFF}现在还不能开始下注");
					if(BetCowNumber[playerid]!=0)
					{
						new string[128];
						format(string,sizeof string,"{FF0000}拒绝操作:{FFFFFF}你已经押了$500到 %d号牛上",BetCowNumber[playerid]);
						SendClientMessage(playerid,-1,string);
					}
					else
					{
						if(PlayerInfo[playerid][pMoney]<500)
						{
							SendClientMessage(playerid,-1,"{FF0000}拒绝操作:{FFFFFF}赌一次需要$500,你没有足够的现金,旁边有个ATM,你可以去取钱");
						}
						else
						{
							ShowPlayerDialog(playerid,DIALOG_BET_COW,DIALOG_STYLE_LIST,"赌牛","一号牛\t$500\n二号牛\t$500\n三号牛\t$500\n四号牛\t$500\n五号牛\t$500\n六号牛\t$500","赌","不赌");
						}
					}
				}
			}
			else if(checkpointid == AcademyCP)
			{
				if(GetPVarInt(playerid, "LAPDDuty") == 0)
				{
				    ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "退还装备", "确定", "取消");
				}
				else
				{
                	ShowPlayerDialog(playerid, DIALOG_LAPD_MENU, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "重型武器\n腰佩枪支\n外设装备\n防弹背心\n额外物品\n退还防弹衣\n退还装备", "确定", "取消");
				}
			}
			else if(checkpointid == AcademyCP1)
			{
				if(GetPVarInt(playerid, "LAPDDuty") == 0)
				{
				    ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "退还装备", "确定", "取消");
				}
				else
				{
                	ShowPlayerDialog(playerid, DIALOG_LAPD_MENU, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "重型武器\n腰佩枪支\n外设装备\n防弹背心\n额外物品\n退还防弹衣\n退还装备", "确定", "取消");
				}
			}
			else if(checkpointid == AcademyCP2)
			{
				if(GetPVarInt(playerid, "LAPDDuty") == 0)
				{
				    ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department Armoury", "退还装备", "确定", "取消");
				}
				else
				{
                	ShowPlayerDialog(playerid, DIALOG_LAPD_MENU, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department Armoury", "重型武器\n腰佩枪支\n外设装备\n防弹背心\n额外物品\n退还防弹衣\n退还装备", "确定", "取消");
				}
			}
			else if(checkpointid == BankCP[1] || checkpointid == BankCP[2] || checkpointid == BankCP[3] || checkpointid == BankCP[4])
			{
				ShowPlayerDialog(playerid, DIALOG_BANK, DIALOG_STYLE_LIST, "{FF9900}银行系统", "取出存款\n存入现金\n管理储蓄\n借贷\n还贷", "确定", "取消");
			}
			else if(checkpointid == EmploymentCP)
			{
			    if(PlayerInfo[playerid][pJob] != 0) return SendClientMessage(playerid, COLOR_GREY, "员工: 您好, 我们在数据库查询到您已经就职了. (( /quitjob )).");
                if(!PlayerInfo[playerid][pDriveLic]) return SendClientMessage(playerid, COLOR_GREY, "员工: 您好, 您需要通过加尼福利亚州发行的6号修订法律: 任何公民需要通过驾照考试才可进行工作.");
				SendClientMessage(playerid, COLOR_FADE3, "员工: 欢迎来到洛桑托就职中心, 目前有很多工作供您选择.");
    			ShowPlayerDialog(playerid, DIALOG_EMPLOY_CHOOSE, DIALOG_STYLE_LIST, "{FF9900}就职中心", "资源管理\n外卖运送\n产业物流\n伐木工\n木材运送员", "确定", "取消");
			}
			else if(checkpointid == TraphouseCP)
			{
			    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Narcotics] == 1)
				{
		           	ShowPlayerDialog(playerid,DIALOG_TRAPHOUSE, DIALOG_STYLE_LIST, "菜单","大麻种子 ($100)\n罂粟种子 ($200)\n化肥 ($50)" ,"购买", "取消");
				}
				else
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织暂时无法使用该系统..");
				}
			}
			else if(checkpointid == ConvertCP)
			{
			    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Narcotics] == 1)
				{
					ShowPlayerDialog(playerid,DIALOG_CONVERT, DIALOG_STYLE_LIST, "加工菜单","海洛因加工" ,"确定", "取消");
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "你可以使用5个鸦片种子加工为12克海洛因.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织暂时无法使用该系统..");
				}
			}
			else if(checkpointid == WarehouseCP)
			{
			    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Weapons] == 1)
				{
		           	ShowPlayerDialog(playerid, DIALOG_WEAPONS_FACTION, DIALOG_STYLE_LIST, "武器包裹", "AK-M ($3500)\nRemington 870 ($2650)\nKG-9 ($2600)\nBeretta 92FS ($2250)\nColt 1911 ($1750)\nC4 ($25,000)", "确定", "取消");
                    SendClientMessage(playerid, COLOR_LIGHTGREEN, "购买之后你会得到一把满弹夹武器.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织暂时无法使用该系统..");
				}
			}
			else if(checkpointid == AmmoCP)
			{
			    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Weapons] != 0)
				{
		           	ShowPlayerDialog(playerid, DIALOG_WEAPONS_AMMO, DIALOG_STYLE_LIST, "子弹供货", "武器弹巢 (100发) ($750)\n自动枪弹夹 (30发) ($250)\n拓展的手枪弹夹 (21发) ($500)\n手枪弹夹 (7发) ($200)\n弹夹包裹 (20发) ($250)", "确定", "取消");
				}
				else
				{
     				SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织暂时无法使用该系统..");
				}
			}
			else if(checkpointid == MilitaryCP)
			{
			    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Weapons] == 2)
				{
		           	ShowPlayerDialog(playerid, DIALOG_WEAPONS_MILITARY, DIALOG_STYLE_LIST, "武器包裹", "AR-15 ($4500)\nUMP 45 ($4000)\nMac-10 ($2500)\nRemington 870 ($2750)\nSig Pro 9mm ($2500)\nC4 ($25,000)", "确定", "取消");
				}
				else
				{
     				SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织暂时无法使用该系统..");
				}
			}
			else if(checkpointid == HeavyCP)
			{
			    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Weapons] == 3)
				{
		           	ShowPlayerDialog(playerid, DIALOG_WEAPONS_HEAVY, DIALOG_STYLE_LIST, "武器包裹", "AK-47 ($3250)\nAK-74su ($2900)\nTec-9 ($2750)\nUzi ($2750)\nRemington 870 ($2650)\nDesert Eagle ($2500)", "确定", "取消");
				}
				else
				{
     				SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织暂时无法使用该系统.");
				}
			}
			else if(checkpointid == StoreCP)
			{
  				ShowPlayerDialog(playerid, DIALOG_FACTORY_STORE, DIALOG_STYLE_LIST, "杂货店", "面具 ($750)\n工具箱 ($1000)\n帐篷 ($1000)\n铁锤 ($250)\n螺丝刀 ($250)", "确定", "取消");
			}
			else if(checkpointid == CocaineCP)
			{
			    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Narcotics] == 2)
				{
		           	ShowPlayerDialog(playerid, DIALOG_COCAINE, DIALOG_STYLE_LIST, "毒品", "可卡因\n迷幻剂\n海洛因", "确定", "取消");
				}
				else
				{
     				SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织暂时无法使用该系统.");
				}
			}
			else if(checkpointid == InsuranceCP)//
			{
			    if(GetPVarInt(playerid, "PrivateCar") != 0)
			    {
					ShowPlayerDialog(playerid,DIALOG_INSURANCE, DIALOG_STYLE_LIST, "保险公司","车辆保险\n退订保险\n索求理赔" ,"选择", "取消");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要取出你的一台载具.");
				}
			}
			else if(checkpointid == HardwareCP)
			{
				ShowPlayerDialog(playerid,DIALOG_HARDWARE, DIALOG_STYLE_LIST, "杂货店","面具 ($1500)\n工具箱 ($1000)\n帐篷 ($1000)\n苏打粉 ($50)" ,"购买", "返回");
			}
			else if(checkpointid == BuylockCP)
			{
			    if(GetPVarInt(playerid, "PrivateCar") != 0)
			    {
					ShowPlayerDialog(playerid,DIALOG_BUY_LOCK, DIALOG_STYLE_LIST, "车辆安全服务", "车锁等级#1 ($400)\n车锁等级#2 ($1000)\n车锁等级#3 ($1700)\n车锁等级#4 ($2600)\n车锁等级#5 ($3750)" ,"购买", "返回");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要取出你的一台载具.");
				}
			}
			else if(checkpointid == SerialCP)
			{
			    if(PlayerInfo[playerid][pFaction] == 1)
			    {
					ShowPlayerDialog(playerid,	DIALOG_SERIAL, DIALOG_STYLE_INPUT, "武器序列号", "请输入一个武器序列号...", "扫描", "取消");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_LIGHTRED, "你不是LAPD成员.");
				}
			}
			else if(checkpointid == AmmunationCP[0])
			{
			    if(PlayerInfo[playerid][pWeaponLic] == 1)
			    {
					ShowPlayerDialog(playerid,DIALOG_GUNSHOP, DIALOG_STYLE_LIST, "武器商店","Colt 1911 ($1000)\nGlock .37 ($1750)\nRemington 870 ($2500)\n手枪弹夹 ($200)\n霞弹枪弹夹 ($300)" ,"购买", "返回");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_LIGHTRED, "你没有武器持有许可证.");
				}
   			}
   			else if(checkpointid == AmmunationCP[1])
			{
			    if(PlayerInfo[playerid][pWeaponLic] == 1)
			    {
					ShowPlayerDialog(playerid,DIALOG_GUNSHOP, DIALOG_STYLE_LIST, "武器商店","Colt 1911 ($1000)\nGlock .37 ($1750)\nRemington 870 ($2500)\n手枪弹夹 ($200)\n霞弹枪弹夹 ($300)" ,"购买", "返回");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_LIGHTRED, "你没有武器持有许可证.");
				}
   			}
   			else if(checkpointid == AmmunationCP[2])
			{
			    if(PlayerInfo[playerid][pWeaponLic] == 1)
			    {
					ShowPlayerDialog(playerid,DIALOG_GUNSHOP, DIALOG_STYLE_LIST, "武器商店","Colt 1911 ($1000)\nGlock .37 ($1750)\nRemington 870 ($2500)\n手枪弹夹 ($200)\n霞弹枪弹夹 ($300)" ,"购买", "返回");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_LIGHTRED, "你没有武器持有许可证.");
				}
   			}
   			else if(checkpointid == AmmunationCP[3])
			{
			    if(PlayerInfo[playerid][pWeaponLic] == 1)
			    {
					ShowPlayerDialog(playerid,DIALOG_GUNSHOP, DIALOG_STYLE_LIST, "武器商店","Colt 1911 ($1000)\nGlock .37 ($1750)\nRemington 870 ($2500)\n弹夹 ($200)\n重型枪械弹匣 ($300)" ,"购买", "返回");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_LIGHTRED, "你没有武器持有许可证.");
				}
   			}
			else if(checkpointid == skinChangeCP[0] || checkpointid == skinChangeCP[1] || checkpointid == skinChangeCP[2] || checkpointid == skinChangeCP[3] || checkpointid == skinChangeCP[4] || checkpointid == skinChangeCP[5]) {
				PutPlayerInSkinSelection(playerid, checkpointid);
			} else {
				for(new i = 0; i != MAX_HOUSES; i++) {
				    if(checkpointid == houseCP[i]) {
						if(strfind(HouseInfo[i][hOwner], "_") == -1) {
						    new content[100];
						    format(content, sizeof(content), "%i %s", HouseInfo[i][hHousenumber], HouseInfo[i][hStreet]);
						    PlayerTextDrawSetString(playerid, TD_AD_HousenumberStreet, content);
						    format(content, sizeof(content), "Los Angeles, SA %i", HouseInfo[i][hZip]);
						    PlayerTextDrawSetString(playerid, TD_AD_CityZip, content);
						    format(content, sizeof(content), "$%i", HouseInfo[i][hPrice]);
					     	PlayerTextDrawSetString(playerid, TD_AD_PriceValue, content);
					     	format(content, sizeof(content), "$%i/Payday", HouseInfo[i][hTaxes]);
					     	PlayerTextDrawSetString(playerid, TD_AD_TaxesValue, content);
					     	PlayerTextDrawSetString(playerid, TD_AD_SellerValue, "Los Angeles Bank");
							PlayerTextDrawSetString(playerid, TD_AD_Headline, "Property For Sale");
							PlayerTextDrawSetString(playerid, TD_AD_Price, "Price:");
							PlayerTextDrawSetString(playerid, TD_AD_Taxes, "Taxes:");

							TextDrawShowForPlayer(playerid, TD_AD_HeadBox);
							TextDrawShowForPlayer(playerid, TD_AD_BoxThree);
							TextDrawShowForPlayer(playerid, TD_AD_Seller);
							PlayerTextDrawShow(playerid, TD_AD_Price);
							PlayerTextDrawShow(playerid, TD_AD_CityZip);
							PlayerTextDrawShow(playerid, TD_AD_Headline);
							PlayerTextDrawShow(playerid, TD_AD_Taxes);
							PlayerTextDrawShow(playerid, TD_AD_PriceValue);
							PlayerTextDrawShow(playerid, TD_AD_TaxesValue);
							PlayerTextDrawShow(playerid, TD_AD_SellerValue);
							PlayerTextDrawShow(playerid, TD_AD_HousenumberStreet);

							PlayerTextDrawSetString(playerid, TD_Mid_Info, "~b~For Sale!~n~~w~Type ~g~/house buy ~w~to acquire~n~this house.");
							PlayerTextDrawShow(playerid, TD_Mid_Info);
						} else {
						    new content[100];
						    format(content, sizeof(content), "%i %s", HouseInfo[i][hHousenumber], HouseInfo[i][hStreet]);
						    PlayerTextDrawSetString(playerid, TD_AD_HousenumberStreet, content);
						    format(content, sizeof(content), "Los Angeles, SA %i", HouseInfo[i][hZip]);
						    PlayerTextDrawSetString(playerid, TD_AD_CityZip, content);
							PlayerTextDrawSetString(playerid, TD_AD_Headline, "Property");
							PlayerTextDrawSetString(playerid, TD_AD_Price, "Owner:");
							format(content, sizeof(content), "%s", EOS);
							strmid(content, HouseInfo[i][hOwner], strfind(HouseInfo[i][hOwner], "_"), strlen(HouseInfo[i][hOwner]));
					     	PlayerTextDrawSetString(playerid, TD_AD_PriceValue, content);

							TextDrawShowForPlayer(playerid, TD_AD_HeadBox);
							PlayerTextDrawShow(playerid, TD_AD_Price);
							PlayerTextDrawShow(playerid, TD_AD_CityZip);
							PlayerTextDrawShow(playerid, TD_AD_Headline);
							PlayerTextDrawShow(playerid, TD_AD_PriceValue);
							PlayerTextDrawShow(playerid, TD_AD_HousenumberStreet);

							if(HouseInfo[i][hRentalFee] > 0) {
							    PlayerTextDrawSetString(playerid, TD_AD_Taxes, "Rental Fee:");
							    format(content, sizeof(content), "$%i", HouseInfo[i][hRentalFee]);
							    PlayerTextDrawSetString(playerid, TD_AD_TaxesValue, content);
								PlayerTextDrawShow(playerid, TD_AD_Taxes);
								PlayerTextDrawShow(playerid, TD_AD_TaxesValue);
							    TextDrawShowForPlayer(playerid, TD_AD_BoxTwo);
							} else {
		                        TextDrawShowForPlayer(playerid, TD_AD_BoxOne);
							}
						}
						
						if(GetPVarInt(playerid, "PizzaHouse") == i && PlayerInfo[playerid][pItemType][0] == 29) {
						    new tip = random(2),
						        msg[50],
						        earnings = GetPVarInt(playerid, "PizzaPrice");
						        
                            ApplyAnimation(playerid, "CARRY", "putdwn", 4.1, 0, 1, 1, 0, 0, 1);
                            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
                            PlayerInfo[playerid][pPaycheck] += earnings;
							SetPVarInt(playerid, "Pizza", 0);
							RemoveItemType(playerid, 29);
							format(msg, sizeof(msg), "Earnings: $%i, Paycheck: $%i.", earnings, PlayerInfo[playerid][pPaycheck]);
							PlayerTextDrawSetString(playerid, TD_JOB_FirstLine, msg);
							PlayerTextDrawShow(playerid, TD_JOB_FirstLine);
							PaycheckTimerVar[playerid] = SetTimerEx("PaycheckTimer", 5000, false, "i", playerid);
							if(tip == 1) {
							    tip = random(11) + 5;
                                GivePlayerMoneyEx(playerid, tip);
								format(msg, sizeof(msg), "你从客户那里收到 $%i 小费.", tip);
								SendClientMessage(playerid, COLOR_LIGHTGREEN, msg);
							}
						}

						return 1;
				    }
				}

				for(new b = 0; b != MAX_BUSINESSES; b++) {
				    if(checkpointid == businessCP[b]) {
						if(strfind(BusinessInfo[b][bOwner], "_") == -1) {
						    new content[100];
						    format(content, sizeof(content), "%i %s", BusinessInfo[b][bHousenumber], BusinessInfo[b][bStreet]);
						    PlayerTextDrawSetString(playerid, TD_AD_HousenumberStreet, content);
						    format(content, sizeof(content), "Los Angeles, SA %i", BusinessInfo[b][bBusinesszip]);
						    PlayerTextDrawSetString(playerid, TD_AD_CityZip, content);
						    format(content, sizeof(content), "$%i", BusinessInfo[b][bPrice]);
					     	PlayerTextDrawSetString(playerid, TD_AD_PriceValue, content);
					     	format(content, sizeof(content), "$%i/Payday", BusinessInfo[b][bTaxes]);
					     	PlayerTextDrawSetString(playerid, TD_AD_TaxesValue, content);
					     	PlayerTextDrawSetString(playerid, TD_AD_SellerValue, "Bank");
							PlayerTextDrawSetString(playerid, TD_AD_Headline, "Business For Sale");
							PlayerTextDrawSetString(playerid, TD_AD_Price, "Price:");
							PlayerTextDrawSetString(playerid, TD_AD_Taxes, "Taxes:");

							TextDrawShowForPlayer(playerid, TD_AD_HeadBox);
							TextDrawShowForPlayer(playerid, TD_AD_BoxThree);
							TextDrawShowForPlayer(playerid, TD_AD_Seller);
							PlayerTextDrawShow(playerid, TD_AD_Price);
							PlayerTextDrawShow(playerid, TD_AD_CityZip);
							PlayerTextDrawShow(playerid, TD_AD_Headline);
							PlayerTextDrawShow(playerid, TD_AD_Taxes);
							PlayerTextDrawShow(playerid, TD_AD_PriceValue);
							PlayerTextDrawShow(playerid, TD_AD_TaxesValue);
							PlayerTextDrawShow(playerid, TD_AD_SellerValue);
							PlayerTextDrawShow(playerid, TD_AD_HousenumberStreet);

							PlayerTextDrawSetString(playerid, TD_Mid_Info, "~b~For Sale!~n~~w~Type ~g~/buybusiness ~w~to acquire~n~this business.");
							PlayerTextDrawShow(playerid, TD_Mid_Info);
						} else {
						    new content[100];
						    format(content, sizeof(content), "%i %s", BusinessInfo[b][bHousenumber], BusinessInfo[b][bStreet]);
						    PlayerTextDrawSetString(playerid, TD_AD_HousenumberStreet, content);
						    format(content, sizeof(content), "Los Angeles, SA %i", BusinessInfo[b][bBusinesszip]);
						    PlayerTextDrawSetString(playerid, TD_AD_CityZip, content);
							PlayerTextDrawSetString(playerid, TD_AD_Headline, BusinessInfo[b][bName]);
							PlayerTextDrawSetString(playerid, TD_AD_Price, "Status:");
					     	PlayerTextDrawSetString(playerid, TD_AD_PriceValue, (BusinessInfo[b][bLocked] != 0) ? ("Closed") : ("Open"));

							TextDrawShowForPlayer(playerid, TD_AD_HeadBox);
							PlayerTextDrawShow(playerid, TD_AD_Price);
							PlayerTextDrawShow(playerid, TD_AD_CityZip);
							PlayerTextDrawShow(playerid, TD_AD_Headline);
							PlayerTextDrawShow(playerid, TD_AD_PriceValue);
							PlayerTextDrawShow(playerid, TD_AD_HousenumberStreet);

							if(BusinessInfo[b][bFee] > 0) {
							    PlayerTextDrawSetString(playerid, TD_AD_Taxes, "Entrance Fee:");
							    format(content, sizeof(content), "$%i", BusinessInfo[b][bFee]);
							    PlayerTextDrawSetString(playerid, TD_AD_TaxesValue, content);
								PlayerTextDrawShow(playerid, TD_AD_Taxes);
								PlayerTextDrawShow(playerid, TD_AD_TaxesValue);
							    TextDrawShowForPlayer(playerid, TD_AD_BoxTwo);
							} else {
		                        TextDrawShowForPlayer(playerid, TD_AD_BoxOne);
							}
						}
						
						if(GetPVarInt(playerid, "DeliveryBusiness") == b && PlayerInfo[playerid][pItemType][0] == 241) {
						    new msg[50],
						        earnings = GetPVarInt(playerid, "DeliveryPrice");

                            ApplyAnimation(playerid, "CARRY", "putdwn", 4.1, 0, 1, 1, 0, 0, 1);
                            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
                            PlayerInfo[playerid][pPaycheck] += earnings;
							SetPVarInt(playerid, "Delivery", 0);
							RemoveItemType(playerid, 241);
							format(msg, sizeof(msg), "Earnings: $%i, Paycheck: $%i.", earnings, PlayerInfo[playerid][pPaycheck]);
							PlayerTextDrawSetString(playerid, TD_JOB_FirstLine, msg);
							PlayerTextDrawShow(playerid, TD_JOB_FirstLine);
							PaycheckTimerVar[playerid] = SetTimerEx("PaycheckTimer", 5000, false, "i", playerid);
						}

						return 1;
				    }
				}
			}
		}
	    case 0: {
		    for(new i = 0; i != sizeof(BarrierCP); i++) {
		        if(checkpointid == BarrierCP[i]) {
			        if((PlayerInfo[playerid][pFaction] != 1 && PlayerInfo[playerid][pFaction] != 2) || (PlayerInfo[playerid][pFaction] == 1 && GetPVarInt(playerid, "LAPDDuty") == 0) || (GetPVarInt(playerid, "LSFDDuty") == 0 && PlayerInfo[playerid][pFaction] == 2)) {
                        if(barriers == 1) {
						    if(BarrierStatus[i] == 1 || (BarrierCP[i] == BarrierCP[1] && BarrierStatus[0] == 1)) {
					            SendClientMessage(playerid, COLOR_GREY, "请耐心等待护栏关闭..");
					        } else {
					 			ShowPlayerDialog(playerid, DIALOG_BARRIER, DIALOG_STYLE_MSGBOX, "{FF9900}收费站", "你想支付 $15 离开/进入 Los Angeles吗?", "是的", "不用了");
				 				SetPVarInt(playerid, "Barrier", i);
							}
						} else {
						    SendClientMessage(playerid, COLOR_GREY, "Los Angeles Police Department 关闭了收费站, 你可以尝试拨打911非紧急热线.");
						}
					} else {
					    switch(i) {
					        case 0, 1: {
					            MoveDynamicObject(Barrier[0], -78.79980469, -906.19921875, 16.90000038, 0.05, 0.00000000, 0, 152.97363281);
							}
					    	case 2: {
					    	    MoveDynamicObject(Barrier[2], 1695.59997559, 417.39999390, 30.40000038, 0.05, 359.98901367, 0, 160.49670410);
							}
					     	case 3: {
			                    MoveDynamicObject(Barrier[3], 1709.00000000, 421.20001221, 30.50000076, 0.05, 0.00000000, 0, 341.99340820);
							}
						 	case 4: {
			                    MoveDynamicObject(Barrier[4], 600.20001221, 346.29998779, 18.59999924, 0.05, 0.00000000, 0, 33.99719238);
							}
					    	case 5: {
					        	MoveDynamicObject(Barrier[5], -183.89941406, 278.50000000, 11.99999981, 0.05, 0.00000000, 0, 163.98193359);
							}
					    	case 6: {
					        	MoveDynamicObject(Barrier[6], -197.80000305, 282.39999390, 11.99999981, 0.05, 0.00000000, 0, 344.72912598);
							}
					    	case 7: {
					    	    MoveDynamicObject(Barrier[7], 607.59997559, -1201.90002441, 17.80000000, 0.05, 0.00000000, 0, 16.47131348);
							}
					    	case 8: {
					        	MoveDynamicObject(Barrier[8], 67.00000000, -1537.80004883, 4.70000010, 0.05, 0.00000000, 0, 265.72082520);
							}
					    	case 9: {
					        	MoveDynamicObject(Barrier[9], 38.39941406, -1525.69921875, 4.89999990, 0.05, 0.00000000, 0, 84.72106934);
							}
					    	case 10: {
					        	MoveDynamicObject(Barrier[10], 612.29998779, 354.10000610, 18.59999924, 0.05, 0.00000000, 0, 211.49218750);
							}
					    	case 11: {
					        	MoveDynamicObject(Barrier[11], -963.50000000, -284.39941406, 36.20000153, 0.05, 0.00000000, 0, 348.22265625);
							}
					    	case 12: {
					        	MoveDynamicObject(Barrier[12], -949.50000000, -287.50000000 ,36.20000153, 0.05, 0.00000000, 0, 166.72302246);
							}
					    	case 13: {
					        	MoveDynamicObject(Barrier[13], 628.50000000, -1193.80004883, 17.80000000, 0.05, 0.00000000, 0, 22.71850586);
							}
					    }

					    BarrierStatus[i] = 1;
						SetTimerEx("BarrierTimer", 7500, false, "i", i);
					}

					break;
				}
			}
		}
	}

	return 1;
}

forward OnFadeComplete(playerid);
public OnFadeComplete(playerid)
{
	switch(fade[playerid][fID])
	{
		case 1:
		{
		    if(GetPVarInt(playerid, "Death") == 0)
			{
	            if(fade[playerid][fUnfreeze] != 0)
				{
					UnfreezePlayer(playerid);
				}

	            ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
	            if(GetPVarInt(playerid, "Handcuffed") == 0)
				{
				    if(GetPVarInt(playerid, "Calling") == -1)
					{
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					}
					else
					{
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					}
				}
				else
				{
				    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
				}
			}

			fade[playerid][fID] = 0;
			if(GetPVarInt(playerid, "OnDutyAfterRelog") != 0) {
				ShowPlayerDialog(playerid, DIALOG_FACTION_DUTY, DIALOG_STYLE_MSGBOX, "{FF9900}执勤回流", "脚本检测到您离线时为执勤状态, 你是否想回到上班状态?", "确定", "取消");
				SetPVarInt(playerid, "DutySkinAfterRelog", GetPVarInt(playerid, "OnDutyAfterRelog"));
				SetPVarInt(playerid, "OnDutyAfterRelog", 0);
			}
		}
		case 2: {
		    SetPlayerInterior(playerid, fade[playerid][fInt]);
			SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
		    SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
		    ApplyAnimation(playerid, "ped", "SEAT_down", 4.1, 0, 1, 1, 1, 1);
		    fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 3: {
		    new vehicle = GetPlayerVehicleID(playerid),
		        passengers[4] = {-1, ...},
		        model = GetVehicleModel(vehicle);

		    addedModificationsPrice[playerid] = 0;
		    for(new com = 0; com != 14; com++) {
				addedModifications[playerid][com] = VehicleInfo[vehicle][vModifications][com];
			}

		    foreach(new i : Player) {
				if(GetPlayerVehicleID(i) == vehicle) {
					passengers[GetPlayerVehicleSeat(i)] = i;
				}
			}

		    SetVehiclePos(vehicle, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			LinkVehicleToInterior(vehicle, fade[playerid][fInt]);
			SetVehicleVirtualWorld(vehicle, fade[playerid][fVW]);
			for(new b = 0; b != sizeof(passengers); b++) {
				if(passengers[b] != -1) {
				    FreezePlayer(passengers[b]);
	                SetPlayerInterior(passengers[b], fade[playerid][fInt]);
					SetPlayerVirtualWorld(passengers[b], fade[playerid][fVW]);
				    PutPlayerInVehicle(passengers[b], vehicle, b);
				    SetPlayerCameraPos(passengers[b], 3.6898, -14.7078, 1052.5635);
				    SetPlayerCameraLookAt(passengers[b], fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
				    SetPVarInt(passengers[b], "ModPerspective", 0);
				    SetPVarInt(passengers[b], "InModGarage", 1);
				    SetPlayerWeather(passengers[b], 2);
				}
			}

			SetVehicleZAngle(vehicle, fade[playerid][fA]);
			currentVehicleComponent[playerid] = 0;
			PlayerTextDrawSetString(playerid, TD_M_PriceValue, "$0");
			PlayerTextDrawSetString(playerid, TD_M_VehicleValue, vehicleData[model - 400][typeName]);
			currentVehicleComponent[playerid] = -1;
   			SetNextVehicleComponent(playerid, model, 1);
		    TextDrawShowForPlayer(playerid, TD_D_Box);
		    TextDrawShowForPlayer(playerid, TD_M_Price);
		    PlayerTextDrawShow(playerid, TD_M_PriceValue);
		    TextDrawShowForPlayer(playerid, TD_M_CompRight);
		    TextDrawShowForPlayer(playerid, TD_M_CompLeft);
		    PlayerTextDrawShow(playerid, TD_M_Comp);
		    PlayerTextDrawShow(playerid, TD_M_Add);
		    PlayerTextDrawShow(playerid, TD_M_VehicleValue);
		    TextDrawShowForPlayer(playerid, TD_M_Buy);
		    TextDrawShowForPlayer(playerid, TD_M_Leave);
		    TextDrawShowForPlayer(playerid, TD_M_Vehicle);
		    TextDrawShowForPlayer(playerid, TD_M_Viewing);
		    TextDrawShowForPlayer(playerid, TD_M_ViewingLeft);
		    TextDrawShowForPlayer(playerid, TD_M_ViewingRight);
		    SelectTextDraw(playerid, 0xFF9900FF);
			SendClientMessage(playerid, COLOR_WHITE, "请点击箭头选择操作. 如果你的指针消失, 你可以按下{777777}Enter{FFFFFF}来激活!");
            HideVehicleTextDraw(playerid);
		    fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 4: {
		    TogglePlayerSpectating(playerid, 0);
		    fade[playerid][fID] = 1;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 5: {
		    SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
			if(GetPVarInt(playerid, "AdminJailed") == 0 && IsPlayerInAnyVehicle(playerid)) {
				new vehicle = GetPlayerVehicleID(playerid),
				    passengers[4] = {-1, ...};

                foreach(new i : Player) {
					if(GetPlayerVehicleID(i) == vehicle) {
						passengers[GetPlayerVehicleSeat(i)] = i;
					}
				}

				SetVehiclePos(vehicle, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
				LinkVehicleToInterior(vehicle, fade[playerid][fInt]);
				SetVehicleVirtualWorld(vehicle, fade[playerid][fVW]);
				for(new b = 0; b != sizeof(passengers); b++) {
					if(passengers[b] != -1) {
					    SetCameraBehindPlayer(passengers[b]);
		                SetPlayerInterior(passengers[b], fade[playerid][fInt]);
						SetPlayerVirtualWorld(passengers[b], fade[playerid][fVW]);
					    PutPlayerInVehicle(passengers[b], vehicle, b);
					    SetPlayerSkin(passengers[b], PlayerInfo[passengers[b]][pSkin]);
					}
				}
			} else {
			    if(IsPlayerInAnyVehicle(playerid)) {
					RemovePlayerFromVehicle(playerid);
				}

			    SetPlayerInterior(playerid, fade[playerid][fInt]);
				SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
			    SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
				SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
			    SetCameraBehindPlayer(playerid);
			    if(dealerExit[playerid] != 0) {
			        CancelSelectTextDraw(playerid);
	                DestroyVehicle(GetPVarInt(playerid, "DealerVehicleID"));
					SetPVarInt(playerid, "DealerVehicle", 0);
					SetPVarInt(playerid, "DealerVehicleID", 0);
					SetPVarInt(playerid, "DealerColor1", 0);
					SetPVarInt(playerid, "DealerColor2", 0);
					TextDrawHideForPlayer(playerid, TD_D_Box);
					TextDrawHideForPlayer(playerid, TD_D_Vehicle);
					TextDrawHideForPlayer(playerid, TD_D_Color1);
					TextDrawHideForPlayer(playerid, TD_D_Color2);
					TextDrawHideForPlayer(playerid, TD_D_Price);
					TextDrawHideForPlayer(playerid, TD_D_Tank);
					TextDrawHideForPlayer(playerid, TD_D_Cargo);
					TextDrawHideForPlayer(playerid, TD_D_Buy);
					TextDrawHideForPlayer(playerid, TD_D_Leave);
					TextDrawHideForPlayer(playerid, TD_D_VehicleLeft);
					TextDrawHideForPlayer(playerid, TD_D_VehicleRight);
					TextDrawHideForPlayer(playerid, TD_D_Color1Left);
					TextDrawHideForPlayer(playerid, TD_D_Color1Right);
					TextDrawHideForPlayer(playerid, TD_D_Color2Left);
					TextDrawHideForPlayer(playerid, TD_D_Color2Right);
					TextDrawHideForPlayer(playerid, TD_D_Name);
					TextDrawHideForPlayer(playerid, TD_D_Seats);
					PlayerTextDrawHide(playerid, TD_D_PriceValue);
					PlayerTextDrawHide(playerid, TD_D_TankValue);
					PlayerTextDrawHide(playerid, TD_D_CargoValue);
					PlayerTextDrawHide(playerid, TD_D_SeatsValue);
					PlayerTextDrawHide(playerid, TD_D_NameValue);
					dealerExit[playerid] = 0;
				}
				if(GetPVarInt(playerid,"xb_businessid")!=0)
				{
					CancelSelectTextDraw(playerid);
	                DestroyPlayerObject(playerid,GetPVarInt(playerid, "xb_furnitureobj"));
					SetPVarInt(playerid, "xb_businessid", 0);
					TextDrawHideForPlayer(playerid, TD_F_Box);
					TextDrawHideForPlayer(playerid, TD_F_Furniture);
					TextDrawHideForPlayer(playerid, TD_F_Left);
					TextDrawHideForPlayer(playerid, TD_F_Right);
					TextDrawHideForPlayer(playerid, TD_F_Price);
					TextDrawHideForPlayer(playerid, TD_F_TypeLeft);
					TextDrawHideForPlayer(playerid, TD_F_TypeRight);
					TextDrawHideForPlayer(playerid, TD_F_Buy);
					TextDrawHideForPlayer(playerid, TD_F_Leave);
					TextDrawHideForPlayer(playerid, TD_F_Name);
					TextDrawHideForPlayer(playerid, TD_F_Woods);
					TextDrawHideForPlayer(playerid, TD_F_Woodsleft);
					TextDrawHideForPlayer(playerid, TD_F_Type);
					TextDrawHideForPlayer(playerid, TD_F_Type2);
					PlayerTextDrawHide(playerid, TD_PF_Woods);
					PlayerTextDrawHide(playerid, TD_PF_Woodsleft);
					PlayerTextDrawHide(playerid, TD_PF_Name);
					PlayerTextDrawHide(playerid, TD_PF_Price);
					PlayerTextDrawHide(playerid, TD_PF_Type);
				}
			}

		    fade[playerid][fID] = 1;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 6: {
		    new tdMsg[30],
		        v = GetNextDealerVehicle(GetPVarInt(playerid, "DealerVehicle")),
		        vehicle = CreateVehicle(400 + v, -1952.3647, 263.0931, 40.7523, 323.1245, 0, 0, -1);

		    SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
		    SetPlayerInterior(playerid, fade[playerid][fInt]);
		    SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
		    SetPlayerCameraPos(playerid, -1951.2566, 271.9794, 41.9471);
		    SetPlayerCameraLookAt(playerid, -1952.3647, 263.0931, 40.7523);
		    SetVehicleVirtualWorld(vehicle, GetPlayerVirtualWorld(playerid));
		    SetVehicleParamsEx(vehicle, 0, 1, 0, 0, 0, 0, 0);

		    format(tdMsg, sizeof(tdMsg), "$%i", vehicleData[v][typePrice]);
		    PlayerTextDrawSetString(playerid, TD_D_PriceValue, tdMsg);
		    PlayerTextDrawSetString(playerid, TD_D_NameValue, vehicleData[v][typeName]);
		    format(tdMsg, sizeof(tdMsg), "%i", vehicleData[v][seats]);
		    PlayerTextDrawSetString(playerid, TD_D_SeatsValue, tdMsg);
		    if(vehicleData[v][tank] != 0) {
			    format(tdMsg, sizeof(tdMsg), "%i liters", vehicleData[v][tank]);
			    PlayerTextDrawSetString(playerid, TD_D_TankValue, tdMsg);
			} else {
			    PlayerTextDrawSetString(playerid, TD_D_CargoValue, "No Tank");
			}

		    if(vehicleData[v][volume] != 0) {
				format(tdMsg, sizeof(tdMsg), "%i liters", vehicleData[v][volume]);
		    	PlayerTextDrawSetString(playerid, TD_D_CargoValue, tdMsg);
		    } else {
		        PlayerTextDrawSetString(playerid, TD_D_CargoValue, "No Trunk");
		    }

			TextDrawShowForPlayer(playerid, TD_D_Box);
			TextDrawShowForPlayer(playerid, TD_D_Vehicle);
			TextDrawShowForPlayer(playerid, TD_D_Color1);
			TextDrawShowForPlayer(playerid, TD_D_Name);
			TextDrawShowForPlayer(playerid, TD_D_Seats);
			TextDrawShowForPlayer(playerid, TD_D_Color2);
			TextDrawShowForPlayer(playerid, TD_D_Price);
			TextDrawShowForPlayer(playerid, TD_D_Tank);
			TextDrawShowForPlayer(playerid, TD_D_Cargo);
			TextDrawShowForPlayer(playerid, TD_D_Buy);
			TextDrawShowForPlayer(playerid, TD_D_Leave);
			TextDrawShowForPlayer(playerid, TD_D_VehicleLeft);
			TextDrawShowForPlayer(playerid, TD_D_VehicleRight);
			TextDrawShowForPlayer(playerid, TD_D_Color1Left);
			TextDrawShowForPlayer(playerid, TD_D_Color1Right);
			TextDrawShowForPlayer(playerid, TD_D_Color2Left);
			TextDrawShowForPlayer(playerid, TD_D_Color2Right);
			PlayerTextDrawShow(playerid, TD_D_PriceValue);
			PlayerTextDrawShow(playerid, TD_D_TankValue);
			PlayerTextDrawShow(playerid, TD_D_CargoValue);
			PlayerTextDrawShow(playerid, TD_D_SeatsValue);
			PlayerTextDrawShow(playerid, TD_D_NameValue);
			SelectTextDraw(playerid, 0xFF9900FF);

			SetPVarInt(playerid, "DealerVehicle", v + 1);
			SetPVarInt(playerid, "DealerVehicleID", vehicle);
			SendClientMessage(playerid, COLOR_WHITE, "请点击箭头选择操作. 如果你的指针消失, 你可以按下{777777}Enter{FFFFFF}来激活!");
			FreezePlayer(playerid);
			fade[playerid][fID] = 1;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 7: {
		    new vehicle = GetPlayerVehicleID(playerid),
		        passengers[4] = {-1, ...};

            foreach(new i : Player) {
				if(GetPlayerVehicleID(i) == vehicle) {
					passengers[GetPlayerVehicleSeat(i)] = i;
				}
			}

            LinkVehicleToInterior(vehicle, 0);
			SetVehicleVirtualWorld(vehicle, 0);
		    SetVehiclePos(vehicle, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
		    SetVehicleZAngle(vehicle, fade[playerid][fA]);
			for(new b = 0; b != sizeof(passengers); b++) {
				if(passengers[b] != -1) {
		            SetPlayerInterior(passengers[b], 0);
					SetPlayerVirtualWorld(passengers[b], 0);
					SetCameraBehindPlayer(passengers[b]);
					UnfreezePlayer(passengers[b]);
				    PutPlayerInVehicle(passengers[b], vehicle, b);
				    SetPVarInt(passengers[b], "InModGarage", 0);
				    SetPlayerWeather(passengers[b], gWeather);
				}
			}

		    TextDrawHideForPlayer(playerid, TD_D_Box);
		    TextDrawHideForPlayer(playerid, TD_M_Price);
		    PlayerTextDrawHide(playerid, TD_M_PriceValue);
		    TextDrawHideForPlayer(playerid, TD_M_CompRight);
		    TextDrawHideForPlayer(playerid, TD_M_CompLeft);
		    PlayerTextDrawHide(playerid, TD_M_Comp);
		    PlayerTextDrawHide(playerid, TD_M_Add);
		    PlayerTextDrawHide(playerid, TD_M_VehicleValue);
		    TextDrawHideForPlayer(playerid, TD_M_Buy);
		    TextDrawHideForPlayer(playerid, TD_M_Leave);
		    TextDrawHideForPlayer(playerid, TD_M_Vehicle);
		    TextDrawHideForPlayer(playerid, TD_M_Viewing);
		    TextDrawHideForPlayer(playerid, TD_M_ViewingLeft);
		    TextDrawHideForPlayer(playerid, TD_M_ViewingRight);
		    CancelSelectTextDraw(playerid);
		    ShowVehicleTextDraw(playerid, vehicle);
		    fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 8:
		{
		    new price = GetPVarInt(playerid, "PayNSprayPrice"),
		        seconds = floatround(price / 10),
		        time[10],
		        vehicle = GetPlayerVehicleID(playerid),
                passengers[4] = {-1, ...},
                payNSpray = GetPVarInt(playerid, "PayNSpray");

            foreach(new i : Player)
			{
				if(GetPlayerVehicleID(i) == vehicle)
				{
					passengers[GetPlayerVehicleSeat(i)] = i;
				}
			}

			format(time, sizeof(time), "$%i", price);
		    PlayerTextDrawSetString(playerid, TD_P_PriceValue, time);
		    format(time, sizeof(time), "%i:%i", seconds / 60, seconds % 60);
		    PlayerTextDrawSetString(playerid, TD_P_TimeValue, time);
		    TextDrawShowForPlayer(playerid, TD_P_Box);
		    TextDrawShowForPlayer(playerid, TD_P_Price);
		    TextDrawShowForPlayer(playerid, TD_P_Time);
		    TextDrawShowForPlayer(playerid, TD_P_Headline);
		    PlayerTextDrawShow(playerid, TD_P_PriceValue);
		    PlayerTextDrawShow(playerid, TD_P_TimeValue);
		    SetPVarInt(playerid, "PayNSprayTime", seconds);
		    SetVehiclePos(vehicle, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			LinkVehicleToInterior(vehicle, fade[playerid][fInt]);
			SetVehicleVirtualWorld(vehicle, fade[playerid][fVW]);
			for(new b = 0; b != sizeof(passengers); b++) {
				if(passengers[b] != -1) {
				    FreezePlayer(passengers[b]);
	                SetPlayerInterior(passengers[b], fade[playerid][fInt]);
					SetPlayerVirtualWorld(passengers[b], fade[playerid][fVW]);
				    PutPlayerInVehicle(passengers[b], vehicle, b);
				    SetPlayerCameraPos(passengers[b], -724.0787, 2315.7732, 4998.8932);
				    SetPlayerCameraLookAt(passengers[b], fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
				    SetPVarInt(passengers[b], "PayNSpray", payNSpray);
				    PlayerPlaySound(passengers[b], 1134, 0, 0, 0);
				}
			}

			SetVehicleZAngle(vehicle, fade[playerid][fA]);
            fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 9: {
            SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
            SetPlayerCameraLookAt(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			fade[playerid][fadeX] += (2.5 * floatsin(-fade[playerid][fAngle], degrees));
			fade[playerid][fadeY] += (2.5 * floatcos(-fade[playerid][fAngle], degrees));
			SetPlayerCameraPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ] + 0.5);
			SetPVarInt(playerid, "ClothingStoreVW", GetPlayerVirtualWorld(playerid));
			SetPlayerVirtualWorld(playerid, playerid + 1);
			TextDrawShowForPlayer(playerid, TD_SC_BoxNext);
			TextDrawShowForPlayer(playerid, TD_SC_BoxBack);
			TextDrawShowForPlayer(playerid, TD_SC_Next);
			TextDrawShowForPlayer(playerid, TD_SC_Back);
			TextDrawShowForPlayer(playerid, TD_SC_Cancel);
			TextDrawShowForPlayer(playerid, TD_SC_BoxCancel);
			TextDrawShowForPlayer(playerid, TD_SC_Buy);
			TextDrawShowForPlayer(playerid, TD_SC_BoxBuy);
			SelectTextDraw(playerid, 0xFF9900FF);
			SetPVarInt(playerid, "ClothingStoreActive", 1);
			SetPVarInt(playerid, "ClothingStoreSkin", 0);
		    FadeScreen(playerid, 0, 0, 0, 255, 250);
		    fade[playerid][fID] = 0;

		    if(PlayerInfo[playerid][pGender] == 1) {
				SetPlayerSkin(playerid, MaleSkins[0]);
			} else {
				SetPlayerSkin(playerid, FemaleSkins[0]);
			}
		}
		case 10: {
            SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
			SetPlayerInterior(playerid, fade[playerid][fInt]);
            SetPlayerCameraLookAt(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			fade[playerid][fadeX] += (2.5 * floatsin(-fade[playerid][fAngle], degrees));
			fade[playerid][fadeY] += (2.5 * floatcos(-fade[playerid][fAngle], degrees));
			SetPlayerCameraPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ] + 0.5);
			SetPVarInt(playerid, "WardrobeVW", GetPlayerVirtualWorld(playerid));
			SetPlayerVirtualWorld(playerid, playerid + 1);
			TextDrawShowForPlayer(playerid, TD_SC_BoxNext);
			TextDrawShowForPlayer(playerid, TD_SC_BoxBack);
			TextDrawShowForPlayer(playerid, TD_SC_Next);
			TextDrawShowForPlayer(playerid, TD_SC_Back);
			TextDrawShowForPlayer(playerid, TD_SC_Cancel);
			TextDrawShowForPlayer(playerid, TD_SC_BoxCancel);
			TextDrawShowForPlayer(playerid, TD_SC_Select);
			TextDrawShowForPlayer(playerid, TD_SC_BoxBuy);
			SelectTextDraw(playerid, 0xFF9900FF);
			SetPVarInt(playerid, "WardrobeActive", 1);
			SetPlayerSkin(playerid, GetPVarInt(playerid, "WardrobeSkin"));
			fade[playerid][fID] = 0;
   			FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 11:
		{
		    if(PlayerInfo[playerid][pPrisoned] == 0)
		    {
		    	SendClientMessage(playerid, COLOR_LIGHTRED, "你受伤严重, 你可以等待救援或者使用[/acceptdeath]接受死亡.");
		    	fade[playerid][fID] = 0;
       			FadeScreen(playerid, 0, 0, 0, 255, 250);
	    	}
		}
		case 12: {
		    fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 175, 250);
		}
		case 13: {
            UnfreezePlayer(playerid);
			ApplyAnimation(playerid, "PED", "getup", 4.1, 0, 1, 1, 0, 0, 1);
			surfVehicles[playerid] = 0;
			fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 175, 100);
		}
		case 14: {
		    new vehicle = GetPlayerVehicleID(playerid),
                passengers[4] = {-1, ...};

            foreach(new i : Player) {
				if(GetPlayerVehicleID(i) == vehicle) {
					passengers[GetPlayerVehicleSeat(i)] = i;
				}
			}

			VehicleInfo[vehicle][vAvoidUpdate] = 1;
		 	RepairVehicle(vehicle);
		 	SetVehicleHealth(vehicle, 1000);
		 	VehicleInfo[vehicle][vHealth] = 1000;
            TextDrawHideForPlayer(playerid, TD_P_Box);
		    TextDrawHideForPlayer(playerid, TD_P_Price);
		    TextDrawHideForPlayer(playerid, TD_P_Time);
		    TextDrawHideForPlayer(playerid, TD_P_Headline);
		    PlayerTextDrawHide(playerid, TD_P_PriceValue);
		    PlayerTextDrawHide(playerid, TD_P_TimeValue);
		    SetPVarInt(playerid, "PayNSprayTime", 0);
		    SetPVarInt(playerid, "PayNSpray", 0);
		    SetPVarInt(playerid, "PayNSprayPrice", 0);
		    SetVehiclePos(vehicle, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			LinkVehicleToInterior(vehicle, fade[playerid][fInt]);
			SetVehicleVirtualWorld(vehicle, fade[playerid][fVW]);
			for(new b = 0; b != sizeof(passengers); b++) {
				if(passengers[b] != -1) {
				    UnfreezePlayer(passengers[b]);
	                SetPlayerInterior(passengers[b], fade[playerid][fInt]);
					SetPlayerVirtualWorld(passengers[b], fade[playerid][fVW]);
					SetCameraBehindPlayer(passengers[b]);
				    PutPlayerInVehicle(passengers[b], vehicle, b);
				    SetPVarInt(passengers[b], "PayNSpray", 0);
				    PlayerPlaySound(passengers[b], 1134, 0, 0, 0);
				}
			}

			SetVehicleZAngle(vehicle, fade[playerid][fA]);
            fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 15: {
            SetPlayerInterior(playerid, fade[playerid][fInt]);
			SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
			SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
			SetPlayerCameraPos(playerid, 1531.4785, -1610.0042, 40.0983);
			SetPlayerCameraLookAt(playerid, 1513.1852, -1569.4840, 14.6543);
			fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 16: {
		    PlayerTextDrawHide(playerid, TD_Mid_Info);
		    SetPlayerInterior(playerid, fade[playerid][fInt]);
			SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
			SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
		    SetPVarInt(playerid, "LAPDDuty", GetPlayerSkin(playerid));
		    SetPlayerSkin(playerid, LAPDSkins[0]);
		    SetPlayerCameraPos(playerid, 265.2311, 117.0361, 1004.6172 + 0.5);
		    SetPlayerCameraLookAt(playerid, 268.4034, 119.3878, 1004.6172);
            TextDrawShowForPlayer(playerid, TD_SC_BoxNext);
			TextDrawShowForPlayer(playerid, TD_SC_BoxBack);
			TextDrawShowForPlayer(playerid, TD_SC_Next);
			TextDrawShowForPlayer(playerid, TD_SC_Back);
			TextDrawShowForPlayer(playerid, TD_SC_Cancel);
			TextDrawShowForPlayer(playerid, TD_SC_BoxCancel);
			TextDrawShowForPlayer(playerid, TD_SC_Select);
			TextDrawShowForPlayer(playerid, TD_SC_BoxBuy);
			SelectTextDraw(playerid, 0xFF9900FF);
			SendClientMessage(playerid, COLOR_WHITE, "点击按钮来进行操作. 如果你的指针消失了, 你可以使用{777777}Enter{FFFFFF}再次激活!");
            PlayerInfo[playerid][pSkin] = LAPDSkins[0];
            //// UpdatePlayerHandcuffs(playerid);
			SetPVarInt(playerid, "LAPDChoose", 1);
			FreezePlayer(playerid);
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
			fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 17: {
            new skin = GetPVarInt(playerid, "LAPDDuty");
            PlayerInfo[playerid][pSkin] = skin;
            SetPlayerSkin(playerid, skin);
            //// UpdatePlayerHandcuffs(playerid);
            SetPlayerInterior(playerid, fade[playerid][fInt]);
			SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
			SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
			SetCameraBehindPlayer(playerid);
			CancelSelectTextDraw(playerid);
			UnfreezePlayer(playerid);
            SetPVarInt(playerid, "LAPDChoose", 0);
            SetPVarInt(playerid, "LAPDDuty", 0);
            TextDrawHideForPlayer(playerid, TD_SC_BoxNext);
			TextDrawHideForPlayer(playerid, TD_SC_BoxBack);
			TextDrawHideForPlayer(playerid, TD_SC_Next);
			TextDrawHideForPlayer(playerid, TD_SC_Back);
			TextDrawHideForPlayer(playerid, TD_SC_Cancel);
			TextDrawHideForPlayer(playerid, TD_SC_BoxCancel);
			TextDrawHideForPlayer(playerid, TD_SC_Select);
			TextDrawHideForPlayer(playerid, TD_SC_BoxBuy);
			fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 18: {
		    new msg[75];
        	format(msg, sizeof(msg), "** %s 打开%s储备箱并取出制服.", GetNameWithSpace(playerid, 1), HisHer(playerid));
			ProxDetector(12, playerid, msg, COLOR_PINK);
			SetPlayerInterior(playerid, fade[playerid][fInt]);
			SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
			SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
			SetCameraBehindPlayer(playerid);
			CancelSelectTextDraw(playerid);
			UnfreezePlayer(playerid);
			UpdatePlayerColor(playerid);
			SetPVarInt(playerid, "LAPDChoose", 0);
			TextDrawHideForPlayer(playerid, TD_SC_BoxNext);
			TextDrawHideForPlayer(playerid, TD_SC_BoxBack);
			TextDrawHideForPlayer(playerid, TD_SC_Next);
			TextDrawHideForPlayer(playerid, TD_SC_Back);
			TextDrawHideForPlayer(playerid, TD_SC_Cancel);
			TextDrawHideForPlayer(playerid, TD_SC_BoxCancel);
			TextDrawHideForPlayer(playerid, TD_SC_Select);
			TextDrawHideForPlayer(playerid, TD_SC_BoxBuy);
			fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
            ShowPlayerDialog(playerid, DIALOG_PDSELECT, DIALOG_STYLE_LIST, "SYS: 执勤状态", "请选择你的执勤颜色:", "蓝色", "白色");
		}
		case 19: {
		    PlayerTextDrawHide(playerid, TD_Mid_Info);
		    SetPlayerInterior(playerid, fade[playerid][fInt]);
			SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
			SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
		    SetPVarInt(playerid, "SanDuty", GetPlayerSkin(playerid));
		    SetPlayerSkin(playerid, SanSkins[0]);
		    SetPlayerCameraPos(playerid, 345.3341, 161.4277, 1014.1875 + 0.5);
		    SetPlayerCameraLookAt(playerid, 349.2162, 165.3946, 1014.1875);
            TextDrawShowForPlayer(playerid, TD_SC_BoxNext);
			TextDrawShowForPlayer(playerid, TD_SC_BoxBack);
			TextDrawShowForPlayer(playerid, TD_SC_Next);
			TextDrawShowForPlayer(playerid, TD_SC_Back);
			TextDrawShowForPlayer(playerid, TD_SC_Cancel);
			TextDrawShowForPlayer(playerid, TD_SC_BoxCancel);
			TextDrawShowForPlayer(playerid, TD_SC_Select);
			TextDrawShowForPlayer(playerid, TD_SC_BoxBuy);
			SelectTextDraw(playerid, 0xFF9900FF);
			SendClientMessage(playerid, COLOR_WHITE, "点击按钮来进行操作. 如果你的指针消失了, 你可以使用{777777}Enter{FFFFFF}再次激活!");
            PlayerInfo[playerid][pSkin] = SanSkins[0];
            // UpdatePlayerHandcuffs(playerid);
			SetPVarInt(playerid, "SanChoose", 1);
			FreezePlayer(playerid);
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
			fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 20: {
            new skin = GetPVarInt(playerid, "SanDuty");
            PlayerInfo[playerid][pSkin] = skin;
            SetPlayerSkin(playerid, skin);
            // UpdatePlayerHandcuffs(playerid);
            SetPlayerInterior(playerid, fade[playerid][fInt]);
			SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
			SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
			SetCameraBehindPlayer(playerid);
			CancelSelectTextDraw(playerid);
			UnfreezePlayer(playerid);
            SetPVarInt(playerid, "SanChoose", 0);
            SetPVarInt(playerid, "SanDuty", 0);
            TextDrawHideForPlayer(playerid, TD_SC_BoxNext);
			TextDrawHideForPlayer(playerid, TD_SC_BoxBack);
			TextDrawHideForPlayer(playerid, TD_SC_Next);
			TextDrawHideForPlayer(playerid, TD_SC_Back);
			TextDrawHideForPlayer(playerid, TD_SC_Cancel);
			TextDrawHideForPlayer(playerid, TD_SC_BoxCancel);
			TextDrawHideForPlayer(playerid, TD_SC_Select);
			TextDrawHideForPlayer(playerid, TD_SC_BoxBuy);
			fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 21: {
		    new msg[75];
        	format(msg, sizeof(msg), "** %s 打开%s储备箱并取出制服.", GetNameWithSpace(playerid, 1), HisHer(playerid));
			ProxDetector(12, playerid, msg, COLOR_PINK);
			SetPlayerInterior(playerid, fade[playerid][fInt]);
			SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
			SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
			SetCameraBehindPlayer(playerid);
			CancelSelectTextDraw(playerid);
			UnfreezePlayer(playerid);
			UpdatePlayerColor(playerid);
			SetPVarInt(playerid, "SanChoose", 0);
			TextDrawHideForPlayer(playerid, TD_SC_BoxNext);
			TextDrawHideForPlayer(playerid, TD_SC_BoxBack);
			TextDrawHideForPlayer(playerid, TD_SC_Next);
			TextDrawHideForPlayer(playerid, TD_SC_Back);
			TextDrawHideForPlayer(playerid, TD_SC_Cancel);
			TextDrawHideForPlayer(playerid, TD_SC_BoxCancel);
			TextDrawHideForPlayer(playerid, TD_SC_Select);
			TextDrawHideForPlayer(playerid, TD_SC_BoxBuy);
			fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 22: {
		    PlayerTextDrawHide(playerid, TD_Mid_Info);
		    SetPlayerInterior(playerid, fade[playerid][fInt]);
			SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
			SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
		    SetPVarInt(playerid, "LSFDDuty", GetPlayerSkin(playerid));
		    SetPlayerSkin(playerid, LSFDSkins[0]);
		    SetPlayerCameraPos(playerid, 253.6102, 75.5207, 1003.6406 + 0.5);
		    SetPlayerCameraLookAt(playerid, 257.9518, 74.2407, 1003.6406);
            TextDrawShowForPlayer(playerid, TD_SC_BoxNext);
			TextDrawShowForPlayer(playerid, TD_SC_BoxBack);
			TextDrawShowForPlayer(playerid, TD_SC_Next);
			TextDrawShowForPlayer(playerid, TD_SC_Back);
			TextDrawShowForPlayer(playerid, TD_SC_Cancel);
			TextDrawShowForPlayer(playerid, TD_SC_BoxCancel);
			TextDrawShowForPlayer(playerid, TD_SC_Select);
			TextDrawShowForPlayer(playerid, TD_SC_BoxBuy);
			SelectTextDraw(playerid, 0xFF9900FF);
			SendClientMessage(playerid, COLOR_WHITE, "点击按钮来进行操作. 如果你的指针消失了, 你可以使用{777777}Enter{FFFFFF}再次激活!");
            PlayerInfo[playerid][pSkin] = LSFDSkins[0];
            // UpdatePlayerHandcuffs(playerid);
			SetPVarInt(playerid, "LSFDChoose", 1);
			FreezePlayer(playerid);
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
			fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 23: {
            new skin = GetPVarInt(playerid, "LSFDDuty");
            PlayerInfo[playerid][pSkin] = skin;
            SetPlayerSkin(playerid, skin);
            // UpdatePlayerHandcuffs(playerid);
            SetPlayerInterior(playerid, fade[playerid][fInt]);
			SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
			SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
			SetCameraBehindPlayer(playerid);
			CancelSelectTextDraw(playerid);
			UnfreezePlayer(playerid);
            SetPVarInt(playerid, "LSFDChoose", 0);
            SetPVarInt(playerid, "LSFDDuty", 0);
            TextDrawHideForPlayer(playerid, TD_SC_BoxNext);
			TextDrawHideForPlayer(playerid, TD_SC_BoxBack);
			TextDrawHideForPlayer(playerid, TD_SC_Next);
			TextDrawHideForPlayer(playerid, TD_SC_Back);
			TextDrawHideForPlayer(playerid, TD_SC_Cancel);
			TextDrawHideForPlayer(playerid, TD_SC_BoxCancel);
			TextDrawHideForPlayer(playerid, TD_SC_Select);
			TextDrawHideForPlayer(playerid, TD_SC_BoxBuy);
			fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 24: {
		    new msg[75];
        	format(msg, sizeof(msg), "** %s 打开%s储备箱并取出制服.", GetNameWithSpace(playerid, 1), HisHer(playerid));
			ProxDetector(12, playerid, msg, COLOR_PINK);
			SetPlayerInterior(playerid, fade[playerid][fInt]);
			SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
			SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
			SetCameraBehindPlayer(playerid);
			CancelSelectTextDraw(playerid);
			UnfreezePlayer(playerid);
			UpdatePlayerColor(playerid);
			SetPVarInt(playerid, "LSFDChoose", 0);
			TextDrawHideForPlayer(playerid, TD_SC_BoxNext);
			TextDrawHideForPlayer(playerid, TD_SC_BoxBack);
			TextDrawHideForPlayer(playerid, TD_SC_Next);
			TextDrawHideForPlayer(playerid, TD_SC_Back);
			TextDrawHideForPlayer(playerid, TD_SC_Cancel);
			TextDrawHideForPlayer(playerid, TD_SC_BoxCancel);
			TextDrawHideForPlayer(playerid, TD_SC_Select);
			TextDrawHideForPlayer(playerid, TD_SC_BoxBuy);
			fade[playerid][fID] = 0;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
		}
		case 26: {
			new actplayer[128];
		    TextDrawHideForPlayer(playerid, TD_CC_Box);
			TextDrawHideForPlayer(playerid, TD_CC_Headline);
			TextDrawHideForPlayer(playerid, TD_CC_Info);
			TextDrawHideForPlayer(playerid, TD_CC_GenderLeft);
			TextDrawHideForPlayer(playerid, TD_CC_GenderTitle);
			TextDrawHideForPlayer(playerid, TD_CC_OutfitRight);
			TextDrawHideForPlayer(playerid, TD_CC_OutfitTitle);
			TextDrawHideForPlayer(playerid, TD_CC_OutfitLeft);
			TextDrawHideForPlayer(playerid, TD_CC_AgeRight);
			TextDrawHideForPlayer(playerid, TD_CC_AgeTitle);
			TextDrawHideForPlayer(playerid, TD_CC_AgeLeft);
			TextDrawHideForPlayer(playerid, TD_CC_ArrivalLeft);
			TextDrawHideForPlayer(playerid, TD_CC_GenderRight);
			TextDrawHideForPlayer(playerid, TD_CC_ArrivalTitle);
			TextDrawHideForPlayer(playerid, TD_CC_ArrivalRight);
			TextDrawHideForPlayer(playerid, TD_CC_Spawn);
			TextDrawHideForPlayer(playerid, TD_CC_SpawnBox);
			PlayerTextDrawHide(playerid, TD_CC_GenderValue);
			PlayerTextDrawHide(playerid, TD_CC_AgeValue);
			PlayerTextDrawHide(playerid, TD_CC_ArrivalValue);
			PlayerTextDrawHide(playerid, TD_CC_OutfitValue);
			SetCameraBehindPlayer(playerid);
			CancelSelectTextDraw(playerid);
			UnfreezePlayer(playerid);
			SetPVarInt(playerid, "Login", 1);
			SetPVarInt(playerid, "LoadData", 1);
			SetPVarInt(playerid, "Spawned", 1);
			LastUpdate[playerid] = gettime();
			Paused[playerid] = 0;
			PlayerInfo[playerid][pHunger]=1000;
			PlayerInfo[playerid][pThirst]=1000;
			afkCounter[playerid] = 0;
			UpdatePlayerColor(playerid);
			SetPVarInt(playerid, "CCActive", 0);
			SetPlayerInterior(playerid, fade[playerid][fInt]);
			SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
			SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
			SetPlayerFacingAngle(playerid, fade[playerid][fAngle]);
			SetCameraBehindPlayer(playerid);
			if(actToggle == 0)
			{
				new query[3000], IP[16], actname[MAX_PLAYER_NAME];
    			GetPlayerIp(playerid, IP, sizeof(IP));
				GetPlayerName(playerid, actname, sizeof(actname));
    			SendClientMessage(playerid, COLOR_LIGHTRED, "欢迎来到 Los Angeles Roleplay, 感谢您的注册! 您的账号已经被系统自动激活.");
    			SendClientMessage(playerid, COLOR_LIGHTRED, "您需要重新登录以便服务器读取数据.");
    			SendClientMessage(playerid, COLOR_LIGHTRED, "当您重新登录上线后, 您将体验到最真实的中国角色扮演服务器!");
				format(actplayer, sizeof(actplayer), "服务器提示: %s 完成了角色创建. (由于系统默认了取消激活审核, 对方已被自动激活.)", GetNameWithSpace(playerid));
				SendMessageToAdmins(actplayer);
				mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_registrations` (`account`, `ip`, `approver`, `date`) VALUES ('%e', '%e', 'SYSTEM', NOW())", GetNameWithSpace(playerid), IP);
				mysql_function_query(sqlHandle, query, false, "", "");
		    	PlayerInfo[playerid][pActivated] = 1;
				printf("[N:%s I:%d] WHEN actToggle = 0, RETURN The player has been activated automatically by SYSTEM", actname, playerid);
				KickDelay(playerid);
				fade[playerid][fID] = 0;
			    FadeScreen(playerid, 0, 0, 0, 255, 250);
			    SaveData(playerid);
			} else {
   				SendClientMessage(playerid, COLOR_LIGHTRED, "欢迎来到 Los Angeles Roleplay, 感谢您的注册! 您的账号还没有被激活..");
   				SendClientMessage(playerid, COLOR_LIGHTRED, "您需要在 www.lifengame.com 发布账号激活申请之后才可以进行完整的游戏体验.");
   				SendClientMessage(playerid, COLOR_LIGHTRED, "当您发布之后, 工作人员会第一时间查看您的申请. 祝您好运!");
				format(actplayer, sizeof(actplayer), "服务器提示: %s 完成了角色创建, 请在社区查看对方的申请.. (使用 /approveplayer %s 来激活帐户)", GetNameWithSpace(playerid), PlayerInfo[playerid][pName]);
				SendMessageToAdmins(actplayer);
				printf("[N:%s I:%d] WHEN actToggle = 1, RETURN The player has been activated manually by OTHER ADMINS", PlayerInfo[playerid][pName], playerid);
				KickDelay(playerid);
				fade[playerid][fID] = 0;
			    FadeScreen(playerid, 0, 0, 0, 255, 250);
			    SaveData(playerid);
			}
		}
		case 27: {
		        new 
		        type = GetPVarInt(playerid, "xb_furnituretype"),
		        id = GetPVarInt(playerid, "xb_furnitureid"),
		        obj;
			
		    SetPlayerPos(playerid, fade[playerid][fadeX], fade[playerid][fadeY], fade[playerid][fadeZ]);
		    SetPlayerInterior(playerid, fade[playerid][fInt]);
		    SetPlayerVirtualWorld(playerid, fade[playerid][fVW]);
		    SetPlayerCameraPos(playerid, 2296.1423, 1302.9990, 12.3912);
            SetPlayerCameraLookAt(playerid, 2296.1484, 1301.9999, 12.1012);// txd
		    obj=XB_SetFurniture(playerid,type,id);
			SetPVarInt(playerid, "xb_furnitureobj", obj);
			SendClientMessage(playerid, COLOR_WHITE, "请点击箭头选择操作. 如果你的指针消失, 你可以按下{777777}Enter{FFFFFF}来激活!");
			FreezePlayer(playerid);
			fade[playerid][fID] = 1;
            FadeScreen(playerid, 0, 0, 0, 255, 250);
           	SelectTextDraw(playerid, 0xFF9900FF);
		}
	}
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)//
{
    if(clickedid == Lottery[10])
	{
	    for(new i = 2; i >= 0; i--)
	    {
	        if(PlayerInfo[playerid][PNumbers][i] != 0)
	        {
	            PlayerInfo[playerid][PNumbers][i] = 0;
				return UpdateLotteryNumbers(playerid);
	        }
	    }
	    return SendClientMessage(playerid, 0xFF6347FF, "无法撤销, 尝试点击[x]取消或者使用新号.");
	}
    if(clickedid == Lottery[10])
	{
	    for(new i = 2; i >= 0; i--)
	    {
	        if(PlayerInfo[playerid][PNumbers][i] != 0)
	        {
	            PlayerInfo[playerid][PNumbers][i] = 0;
				return UpdateLotteryNumbers(playerid);
	        }
	    }
	    return SendClientMessage(playerid, 0xFF6347FF, "无法撤销, 尝试点击[x]取消或者使用新号.");
	}
	if(clickedid == Lottery[11])
	{
		new chances = 0;
		for(new i = 0; i <= 2; i++)
		{
		    for(new z = 0; z <= 2; z++)
		    {
		        if(PlayerInfo[playerid][PNumbers][i] == Lotterynumbers[z])
				{
					chances++;
				}
		    }
		}
		if(chances == 3) // winning
		{
		    new str[100], strr[300], prize = random(5);
		    SendClientMessageToAll(0x00D900FF, "[广告] 我们产生了一名彩票赢家, 今天的博彩已结束!");
			strcat(strr, "{ffffff}恭喜您, 你赢得了当天的 {CC9900}彩票{ffffff},\n");
			format(str, 100, "你赢得了 {CC9900}${80A05C}%d{ffffff}!",prize*20000);
			strcat(strr, str);
			ShowPlayerDialog(playerid, DIALOG_LOTTERY2, DIALOG_STYLE_MSGBOX, "博彩信息", strr, "关闭", "");
		    GivePlayerMoneyEx(playerid, prize*20000);
		}
		else
		{
            PlayerInfo[playerid][pMayLotto] = false;
            LotteryTimerVar[playerid] = SetTimerEx("LotteryAttempt", 600000, false, "d", playerid);
		    HideLottery(playerid);
			return SendClientMessage(playerid, 0x80A05CFF, "员工: {ffffff} 我们很抱歉, 您没有赢得奖励, 请下次再试.");
		}
	    return SendClientMessage(playerid, 0xFF6347FF, "你需要选号!");
	}
	if(clickedid == Lottery[28]) return HideLottery(playerid);
	for(new i = 1; i < 10; i++)
	{
		if(clickedid == Lottery[i])
		{
            if(PlayerInfo[playerid][PNumbers][2] != 0) return SendClientMessage(playerid, 0xFF6347FF, "你已经选了3个号码, 你可以撤销或者确定选择.");
			for(new oo = 0; oo <= 2; oo++)
			{
				if(PlayerInfo[playerid][PNumbers][oo] == 0)
				{
					PlayerInfo[playerid][PNumbers][oo] = i;
					UpdateLotteryNumbers(playerid);
					break;
				}
			}
		    return 1;
		}
	}
    if(_:clickedid != INVALID_TEXT_DRAW) {
        if(GetPVarInt(playerid, "CCActive") != 0) {
            if(clickedid == TD_CC_GenderLeft || clickedid == TD_CC_GenderRight) {
                new gender = GetPVarInt(playerid, "CCGender"),
                    info[10];
                    
                if(gender == 1) {
                    PlayerTextDrawSetString(playerid, TD_CC_GenderValue, "Female");
					SetPVarInt(playerid, "CCGender", 2);
					PlayerTextDrawShow(playerid, TD_CC_GenderValue);
					format(info, sizeof(info), "%i", FemaleSkins[0]);
					PlayerTextDrawSetString(playerid, TD_CC_OutfitValue, info);
					SetPVarInt(playerid, "CCOutfit", 0);
					PlayerTextDrawShow(playerid, TD_CC_OutfitValue);
					SetPlayerSkin(playerid, FemaleSkins[0]);
                } else {
                    PlayerTextDrawSetString(playerid, TD_CC_GenderValue, "Male");
					SetPVarInt(playerid, "CCGender", 1);
					PlayerTextDrawShow(playerid, TD_CC_GenderValue);
					format(info, sizeof(info), "%i", MaleSkins[0]);
					PlayerTextDrawSetString(playerid, TD_CC_OutfitValue, info);
					SetPVarInt(playerid, "CCOutfit", 0);
					PlayerTextDrawShow(playerid, TD_CC_OutfitValue);
					SetPlayerSkin(playerid, MaleSkins[0]);
                }
            } else if(clickedid == TD_CC_AgeLeft) {
                new age = GetPVarInt(playerid, "CCAge"),
                    info[10];
                    
                if(age <= 15) {
                    PlayerTextDrawSetString(playerid, TD_CC_AgeValue, "99");
					SetPVarInt(playerid, "CCAge", 99);
					PlayerTextDrawShow(playerid, TD_CC_AgeValue);
                } else {
					format(info, sizeof(info), "%i", age - 1);
                    PlayerTextDrawSetString(playerid, TD_CC_AgeValue, info);
					SetPVarInt(playerid, "CCAge", age - 1);
					PlayerTextDrawShow(playerid, TD_CC_AgeValue);
                }
            } else if(clickedid == TD_CC_AgeRight) {
                new age = GetPVarInt(playerid, "CCAge"),
                    info[10];

                if(age >= 99) {
                    PlayerTextDrawSetString(playerid, TD_CC_AgeValue, "15");
					SetPVarInt(playerid, "CCAge", 15);
					PlayerTextDrawShow(playerid, TD_CC_AgeValue);
                } else {
					format(info, sizeof(info), "%i", age + 1);
                    PlayerTextDrawSetString(playerid, TD_CC_AgeValue, info);
					SetPVarInt(playerid, "CCAge", age + 1);
					PlayerTextDrawShow(playerid, TD_CC_AgeValue);
                }
            } else if(clickedid == TD_CC_OutfitRight) {
				new skin = GetPVarInt(playerid, "CCOutfit"),
				    gender = GetPVarInt(playerid, "CCGender"),
					info[10];
				    
				if(gender == 1) {
	    			if(sizeof(MaleSkins) - 1 > skin) {
						skin++;
					} else {
						skin = 0;
					}

					SetPlayerSkin(playerid, MaleSkins[skin]);
					format(info, sizeof(info), "%i", MaleSkins[skin]);
					PlayerTextDrawSetString(playerid, TD_CC_OutfitValue, info);
					PlayerTextDrawShow(playerid, TD_CC_OutfitValue);
			    } else {
					if(sizeof(FemaleSkins) - 1 > skin) {
						skin++;
					} else {
						skin = 0;
					}

					SetPlayerSkin(playerid, FemaleSkins[skin]);
					format(info, sizeof(info), "%i", FemaleSkins[skin]);
					PlayerTextDrawSetString(playerid, TD_CC_OutfitValue, info);
					PlayerTextDrawShow(playerid, TD_CC_OutfitValue);
			    }
			    
			    SetPVarInt(playerid, "CCOutfit", skin);
			} else if(clickedid == TD_CC_OutfitLeft) {
			    new skin = GetPVarInt(playerid, "CCOutfit"),
				    gender = GetPVarInt(playerid, "CCGender"),
				    info[10];
				    
			    if(gender == 1) {
					if(skin > 0) {
						skin--;
					} else {
					    skin = sizeof(MaleSkins) - 1;
					}

					SetPlayerSkin(playerid, MaleSkins[skin]);
					format(info, sizeof(info), "%i", MaleSkins[skin]);
					PlayerTextDrawSetString(playerid, TD_CC_OutfitValue, info);
					PlayerTextDrawShow(playerid, TD_CC_OutfitValue);
			    } else {
					if(skin > 0) {
						skin--;
					} else {
						skin = sizeof(FemaleSkins) - 1;
					}

					SetPlayerSkin(playerid, FemaleSkins[skin]);
					format(info, sizeof(info), "%i", FemaleSkins[skin]);
					PlayerTextDrawSetString(playerid, TD_CC_OutfitValue, info);
					PlayerTextDrawShow(playerid, TD_CC_OutfitValue);
			    }
			    
			    SetPVarInt(playerid, "CCOutfit", skin);
			} else if(clickedid == TD_CC_ArrivalLeft) {
			    new spawn = GetPVarInt(playerid, "CCSpawn"),
			        info[15];
			        
				if(spawn > 0) {
					spawn--;
				} else {
				    spawn = sizeof(spawnLocations) - 1;
				}

			    SetPVarInt(playerid, "CCSpawn", spawn);
			    format(info, sizeof(info), "%s", spawnLocations[spawn][spawnName]);
				PlayerTextDrawSetString(playerid, TD_CC_ArrivalValue, info);
				PlayerTextDrawShow(playerid, TD_CC_ArrivalValue);
			} else if(clickedid == TD_CC_ArrivalRight) {
			    new spawn = GetPVarInt(playerid, "CCSpawn"),
			        info[15];

				if(sizeof(spawnLocations) - 1 > spawn) {
					spawn++;
				} else {
				    spawn = 0;
				}

			    SetPVarInt(playerid, "CCSpawn", spawn);
			    format(info, sizeof(info), "%s", spawnLocations[spawn][spawnName]);
				PlayerTextDrawSetString(playerid, TD_CC_ArrivalValue, info);
				PlayerTextDrawShow(playerid, TD_CC_ArrivalValue);
			} else if(clickedid == TD_CC_Spawn) {
				new query[65],
			    	spawn = GetPVarInt(playerid, "CCSpawn");
			    	
			    PlayerInfo[playerid][pGender] = GetPVarInt(playerid, "CCGender");
			    PlayerInfo[playerid][pAge] = GetPVarInt(playerid, "CCAge");
			    if(PlayerInfo[playerid][pGender] == 1) {
					PlayerInfo[playerid][pSkin] = MaleSkins[GetPVarInt(playerid, "CCOutfit")];
				} else {
				    PlayerInfo[playerid][pSkin] = FemaleSkins[GetPVarInt(playerid, "CCOutfit")];
				}
				
				mysql_format(sqlHandle, query, sizeof(query), "SELECT `faction` FROM `samp_reserved_skins` WHERE `skin` = %i", PlayerInfo[playerid][pSkin]);
				mysql_function_query(sqlHandle, query, true, "OnCCCheckReservedSkins", "ii", playerid, spawn);
			}
        } else {
			if(GetPVarInt(playerid, "ClothingStoreActive") != 0 && clickedid == TD_SC_Next) {
			    new skin = GetPVarInt(playerid, "ClothingStoreSkin");
			    if(PlayerInfo[playerid][pGender] == 1) {
	    			if(sizeof(MaleSkins) - 1 > skin) {
						skin++;
					} else {
						skin = 0;
					}

					SetPlayerSkin(playerid, MaleSkins[skin]);
			    } else {
					if(sizeof(FemaleSkins) - 1 > skin) {
						skin++;
					} else {
						skin = 0;
					}

					SetPlayerSkin(playerid, FemaleSkins[skin]);
			    }

			    SetPVarInt(playerid, "ClothingStoreSkin", skin);
			} else if(GetPVarInt(playerid, "LAPDChoose") != 0 && clickedid == TD_SC_Next) {
			    new curSkin = GetPVarInt(playerid, "LAPDChoose") - 1;
				if(curSkin + 1 < sizeof(LAPDSkins)) {
					SetPlayerSkin(playerid, LAPDSkins[curSkin + 1]);
					SetPVarInt(playerid, "LAPDChoose", curSkin + 2);
					PlayerInfo[playerid][pSkin] = LAPDSkins[curSkin + 1];
					// UpdatePlayerHandcuffs(playerid);
				} else {
	                SetPlayerSkin(playerid, LAPDSkins[0]);
					SetPVarInt(playerid, "LAPDChoose", 1);
					PlayerInfo[playerid][pSkin] = LAPDSkins[0];
	                // UpdatePlayerHandcuffs(playerid);
				}
	        } else if(GetPVarInt(playerid, "LAPDChoose") != 0 && clickedid == TD_SC_Back) {
	            new curSkin = GetPVarInt(playerid, "LAPDChoose") - 1;
	            if(curSkin - 1 >= 0) {
	                SetPlayerSkin(playerid, LAPDSkins[curSkin - 1]);
					SetPVarInt(playerid, "LAPDChoose", curSkin);
					PlayerInfo[playerid][pSkin] = LAPDSkins[curSkin - 1];
					// UpdatePlayerHandcuffs(playerid);
				} else {
				    SetPlayerSkin(playerid, LAPDSkins[sizeof(LAPDSkins) - 1]);
					SetPVarInt(playerid, "LAPDChoose", sizeof(LAPDSkins));
					PlayerInfo[playerid][pSkin] = LAPDSkins[sizeof(LAPDSkins) - 1];
					// UpdatePlayerHandcuffs(playerid);
				}
	        } else if(GetPVarInt(playerid, "LAPDChoose") != 0 && clickedid == TD_SC_Select) {
	            SetPlayerPosEx(playerid, 18, 267.1146, 118.1507, 1004.6172, 0.0, GetPlayerInterior(playerid));
	        } else if(GetPVarInt(playerid, "LAPDChoose") != 0 && clickedid == TD_SC_Cancel) {
	            SetPlayerPosEx(playerid, 17, 267.1146, 118.1507, 1004.6172, 0.0, GetPlayerInterior(playerid));
			} else if(GetPVarInt(playerid, "SanChoose") != 0 && clickedid == TD_SC_Next) {
			    new curSkin = GetPVarInt(playerid, "SanChoose") - 1;
				if(curSkin + 1 < sizeof(SanSkins)) {
					SetPlayerSkin(playerid, SanSkins[curSkin + 1]);
					SetPVarInt(playerid, "SanChoose", curSkin + 2);
					PlayerInfo[playerid][pSkin] = SanSkins[curSkin + 1];
					// UpdatePlayerHandcuffs(playerid);
				} else {
	                SetPlayerSkin(playerid, SanSkins[0]);
					SetPVarInt(playerid, "SanChoose", 1);
					PlayerInfo[playerid][pSkin] = SanSkins[0];
	                // UpdatePlayerHandcuffs(playerid);
				}
	        } else if(GetPVarInt(playerid, "SanChoose") != 0 && clickedid == TD_SC_Back) {
	            new curSkin = GetPVarInt(playerid, "SanChoose") - 1;
	            if(curSkin - 1 >= 0) {
	                SetPlayerSkin(playerid, SanSkins[curSkin - 1]);
					SetPVarInt(playerid, "SanChoose", curSkin);
					PlayerInfo[playerid][pSkin] = SanSkins[curSkin - 1];
					// UpdatePlayerHandcuffs(playerid);
				} else {
				    SetPlayerSkin(playerid, SanSkins[sizeof(SanSkins) - 1]);
					SetPVarInt(playerid, "SanChoose", sizeof(SanSkins));
					PlayerInfo[playerid][pSkin] = SanSkins[sizeof(SanSkins) - 1];
					// UpdatePlayerHandcuffs(playerid);
				}
	        } else if(GetPVarInt(playerid, "SanChoose") != 0 && clickedid == TD_SC_Select) {
	            SetPlayerPosEx(playerid, 21, 345.4447, 164.7374, 1014.1875, 0.0, GetPlayerInterior(playerid));
	        } else if(GetPVarInt(playerid, "SanChoose") != 0 && clickedid == TD_SC_Cancel) {
	            SetPlayerPosEx(playerid, 20, 345.4447, 164.7374, 1014.1875, 0.0, GetPlayerInterior(playerid));
			} else if(GetPVarInt(playerid, "LSFDChoose") != 0 && clickedid == TD_SC_Next) {
			    new curSkin = GetPVarInt(playerid, "LSFDChoose") - 1;
				if(curSkin + 1 < sizeof(LSFDSkins)) {
					SetPlayerSkin(playerid, LSFDSkins[curSkin + 1]);
					SetPVarInt(playerid, "LSFDChoose", curSkin + 2);
					PlayerInfo[playerid][pSkin] = LSFDSkins[curSkin + 1];
					// UpdatePlayerHandcuffs(playerid);
				} else {
	                SetPlayerSkin(playerid, LSFDSkins[0]);
					SetPVarInt(playerid, "LSFDChoose", 1);
					PlayerInfo[playerid][pSkin] = LSFDSkins[0];
	                // UpdatePlayerHandcuffs(playerid);
				}
	        } else if(GetPVarInt(playerid, "LSFDChoose") != 0 && clickedid == TD_SC_Back) {
	            new curSkin = GetPVarInt(playerid, "LSFDChoose") - 1;
	            if(curSkin - 1 >= 0) {
	                SetPlayerSkin(playerid, LSFDSkins[curSkin - 1]);
					SetPVarInt(playerid, "LSFDChoose", curSkin);
					PlayerInfo[playerid][pSkin] = LSFDSkins[curSkin - 1];
					// UpdatePlayerHandcuffs(playerid);
				} else {
				    SetPlayerSkin(playerid, LSFDSkins[sizeof(LSFDSkins) - 1]);
					SetPVarInt(playerid, "LSFDChoose", sizeof(LSFDSkins));
					PlayerInfo[playerid][pSkin] = LSFDSkins[sizeof(LSFDSkins) - 1];
					// UpdatePlayerHandcuffs(playerid);
				}
	        } else if(GetPVarInt(playerid, "LSFDChoose") != 0 && clickedid == TD_SC_Select) {
	            SetPlayerPosEx(playerid, 24, 254.2592, 78.3316, 1003.6406, 0.0, GetPlayerInterior(playerid));
	        } else if(GetPVarInt(playerid, "LSFDChoose") != 0 && clickedid == TD_SC_Cancel) {
	            SetPlayerPosEx(playerid, 23, 254.2592, 78.3316, 1003.6406, 0.0, GetPlayerInterior(playerid));
			} else if(GetPVarInt(playerid, "ClothingStoreActive") != 0 && clickedid == TD_SC_Back) {
			    new skin = GetPVarInt(playerid, "ClothingStoreSkin");
			    if(PlayerInfo[playerid][pGender] == 1) {
					if(skin > 0) {
						skin--;
					} else {
					    skin = sizeof(MaleSkins) - 1;
					}

					SetPlayerSkin(playerid, MaleSkins[skin]);
			    } else {
					if(skin > 0) {
						skin--;
					} else {
						skin = sizeof(FemaleSkins) - 1;
					}

					SetPlayerSkin(playerid, FemaleSkins[skin]);
			    }

			    SetPVarInt(playerid, "ClothingStoreSkin", skin);
			} else if(GetPVarInt(playerid, "ClothingStoreActive") != 0 && clickedid == TD_SC_Buy) {
			    new skin = GetPlayerSkin(playerid);
			    if(skinData[playerid][skin] == 0) {
			        new query[65];
					mysql_format(sqlHandle, query, sizeof(query), "SELECT `faction` FROM `samp_reserved_skins` WHERE `skin` = %i", skin);
					mysql_function_query(sqlHandle, query, true, "OnPlayerChecksReservedSkins", "iii", playerid, skin, 0);
				} else {
					for(new i = 0; i != MAX_HOUSES; i++) {
						if(strcmp(HouseInfo[i][hOwner], PlayerInfo[playerid][pName]) != 0 && !isnull(HouseInfo[i][hOwner])) {
							return SendClientMessage(playerid, COLOR_WHITE, "您选择的皮肤是当前您角色已经在使用的, 请选择其他皮肤.");
						}
					}

					new query[65];
					mysql_format(sqlHandle, query, sizeof(query), "SELECT `faction` FROM `samp_reserved_skins` WHERE `skin` = %i", skin);
					mysql_function_query(sqlHandle, query, true, "OnPlayerChecksReservedSkins", "iii", playerid, skin, 1);
				}
			} else if(GetPVarInt(playerid, "ClothingStoreActive") != 0 && clickedid == TD_SC_Cancel) {
			    new vw = GetPVarInt(playerid, "ClothingStoreVW");
		  		SetPlayerPosEx(playerid, 5, businessData[BusinessInfo[vw][bInt]][intX], businessData[BusinessInfo[vw][bInt]][intY], businessData[BusinessInfo[vw][bInt]][intZ], businessData[BusinessInfo[vw][bInt]][intA], businessData[BusinessInfo[vw][bInt]][intVal], vw);
				SetPVarInt(playerid, "ClothingStoreActive", 0);
		  		SetPVarInt(playerid, "ClothingStoreSkin", 0);
		  		TextDrawHideForPlayer(playerid, TD_SC_BoxNext);
		  		TextDrawHideForPlayer(playerid, TD_SC_BoxBack);
		  		TextDrawHideForPlayer(playerid, TD_SC_Next);
		  		TextDrawHideForPlayer(playerid, TD_SC_Back);
		  		TextDrawHideForPlayer(playerid, TD_SC_Cancel);
				TextDrawHideForPlayer(playerid, TD_SC_BoxCancel);
				TextDrawHideForPlayer(playerid, TD_SC_Buy);
				TextDrawHideForPlayer(playerid, TD_SC_BoxBuy);
		  		CancelSelectTextDraw(playerid);
			} else if(GetPVarInt(playerid, "WardrobeActive") != 0 && clickedid == TD_SC_Next) {
			    new skin = GetPVarInt(playerid, "WardrobeSkin");
			    for(new i = skin + 1; i != 300; i++) {
			        if(skinData[playerid][i] != 0) {
						SetPlayerSkin(playerid, i);
						SetPVarInt(playerid, "WardrobeSkin", i);
						return 1;
					}
				}

				for(new s = 0; s != 300; s++) {
				    if(skinData[playerid][s] != 0) {
						SetPlayerSkin(playerid, s);
						SetPVarInt(playerid, "WardrobeSkin", s);
						return 1;
					}
				}
			} else if(GetPVarInt(playerid, "WardrobeActive") != 0 && clickedid == TD_SC_Back) {
			    new skin = GetPVarInt(playerid, "WardrobeSkin");
			    for(new i = skin - 1; i != 0; i--) {
			        if(skinData[playerid][i] != 0) {
						SetPlayerSkin(playerid, i);
						SetPVarInt(playerid, "WardrobeSkin", i);
						return 1;
					}
				}

				for(new s = 299; s != 0; s--) {
				    if(skinData[playerid][s] != 0) {
						SetPlayerSkin(playerid, s);
						SetPVarInt(playerid, "WardrobeSkin", s);
						return 1;
					}
				}
			} else if(GetPVarInt(playerid, "WardrobeActive") != 0 && clickedid == TD_SC_Cancel) {
			    new vw = GetPVarInt(playerid, "WardrobeVW");
	            SetPlayerPosEx(playerid, 5, houseData[HouseInfo[vw][hInt]][intX], houseData[HouseInfo[vw][hInt]][intY], houseData[HouseInfo[vw][hInt]][intZ], houseData[HouseInfo[vw][hInt]][intA], houseData[HouseInfo[vw][hInt]][intVal], vw);
				SetPVarInt(playerid, "WardrobeActive", 0);
		  		SetPVarInt(playerid, "WardrobeSkin", 0);
	            TextDrawHideForPlayer(playerid, TD_SC_BoxNext);
		  		TextDrawHideForPlayer(playerid, TD_SC_BoxBack);
		  		TextDrawHideForPlayer(playerid, TD_SC_Next);
		  		TextDrawHideForPlayer(playerid, TD_SC_Back);
		  		TextDrawHideForPlayer(playerid, TD_SC_Cancel);
				TextDrawHideForPlayer(playerid, TD_SC_BoxCancel);
				TextDrawHideForPlayer(playerid, TD_SC_Select);
				TextDrawHideForPlayer(playerid, TD_SC_BoxBuy);
				CancelSelectTextDraw(playerid);
			} else if(GetPVarInt(playerid, "WardrobeActive") != 0 && clickedid == TD_SC_Select) {
			    new query[100],
			        skin = GetPlayerSkin(playerid);

				mysql_format(sqlHandle, query, sizeof(query), "SELECT `faction` FROM `samp_reserved_skins` WHERE `skin` = %i", skin);
				mysql_function_query(sqlHandle, query, true, "OnCheckReservedSkinsWardrobe", "ii", playerid, skin);
			} else if(GetPVarInt(playerid, "DealerVehicleID") != 0 && clickedid == TD_D_VehicleLeft) {
				new v = GetPreviousDealerVehicle(GetPVarInt(playerid, "DealerVehicle"));
				if(v != -1) {
				    new tdMsg[25],
				        vehicle;

				    DestroyVehicle(GetPVarInt(playerid, "DealerVehicleID"));
				    vehicle = CreateVehicle(400 + v, -1952.3647, 263.0931, 40.7523, 323.1245, GetPVarInt(playerid, "DealerColor1"), GetPVarInt(playerid, "DealerColor2"), -1);
				    SetVehicleVirtualWorld(vehicle, GetPlayerVirtualWorld(playerid));
				    SetVehicleParamsEx(vehicle, 0, 1, 0, 0, 0, 0, 0);
				    SetPVarInt(playerid, "DealerVehicle", v + 1);
					SetPVarInt(playerid, "DealerVehicleID", vehicle);
					PlayerTextDrawHide(playerid, TD_D_PriceValue);
					PlayerTextDrawHide(playerid, TD_D_TankValue);
					PlayerTextDrawHide(playerid, TD_D_CargoValue);
					PlayerTextDrawHide(playerid, TD_D_NameValue);
					PlayerTextDrawHide(playerid, TD_D_SeatsValue);

					format(tdMsg, sizeof(tdMsg), "$%i", vehicleData[v][typePrice]);
				    PlayerTextDrawSetString(playerid, TD_D_PriceValue, tdMsg);
				    PlayerTextDrawSetString(playerid, TD_D_NameValue, vehicleData[v][typeName]);
				    format(tdMsg, sizeof(tdMsg), "%i", vehicleData[v][seats]);
				    PlayerTextDrawSetString(playerid, TD_D_SeatsValue, tdMsg);
				    if(vehicleData[v][tank] != 0) {
					    format(tdMsg, sizeof(tdMsg), "%i liters", vehicleData[v][tank]);
					    PlayerTextDrawSetString(playerid, TD_D_TankValue, tdMsg);
					} else {
					    PlayerTextDrawSetString(playerid, TD_D_TankValue, "No Tank");
					}

				    if(vehicleData[v][volume] != 0) {
						format(tdMsg, sizeof(tdMsg), "%i liters", vehicleData[v][volume]);
				    	PlayerTextDrawSetString(playerid, TD_D_CargoValue, tdMsg);
				    } else {
				        PlayerTextDrawSetString(playerid, TD_D_CargoValue, "No Trunk");
				    }

					PlayerTextDrawShow(playerid, TD_D_PriceValue);
					PlayerTextDrawShow(playerid, TD_D_TankValue);
					PlayerTextDrawShow(playerid, TD_D_CargoValue);
					PlayerTextDrawShow(playerid, TD_D_SeatsValue);
					PlayerTextDrawShow(playerid, TD_D_NameValue);
				}
			} else if(GetPVarInt(playerid, "DealerVehicleID") != 0 && clickedid == TD_D_VehicleRight) {
			    new v = GetNextDealerVehicle(GetPVarInt(playerid, "DealerVehicle"));
				if(v != -1) {
				    new tdMsg[25],
				        vehicle;

				    DestroyVehicle(GetPVarInt(playerid, "DealerVehicleID"));
				    vehicle = CreateVehicle(400 + v, -1952.3647, 263.0931, 40.7523, 323.1245, GetPVarInt(playerid, "DealerColor1"), GetPVarInt(playerid, "DealerColor2"), -1);
				    SetVehicleVirtualWorld(vehicle, GetPlayerVirtualWorld(playerid));
				    SetVehicleParamsEx(vehicle, 0, 1, 0, 0, 0, 0, 0);
				    SetPVarInt(playerid, "DealerVehicle", v + 1);
					SetPVarInt(playerid, "DealerVehicleID", vehicle);
					PlayerTextDrawHide(playerid, TD_D_PriceValue);
					PlayerTextDrawHide(playerid, TD_D_TankValue);
					PlayerTextDrawHide(playerid, TD_D_CargoValue);
					PlayerTextDrawHide(playerid, TD_D_SeatsValue);
					PlayerTextDrawHide(playerid, TD_D_NameValue);

					format(tdMsg, sizeof(tdMsg), "$%i", vehicleData[v][typePrice]);
				    PlayerTextDrawSetString(playerid, TD_D_PriceValue, tdMsg);
				    PlayerTextDrawSetString(playerid, TD_D_NameValue, vehicleData[v][typeName]);
				    format(tdMsg, sizeof(tdMsg), "%i", vehicleData[v][seats]);
				    PlayerTextDrawSetString(playerid, TD_D_SeatsValue, tdMsg);
				    if(vehicleData[v][tank] != 0) {
					    format(tdMsg, sizeof(tdMsg), "%i liters", vehicleData[v][tank]);
					    PlayerTextDrawSetString(playerid, TD_D_TankValue, tdMsg);
					} else {
					    PlayerTextDrawSetString(playerid, TD_D_TankValue, "No Tank");
					}

				    if(vehicleData[v][volume] != 0) {
						format(tdMsg, sizeof(tdMsg), "%i liters", vehicleData[v][volume]);
				    	PlayerTextDrawSetString(playerid, TD_D_CargoValue, tdMsg);
				    } else {
				        PlayerTextDrawSetString(playerid, TD_D_CargoValue, "No Trunk");
				    }

					PlayerTextDrawShow(playerid, TD_D_PriceValue);
					PlayerTextDrawShow(playerid, TD_D_TankValue);
					PlayerTextDrawShow(playerid, TD_D_CargoValue);
					PlayerTextDrawShow(playerid, TD_D_NameValue);
					PlayerTextDrawShow(playerid, TD_D_SeatsValue);
				}
			}else if(clickedid == TD_F_Left){
				new type=GetPVarInt(playerid,"xb_furnituretype");
				new id=GetPVarInt(playerid,"xb_furnitureid");
				new fmax=XB_GetFurnitures(type);
				if(id==0)id=fmax-1;
				else id--;
			
				new obj;
				obj=GetPVarInt(playerid,"xb_furnitureobj");
				DestroyPlayerObject(playerid,obj);
				obj=XB_SetFurniture(playerid,type,id);
			    SetPVarInt(playerid, "xb_furnitureobj", obj);
			
			}else if(clickedid == TD_F_Right){
				new type=GetPVarInt(playerid,"xb_furnituretype");
				new id=GetPVarInt(playerid,"xb_furnitureid");
				new fmax=XB_GetFurnitures(type);
				if(id==fmax-1)id=0;
				else id++;
				SetPVarInt(playerid,"xb_furnitureid",id);
				new obj;
				obj=GetPVarInt(playerid,"xb_furnitureobj");
				DestroyPlayerObject(playerid,obj);
				obj=XB_SetFurniture(playerid,type,id);
			    SetPVarInt(playerid, "xb_furnitureobj", obj);
			}else if(clickedid == TD_F_TypeLeft){
				new type=GetPVarInt(playerid,"xb_furnituretype");
				if(type==1)type=21;
				else type--;
				SetPVarInt(playerid,"xb_furnituretype",type);
			
				new obj;
				obj=GetPVarInt(playerid,"xb_furnitureobj");
				DestroyPlayerObject(playerid,obj);
				obj=XB_SetFurniture(playerid,type,0);
			    SetPVarInt(playerid, "xb_furnitureobj", obj);

			}else if(clickedid == TD_F_TypeRight){
				new type=GetPVarInt(playerid,"xb_furnituretype");
				if(type==21)type=1;
				else type++;
				SetPVarInt(playerid,"xb_furnituretype",type);
			
				new obj;
				obj=GetPVarInt(playerid,"xb_furnitureobj");
				DestroyPlayerObject(playerid,obj);
				obj=XB_SetFurniture(playerid,type,0);
			    SetPVarInt(playerid, "xb_furnitureobj", obj);

			}else if(GetPVarInt(playerid, "DealerVehicleID") != 0 && clickedid == TD_D_Color1Left) {
				new color = GetPVarInt(playerid, "DealerColor1");
				if(color != 0) {
					SetPVarInt(playerid, "DealerColor1", color - 1);
					ChangeVehicleColor(GetPVarInt(playerid, "DealerVehicleID"), color - 1, GetPVarInt(playerid, "DealerColor2"));
				}
			} else if(GetPVarInt(playerid, "DealerVehicleID") != 0 && clickedid == TD_D_Color1Right) {
				new color = GetPVarInt(playerid, "DealerColor1");
				if(color != 255) {
					SetPVarInt(playerid, "DealerColor1", color + 1);
					ChangeVehicleColor(GetPVarInt(playerid, "DealerVehicleID"), color + 1, GetPVarInt(playerid, "DealerColor2"));
				}
			} else if(GetPVarInt(playerid, "DealerVehicleID") != 0 && clickedid == TD_D_Color2Left) {
				new color = GetPVarInt(playerid, "DealerColor2");
				if(color != 0) {
					SetPVarInt(playerid, "DealerColor2", color - 1);
					ChangeVehicleColor(GetPVarInt(playerid, "DealerVehicleID"), GetPVarInt(playerid, "DealerColor1"), color - 1);
				}
			} else if(GetPVarInt(playerid, "DealerVehicleID") != 0 && clickedid == TD_D_Color2Right) {
				new color = GetPVarInt(playerid, "DealerColor2");
				if(color != 255) {
					SetPVarInt(playerid, "DealerColor2", color + 1);
					ChangeVehicleColor(GetPVarInt(playerid, "DealerVehicleID"), GetPVarInt(playerid, "DealerColor1"), color + 1);
				}
			} else if(GetPVarInt(playerid, "DealerVehicleID") != 0 && clickedid == TD_D_Buy) {
				if(PlayerInfo[playerid][pMoney] >= vehicleData[GetPVarInt(playerid, "DealerVehicle") - 1][typePrice]) {
				    ShowPlayerDialog(playerid, DIALOG_DEALERSHIP_BUY, DIALOG_STYLE_MSGBOX, "{FF9900}车辆经销商", "你确定要购买该车吗?", "确定", "取消");
			    } else {
			        SendClientMessage(playerid, COLOR_GREY, "你没有足够的钱购买该车.");
			    }
			} else if(GetPVarInt(playerid, "DealerVehicleID") != 0 && clickedid == TD_D_Leave) {
				dealerExit[playerid] = 1;
				if(GetPVarInt(playerid, "DealershipLoc") == 1) {
			  		SetPlayerPosEx(playerid, 5, 542.2992, -1292.1060, 17.2422);
				} else {
			  		SetPlayerPosEx(playerid, 5, 2131.7964, -1150.2208, 24.1810);
				}

				SetPVarInt(playerid, "DealershipLoc", 0);
			} else if(clickedid == TD_F_Leave) {
				new bizid=GetPVarInt(playerid,"xb_businessid");
			  		SetPlayerPosEx(playerid, 5, BusinessInfo[bizid][bX],BusinessInfo[bizid][bY],BusinessInfo[bizid][bZ]);
			  		SetPVarInt(playerid, "MapInfoHide", 0);
			} else if(clickedid == TD_F_Buy) {
				new bizid=GetPVarInt(playerid,"xb_businessid");
				new woodneed=GetPVarInt(playerid,"xb_furniturewood");
				if(!XB_HaveFurniture(playerid))
				{
				if(woodneed<=BusinessInfo[bizid][bGoods])
				{
					new moneyneed=GetPVarInt(playerid,"xb_furnitureprice");
					if(PlayerInfo[playerid][pMoney]>=moneyneed)
					{

						GivePlayerMoneyEx(playerid,-moneyneed);
						GiveBusinessMoney(bizid, moneyneed);
						GiveBusinessGoods(bizid, -woodneed);
						new name[128],tname[128];
						GetPVarString(playerid,"xb_furniturename",name,128);
						GetPVarString(playerid,"xb_furnituretypename",tname,128);
						if(XB_SetPlayerFurniture(playerid,GetPVarInt(playerid,"xb_furnituremodel"),moneyneed,name,tname))
						{
						SetPlayerPosEx(playerid, 5, BusinessInfo[bizid][bX],BusinessInfo[bizid][bY],BusinessInfo[bizid][bZ]);
			  		    SetPVarInt(playerid, "MapInfoHide", 0);
			  		    SendClientMessage(playerid,COLOR_YELLOW2,"[提示]你购买了一件家具,按下“H”键显示菜单");
			  		    }
			  		    else
			  		    {
                            SendClientMessage(playerid,COLOR_YELLOW2,"[提示]家具数量到顶了,请联系开发团队");
                            SetPlayerPosEx(playerid, 5, BusinessInfo[bizid][bX],BusinessInfo[bizid][bY],BusinessInfo[bizid][bZ]);
			  		        SetPVarInt(playerid, "MapInfoHide", 0);
			  		    }
					}
					else
					{
                        SendClientMessage(playerid,-1,"你没有足够的钱");
					}
				}
				else
				{
                    SendClientMessage(playerid,-1,"该家具店没有足够的存货");
				}
				}
				else
				{
					SendClientMessage(playerid,-1,"你身上已经有一件家具了,无法再携带另外的家具");
				}

			  		
			} else if(GetPVarInt(playerid, "InModGarage") != 0 && GetPlayerVehicleSeat(playerid) == 0 && clickedid == TD_M_Leave) {
				new vehicle = GetPlayerVehicleID(playerid),
				    component;

	   			for(new i = 0; i != 14; i++) {
					component = GetVehicleComponentInSlot(vehicle, i);
				    if(component != 0) {
				        RemoveVehicleComponent(vehicle, component);
					}

					if(VehicleInfo[vehicle][vModifications][i] != 0) {
						AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][i]);
					}
				}

			    SetPlayerPosEx(playerid, 7, 1049.1636, -1033.7711, 31.7664, 89.4988);
			} else if(GetPVarInt(playerid, "InModGarage") != 0 && GetPlayerVehicleSeat(playerid) == 0 && clickedid == TD_M_Buy) {
				if(PlayerInfo[playerid][pMoney] >= addedModificationsPrice[playerid]) {
					new vehicle = GetPVarInt(playerid, "PrivateCar"),
					    query[310];

					for(new i = 0; i != 14; i++) {
						VehicleInfo[vehicle][vModifications][i] = addedModifications[playerid][i];
					}

					mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `spoiler` = %i, `hood` = %i, `roof` = %i, `sideskirt` = %i, `lamps` = %i, `nitro` = %i, \
																   `exhaust` = %i, `wheels` = %i, `stereo` = %i, `hydraulics` = %i, `front_bumper` = %i, `rear_bumper` = %i, \
																   `vent_right` = %i, `vent_left` = %i WHERE `id` = %i", VehicleInfo[vehicle][vModifications][0],
																   														 VehicleInfo[vehicle][vModifications][1],
																														 VehicleInfo[vehicle][vModifications][2],
																														 VehicleInfo[vehicle][vModifications][3],
																														 VehicleInfo[vehicle][vModifications][4],
																														 VehicleInfo[vehicle][vModifications][5],
																														 VehicleInfo[vehicle][vModifications][6],
																														 VehicleInfo[vehicle][vModifications][7],
																														 VehicleInfo[vehicle][vModifications][8],
																														 VehicleInfo[vehicle][vModifications][9],
																														 VehicleInfo[vehicle][vModifications][10],
																														 VehicleInfo[vehicle][vModifications][11],
																														 VehicleInfo[vehicle][vModifications][12],
																														 VehicleInfo[vehicle][vModifications][13],
																													     VehicleInfo[vehicle][vID]);

					mysql_function_query(sqlHandle, query, false, "", "");
					GivePlayerMoneyEx(playerid, -addedModificationsPrice[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "你的车已经按你的要求进行改装, 欢迎下次再来.");
					SetPlayerPosEx(playerid, 7, 1049.1636, -1033.7711, 31.7664, 89.4988);
			    } else {
					SendClientMessage(playerid, COLOR_GREY, "你没有足够的钱进行改装.");
				}
			} else if(GetPVarInt(playerid, "InModGarage") != 0 && GetPlayerVehicleSeat(playerid) == 0 && clickedid == TD_M_ViewingLeft) {
				new vehicle = GetPlayerVehicleID(playerid),
					passengers[4] = {-1, ...};

				foreach(new i : Player) {
					if(GetPlayerVehicleID(i) == vehicle) {
						passengers[GetPlayerVehicleSeat(i)] = i;
					}
				}

			    switch(GetPVarInt(playerid, "ModPerspective")) {
					case 0: {
					    SetPVarInt(playerid, "ModPerspective", 1);
					    for(new b = 0; b != sizeof(passengers); b++) {
							if(passengers[b] != -1) {
							    SetPlayerCameraPos(passengers[b], 6.4480, -13.9184, 1052.5635);
							    SetPlayerCameraLookAt(passengers[b], 6.5478, -20.8039, 1051.8635);
							}
						}
					}
					case 1: {
					    SetPVarInt(playerid, "ModPerspective", 2);
					    for(new b = 0; b != sizeof(passengers); b++) {
							if(passengers[b] != -1) {
							    SetPlayerCameraPos(passengers[b], 10.3659, -21.0808, 1052.5635);
							    SetPlayerCameraLookAt(passengers[b], 6.5478, -20.8039, 1051.8635);
							}
						}
					}
					case 2: {
					    SetPVarInt(playerid, "ModPerspective", 3);
	                    for(new b = 0; b != sizeof(passengers); b++) {
							if(passengers[b] != -1) {
							    SetPlayerCameraPos(passengers[b], 6.5702, -27.3766, 1052.5635);
							    SetPlayerCameraLookAt(passengers[b], 6.5478, -20.8039, 1051.8635);
							}
						}
					}
					case 3: {
					    SetPVarInt(playerid, "ModPerspective", 4);
					    for(new b = 0; b != sizeof(passengers); b++) {
							if(passengers[b] != -1) {
							    SetPlayerCameraPos(passengers[b], 2.8710, -21.1134, 1052.5635);
							    SetPlayerCameraLookAt(passengers[b], 6.5478, -20.8039, 1051.8635);
							}
						}
					}
					case 4: {
					    SetPVarInt(playerid, "ModPerspective", 0);
					    for(new b = 0; b != sizeof(passengers); b++) {
							if(passengers[b] != -1) {
							    SetPlayerCameraPos(passengers[b], 3.6898, -14.7078, 1052.5635);
							    SetPlayerCameraLookAt(passengers[b], 6.5478, -20.8039, 1051.8635);
							}
						}
					}
				}
			} else if(GetPVarInt(playerid, "InModGarage") != 0 && GetPlayerVehicleSeat(playerid) == 0 && clickedid == TD_M_ViewingRight) {
	  			new vehicle = GetPlayerVehicleID(playerid),
					passengers[4] = {-1, ...};

				foreach(new i : Player) {
					if(GetPlayerVehicleID(i) == vehicle) {
						passengers[GetPlayerVehicleSeat(i)] = i;
					}
				}

			    switch(GetPVarInt(playerid, "ModPerspective")) {
					case 0: {
					    SetPVarInt(playerid, "ModPerspective", 4);
					    for(new b = 0; b != sizeof(passengers); b++) {
							if(passengers[b] != -1) {
							    SetPlayerCameraPos(passengers[b], 2.8710, -21.1134, 1052.5635);
							    SetPlayerCameraLookAt(passengers[b], 6.5478, -20.8039, 1051.8635);
							}
						}
					}
					case 1: {
					    SetPVarInt(playerid, "ModPerspective", 0);
					    for(new b = 0; b != sizeof(passengers); b++) {
							if(passengers[b] != -1) {
							    SetPlayerCameraPos(passengers[b], 3.6898, -14.7078, 1052.5635);
							    SetPlayerCameraLookAt(passengers[b], 6.5478, -20.8039, 1051.8635);
							}
						}
					}
					case 2: {
					    SetPVarInt(playerid, "ModPerspective", 1);
	                    for(new b = 0; b != sizeof(passengers); b++) {
							if(passengers[b] != -1) {
							    SetPlayerCameraPos(passengers[b], 6.4480, -13.9184, 1052.5635);
							    SetPlayerCameraLookAt(passengers[b], 6.5478, -20.8039, 1051.8635);
							}
						}
					}
					case 3: {
					    SetPVarInt(playerid, "ModPerspective", 2);
					    for(new b = 0; b != sizeof(passengers); b++) {
							if(passengers[b] != -1) {
							    SetPlayerCameraPos(passengers[b], 10.3659, -21.0808, 1052.5635);
							    SetPlayerCameraLookAt(passengers[b], 6.5478, -20.8039, 1051.8635);
							}
						}
					}
					case 4: {
					    SetPVarInt(playerid, "ModPerspective", 3);
					    for(new b = 0; b != sizeof(passengers); b++) {
							if(passengers[b] != -1) {
							    SetPlayerCameraPos(passengers[b], 6.5702, -27.3766, 1052.5635);
							    SetPlayerCameraLookAt(passengers[b], 6.5478, -20.8039, 1051.8635);
							}
						}
					}
				}
			} else if(GetPVarInt(playerid, "InModGarage") != 0 && GetPlayerVehicleSeat(playerid) == 0 && clickedid == TD_M_CompRight) {
				new model = GetVehicleModel(GetPlayerVehicleID(playerid));
				SetNextVehicleComponent(playerid, model);
			} else if(GetPVarInt(playerid, "InModGarage") != 0 && GetPlayerVehicleSeat(playerid) == 0 && clickedid == TD_M_CompLeft) {
	      		new model = GetVehicleModel(GetPlayerVehicleID(playerid));
				SetPreviousVehicleComponent(playerid, model);
			}
		}
	}

	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    if(_:playertextid != INVALID_TEXT_DRAW)
	{
	    if(playertextid == mdc_Close[playerid])
	    {
	        ExitMDC(playerid);
	        gIsInMDC{playerid} = 0;
	    }
	    else if(playertextid == mdc_DashCamMenu[playerid])
	    {
			if(gDashCam{playerid} == 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "车辆的Dash-Cam已经成功开启.");
				gDashCamCheck[playerid] = SetTimerEx ("UpdateDashCam", dcam_UpdateRate, true, "i", playerid);
				gDashCam{playerid} = 1;
				ShowDashCam(playerid);
			}
			else if(gDashCam{playerid} == 1)
	        {
	            SendClientMessage(playerid, COLOR_LIGHTRED, "车辆的Dash-Cam已经成功关闭.");
	            KillTimer(gDashCamCheck[playerid]);
	            gDashCamAuto{playerid} = 0;
	            gDashCam{playerid} = 0;
	            HideDashCam(playerid);
	        }
	    }
	    else if(playertextid == mdc_Main[playerid])
	    {
			RequestBackup(playerid);
	    }
	    else if(playertextid == mdc_Players[playerid])
	    {
	        ShowPlayerDialog(playerid, DIALOG_SCAN + 0x0E, DIALOG_STYLE_INPUT, "{FFB300}MDC {00D0FF}扫描名称", "请输入名称.", "确定", "返回");
	    }
	    else if(playertextid == mdc_Vehicles[playerid])
	    {
	        ShowPlayerDialog(playerid, DIALOG_SCAN + 0x0F, DIALOG_STYLE_INPUT, "{FFB300}MDC {00D0FF}扫描牌照", "请输入拍照.", "确定", "返回");
	    }
    	if(GetPVarInt(playerid, "InModGarage") != 0 && GetPlayerVehicleSeat(playerid) == 0 && playertextid == TD_M_Add)
		{
		    new price[10],
		        vehicle = GetPlayerVehicleID(playerid),
				model = GetVehicleModel(vehicle);

		    if(addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] != validModelComponents[model - 400][currentVehicleComponent[playerid]]) {
		        if(addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] == 0) {
				    addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] = validModelComponents[model - 400][currentVehicleComponent[playerid]];
	                addedModificationsPrice[playerid] += vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comPrice];
	                AddVehicleComponent(vehicle, validModelComponents[model - 400][currentVehicleComponent[playerid]]);
	                PlayerTextDrawSetString(playerid, TD_M_Add, "Remove Component");
				} else {
				    RemoveVehicleComponent(GetPlayerVehicleID(playerid), addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]]);
                	addedModificationsPrice[playerid] -= vehicleComponents[addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] - 1000][comPrice];
					addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] = validModelComponents[model - 400][currentVehicleComponent[playerid]];
	                addedModificationsPrice[playerid] += vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comPrice];
	                AddVehicleComponent(vehicle, validModelComponents[model - 400][currentVehicleComponent[playerid]]);
                    PlayerTextDrawSetString(playerid, TD_M_Add, "Remove Component");
				}
			} else {
			    RemoveVehicleComponent(vehicle, addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]]);
                addedModificationsPrice[playerid] -= vehicleComponents[addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] - 1000][comPrice];
                addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] = 0;
				PlayerTextDrawSetString(playerid, TD_M_Add, "Add Component");
			}

	        format(price, sizeof(price), "$%i", addedModificationsPrice[playerid]);
	        PlayerTextDrawSetString(playerid, TD_M_PriceValue, price);
		}
	}

	return 1;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
    printf("cmd_> %s [ID: %i]: %s", PlayerInfo[playerid][pName], playerid, cmdtext);
	return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success)
	{
		SendClientMessage(playerid, COLOR_WHITE, "指令不存在, 使用 {3399FF}/help {FFFFFF} 查看更多信息.");
	}
	IdleInfo[playerid][idleX]++;
	IdleInfo[playerid][idleY]++;
	IdleInfo[playerid][idleZ]++;
	IdleInfo[playerid][minCounter] = 0;
	if(IdleInfo[playerid][idleMode] != 0)
	{
		IdleInfo[playerid][unset] = 1;
	}

	return 1;
}

public OnPlayerLeaveDynamicCP(playerid, checkpointid) {
    TextDrawHideForPlayer(playerid, TD_AD_HeadBox);
	TextDrawHideForPlayer(playerid, TD_AD_BoxTwo);
	TextDrawHideForPlayer(playerid, TD_AD_BoxThree);
	TextDrawHideForPlayer(playerid, TD_AD_BoxOne);
	TextDrawHideForPlayer(playerid, TD_AD_Seller);
	PlayerTextDrawHide(playerid, TD_AD_Price);
	PlayerTextDrawHide(playerid, TD_AD_CityZip);
	PlayerTextDrawHide(playerid, TD_AD_Headline);
	PlayerTextDrawHide(playerid, TD_AD_Taxes);
	PlayerTextDrawHide(playerid, TD_AD_PriceValue);
	PlayerTextDrawHide(playerid, TD_AD_TaxesValue);
	PlayerTextDrawHide(playerid, TD_AD_SellerValue);
	PlayerTextDrawHide(playerid, TD_AD_HousenumberStreet);
	PlayerTextDrawHide(playerid, TD_Mid_Info);

	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate) {

	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
	    new vehicle = GetPlayerVehicleID(playerid),
	        model = GetVehicleModel(vehicle),
	        vdata[7];
	        
        if(GetPlayerWeapon(playerid) == 24)
        {
            SetPlayerArmedWeapon(playerid, 0);
        }
		if(PlayerInfo[playerid][pBoombox] != -1 && (VehicleInfo[vehicle][vWindows] == 0 || !isnull(VehicleInfo[vehicle][vRadio])))
		{
		    PlayerInfo[playerid][pBoombox] = -1;
			StopAudioStreamForPlayer(playerid);
		}

        GetVehicleParamsEx(vehicle, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
        if(vdata[3] != 0 && PlayerInfo[playerid][pAllowFalseEnter] == 0 && (GetPVarInt(playerid, "DMV") != 3 || VehicleInfo[vehicle][vType] != VEHICLE_DMV || model != 487)) {
			RemovePlayerFromVehicle(playerid);
			GameTextForPlayer(playerid, "~R~Locked", 750, 4);
		}
		
		if(IsAnEngineCar(vehicle) && vdata[0] != 0 && VehicleInfo[vehicle][vFuel] == 0) {
			SetVehicleParamsEx(vehicle, 0, vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
		}

        PlayerInfo[playerid][pAllowFalseEnter] = 0;
        if(newstate == PLAYER_STATE_DRIVER)
		{
			SetPlayerArmedWeapon(playerid, 0);
			new Float:X, Float:Y, Float:Z;
			if(VehicleInfo[vehicle][vFaction] == 1 && PlayerInfo[playerid][pFaction] != 1)
			{
			    GetPlayerPos(playerid, X, Y, Z);
				SetPlayerPos(playerid, X, Y, Z + 3);
			    SendClientMessage(playerid, COLOR_LIGHTRED, "你不是该组织成员.");
			    FreezePlayer(playerid);
				SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
			}
			if(VehicleInfo[vehicle][vFaction] == 2 && PlayerInfo[playerid][pFaction] != 2)
			{
			    GetPlayerPos(playerid, X, Y, Z);
				SetPlayerPos(playerid, X, Y, Z + 3);
			    SendClientMessage(playerid, COLOR_LIGHTRED, "你不是该组织成员.");
			    FreezePlayer(playerid);
				SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
			}
		    if(PlayerInfo[playerid][pDriveLic] == 0 && VehicleInfo[vehicle][vType] != VEHICLE_DMV && vehicleData[model - 400][licenseType] == 1)
			{
		        SendClientMessage(playerid, COLOR_LIGHTRED, "提示: 你没有驾驶执照!");
		    }
			/*else if(PlayerInfo[playerid][pTaxiLic] == 0 && VehicleInfo[vehicle][vType] != VEHICLE_DMV && vehicleData[model - 400][licenseType] == 2)
			{
		        SendClientMessage(playerid, COLOR_LIGHTRED, "REMINDER: You do not possess a taxi driver's license, you should visit the DMV before you start transporting.");
		    }
			else if(PlayerInfo[playerid][pAirplaneLic] == 0 && VehicleInfo[vehicle][vType] != VEHICLE_DMV && vehicleData[model - 400][licenseType] == 3)
			{
		        SendClientMessage(playerid, COLOR_LIGHTRED, "REMINDER: You do not possess a pilot's license, you should visit the DMV before you start flying.");
			}*/
            if(gAntiRadarAuto{playerid} == 1 && VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] == 1)
			{
	            SendClientMessage(playerid, COLOR_LIGHTGREEN, "车辆雷达正在运行.");
	            gAntiRadarCheck[playerid] = SetTimerEx ("UpdateAntiRadar", ar_UpdateRate, true, "i", playerid);
	            gAntiRadarAuto{playerid} = 0;
				gAntiRadar{playerid} = 1;
			    TextDrawShowForPlayer(playerid, AntiRadar[0]);
			    TextDrawHideForPlayer(playerid, AntiRadar[1]);
			}
			if(gDashCamAuto{playerid} == 1 && VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] == 1)
			{
	            SendClientMessage(playerid, COLOR_LIGHTGREEN, "车辆Dashcam正在运行.");
				gDashCamCheck[playerid] = SetTimerEx ("UpdateDashCam", dcam_UpdateRate, true, "i", playerid);
	            gDashCamAuto{playerid} = 0;
				gDashCam{playerid} = 1;
				ShowDashCam(playerid);
			}
			if(IsAnEngineCar(vehicle))
			{
			    ShowVehicleTextDraw(playerid, vehicle);
			}

			switch(VehicleInfo[vehicle][vType])
			{
				case VEHICLE_JOB:
				{
				    if(PlayerInfo[playerid][pJob] == 1 && model == 408)
					{
				        new info[60];
						format(info, sizeof(info), "There are %i/%i trash bags in your trashmaster.", VehicleInfo[vehicle][vTrashbags], MAX_TRASHMASTER);
						PlayerTextDrawSetString(playerid, TD_JOB_SecondLine, info);
						PlayerTextDrawShow(playerid, TD_JOB_SecondLine);
						if(VehicleInfo[vehicle][vTrashbags] != MAX_TRASHMASTER)
						{
						    if(GetPVarInt(playerid, "Trashmaster") == 0)
							{
								SetPlayerTrashCP(playerid);
							}
							else 
							{
							    new trashID = GetPVarInt(playerid, "TrashmasterID");
								HouseScanCP[playerid] = SetPlayerRaceCheckpoint(playerid, 2, trashcans[trashID][0], trashcans[trashID][1], trashcans[trashID][2] - 1.0, 0, 0, 0, 3.0);
							    PlayerTextDrawSetString(playerid, TD_JOB_FirstLine, "Collect trash bags from the designated location.");
                                ShowPlayerDialog(playerid, DIALOG_GARBAGE_INSTRUCTIONS, DIALOG_STYLE_MSGBOX, "{FF9900}工作提示", "为了更好的提示和说明, 请按下 {FF9900}接收.", "接收", "不用了");
								PlayerTextDrawShow(playerid, TD_JOB_FirstLine);
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "如果你要继续工作, 请返回工作地点.");
						}
					}
					else if(PlayerInfo[playerid][pJob] == 2 && model == 448) {
						new info[80];
						if(VehicleInfo[vehicle][vPizzas] == 1) {
							format(info, sizeof(info), "There is currently %i pizza in your pizza bike's box.", VehicleInfo[vehicle][vPizzas]);
						} else {
						    format(info, sizeof(info), "There are currently %i pizzas in your pizza bike's box.", VehicleInfo[vehicle][vPizzas]);
						}
						
						PlayerTextDrawSetString(playerid, TD_JOB_SecondLine, info);
						PlayerTextDrawShow(playerid, TD_JOB_SecondLine);
						if(VehicleInfo[vehicle][vPizzas] > 0) {
						    if(GetPVarInt(playerid, "Pizza") == 0) {
								SetPlayerPizzaCP(playerid);
							} else {
							    new house = GetPVarInt(playerid, "PizzaHouse");
							    format(info, sizeof(info), "Deliver to %i %s, %s.", HouseInfo[house][hHousenumber], HouseInfo[house][hStreet], GetAreaName(HouseInfo[house][hZip]));
								PlayerTextDrawSetString(playerid, TD_JOB_FirstLine, info);
								PlayerTextDrawShow(playerid, TD_JOB_FirstLine);
								SetPlayerRaceCheckpoint(playerid, 2, HouseInfo[house][hX], HouseInfo[house][hY], HouseInfo[house][hZ] - 1.0, 0, 0, 0, 2.0);
							}
						} else {
							SendClientMessage(playerid, COLOR_GREY, "如果你要继续工作, 请返回工作地点.");
						}
					} else if(PlayerInfo[playerid][pJob] == 3 && model == 482) {
                        new info[50];
						if(VehicleInfo[vehicle][vBoxes] == 1) {
							format(info, sizeof(info), "There is currently %i box in your Burrito.", VehicleInfo[vehicle][vBoxes]);
						} else {
						    format(info, sizeof(info), "There are currently %i boxes in your Burrito.", VehicleInfo[vehicle][vBoxes]);
						}

						PlayerTextDrawSetString(playerid, TD_JOB_SecondLine, info);
						PlayerTextDrawShow(playerid, TD_JOB_SecondLine);
						if(VehicleInfo[vehicle][vBoxes] > 0) {
						    if(GetPVarInt(playerid, "Delivery") == 0) {
								SetPlayerDeliveryCP(playerid);
							} else {
							    new business = GetPVarInt(playerid, "DeliveryBusiness");
							    format(info, sizeof(info), "Deliver to %i %s, %s.", BusinessInfo[business][bHousenumber], BusinessInfo[business][bStreet], GetAreaName(BusinessInfo[business][bBusinesszip]));
								PlayerTextDrawSetString(playerid, TD_JOB_FirstLine, info);
								PlayerTextDrawShow(playerid, TD_JOB_FirstLine);
								SetPlayerRaceCheckpoint(playerid, 2, BusinessInfo[business][bX], BusinessInfo[business][bY], BusinessInfo[business][bZ] - 1.0, 0, 0, 0, 2.0);
							}
						} else {
							SendClientMessage(playerid, COLOR_GREY, "如果你要继续工作, 请返回工作地点.");
							SetPlayerRaceCheckpoint(playerid, 2, 2781.6343, -2447.9790, 13.6352 - 1.5, 0, 0, 0, 2.0);
						}
					}
				}
				case VEHICLE_DMV: {
				    switch(GetPVarInt(playerid, "DMV")) {
				        case 1: {
							if(dmvdrive[playerid] == 0) {
								SetCameraBehindPlayer(playerid);
								FreezePlayer(playerid);
								TextDrawShowForPlayer(playerid, TD_DMV_Box);
								TextDrawShowForPlayer(playerid, TD_DMV_Headline);
								PlayerTextDrawSetString(playerid, TD_DMV_Text1, "You have to drive on the right side of the");
								PlayerTextDrawSetString(playerid, TD_DMV_Text2, "road and constantly need to wear a");
								PlayerTextDrawSetString(playerid, TD_DMV_Text3, "seatbelt.");
								PlayerTextDrawShow(playerid, TD_DMV_Text1);
								PlayerTextDrawShow(playerid, TD_DMV_Text2);
								PlayerTextDrawShow(playerid, TD_DMV_Text3);
								SetPVarInt(playerid, "DMVInfo", 1);
								DMVTimerVar[playerid] = SetTimerEx("DMVTimer", 15000, false, "d", playerid);
							}
						}
						case 2: {
						}
						case 3: {
							if(GetVehicleModel(vehicle) == 487) {
								SetCameraBehindPlayer(playerid);
								FreezePlayer(playerid);
							    PlayerTextDrawSetString(playerid, TD_DMV_Text1, "When operating an aircraft it is always");
								PlayerTextDrawSetString(playerid, TD_DMV_Text2, "important to stay at a certain height");
								PlayerTextDrawSetString(playerid, TD_DMV_Text3, "which is indicated on the very left.");
								TextDrawShowForPlayer(playerid, TD_DMV_Box);
								TextDrawShowForPlayer(playerid, TD_DMV_Headline);
								PlayerTextDrawShow(playerid, TD_DMV_Text1);
								PlayerTextDrawShow(playerid, TD_DMV_Text2);
								PlayerTextDrawShow(playerid, TD_DMV_Text3);
								DMVTimerVar[playerid] = SetTimerEx("DMVPilotTimer", 15000, false, "di", playerid, 1);
							}
						}
					}
				}
			}
		}

		if((model == 420 || model == 438) && VehicleInfo[vehicle][vTM] != 0) {
		    new time[20],
				payment[20],
				fare[10],
				minutes = floatround(VehicleInfo[vehicle][vTMTime] / 60),
				seconds = VehicleInfo[vehicle][vTMTime] - floatround(VehicleInfo[vehicle][vTMTime] / 60) * 60;

			format(payment, sizeof(payment), "$%i", VehicleInfo[vehicle][vTMPayment]);
			format(fare, sizeof(fare), "$%i", GetPVarInt(GetPlayerID(VehicleInfo[vehicle][vOwner]), "taxiFare"));
            if(seconds >= 10) {
		    	format(time, sizeof(time), "%i:%i", minutes, seconds);
			} else {
			    format(time, sizeof(time), "%i:0%i", minutes, seconds);
			}

			PlayerTextDrawSetString(playerid, TD_C_TimeValue, time);
			PlayerTextDrawSetString(playerid, TD_C_PaymentValue, payment);
			PlayerTextDrawSetString(playerid, TD_C_FareValue, fare);
			PlayerTextDrawShow(playerid, TD_C_TimeValue);
			PlayerTextDrawShow(playerid, TD_C_PaymentValue);
			PlayerTextDrawShow(playerid, TD_C_FareValue);
			TextDrawShowForPlayer(playerid, TD_C_Box);
			TextDrawShowForPlayer(playerid, TD_C_Headline);
			TextDrawShowForPlayer(playerid, TD_C_Fare);
			TextDrawShowForPlayer(playerid, TD_C_Time);
			TextDrawShowForPlayer(playerid, TD_C_Payment);
		}

		if(GetPVarInt(playerid, "Death") != 0) {
		    new admMsg[110];
		    format(admMsg, sizeof(admMsg), "*** %s (ID: %i) 疑似非法驾驶. *死亡时开车*", GetNameWithSpace(playerid), playerid);
			SendMessageToAdmins(admMsg);
		}

	    if(!isnull(VehicleInfo[vehicle][vRadio])) {
			PlayAudioStreamForPlayer(playerid, VehicleInfo[vehicle][vRadio]);
		}

		if(vehicle == trainID && (model == 537 || model == 538 || model == 569 || model == 570 || model == 590)) {
			if(PlayerInfo[playerid][pTrainticket] + 86400 < gettime()) {
				SendClientMessage(playerid, COLOR_LIGHTRED, "提示: 你没有火车票!");
			}
		}
	}
	else if(oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER)
	{
	    new msg[50];
	    
     	if(gAntiRadar{playerid} == 1)
		{
	        KillTimer(gAntiRadarCheck[playerid]);
	        gAntiRadarAuto{playerid} = 1;
            gAntiRadar{playerid} = 0;
	        TextDrawHideForPlayer(playerid, AntiRadar[0]);
		    TextDrawHideForPlayer(playerid, AntiRadar[1]);
		    SendClientMessage(playerid, COLOR_LIGHTRED, "车辆雷达关闭.");
		}
		if(gDashCam{playerid} == 1)
		{
            KillTimer(gDashCamCheck[playerid]);
            gDashCamAuto{playerid} = 1;
            gDashCam{playerid} = 0;
			HideDashCam(playerid);
			SendClientMessage(playerid, COLOR_LIGHTRED, "车辆dashcam关闭.");
		}
		if(update[playerid][updating])
 		{
  			TextDrawHideForPlayer(playerid,updateTD[playerid]);
  			update[playerid][updating]=false;
  			KillTimer(update[playerid][timer]);
			SendClientMessage(playerid, COLOR_LIGHTRED, "嫌疑追踪关闭.");
		}
		/*if((PlayerInfo[playerid][pJob] == 2 && GetPVarInt(playerid, "Pizza") != 0) || (PlayerInfo[playerid][pJob] == 1 && GetPVarInt(playerid, "Trashmaster") != 0) ||
		   (PlayerInfo[playerid][pJob] == 3 && GetPVarInt(playerid, "Delivery") != 0)) {
            DisablePlayerRaceCheckpoint(playerid);
		}*/
		
		if(PlayerInfo[playerid][pBoombox] == -1)
		{
			StopAudioStreamForPlayer(playerid);
		}
		
		if(GetPVarInt(playerid, "UseCellphone") != 0)
		{
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
		}

	    if(helmet[playerid] == 1) {
	    	if(IsPlayerAttachedObjectSlotUsed(playerid, IDX_HELMET)) RemovePlayerAttachedObject(playerid, IDX_HELMET);
	     	format(msg, sizeof(msg), "** %s 摘下%s头盔.", GetNameWithSpace(playerid, 1), HisHer(playerid));
			helmet[playerid] = 0;
			ProxDetector(12, playerid, msg, COLOR_PINK);
	    }

	 	if(seatbelt[playerid] == 1) {
			seatbelt[playerid] = 0;
			format(msg, sizeof(msg), "** %s 解开%s安全带.", GetNameWithSpace(playerid, 1), HisHer(playerid));
			ProxDetector(12, playerid, msg, COLOR_PINK);
		}

		TextDrawHideForPlayer(playerid, TD_SM_Box);
		TextDrawHideForPlayer(playerid, TD_SM_Vehiclename);
		TextDrawHideForPlayer(playerid, TD_SM_Speed);
		TextDrawHideForPlayer(playerid, TD_SM_Fuel);
		PlayerTextDrawHide(playerid, TD_SM_SBH);
		PlayerTextDrawHide(playerid, TD_SM_Vehiclename_Value);
		PlayerTextDrawHide(playerid, TD_SM_SBH_Value);
		PlayerTextDrawHide(playerid, TD_SM_Fuel_Value);
		PlayerTextDrawHide(playerid, TD_SM_Speed_Value);
		TextDrawHideForPlayer(playerid, TD_C_Box);
		TextDrawHideForPlayer(playerid, TD_C_Headline);
		TextDrawHideForPlayer(playerid, TD_C_Fare);
		TextDrawHideForPlayer(playerid, TD_C_Time);
		TextDrawHideForPlayer(playerid, TD_C_Payment);
		PlayerTextDrawHide(playerid, TD_C_PaymentValue);
		PlayerTextDrawHide(playerid, TD_C_TimeValue);
		PlayerTextDrawHide(playerid, TD_C_FareValue);
		PlayerTextDrawHide(playerid, TD_JOB_FirstLine);
		PlayerTextDrawHide(playerid, TD_JOB_SecondLine);
		if(oldstate == PLAYER_STATE_DRIVER && PlayerInfo[playerid][pItemType][0] != 0 && items[PlayerInfo[playerid][pItemType][0]][itemType] == ITEM_WEAPON)
		{
	        SetPlayerArmedWeapon(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID]);
		}
	}

	return 1;
}

public OnRconLoginAttempt(ip[], password[], success) {
/*	new userIP[16];
	foreach(new i : Player) {
		GetPlayerIp(i, userIP, sizeof(userIP));
      	if(!strcmp(ip, userIP, true)) {
			SystemBanPlayer(i, "Rcon Login Attempt", ip);
		}
	}

*/  	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid) {
	if(GetPVarInt(forplayerid, "DMV") == 3) {
    	if(VehicleInfo[vehicleid][vType] == VEHICLE_DMV && GetVehicleModel(vehicleid) == 487) {
			SetVehicleParamsForPlayer(vehicleid, forplayerid, 0, 0);
		}
	}
	
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ) {
    new idx = GetPVarInt(playerid, "EditAttachedObject");
	if(response)
	{
	    new testPOS[256];
        format(testPOS, sizeof(testPOS), "SetPlayerAttachedObject(%d, %d, %d, %d, %f, %f, %f, %f, %f, %f, %f, %f, %f);", playerid, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
        SendClientMessage(playerid, COLOR_WHITE, testPOS);
        
		new query[95];
	    PlayerInfo[playerid][pItemX][idx] = fOffsetX;
	    PlayerInfo[playerid][pItemY][idx] = fOffsetY;
	    PlayerInfo[playerid][pItemZ][idx] = fOffsetZ;
	    PlayerInfo[playerid][pItemrX][idx] = fRotX;
	    PlayerInfo[playerid][pItemrY][idx] = fRotY;
	    PlayerInfo[playerid][pItemrZ][idx] = fRotZ;
	    PlayerInfo[playerid][pItemsX][idx] = fScaleX;
		PlayerInfo[playerid][pItemsY][idx] = fScaleY;
		PlayerInfo[playerid][pItemsZ][idx] = fScaleZ;
		RemovePlayerAttachedObject(playerid, idx);
		SetPlayerAttachedObject(playerid, idx, items[PlayerInfo[playerid][pItemType][idx]][objID], items[PlayerInfo[playerid][pItemType][idx]][bone], PlayerInfo[playerid][pItemX][idx],
                                               PlayerInfo[playerid][pItemY][idx], PlayerInfo[playerid][pItemZ][idx], PlayerInfo[playerid][pItemrX][idx], PlayerInfo[playerid][pItemrY][idx],
                                               PlayerInfo[playerid][pItemrZ][idx], PlayerInfo[playerid][pItemsX][idx], PlayerInfo[playerid][pItemsY][idx], PlayerInfo[playerid][pItemsZ][idx]);
		SendClientMessage(playerid, COLOR_GREY, "保存正确.");
		mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_clothes` WHERE `item` = %i AND `owner` = '%e'", PlayerInfo[playerid][pItemType][idx], PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, true, "OnPlayerAdjustClothings", "iifffffffff", playerid, PlayerInfo[playerid][pItemType][idx], fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "你取消了保存.");
		SetPlayerAttachedObject(playerid, idx, items[PlayerInfo[playerid][pItemType][idx]][objID], items[PlayerInfo[playerid][pItemType][idx]][bone], PlayerInfo[playerid][pItemX][idx],
											   PlayerInfo[playerid][pItemY][idx], PlayerInfo[playerid][pItemZ][idx], PlayerInfo[playerid][pItemrX][idx], PlayerInfo[playerid][pItemrY][idx],
											   PlayerInfo[playerid][pItemrZ][idx], PlayerInfo[playerid][pItemsX][idx], PlayerInfo[playerid][pItemsY][idx], PlayerInfo[playerid][pItemsZ][idx]);
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	if(PlayerInfo[playerid][pMasked] == 1)
	{
        ShowPlayerNameTagForPlayer(forplayerid, playerid, 0);
	}
	return 1;
}

public OnDynamicObjectMoved(objectid) {
	if(objectid == diagnosisLazer) {
	    if(diagnosisStep == 0) {
			MoveDynamicObject(diagnosisLazer, 1508.88, -1561.61, 1972.44, 0.2, 0.00, 90.00, 90.00);
			diagnosisStep = 1;
		} else {
            MoveDynamicObject(diagnosisLazer, 1508.88, -1561.71, 1972.44, 0.2, 0.00, 90.00, -90.00);
			diagnosisStep = 0;
		}
	}
	if(objectid == Ballon)
	{
		 switch(BallonStats)
		 {
			 case BALLON_UP_I:XB_SetBallon(BALLON_UP_II);
			 case BALLON_UP_II:XB_SetBallon(BALLON_DOWN_WAIT);
			 case BALLON_DOWN_I:XB_SetBallon(BALLON_DOWN_II);
			 case BALLON_DOWN_II:XB_SetBallon(BALLON_NONE);
			 
		 }
		 
	}
	for(new i;i<6;i++)
	{
	    if(objectid==cow[i])
	    {
			CowWinner=i+1;
			BetCowStats=BET_RESULT;
			StopDynamicObject(cow[0]);
			StopDynamicObject(cow[1]);
			StopDynamicObject(cow[2]);
			StopDynamicObject(cow[3]);
			StopDynamicObject(cow[4]);
			StopDynamicObject(cow[5]);
			BetCowTime=60;
			break;
	    }
	}
	return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)//
{
    if(GetPlayerWeapon(playerid) > 21)
    {
    	TextDrawShowForPlayer(playerid, PlayerInfo[playerid][pHitmark]);
        SetTimerEx("HideHitMark", 150, false, "d", playerid);
	}
	if(GetPVarInt(damagedid, "Death") == 0)
	{
		if(Paused[damagedid] == 0)
		{
		    new Float:X,
		        Float:Y,
		        Float:Z,
		        Float:distance;

			GetPlayerPos(playerid, X, Y, Z);
			distance = GetPlayerDistanceFromPoint(damagedid, X, Y, Z);
			/*switch(bodypart)
		 	{
		  		case BODY_PART_HEAD:
		  		{
		  			if(weaponid != 23 && PlayerInfo[playerid][pItemType][0] != 242)
					{
			  		    if(Paused[damagedid] != 0 && weaponid == 22 || weaponid == 23 || weaponid == 24 || weaponid == 25 || weaponid == 28 || weaponid == 29 || weaponid == 30 || weaponid == 31 || weaponid == 32 || weaponid == 34)
			  		    {
			  		        if(PlayerInfo[playerid][pItemType][0] != 225 && PlayerInfo[playerid][pItemType][0] != 0)
							{
				  		        new query[190];
				  		        if(PlayerInfo[damagedid][pFaction] == 1 && GetPlayerSkin(damagedid) == 285) { return 1; }
				  		        if(PlayerInfo[damagedid][pItemType][0] == 227) { return 1; }
								SetPlayerHealth(damagedid, 0.0);
							    format(query, sizeof(query), "*** %s has killed %s with a Headshot.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
							    SendMessageToAdmins(query, COLOR_LIGHTRED);
							    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Headshot', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
							    mysql_function_query(sqlHandle, query, false, "", "");
							    DeathReason[damagedid] = Create3DTextLabel("Wounds: Headshot", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
		    					Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
							    return 1;
				    		}
						}
					}
		    	}
    		}*/

    		if(weaponid == 23 && PlayerInfo[playerid][pItemType][0] == 242)
			{
		        if(distance <= 10.0)
				{
			        new me[110];
			        format(me, sizeof(me), "** %s 接通电流并且电击 %s.", GetNameWithSpace(playerid, 1), GetNameWithSpace(damagedid, 1));
			        ProxDetector(12, playerid, me, COLOR_PINK);
			        FreezePlayer(damagedid);
	                ApplyAnimation(damagedid, "FIGHT_E", "Hit_fightkick_B", 4.1, 0, 1, 1, 1, 1, 1);
	                SendClientMessage(damagedid, COLOR_WHITE, "你被电击了, 电流会穿过你的身体并且控制肌肉!");
	                UnfreezeTimerVar[damagedid] = SetTimerEx("UnfreezeTimer", 15000, false, "i", damagedid);
				}
			}
			else if(weaponid == 25 && PlayerInfo[playerid][pItemType][0] == 225)
			{
		        if(distance <= 10.0)
				{
			        new me[110];
			        format(me, sizeof(me), "** %s 使用震爆枪将 %s 击倒.", GetNameWithSpace(playerid, 1), GetNameWithSpace(damagedid, 1));
			        ProxDetector(12, playerid, me, COLOR_PINK);
			        FreezePlayer(damagedid);
	                ApplyAnimation(damagedid, "FIGHT_E", "Hit_fightkick_B", 4.1, 0, 1, 1, 1, 1, 1);
	                SendClientMessage(damagedid, COLOR_WHITE, "你被震爆枪射中, 15秒后你会恢复能力.");
	                UnfreezeTimerVar[damagedid] = SetTimerEx("UnfreezeTimer", 15000, false, "i", damagedid);
				}
			}
			/*else if(weaponid == 1 && PlayerInfo[playerid][pItemType][0] == 188) // probably fix the issue cause were checking for fists here
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 3.0)
				{
				    SetPlayerArmour(damagedid, armour-3.0);
				}
				else if (armour < 4.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 3.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-3.0);
				}
			    else if (health < 4.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s has killed %s with a Brass Knuckles.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Brass Knuckles', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	DeathReason[damagedid] = Create3DTextLabel("** Severe Cuts & Bruises. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }

			}
			else if(weaponid == 2 && PlayerInfo[playerid][pItemType][0] == 189) // probably fix the issue cause were checking for fists here
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 5.0)
				{
				    SetPlayerArmour(damagedid, armour-5.0);
				}
				else if (armour < 6.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 5.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-3.0);
				}
			    else if (health < 6.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s has killed %s with a Golf Club.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Golf Club', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	DeathReason[damagedid] = Create3DTextLabel("** Bruises & Broken Bones. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }

			}
			else if(weaponid == 3  && PlayerInfo[playerid][pItemType][0] == 190) // probably fix the issue cause were checking for fists here
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 5.0)
				{
				    SetPlayerArmour(damagedid, armour-5.0);
				}
				else if (armour < 6.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 5.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-3.0);
				}
			    else if (health < 6.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s has killed %s with a Nite Stick.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Nite Stick', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	DeathReason[damagedid] = Create3DTextLabel("** Bruises. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }

			}
			else if(weaponid == 4  && PlayerInfo[playerid][pItemType][0] == 191) // probably fix the issue cause were checking for fists here
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 10.0)
				{
				    SetPlayerArmour(damagedid, armour-10.0);
				}
				else if (armour < 11.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 10.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-10.0);
				}
			    else if (health < 11.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s has killed %s with a Knife.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Knife', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	DeathReason[damagedid] = Create3DTextLabel("** Stab Wounds. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }
			}
			else if(weaponid == 5  && PlayerInfo[playerid][pItemType][0] == 192) // probably fix the issue cause were checking for fists here
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 5.0)
				{
				    SetPlayerArmour(damagedid, armour-5.0);
				}
				else if (armour < 6.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 5.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-3.0);
				}
			    else if (health < 6.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s has killed %s with a Bat.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Bat', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	DeathReason[damagedid] = Create3DTextLabel("** Bruises & Broken Bones. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }
			}
			else if(weaponid == 6  && PlayerInfo[playerid][pItemType][0] == 193) // probably fix the issue cause were checking for fists here
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 5.0)
				{
				    SetPlayerArmour(damagedid, armour-5.0);
				}
				else if (armour < 6.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 5.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-3.0);
				}
			    else if (health < 6.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s has killed %s with a Shovel.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Shovel', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	DeathReason[damagedid] = Create3DTextLabel("** Bruises & Broken Bones. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }

			}
			else if(weaponid == 0) // probably fix the issue cause were checking for fists here
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 3.0)
				{
				    SetPlayerArmour(damagedid, armour-3.0);
				}
				else if (armour < 4.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 3.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-3.0);
				}
			    else if (health < 3.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s has killed %s with a Fists.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Fists', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	DeathReason[damagedid] = Create3DTextLabel("** Cuts & Bruises. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }
			}*/
			else if(weaponid == 22 && PlayerInfo[playerid][pItemType][0] == 206) // colt 1911
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);
				if(PlayerInfo[playerid][pDonateRank] == 3)
				{
					if (armour > 15.0)
					{
					    SetPlayerArmour(damagedid, armour-15.0);
					}
					else if (armour < 16.0)
					{
					    SetPlayerArmour(damagedid, 0);
					}
				    if (health > 15.0 && armour < 1)
					{
					    SetPlayerHealth(damagedid, health-15.0);
					}
				    else if (health < 16.0 && armour < 1)
				    {
				        SetPlayerHealth(damagedid, 0.0);
				        new query[190];
				    	format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Colt 1911.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
				    	SendMessageToAdmins(query, COLOR_LIGHTRED);
				    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Colt 1911', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
				    	mysql_function_query(sqlHandle, query, false, "", "");
				    	//DeathReason[damagedid] = Create3DTextLabel("** Colt 1911 shots. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
	    				//Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
				    }
				}
				else
				{
				    if (armour > 20.0)
					{
					    SetPlayerArmour(damagedid, armour-20.0);
					}
					else if (armour < 21.0)
					{
					    SetPlayerArmour(damagedid, 0);
					}
				    if (health > 20.0 && armour < 1)
					{
					    SetPlayerHealth(damagedid, health-20.0);
					}
				    else if (health < 21.0 && armour < 1)
				    {
				        SetPlayerHealth(damagedid, 0.0);
				        new query[190];
				    	format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Colt 1911.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
				    	SendMessageToAdmins(query, COLOR_LIGHTRED);
				    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Colt 1911', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
				    	mysql_function_query(sqlHandle, query, false, "", "");
				    	//DeathReason[damagedid] = Create3DTextLabel("** Colt 1911 shots. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
	    				//Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
				    }
				}
			}
			else if(weaponid == 24 && PlayerInfo[playerid][pItemType][0] == 218) // Sig Pro 9mm
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 50.0)
				{
				    SetPlayerArmour(damagedid, armour-50.0);
				}
				else if (armour < 51.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 50.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-50.0);
				}
			    else if (health < 51.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Sig Pro 9mm.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Sig Pro 9mm', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	//DeathReason[damagedid] = Create3DTextLabel("** Sig Pro 9mm shots. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				//Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }
			}
			else if(weaponid == 31 && PlayerInfo[playerid][pItemType][0] == 219) // AR-15
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 25.0)
				{
				    SetPlayerArmour(damagedid, armour-25.0);
				}
				else if (armour < 26.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 25.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-25.0);
				}
			    else if (health < 26.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s 杀死了 %s, 武器: AR-15.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'AR-15', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	//DeathReason[damagedid] = Create3DTextLabel("** AR-15 shots. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				//Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }
			}
			else if(weaponid == 29 && PlayerInfo[playerid][pItemType][0] == 220) // UMP 45
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 10.0)
				{
				    SetPlayerArmour(damagedid, armour-10.0);
				}
				else if (armour < 11.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 10.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-10.0);
				}
			    else if (health < 31.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s 杀死了 %s, 武器: UMP 45.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'UMP 45', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	//DeathReason[damagedid] = Create3DTextLabel("** UMP 45 shots. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				//Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }
			}
			else if(weaponid == 30 && PlayerInfo[playerid][pItemType][0] == 221) // AK-74SU
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 20.0)
				{
				    SetPlayerArmour(damagedid, armour-20.0);
				}
				else if (armour < 21.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 20.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-20.0);
				}
			    else if (health < 21.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s 杀死了 %s, 武器: AK-74SU.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'AK-74SU', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	//DeathReason[damagedid] = Create3DTextLabel("** AK-74SU shots. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				//Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }
			}
			else if(weaponid == 28 && PlayerInfo[playerid][pItemType][0] == 222) // Mac-10
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 20.0)
				{
				    SetPlayerArmour(damagedid, armour-20.0);
				}
				else if (armour < 21.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 20.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-20.0);
				}
			    else if (health < 21.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Mac-10.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Mac-10', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	//DeathReason[damagedid] = Create3DTextLabel("** Mac-10 shots. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				//Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }
			}
			else if(weaponid == 24 && PlayerInfo[playerid][pItemType][0] == 211) // Jericho 941F
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 30.0)
				{
				    SetPlayerArmour(damagedid, armour-30.0);
				}
				else if (armour < 31.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 30.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-30.0);
				}
			    else if (health < 31.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Jericho 941F.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Jericho 941F', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	//DeathReason[damagedid] = Create3DTextLabel("** Jericho 941F shots. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				//Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }
			}
			else if(weaponid == 24 && PlayerInfo[playerid][pItemType][0] == 223) // Desert Eagle .50
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 70.0)
				{
				    SetPlayerArmour(damagedid, armour-70.0);
				}
				else if (armour < 71.0)
				{
				    SetPlayerArmour(damagedid, 0);
				    SetPlayerHealth(damagedid, health-15);
				}
			    if (health > 70.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-70.0);
				}
			    else if (health < 71.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Desert Eagle.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Desert Eagle', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	//DeathReason[damagedid] = Create3DTextLabel("** Desert Eagle shots. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				//Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }
			}
			else if(weaponid == 24 && PlayerInfo[playerid][pItemType][0] == 253) // Beretta 92FS
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);
				
				if (armour > 50.0)
				{
				    SetPlayerArmour(damagedid, armour-50.0);
				}
				else if (armour < 51.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 50.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-45);
				}
			    else if (health < 51.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Beretta 92FS.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Beretta 92FS', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	//DeathReason[damagedid] = Create3DTextLabel("** Beretta 92FS shots. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				//Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }
			}
			else if(weaponid == 32 && PlayerInfo[playerid][pItemType][0] == 254) // KG-9
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 25.0)
				{
				    SetPlayerArmour(damagedid, armour-25.0);
				}
				else if (armour < 26.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 25.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-25);
				}
			    else if (health < 26.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s 杀死了 %s, 武器: KG-9.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'KG-9', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	//DeathReason[damagedid] = Create3DTextLabel("** KG-9 shots. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				//Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }
			}
			else if(weaponid == 30 && PlayerInfo[playerid][pItemType][0] == 255) // AK-M
			{
			    new Float:health;
			    GetPlayerHealth(damagedid,health);
			    new Float:armour;
				GetPlayerArmour(damagedid, armour);

				if (armour > 15.0)
				{
				    SetPlayerArmour(damagedid, armour-15.0);
				}
				else if (armour < 16.0)
				{
				    SetPlayerArmour(damagedid, 0);
				}
			    if (health > 15.0 && armour < 1)
				{
				    SetPlayerHealth(damagedid, health-15);
				}
			    else if (health < 16.0 && armour < 1)
			    {
			        SetPlayerHealth(damagedid, 0.0);
			        new query[190];
			    	format(query, sizeof(query), "*** %s 杀死了 %s, 武器: AK-M.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid));
			    	SendMessageToAdmins(query, COLOR_LIGHTRED);
			    	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'AK-M', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName]);
			    	mysql_function_query(sqlHandle, query, false, "", "");
			    	//DeathReason[damagedid] = Create3DTextLabel("** AK-M shots. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    				//Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
			    }
			}
			else
			{
			    if(GetPlayerWeapon(playerid) == 0) return 1; // denying this to work if the weapon is in hands as an object
				new slot[2];
				for(new w = 0; w != 13; w++)
				{
					GetPlayerWeaponData(playerid, w, slot[0], slot[1]);
					if(slot[0] == weaponid && slot[1] != 0 && (slot[0] >= sizeof(WeaponData) || (slot[0] != 0 && (WeaponData[slot[0]][itemType] != PlayerInfo[playerid][pItemType][0] || items[WeaponData[slot[0]][itemType]][itemType] != ITEM_WEAPON))))
					{
						return 1;
					}
				}
				new Float:armour,
					Float:health,
					itemDamage = items[PlayerInfo[playerid][pItemType][0]][weaponID];

				GetPlayerHealth(damagedid, health);
				GetPlayerArmour(damagedid, armour);
				if(distance <= 10.0)
				{
					if(itemDamage == 0)
					{
						if(PlayerInfo[playerid][pItemType][0] == 24 || PlayerInfo[playerid][pItemType][0] == 23 || PlayerInfo[playerid][pItemType][0] == 25)
						{
							amount = 8.0;
						}
						else
						{
                            amount = WeaponData[itemDamage][wepDamage];
						}
					}
					else
					{
                        amount = WeaponData[itemDamage][wepDamage];
					}
				}
				else
				{
				    if(itemDamage == 0)
			 		{
						if(PlayerInfo[playerid][pItemType][0] == 24 || PlayerInfo[playerid][pItemType][0] == 23 || PlayerInfo[playerid][pItemType][0] == 25)
						{
							amount = 8.0 - floatround(distance / 1.5);
						}
						else
						{
                            amount = WeaponData[itemDamage][wepDamage] - floatround(distance / 1.5);
						}
					}
					else
					{
                        amount = WeaponData[itemDamage][wepDamage] - floatround(distance / 1.5);
					}

					if(amount < 0.0)
					{
						amount = 0.0;
					}
				}

				if(armour > 0.0)
				{
					SetPlayerArmourAndLimit(damagedid, (armour - amount < 0.0) ? 0.0 : armour - amount);
					amount -= armour;
				}

				if(amount > 0.0)
				{
					SetPlayerHealthAndLimit(damagedid, (health - amount < 0.0) ? 0.0 : health - amount);
					if(health - amount <= 0.0)
					{
			        	new query[190];//, string[128];
					    format(query, sizeof(query), "*** %s 杀死了 %s, 死亡原因: %s.", GetNameWithSpace(playerid), GetNameWithSpace(damagedid), DeathReasons[weaponid]);
					    SendMessageToAdmins(query, COLOR_LIGHTRED);
					    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', '%e', NOW())", PlayerInfo[damagedid][pName], PlayerInfo[playerid][pName], DeathReasons[weaponid]);
					    mysql_function_query(sqlHandle, query, false, "", "");
						//format(string, sizeof(string), "** %s shots. **", DeathReasons[weaponid]);
					    //DeathReason[damagedid] = Create3DTextLabel(string, COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
    					//Attach3DTextLabelToPlayer(DeathReason[damagedid], damagedid, 0.0, 0.0, 0.0);
					}
				}
			}
		}
	}

	return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
   	new Float:pHP;
    GetPlayerHealth(playerid, pHP);
    
	if(weaponid != 23 && PlayerInfo[issuerid][pItemType][0] != 242 && weaponid != 25 && PlayerInfo[issuerid][pItemType][0] != 225)
	{
	    ShowBlood(playerid);
	}
	
	if(GetPVarInt(playerid, "Death") == 1)
	{
		SetPlayerHealth(playerid, pHP + amount);
		return 1;
	}
	//------------------------------------------------------------------------//
	if(issuerid != INVALID_PLAYER_ID)
   	{
   	    if(weaponid == 0 || weaponid == 1 || weaponid == 2 || weaponid == 3 || weaponid == 4 || weaponid == 5 ||
		    weaponid == 6 || weaponid == 7 || weaponid == 8 || weaponid == 15)
   	    {
   			sInfo[playerid][Misc] += 1;
		}
   	}
  	if(issuerid != INVALID_PLAYER_ID && weaponid == 34 && bodypart == 9)
   	{
		SetPlayerHealth(playerid, 0.0);
   	}
  	if(issuerid != INVALID_PLAYER_ID && bodypart == 3)
   	{
   		if(weaponid == 22 || weaponid == 23 || weaponid == 24 || weaponid == 25 || weaponid == 26 || weaponid == 27 ||
		    weaponid == 28 || weaponid == 29 || weaponid == 30 || weaponid == 31 || weaponid == 32 || weaponid == 33 || weaponid == 34)
   	    {
   			sInfo[playerid][Chest] += 1;
		}
   	}
  	if(issuerid != INVALID_PLAYER_ID && bodypart == 4)
   	{
   		if(weaponid == 22 || weaponid == 23 || weaponid == 24 || weaponid == 25 || weaponid == 26 || weaponid == 27 ||
		    weaponid == 28 || weaponid == 29 || weaponid == 30 || weaponid == 31 || weaponid == 32 || weaponid == 33 || weaponid == 34)
   	    {
   			sInfo[playerid][Crotch] += 1;
		}
   	}
  	if(issuerid != INVALID_PLAYER_ID && bodypart == 5)
   	{
   		if(weaponid == 22 || weaponid == 23 || weaponid == 24 || weaponid == 25 || weaponid == 26 || weaponid == 27 ||
		    weaponid == 28 || weaponid == 29 || weaponid == 30 || weaponid == 31 || weaponid == 32 || weaponid == 33 || weaponid == 34)
   	    {
   			sInfo[playerid][LArm] += 1;
		}
   	}
  	if(issuerid != INVALID_PLAYER_ID && bodypart == 6)
   	{
   		if(weaponid == 22 || weaponid == 23 || weaponid == 24 || weaponid == 25 || weaponid == 26 || weaponid == 27 ||
		    weaponid == 28 || weaponid == 29 || weaponid == 30 || weaponid == 31 || weaponid == 32 || weaponid == 33 || weaponid == 34)
   	    {
   			sInfo[playerid][RArm] += 1;
		}
   	}
  	if(issuerid != INVALID_PLAYER_ID && bodypart == 7)
   	{
   		if(weaponid == 22 || weaponid == 23 || weaponid == 24 || weaponid == 25 || weaponid == 26 || weaponid == 27 ||
		    weaponid == 28 || weaponid == 29 || weaponid == 30 || weaponid == 31 || weaponid == 32 || weaponid == 33 || weaponid == 34)
   	    {
   			sInfo[playerid][LLeg] += 1;
		}
   	}
  	if(issuerid != INVALID_PLAYER_ID && bodypart == 8)
   	{
   		if(weaponid == 22 || weaponid == 23 || weaponid == 24 || weaponid == 25 || weaponid == 26 || weaponid == 27 ||
		    weaponid == 28 || weaponid == 29 || weaponid == 30 || weaponid == 31 || weaponid == 32 || weaponid == 33 || weaponid == 34)
   	    {
   			sInfo[playerid][RLeg] += 1;
		}
   	}
  	if(issuerid != INVALID_PLAYER_ID && bodypart == 9)
   	{
   		if(weaponid == 22 || weaponid == 23 || weaponid == 24 || weaponid == 25 || weaponid == 26 || weaponid == 27 ||
	       	weaponid == 28 || weaponid == 29 || weaponid == 30 || weaponid == 31 || weaponid == 32 || weaponid == 33 || weaponid == 34)
   	    {
   	    	SetPlayerHealth(playerid, pHP-70);
   			sInfo[playerid][Head] += 1;
		}
   	}
	//------------------------------------------------------------------------//
	
	if(weaponid == 0 && pHP <= 5.0)
	{
		if(allowkf[playerid] != issuerid)
		{
            SetPlayerHealth(playerid, 10.0 + amount);
            //new dmsg[128];
            //format(dmsg,128,"**%s 未设置“拳头致死”,你无法用拳头伤害TA",PlayerInfo[playerid][pName]);
		    //SendClientMessage(issuerid,-1,dmsg);
		    
		    //ApplyAnimation(playerid, "CRACK", "crckdeth4", 4.1, 1, 1, 1, 1, 1, 1);
		    
		    //TogglePlayerControllable(playerid,false);
		    //SetPVarInt(playerid,"Frozen",1);
            //UnfreezeTimerVar[playerid] = SetTimerEx("UnfreezeTimer", 3000, false, "d", playerid);
		    return 1;
		}
	}
	
	if((0 <= weaponid <= 46) || weaponid == 54)
	{
		if(BODY_PART_TORSO <= bodypart <= BODY_PART_HEAD) Damage[playerid][(bodypart - 3)][weaponid]++;
	}
	
    if(bodypart == 7 || bodypart == 8 || IsPlayerFalling(playerid) && amount > 6.0)//bodypart == 8
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 由于你腿部受到了伤害, 所以你的运动能力已经受损. 你目前无法跳跃和疾跑.");
		BrokenLegs[playerid] = 1;
	}
	if(weaponid == 1 && PlayerInfo[issuerid][pItemType][0] == 188) // probably fix the issue cause were checking for fists here
	{
		new Float:health;
		GetPlayerHealth(playerid,health);
		new Float:armour;
		GetPlayerArmour(playerid, armour);
		if (armour > 3.0)
		{
			SetPlayerArmour(playerid, armour-3.0);
		}
		else if (armour < 4.0)
		{
			SetPlayerArmour(playerid, 0);
		}
		if (health > 3.0 && armour < 1)
		{
			SetPlayerHealth(playerid, health-3.0);
		}
		else if (health < 4.0 && armour < 1)
		{
			SetPlayerHealth(playerid, 0.0);
			new query[190];
			format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Brass Knuckles.", GetNameWithSpace(issuerid), GetNameWithSpace(playerid));
			SendMessageToAdmins(query, COLOR_LIGHTRED);
			mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Brass Knuckles', NOW())", PlayerInfo[playerid][pName], PlayerInfo[issuerid][pName]);
			mysql_function_query(sqlHandle, query, false, "", "");
			//DeathReason[playerid] = Create3DTextLabel("** Severe Cuts & Bruises. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
			//Attach3DTextLabelToPlayer(DeathReason[playerid], playerid, 0.0, 0.0, 0.0);
		}
	}
	else if(weaponid == 2 && PlayerInfo[issuerid][pItemType][0] == 189) // probably fix the issue cause were checking for fists here
	{
		new Float:health;
		GetPlayerHealth(playerid,health);
		new Float:armour;
		GetPlayerArmour(playerid, armour);
		if (armour > 5.0)
		{
			SetPlayerArmour(playerid, armour-5.0);
		}
		else if (armour < 6.0)
		{
			SetPlayerArmour(playerid, 0);
		}
		if (health > 5.0 && armour < 1)
		{
			SetPlayerHealth(playerid, health-3.0);
		}
		else if (health < 6.0 && armour < 1)
		{
			SetPlayerHealth(playerid, 0.0);
			new query[190];
			format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Golf Club.", GetNameWithSpace(issuerid), GetNameWithSpace(playerid));
			SendMessageToAdmins(query, COLOR_LIGHTRED);
			mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Golf Club', NOW())", PlayerInfo[playerid][pName], PlayerInfo[issuerid][pName]);
			mysql_function_query(sqlHandle, query, false, "", "");
			//DeathReason[playerid] = Create3DTextLabel("** Bruises & Broken Bones. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
			//Attach3DTextLabelToPlayer(DeathReason[playerid], playerid, 0.0, 0.0, 0.0);

		}
	}
	else if(weaponid == 3  && PlayerInfo[issuerid][pItemType][0] == 190) // probably fix the issue cause were checking for fists here
	{
		new Float:health;
		GetPlayerHealth(playerid,health);
		new Float:armour;
		GetPlayerArmour(playerid, armour);
		if (armour > 5.0)
		{
			SetPlayerArmour(playerid, armour-5.0);
		}
		else if (armour < 6.0)
		{
			SetPlayerArmour(playerid, 0);
		}
		if (health > 5.0 && armour < 1)
		{
			SetPlayerHealth(playerid, health-3.0);
		}
		else if (health < 6.0 && armour < 1)
		{
			SetPlayerHealth(playerid, 0.0);
			new query[190];
			format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Nite Stick.", GetNameWithSpace(issuerid), GetNameWithSpace(playerid));
			SendMessageToAdmins(query, COLOR_LIGHTRED);
			mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Nite Stick', NOW())", PlayerInfo[playerid][pName], PlayerInfo[issuerid][pName]);
			mysql_function_query(sqlHandle, query, false, "", "");
			//DeathReason[playerid] = Create3DTextLabel("** Bruises. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
			//Attach3DTextLabelToPlayer(DeathReason[playerid], playerid, 0.0, 0.0, 0.0);

		}
	}
	else if(weaponid == 4  && PlayerInfo[issuerid][pItemType][0] == 191) // probably fix the issue cause were checking for fists here
	{
		new Float:health;
		GetPlayerHealth(playerid,health);
		new Float:armour;
		GetPlayerArmour(playerid, armour);
		if (armour > 10.0)
		{
			SetPlayerArmour(playerid, armour-10.0);
		}
		else if (armour < 11.0)
		{
			SetPlayerArmour(playerid, 0);
		}
		if (health > 10.0 && armour < 1)
		{
			SetPlayerHealth(playerid, health-10.0);
		}
		else if (health < 11.0 && armour < 1)
		{
			SetPlayerHealth(playerid, 0.0);
			new query[190];
			format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Knife.", GetNameWithSpace(issuerid), GetNameWithSpace(playerid));
			SendMessageToAdmins(query, COLOR_LIGHTRED);
			mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Knife', NOW())", PlayerInfo[playerid][pName], PlayerInfo[issuerid][pName]);
			mysql_function_query(sqlHandle, query, false, "", "");
			//DeathReason[playerid] = Create3DTextLabel("** Stab Wounds. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
			//Attach3DTextLabelToPlayer(DeathReason[playerid], playerid, 0.0, 0.0, 0.0);
		}
	}
	else if(weaponid == 5  && PlayerInfo[issuerid][pItemType][0] == 192) // probably fix the issue cause were checking for fists here
	{
		new Float:health;
		GetPlayerHealth(playerid,health);
		new Float:armour;
		GetPlayerArmour(playerid, armour);
		if (armour > 5.0)
		{
			SetPlayerArmour(playerid, armour-5.0);
		}
		else if (armour < 6.0)
		{
			SetPlayerArmour(playerid, 0);
		}
		if (health > 5.0 && armour < 1)
		{
			SetPlayerHealth(playerid, health-3.0);
		}
		else if (health < 6.0 && armour < 1)
		{
			SetPlayerHealth(playerid, 0.0);
			new query[190];
			format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Bat.", GetNameWithSpace(issuerid), GetNameWithSpace(playerid));
			SendMessageToAdmins(query, COLOR_LIGHTRED);
			mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Bat', NOW())", PlayerInfo[playerid][pName], PlayerInfo[issuerid][pName]);
			mysql_function_query(sqlHandle, query, false, "", "");
			//DeathReason[playerid] = Create3DTextLabel("** Bruises & Broken Bones. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
			//Attach3DTextLabelToPlayer(DeathReason[playerid], playerid, 0.0, 0.0, 0.0);
		}
	}
	else if(weaponid == 6  && PlayerInfo[issuerid][pItemType][0] == 193) // probably fix the issue cause were checking for fists here
	{
		new Float:health;
		GetPlayerHealth(playerid,health);
		new Float:armour;
		GetPlayerArmour(playerid, armour);
		if (armour > 5.0)
		{
			SetPlayerArmour(playerid, armour-5.0);
		}
		else if (armour < 6.0)
		{
			SetPlayerArmour(playerid, 0);
		}
		if (health > 5.0 && armour < 1)
		{
			SetPlayerHealth(playerid, health-3.0);
		}
		else if (health < 6.0 && armour < 1)
		{
			SetPlayerHealth(playerid, 0.0);
			new query[190];
			format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Shovel.", GetNameWithSpace(issuerid), GetNameWithSpace(playerid));
			SendMessageToAdmins(query, COLOR_LIGHTRED);
			mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Shovel', NOW())", PlayerInfo[playerid][pName], PlayerInfo[issuerid][pName]);
			mysql_function_query(sqlHandle, query, false, "", "");
			//DeathReason[playerid] = Create3DTextLabel("** Bruises & Broken Bones. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
			//Attach3DTextLabelToPlayer(DeathReason[playerid], playerid, 0.0, 0.0, 0.0);
		}
	}
	else if(weaponid == 0) // probably fix the issue cause were checking for fists here
	{
		new Float:health;
		GetPlayerHealth(playerid,health);
		new Float:armour;
		GetPlayerArmour(playerid, armour);
		if (armour > 3.0)
		{
			SetPlayerArmour(playerid, armour-3.0);
		}
		else if (armour < 4.0)
		{
			SetPlayerArmour(playerid, 0);
		}
		if (health > 3.0 && armour < 1)
		{
			SetPlayerHealth(playerid, health-3.0);
		}
		else if (health < 3.0 && armour < 1)
		{
			SetPlayerHealth(playerid, 0.0);
			new query[190];
			format(query, sizeof(query), "*** %s 杀死了 %s, 武器: Fists.", GetNameWithSpace(issuerid), GetNameWithSpace(playerid));
			SendMessageToAdmins(query, COLOR_LIGHTRED);
			mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_deaths` (`user`, `killer`, `reason`, `date`) VALUES ('%e', '%e', 'Fists', NOW())", PlayerInfo[playerid][pName], PlayerInfo[issuerid][pName]);
			mysql_function_query(sqlHandle, query, false, "", "");
			//DeathReason[playerid] = Create3DTextLabel("** Cuts & Bruises. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
			//Attach3DTextLabelToPlayer(DeathReason[playerid], playerid, 0.0, 0.0, 0.0);
		}
	}
	if((0 <= weaponid <= 46) || weaponid == 54)
	{
	    new Float:hgghealth;
	    GetPlayerHealth(playerid, hgghealth);
	    if(hgghealth < 30.0)
	    {
		    SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 400);
	    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 200);
	    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 200);
	    	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 300);
	    	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 300);
	    	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 300);
	    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 300);
	    	SendClientMessage(playerid, COLOR_LIGHTRED, "-> 血量中等, 射击能力已经下降至普通水平.");
			return 1;
  		}
	}
	if((0 <= weaponid <= 46) || weaponid == 54)
	{
	    new Float:hgghealth;
		GetPlayerHealth(playerid, hgghealth);
 		if(hgghealth < 25.0)
	    {
		    SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1);
	    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1);
	    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 1);
	    	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 1);
	    	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1);
	    	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 1);
	    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 1);
	    	SendClientMessage(playerid, COLOR_LIGHTRED, "-> 血量过低, 射击能力几乎丧失.");
	    	return 1;
		}
	}
	if (weaponid == WEAPON_GRENADE || weaponid == 51)
	{
		new Float:health;
		GetPlayerHealth(issuerid, health);
		SetPlayerHealth(issuerid, (health - (amount * 0.3)));
		FlashbangStage[issuerid] = 1;
		HandleFlashbangStage(issuerid);
	}
	return 1;
}

forward TorsoUnfreeze(playerid);
public TorsoUnfreeze(playerid)
{
    if(Limbo[playerid] == 1)
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "你的角色能力已恢复 (如果BUG了, 请使用/standup)");
	    TogglePlayerControllable(playerid, 1);
	    ApplyAnimation(playerid, "PED", "getup", 4.1, 0, 1, 1, 0, 0, 1);
	    Limbo[playerid] = 0;
 	}
    return 1;
}

COMMAND:alarmpass(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] == 0 || PlayerInfo[playerid][pModLevel] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	new string[25];
	format(string, 25, "%s", HouseInfo[GetPlayerVirtualWorld(playerid)][hAlarmPassword] );
	SendClientMessage(playerid, -1, string);
	return 1;
}

COMMAND:showtheway(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] == 0 && PlayerInfo[playerid][pModLevel] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	new user;
    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /showtheway [玩家ID]");
    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效ID.");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "对方是NPC!");
	PlayerInfo[playerid][pShowtheway_ID] = user;
 	format(gVar3000, sizeof(gVar3000), "%s", EOS);
	for(new i = 0; i != sizeof(Locs); i++)
	{
		if(isnull(gVar3000)) format(gVar3000, sizeof(gVar3000), "%s", Locs[i][locName]);
		else format(gVar3000, sizeof(gVar3000), "%s\n%s", gVar3000, Locs[i][locName]);
	}
	ShowPlayerDialog(playerid, DIALOG_SHOW_LOCATIONS, DIALOG_STYLE_LIST, "{FF9900}地点", gVar3000, "标记", "取消");
	return format(gVar3000, sizeof(gVar3000), "%s", EOS);
}

COMMAND:items(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] <= 5) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	format(gVar3000, sizeof(gVar3000), "%s", EOS);
	for(new i = 0; i != sizeof(gVar3000); i++)
	{
		if(isnull(gVar3000)) {
			format(gVar3000, sizeof(gVar3000), "{CC9900}%i.{ffffff} %s", i, items[i][itemName]);
		} else {
		    format(gVar3000, sizeof(gVar3000), "%s\n{CC9900}%i. {ffffff}%s",gVar3000, i, items[i][itemName]);
	}
}
	ShowPlayerDialog(playerid, DIALOG_MSGG, DIALOG_STYLE_LIST, "{FF9900}物品列表", gVar3000, "关闭", "");
	return format(gVar3000, sizeof(gVar3000), "%s", EOS);
}
ALTCOMMAND:map->locations;
COMMAND:locations(playerid, params[])
{
	format(gVar3000, sizeof(gVar3000), "%s", EOS);
	for(new i = 0; i != sizeof(Locs); i++)
	{
		if(isnull(gVar3000)) {
			format(gVar3000, sizeof(gVar3000), "%s", Locs[i][locName]);
		} else {
		    format(gVar3000, sizeof(gVar3000), "%s\n%s", gVar3000, Locs[i][locName]);
	}
}
	ShowPlayerDialog(playerid, DIALOG_LOCATIONS, DIALOG_STYLE_LIST, "{FF9900}地点", gVar3000, "标记", "取消");
	return format(gVar3000, sizeof(gVar3000), "%s", EOS);
}

COMMAND:serialcheck(playerid, params[])
{
	new query[128];
	mysql_format(sqlHandle, query, sizeof(query), "SELECT `serial` FROM `samp_items` WHERE `id` = %i", PlayerInfo[playerid][pItemID][0]);
	mysql_function_query(sqlHandle, query, true, "OnCommandViewSerial", "i", playerid);
	return 1;
}

COMMAND:hashtest(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 5)
	{
		PlayerInfo[playerid][pWeed] = 100;
		PlayerInfo[playerid][pCocaine] = 100;
		PlayerInfo[playerid][pHeroin] = 100;
		PlayerInfo[playerid][pCrack] = 100;
		PlayerInfo[playerid][pEcstasy] = 100;
	}
	return 1;
}

COMMAND:test1(playerid, params[])
{
	EditAttachedObject(playerid, 0);
	return 1;
}
COMMAND:test2(playerid, params[])
{
	EditAttachedObject(playerid, 1);
	return 1;
}
COMMAND:test3(playerid, params[])
{
	EditAttachedObject(playerid, 2);
	return 1;
}
COMMAND:test4(playerid, params[])
{
	EditAttachedObject(playerid, 3);
	return 1;
}
COMMAND:test5(playerid, params[])
{
	EditAttachedObject(playerid, 4);
	return 1;
}
COMMAND:test6(playerid, params[])
{
	EditAttachedObject(playerid, 5);
	return 1;
}
COMMAND:test7(playerid, params[])
{
	EditAttachedObject(playerid, 6);
	return 1;
}
COMMAND:test8(playerid, params[])
{
	EditAttachedObject(playerid, 7);
	return 1;
}
COMMAND:test9(playerid, params[])
{
	EditAttachedObject(playerid, 8);
	return 1;
}
COMMAND:test10(playerid, params[])
{
	EditAttachedObject(playerid, 9);
	return 1;
}
COMMAND:stopurl(playerid, params[]) {

	for(new i;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
		{
			StopAudioStreamForPlayer(i);
		}
	}
	return 1;
}

COMMAND:url(playerid, params[]) {

	new url[256];
	if(sscanf(params, "s[256]", url)) return SendClientMessage(playerid, COLOR_GREY, "用法: /url [链接]");
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
		{
			StopAudioStreamForPlayer(i);
			PlayAudioStreamForPlayer(i,url,0.0,0.0,0.0);
		}
	}
	return 1;
}

COMMAND:removedrugs(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 5)
	{
		PlayerInfo[playerid][pWeed] = 0;
		PlayerInfo[playerid][pCocaine] = 0;
		PlayerInfo[playerid][pHeroin] = 0;
		PlayerInfo[playerid][pCrack] = 0;
		PlayerInfo[playerid][pEcstasy] = 0;
	}
	return 1;
}

COMMAND:advanceip(playerid, params[])
{
    new name[MAX_PLAYER_NAME];
    if(PlayerInfo[playerid][pAdminlevel] > 3)
	{
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /advanceip [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效ID.");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "对方是NPC");
		new IP[16], con2[128], con3[128];
	    GetPlayerIp(user, IP, sizeof(IP));
	    GetPlayerName(user, name, sizeof(name));
		format(con2, sizeof(con2), "%s | IP: %s | 地区: %s", GetNameWithSpace(user), IP, GetPlayerCountryName(user));
		format(con3, sizeof(con3), "主机: %s | ISP: %s", GetPlayerHost(user), GetPlayerISP(user));
		SendClientMessage(playerid, COLOR_CONNECT, con2);
		SendClientMessage(playerid, COLOR_CONNECT, con3);
	}
	return 1;
}

COMMAND:breakin_test(playerid, params[])
{
	new string[128];
	new vehicle = PlayerToCar(playerid,2,4.0);
	new gsengine,gslightss,gsalarm,gsdoors,gsbonnet,gsboot,gsobjective;
	GetVehicleParamsEx(vehicle,gsengine,gslightss,gsalarm,gsdoors,gsbonnet,gsboot,gsobjective);
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "这不能在车上进行偷窃.");
	if(IsBreaking[playerid] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "你现在正在尝试进入该车. 远离该车任务取消.");
	if(VehicleInfo[vehicle][vType] != VEHICLE_OWNED) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要对私家车使用.");
	if(IsNotLockableWithoutEngine(vehicle)) return SCM(playerid, COLOR_LIGHTRED, "该车没有引擎.");
	if(!VehicleEmpty(vehicle)) return SCM(playerid, COLOR_LIGHTRED, "载具还有其他人! 别做傻事!!");
	if(gsdoors == 0) return SCM(playerid, COLOR_LIGHTRED, "该载具车门是开着的..");

	format(string, sizeof(string),"你尝试破解 %s 安全系统.", vehicleData[GetVehicleModel(vehicle) - 400][typeName]);
	SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
	
	if(VehicleInfo[vehicle][vLockType] < 6)
	{
		if(VehicleInfo[vehicle][vLockType] == 0)
		{
			BreakCarLB[vehicle] = Create3DTextLabel("150", COLOR_WHITE, 0.0, 0.0, 0.0, 5.0, 0, 0);
			Attach3DTextLabelToVehicle(BreakCarLB[vehicle], vehicle, -0.7, -1.9, -0.3);
			VehicleInfo[vehicle][vDamages] += 150;
		}
		if(VehicleInfo[vehicle][vLockType] == 1)
		{
			VehicleInfo[vehicle][vDamages] += 200;
			BreakCarLB[vehicle] = Create3DTextLabel("200", COLOR_WHITE, 0.0, 0.0, 0.0, 5.0, 0, 0);
			Attach3DTextLabelToVehicle(BreakCarLB[vehicle], vehicle, -0.7, -1.9, -0.3);
		}
		if(VehicleInfo[vehicle][vLockType] == 2)
		{
			VehicleInfo[vehicle][vDamages] += 250;
			BreakCarLB[vehicle] = Create3DTextLabel("250", COLOR_WHITE, 0.0, 0.0, 0.0, 5.0, 0, 0);
			Attach3DTextLabelToVehicle(BreakCarLB[vehicle], vehicle, -0.7, -1.9, -0.3);
		}
		if(VehicleInfo[vehicle][vLockType] == 3)
		{
			VehicleInfo[vehicle][vDamages] += 300;
			BreakCarLB[vehicle] = Create3DTextLabel("300", COLOR_WHITE, 0.0, 0.0, 0.0, 5.0, 0, 0);
			Attach3DTextLabelToVehicle(BreakCarLB[vehicle], vehicle, -0.7, -1.9, -0.3);
		}
		if(VehicleInfo[vehicle][vLockType] == 4)
		{
			VehicleInfo[vehicle][vDamages] += 350;
			BreakCarLB[vehicle] = Create3DTextLabel("350", COLOR_WHITE, 0.0, 0.0, 0.0, 5.0, 0, 0);
			Attach3DTextLabelToVehicle(BreakCarLB[vehicle], vehicle, -0.7, -1.9, -0.3);
		}
		if(VehicleInfo[vehicle][vLockType] == 5)
		{
			BreakCarLB[vehicle] = Create3DTextLabel("400", COLOR_WHITE, 0.0, 0.0, 0.0, 5.0, 0, 0);
			Attach3DTextLabelToVehicle(BreakCarLB[vehicle], vehicle, -0.7, -1.9, -0.3);
			VehicleInfo[vehicle][vDamages] += 400;
		}
		SetVehicleParamsEx(vehicle,gsengine,gslightss,1,gsdoors,gsbonnet,gsboot,1);
		new Float:X, Float:Y, Float:Z;
		GetVehiclePos(vehicle, X, Y, Z);
		SetPVarInt(playerid, "SaveVehicleID", vehicle);
		PlayerInfo[playerid][pToolKit] --;
		VehicleInfo[vehicle][vIsBreak] = true;
		BreakX[vehicle] = X;
		BreakY[vehicle] = Y;
		BreakZ[vehicle] = Z;
		IsBreaking[playerid] = 1;
		IsBreakingIn[playerid] = 1;
		CarTheft(playerid);
		foreach(new i : Player) {
			PlayAudioStreamForPlayer(i, "http://dx.sc.chinaz.com/Files/DownLoad/sound1/201406/4611.mp3", X, Y, Z, 40.0, 1);
		}
	}
	return 1;
}

COMMAND:breakin(playerid, params[])
{
	new string[128];
	new vehicle = PlayerToCar(playerid,2,4.0);
	new ownCar = GetPVarInt(playerid, "PrivateCar");
	new gsengine,gslightss,gsalarm,gsdoors,gsbonnet,gsboot,gsobjective;
	GetVehicleParamsEx(vehicle,gsengine,gslightss,gsalarm,gsdoors,gsbonnet,gsboot,gsobjective);
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "这不能在车上进行偷窃.");
	if(ownCar == vehicle) return SendClientMessage(playerid, COLOR_LIGHTRED, "这是你的私家车... (/lock)");
	if(IsBreaking[playerid] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "你现在正在尝试进入该车. 远离该车任务取消.");
	if(VehicleInfo[vehicle][vType] != VEHICLE_OWNED) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要对私家车使用.");
	if(IsNotLockableWithoutEngine(vehicle)) return SCM(playerid, COLOR_LIGHTRED, "该车没有引擎.");
	if(!VehicleEmpty(vehicle)) return SCM(playerid, COLOR_LIGHTRED, "载具还有其他人! 别做傻事!!");
	if(gsdoors == 0) return SCM(playerid, COLOR_LIGHTRED, "该载具车门是开着的..");

	format(string, sizeof(string),"你正在尝试撬开载具 %s 车锁.", vehicleData[GetVehicleModel(vehicle) - 400][typeName]);
	SendClientMessage(playerid, COLOR_LIGHTGREEN, string);

	if(VehicleInfo[vehicle][vLockType] < 6)
	{
		if(VehicleInfo[vehicle][vLockType] == 0)
		{
			BreakCarLB[vehicle] = Create3DTextLabel("150", COLOR_WHITE, 0.0, 0.0, 0.0, 5.0, 0, 0);
			Attach3DTextLabelToVehicle(BreakCarLB[vehicle], vehicle, -0.7, -1.9, -0.3);
			VehicleInfo[vehicle][vDamages] += 150;
		}
		if(VehicleInfo[vehicle][vLockType] == 1)
		{
			VehicleInfo[vehicle][vDamages] += 200;
			BreakCarLB[vehicle] = Create3DTextLabel("200", COLOR_WHITE, 0.0, 0.0, 0.0, 5.0, 0, 0);
			Attach3DTextLabelToVehicle(BreakCarLB[vehicle], vehicle, -0.7, -1.9, -0.3);
		}
		if(VehicleInfo[vehicle][vLockType] == 2)
		{
			VehicleInfo[vehicle][vDamages] += 250;
			BreakCarLB[vehicle] = Create3DTextLabel("250", COLOR_WHITE, 0.0, 0.0, 0.0, 5.0, 0, 0);
			Attach3DTextLabelToVehicle(BreakCarLB[vehicle], vehicle, -0.7, -1.9, -0.3);
		}
		if(VehicleInfo[vehicle][vLockType] == 3)
		{
			VehicleInfo[vehicle][vDamages] += 300;
			BreakCarLB[vehicle] = Create3DTextLabel("300", COLOR_WHITE, 0.0, 0.0, 0.0, 5.0, 0, 0);
			Attach3DTextLabelToVehicle(BreakCarLB[vehicle], vehicle, -0.7, -1.9, -0.3);
		}
		if(VehicleInfo[vehicle][vLockType] == 4)
		{
			VehicleInfo[vehicle][vDamages] += 350;
			BreakCarLB[vehicle] = Create3DTextLabel("350", COLOR_WHITE, 0.0, 0.0, 0.0, 5.0, 0, 0);
			Attach3DTextLabelToVehicle(BreakCarLB[vehicle], vehicle, -0.7, -1.9, -0.3);
		}
		if(VehicleInfo[vehicle][vLockType] == 5)
		{
			BreakCarLB[vehicle] = Create3DTextLabel("400", COLOR_WHITE, 0.0, 0.0, 0.0, 5.0, 0, 0);
			Attach3DTextLabelToVehicle(BreakCarLB[vehicle], vehicle, -0.7, -1.9, -0.3);
			VehicleInfo[vehicle][vDamages] += 400;
		}
		SetVehicleParamsEx(vehicle,gsengine,gslightss,1,gsdoors,gsbonnet,gsboot,1);
		new Float:X, Float:Y, Float:Z;
		GetVehiclePos(vehicle, X, Y, Z);
		SetPVarInt(playerid, "SaveVehicleID", vehicle);
		PlayerInfo[playerid][pToolKit] --;
		VehicleInfo[vehicle][vIsBreak] = true;
		BreakX[vehicle] = X;
		BreakY[vehicle] = Y;
		BreakZ[vehicle] = Z;
		IsBreaking[playerid] = 1;
		IsBreakingIn[playerid] = 1;
		foreach(new i : Player) {
			PlayAudioStreamForPlayer(i, "http://dx.sc.chinaz.com/Files/DownLoad/sound1/201406/4611.mp3", X, Y, Z, 40.0, 1);
		}
	}
	return 1;
}

COMMAND:shield(playerid,params[])
{
	new string[128];
	if(PlayerInfo[playerid][pSwatCooldown] == 0)
 	{
		if(PlayerInfo[playerid][pSWAT] != 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要在SWAT战术小组内使用.");
		format(string, sizeof(string), "AdmCmd: %s 使用了防爆盾, 获得250生命值与护甲.", GetNameWithSpace(playerid));
		SendMessageToAdmins(string);
  		SendClientMessage(playerid, COLOR_LIGHTRED, "你开启了防爆盾牌, 你的生命值和护甲同时被设置为 250.");
    	PlayerInfo[playerid][pSwatCooldown] = 30;
		SetPlayerHealth(playerid, 250.0);
		SetPlayerArmour(playerid, 250.0);
	}
	else
	{
 		format(string, sizeof(string), "你需要等待 %i 分钟后才可以使用SWAT防爆盾.", PlayerInfo[playerid][pSwatCooldown]);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
	}
	return 1;
}
COMMAND:selfie(playerid,params[])
{
	if(takingselfie[playerid] == 0)
	{
	    GetPlayerPos(playerid,lX[playerid],lY[playerid],lZ[playerid]);
		static Float: n1X, Float: n1Y;
		if(Degree[playerid] >= 360) Degree[playerid] = 0;
		Degree[playerid] += szSpeed;
		n1X = lX[playerid] + szRadius * floatcos(Degree[playerid], degrees);
		n1Y = lY[playerid] + szRadius * floatsin(Degree[playerid], degrees);
		SetPlayerCameraPos(playerid, n1X, n1Y, lZ[playerid] + szHeight);
		SetPlayerCameraLookAt(playerid, lX[playerid], lY[playerid], lZ[playerid]+1);
		SetPlayerFacingAngle(playerid, Degree[playerid] - 90.0);
		takingselfie[playerid] = 1;
		ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
		SendClientMessage(playerid, COLOR_LIGHTRED, "你可以使用Num6和Num4来控制左右方向.");
		SendClientMessage(playerid, COLOR_LIGHTRED, "使用/headmove可以控制头部方向, 按F8自拍. 再次激活此命令关闭自拍");
		return 1;
	}
    if(takingselfie[playerid] == 1)
	{
	    TogglePlayerControllable(playerid,1);
		SetCameraBehindPlayer(playerid);
	    takingselfie[playerid] = 0;
	    ApplyAnimation(playerid, "PED", "ATM", 4.1, 0, 1, 1, 0, 1, 1);
	    return 1;
	}
    return 1;
}

COMMAND:callsign(playerid,params[])
{
    new tmpcar = GetPlayerVehicleID(playerid);
    if(PlayerInfo[playerid][pFaction] > 5 || PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	if(IsPlayerInAnyVehicle(playerid))
    {
  		if(isnull(params)) return SendClientMessage(playerid, 0xFFFFFFFF,"用法: /callsign [内容]");
		if(veicolo_callsign_status[tmpcar] == 0)
        {
	       	veicolo_callsign_testo[tmpcar] = Create3DTextLabel(params, COLOR_WHITE, 0.0, 0.0, 0.0, 15.0, 0, 1);
			Attach3DTextLabelToVehicle(veicolo_callsign_testo[tmpcar], tmpcar, -0.7, -1.9, -0.3);
			veicolo_callsign_status[tmpcar] = 1;
			SendClientMessage(playerid, COLOR_LIGHTRED ,"[LAW] 载具呼号已经成功挂载.");
  		}
  		else
  		{
	  		Delete3DTextLabel(veicolo_callsign_testo[tmpcar]);
			veicolo_callsign_status[tmpcar] = 0;
			SendClientMessage(playerid, COLOR_LIGHTRED ,"[LAW] 载具呼号已经成功移除.");
		}
	}
	else
	{
 		SendClientMessage(playerid,0xFFFFFFFF,"你需要在一台载具内使用.");
	}
	return 1;
}

COMMAND:removegperm(playerid, params[])
{
    new id,
		tagMSG[128],
		string[128],
		tagMSG1[128];

    if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFF0000, "用法: {FFFFFF}/removegperm [对方ID]");
    if(PlayerInfo[playerid][pAdminlevel] >= 1)
	{
	    if(!IsPlayerConnected(id)) return SendClientMessage(playerid, -1, "对方还没有链接服务器.");
	    if(PlayerInfo[id][pSTagPerm] != 1) return SendClientMessage(playerid, COLOR_GREY, "对方没有涂鸦权限.");
		RemovePlayerItemEx(id, 224);
		PlayerInfo[id][pSTagPerm] = 0;
		format(string, sizeof(string), "注意: %s 收回了 %s 涂鸦权限并且移除喷漆罐.", GetNameWithSpace(playerid), GetNameWithSpace(id));
		SendMessageToAdmins(string);
		format(tagMSG, sizeof(tagMSG), "管理员 %s 收回了你的涂鸦权限并且将你的喷漆罐删除了.", GetNameWithSpace(playerid));
		SendClientMessage(id, COLOR_LIGHTBLUE, tagMSG);
		format(tagMSG1, sizeof(tagMSG1), "你收回了 %s 涂鸦权限并且将对方的喷漆罐删除了.", GetNameWithSpace(id));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, tagMSG1);
	}
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;
}
/*COMMAND:testmdc(playerid, params[]) // TEXTDRAW STYLED BY TONY
{
    EnterMDC(playerid);
	gIsInMDC{playerid} = 1;
	return 1;
}*/


COMMAND:deploy(playerid, params[])
{
	new user,
		sendMSG[128],
		var[128],
		sendMSG_2[128];
		
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, 0xFFFF0000, "用法: {FFFFFF}/deploy [对方ID]");
	if(PlayerInfo[playerid][pFaction] == 2 && PlayerInfo[playerid][pRank] > 5)
	{
	    if(PlayerInfo[user][pSidejob] == 0)
	    {
			PlayerInfo[user][pSidejob] = 1;
            format(sendMSG, sizeof(sendMSG), "你将运尸工兼职工作分配给%s [ID:%d]", GetNameWithSpace(user), user);
            SCM(playerid, COLOR_GREY, sendMSG);
			format(sendMSG_2, sizeof(sendMSG_2), "%s [ID:%d] 将运尸工兼职工作分配给你", GetNameWithSpace(playerid), playerid);
			SCM(user, COLOR_GREY, sendMSG_2);
			format(var, sizeof(var), "[GOV] LAFD: %s [ID:%d] 将运尸工职位分配给 %s [ID:%d]", GetNameWithSpace(playerid), playerid, GetNameWithSpace(user), user);
			foreach(new i : Player)
			{
			    if(PlayerInfo[i][pFaction] == 2)
				{
					SendClientMessage(i, COLOR_EMTRED, var);
				}
			}
			SendMessageToAdmins(var);
			return 1;
		}
		else
		{
		    PlayerInfo[user][pSidejob] = 0;
            format(sendMSG, sizeof(sendMSG), "你请辞了 %s [ID:%d], 他不再担任运尸工作!", GetNameWithSpace(user), user);
            SCM(playerid, COLOR_GREY, sendMSG);
			format(sendMSG_2, sizeof(sendMSG_2), "%s [ID:%d] 将你开除, 你现在不再担任运尸工作", GetNameWithSpace(playerid), playerid);
			SCM(user, COLOR_GREY, sendMSG_2);
			format(var, sizeof(var), "[GOV] LAFD: %s [ID:%d] 请辞了 %s [ID:%d], 对方不再担任运尸工作.", GetNameWithSpace(playerid), playerid, GetNameWithSpace(user), user);
			foreach(new i : Player)
			{
			    if(PlayerInfo[i][pFaction] == 2)
				{
					SendClientMessage(i, COLOR_EMTRED, var);
				}
			}
			SendMessageToAdmins(var);
		    return 1;
		}
	}
	else
	{
	    SCM(playerid, COLOR_LIGHTRED, "错误: 缺少权限!");
	}
	return 1;
}

COMMAND:givespraycan(playerid, params[])
{
    new id,
		tagMSG[128],
		string[128],
		tagMSG1[128];
		
    if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFF0000, "用法: {FFFFFF}/givespraycan [对方ID]");
    if(PlayerInfo[playerid][pFaction] > 5 && PlayerInfo[playerid][pRank] >= 2)
	{
	    if(!IsPlayerConnected(id)) return SendClientMessage(playerid, -1, "对方还没有链接服务器.");
	    if(PlayerInfo[id][pSTagPerm] == 1 && itemInPossession(id, 224) == 0) return SendClientMessage(playerid, COLOR_GREY, "对方已经拥有了涂鸦罐.");
		new Float:X,
			Float:Y,
			Float:Z;

		GetPlayerPos(id, X, Y, Z);
		if(!IsPlayerInRangeOfPoint(playerid, 3, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
		    if(PlayerInfo[playerid][pRank] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "你至少需要阶级2才能给予喷漆罐.");
			SetPlayerItem(id, 224, 0);
			PlayerInfo[id][pSTagPerm] = 1;
			format(string, sizeof(string), "注意: %s 给了 %s 涂鸦权限和喷漆罐.", GetNameWithSpace(playerid), GetNameWithSpace(id));
			SendMessageToAdmins(string);
			format(tagMSG, sizeof(tagMSG), "提示: %s 给了你一瓶喷漆罐.", GetNameWithSpace(playerid));
			SendClientMessage(id, COLOR_LIGHTBLUE, tagMSG);
			format(tagMSG1, sizeof(tagMSG1), "提示: 你给了 %s 一瓶喷漆罐.", GetNameWithSpace(id));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, tagMSG1);
	}
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "你所在的组织无法使用该指令.");
	}
	return 1;
}

SAKURACMD:(spraycar)
{
		new string[128], pfixName[MAX_PLAYER_NAME], mName[MAX_PLAYER_NAME], pID;
	 	GetPlayerName(pID, pfixName, sizeof(pfixName));
		GetPlayerName(playerid, mName, sizeof(mName));
		MechVehID = GetPlayerVehicleID(pID);
		if(sscanf(params, "uii", pID, mechpick, mechcolor)) return SendClientMessage(playerid, -1, "用法: /spray [ID] [类型(1/2)][颜色ID]");
		if(mechpick > 2 || mechpick < 1) return SendClientMessage(playerid, COLOR_LIGHTRED,"类型必须在1-2之间.");
		if(mechcolor > 126 || mechcolor < 0) return SendClientMessage(playerid, COLOR_LIGHTRED,"颜色ID不能低于0或者大于126.");
		if(ServiceOffer[pID][0] == 1) return SCM(playerid, COLOR_LIGHTRED, "对方已经接受了汽修服务.");
		if(Service[playerid][0] == 1) return SCM(playerid, COLOR_LIGHTRED, "你正在工作, 请不要分心!");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid, COLOR_GREY, "你需要在Towtruck里使用该指令.");
		format(string, sizeof(string), "%s 为您提供换漆服务. 颜色选取: {FFFFFF}%d{468CFF}, 颜色ID: {FFFFFF}%d", mName, mechpick, mechcolor);
		SendClientMessage(pID, COLOR_LIGHTBLUE, string);
		SendClientMessage(pID, COLOR_LIGHTBLUE, "使用 /acceptmeh 接受服务.");
		ServiceOffer[pID][0] = 1;
	return 1;
}

SAKURACMD:(service)
{
		new string[128], item[32], pID, mName[MAX_PLAYER_NAME], pfixName[MAX_PLAYER_NAME];
		if(sscanf(params, "s[32] ", item))
		{
		    SendClientMessage(playerid, -1, "用法: /service [选项]");
		    SendClientMessage(playerid, -1, "可用: bodywork[修复外观], tuneup[更换引擎], spray[载具钣金]");
		    return 1;
		}
		if(strcmp(item,"bodywork",true) == 0)
		{
		    if (sscanf(params, "s[32]u", item, pID)) return SendClientMessage(playerid, -1, "用法: /service bodywork [ID]");
		    if(ServiceOffer[pID][1] == 1) return SCM(playerid, COLOR_LIGHTRED, "对方已经接收到了汽修服务请求.");
		    if(Service[playerid][1] == 1) return SCM(playerid, COLOR_LIGHTRED, "你正在工作, 请不要分心!");
		    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid, COLOR_GREY, "你需要在Towtruck里使用该指令.");
	        GetPlayerName(playerid, mName, sizeof(mName));
			GetPlayerName(pID, pfixName, sizeof(pfixName));
			format(string, sizeof(string), "%s 为您提供外观修复服务!", mName);
		    SendClientMessage(pID, COLOR_LIGHTBLUE, string);
		    SendClientMessage(pID, COLOR_LIGHTBLUE, "使用 /acceptmeh 接受服务!");
		    format(string, sizeof(string), "你为 %s 提供外观修复服务.", pfixName);
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			ServiceOffer[pID][1] = 1;
          	new Float:vehx, Float:vehy, Float:vehz;
          	GetVehiclePos(GetPlayerVehicleID(pID), vehx, vehy, vehz);
			MechVehID = GetPlayerVehicleID(pID);
			MechCar[1] = vehx;
			MechCar[2] = vehy;
			MechCar[3] = vehz;
		}
		else if(strcmp(item,"engine",true) == 0) {
		    if(sscanf(params, "s[32]u",item, pID)) return SendClientMessage(playerid, -1, "用法: /service tuneup [ID]");
		    if(ServiceOffer[pID][2] == 1) return SCM(playerid, COLOR_LIGHTRED, "对方已经接受了汽修服务.");
		    if(Service[playerid][2] == 1) return SCM(playerid, COLOR_LIGHTRED, "你正在工作, 请不要分心!");
		    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid, COLOR_GREY, "你需要在Towtruck里使用该指令.");
	        GetPlayerName(playerid, mName, sizeof(mName));
			GetPlayerName(pID, pfixName, sizeof(pfixName));
			format(string, sizeof(string), "%s 为您提供引擎更换服务!", mName);
		    SendClientMessage(pID, COLOR_LIGHTBLUE, string);
		    SendClientMessage(pID, COLOR_LIGHTBLUE, "使用 /acceptmeh 接受服务!");
		    format(string, sizeof(string), "你为 %s 提供引擎更换服务.", pfixName);
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			ServiceOffer[pID][2] = 1;
			MechVehID = GetPlayerVehicleID(pID);
			new Float:vehx, Float:vehy, Float:vehz;
          	GetVehiclePos(GetPlayerVehicleID(pID), vehx, vehy, vehz);
			MechVehID = GetPlayerVehicleID(pID);
			MechCar[1] = vehx;
			MechCar[2] = vehy;
			MechCar[3] = vehz;
		}
		else if(strcmp(item,"spray",true) == 0)
		{
		    MechVehID = GetPlayerVehicleID(pID);
		    if(sscanf(params, "s[32]uii", item, pID, mechpick, mechcolor)) return SendClientMessage(playerid, -1, "用法: /service spray [ID] [类型(1/2)][颜色ID]");
			if(mechpick > 2 || mechpick < 1) return SendClientMessage(playerid, COLOR_LIGHTRED,"类型必须在1-2之间.");
			if(mechcolor > 126 || mechcolor < 0) return SendClientMessage(playerid, COLOR_LIGHTRED,"颜色ID不能低于0或者大于126.");
			if(ServiceOffer[pID][0] == 1) return SCM(playerid, COLOR_LIGHTRED, "对方已经接受了汽修服务.");
			if(Service[playerid][0] == 1) return SCM(playerid, COLOR_LIGHTRED, "你正在工作, 请不要分心!");
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid, COLOR_GREY, "你需要在Towtruck里使用该指令.");
			format(string, sizeof(string), "%s 为您提供换漆服务. 颜色选取: {FFFFFF}%d{468CFF}, 颜色ID: {FFFFFF}%d", mName, mechpick, mechcolor);
			SendClientMessage(pID, COLOR_LIGHTBLUE, string);
			SendClientMessage(pID, COLOR_LIGHTBLUE, "使用 /acceptmeh 接受服务.");
			format(string, sizeof(string), "你为 %s 提供换漆服务.", pfixName);
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			ServiceOffer[pID][0] = 1;
			MechVehID = GetPlayerVehicleID(pID);
			new Float:vehx, Float:vehy, Float:vehz;
          	GetVehiclePos(GetPlayerVehicleID(pID), vehx, vehy, vehz);
			MechVehID = GetPlayerVehicleID(pID);
			MechCar[1] = vehx;
			MechCar[2] = vehy;
			MechCar[3] = vehz;
		}
	return 1;
}

SAKURACMD:(acceptmeh)
{
    new Float: X, Float: Y, Float: Z, pID, mName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, mName, sizeof(mName));
	if(ServiceOffer[playerid][0] == 1)
	{
 		if(IsPlayerInAnyVehicle(pID)) {
			RemovePlayerFromVehicle(pID);
		}
		SendClientMessage(playerid, -1, "你接受了汽修服务!");
		SendClientMessage(pID, -1, "对方接受了汽修服务!");
		GetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
		MechCar[1] = X;
		MechCar[2] = Y;
		MechCar[3] = Z;
		MechSpray[pID] = 1;
		Service[pID][0] = 1;
		SetPVarInt(pID, "SavePlayerID", GetPlayerID(mName));
	}
	else if(ServiceOffer[playerid][1] == 1)
	{
		if(IsPlayerInAnyVehicle(pID)) {
			RemovePlayerFromVehicle(pID);
		}
		SendClientMessage(playerid, -1, "你接受了汽修服务!");
		SendClientMessage(pID, -1, "对方接受了汽修服务!");
		GetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
		MechCar[1] = X;
		MechCar[2] = Y;
		MechCar[3] = Z;
		Service[pID][1] = 1;
		SetPVarInt(pID, "SavePlayerID", GetPlayerID(mName));
	}
	else if(ServiceOffer[playerid][2] == 1)
	{
		if(IsPlayerInAnyVehicle(pID)) {
			RemovePlayerFromVehicle(pID);
		}
		SendClientMessage(playerid, -1, "你接受了汽修服务!");
		SendClientMessage(pID, -1, "对方接受了汽修服务!");
		GetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
		MechCar[1] = X;
		MechCar[2] = Y;
		MechCar[3] = Z;
		Service[pID][2] = 1;
		SetPVarInt(pID, "SavePlayerID", GetPlayerID(mName));
	}
	else return SendClientMessage(playerid, COLOR_LIGHTRED, "没有人为你提供汽修服务!");
	return 1;
}
SAKURACMD:(graffiti) //
{
	if(GetPlayerWeapon(playerid) == 41 || PlayerInfo[playerid][pFaction] > 5)
	{
		GRAFFDIALOG
	} else { SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你不是官方组织成员或者你没有喷漆罐."); }
	return 1;
}
XB_CMD:(getf)
{
	new wid=XB_GetNearestFurniture(playerid);
	if(XB_HaveFurniture(playerid))return SendClientMessage(playerid,-1,"你手上已经有一个家具了");
	if(wid==-1) return SendClientMessage(playerid,-1,"附近没有任何家具");
    if(strlen(FurnitureInfo[wid][Owner])==0)
	{
		DestroyDynamicObject(FurnitureInfo[wid][FObject]);
		FurnitureInfo[wid][Spawn]=0;
		format(FurnitureInfo[wid][Owner],30,PlayerInfo[playerid][pName]);
		SendClientMessage(playerid,COLOR_YELLOW2,"你捡起了那个家具");
		if(xb_flabelexist[playerid])
        {
            DeletePlayer3DTextLabel(playerid, xb_flabel[playerid]);
            xb_flabelexist[playerid]=false;
        }
	    CancelEdit(playerid);
	}
	else
	{
		if(strcmp(FurnitureInfo[wid][Owner],PlayerInfo[playerid][pName])==0)
		{
            DestroyDynamicObject(FurnitureInfo[wid][FObject]);
            FurnitureInfo[wid][Spawn]=0;
            SendClientMessage(playerid,COLOR_YELLOW2,"你捡起了那个家具");
            if(xb_flabelexist[playerid])
            {
                DeletePlayer3DTextLabel(playerid, xb_flabel[playerid]);
                xb_flabelexist[playerid]=false;
            }
            CancelEdit(playerid);
		}else {
		if(PlayerInfo[playerid][pAdminlevel]<3||GetPVarInt(playerid, "AdminDuty")==0)
		{
		    SendClientMessage(playerid,-1,"那个家具不是你的");
		}
		else
		{
            DestroyDynamicObject(FurnitureInfo[wid][FObject]);
            FurnitureInfo[wid][Spawn]=0;
            format(FurnitureInfo[wid][Owner],30,PlayerInfo[playerid][pName]);
		    SendClientMessage(playerid,COLOR_YELLOW2,"你使用管理员权限捡起了那个家具");
		}
		if(xb_flabelexist[playerid])
        {
            DeletePlayer3DTextLabel(playerid, xb_flabel[playerid]);
            xb_flabelexist[playerid]=false;
        }
		CancelEdit(playerid);
		}
	}
	return 1;
}
COMMAND:explode(playerid, params[])
{
    new string[128], user;
    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /explode [玩家ID]");
    if(PlayerInfo[playerid][pAdminlevel] > 4)
    {
        new Float:x, Float:y, Float:z;
    	GetPlayerPos(user, x, y, z);
        format(string, sizeof(string), "AdmCmd: %s has exploded %s.", GetNameWithSpace(playerid), GetNameWithSpace(user));
		SendMessageToAdmins(string);
    	CreateExplosion(x, y, z, 12, 10.0);
    }
    else
    {
        SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
    }
    return 1;
}
    
COMMAND:flashbang(playerid, params[])
{
	new weaponId;
	new ammoAmount;
 	GetPlayerWeaponData(playerid, 8, weaponId, ammoAmount);
	if(PlayerInfo[playerid][pAdminlevel] > 4)
	{
	 	if (weaponId == WEAPON_GRENADE && ammoAmount > 0)
	 	{
	 	    return SendClientMessage(playerid, COLOR_LIGHTRED, "你之前已经拥有了一个闪光弹.");
	 	}

		SendClientMessage(playerid, COLOR_LIGHTRED, "你安装了闪光弹, 可以照成临时致盲.");
		GivePlayerWeapon(playerid, WEAPON_GRENADE, 1);
	}
	return 1;
}

ALTCOMMAND:removecp->killcheckpoint;
COMMAND:killcheckpoint(playerid, params[])
{
    DisablePlayerCheckpoint(playerid);
    DisablePlayerRaceCheckpoint(playerid);
    RemovePlayerMapIcon(playerid, XB_TARGET_MAPICON);
    return 1;
}


COMMAND:checkdrugs(playerid, params[])
{
    new user;
    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /checkdrugs [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
 	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效ID.");
 	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "对方为NPC.");
	new lineStr[128];
	new Float:X,
		Float:Y,
		Float:Z;

	GetPlayerPos(user, X, Y, Z);

	if(IsPlayerInRangeOfPoint(playerid, 2.5, X, Y, Z))
	{
		format(lineStr, sizeof(lineStr), "%s 的毒品:", GetNameWithSpace(user));
		SendClientMessage(playerid, COLOR_LIGHTGREEN, lineStr);
		format(lineStr, sizeof(lineStr), "大麻: [%d], 可卡因: [%d], 天使粉: [%d], 快克: [%d], 海洛因: [%d]", PlayerInfo[user][pWeed], PlayerInfo[user][pCocaine], PlayerInfo[user][pEcstasy], PlayerInfo[user][pCrack], PlayerInfo[user][pHeroin]);
		SendClientMessage(playerid, COLOR_GREY, lineStr);
		format(lineStr, sizeof(lineStr), "%s 搜索你身上的毒品.", GetNameWithSpace(playerid, 1));
		SendClientMessage(user, COLOR_LIGHTRED, lineStr);
		format(lineStr, sizeof(lineStr), "你搜索了 %s 身上是否存在毒品.", GetNameWithSpace(user, 1));
		SendClientMessage(playerid, COLOR_LIGHTGREEN, lineStr);
	}
	return 1;
}

COMMAND:takedrugs(playerid, params[])
{
    new user;
    if(PlayerInfo[playerid][pFaction] == 1)
	{
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /takedrugs [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效ID.");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "对方为NPC.");

		new Float:X,
		Float:Y,
		Float:Z;
		GetPlayerPos(user, X, Y, Z);
		
		if(!IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你不在该玩家附近.");
		new string[128];
		format(string, sizeof(string), "%s 拿走了你的毒品.", GetNameWithSpace(playerid, 1));
		SendClientMessage(user, COLOR_LIGHTRED, string);
		format(string, sizeof(string), "你拿走了 %s 的毒品.", GetNameWithSpace(user, 1));
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		PlayerInfo[user][pWeed] = 0;
		PlayerInfo[user][pCocaine] = 0;
		PlayerInfo[user][pEcstasy] = 0;
		PlayerInfo[user][pCrack] = 0;
		PlayerInfo[user][pHeroin] = 0;

	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

// drugs

COMMAND:givedrug(playerid, params[])
{
	new usage[128], targetid, amount, string[128], me[128];
    if(sscanf(params, "s[128]U(999)I(0)", usage, targetid, amount)) SendClientMessage(playerid, COLOR_GREEN, "用法: /givedrug [weed(大麻)/cocaine(可卡因)/ecstasy(天使粉)/crack(快克)/heroin(海洛因)] [玩家ID] [数量]");
	else
	{
	    if(IsPlayerInWater(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "你在水中无法使用该指令.");
	    if(strcmp(usage, "weed", true) == 0)
		{
			if(amount > PlayerInfo[playerid][pWeed]) return SendClientMessage(playerid, COLOR_GREY, "你没有该数量的毒品.");
			if(PlayerInfo[playerid][pWeed] > 0)
			{
				if(PlayerToPlayer(playerid,targetid,3.0))
	   			{
	   			    format(me, sizeof(me), "> %s 给了 %s 一个物品.", GetNameWithSpace(playerid, 1), GetNameWithSpace(targetid, 1));
					SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
			        format(string, sizeof(string), "你给了对方 %d 克大麻.", amount);
			        SendClientMessage(playerid, COLOR_LIGHTRED, string);
			        format(string, sizeof(string), "%s 给了你 %d 克大麻.", GetNameWithSpace(playerid, 1), amount);
			        SendClientMessage(targetid, COLOR_LIGHTRED, string);
					PlayerInfo[playerid][pWeed] -= amount;
					PlayerInfo[targetid][pWeed] += amount;
   					ApplyAnimation(playerid,"DEALER","shop_pay",3.0,0,0,0,0,0);
			    }
			}
		}
		if(strcmp(usage, "cocaine", true) == 0)
		{
			if(amount > PlayerInfo[playerid][pCocaine]) return SendClientMessage(playerid, COLOR_GREY, "你没有该数量的毒品.");
			if(PlayerInfo[playerid][pCocaine] > 0)
			{
				if(PlayerToPlayer(playerid,targetid,3.0))
	   			{
	   			    format(me, sizeof(me), "> %s 给了 %s 一个物品.", GetNameWithSpace(playerid, 1), GetNameWithSpace(targetid, 1));
					SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
			        format(string, sizeof(string), "你给了对方 %d 克可卡因.", amount);
			        SendClientMessage(playerid, COLOR_LIGHTRED, string);
			        format(string, sizeof(string), "%s 给了你 %d 克可卡因.", GetNameWithSpace(playerid, 1), amount);
			        SendClientMessage(targetid, COLOR_LIGHTRED, string);
					PlayerInfo[playerid][pCocaine] -= amount;
					PlayerInfo[targetid][pCocaine] += amount;
   					ApplyAnimation(playerid,"DEALER","shop_pay",3.0,0,0,0,0,0);
			    }
			}
		}
		if(strcmp(usage, "ecstasy", true) == 0)
		{
			if(amount > PlayerInfo[playerid][pEcstasy]) return SendClientMessage(playerid, COLOR_GREY, "你没有该数量的毒品.");
			if(PlayerInfo[playerid][pEcstasy] > 0)
			{
				if(PlayerToPlayer(playerid,targetid,3.0))
	   			{
                    format(me, sizeof(me), "> %s 给了 %s 一个物品.", GetNameWithSpace(playerid, 1), GetNameWithSpace(targetid, 1));
					SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
			        format(string, sizeof(string), "你给了对方 %d 袋天使粉.", amount);
			        SendClientMessage(playerid, COLOR_LIGHTRED, string);
			        format(string, sizeof(string), "%s 给了你 %d 袋天使粉.", GetNameWithSpace(playerid, 1), amount);
			        SendClientMessage(targetid, COLOR_LIGHTRED, string);
					PlayerInfo[playerid][pEcstasy] -= amount;
					PlayerInfo[targetid][pEcstasy] += amount;
   					ApplyAnimation(playerid,"DEALER","shop_pay",3.0,0,0,0,0,0);
			    }
			}
		}
		if(strcmp(usage, "crack", true) == 0)
		{
			if(amount > PlayerInfo[playerid][pCrack]) return SendClientMessage(playerid, COLOR_GREY, "你没有该数量的毒品.");
			if(PlayerInfo[playerid][pCrack] > 0)
			{
				if(PlayerToPlayer(playerid,targetid,3.0))
	   			{
                    format(me, sizeof(me), "> %s 给了 %s 一个物品.", GetNameWithSpace(playerid, 1), GetNameWithSpace(targetid, 1));
					SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
			        format(string, sizeof(string), "你给了对方 %d 克快克.", amount);
			        SendClientMessage(playerid, COLOR_LIGHTRED, string);
			        format(string, sizeof(string), "%s 给了你 %d 克快克.", GetNameWithSpace(playerid, 1), amount);
			        SendClientMessage(targetid, COLOR_LIGHTRED, string);
					PlayerInfo[playerid][pCrack] -= amount;
					PlayerInfo[targetid][pCrack] += amount;
   					ApplyAnimation(playerid,"DEALER","shop_pay",3.0,0,0,0,0,0);
			    }
			}
		}
  		if(strcmp(usage, "heroin", true) == 0)
		{
			if(amount > PlayerInfo[playerid][pHeroin]) return SendClientMessage(playerid, COLOR_GREY, "你没有该数量的毒品.");
			if(PlayerInfo[playerid][pHeroin] > 0)
			{
				if(PlayerToPlayer(playerid,targetid,3.0))
	   			{

                    format(me, sizeof(me), "> %s 给了 %s 一个物品.", GetNameWithSpace(playerid, 1), GetNameWithSpace(targetid, 1));
					SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
			        format(string, sizeof(string), "你给了对方 %d 克海洛因.", amount);
			        SendClientMessage(playerid, COLOR_LIGHTRED, string);
			        format(string, sizeof(string), "%s 给了你 %d 克海洛因.", GetNameWithSpace(playerid, 1), amount);
			        SendClientMessage(targetid, COLOR_LIGHTRED, string);
					PlayerInfo[playerid][pHeroin] -= amount;
					PlayerInfo[targetid][pHeroin] += amount;
   					ApplyAnimation(playerid,"DEALER","shop_pay",3.0,0,0,0,0,0);
			    }
			}
		}
	}
	return 1;
}

COMMAND:mixdrug(playerid, params[])
{
	new usage[128];
    if(sscanf(params, "s[128]", usage)) SendClientMessage(playerid, COLOR_GREY, "用法: /mixdrug [cocaine]");
	else
	{
	    if(strcmp(usage, "cocaine", true) == 0)
		{
		    if(strcmp(HouseInfo[GetPlayerVirtualWorld(playerid)][hOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(HouseInfo[GetPlayerVirtualWorld(playerid)][hOwner]) && GetPVarInt(playerid, "InHouse") == 1)
			{
				ShowPlayerDialog(playerid,DIALOG_CRACK, DIALOG_STYLE_LIST, "毒品加工","快克" ,"选择", "取消");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "使用5克可卡因加工出20克快克.");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要在房子里使用.");
			}
		}
	}
	return 1;
}

COMMAND:usedrug(playerid, params[])
{
	new usage[128], string[128], me[128], string54[128];
    if(sscanf(params, "s[128]", usage)) SendClientMessage(playerid, COLOR_GREY, "用法: /usedrug [weed/cocaine/ecstasy/crack/heroin]");
	else
	{
	    new Float:PlayersArmour;
		GetPlayerArmour(playerid,PlayersArmour);
		if(strcmp(usage, "weed", true) == 0)
		{
			if(PlayerInfo[playerid][pWeed] == 0) return SendClientMessage(playerid, COLOR_GREY, "你没有大麻.");
			if(DrugTime[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "你需要冷静一下.");
			if(PlayerInfo[playerid][pWeed] > 0)
			{
				new armour = floatround(PlayersArmour), amount2;
    			amount2 = armour+10;
    			if(amount2 > 25)
				{
					SetPlayerArmour(playerid, 30);
				}
				else
				{
                    SetPlayerArmour(playerid, PlayersArmour + 5.0);
				}
				format(me, sizeof(me), "** %s 点燃了一根大麻卷烟.", GetNameWithSpace(playerid, 1));
				SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
				format(string54, sizeof(string54), "> %s 点燃了一根大麻卷烟.", GetNameWithSpace(playerid, 1));
				SendClientMessage(playerid, COLOR_PINK, string54);
	    		PlayerPlaySound(playerid,1150, 0.0, 0.0, 0.0);
	    		PlayerInfo[playerid][pWeedAddiction] += 2;
  				PlayerInfo[playerid][pWeed] -= 1;
	    		DrugTime[playerid] = 300;
	    		WeedTime[playerid] = 300;
	    		SetPlayerHealth(playerid, 100.0);
   				format(string, sizeof(string), "你使用了1克大麻, 还剩%d克.", PlayerInfo[playerid][pWeed]);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, string);



			}
		}
		if(strcmp(usage, "cocaine", true) == 0)
		{
			if(PlayerInfo[playerid][pCocaine] == 0) return SendClientMessage(playerid, COLOR_GREY, "你没有可卡因.");
			if(DrugTime[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "你需要冷静一下.");
			if(PlayerInfo[playerid][pCocaine] > 0)
			{
				format(me, sizeof(me), "** %s 将可卡因粉末用白纸卷起然后吸食.", GetNameWithSpace(playerid, 1));
				SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
				format(string54, sizeof(string54), "> %s 将可卡因粉末用白纸卷起然后吸食.", GetNameWithSpace(playerid, 1));
				SendClientMessage(playerid, COLOR_PINK, string54);
	    		PlayerPlaySound(playerid,1150, 0.0, 0.0, 0.0);
	    		PlayerInfo[playerid][pCocaineAddiction] += 5;
  				PlayerInfo[playerid][pCocaine] -= 1;
	    		DrugTime[playerid] = 300;
	    		CocaineTime[playerid] = 300;
	    		SetPlayerArmour(playerid, 50.0);
   				format(string, sizeof(string), "你使用了1克海洛因, 还剩%d克.", PlayerInfo[playerid][pCocaine]);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, string);

			}
		}
		if(strcmp(usage, "ecstasy", true) == 0)
		{
			if(PlayerInfo[playerid][pEcstasy] == 0) return SendClientMessage(playerid, COLOR_GREY, "你没有天使粉.");
			if(DrugTime[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "你需要冷静一下.");
			if(PlayerInfo[playerid][pEcstasy] > 0)
			{
				new armour = floatround(PlayersArmour), amount2;
    			amount2 = armour+10;
    			if(amount2 > 20)
				{
					SetPlayerArmour(playerid, 25);
				}
				else
				{
                    SetPlayerArmour(playerid, PlayersArmour + 5.0);
				}
				format(me, sizeof(me), "** %s 将天使粉加入饮料中饮用.", GetNameWithSpace(playerid, 1));
				SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
				format(string54, sizeof(string54), "> %s 将天使粉加入饮料中饮用.", GetNameWithSpace(playerid, 1));
				SendClientMessage(playerid, COLOR_PINK, string54);
	    		PlayerPlaySound(playerid,1150, 0.0, 0.0, 0.0);
	    		PlayerInfo[playerid][pEcstasyAddiction] += 3;
  				PlayerInfo[playerid][pEcstasy] -= 1;
	    		DrugTime[playerid] = 300;
	    		EcstasyTime[playerid] = 300;
   				format(string, sizeof(string), "你使用了一瓶天使粉, 还剩%d瓶.", PlayerInfo[playerid][pEcstasy]);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, string);

			}
		}
		if(strcmp(usage, "crack", true) == 0)
		{
			if(PlayerInfo[playerid][pCrack] == 0) return SendClientMessage(playerid, COLOR_GREY, "你没有任何快克.");
			if(DrugTime[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "你需要冷静一下");
			if(PlayerInfo[playerid][pCrack] > 0)
			{
				new armour = floatround(PlayersArmour), amount2;
    			amount2 = armour+10;
    			if(amount2 > 10)
				{
					SetPlayerArmour(playerid, 25);
				}
				else
				{
                    SetPlayerArmour(playerid, PlayersArmour + 15.0);
				}
				format(me, sizeof(me), "** %s 用过吸管吸了一些快克.", GetNameWithSpace(playerid, 1));
				SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
				format(string54, sizeof(string54), "> %s 用过吸管吸了一些快克.", GetNameWithSpace(playerid, 1));
				SendClientMessage(playerid, COLOR_PINK, string54);
	    		PlayerPlaySound(playerid,1150, 0.0, 0.0, 0.0);
	    		PlayerInfo[playerid][pCrackAddiction] += 10;
  				PlayerInfo[playerid][pCrack] -= 1;
	    		DrugTime[playerid] = 600;
	    		CrackTime[playerid] = 600;
   				format(string, sizeof(string), "你使用了1克快克, 还剩%d克.", PlayerInfo[playerid][pCrack]);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, string);

			}
		}
		if(strcmp(usage, "heroin", true) == 0)
		{
			if(PlayerInfo[playerid][pHeroin] == 0) return SendClientMessage(playerid, COLOR_GREY, "你没有海洛因.");
			if(DrugTime[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "你需要冷静一下");
			if(PlayerInfo[playerid][pHeroin] > 0)
			{
				new armour = floatround(PlayersArmour), amount2;
    			amount2 = armour+10;
    			if(amount2 > 10)
				{
					SetPlayerArmour(playerid, 20);
				}
				else
				{
                    SetPlayerArmour(playerid, PlayersArmour + 10.0);
				}
				format(me, sizeof(me), "** %s 使用注射器将海洛因通过静脉注射进入人体.", GetNameWithSpace(playerid, 1));
				SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
				format(string54, sizeof(string54), "> %s 使用注射器将海洛因通过静脉注射进入人体.", GetNameWithSpace(playerid, 1));
				SendClientMessage(playerid, COLOR_PINK, string54);
	    		PlayerPlaySound(playerid,1150, 0.0, 0.0, 0.0);
	    		PlayerInfo[playerid][pHeroinAddiction] += 2;
  				PlayerInfo[playerid][pHeroin] -= 1;
	    		DrugTime[playerid] = 600;
	    		HeroinTime[playerid] = 600;
	    		SetPlayerHealth(playerid, 100.0);
   				format(string, sizeof(string), "你使用了1克海洛因, 还有%d克.", PlayerInfo[playerid][pHeroin]);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, string);

			}
		}
	}
	return 1;
}

COMMAND:plant(playerid, params[])
{
	new usage[128], type[128], targetid, amount;
    if(sscanf(params, "s[128]S(none)[128]U(999)I(0)", usage, type, targetid, amount)) SendClientMessage(playerid, COLOR_GREY, "用法: /plant [weed/opium]");
	else
	{
		if(strcmp(usage, "weed", true) == 0)
		{
		    if(PlayerInfo[playerid][pFertilizer] == 0) return SendClientMessage(playerid, COLOR_GREY, "你必须有一些肥料种植作物.");
			if(PlayerInfo[playerid][pWeedSeeds] == 0) return SendClientMessage(playerid, COLOR_GREY, "你必须有至少一个大麻种子植物.");
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_GREY, "你需要步行.");
		    if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "你只能在户外植物.");
		    
		    for(new weed = 0; weed < sizeof(WeedInfo); weed++)
    	    {
				if(WeedInfo[weed][weedPlanted] == 0 && WeedInfo[weed][weedTime] == 0)
				{
				    new Float:X,Float:Y,Float:Z;

                    PlayerInfo[playerid][pWeedSeeds] --;
                    PlayerInfo[playerid][pFertilizer] --;
                    ApplyAnimation(playerid, "BOMBER","BOM_Plant_In",4.0,0,0,0,0,0);
		            GetPlayerPos(playerid, X, Y, Z);
		            WeedInfo[weed][weedObject] = CreateDynamicObject(3409, X, Y, Z-1.5, 0, 0, 0, GetPlayerVirtualWorld(playerid));
		            WeedInfo[weed][weedX] = X;
		    		WeedInfo[weed][weedY] = Y;
		    		WeedInfo[weed][weedZ] = Z;
		    		WeedInfo[weed][weedWorld] = GetPlayerVirtualWorld(playerid);
		    		WeedInfo[weed][weedTime] = 30;
		    		WeedInfo[weed][weedPlanted] = 1;
	                strmid(WeedInfo[weed][weedName], PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 255);
		    		SendClientMessage(playerid,COLOR_GREEN,"你成功种植了大麻. 该种植物需要30分钟成长, 你要多多关心下植物状态.");
		    		return 1;
				}
			}
		}
		else if(strcmp(usage, "opium", true) == 0)
		{
		    if(PlayerInfo[playerid][pFertilizer] == 0) return SendClientMessage(playerid, COLOR_GREY, "你必须有一些肥料种植作物.");
			if(PlayerInfo[playerid][pOpiumSeeds] == 0) return SendClientMessage(playerid, COLOR_GREY, "你必须有至少一个罂粟种子植物.");
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_GREY, "你需要步行.");
		    if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "你只能在户外植物.");

		    for(new opium = 0; opium < sizeof(OpiumInfo); opium++)
    	    {
				if(OpiumInfo[opium][opiumPlanted] == 0 && OpiumInfo[opium][opiumTime] == 0)
				{
				    new Float:X,Float:Y,Float:Z;
				    
                    PlayerInfo[playerid][pOpiumSeeds] --;
                    PlayerInfo[playerid][pFertilizer] --;
                    ApplyAnimation(playerid, "BOMBER","BOM_Plant_In",4.0,0,0,0,0,0);
		            GetPlayerPos(playerid, X, Y, Z);
		            OpiumInfo[opium][opiumObject] = CreateDynamicObject(701, X, Y, Z-1.0, 0, 0, 0, GetPlayerVirtualWorld(playerid));
		            OpiumInfo[opium][opiumX] = X;
		    		OpiumInfo[opium][opiumY] = Y;
		    		OpiumInfo[opium][opiumZ] = Z;
		    		OpiumInfo[opium][opiumWorld] = GetPlayerVirtualWorld(playerid);
		    		OpiumInfo[opium][opiumTime] = 45;
		    		OpiumInfo[opium][opiumPlanted] = 1;
	                strmid(OpiumInfo[opium][opiumName], PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 255);
		    		SendClientMessage(playerid,COLOR_GREEN,"你成功种植了罂粟. 该种植物需要45分钟成长, 你要多多关心下植物状态.");
		    		return 1;
				}
			}
		}
	}
	return 1;
}
COMMAND:pick(playerid, params[])
{
	new usage[128], string[128];
    if(sscanf(params, "s[128]", usage)) SendClientMessage(playerid, COLOR_GREY, "用法: /pick [weed(大麻)/opium(罂粟)/shell(子弹壳)]");
	else
	{
		if(strcmp(usage, "weed", true) == 0)
		{
			if (GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_GREY, "你需要步行.");
		    for(new weed = 0; weed < sizeof(WeedInfo); weed++)
    	    {
                if(IsPlayerInRangeOfPoint(playerid,2.0,WeedInfo[weed][weedX],WeedInfo[weed][weedY],WeedInfo[weed][weedZ]))
                {
					if(GetPlayerVirtualWorld(playerid) == WeedInfo[weed][weedWorld])
					{
				        if(WeedInfo[weed][weedPlanted] == 1 && WeedInfo[weed][weedX] != 0.0 && WeedInfo[weed][weedY] != 0.0 && WeedInfo[weed][weedZ] != 0.0)
				        {
				            if (WeedInfo[weed][weedTime] > 0)
				            {
				                format(string, sizeof(string), "该火麻还需要 %d 分才能收获.", WeedInfo[weed][weedTime]);
				                SendClientMessage(playerid, COLOR_WHITE, string);
						        return 1;
						    }
                            ApplyAnimation(playerid, "BOMBER","BOM_Plant_In",4.0,0,0,0,0,0);
		                    if(WeedInfo[weed][weedObject] > 0) DestroyDynamicObject(WeedInfo[weed][weedObject]);
		                    WeedInfo[weed][weedObject]=0;
		                    PlayerInfo[playerid][pWeed] += 10;
		                    WeedInfo[weed][weedX] = 0.0;
		    		        WeedInfo[weed][weedY] = 0.0;
		    		        WeedInfo[weed][weedZ] = 0.0;
		    		        WeedInfo[weed][weedPlanted] = 0;
		    		        SendClientMessage(playerid,COLOR_GREEN,"你收获了该种植物, 获得10克大麻.");
		    		        return 1;
				        }
				    }
				}
			}
		}
		else if(strcmp(usage, "opium", true) == 0)
		{
			if (GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_GREY, "你需要步行.");
		    for(new opium = 0; opium < sizeof(OpiumInfo); opium++)
    	    {
                if(IsPlayerInRangeOfPoint(playerid,2.0,OpiumInfo[opium][opiumX],OpiumInfo[opium][opiumY],OpiumInfo[opium][opiumZ]))
                {
					if(GetPlayerVirtualWorld(playerid) == OpiumInfo[opium][opiumWorld])
					{
				        if(OpiumInfo[opium][opiumPlanted] == 1 && OpiumInfo[opium][opiumX] != 0.0 && OpiumInfo[opium][opiumY] != 0.0 && OpiumInfo[opium][opiumZ] != 0.0)
				        {
				            if (OpiumInfo[opium][opiumTime] > 0)
				            {
				                format(string, sizeof(string), "该罂粟花还需要 %d 分才能收获.", OpiumInfo[opium][opiumTime]);
				                SendClientMessage(playerid, COLOR_WHITE, string);
						        return 1;
						    }
                            ApplyAnimation(playerid, "BOMBER","BOM_Plant_In",4.0,0,0,0,0,0);
		                    if(OpiumInfo[opium][opiumObject] > 0) DestroyDynamicObject(OpiumInfo[opium][opiumObject]);
		                    OpiumInfo[opium][opiumObject]=0;
		                    PlayerInfo[playerid][pRawOpium] += 10;
		                    OpiumInfo[opium][opiumX] = 0.0;
		    		        OpiumInfo[opium][opiumY] = 0.0;
		    		        OpiumInfo[opium][opiumZ] = 0.0;
		    		        OpiumInfo[opium][opiumPlanted] = 0;
		    		        SendClientMessage(playerid,COLOR_GREEN,"你收获了该种植物, 获得10克鸦片.");
		    		        return 1;
				        }
				    }
				}
			}
		}
		else if(strcmp(usage, "shell", true) == 0)
		{
			if (GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_GREY, "你需要步行.");
		    for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
                if(IsPlayerInRangeOfPoint(playerid,2.0, ShellInfo[shell][shellX], ShellInfo[shell][shellY], ShellInfo[shell][shellZ]))
                {
					if(GetPlayerVirtualWorld(playerid) == ShellInfo[shell][shellWorld])
					{
				        if(ShellInfo[shell][shellDropped] == 1 && ShellInfo[shell][shellX] != 0.0 && ShellInfo[shell][shellY] != 0.0 && ShellInfo[shell][shellZ] != 0.0)
				        {
                            ApplyAnimation(playerid, "BOMBER","BOM_Plant_In",4.0,0,0,0,0,0);
		                    DestroyDynamic3DTextLabel(ShellInfo[shell][ShellCasing]);
		                    ShellInfo[shell][shellDropped] = 0;
		                    ShellInfo[shell][shellX] = 0.0;
		    		        ShellInfo[shell][shellY] = 0.0;
		    		        ShellInfo[shell][shellZ] = 0.0;
		    		        ShellInfo[shell][shellDropped] = 0;
		    		        SendClientMessage(playerid,COLOR_GREEN,"你捡起了子弹壳.");
		    		        return 1;
				        }
				    }
				}
			}
		}
	}
	return 1;
}

/*COMMAND:process(playerid, params[])
{
	new usage[128];
    if(sscanf(params, "s[128]", usage)) SendClientMessage(playerid, COLOR_GREY, "用法: /process [opium/cocaine]");
	else
	{
	    if(!IsPlayerInRangeOfPoint(playerid, 2.0, 2201.7168,-1244.0497,1529.1060)) return SendClientMessage(playerid, COLOR_LIGHTRED, "You must be in a drug-lab to use this command.");
		if(strcmp(usage, "opium", true) == 0)
		{
		    if(PlayerInfo[playerid][pRawOpium] > 4)
			{
				PlayerInfo[playerid][pRawOpium] -= 5;
				PlayerInfo[playerid][pHeroin] += 10;
                SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have converted '5' raw opium into '20' heroin grams.");
                SendClientMessage(playerid, COLOR_LIGHTGREEN, "You are now able to '/givedrug' or '/usedrug'.");
			}
			else
			{
                SendClientMessage(playerid, COLOR_LIGHTRED, "You must have '5' raw opium to use this function.");
			}
		}
		if(strcmp(usage, "cocaine", true) == 0)
		{
		    //if(BakingSoda[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You must have some baking soda to use this.");
		    if(PlayerInfo[playerid][pCocaine] > 4)
			{
				PlayerInfo[playerid][pCocaine] -= 5;
				PlayerInfo[playerid][pCrack] += 20;
                SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have converted '5' cocaine grams into '20' crack rocks.");
                SendClientMessage(playerid, COLOR_LIGHTGREEN, "You are now able to '/givedrug' or '/usedrug'.");
			}
			else
			{
                SendClientMessage(playerid, COLOR_LIGHTRED, "You must have '5' cocaine grams to use this function.");
			}
		}
	}
	return 1;
}*/


COMMAND:repairbody(playerid, params[]) {//
	new user,
		price;
		
    new vehicleid;
	vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) != 525) return SendClientMessage(playerid, COLOR_GREY, "你需要在Towtruck里使用该指令.");
	if(sscanf(params, "ui", user, price)) return SendClientMessage(playerid, COLOR_GREY, "用法: /repairbody [玩家ID] [价格]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "ii", user, price);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(price < 0) return SendClientMessage(playerid, COLOR_GREY, "价格不能低于 $0.");
	if(!IsPlayerInAnyVehicle(user)) return SendClientMessage(playerid, COLOR_GREY, "对方需要在车内.");
	new vehicle = GetPlayerVehicleID(user),
		Float:X,
	    Float:Y,
	    Float:Z;

	GetVehiclePos(vehicle, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要接近你的客户才能修车.");
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要接近你的客户才能修车.");
	new msg[128];
	SetPVarInt(playerid, "OfferBodyRepair", user);
	SetPVarInt(playerid, "OfferBodyRepairPrice", price);
	SetPVarInt(playerid, "OfferBodyRepairVehicle", vehicle);
	format(msg, sizeof(msg), "%s 询问你是否想花费 $%i 购买车辆钣金喷漆服务 (修复外观), 输入 /acceptbodyrepair %i 接受.", GetNameWithSpace(playerid, 1), price, playerid);
	SendClientMessage(user, COLOR_WHITE, msg);
	format(msg, sizeof(msg), "你询问 %s 修复%s车辆外观, 价格: $%i, 请等待%s回复.", GetNameWithSpace(user, 1), HisHer(user), price, HimHer(user));
	SendClientMessage(playerid, COLOR_WHITE, msg);
	return 1;
}

COMMAND:acceptbodyrepair(playerid, params[]) {
	new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /acceptbodyrepair [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(GetPVarInt(user, "OfferBodyRepair") != playerid) return SendClientMessage(playerid, COLOR_GREY, "该玩家没有向你提供服务.");
	new vehicle = GetPVarInt(user, "OfferBodyRepairVehicle");
    if(!IsVehicleSpawned(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "你需要接近该玩家.");
	new	Float:X,
	    Float:Y,
	    Float:Z;

	GetVehiclePos(vehicle, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要在你车内.");
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "对方需要靠近你才能修车.");
	new price = GetPVarInt(user, "OfferBodyRepairPrice"),
	    query[100];
	if(PlayerInfo[playerid][pMoney]<price)return  SendClientMessage(playerid, COLOR_GREY, "你没有足够的钱");
	GivePlayerMoneyEx(playerid, -price);
	GivePlayerMoneyEx(user, price);
	RepairVehicle(vehicle);
	format(query, sizeof(query), "%s 接受了你的车辆外观保养服务, 价格: $%i.", GetNameWithSpace(playerid, 1), price);
	SendClientMessage(user, COLOR_WHITE, query);
	format(query, sizeof(query), "你接受了 %s 的车辆外观保养服务, 价格 $%i.", GetNameWithSpace(user, 1), price);
	SendClientMessage(playerid, COLOR_WHITE, query);
	SetPVarInt(user, "OfferBodyRepair", -1);
	SetPVarInt(user, "OfferBodyRepairPrice", 0);
	SetPVarInt(user, "OfferBodyRepairVehicle", 0);
	return 1;
}

COMMAND:repairengine(playerid, params[]) {
	new user,
		price;

    new vehicleid;
	vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) != 525) return SendClientMessage(playerid, COLOR_GREY, "你需要在你的Towtruck里才能进行.");
	if(sscanf(params, "ui", user, price)) return SendClientMessage(playerid, COLOR_GREY, "用法: /repairengine [玩家ID] [价格]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "ii", user, price);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(price < 0) return SendClientMessage(playerid, COLOR_GREY, "价格不能低于 $0.");
	if(!IsPlayerInAnyVehicle(user)) return SendClientMessage(playerid, COLOR_GREY, "对方需要在车内");
	new vehicle = GetPlayerVehicleID(user),
		Float:X,
	    Float:Y,
	    Float:Z;

	GetVehiclePos(vehicle, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要接近对方.");
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要接近对方.");
	new param[7];
	GetVehicleParamsEx(vehicle, param[0], param[1], param[2], param[3], param[4], param[5], param[6]);
	if(param[4] == 0) return SendClientMessage(playerid, COLOR_GREY, "车辆的引擎盖需要打开才能进行引擎维修.");
	new msg[128];
	SetPVarInt(playerid, "OfferEngineRepair", user);
	SetPVarInt(playerid, "OfferEngineRepairPrice", price);
	SetPVarInt(playerid, "OfferEngineRepairVehicle", vehicle);
	format(msg, sizeof(msg), "%s 向你询问引擎维修服务, 价格: $%i, 使用 /acceptrepair %i 接受.", GetNameWithSpace(playerid, 1), price, playerid);
	SendClientMessage(user, COLOR_WHITE, msg);
	format(msg, sizeof(msg), "你向 %s 提供引擎维修服务, 价格: $%i.", GetNameWithSpace(user, 1), price);
	SendClientMessage(playerid, COLOR_WHITE, msg);
	return 1;
}

COMMAND:acceptrepair(playerid, params[]) {
	new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /acceptrepair [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(GetPVarInt(user, "OfferEngineRepair") != playerid) return SendClientMessage(playerid, COLOR_GREY, "对方没有向你提供服务.");
	new vehicle = GetPVarInt(user, "OfferEngineRepairVehicle");
    if(!IsVehicleSpawned(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "你需要在车内.");
	new	Float:X,
	    Float:Y,
	    Float:Z;

	GetVehiclePos(vehicle, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要在你的车内.");
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
    new param[7];
	GetVehicleParamsEx(vehicle, param[0], param[1], param[2], param[3], param[4], param[5], param[6]);
	if(param[4] == 0) return SendClientMessage(playerid, COLOR_GREY, "车辆的引擎盖需要打开才能进行引擎维修.");
	new price = GetPVarInt(user, "OfferEngineRepairPrice"),
	    query[100];
	if(PlayerInfo[playerid][pMoney]<price)return SendClientMessage(playerid, COLOR_GREY, "你没有这么多钱");
	GivePlayerMoneyEx(playerid, -price);
	GivePlayerMoneyEx(user, price);
	SetVehicleHealth(vehicle, 1000.0);
	format(query, sizeof(query), "%s 接受了你的引擎维修服务, 价格: $%i.", GetNameWithSpace(playerid, 1), price);
	SendClientMessage(user, COLOR_WHITE, query);
	format(query, sizeof(query), "你接受了 %s 维修你的车辆引擎, 价格 $%i.", GetNameWithSpace(user, 1), price);
	SendClientMessage(playerid, COLOR_WHITE, query);
	SetPVarInt(user, "OfferEngineRepair", -1);
	SetPVarInt(user, "OfferEngineRepairPrice", 0);
	SetPVarInt(user, "OfferEngineRepairVehicle", 0);
	return 1;
}

COMMAND:removepaintjob(playerid, params[]) {//
	new user,
		price;

    new vehicleid;
	vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) != 525) return SendClientMessage(playerid, COLOR_GREY, "你需要在Towtruck里使用该指令.");
	if(sscanf(params, "ui", user, price)) return SendClientMessage(playerid, COLOR_GREY, "用法: /removepaintjob [玩家ID] [price]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "ii", user, price);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(price < 0) return SendClientMessage(playerid, COLOR_GREY, "价格不能低于$0.");
	if(!IsPlayerInAnyVehicle(user)) return SendClientMessage(playerid, COLOR_GREY, "对方需要在车内.");
	new vehicle = GetPlayerVehicleID(user),
		Float:X,
	    Float:Y,
	    Float:Z;

	GetVehiclePos(vehicle, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	new msg[128];
	SetPVarInt(playerid, "OfferPaintjobRemoval", user);
	SetPVarInt(playerid, "OfferPaintjobRemovalPrice", price);
	SetPVarInt(playerid, "OfferPaintjobRemovalVehicle", vehicle);
	format(msg, sizeof(msg), "%s 向你提供车辆贴花移除服务, 要价: $%i, 使用 /acceptremoval %i 接受.", GetNameWithSpace(playerid, 1), price, playerid);
	SendClientMessage(user, COLOR_WHITE, msg);
	format(msg, sizeof(msg), "你向 %s 提供车辆贴花移除服务, 要价 $%i, 请等待对方回复", GetNameWithSpace(user, 1), price, HimHer(user));
	SendClientMessage(playerid, COLOR_WHITE, msg);
	return 1;
}

COMMAND:acceptremoval(playerid, params[]) {
	new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /acceptremoval [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(GetPVarInt(user, "OfferPaintjobRemoval") != playerid) return SendClientMessage(playerid, COLOR_GREY, "该玩家没有向你提供任何服务.");
	new vehicle = GetPVarInt(user, "OfferPaintjobRemovalVehicle");
    if(!IsVehicleSpawned(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	new	Float:X,
	    Float:Y,
	    Float:Z;

	GetVehiclePos(vehicle, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	new price = GetPVarInt(user, "OfferPaintjobRemovalPrice"),
	    query[100];

	GivePlayerMoneyEx(playerid, -price);
	GivePlayerMoneyEx(user, price);
	VehicleInfo[vehicle][vPaintjob] = 3;
	ChangeVehiclePaintjob(vehicle, 3);
	mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `paintjob` = 3 WHERE `id` = %i", VehicleInfo[vehicle][vID]);
	mysql_function_query(sqlHandle, query, false, "", "");
	format(query, sizeof(query), "%s 接受了你的服务, 价格 $%i.", GetNameWithSpace(playerid, 1), price);
	SendClientMessage(user, COLOR_WHITE, query);
	format(query, sizeof(query), "你接受了 %s 提供的服务, 价格 $%i.", GetNameWithSpace(user, 1), price);
	SendClientMessage(playerid, COLOR_WHITE, query);
	SetPVarInt(user, "OfferPaintjobRemoval", -1);
	SetPVarInt(user, "OfferPaintjobRemovalPrice", 0);
	SetPVarInt(user, "OfferPaintjobRemovalVehicle", 0);
	return 1;
}

COMMAND:refill(playerid, params[]) {
	new fuel,
		user,
		price;

    new vehicleid;
	vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) != 525) return SendClientMessage(playerid, COLOR_GREY, "你需要在Towtruck里使用该指令.");
	if(sscanf(params, "uii", user, fuel, price)) return SendClientMessage(playerid, COLOR_GREY, "用法: /refill [玩家ID] [liters] [price]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "iii", user, fuel, price);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(price < 0) return SendClientMessage(playerid, COLOR_GREY, "价格不能低于$0.");
	if(!IsPlayerInAnyVehicle(user)) return SendClientMessage(playerid, COLOR_GREY, "对方需要在车内.");
	new vehicle = GetPlayerVehicleID(user);
    if(fuel < 0 || VehicleInfo[vehicle][vFuel] + fuel > vehicleData[GetVehicleModel(vehicle) - 400][tank]) return SendClientMessage(playerid, COLOR_GREY, "该数值超过了油箱容量.");
	new	Float:X,
	    Float:Y,
	    Float:Z;

	GetVehiclePos(vehicle, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	new msg[128];
	SetPVarInt(playerid, "OfferRefill", user);
	SetPVarInt(playerid, "OfferRefillPrice", price);
	SetPVarInt(playerid, "OfferRefillLiters", fuel);
	SetPVarInt(playerid, "OfferRefillVehicle", vehicle);
	format(msg, sizeof(msg), "%s 向你提供 %i 升燃料, 价格 $%i, 使用 /acceptrefill %i 接受.", GetNameWithSpace(playerid, 1), fuel, price, playerid);
	SendClientMessage(user, COLOR_WHITE, msg);
	format(msg, sizeof(msg), "你向 %s 提供 %i 升燃料, 价格 $%i", GetNameWithSpace(user, 1), fuel, price);
	SendClientMessage(playerid, COLOR_WHITE, msg);
	return 1;
}

COMMAND:acceptrefill(playerid, params[]) {
	new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /acceptrefill [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(GetPVarInt(user, "OfferRefill") != playerid) return SendClientMessage(playerid, COLOR_GREY, "没有人为你提供服务");
	new vehicle = GetPVarInt(user, "OfferRefillVehicle");
    if(!IsVehicleSpawned(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方");
	new	Float:X,
	    Float:Y,
	    Float:Z;

	GetVehiclePos(vehicle, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近你的车.");
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	new price = GetPVarInt(user, "OfferRefillPrice"),
	    fuel = GetPVarInt(user, "OfferRefillLiters"),
	    driver = GetVehicleDriver(vehicle),
	    query[100];

	GivePlayerMoneyEx(playerid, -price);
	GivePlayerMoneyEx(user, price);
	VehicleInfo[vehicle][vFuel] += fuel;
	if(driver != -1) {
	    PlayerTextDrawHide(driver, TD_SM_Fuel_Value);
	    new model=GetVehicleModel(vehicle);
 		format(query, sizeof(query), "%i/%i", VehicleInfo[vehicle][vFuel],vehicleData[model-400][tank]);
		PlayerTextDrawSetString(driver, TD_SM_Fuel_Value, query);
	    PlayerTextDrawShow(driver, TD_SM_Fuel_Value);
	}
	
	format(query, sizeof(query), "%s 购买了你的燃料, 价格 $%i.", GetNameWithSpace(playerid, 1), price);
	SendClientMessage(user, COLOR_WHITE, query);
	format(query, sizeof(query), "你购买了由 %s 提供的燃料, 价格 $%i.", GetNameWithSpace(user, 1), price);
	SendClientMessage(playerid, COLOR_WHITE, query);
	SetPVarInt(user, "OfferRefill", -1);
	SetPVarInt(user, "OfferRefillPrice", 0);
	SetPVarInt(user, "OfferRefillLiters", 0);
	SetPVarInt(user, "OfferRefillVehicle", 0);
	return 1;
}

COMMAND:paintjob(playerid, params[]) {
	new user,
		price,
		paintID;

    new vehicleid;
	vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) != 525) return SendClientMessage(playerid, COLOR_GREY, "你需要在Towtruck里使用该指令.");
	if(sscanf(params, "uii", user, price, paintID)) return SendClientMessage(playerid, COLOR_GREY, "用法: /paintjob [玩家ID] [price] [paintjobID (0 - 2)]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "iii", user, price, paintID);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(paintID < 0 || paintID > 2) return SendClientMessage(playerid, COLOR_GREY, "车辆贴花需要在 0 和 2 之间.");
	if(price < 0) return SendClientMessage(playerid, COLOR_GREY, "价格不能低于$0.");
	if(!IsPlayerInAnyVehicle(user)) return SendClientMessage(playerid, COLOR_GREY, "对方需要在车内.");
	new vehicle = GetPlayerVehicleID(user),
		model = GetVehicleModel(vehicle);
		
    if(IsPaintjobCompatible(model, paintID) == 0) return SendClientMessage(playerid, COLOR_GREY, "该车无法进行贴花.");
	new	Float:X,
	    Float:Y,
	    Float:Z;

	GetVehiclePos(vehicle, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	new msg[128];
	SetPVarInt(playerid, "OfferPaintjob", user);
	SetPVarInt(playerid, "OfferPaintjobPrice", price);
	SetPVarInt(playerid, "OfferPaintjobID", paintID);
	SetPVarInt(playerid, "OfferPaintjobVehicle", vehicle);
	format(msg, sizeof(msg), "%s 向你提供车辆贴花服务, 价格 $%i, 使用 /acceptpaintjob %i 接受.", GetNameWithSpace(playerid, 1), price, playerid);
	SendClientMessage(user, COLOR_WHITE, msg);
	format(msg, sizeof(msg), "你向 %s 提供贴花服务, 价格 $%i. 请等待回复", GetNameWithSpace(user, 1), price);
	SendClientMessage(playerid, COLOR_WHITE, msg);
	return 1;
}

COMMAND:acceptpaintjob(playerid, params[]) {
	new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /acceptpaintjob [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(GetPVarInt(user, "OfferPaintjob") != playerid) return SendClientMessage(playerid, COLOR_GREY, "没有人向你提供服务.");
	new vehicle = GetPVarInt(user, "OfferPaintjobVehicle");
    if(!IsVehicleSpawned(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近你的车辆.");
	new	Float:X,
	    Float:Y,
	    Float:Z;

	GetVehiclePos(vehicle, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近你的车辆.");
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	new price = GetPVarInt(user, "OfferPaintjobPrice"),
	    paintID = GetPVarInt(user, "OfferPaintjobID"),
	    query[100];

	GivePlayerMoneyEx(playerid, -price);
	GivePlayerMoneyEx(user, price);
	ChangeVehiclePaintjob(vehicle, paintID);
	ChangeVehicleColor(vehicle, VehicleInfo[vehicle][vColor1], VehicleInfo[vehicle][vColor2]);
	mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `paintjob` = %i WHERE `id` = %i", paintID, VehicleInfo[vehicle][vID]);
	mysql_function_query(sqlHandle, query, false, "", "");
	format(query, sizeof(query), "%s 接受了你的服务, 价格 $%i.", GetNameWithSpace(playerid, 1), price);
	SendClientMessage(user, COLOR_WHITE, query);
	format(query, sizeof(query), "你接受了 %s 提供的服务, 价格 $%i.", GetNameWithSpace(user, 1), price);
	SendClientMessage(playerid, COLOR_WHITE, query);
	SetPVarInt(user, "OfferPaintjob", -1);
	SetPVarInt(user, "OfferPaintjobPrice", 0);
	SetPVarInt(user, "OfferPaintjobID", 0);
	SetPVarInt(user, "OfferPaintjobVehicle", 0);
	return 1;
}

COMMAND:repaint(playerid, params[]) {
	new color1,
	    color2,
		user,
		price;
		
	new vehicleid;
	vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) != 525) return SendClientMessage(playerid, COLOR_GREY, "你需要在Towtruck里使用该指令.");
	if(sscanf(params, "uiii", user, color1, color2, price)) return SendClientMessage(playerid, COLOR_GREY, "用法: /repaint [玩家ID] [colorID 1] [colorID 2] [price]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "iiii", user, color1, color2, price);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(color1 < 0 || color1 > 255 || color2 < 0 || color2 > 255) return SendClientMessage(playerid, COLOR_GREY, "颜色ID需要在0到255之间.");
	if(price < 250) return SendClientMessage(playerid, COLOR_GREY, "价格不能低于250$.");
	if(!IsPlayerInAnyVehicle(user)) return SendClientMessage(playerid, COLOR_GREY, "对方需要在车内.");
	new vehicle = GetPlayerVehicleID(user),
		Float:X,
	    Float:Y,
	    Float:Z;
	    
	GetVehiclePos(vehicle, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	new msg[128];
	SetPVarInt(playerid, "OfferRepaint", user);
	SetPVarInt(playerid, "OfferRepaintPrice", price);
	SetPVarInt(playerid, "OfferRepaintColor", color1);
	SetPVarInt(playerid, "OfferRepaintColor2", color2);
	SetPVarInt(playerid, "OfferRepaintVehicle", vehicle);
	format(msg, sizeof(msg), "%s 向你提供车辆喷漆服务, 价格 $%i, 使用 /acceptrepaint %i 接受.", GetNameWithSpace(playerid, 1), price, playerid);
	SendClientMessage(user, COLOR_WHITE, msg);
	format(msg, sizeof(msg), "你向 %s 提供车辆喷漆服务, 价格 $%i, 请等待回复.", GetNameWithSpace(user, 1), price);
	SendClientMessage(playerid, COLOR_WHITE, msg);
	return 1;
}

COMMAND:acceptrepaint(playerid, params[]) {
	new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /acceptrepaint [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(GetPVarInt(user, "OfferRepaint") != playerid) return SendClientMessage(playerid, COLOR_GREY, "该玩家没有向你提供服务");
	new vehicle = GetPVarInt(user, "OfferRepaintVehicle");
    if(!IsVehicleSpawned(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近你的车辆.");
	new	Float:X,
	    Float:Y,
	    Float:Z;

	GetVehiclePos(vehicle, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近你的车辆.");
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	new price = GetPVarInt(user, "OfferRepaintPrice"),
	    color1 = GetPVarInt(user, "OfferRepaintColor"),
	    color2 = GetPVarInt(user, "OfferRepaintColor2"),
	    query[90];
	    
	GivePlayerMoneyEx(playerid, -price);
	GivePlayerMoneyEx(user, price);
	ChangeVehicleColor(vehicle, color1, color2);
	VehicleInfo[vehicle][vColor1] = color1;
	VehicleInfo[vehicle][vColor2] = color2;
	mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `color1` = %i, `color2` = %i WHERE `id` = %i", color1, color2, VehicleInfo[vehicle][vID]);
	mysql_function_query(sqlHandle, query, false, "", "");
	format(query, sizeof(query), "%s 接受了你的颜色更改, 价格 $%i.", GetNameWithSpace(playerid, 1), price);
	SendClientMessage(user, COLOR_WHITE, query);
	format(query, sizeof(query), "你接受了 %s 更改你的车辆颜色, 价格 $%i.", GetNameWithSpace(user, 1), price);
	SendClientMessage(playerid, COLOR_WHITE, query);
	SetPVarInt(user, "OfferRepaint", -1);
	SetPVarInt(user, "OfferRepaintPrice", 0);
	SetPVarInt(user, "OfferRepaintColor", 0);
	SetPVarInt(user, "OfferRepaintColor2", 0);
	SetPVarInt(user, "OfferRepaintVehicle", 0);
	return 1;
}

COMMAND:impound(playerid, params[])
{
    new pVehicle = GetPlayerVehicleID(playerid);
    if(GetVehicleModel(pVehicle) != 525) return SendClientMessage(playerid, COLOR_GREY, "你必须在一台拖车内进行.");
    new vehicle;
    
	if(sscanf(params, "i", vehicle)) return SendClientMessage(playerid, COLOR_GREY, "用法: /impound [车辆ID]");
	if(!IsVehicleSpawned(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "距离太远.");
	
	new Float:X,
			Float:Y,
				Float:Z,
					Float:health,
							status[4];
		
    GetVehiclePos(vehicle, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "距离太远.");
	if(VehicleInfo[vehicle][vType] == VEHICLE_OWNED)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 10, 1621.4081,-1808.7053,13.5177))
	    {
		    new query[128];
		    new randompark = random(sizeof(impoundparking));
		    new id = GetPlayerID(VehicleInfo[vehicle][vOwner]);
		    format(query, sizeof(query), "你扣押了 %s 的载具. 牌照: %s.", VehicleInfo[vehicle][vOwner], VehicleInfo[vehicle][vPlate]);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, query);
	        VehicleInfo[vehicle][vX] = impoundparking[randompark][0];
			VehicleInfo[vehicle][vY] = impoundparking[randompark][1];
			VehicleInfo[vehicle][vZ] = impoundparking[randompark][2];
			VehicleInfo[vehicle][vA] = impoundparking[randompark][3];
			SetPVarInt(id, "PrivateCar", 0);
			GetVehicleHealth(vehicle, health);
			GetVehicleDamageStatus(vehicle, status[0], status[1], status[2], status[3]);
			mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `x` = %f, `y` = %f, `z` = %f, `a` = %f WHERE `id` = %i", VehicleInfo[vehicle][vX], VehicleInfo[vehicle][vY], VehicleInfo[vehicle][vZ], VehicleInfo[vehicle][vA], VehicleInfo[vehicle][vID]);
			mysql_function_query(sqlHandle, query, false, "", "");
			mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `fuel` = %i, `health` = %f, `panels` = %i, `doors` = %i, `lights` = %i, `tires` = %i WHERE `id` = %i", VehicleInfo[vehicle][vFuel], health, status[0], status[1], status[2], status[3], VehicleInfo[vehicle][vID]);
			mysql_function_query(sqlHandle, query, false, "", "");
			ResetVehicleData(vehicle);
			SetVehicleDead(vehicle, 1);
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "你需要在扣押车场进行.");
		}
	}
	else
	{
        SendClientMessage(playerid, COLOR_GREY, "该车不是私人车辆.");
	}
	return 1;
}

COMMAND:tow(playerid, params[])
{
    new pVehicle = GetPlayerVehicleID(playerid);
    if(GetVehicleModel(pVehicle) != 525) return SendClientMessage(playerid, COLOR_GREY, "你需要在一台拖车内进行.");
	if(IsTrailerAttachedToVehicle(pVehicle))
	{
	    DetachTrailerFromVehicle(pVehicle);
	}
	else if(GetPVarInt(playerid, "LAPDDuty") != 0 || GetPVarInt(playerid, "LSFDDuty") != 0)
	{
	    new vehicle;
		if(sscanf(params, "i", vehicle)) return SendClientMessage(playerid, COLOR_GREY, "用法: /tow [车辆ID]");
		if(!IsVehicleSpawned(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "距离太远.");
		new Float:X,
			Float:Y,
			Float:Z;
			
		GetVehiclePos(vehicle, X, Y, Z);
		if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "距离太远.");
		AttachTrailerToVehicle(vehicle, pVehicle);
	}
	else
	{
		new user;
		if(sscanf(params, "i", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /tow [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(!IsPlayerInAnyVehicle(user) || GetPlayerVehicleSeat(user) != 0) return SendClientMessage(playerid, COLOR_GREY, "对方需要在驾驶室内.");
	 	new Float:X,
		    Float:Y,
		    Float:Z,
		    vehicle = GetPlayerVehicleID(user);

		GetVehiclePos(vehicle, X, Y, Z);
		if(!IsPlayerInRangeOfPoint(playerid, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "距离太远.");
		new msg[128];
		SetPVarInt(playerid, "TowingVehicle", user);
		SetPVarInt(playerid, "TowingVehicleID", vehicle);
		SetPVarInt(playerid, "TowingVehicleTowTruck", pVehicle);
		format(msg, sizeof(msg), "服务器: 你将拖车请求发送给 %s, 请等待对方回复.", GetNameWithSpace(user, 1));
		SendClientMessage(playerid, COLOR_LIGHTRED, msg);
		format(msg, sizeof(msg), "服务器: %s 想拖挂你的 %s. 如果你同意, 请输入 /accepttow %i.", GetNameWithSpace(playerid, 1), vehicleData[GetVehicleModel(vehicle) - 400][typeName], playerid);
		SendClientMessage(user, COLOR_LIGHTRED, msg);
	}
	
	return 1;
}

COMMAND:accepttow(playerid, params[]) {
	new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /accepttow [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(GetPVarInt(user, "TowingVehicle") != playerid) return SendClientMessage(playerid, COLOR_GREY, "该玩家没有向你发送拖车请求.");
	new vehicle = GetPVarInt(user, "TowingVehicleID");
	if(!IsVehicleSpawned(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "对方距离太远.");
	new Float:X,
	    Float:Y,
	    Float:Z;
	    
	GetVehiclePos(vehicle, X, Y, Z);
    if(!IsPlayerInRangeOfPoint(user, 10, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "对方距离太远.");
	new pVehicle = GetPVarInt(user, "TowingVehicleTowTruck");
	if(IsTrailerAttachedToVehicle(pVehicle)) return SendClientMessage(playerid, COLOR_GREY, "对方正在拖挂其他车辆.");
	foreach(new i : Player) {
		if(GetPlayerVehicleID(i) == vehicle) {
			return SendClientMessage(playerid, COLOR_GREY, "该车必须为空才能进行拖挂.");//The vehicle has to be empty in order to be towed
		}
	}
	
	new msg[80];
	AttachTrailerToVehicle(vehicle, pVehicle);
    format(msg, sizeof(msg), "%s 正在拖挂你的车辆 %s.", GetNameWithSpace(user, 1), vehicleData[GetVehicleModel(vehicle) - 400][typeName]);
    SendClientMessage(playerid, COLOR_WHITE, msg);
    SetPVarInt(user, "TowingVehicle", -1);
	SetPVarInt(user, "TowingVehicleID", 0);
	SetPVarInt(user, "TowingVehicleTowTruck", 0);
	return 1;
}

COMMAND:dice(playerid, params[]) {
	if(itemInPossession(playerid, 15)) {
	    new me[70],
	        result = random(6) + 1;

	    format(me, sizeof(me), "** %s 摇了摇骰子, 结果为 %s.", GetNameWithSpace(playerid, 1), numbers[result]);
	    ProxDetector(12, playerid, me, COLOR_PINK);
	} else {
		SendClientMessage(playerid, COLOR_GREY, "你需要一个骰子.");
	}
	
	return 1;
}

COMMAND:card(playerid, params[]) {
	if(itemInPossession(playerid, 16)) {
	    new figure = random(sizeof(figures)),
		    symbol = random(sizeof(symbols)),
		    me[128];

		format(me, sizeof(me), "** %s 摸了一张牌: %s - %s.", GetNameWithSpace(playerid, 1), symbols[symbol], figures[figure]);
       	ProxDetector(12, playerid, me, COLOR_PINK);
	} else {
		SendClientMessage(playerid, COLOR_GREY, "你需要一副牌.");
	}
	
	return 1;
}

COMMAND:showcard(playerid, params[]) {
	new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /showcard [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
    if(itemInPossession(playerid, 16)) {
	    new figure = random(sizeof(figures)),
		    symbol = random(sizeof(symbols)),
		    me[128];

		if(playerid == user) {
		    format(me, sizeof(me), "** %s 摸了一张牌, 然后自己悄悄的看了一眼.", GetNameWithSpace(playerid, 1));
	       	ProxDetector(12, playerid, me, COLOR_PINK);
			format(me, sizeof(me), "** 卡牌显示: %s - %s (( %s )).", symbols[symbol], figures[figure], GetNameWithSpace(playerid, 1));
			SendClientMessage(playerid, COLOR_PINK, me);
		} else {
			format(me, sizeof(me), "** %s 摸了一张牌并且展示给 %s.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
	       	ProxDetector(12, playerid, me, COLOR_PINK);
			format(me, sizeof(me), "** 卡牌显示: %s - %s (( %s )).", symbols[symbol], figures[figure], GetNameWithSpace(playerid, 1));
			SendClientMessage(playerid, COLOR_PINK, me);
			SendClientMessage(user, COLOR_PINK, me);
		}
	} else {
		SendClientMessage(playerid, COLOR_GREY, "你需要一副扑克牌.");
	}
	
	return 1;
}

COMMAND:boombox(playerid, params[]) {
	new Float:X,
	    Float:Y,
	    Float:Z,
		boomID = -1,
		Float:distance;
	    
	GetPlayerPos(playerid, X, Y, Z);
	foreach(new i : iter_boomboxes) {
	    if(strcmp(boomboxes[i][boomOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(boomboxes[i][boomOwner])) {
    		if(IsPlayerInRangeOfPoint(playerid, 3, boomboxes[i][boomX], boomboxes[i][boomY], boomboxes[i][boomZ])) {
				if(boomID == -1 || GetPlayerDistanceFromPoint(playerid, boomboxes[i][boomX], boomboxes[i][boomY], boomboxes[i][boomZ]) < distance) {
					boomID = i;
					distance = GetPlayerDistanceFromPoint(playerid, boomboxes[i][boomX], boomboxes[i][boomY], boomboxes[i][boomZ]);
				}
			}
		}
	}

	if(boomID != -1) {
	    SetPVarInt(playerid, "BoomboxID", boomID);
	    ShowPlayerDialog(playerid, DIALOG_BOOMBOX, DIALOG_STYLE_LIST, "{FF9900}Boombox", "音响开关\n更换电台\n使用外部URL", "选择", "取消");
	}
	
	return 1;
}

COMMAND:call(playerid, params[]) {
	new number,
	    phoneID;
	    
	if(sscanf(params, "ii", phoneID, number)) return SendClientMessage(playerid, COLOR_GREY, "用法: /call [哪部手机? (按N查看)] [对方号码]");
	new index = getPhoneIndexFromOccurance(playerid, phoneID);
	if(index == -1) {
	    SendClientMessage(playerid, COLOR_GREY, "你没有手机.");
	} else {
		if(number == HOTLINE_EMERGENCY || number == HOTLINE_TAXI || number == HOTLINE_MECHANIC) {
		    SetPlayerCallingEx(playerid, -1, getItemVar(playerid, index), number, 0, getItemType(playerid, index));
		} else if(number >= 1000000 && number <= 9999999) {
		    new query[90];
			mysql_format(sqlHandle, query, sizeof(query), "SELECT `owner` FROM `samp_items` WHERE `var` = %i AND `item` >= 4 AND `item` <= 13", number);
			mysql_function_query(sqlHandle, query, true, "OnPlayerDialNumberEx", "iiii", playerid, number, getItemVar(playerid, index), getItemType(playerid, index));
		} else {
		    SetPlayerCallingEx(playerid, -1, getItemVar(playerid, index), number, 1, getItemType(playerid, index));
		}
	}
	
	return 1;
}

COMMAND:sms(playerid, params[])
{
	new number,
	    phoneID,
	    msg[128];

	if(sscanf(params, "iis[128]", phoneID, number, msg)) return SendClientMessage(playerid, COLOR_GREY, "用法: /sms [哪部手机? (按N查看)] [对方号码] [信息]");
	new index = getPhoneIndexFromOccurance(playerid, phoneID);
	if(index == -1)
	{
	    SendClientMessage(playerid, COLOR_GREY, "你没有手机.");
	}
	else
	{
		if(number >= 1000000 && number <= 9999999)
		{
		    new query[90];
			mysql_format(sqlHandle, query, sizeof(query), "SELECT `owner` FROM `samp_items` WHERE `var` = %i AND `item` >= 4 AND `item` <= 13", number);
			mysql_function_query(sqlHandle, query, true, "OnPlayerSMSNumberEx", "iisii", playerid, number, msg, getItemType(playerid, index), getItemVar(playerid, index));
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "短信发送失败...");
		}
	}

	return 1;
}

COMMAND:greet(playerid, params[]) {//
	new user,
	    id;
	    
    if(sscanf(params, "ui", user, id)) return SendClientMessage(playerid, COLOR_GREY, "用法: /greet [玩家ID] [类型 (/handshake)]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "ii", user, id);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(GetPVarInt(playerid, "RequestGreet") == user) return SendClientMessage(playerid, COLOR_GREY, "你已经发送过请求了, 请等待回应.");
	if(id < 1 || id > 7) return SendClientMessage(playerid, COLOR_GREY, "无效的ID (提交的ID不在 1 - 7内).");
	new Float:X,
	    Float:Y,
	    Float:Z;
	    
	GetPlayerPos(playerid, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(user, 3.0, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "距离太远或者不是面对面.");
	new msg[110];
	format(msg, sizeof(msg), "%s 想和你握手, 使用 /acceptgreet 接受.", GetNameWithSpace(playerid, 1));
	SendClientMessage(user, COLOR_WHITE, msg);
	SendClientMessage(playerid, COLOR_WHITE, "请求已发送.");
	SetPVarInt(playerid, "RequestGreet", user);
	SetPVarInt(playerid, "RequestShake", id);
	SetPVarInt(user, "RequestedGreet", playerid);
	return 1;
}

COMMAND:acceptgreet(playerid, params[]) {
	new user = GetPVarInt(playerid, "RequestedGreet");
	if(user == -1 || !IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "没有人想向你握手或者对方已经远离这里.");
	new	Float:X,
	    Float:Y,
	    Float:Z;

	GetPlayerPos(playerid, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(user, 3.0, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "对方已经离开.");
	if(GetPVarInt(user, "RequestGreet") != playerid) return SendClientMessage(playerid, COLOR_GREY, "对方没有向你发布申请.");
	new id = GetPVarInt(user, "RequestShake");
	switch(id) {
		case 1: {
			ApplyAnimation(playerid, "GANGS", "hndshkaa", 4.1, 0, 1, 1, 0, 0, 1);
			ApplyAnimation(user, "GANGS", "hndshkaa", 4.1, 0, 1, 1, 0, 0, 1);
		}
		case 2: {
			ApplyAnimation(playerid, "GANGS", "hndshkba", 4.1, 0, 1, 1, 0, 0, 1);
			ApplyAnimation(user, "GANGS", "hndshkba", 4.1, 0, 1, 1, 0, 0, 1);
		}
		case 3: {
			ApplyAnimation(playerid, "GANGS", "hndshkca", 4.1, 0, 1, 1, 0, 0, 1);
			ApplyAnimation(user, "GANGS", "hndshkca", 4.1, 0, 1, 1, 0, 0, 1);
		}
		case 4: {
			ApplyAnimation(playerid, "GANGS", "hndshkcb", 4.1, 0, 1, 1, 0, 0, 1);
			ApplyAnimation(user, "GANGS", "hndshkcb", 4.1, 0, 1, 1, 0, 0, 1);
		}
		case 5: {
			ApplyAnimation(playerid, "GANGS", "hndshkda", 4.1, 0, 1, 1, 0, 0, 1);
			ApplyAnimation(user, "GANGS", "hndshkda", 4.1, 0, 1, 1, 0, 0, 1);
		}
		case 6: {
			ApplyAnimation(playerid, "GANGS", "hndshkfa", 4.1, 0, 1, 1, 0, 0, 1);
			ApplyAnimation(user, "GANGS", "hndshkfa", 4.1, 0, 1, 1, 0, 0, 1);
		}
		default: {
			ApplyAnimation(playerid, "GANGS", "prtial_hndshk_biz_01", 4.1, 0, 1, 1, 0, 0, 1);
			ApplyAnimation(user, "GANGS", "prtial_hndshk_biz_01", 4.1, 0, 1, 1, 0, 0, 1);
		}
	}
	
	SetPVarInt(user, "RequestGreet", 0);
	SetPVarInt(user, "RequestShake", 0);
	SetPVarInt(playerid, "RequestedGreet", -1);
	return 1;
}


COMMAND:sellvehicleto(playerid, params[]) {//
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "这不是你的车.");
	new vehicle = GetPlayerVehicleID(playerid),
		ownCar = GetPVarInt(playerid, "PrivateCar"),
		user,
		price;
		
	if(sscanf(params, "ui", user, price)) return SendClientMessage(playerid, COLOR_GREY, "用法: /sellvehicleto [玩家ID] [价格]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "ii", user, price);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(ownCar != vehicle) return SendClientMessage(playerid, COLOR_GREY, "该车不是登记你的名字.");
	if(VehicleInfo[vehicle][vRented] != 0) return SendClientMessage(playerid, COLOR_GREY, "这是租赁车辆.");
	new Float:X,
	    Float:Y,
	    Float:Z,
		model = GetVehicleModel(vehicle);
	    
	GetPlayerPos(playerid, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(user, 5.0, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	if(price <= 0) return SendClientMessage(playerid, COLOR_GREY, "价格不能低于0.");
	new msg[128];
	format(msg, sizeof(msg), "%s 想将 %s 卖给你, 价格 $%i, 使用 /buyvehicle 接受.", GetNameWithSpace(playerid, 1), vehicleData[GetVehicleModel(vehicle) - 400][typeName], price);
	SendClientMessage(user, COLOR_WHITE, msg);
	format(msg, sizeof(msg), "你想将 %s 卖给 %s, 价格 $%i.", vehicleData[model - 400][typeName], GetNameWithSpace(user, 1), price);
	SendClientMessage(playerid, COLOR_WHITE, msg);
	SetPVarInt(user, "BuyPartner", playerid);
	SetPVarInt(user, "BuyVehicle", VehicleInfo[vehicle][vID]);
	SetPVarInt(user, "BuyPrice", price);
	SetPVarInt(playerid, "SellPartner", user);
	return 1;
}

COMMAND:buyvehicle(playerid, params[]) {
	if(GetPVarInt(playerid, "PrivateCar") != 0) return SendClientMessage(playerid, COLOR_GREY, "你游戏中已经有一台载具, 请先将其存入车库.");
	if(GetPVarInt(playerid, "BuyPartner") == -1) return SendClientMessage(playerid, COLOR_GREY, "没有人出售车辆.");
	new user = GetPVarInt(playerid, "BuyPartner");
	if(GetPVarInt(user, "SellPartner") != playerid || !IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "时间太长, 系统取消交易.");
	new vehicle = GetPVarInt(user, "PrivateCar");
	if(VehicleInfo[vehicle][vID] != GetPVarInt(playerid, "BuyVehicle")) return SendClientMessage(playerid, COLOR_GREY, "时间太长, 系统取消交易.");
	new Float:X,
	    Float:Y,
	    Float:Z;
	    
	GetPlayerPos(playerid, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(user, 5.0, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	new price = GetPVarInt(playerid, "BuyPrice");
	if(PlayerInfo[playerid][pMoney] < price) return SendClientMessage(playerid, COLOR_GREY, "你没有足够的现金购买该车.");
	new msg[110],
	    model = GetVehicleModel(vehicle);

	    
	format(msg, sizeof(msg), "你购买了 %s 的载具 %s 花费 $%i.", GetNameWithSpace(user, 1), vehicleData[model - 400][typeName], price);
	SendClientMessage(playerid, COLOR_WHITE, msg);
	format(msg, sizeof(msg), "你将你的 %s 卖给了 %s 获得 $%i.", vehicleData[model - 400][typeName], GetNameWithSpace(playerid, 1), price);
	SendClientMessage(user, COLOR_WHITE, msg);
	GivePlayerMoneyEx(playerid, -price);
	GivePlayerMoneyEx(user, price);
	format(VehicleInfo[vehicle][vOwner], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][pName]);
	mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_vehicles` SET `owner` = '%e' WHERE `id` = %i", PlayerInfo[playerid][pName], VehicleInfo[vehicle][vID]);
	mysql_function_query(sqlHandle, msg, false, "", "");
	format(msg, sizeof(msg), "%s bought a %s from %s for $%i.", PlayerInfo[playerid][pName], vehicleData[model - 400][typeName], PlayerInfo[user][pName], price);
	Log(playerid, "BUYVEHICLE", msg);
	SetPVarInt(playerid, "BuyPartner", -1);
	SetPVarInt(playerid, "BuyVehicle", 0);
	SetPVarInt(playerid, "BuyPrice", 0);
	SetPVarInt(user, "SellPartner", -1);
	SetPVarInt(user, "PrivateCar", 0);
	SetPVarInt(playerid, "PrivateCar", vehicle);
	return 1;
}

COMMAND:togmap(playerid, params[]) {
	if(GetPVarInt(playerid, "MapInfoHide") == 0) {
		SetPVarInt(playerid, "MapInfoHide", 1);
		PlayerTextDrawHide(playerid, TD_Zone);
		for(new i;i<4;i++)
		{
			TextDrawHideForPlayer(playerid,TD_R_Hunger[i]);
			TextDrawHideForPlayer(playerid,TD_R_Thirst[i]);
		}
		PlayerTextDrawHide(playerid,TD_R_HungerText);
		PlayerTextDrawHide(playerid,TD_R_ThirstText);
	} else {
	    new zone[30];
	    if(GetPVarInt(playerid, "InBusiness") != 0) {
			PlayerTextDrawSetString(playerid, TD_Zone, "Business");
		} else if(GetPVarInt(playerid, "InHouse") != 0) {
		    PlayerTextDrawSetString(playerid, TD_Zone, "House");
		} else if(GetPlayerInterior(playerid) != 0) {
            PlayerTextDrawSetString(playerid, TD_Zone, "Interior");
		} else {
		    if(GetPlayer2DZone(playerid, zone, 30) != 0) {
				PlayerTextDrawSetString(playerid, TD_Zone, zone);
			} else {
				PlayerTextDrawSetString(playerid, TD_Zone, "Unknown");
			}
		}
        for(new i;i<4;i++)
		{
			TextDrawShowForPlayer(playerid,TD_R_Hunger[i]);
			TextDrawShowForPlayer(playerid,TD_R_Thirst[i]);
		}
		PlayerTextDrawShow(playerid,TD_R_HungerText);
		PlayerTextDrawShow(playerid,TD_R_ThirstText);
		PlayerTextDrawShow(playerid, TD_Zone);
		SetPVarInt(playerid, "MapInfoHide", 0);
	}

	return 1;
}

COMMAND:togafk(playerid, params[]) {
	if(GetPVarInt(playerid, "Togafk") == 0) {
		SetPVarInt(playerid, "Togafk", 1);
		SendClientMessage(playerid, COLOR_WHITE, "你现在不会接收到AFK时长提醒, 再次输入激活功能.");
	} else {
		SetPVarInt(playerid, "Togafk", 0);
		SendClientMessage(playerid, COLOR_WHITE, "AFK时长提醒开启.");
	}

	return 1;
}

COMMAND:tognews(playerid, params[]) {
	if(GetPVarInt(playerid, "Tognews") == 0) {
		SetPVarInt(playerid, "Tognews", 1);
		SendClientMessage(playerid, COLOR_WHITE, "你现在不会接收到新闻, 再次输入激活功能.");
	} else {
		SetPVarInt(playerid, "Tognews", 0);
		SendClientMessage(playerid, COLOR_WHITE, "你现在会接收到新闻了.");
	}
	
	return 1;
}

COMMAND:charge(playerid, params[]) {//
	new user[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /charge [游戏名称]");
	if(!IsValidPlayerName(user)) return SendClientMessage(playerid, COLOR_GREY, "你必须输入一个Firstname_Lastname格式的新名字.");
    if(PlayerInfo[playerid][pFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "你只有成为LAPD警员添加指控.");
	if(GetPVarInt(playerid, "LAPDDuty") == 0) return SendClientMessage(playerid, COLOR_GREY, "你必须上班添加指控.");
	if(IsPlayerAtLAPDComputer(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "你必须得要在一台电脑上开始.");
    new query[110];
	SetPVarString(playerid, "LAPDCharge", user);
	mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_users` WHERE `user` = '%e'", user);
	mysql_function_query(sqlHandle, query, true, "OnCommandCharge", "i", playerid);
	return 1;
}

COMMAND:prison(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] != 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	new
		user,
		time,
		msg[200],
		reason[128],
		string[128];

	if(sscanf(params, "uis[128]", user, time, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /prison [玩家ID] [分钟] [原因]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "ii", user, time);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerInRangeOfPoint(playerid, 5, 1807.2378,-1538.6150,5700.4287)) return SendClientMessage(playerid, COLOR_GREY, "你不在圣安地列斯监狱设施.");
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(!IsPlayerInRangeOfPoint(user, 5, 1807.2378,-1538.6150,5700.4287)) return SendClientMessage(playerid, COLOR_GREY, "嫌犯必须在圣安地列斯监狱设施旁.");
	if(time < 60 || time > 600) return SendClientMessage(playerid, COLOR_GREY, "在圣安地列斯监狱设施你必须监禁嫌犯60分钟到600分钟. (一到十小时)");
	if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "你不能监禁你自己.");
	SetPlayerPosEx(user, 5, 154.7240,1406.3398,10.5950, 0, 0, 0);
	SetCameraBehindPlayer(user);
	format(msg, sizeof(msg), "你已经被逮捕并且监禁 %i 分钟.", time);
	SendClientMessage(user, COLOR_WHITE, msg);
	format(string, sizeof(string), "[LAW] %s 已经被 %s 逮捕并且监禁 %i 分钟至圣安地列斯监狱.", PlayerInfo[user][pName], PlayerInfo[playerid][pName], time);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	PlayerInfo[user][pPrisonTime] = time;
	PlayerInfo[user][pPrisoned] = 1;
	PlayerInfo[user][pCuffed] = 0;
	SetPlayerSpecialAction(user, SPECIAL_ACTION_NONE);
	mysql_format(sqlHandle, msg, sizeof(msg), "INSERT INTO `samp_arrests` (`user`, `time`, `reason`) VALUES ('%e', %i, '%e')", PlayerInfo[user][pName], time, reason);
	mysql_function_query(sqlHandle, msg, false, "", "");
	return 1;
}

COMMAND:arrest(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] != 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	new
		user,
		time,
		cell,
		reason[128],
		string[128];
		
	if(sscanf(params, "uiis[128]", user, time, cell, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /arrest [玩家ID] [分钟] [cell] [原因]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "iii", user, time, cell);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerInRangeOfPoint(playerid, 5, 221.6334, 114.6567, 999.0156)) return SendClientMessage(playerid, COLOR_GREY, "你不在LS警察局的监狱旁.");
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(cell < 1 || cell > 4) return SendClientMessage(playerid, COLOR_GREY, "你必须选择一个在LS警察局的监狱 (1 - 4).");
	if(!IsPlayerInRangeOfPoint(user, 5, 221.6334, 114.6567, 999.0156)) return SendClientMessage(playerid, COLOR_GREY, "你想要逮捕的嫌犯不在监狱附近.");
	if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "你不能逮捕你自己.");
	new msg[200];
	switch(cell) {
		case 1: {
			SetPlayerPosEx(user, 5, 215.1684, 109.9195, 999.0156, 0, GetPlayerInterior(user), GetPlayerVirtualWorld(user));
		}
		case 2: {
			SetPlayerPosEx(user, 5, 219.2462, 109.9087, 999.0156, 0, GetPlayerInterior(user), GetPlayerVirtualWorld(user));
		}
		case 3: {
			SetPlayerPosEx(user, 5, 223.1916, 109.9863, 999.0156, 0, GetPlayerInterior(user), GetPlayerVirtualWorld(user));
		}
		default: {
			SetPlayerPosEx(user, 5, 227.1033, 109.8796, 999.0156, 0, GetPlayerInterior(user), GetPlayerVirtualWorld(user));
		}
	}
	
	SetCameraBehindPlayer(user);
	
	format(msg, sizeof(msg), "你已经被LAPD逮捕, 看守时长: %i 分钟.", time);
	SendClientMessage(user, COLOR_WHITE, msg);
	format(string, sizeof(string), "[LAW] %s 已经被 %s 逮捕并监禁 %i 分钟至LSC监狱.", PlayerInfo[user][pName], PlayerInfo[playerid][pName], time);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	SetPVarInt(user, "Arrest", time);
	SetPVarInt(user, "Arrested", 1);
	mysql_format(sqlHandle, msg, sizeof(msg), "INSERT INTO `samp_arrests` (`user`, `time`, `reason`) VALUES ('%e', %i, '%e')", PlayerInfo[user][pName], time, reason);
	mysql_function_query(sqlHandle, msg, false, "", "");
	return 1;
}

COMMAND:refreshjail(playerid, params[]) {
    if(GetPVarInt(playerid, "AdminJailed") != 0) {
		if(PlayerInfo[playerid][pAdminJailX] == 0.0) {
		    CreateNewAdminJailPickup(playerid);
		} else {
			DestroyDynamicPickup(AJPickup[playerid]);
		    AJPickup[playerid] = CreateDynamicPickup(1247, 1, PlayerInfo[playerid][pAdminJailX], PlayerInfo[playerid][pAdminJailY], PlayerInfo[playerid][pAdminJailZ], playerid + 1, 25, playerid);
		}
	} else {
		SendClientMessage(playerid, COLOR_GREY, "你未被管理员监禁.");
	}
	
	return 1;
}

COMMAND:addspike(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 1) {
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你不能在交通工具内放置钉刺带.");
	    if(GetPVarInt(playerid, "LAPDDuty") > 0) {
	        new Float:X,
	            Float:Y,
	            Float:Z,
	            Float:A;
	            
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, A);
		    CreateStrip(X, Y, Z, A);
    	} else {
		    SendClientMessage(playerid, COLOR_GREY, "你必须在LAPD上班后才能管理钉刺带.");
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	
	return 1;
}

COMMAND:clearspike(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 1) {
	    if(GetPVarInt(playerid, "LAPDDuty") > 0) {
			new msg[100];
			DeleteAllStrips();
			format(msg, sizeof(msg), "[通知]: %s %s 已经撤出了所有钉刺带.", GetFactionRank(playerid), GetNameWithSpace(playerid, 1));
			foreach(new p : Player) {
                if(PlayerInfo[p][pFaction] == 1) {
					SendClientMessage(p, COLOR_BLUE, msg);
				}
			}
    	} else {
		    SendClientMessage(playerid, COLOR_GREY, "你必须在LAPD上班后才能管理钉刺带.");
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:delspike(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 1) {
	    if(GetPVarInt(playerid, "LAPDDuty") > 0) {
	        if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你不能在交通工具内移除钉刺带.");
            DeleteClosestStrip(playerid);
    	} else {
		    SendClientMessage(playerid, COLOR_GREY, "你必须在LAPD上班后才能管理钉刺带.");
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:clearchat(playerid, params[]) {
	for(new i = 0; i != 21; i++) {
		SendClientMessage(playerid, COLOR_GREY, " ");
	}

	return 1;
}

COMMAND:walk(playerid, params[]) {
    switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "PED", "WALK_gang1", 4.1, 1, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "FAT", "FatWalk", 4.1, 1, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "MUSCULAR", "MuscleWalk", 4.1, 1, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "PED", "WALK_fatold", 4.1, 1, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "PED", "WALK_gang2", 4.1, 1, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "PED", "WALK_player", 4.1, 1, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "PED", "WOMAN_walkbusy", 4.1, 1, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "PED", "WOMAN_walksexy", 4.1, 1, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /walk [1-8]");
	}

	return 1;
}

COMMAND:unload(playerid, params[]) {
	if(PlayerInfo[playerid][pJob] != 1) return SendClientMessage(playerid, COLOR_GREY, "你必须成为垃圾清洁工来卸载垃圾.");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你必须在装垃圾的垃圾车内卸载垃圾.");
    if(!IsPlayerInRangeOfPoint(playerid, 6, 1771.8794, -2048.9001, 13.1607)) return SendClientMessage(playerid, COLOR_GREY, "你必须靠近El Corona的垃圾卸载点来卸载垃圾.");
	new vehicle = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicle) == 408 && VehicleInfo[vehicle][vType] == VEHICLE_JOB) {
		if(VehicleInfo[vehicle][vTrashbags] > 0) {
	   		ShowPlayerDialog(playerid, DIALOG_GARBAGE, DIALOG_STYLE_MSGBOX, "{FF9900}工作提示", "你想将车上的垃圾卸载吗?", "是的", "不用了");
		} else {
		    SendClientMessage(playerid, COLOR_GREY, "你没有装载任何垃圾.你必须装载垃圾后才能卸载.");
		}
	}

	return 1;
}

COMMAND:hq(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 1) {
	    new message[128];
	    if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /hq [message]");
	    //if(depRadio[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "You are not in possession of an item which could be used to communicate on the department's frequencies.");
        new len = strlen(message);
		if(len + MAX_PLAYER_NAME + 41 > 128) {
			new buffer[128];
			strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 41 - 4);
			format(buffer, sizeof(buffer), "** [HQ] %s: %s ...", GetNameWithSpace(playerid, 1), buffer);
			strdel(message, 0, 128 - MAX_PLAYER_NAME - 41 - 4);
			format(message, sizeof(message), "** [HQ] %s: ... %s", GetNameWithSpace(playerid, 1), message);
       		ProxDetectorSplittedEx(20, playerid, buffer, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 0, 1);
			foreach(new i : Player) {
			    if(PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction] && depRadio[i] != 0) {
					SendClientMessage(i, COLOR_CYAN, buffer);
					SendClientMessage(i, COLOR_CYAN, message);
				}
			}
		} else {
		    format(message, sizeof(message), "** [HQ] %s: %s", GetNameWithSpace(playerid, 1), message);
			ProxDetectorEx(20, playerid, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 0, 1);
			foreach(new i : Player)
			{
			    if(PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction])
				{
					SendClientMessage(i, COLOR_CYAN, message);
				}
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:setfreq(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pSidejob] == 1)
	{
		ShowPlayerDialog(playerid,DIALOG_SETFREQ, DIALOG_STYLE_INPUT, "对讲机", "请输入一个对讲机频率, 必须在1到3之间." ,"进入", "取消");
	}
	return 1;
}


COMMAND:rlow(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2)
	{
	    new message[128];
	    if(PlayerInfo[playerid][pFreq] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你必须先用/setfreq 来挑选频率.");
	    if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /r [message]");
	    //if(depRadio[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "You are not in possession of an item which could be used to communicate on the department's frequencies.");
        new len = strlen(message);
		if(len + MAX_PLAYER_NAME + 41 > 128)
		{
			new buffer[128];
			strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 41 - 4);
			format(buffer, sizeof(buffer), "** [CH: 911, S:%i] %s (低声): %s ...", PlayerInfo[playerid][pFreq], GetNameWithSpace(playerid, 1), buffer);
			strdel(message, 0, 128 - MAX_PLAYER_NAME - 41 - 4);
			format(message, sizeof(message), "** [CH: 911, S:%i] %s (低声): ... %s", PlayerInfo[playerid][pFreq], GetNameWithSpace(playerid, 1), message);
       		ProxDetectorSplittedEx(3, playerid, buffer, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 0, 1);
			foreach(new i : Player)
			{
			    if(PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction] && depRadio[i] != 0 && PlayerInfo[i][pFreq] == PlayerInfo[playerid][pFreq])
				{
					SendClientMessage(i, COLOR_TAN, buffer);
					SendClientMessage(i, COLOR_TAN, message);
				}
			}
		}
		else
		{
		    format(message, sizeof(message), "** [CH: 911, S:%i] %s (低声): %s", PlayerInfo[playerid][pFreq], GetNameWithSpace(playerid, 1), message);
			ProxDetectorEx(3, playerid, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 0, 1);
			foreach(new i : Player)
			{
			    if(PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction] && PlayerInfo[i][pFreq] == PlayerInfo[playerid][pFreq])
				{
					SendClientMessage(i, COLOR_TAN, message);
				}
			}
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:r(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pSidejob] == 1)
	{
	    new message[128];
	    if(PlayerInfo[playerid][pFreq] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你必须先用/setfreq 来挑选频率.");
	    if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /r [message]");
	    //if(depRadio[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "You are not in possession of an item which could be used to communicate on the department's frequencies.");
        new len = strlen(message);
		if(len + MAX_PLAYER_NAME + 41 > 128)
		{
			new buffer[128];
			strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 41 - 4);
			format(buffer, sizeof(buffer), "** [CH: 911, S:%i] %s: %s ...", PlayerInfo[playerid][pFreq], GetNameWithSpace(playerid, 1), buffer);
			strdel(message, 0, 128 - MAX_PLAYER_NAME - 41 - 4);
			format(message, sizeof(message), "** [CH: 911, S:%i] %s: ... %s", PlayerInfo[playerid][pFreq], GetNameWithSpace(playerid, 1), message);
       		ProxDetectorSplittedEx(20, playerid, buffer, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 0, 1);
			foreach(new i : Player)
			{
			    if(PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction] && depRadio[i] != 0 && PlayerInfo[i][pFreq] == PlayerInfo[playerid][pFreq] || PlayerInfo[playerid][pSidejob] == 1)
				{
					SendClientMessage(i, COLOR_TAN, buffer);
					SendClientMessage(i, COLOR_TAN, message);
				}
			}
		}
		else
		{
		    format(message, sizeof(message), "** [CH: 911, S:%i] %s: %s", PlayerInfo[playerid][pFreq], GetNameWithSpace(playerid, 1), message);
			ProxDetectorEx(20, playerid, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 0, 1);
			foreach(new i : Player)
			{
			    if(PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction] && PlayerInfo[i][pFreq] == PlayerInfo[playerid][pFreq] || PlayerInfo[playerid][pSidejob] == 1)
				{
					SendClientMessage(i, COLOR_TAN, message);
				}
			}
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	
	return 1;
}

ALTCOMMAND:d->department;
COMMAND:department(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pSidejob] == 1) {
	    new message[128];
	    if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /department [message]");
	    //if(depRadio[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "You are not in possession of an item which could be used to communicate on the department's frequencies.");
        new len = strlen(message);
		if(len + MAX_PLAYER_NAME + 45 > 128) {
			new buffer[128];
			strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 45 - 4);
			format(buffer, sizeof(buffer), "** [LAW] %s: %s ...", GetNameWithSpace(playerid, 1), buffer);
			strdel(message, 0, 128 - MAX_PLAYER_NAME - 45 - 4);
			format(message, sizeof(message), "** [LAW] %s: ... %s", GetNameWithSpace(playerid, 1), message);
       		ProxDetectorSplittedEx(20, playerid, buffer, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 0, 1);
  			foreach(new i : Player)
	  		{
			    if(PlayerInfo[i][pFaction] == 1 || PlayerInfo[i][pFaction] == 2 || PlayerInfo[playerid][pSidejob] == 1)
				{
					SendClientMessage(i, COLOR_EMTRED, buffer);
					SendClientMessage(i, COLOR_EMTRED, message);
				}
			}
		}
		else
		{
		    format(message, sizeof(message), "** [LAW] %s: %s", GetNameWithSpace(playerid, 1), message);
			ProxDetectorEx(20, playerid, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 0, 1);
			foreach(new i : Player)
			{
			    if(PlayerInfo[i][pFaction] == 1 || PlayerInfo[i][pFaction] == 2 || PlayerInfo[playerid][pSidejob] == 1)
				{
					SendClientMessage(i, COLOR_EMTRED, message);
				}
			}
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	
	return 1;
}

COMMAND:takebox(playerid, params[]) {
	if(PlayerInfo[playerid][pJob] != 3) return SendClientMessage(playerid, COLOR_GREY, "你必须成为送货员才能从Burrito上卸载货物.");
	if(GetPVarInt(playerid, "Delivery") == 0) return SendClientMessage(playerid, COLOR_GREY, "你现在并不是送货员或者你不在你目标产业周围.");
	if(PlayerInfo[playerid][pItemType][0] != 0) return SendClientMessage(playerid, COLOR_GREY, "你手中已经有物品了.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你不能在车内装备货物.");
	new Float:X,
		Float:Y,
		Float:Z,
		model,
		takeID = -1,
		Float:distance;

    for(new i = 0; i != MAX_VEHICLES; i++) {
        if(IsVehicleSpawned(i)) {
            model = GetVehicleModel(i);
            if(model == 482) {
				GetVehiclePos(i, X, Y, Z);
               	if(IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z) && VehicleInfo[i][vType] == VEHICLE_JOB && (takeID == -1 || GetPlayerDistanceFromPoint(playerid, X, Y, Z) < distance)) {
					takeID = i;
					distance = GetPlayerDistanceFromPoint(playerid, X, Y, Z);
				}
			}
		}
	}

	if(takeID != -1) {
	    if(VehicleInfo[takeID][vBoxes] == 0) return SendClientMessage(playerid, COLOR_GREY, "这辆车是空的, 请去Ocean Dock装载货物.");
        new me[90];
		format(me, sizeof(me), "** %s 打开Burrito的后备箱并且取出了一个箱子.", GetNameWithSpace(playerid, 1));
		SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
        strins(me, "> ", 3);
        SendClientMessage(playerid, COLOR_PINK, me);
	    VehicleInfo[takeID][vBoxes]--;
	    SetPlayerItem(playerid, 241, 0);
	} else {
	    SendClientMessage(playerid, COLOR_GREY, "你不在你公司的Burrito周围.");
	}

	return 1;
}

COMMAND:putbox(playerid, params[]) {
	if(PlayerInfo[playerid][pJob] == 3) {
	    if(PlayerInfo[playerid][pItemType][0] != 241) return SendClientMessage(playerid, COLOR_GREY, "你手中没有一个可以放入Burrito的货物.");
        if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你不能在车上时把货物装入Burrito.");
		new Float:X,
			Float:Y,
			Float:Z,
			Float:distance,
			model,
			putID = -1;

	    for(new i = 0; i != MAX_VEHICLES; i++) {
	        if(IsVehicleSpawned(i)) {
	            model = GetVehicleModel(i);
	            if(model == 482) {
					GetVehiclePos(i, X, Y, Z);
                	if(IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z) && VehicleInfo[i][vType] == VEHICLE_JOB && (putID == -1 || GetPlayerDistanceFromPoint(playerid, X, Y, Z) < distance)) {
						putID = i;
						distance = GetPlayerDistanceFromPoint(playerid, X, Y, Z);
					}
				}
			}
		}


		if(putID != -1) {
			if(VehicleInfo[putID][vBoxes] == 5) return SendClientMessage(playerid, COLOR_GREY, "你的Burrito不能装超过5个货物.");
			new me[90];
			format(me, sizeof(me), "** %s 打开Burrito的后备箱并存入了一个箱子.", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
			strins(me, "> ", 3);
			SendClientMessage(playerid, COLOR_PINK, me);
            ApplyAnimation(playerid, "CARRY", "putdwn", 4.1, 0, 1, 1, 0, 0, 1);
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
            VehicleInfo[putID][vBoxes]++;
            RemoveItemType(playerid, 241);
            if(VehicleInfo[putID][vBoxes]>= 5) {
				SendClientMessage(playerid, COLOR_WHITE, "你的Burrito装满了, 上车运送货物.");
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:taketrash(playerid, params[]) {
    if(PlayerInfo[playerid][pJob] != 1) return SendClientMessage(playerid, COLOR_GREY, "你必须成为垃圾清洁工来收垃圾.");
	if(GetPVarInt(playerid, "Trashmaster") == 0) return SendClientMessage(playerid, COLOR_GREY, "你不在垃圾箱附近.");
	if(PlayerInfo[playerid][pItemType][0] != 0) return SendClientMessage(playerid, COLOR_GREY, "你手中已经有物品了.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你不能在车内收垃圾.");
	new trashID = GetPVarInt(playerid, "TrashmasterID"),
	    trashCount = GetPVarInt(playerid, "TrashCount");
	    
	if(!IsPlayerInRangeOfPoint(playerid, 2.5, trashcans[trashID][0], trashcans[trashID][1], trashcans[trashID][2])) return SendClientMessage(playerid, COLOR_GREY, "你没有靠近垃圾箱.");
	new me[80];
	SendClientMessage(playerid, COLOR_WHITE, "你从垃圾箱内拿走了一袋垃圾, 把它丢入垃圾车内 (( /puttrash )).");
	format(me, sizeof(me), "** %s 从垃圾箱内拿出一袋垃圾.", GetNameWithSpace(playerid, 1));
	SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
	strins(me, "> ", 3);
	SendClientMessage(playerid, COLOR_PINK, me);
	SetPlayerItem(playerid, 240, 0);
	if(trashCount >= 3) {
	    SendClientMessage(playerid, COLOR_GREY, "你已经清空了垃圾箱, 坐上你的垃圾车来继续.");
	    SetPVarInt(playerid, "Trashmaster", 0);
		SetPVarInt(playerid, "TrashmasterID", 0);
		SetPVarInt(playerid, "TrashCount", 0);
	} else {
       	SetPVarInt(playerid, "TrashCount", trashCount + 1);
	}
	
	return 1;
}

COMMAND:puttrash(playerid, params[]) {
    if(PlayerInfo[playerid][pJob] != 1) return SendClientMessage(playerid, COLOR_GREY, "你必须成为垃圾清洁工来收垃圾.");
	if(PlayerInfo[playerid][pItemType][0] != 240) return SendClientMessage(playerid, COLOR_GREY, "你手中没有垃圾袋.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你不能在车内把垃圾丢入垃圾车.");
	new Float:X,
		Float:Y,
		Float:Z,
		Float:X2,
		Float:Y2,
		Float:Z2,
		model,
		putID = -1,
		Float:distanceCheck,
		Float:distance;

	GetPlayerPos(playerid, X2, Y2, Z2);
    for(new i = 0; i != MAX_VEHICLES; i++) {
        if(IsVehicleSpawned(i)) {
            model = GetVehicleModel(i);
            if(model == 408) {
				GetVehiclePos(i, X, Y, Z);
				distanceCheck = DistanceBetweenPoints(X, Y, Z, X2, Y2, Z2);
               	if(distanceCheck < 5.5 && distanceCheck > 3.5 && VehicleInfo[i][vType] == VEHICLE_JOB && (putID == -1 || distanceCheck < distance)) {
					putID = i;
					distance = distanceCheck;
				}
			}
		}
	}
	
	if(putID != -1) {
	    if(VehicleInfo[putID][vTrashbags] == MAX_TRASHMASTER) {
			SendClientMessage(playerid, COLOR_GREY, "这辆垃圾车装满了, 请去El Corona的垃圾场卸载来继续.");
			SetPVarInt(playerid, "Trashmaster", 0);
			SetPVarInt(playerid, "TrashmasterID", 0);
			SetPVarInt(playerid, "TrashCount", 0);
		} else {
	        new me[85],
	            earnings = random(6) + 10;
	            
			format(me, sizeof(me), "** %s 把垃圾丢入垃圾车.", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
			strins(me, "> ", 3);
			SendClientMessage(playerid, COLOR_PINK, me);
			PlayerInfo[playerid][pPaycheck] += earnings;
			format(me, sizeof(me), "Earnings: $%i, Paycheck: $%i.", earnings, PlayerInfo[playerid][pPaycheck]);
			PlayerTextDrawSetString(playerid, TD_JOB_FirstLine, me);
			PlayerTextDrawShow(playerid, TD_JOB_FirstLine);
			PaycheckTimerVar[playerid] = SetTimerEx("PaycheckTimer", 5000, false, "i", playerid);
	        ApplyAnimation(playerid, "CARRY", "putdwn", 4.1, 0, 1, 1, 0, 0, 1);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	        VehicleInfo[putID][vTrashbags]++;
	        RemoveItemType(playerid, 240);
		}
	} else {
		SendClientMessage(playerid, COLOR_GREY, "你不在任何垃圾车后斗附近.");
	}
	
	return 1;
}

COMMAND:takepizza(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "你必须成为披萨送货员才能从车内取出披萨.");
	if(GetPVarInt(playerid, "Pizza") == 0) return SendClientMessage(playerid, COLOR_GREY, "你不是披萨送货员.");
	if(PlayerInfo[playerid][pItemType][0] != 0) return SendClientMessage(playerid, COLOR_GREY, "你手中已经有物品了.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你不能在车内装备披萨.");
	new Float:X,
		Float:Y,
		Float:Z,
		model,
		takeID = -1,
		Float:distance;
    for(new i = 0; i != MAX_VEHICLES; i++)
	{
        if(IsVehicleSpawned(i))
		{
            model = GetVehicleModel(i);
            if(model == 448)
			{
				GetVehiclePos(i, X, Y, Z);
               	if(IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z) && VehicleInfo[i][vType] == VEHICLE_JOB && (takeID == -1 || GetPlayerDistanceFromPoint(playerid, X, Y, Z) < distance))
				{
					takeID = i;
					distance = GetPlayerDistanceFromPoint(playerid, X, Y, Z);
				}
			}
		}
	}
	if(takeID != -1)
	{
	    if(VehicleInfo[takeID][vPizzas] == 0) return SendClientMessage(playerid, COLOR_GREY, "这辆车上没有披萨了, 去Idlewood取更多披萨.");
        new me[90];
		format(me, sizeof(me), "** %s 打开披萨运送车的后斗, 取出一盒披萨.", GetNameWithSpace(playerid, 1));
		SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
		strins(me, "> ", 3);
		SendClientMessage(playerid, COLOR_PINK, me);
	    VehicleInfo[takeID][vPizzas]--;
	    SetPlayerItem(playerid, 29, 0);
	}
	else SendClientMessage(playerid, COLOR_GREY, "你不在任何披萨运送车周围.");
	return 1;
}

COMMAND:putpizza(playerid, params[]) {
	if(PlayerInfo[playerid][pJob] == 2) {
	    if(PlayerInfo[playerid][pItemType][0] != 29) return SendClientMessage(playerid, COLOR_GREY, "你手里没有可以放入披萨运送车后斗的披萨.");
        if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你不能在车内把披萨放入披萨运送车后斗.");
		new Float:X,
			Float:Y,
			Float:Z,
			Float:distance,
			model,
			putID = -1;

	    for(new i = 0; i != MAX_VEHICLES; i++) {
	        if(IsVehicleSpawned(i)) {
	            model = GetVehicleModel(i);
	            if(model == 448) {
					GetVehiclePos(i, X, Y, Z);
                	if(IsPlayerInRangeOfPoint(playerid, 2.5, X, Y, Z) && VehicleInfo[i][vType] == VEHICLE_JOB && (putID == -1 || GetPlayerDistanceFromPoint(playerid, X, Y, Z) < distance)) {
						putID = i;
						distance = GetPlayerDistanceFromPoint(playerid, X, Y, Z);
					}
				}
			}
		}
		
		
		if(putID != -1)
		{
			if(VehicleInfo[putID][vPizzas] > 4) return SendClientMessage(playerid, COLOR_GREY, "你不能在披萨运送车内存放超过五盒披萨.");
			new me[90];
			format(me, sizeof(me), "** %s 打开披萨运送车的后斗, 放入一盒皮萨.", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
			strins(me, "> ", 3);
			SendClientMessage(playerid, COLOR_PINK, me);
            ApplyAnimation(playerid, "CARRY", "putdwn", 4.1, 0, 1, 1, 0, 0, 1);
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
            VehicleInfo[putID][vPizzas]++;
            RemoveItemType(playerid, 29);
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	
	return 1;
}

COMMAND:quitfaction(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_GREY, "你不是任何组织的成员.");
	new query[115];
	format(query, sizeof(query), "%s %s 离开了组织.", GetFactionRank(playerid), GetNameWithSpace(playerid));
	foreach(new i : Player) {
	    if(PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction]) {
	        SendClientMessage(i, COLOR_WHITE, query);
	    }
	}

	RemovePlayerFromFaction(playerid);
	return 1;
}

COMMAND:interview(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 3) {
	    if(GetPVarInt(playerid, "SanDuty") > 0) {
	        if(sanInterviewRequest[2] != 0 && sanInterviewRequest[1] == playerid) {
	            SendClientMessage(playerid, COLOR_LIGHTRED, "你已经停止了广播采访.");
	            SendClientMessage(sanInterviewRequest[0], COLOR_LIGHTRED, "新闻台的记者已经停止广播采访.");
	            sanInterviewRequest[0] = -1;
	            sanInterviewRequest[1] = -1;
	            sanInterviewRequest[2] = 0;
			} else {
			    new user;
				if(sscanf(params, "i", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /interview [玩家ID]");
		        if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
				if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
				if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				if(playerid == user) return SendClientMessage(playerid, COLOR_GREY, "你不能采访你自己.");
				if(sanInterviewRequest[2] != 0) return SendClientMessage(playerid, COLOR_GREY, "已经有一个采访节目在广播中了.");
				new msg[115];
				format(msg, sizeof(msg), "%s 已经被邀请采访, 请等待对方的同意.", GetNameWithSpace(user, 1));
				SendClientMessage(playerid, COLOR_WHITE, msg);
				format(msg, sizeof(msg), "新闻台记者 %s 邀请你参加参访, 使用 /joininterview加入采访.", GetNameWithSpace(playerid, 1));
				SendClientMessage(user, COLOR_ADVERT, msg);
				sanInterviewRequest[0] = user;
				sanInterviewRequest[1] = playerid;
			}
	    } else {
		    SendClientMessage(playerid, COLOR_GREY, "你必须上班并佩戴装备来采访.");
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
 	}
 	
	return 1;
}

COMMAND:joininterview(playerid, params[]) {
	if(sanInterviewRequest[0] != playerid) return SendClientMessage(playerid, COLOR_GREY, "你最近没有被邀请参加新闻台采访.");
	SetPVarInt(sanInterviewRequest[1], "SanInterview", 1);
	SetPVarInt(playerid, "SanInterview", 1);
	SendClientMessage(playerid, COLOR_LIGHTRED, "你现在正在直播, 使用 /live 来对公众说话.");
	SendClientMessage(sanInterviewRequest[1], COLOR_LIGHTRED, "你现在正在直播, 使用 /live 来对公众说话.");
	sanInterviewRequest[2] = 1;
	return 1;
}

COMMAND:live(playerid, params[]) {
    new message[128];
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /live [message]");
	if(sanInterviewRequest[0] == playerid) {
		new len = strlen(message);
		if(len + MAX_PLAYER_NAME + 17 > 128) {
			new buffer[128];
			strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 14 - 4);
			format(buffer, sizeof(buffer), "新闻台嘉宾 %s: %s ...", GetNameWithSpace(playerid), buffer);
			strdel(message, 0, 128 - MAX_PLAYER_NAME - 14 - 4);
			format(message, sizeof(message), "新闻台嘉宾 %s: ... %s", GetNameWithSpace(playerid), message);
		   	foreach(new i : Player) {
		   	    if(GetPVarInt(i, "Tognews") == 0 || i != sanInterviewRequest[0] || i != sanInterviewRequest[1]) {
					SendClientMessage(i, COLOR_ADVERT, buffer);
					SendClientMessage(i, COLOR_ADVERT, message);
				}
			}
		} else {
		    format(message, sizeof(message), "新闻台嘉宾 %s: %s", GetNameWithSpace(playerid), message);
		    foreach(new i: Player) {
		        if(GetPVarInt(i, "Tognews") == 0 || i != sanInterviewRequest[0] || i != sanInterviewRequest[1]) {
					SendClientMessage(i, COLOR_ADVERT, message);
				}
			}
		}
	} else if(sanInterviewRequest[1] == playerid) {
	    new len = strlen(message);
		if(len + MAX_PLAYER_NAME + 17 > 128) {
			new buffer[128];
			strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
			format(buffer, sizeof(buffer), "新闻台记者 %s: %s ...", GetNameWithSpace(playerid), buffer);
			strdel(message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
			format(message, sizeof(message), "新闻台记者 %s: ... %s", GetNameWithSpace(playerid), message);
		   	foreach(new i : Player) {
		   	    if(GetPVarInt(i, "Tognews") == 0 || i != sanInterviewRequest[0] || i != sanInterviewRequest[1]) {
					SendClientMessage(i, COLOR_ADVERT, buffer);
					SendClientMessage(i, COLOR_ADVERT, message);
				}
			}
		} else {
		    format(message, sizeof(message), "新闻台记者 %s: %s", GetNameWithSpace(playerid), message);
		    foreach(new i : Player) {
		   	    if(GetPVarInt(i, "Tognews") == 0 || i != sanInterviewRequest[0] || i != sanInterviewRequest[1]) {
					SendClientMessage(i, COLOR_ADVERT, message);
				}
			}
		}
	} else {
        SendClientMessage(playerid, COLOR_GREY, "你现在正在直播.");
	}
	
	return 1;
}

COMMAND:news(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 3) {
	    if(GetPVarInt(playerid, "SanDuty") > 0) {
	        new message[128];
	        if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /news [内容]");
			new len = strlen(message);
			if(len + MAX_PLAYER_NAME + 17 > 128) {
			    new buffer[128];
			    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
			    format(buffer, sizeof(buffer), "新闻台记者 %s: %s ...", GetNameWithSpace(playerid), buffer);
			    strdel(message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
				format(message, sizeof(message), "新闻台记者 %s: ... %s", GetNameWithSpace(playerid), message);
	   			foreach(new i : Player) {
	   			    if(GetPVarInt(i, "Tognews") == 0 || i != playerid) {
						SendClientMessage(i, COLOR_ADVERT, buffer);
						SendClientMessage(i, COLOR_ADVERT, message);
					}
				}
			} else {
	            format(message, sizeof(message), "新闻台记者 %s: %s", GetNameWithSpace(playerid), message);
	      		foreach(new i : Player) {
			   	    if(GetPVarInt(i, "Tognews") == 0 || i != playerid) {
						SendClientMessage(i, COLOR_ADVERT, message);
					}
				}
			}
	    } else {
		    SendClientMessage(playerid, COLOR_GREY, "你必须上班并佩戴装备来播报新闻.");
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
 	}
 	
 	return 1;
}

COMMAND:uncuff(playerid, params[])
{
	new string[128],targetid;
	if(sscanf(params, "u", targetid)) SendClientMessage(playerid, COLOR_GREY, "用法: /uncuff [玩家ID]");
	else
	{
	    if (playerid == targetid) return SendClientMessage(playerid, COLOR_GREY, "你不能解开你自己的手铐.");
		if(PlayerInfo[playerid][pFaction] == 1)
		{
		    if(PlayerToPlayer(playerid,targetid,3.0))
		    {
    	        format(string, sizeof(string), "** %s 用手铐钥匙解开 %s 的手铐.", GetNameWithSpace(playerid, 1), GetNameWithSpace(targetid, 1));
				ProxDetector(12, playerid, string, COLOR_PINK);
    	        PlayerInfo[targetid][pCuffed] = 0;
    	        SetPlayerSpecialAction(targetid,SPECIAL_ACTION_NONE);
    	        RemovePlayerAttachedObject(targetid, HOLDOBJECT_CLOTH4);
    	    }
    	    else SendClientMessage(playerid,COLOR_GREY,"你离那人太远了!");
		}
	}
	return 1;
}

COMMAND:handcuff(playerid, params[])
{
	new string[128],targetid;
	if(sscanf(params, "u", targetid)) SendClientMessage(playerid, COLOR_GREY, "用法: /handcuff [玩家ID]");
	else
	{
	    if (playerid == targetid) return SendClientMessage(playerid, COLOR_GREY, "你不能拷上你自己.");
	    if(itemInPossession(playerid, 232) == 0) return SendClientMessage(playerid, COLOR_GREY, "你必须有一副手铐来铐住其他人.");
		if(PlayerInfo[playerid][pFaction] == 1)
		{
		    if(PlayerToPlayer(playerid,targetid,3.0))
		    {
    	        format(string, sizeof(string), "** %s 用手铐铐住了 %s.", GetNameWithSpace(playerid, 1), GetNameWithSpace(targetid, 1));
				ProxDetector(12, playerid, string, COLOR_PINK);
    	        SetCameraBehindPlayer(targetid);
    	        PlayerInfo[targetid][pCuffed] = 1;
    	        SetPlayerSpecialAction(targetid,SPECIAL_ACTION_CUFFED);
    	        SetPlayerAttachedObject(targetid, HOLDOBJECT_CLOTH4, 19418, 5, 0.002000,0.037999,-0.004000,-12.600098,126.699996,-119.800048,1.000000,1.000000,1.000000);
    	    }
    	    else SendClientMessage(playerid,COLOR_GREY,"你离那人太远了!");
		}
	}
	return 1;
}

/*COMMAND:handcuff(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1)
	{
	    if(GetPVarInt(playerid, "LAPDDuty") > 0)
		{
			new user;
			if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /handcuff [玩家ID]");
			if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
			if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
			if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
			if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
			if(playerid == user) return SendClientMessage(playerid, COLOR_GREY, "You cannot handcuff yourself.");
			if(itemInPossession(playerid, 232) == 0) return SendClientMessage(playerid, COLOR_GREY, "You have to be in possession of handcuffs in order to handcuff another player.");
			new Float:X,
				Float:Y,
				Float:Z;

			GetPlayerPos(user, X, Y, Z);
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "You are not around this player.");
			if(PlayerInfo[user][pItemType][items[232][iIdx]] != 0) return SendClientMessage(playerid, COLOR_GREY, "This player is currently holding an item in his hands, remove the item before proceeding.");
			new query[110],
				index = getFirstItemIndex(playerid, 232),
			    id = getItemID(playerid, index),
			    var = getItemVar(playerid, index);
			    
			SetPlayerItem(user, 232, var);
	        for(new i = 0; i != 10; i++) {
				if(PlayerInfo[playerid][pItemID][i] == id)
				{
				    if(i != 10)
					{
						RemovePlayerAttachedObject(playerid, i);
					}

					PlayerInfo[playerid][pItemVar][i] = 0;
					PlayerInfo[playerid][pItemType][i] = 0;
					PlayerInfo[playerid][pItemIndex][i] = 0;
					PlayerInfo[playerid][pItemID][i] = 0;
				}
			}
			mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", id);
			mysql_function_query(sqlHandle, query, false, "", "");
			RemovePlayerItemEx(playerid, id);
			PlayerInfo[user][pItemType][items[232][iIdx]] = 232;
			PlayerInfo[user][pItemIndex][items[232][iIdx]] = index;
			PlayerInfo[user][pItemID][items[232][iIdx]] = id;
			PlayerInfo[user][pItemVar][items[232][iIdx]] = var;
			SetPlayerAttachedObject(user, items[232][iIdx], items[232][objID], items[232][bone], cuffOffsets[PlayerInfo[user][pSkin]][0], cuffOffsets[PlayerInfo[user][pSkin]][1],
								    cuffOffsets[PlayerInfo[user][pSkin]][2], cuffOffsets[PlayerInfo[user][pSkin]][3], cuffOffsets[PlayerInfo[user][pSkin]][4], cuffOffsets[PlayerInfo[user][pSkin]][5],
									cuffOffsets[PlayerInfo[user][pSkin]][6], cuffOffsets[PlayerInfo[user][pSkin]][7], cuffOffsets[PlayerInfo[user][pSkin]][8]);

			format(query, sizeof(query), "** %s uses a pair of handcuffs in order to handcuff %s.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
			ProxDetector(12, playerid, query, COLOR_PINK);
			SetPlayerSpecialAction(user, SPECIAL_ACTION_CUFFED);
			SetPVarInt(user, "Handcuffed", 1);
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "You have to go on duty and equip your handcuffs before you are able to handcuff someone.");
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:uncuff(playerid, params[])
{
    if(PlayerInfo[playerid][pFaction] == 1)
	{
	    if(GetPVarInt(playerid, "LAPDDuty") > 0)
		{
		    new user;
			if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /uncuff [玩家ID]");
			if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
			if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
			if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
			if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
			if(playerid == user) return SendClientMessage(playerid, COLOR_GREY, "You cannot uncuff yourself.");
			if(GetPlayerSpecialAction(user) != SPECIAL_ACTION_CUFFED) return SendClientMessage(playerid, COLOR_GREY, "Player is not handcuffed.");
			new Float:X,
				Float:Y,
				Float:Z;

			GetPlayerPos(user, X, Y, Z);
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "You are not around the suspect.");
            new query[110];
			if(PlayerInfo[user][pItemType][items[232][iIdx]] == 232)
			{
			    SetPlayerItem(playerid, 232, PlayerInfo[user][pItemID][items[232][iIdx]]);
				RemovePlayerAttachedObject(user, items[232][iIdx]);
				mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", PlayerInfo[user][pItemID][0]);
				mysql_function_query(sqlHandle, query, false, "", "");
				RemovePlayerItemEx(user, PlayerInfo[user][pItemID][items[232][iIdx]]);
				PlayerInfo[user][pItemVar][items[232][iIdx]] = 0;
				PlayerInfo[user][pItemType][items[232][iIdx]] = 0;
				PlayerInfo[user][pItemIndex][items[232][iIdx]] = 0;
				PlayerInfo[user][pItemID][items[232][iIdx]] = 0;
			}
			else
			{
				new index = getFirstItemIndex(user, 232),
				    id = getItemID(user, index),
				    var = getItemVar(user, index);

				SetPlayerItem(playerid, 232, var);
		        for(new i = 0; i != 10; i++)
				{
					if(PlayerInfo[user][pItemID][i] == id)
					{
					    if(i != 10)
						{
							RemovePlayerAttachedObject(user, i);
						}

						PlayerInfo[user][pItemVar][i] = 0;
						PlayerInfo[user][pItemType][i] = 0;
						PlayerInfo[user][pItemIndex][i] = 0;
						PlayerInfo[user][pItemID][i] = 0;
					}
				}

				mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", id);
				mysql_function_query(sqlHandle, query, false, "", "");
				RemovePlayerItemEx(user, id);
			}
			
			format(query, sizeof(query), "** %s withdraws a key from %s duty belt in order to uncuff %s.", GetNameWithSpace(playerid, 1), HisHer(playerid), GetNameWithSpace(user, 1));
			ProxDetector(12, playerid, query, COLOR_PINK);
			SetPlayerSpecialAction(user, SPECIAL_ACTION_NONE);
			SetPVarInt(user, "Handcuffed", 0);
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "You have to go on duty and equip your handcuff keys in order to uncuff somebody.");
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}*/

COMMAND:ame(playerid, params[]) {
	new message[256];
	if(sscanf(params, "s[256]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /ame [action]");
	if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你正在被禁言.");
	new buffer[256];
	format(buffer, sizeof(buffer), "* > %s %s", GetNameWithSpace(playerid, 1), message);
	SendClientMessage(playerid, COLOR_PINK, buffer);
	format(buffer, sizeof(buffer), "* %s %s", GetNameWithSpace(playerid, 1), message);
	SetPlayerChatBubble(playerid, buffer, COLOR_PINK, 12.0, 10000);
	return 1;
}

COMMAND:searchlocker(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 1 && PlayerInfo[playerid][pRank] >= FactionInfo[1][fLeaderrank] - 1) {
		new user[MAX_PLAYER_NAME];
		if(sscanf(params, "s[24]", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /searchlocker [名称]");
		if(!IsValidPlayerName(user)) return SendClientMessage(playerid, COLOR_GREY, "你需要对方的名称.");
		new query[95];
		SetPVarString(playerid, "SearchLockerUsername", user);
		mysql_format(sqlHandle, query, sizeof(query), "SELECT `faction`, `badge` FROM `samp_users` WHERE `user` = '%e'", user);
		mysql_function_query(sqlHandle, query, true, "OnPlayerSearchLocker", "is", playerid, user);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:o->ooc;
COMMAND:ooc(playerid, params[]) {
	if(ooc == 1 || PlayerInfo[playerid][pAdminlevel] > 0) {
		new message[128];
	    if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /ooc [信息]");
		new len = strlen(message);
		if(len + MAX_PLAYER_NAME + 14 > 128) {
		    new buffer[128];
		    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 14 - 4);
		    format(buffer, sizeof(buffer), "[OOC] %s: %s ...", GetNameWithSpace(playerid), buffer);
		    strdel(message, 0, 128 - MAX_PLAYER_NAME - 14 - 4);
			format(message, sizeof(message), "[OOC] %s: ... %s", GetNameWithSpace(playerid), message);
   			foreach(new i : Player) {
				SendClientMessage(i, COLOR_OOC, buffer);
				SendClientMessage(i, COLOR_OOC, message);
			}
		} else {
            format(message, sizeof(message), "[OOC] %s: %s", GetNameWithSpace(playerid), message);
      		SendClientMessageToAll(COLOR_OOC, message);
		}
	}  else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: OOC频道已被管理员关闭..");
	}

	return 1;
}

COMMAND:locker(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pFaction] == 3) {
	    if((PlayerInfo[playerid][pFaction] == 1 && !IsPlayerInRangeOfPoint(playerid, 5, 267.1146, 118.1507, 1004.6172)) ||
		   (PlayerInfo[playerid][pFaction] == 2 && !IsPlayerInRangeOfPoint(playerid, 5, 254.2592, 78.3316, 1003.6406)) ||
		   (PlayerInfo[playerid][pFaction] == 3 && !IsPlayerInRangeOfPoint(playerid, 5, 345.4447, 164.7374, 1014.1875))) return SendClientMessage(playerid, COLOR_GREY, "你需要在你的更衣室内进行.");
	    ShowPlayerDialog(playerid, DIALOG_LOCKER, DIALOG_STYLE_LIST, "{FF9900}储物箱", "存放物品\n取出物品", "选择", "返回");
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:m->megaphone;
COMMAND:megaphone(playerid, params[]) {
	switch(PlayerInfo[playerid][pFaction]) {
	    case 1: {
	        if(GetPVarInt(playerid, "LAPDDuty") == 0) return SendClientMessage(playerid, COLOR_GREY, "你不是组织成员.");
			if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你之前被禁言了.");
			new message[128];
			if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /megaphone [message]");
			new len = strlen(message);
			if(len + MAX_PLAYER_NAME + 17 > 128) {
			    new buffer[128];
			    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
			    format(buffer, sizeof(buffer), "[%s (扩音器): %s ...]", GetNameWithSpace(playerid, 1), buffer);
			    strdel(message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
				format(message, sizeof(message), "[%s (扩音器): ... %s]", GetNameWithSpace(playerid, 1), message);
       			ProxDetectorSplitted(25, playerid, buffer, message, COLOR_DARKYELLOW);
			} else {
		        format(message, sizeof(message), "[%s (扩音器): %s]", GetNameWithSpace(playerid, 1), message);
				ProxDetector(25, playerid, message, COLOR_DARKYELLOW);
			}
	    }
	    case 2: {
	        if(GetPVarInt(playerid, "LSFDDuty") == 0) return SendClientMessage(playerid, COLOR_GREY, "你不是组织成员.");
			if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你之前被禁言了.");
			new message[128];
			if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /megaphone [message]");
			new len = strlen(message);
			if(len + MAX_PLAYER_NAME + 17 > 128) {
			    new buffer[128];
			    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
			    format(buffer, sizeof(buffer), "[%s (扩音器): %s ...]", GetNameWithSpace(playerid, 1), buffer);
			    strdel(message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
				format(message, sizeof(message), "[%s (扩音器): ... %s]", GetNameWithSpace(playerid, 1), message);
       			ProxDetectorSplitted(25, playerid, buffer, message, COLOR_DARKYELLOW);
			} else {
		        format(message, sizeof(message), "[%s (扩音器): %s]", GetNameWithSpace(playerid, 1), message);
				ProxDetector(25, playerid, message, COLOR_DARKYELLOW);
			}
	    }
	    default: {
	        SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	    }
	}

	return 1;
}

COMMAND:undetain(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 1) {
	    if(GetPVarInt(playerid, "LAPDDuty") == 0) return SendClientMessage(playerid, COLOR_GREY, "你需要上班才能使用.");
		new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /undetain [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(GetPVarInt(user, "detained") == 0) return SendClientMessage(playerid, COLOR_GREY, "对方没有被扣留在后车座.");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你需要下车才能释放.");
		if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "不能对你自己使用.");
		new msg[100];
		UnfreezePlayer(user);
		SendClientMessage(user, COLOR_WHITE, "对方将你从后车座释放下来.");
		format(msg, sizeof(msg), "你释放了对方, %s 可以下车了.", GetNameWithSpace(user, 1));
		SendClientMessage(playerid, COLOR_WHITE, msg);
		SetPVarInt(user, "detained", 0);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:detain(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 1) {
	    if(GetPVarInt(playerid, "LAPDDuty") == 0) return SendClientMessage(playerid, COLOR_GREY, "你需要上班才能使用.");
		new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /detain [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(GetPVarInt(user, "detained") == 1) return SendClientMessage(playerid, COLOR_GREY, "对方已经被扣押在后车座了.");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你需要下车才能进行.");
		if(!IsPlayerInAnyVehicle(user)) return SendClientMessage(playerid, COLOR_GREY, "对方需要在车内才能扣押.");
		new seat = GetPlayerVehicleSeat(user);
		if(seat != 2 && seat != 3) return SendClientMessage(playerid, COLOR_GREY, "对方需要被扣押在后座位.");
		if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "不能对你自己使用.");
		new vehicle = GetPlayerVehicleID(user),
		    vData[7];

		GetVehicleParamsEx(vehicle, vData[0], vData[1], vData[2], vData[3], vData[4], vData[5], vData[6]);
		if(vData[3] != 0) return SendClientMessage(playerid, COLOR_GREY, "请先给载具解锁.");//You are just able to detain a player as long as the vehicle's doors are unlocked
		new	Float:X,
		    Float:Y,
		    Float:Z,
			msg[128];

		GetPlayerPos(user, X, Y, Z);
		if(!IsPlayerInRangeOfPoint(playerid, 3.5, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
		FreezePlayer(user);
		SetPVarInt(user, "detained", vehicle);
		format(msg, sizeof(msg), "** %s 将 %s 扣押在 %s 的后座位.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1), vehicleData[GetVehicleModel(vehicle) - 400][typeName]);
		ProxDetector(12, playerid, msg, COLOR_PINK);

    } else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:frisk(playerid, params[]) {
	new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /frisk [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "不能对你自己使用.");
	new Float:X,
	    Float:Y,
	    Float:Z,
		msg[128];

	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 3.5, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	SetPVarInt(playerid, "friskPlayer", user);
	format(msg, sizeof(msg), "服务器: 你对 %s 发送搜身请求, 请等待对方回复你.", GetNameWithSpace(user, 1));
	SendClientMessage(playerid, COLOR_LIGHTRED, msg);
	format(msg, sizeof(msg), "服务器: %s 正在向你发送搜身请求, 输入 /acceptfrisk %i 接受.", GetNameWithSpace(playerid, 1), playerid);
	SendClientMessage(user, COLOR_LIGHTRED, msg);
	return 1;
}

COMMAND:acceptfrisk(playerid, params[]) {
    new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /acceptfrisk [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(GetPVarInt(user, "friskPlayer") != playerid) return SendClientMessage(playerid, COLOR_GREY, "对方还没有向你发送请求.");
	new Float:X,
	    Float:Y,
	    Float:Z,
	    msg[110];

	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 3.5, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "对方需要靠近你.");
	SetPVarInt(user, "friskPlayer", -1);
	SetPVarInt(user, "CurrentlyFrisking", playerid);
	format(msg, sizeof(msg), "** %s 伸出双手对 %s 进行搜身.", GetNameWithSpace(user, 1), GetNameWithSpace(playerid, 1));
	ProxDetector(12, user, msg, COLOR_PINK);
	new pItems[22],
		dialogMsg[850];

	getItemPage(playerid, pItems, sizeof(pItems), 1);
	if(pItems[0] != 0) {
		for(new i = 0; i != sizeof(pItems); i++) {
			if(pItems[i] == 0) {
				break;
			}

			if(isnull(dialogMsg)) {
			    if(pItems[i] >= 4 && pItems[i] <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 3) {
    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 19) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, i));
                } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
				}
			} else {
			    if(pItems[i] >= 4 && pItems[i] <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 3) {
    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 19) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
                } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
				}
			}

			if(getItemID(playerid, i) == PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]]) {
			    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
			}
		}

		if(itemIndexExists(playerid, 21)) {
			format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
		}

        SetPVarInt(user, "CurrentItemPage", 1);
		ShowPlayerDialog(user, DIALOG_FRISK, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "抢夺", "取消");
	} else {
		SendClientMessage(user, COLOR_GREY, "对方没有任何物品.");
	}

	return 1;
}

COMMAND:garage(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 2) {
	    if(IsPlayerInRangeOfPoint(playerid, 5, 1528.5630, -1519.0574, 13.5498)) {
	        new msg[96];
	        switch(garageState[3]) {
	            case 0: {
					MoveDynamicObject(garage[3], 1529.001, -1519.051, 17.6731, 0.6, 0, 0, 0);
			      	format(msg, sizeof(msg), "** %s 取出遥控操控车库大门.", GetNameWithSpace(playerid, 1));
				    ProxDetector(12, playerid, msg, COLOR_PINK);
			     	garageState[3] = 1;
	            }
	            default: {
					MoveDynamicObject(garage[3], 1529.001, -1519.05, 14.31, 0.6, 0, 0, 0);
			      	format(msg, sizeof(msg), "** %s 取出遥控操控车库大门.", GetNameWithSpace(playerid, 1));
				    ProxDetector(12, playerid, msg, COLOR_PINK);
			     	garageState[3] = 0;
	            }
	        }
	    } else if(IsPlayerInRangeOfPoint(playerid, 5, 1528.5635, -1523.8519, 13.5498)) {
	        new msg[96];
	        switch(garageState[2]) {
	            case 0: {
					MoveDynamicObject(garage[2], 1529.001, -1523.861, 17.6731, 0.6, 0, 0, 0);
			      	format(msg, sizeof(msg), "** %s 取出遥控操控车库大门.", GetNameWithSpace(playerid, 1));
				    ProxDetector(12, playerid, msg, COLOR_PINK);
			     	garageState[2] = 1;
	            }
	            default: {
					MoveDynamicObject(garage[2], 1529.001, -1523.86, 14.31, 0.6, 0, 0, 0);
			      	format(msg, sizeof(msg), "** %s 取出遥控操控车库大门.", GetNameWithSpace(playerid, 1));
				    ProxDetector(12, playerid, msg, COLOR_PINK);
			     	garageState[2] = 0;
	            }
	        }
	    } else if(IsPlayerInRangeOfPoint(playerid, 5, 1528.5637, -1528.5442, 13.5498)) {
	        new msg[96];
	        switch(garageState[1]) {
	            case 0: {
					MoveDynamicObject(garage[1], 1529.001, -1528.671, 17.6731, 0.6, 0, 0, 0);
			      	format(msg, sizeof(msg), "** %s 取出遥控操控车库大门.", GetNameWithSpace(playerid, 1));
				    ProxDetector(12, playerid, msg, COLOR_PINK);
			     	garageState[1] = 1;
	            }
	            default: {
					MoveDynamicObject(garage[1], 1529.001, -1528.67, 14.31, 0.6, 0, 0, 0);
			      	format(msg, sizeof(msg), "** %s 取出遥控操控车库大门.", GetNameWithSpace(playerid, 1));
				    ProxDetector(12, playerid, msg, COLOR_PINK);
			     	garageState[1] = 0;
	            }
	        }
	    } else if(IsPlayerInRangeOfPoint(playerid, 5, 1528.5638, -1533.5480, 13.5498)) {
	        new msg[96];
	        switch(garageState[0]) {
	            case 0: {
					MoveDynamicObject(garage[0], 1529.001, -1533.491, 17.6731, 0.6, 0, 0, 0);
			      	format(msg, sizeof(msg), "** %s 取出遥控操控车库大门.", GetNameWithSpace(playerid, 1));
				    ProxDetector(12, playerid, msg, COLOR_PINK);
			     	garageState[0] = 1;
	            }
	            default: {
					MoveDynamicObject(garage[0], 1529.001, -1533.49, 14.31, 0.6, 0, 0, 0);
			      	format(msg, sizeof(msg), "** %s 取出遥控操控车库大门.", GetNameWithSpace(playerid, 1));
				    ProxDetector(12, playerid, msg, COLOR_PINK);
			     	garageState[0] = 0;
	            }
	        }
	    } else if(IsPlayerInRangeOfPoint(playerid, 5, 1528.5640, -1538.3348, 13.5498)) {
	        new msg[96];
	        switch(garageState[4]) {
	            case 0: {
					MoveDynamicObject(garage[4], 1529.001, -1538.301, 17.6731, 0.6, 0, 0, 0);
			      	format(msg, sizeof(msg), "** %s 取出遥控操控车库大门.", GetNameWithSpace(playerid, 1));
				    ProxDetector(12, playerid, msg, COLOR_PINK);
			     	garageState[4] = 1;
	            }
	            default: {
					MoveDynamicObject(garage[4], 1529.001, -1538.30, 14.31, 0.4, 6, 0, 0);
			      	format(msg, sizeof(msg), "** %s 取出遥控操控车库大门.", GetNameWithSpace(playerid, 1));
				    ProxDetector(12, playerid, msg, COLOR_PINK);
			     	garageState[4] = 0;
	            }
	        }
	    }
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:deletebadge(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 1 && PlayerInfo[playerid][pRank] >= FactionInfo[1][fLeaderrank] - 2) {
		new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /deletebadge [玩家ID]");
        if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(PlayerInfo[user][pFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "对方不是LAPD成员.");
		if(PlayerInfo[user][pBadge] == 0) return SendClientMessage(playerid, COLOR_GREY, "对方还没有警徽, 你可以使用 /createbadge 给予.");
		new msg[110];
		PlayerInfo[user][pBadge] = 0;
		format(msg, sizeof(msg), "** %s %s 移除了你的警徽号码.", GetFactionRank(playerid), GetNameWithSpace(playerid));
		SendClientMessage(user, COLOR_WHITE, msg);
		format(msg, sizeof(msg), "** 你移除了 %s 的警徽包括号码", GetNameWithSpace(user));
		SendClientMessage(playerid, COLOR_WHITE, msg);
		if(GetPVarInt(user, "LAPDDuty") > 0) {
		    new skin = GetPVarInt(user, "LAPDDuty");
	    	PlayerInfo[user][pSkin] = skin;
	    	// UpdatePlayerHandcuffs(playerid);
	     	SetPlayerSkin(user, skin);
		    SetPVarInt(user, "LAPDDuty", 0);
	     	UpdatePlayerColor(user);
		}
	} else if(PlayerInfo[playerid][pFaction] == 2 && PlayerInfo[playerid][pRank] >= FactionInfo[2][fLeaderrank] - 2) {
		new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /deletebadge [玩家ID]");
        if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(PlayerInfo[user][pFaction] != 2) return SendClientMessage(playerid, COLOR_GREY, "对方不是LSFD成语.");
		if(PlayerInfo[user][pBadge] == 0) return SendClientMessage(playerid, COLOR_GREY, "对方还没有医号, 使用 /createbadge 创建.");
		new msg[110];
		PlayerInfo[user][pBadge] = 0;
		format(msg, sizeof(msg), "** %s %s 移除了你的医号.", GetFactionRank(playerid), GetNameWithSpace(playerid));
		SendClientMessage(user, COLOR_WHITE, msg);
		format(msg, sizeof(msg), "** 你移除了 %s 的证件包括号码.", GetNameWithSpace(user));
		SendClientMessage(playerid, COLOR_WHITE, msg);
		if(GetPVarInt(user, "LSFDDuty") > 0) {
			new skin = GetPVarInt(playerid, "LSFDDuty");
		    PlayerInfo[playerid][pSkin] = skin;
		    // UpdatePlayerHandcuffs(playerid);
		    SetPlayerSkin(playerid, skin);
		    SetPVarInt(playerid, "LSFDDuty", 0);
		    UpdatePlayerColor(playerid);
		}
	} else if(PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pRank] >= FactionInfo[3][fLeaderrank] - 2) {
	    new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /deletebadge [玩家ID]");
        if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(PlayerInfo[user][pFaction] != 3) return SendClientMessage(playerid, COLOR_GREY, "对方不是SAN Network成员.");
		if(PlayerInfo[user][pBadge] == 0) return SendClientMessage(playerid, COLOR_GREY, "对方没有证件, 使用 /createbadge 创建.");
		new msg[110];
		PlayerInfo[user][pBadge] = 0;
		format(msg, sizeof(msg), "** %s %s 移除了你的证件.", GetFactionRank(playerid), GetNameWithSpace(playerid));
		SendClientMessage(user, COLOR_WHITE, msg);
		format(msg, sizeof(msg), "** 你移除了 %s 的证件和号码", GetNameWithSpace(user));
		SendClientMessage(playerid, COLOR_WHITE, msg);
		if(GetPVarInt(user, "SanDuty") > 0) {
		    new skin = GetPVarInt(user, "SanDuty");
	    	PlayerInfo[user][pSkin] = skin;
	     	SetPlayerSkin(user, skin);
		    SetPVarInt(user, "SanDuty", 0);
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:createbadge(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 1 && PlayerInfo[playerid][pRank] >= FactionInfo[1][fLeaderrank] - 2) {
		new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /createbadge [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(PlayerInfo[user][pFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "对方不是该组织成员.");
		if(PlayerInfo[user][pBadge] != 0) return SendClientMessage(playerid, COLOR_GREY, "对方已经有了证件, 如果你想删除请输入: /deletebadge.");
		ShowPlayerDialog(playerid, DIALOG_BADGE, DIALOG_STYLE_INPUT, "{FF9900}警用证件", "请输入1-9999之间的数字:", "提交", "取消");
		SetPVarInt(playerid, "CreateBadge", user);
	} else if (PlayerInfo[playerid][pFaction] == 2 && PlayerInfo[playerid][pRank] >= FactionInfo[2][fLeaderrank] - 2) {
	    new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /createbadge [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(PlayerInfo[user][pFaction] != 2) return SendClientMessage(playerid, COLOR_GREY, "对方不是该组织成员.");
		if(PlayerInfo[user][pBadge] != 0) return SendClientMessage(playerid, COLOR_GREY, "对方已经有了证件, 如果你想删除请输入: /deletebadge.");
		ShowPlayerDialog(playerid, DIALOG_BADGE, DIALOG_STYLE_INPUT, "{FF9900}医生证件", "请输入1-9999之间的数字:", "提交", "取消");
		SetPVarInt(playerid, "CreateBadge", user);
	} else if (PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pRank] >= FactionInfo[3][fLeaderrank] - 2) {
	    new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /createbadge [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(PlayerInfo[user][pFaction] != 3) return SendClientMessage(playerid, COLOR_GREY, "对方不是该组织成员.");
		if(PlayerInfo[user][pBadge] != 0) return SendClientMessage(playerid, COLOR_GREY, "对方已经有了证件, 如果你想删除请输入: /deletebadge.");
		ShowPlayerDialog(playerid, DIALOG_BADGE, DIALOG_STYLE_INPUT, "{FF9900}记者证件", "请输入1-9999之间的数字:", "提交", "取消");
		SetPVarInt(playerid, "CreateBadge", user);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:viewcitations(playerid, params[])
{
	new query[140];
	mysql_format(sqlHandle, query, sizeof(query), "SELECT `user`, `reason`, `charge`, `date`, `issuer`, `agency`, `timestamp` FROM `samp_tickets` WHERE `user` = '%e'", PlayerInfo[playerid][pName]);
	mysql_function_query(sqlHandle, query, true, "OnCommandViewCitations", "i", playerid);
	return 1;
}

COMMAND:cite(playerid, params[])
{
	new user,
		charge,
		reason[120];

	if(sscanf(params, "uis[120]", user, charge, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /cite [玩家ID] [价格] [原因]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "iis[150]", user, charge, reason);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(PlayerInfo[playerid][pFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "你需要成为LAPD成员才能发布罚单.");
	if(GetPVarInt(playerid, "LAPDDuty") == 0) return SendClientMessage(playerid, COLOR_GREY, "你需要先上班.");
	if(charge > 1000) return SendClientMessage(playerid, COLOR_GREY, "罚单价格不能高于 $1,000.");
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "对方为NPC");
	if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "不能对你自己使用.");
	new Float:X,
		Float:Y,
		Float:Z;

	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	new msg[370];
	mysql_format(sqlHandle, msg, sizeof(msg), "INSERT INTO `samp_tickets` (`user`, `reason`, `charge`, `date`, `timestamp`, `issuer`, `agency`) VALUES ('%e', '%e', %i, NOW(), %i, '%e', '%e')", PlayerInfo[user][pName], reason, charge, gettime(), GetNameWithSpace(playerid), "Los Angeles Police Department");
	mysql_function_query(sqlHandle, msg, false, "OnNewCitation", "siii", reason, charge, user, playerid);
	return 1;
}

ALTCOMMAND:sl->showlicenses;
COMMAND:showlicenses(playerid, params[])
{
	new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /showlicenses [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
 	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	new Float:X,
		Float:Y,
		Float:Z;

	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	new msg[80];
	SendClientMessage(user, COLOR_GREY, "_______ [{FFFFFF}圣安地列斯州立政府{b5b5b5}] _______");
	format(msg, sizeof(msg), "   姓名: %s", GetNameWithSpace(playerid));
	SendClientMessage(user, COLOR_GREY, msg);
	format(msg, sizeof(msg), "   驾驶执照: %s, 武器执照: %s", (PlayerInfo[playerid][pDriveLic] == 1) ? ("通过") : ("未通过"), (PlayerInfo[playerid][pWeaponLic] == 1) ? ("通过") : ("未通过"));
	SendClientMessage(user, COLOR_GREY, msg);
	format(msg, sizeof(msg), "** %s 将证件展示给对方.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
 	ProxDetector(12, playerid, msg, COLOR_PINK);
 	return 1;
}

COMMAND:showbadge(playerid, params[]) {
 	switch(PlayerInfo[playerid][pFaction]) {
 	    case 1: {
		    if(PlayerInfo[playerid][pBadge] == 0) return SendClientMessage(playerid, COLOR_GREY, "你没有政府证件.");
		    new user;
			if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /showbadge [玩家ID]");
			if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
			if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
			if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
			if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
			new Float:X,
			    Float:Y,
			    Float:Z;
			    
			GetPlayerPos(user, X, Y, Z);
			if(!IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
			new msg[100];
			SendClientMessage(user, COLOR_GREY, "_______ [{FFFFFF}Los Angeles POLICE DEPARTMENT{b5b5b5}] _______");
			format(msg, sizeof(msg), "   %s, %i", GetFactionRank(playerid), PlayerInfo[playerid][pBadge]);
			SendClientMessage(user, COLOR_GREY, msg);
   			format(msg, sizeof(msg), "** %s 将警徽展示给 %s.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
 			ProxDetector(12, playerid, msg, COLOR_PINK);
		}
		case 2: {
		    if(PlayerInfo[playerid][pBadge] == 0) return SendClientMessage(playerid, COLOR_GREY, "你没有任何证件.");
		    new user;
			if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /showbadge [玩家ID]");
			if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
			if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
			if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
			if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
			new Float:X,
			    Float:Y,
			    Float:Z;

			GetPlayerPos(user, X, Y, Z);
			if(!IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
			new msg[100];
			SendClientMessage(user, COLOR_GREY, "_______ [{FFFFFF}Los Angeles FIRE DEPARTMENT{b5b5b5}] _______");
			format(msg, sizeof(msg), "   %s, %i", GetFactionRank(playerid), PlayerInfo[playerid][pBadge]);
			SendClientMessage(user, COLOR_GREY, msg);
			format(msg, sizeof(msg), "** %s 将消防局证件展示给 %s.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
 			ProxDetector(12, playerid, msg, COLOR_PINK);
		}
		case 3: {
		    if(PlayerInfo[playerid][pBadge] == 0) return SendClientMessage(playerid, COLOR_GREY, "你没有任何证件.");
		    new user;
			if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /showbadge [玩家ID]");
			if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
			if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
			if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
			if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
			new Float:X,
			    Float:Y,
			    Float:Z;

			GetPlayerPos(user, X, Y, Z);
			if(!IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
			new msg[100];
			SendClientMessage(user, COLOR_GREY, "_______ [{FFFFFF}California Network{b5b5b5}] _______");
			format(msg, sizeof(msg), "   %s, %i", GetFactionRank(playerid), PlayerInfo[playerid][pBadge]);
			SendClientMessage(user, COLOR_GREY, msg);
			format(msg, sizeof(msg), "** %s 将记者证件展示给 %s.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
 			ProxDetector(12, playerid, msg, COLOR_PINK);
		}
		default: {
	    	SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
		}
	}

	return 1;
}

COMMAND:atm(playerid, params[]) {
	for(new i = 0; i != sizeof(atms); i++) {
		if(IsPlayerInRangeOfPoint(playerid, 3, atms[i][0], atms[i][1], atms[i][2])) {
		    new msg[105];
			ApplyAnimation(playerid, "DEALER", "shop_pay", 4.1, 0, 1, 1, 0, 0, 1);
			format(msg, sizeof(msg), "** %s 取出银行卡插入卡槽中输入密码使用...", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, msg, COLOR_PINK, 12.0, 10000);
        	strins(msg, "> ", 3);
			SendClientMessage(playerid, COLOR_PINK, msg);
			ShowPlayerDialog(playerid, DIALOG_ATM, DIALOG_STYLE_LIST, "{FF9900}ATM", "取钱", "选择", "取消");
			return 1;
		}
	}

	SendClientMessage(playerid, COLOR_GREY, "你没有靠近任何ATM.");
	return 1;
}

COMMAND:barriers(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 1) {
	    if(GetPVarInt(playerid, "LAPDDuty") > 0) {
	        new msg[120];
		    switch(barriers) {
		        case 0: {
				    barriers = 1;
				    format(msg, sizeof(msg), "[收费站]: %s %s 解锁了Los Angeles所有收费站.", GetFactionRank(playerid), GetNameWithSpace(playerid));
				}
		        case 1: {
				    barriers = 0;
				    format(msg, sizeof(msg), "[收费站]: %s %s 封锁了Los Angeles所有收费站.", GetFactionRank(playerid), GetNameWithSpace(playerid));
		        }
		    }

		    SendMessageToLAPD(msg);
		} else {
		    SendClientMessage(playerid, COLOR_GREY, "你需要先上班.");
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:s->shout;
COMMAND:shout(playerid, params[]) {
    if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你已经被禁言了.");
	new message[256];
	if(sscanf(params, "s[256]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /shout [message]");
	new len = strlen(message);
	if(len + MAX_PLAYER_NAME + 39 > 256) {
	    new buffer[256];
	    strmid(buffer, message, 0, 256 - MAX_PLAYER_NAME - 39 - 4);
	    format(buffer, sizeof(buffer), "%s 大喊: %s ...", GetNameWithSpace(playerid, 1), buffer);
	    strdel(message, 0, 256 - MAX_PLAYER_NAME - 39 - 4);
		format(message, sizeof(message), "%s 大喊: ... %s", GetNameWithSpace(playerid, 1), message);
   		ProxDetectorSplittedEx(20, playerid, buffer, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 1, 0, 1);
	} else {
        format(message, sizeof(message), "%s 大喊: %s", GetNameWithSpace(playerid, 1), message);
		ProxDetectorEx(20, playerid, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 1, 0, 1);
	}

	return 1;
}

COMMAND:low(playerid, params[]) {
    if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你已经被禁言了.");
	new message[256];
	if(sscanf(params, "s[256]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /low [message]");
	new len = strlen(message);
	if(len + MAX_PLAYER_NAME + 13 > 256) {
	    new buffer[256];
	    strmid(buffer, message, 0, 256 - MAX_PLAYER_NAME - 13 - 4);
	    format(buffer, sizeof(buffer), "%s 说 [低声地]: %s ...", GetNameWithSpace(playerid, 1), buffer);
	    strdel(message, 0, 256 - MAX_PLAYER_NAME - 13 - 4);
		format(message, sizeof(message), "%s 说 [低声地]: ... %s", GetNameWithSpace(playerid, 1), message);
        ProxDetectorSplitted(3.5, playerid, buffer, message, COLOR_FADE2);
	} else {
        format(message, sizeof(message), "%s 说 [低声地]: %s", GetNameWithSpace(playerid, 1), message);
		ProxDetector(3.5, playerid, message, COLOR_FADE2);
	}

	return 1;
}

COMMAND:pm(playerid, params[]) {
    if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你已经被禁言了.");
    new message[128],
    	user;

	if(sscanf(params, "us[128]", user, message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /pm [玩家ID] [message]");
	if(user == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "无效ID.");
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "不能对自己使用.");
	if(GetPVarInt(user, "TogglePM") == 1 && PlayerInfo[playerid][pAdminlevel] == 0 && PlayerInfo[playerid][pModLevel] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 对方关闭了私信功能.");
    new len = strlen(message);
	if(len + MAX_PLAYER_NAME + 30 > 128) {
	    new buffer[128],
			msg[128];
	    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 30 - 4);
	    format(msg, sizeof(msg), "(( 私信发送至%s %s{E5C43E} [ID: %i]: %s ... ))", GetPVarInt(user, "AdminDuty") != 0? ("{CC9900}") : ("{E5C43E}"), GetNameWithSpace(user), user, buffer);
	    SendClientMessage(playerid, COLOR_DARKYELLOW, msg);
	    format(msg, sizeof(msg), "(( 私信来自%s %s{F0F000} [ID: %i]: %s ... ))", GetPVarInt(playerid, "AdminDuty") != 0? ("{CC9900}") : ("{F0F000}"), GetNameWithSpace(playerid), playerid, buffer);
	    SendClientMessage(user, COLOR_YELLOW, msg);
	    strdel(message, 0, 128 - MAX_PLAYER_NAME - 30 - 4);
		format(msg, sizeof(msg), "(( 私信发送至%s %s{E5C43E} [ID: %i]: ... %s ))",GetPVarInt(user, "AdminDuty") != 0? ("{CC9900}") : ("{E5C43E}"), GetNameWithSpace(user), user, message);
   		SendClientMessage(playerid, COLOR_DARKYELLOW, msg);
   		format(msg, sizeof(msg), "(( 私信来自%s %s{F0F000} [ID: %i]: ... %s ))", GetPVarInt(playerid, "AdminDuty") != 0? ("{CC9900}") : ("{F0F000}"), GetNameWithSpace(playerid), playerid, message);
   		SendClientMessage(user, COLOR_YELLOW, msg);
	} else {
	    new buffer[128];
        format(buffer, sizeof(buffer), "(( 私信发送至%s %s{E5C43E} [ID: %i]: %s ))",GetPVarInt(user, "AdminDuty") != 0? ("{CC9900}") : ("{E5C43E}") , GetNameWithSpace(user), user, message);
    	SendClientMessage(playerid, COLOR_DARKYELLOW, buffer);
    	format(buffer, sizeof(buffer), "(( 私信来自%s %s{F0F000} [ID: %i]: %s ))", GetPVarInt(playerid, "AdminDuty") != 0? ("{CC9900}") : ("{F0F000}"), GetNameWithSpace(playerid), playerid, message);
    	SendClientMessage(user, COLOR_YELLOW, buffer);
	}

	SetPVarInt(user, "lpm", playerid);
	return 1;
}

COMMAND:lpm(playerid, params[]) {
    if(GetPVarInt(playerid, "lpm") == 0) return SendClientMessage(playerid, COLOR_GREY, "你没有收到任何私信或者是你已经回复了上一个私信.");
    if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你已经被禁言了.");
    new message[128],
    	user = GetPVarInt(playerid, "lpm");

	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /lpm [message]");
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(GetPVarInt(user, "TogglePM") == 1 && PlayerInfo[playerid][pAdminlevel] == 0 && PlayerInfo[playerid][pModLevel] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 对方关闭了私信功能.");
    new len = strlen(message);
	if(len + MAX_PLAYER_NAME + 30 > 128) {
	    new buffer[128],
			msg[128];

		strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 30 - 4);
	    format(msg, sizeof(msg), "(( 私信发送至%s %s{E5C43E} [ID: %i]: %s ... ))", GetPVarInt(user, "AdminDuty") != 0? ("{CC9900}") : ("{E5C43E}"), GetNameWithSpace(user), user, buffer);
	    SendClientMessage(playerid, COLOR_DARKYELLOW, msg);
	    format(msg, sizeof(msg), "(( 私信来自%s %s{F0F000} [ID: %i]: %s ... ))", GetPVarInt(playerid, "AdminDuty") != 0? ("{CC9900}") : ("{F0F000}"), GetNameWithSpace(playerid), playerid, buffer);
	    SendClientMessage(user, COLOR_YELLOW, msg);
	    strdel(message, 0, 128 - MAX_PLAYER_NAME - 30 - 4);
		format(msg, sizeof(msg), "(( 私信发送至%s %s{E5C43E} [ID: %i]: ... %s ))",GetPVarInt(user, "AdminDuty") != 0? ("{CC9900}") : ("{E5C43E}"), GetNameWithSpace(user), user, message);
   		SendClientMessage(playerid, COLOR_DARKYELLOW, msg);
   		format(msg, sizeof(msg), "(( 私信来自%s %s{F0F000} [ID: %i]: ... %s ))", GetPVarInt(playerid, "AdminDuty") != 0? ("{CC9900}") : ("{F0F000}"), GetNameWithSpace(playerid), playerid, message);
   		SendClientMessage(user, COLOR_YELLOW, msg);
	} else {
	    new buffer[128];
        format(buffer, sizeof(buffer), "(( 私信发送至%s %s{E5C43E} [ID: %i]: %s ))",GetPVarInt(user, "AdminDuty") != 0? ("{CC9900}") : ("{E5C43E}") , GetNameWithSpace(user), user, message);
    	SendClientMessage(playerid, COLOR_DARKYELLOW, buffer);
    	format(buffer, sizeof(buffer), "(( 私信来自%s %s{F0F000} [ID: %i]: %s ))", GetPVarInt(playerid, "AdminDuty") != 0? ("{CC9900}") : ("{F0F000}"), GetNameWithSpace(playerid), playerid, message);
    	SendClientMessage(user, COLOR_YELLOW, buffer);
	}

	SetPVarInt(user, "lpm", 0);
	return 1;
}
COMMAND:b(playerid, params[])
{
    if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你已经被禁言了.");
    new message[128];
    if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /b [message]");
	new len = strlen(message);
	if(GetPVarInt(playerid, "AdminDuty") != 0)
	{
		format(message, sizeof(message), "(( [%i] {FF9900}%s{C8C8C8}: %s ))", playerid, GetNameWithSpace(playerid, 1), message);
	 	ProxDetector(12, playerid, message, COLOR_FADE2);
		return 1;
 	}
	if(PlayerInfo[playerid][pMasked] == 0)
	{
		if(len + MAX_PLAYER_NAME + 17 > 128)
		{
		    new buffer[128];
	        strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
			format(buffer, sizeof(buffer), "(( [%i] %s: %s ... ))", playerid, GetNameWithSpace(playerid, 1), buffer);
			strdel(message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
			format(message, sizeof(message), "(( [%i] %s: ... %s ))", playerid, GetNameWithSpace(playerid, 1), message);
			ProxDetectorSplitted(20, playerid, buffer, message, COLOR_FADE2);
		}
		else
		{
			format(message, sizeof(message), "(( [%i] %s: %s ))", playerid, GetNameWithSpace(playerid, 1), message);
			ProxDetector(12, playerid, message, COLOR_FADE2);
		}
	}
	else
	{
        if(len + MAX_PLAYER_NAME + 17 > 128)
		{
		    new buffer[128];
	        strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
			format(buffer, sizeof(buffer), "(( %s: %s ... ))", GetNameWithSpace(playerid, 1), buffer);
			strdel(message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
			format(message, sizeof(message), "(( %s: ... %s ))", GetNameWithSpace(playerid, 1), message);
			ProxDetectorSplitted(20, playerid, buffer, message, COLOR_FADE2);
		}
		else
		{
			format(message, sizeof(message), "(( %s: %s ))", GetNameWithSpace(playerid, 1), message);
			ProxDetector(12, playerid, message, COLOR_FADE2);
		}
	}

	return 1;
}

/*COMMAND:b(playerid, params[])
{
    if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你已经被禁言了.");
    new message[128];
    if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /b [message]");
	new len = strlen(message);
	if(GetPVarInt(playerid, "AdminDuty") != 0)
	{
		format(message, sizeof(message), "(( {FF9900}%s{C8C8C8} [ID: %i]: %s ))", GetNameWithSpace(playerid, 1), playerid, message);
	 	ProxDetector(12, playerid, message, COLOR_FADE2);
		return 1;
 	}
	if(PlayerInfo[playerid][pMasked] == 0)
	{
		if(len + MAX_PLAYER_NAME + 17 > 128)
		{
		    new buffer[128];
	        strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
			format(buffer, sizeof(buffer), "(( %s [ID: %i]: %s ... ))", GetNameWithSpace(playerid, 1), playerid, buffer);
			strdel(message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
			format(message, sizeof(message), "(( %s [ID: %i]: ... %s ))", GetNameWithSpace(playerid, 1), playerid, message);
			ProxDetectorSplitted(20, playerid, buffer, message, COLOR_FADE2);
		}
		else
		{
			format(message, sizeof(message), "(( %s [ID: %i]: %s ))", GetNameWithSpace(playerid, 1), playerid, message);
			ProxDetector(12, playerid, message, COLOR_FADE2);
		}
	}
	else
	{
        if(len + MAX_PLAYER_NAME + 17 > 128)
		{
		    new buffer[128];
	        strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
			format(buffer, sizeof(buffer), "(( %s: %s ... ))", GetNameWithSpace(playerid, 1), buffer);
			strdel(message, 0, 128 - MAX_PLAYER_NAME - 17 - 4);
			format(message, sizeof(message), "(( %s: ... %s ))", GetNameWithSpace(playerid, 1), message);
			ProxDetectorSplitted(20, playerid, buffer, message, COLOR_FADE2);
		}
		else
		{
			format(message, sizeof(message), "(( %s: %s ))", GetNameWithSpace(playerid, 1), message);
			ProxDetector(12, playerid, message, COLOR_FADE2);
		}
	}

	return 1;
}*/

COMMAND:c(playerid, params[]) {
    if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你已经被禁言了.");
	new message[128];
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /c [message]");
	new len = strlen(message);
	if(len + MAX_PLAYER_NAME + 37 > 128) {
	    new buffer[128];
	    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 37 - 4);
	    format(buffer, sizeof(buffer), "%s 说: %s ...", GetNameWithSpace(playerid, 1), buffer);
	    strdel(message, 0, 128 - MAX_PLAYER_NAME - 37 - 4);
		format(message, sizeof(message), "%s 说: ... %s", GetNameWithSpace(playerid, 1), message);
   		ProxDetectorSplittedEx(20, playerid, buffer, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 1, 0, 1);
	} else {
        format(message, sizeof(message), "%s 说: %s", GetNameWithSpace(playerid, 1), message);
    	ProxDetectorEx(20, playerid, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 1, 0, 1);
	}

	return 1;
}

ALTCOMMAND:w->whisper;
COMMAND:whisper(playerid, params[]) {
    if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你已经被禁言了.");
	new user,
		message[128];

	if(sscanf(params, "us[128]", user, message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /whisper [玩家ID] [message]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "is[128]", user, message);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	new Float:X,
		Float:Y,
	 	Float:Z;

	GetPlayerPos(user, X, Y, Z);
	if(GetPVarInt(user, "Specate") != 0 || !IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	new len = strlen(message);
	if(len + MAX_PLAYER_NAME + 11 > 128) {
	    new buffer[128];
	    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 11 - 4);
	    format(buffer, sizeof(buffer), "%s 私密: %s ...", GetNameWithSpace(playerid, 1), buffer);
	    SendClientMessage(user, COLOR_YELLOW, buffer);
	 	SendClientMessage(playerid, COLOR_GREY, buffer);
	    strdel(message, 0, 128 - MAX_PLAYER_NAME - 11 - 4);
		format(message, sizeof(message), "%s 私密: ... %s", GetNameWithSpace(playerid, 1), message);
   		SendClientMessage(user, COLOR_YELLOW, message);
	 	SendClientMessage(playerid, COLOR_GREY, message);
	} else {
        format(message, sizeof(message), "%s 私密: %s", GetNameWithSpace(playerid, 1), message);
    	SendClientMessage(user, COLOR_YELLOW, message);
	 	SendClientMessage(playerid, COLOR_GREY, message);
	}

	format(message, sizeof(message), "** %s 靠近 %s 说了一些话.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
	SetPlayerChatBubble(playerid, message, COLOR_PINK, 12.0, 10000);
	return 1;
}

COMMAND:me(playerid, params[]) {
    if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你已经被禁言了.");
	new message[256];
	if(sscanf(params, "s[256]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /me [action]");
	new len = strlen(message);
	if(len + MAX_PLAYER_NAME + 3 > 256) {
	    new buffer[256];
	    strmid(buffer, message, 0, 256 - MAX_PLAYER_NAME - 3 - 4);
	    format(buffer, sizeof(buffer), "* %s %s ...", GetNameWithSpace(playerid, 1), buffer);
	    strdel(message, 0, 256 - MAX_PLAYER_NAME - 3 - 4);
		format(message, sizeof(message), "* ... %s (( %s ))", message, GetNameWithSpace(playerid, 1));
   		ProxDetectorSplitted(12, playerid, buffer, message, COLOR_PINK, 0);
	} else {
        format(message, sizeof(message), "* %s %s", GetNameWithSpace(playerid, 1), message);
    	ProxDetector(12, playerid, message, COLOR_PINK, 0);
	}

	return 1;
}

COMMAND:do(playerid, params[]) {
    if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你已经被禁言了.");
	new message[128];
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /do [action]");
	new len = strlen(message);
	if(len + MAX_PLAYER_NAME + 2 > 128) {
	    new buffer[128];
	    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 2 - 4);
	    format(buffer, sizeof(buffer), "* %s ...", buffer);
	    strdel(message, 0, 128 - MAX_PLAYER_NAME - 2 - 4);
		format(message, sizeof(message), "* ... %s (( %s ))", message, GetNameWithSpace(playerid, 1));
   		ProxDetectorSplitted(12, playerid, buffer, message, COLOR_PINK, 0);
	} else {
        format(message, sizeof(message), "* %s (( %s ))", message, GetNameWithSpace(playerid, 1));
    	ProxDetector(12, playerid, message, COLOR_PINK, 0);
	}

	return 1;
}

COMMAND:lock(playerid, params[]) {
	new lockID = -1,
	    vw = GetPlayerVirtualWorld(playerid);

	if(IsPlayerInAnyVehicle(playerid)) {
	    lockID = GetPlayerVehicleID(playerid);
		new vModel = GetVehicleModel(lockID);
		if(lockID == GetPVarInt(playerid, "PrivateCar") || (GetPVarInt(playerid, "DMV") != 0 && VehicleInfo[lockID][vType] == VEHICLE_DMV) || (PlayerInfo[playerid][pJob] == 1 && VehicleInfo[lockID][vType] == VEHICLE_JOB &&
    	   vModel == 408) || (PlayerInfo[playerid][pJob] == 2 && VehicleInfo[lockID][vType] == VEHICLE_JOB && vModel == 448) || (PlayerInfo[playerid][pJob] == 3 && VehicleInfo[lockID][vType] == VEHICLE_JOB && vModel == 482)) {
			if(IsNotLockableWithoutEngine(vModel))
			{
			    new vdata[7];
			    GetVehicleParamsEx(lockID, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
			    switch(vdata[0]) {
			        case 0: {
			            GameTextForPlayer(playerid, "~r~Unchainned", 750, 4);
			            SetVehicleParamsEx(lockID, 1, vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
					}
					default: {
					    GameTextForPlayer(playerid, "~r~Chainned", 750, 4);
			    		SetVehicleParamsEx(lockID, 0, vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
					}
				}
			}
			else if(IsNotLockableWithEngine(vModel) == 0)
			{
				ChangeVehicleDoorStatus(playerid, lockID);
			}
		} else if(PlayerInfo[playerid][pFaction] != 0 && VehicleInfo[lockID][vFaction] == PlayerInfo[playerid][pFaction]) {
			if((PlayerInfo[playerid][pFaction] == 1 && GetPVarInt(playerid, "LAPDDuty") > 0) || (PlayerInfo[playerid][pFaction] == 2 && GetPVarInt(playerid, "LSFDDuty") > 0) || (PlayerInfo[playerid][pFaction] == 3 && GetPVarInt(playerid, "SanDuty") > 0) || VehicleInfo[lockID][vFaction] > 3) {
				if(IsNotLockableWithoutEngine(vModel)) {
				    new vdata[7];
				    GetVehicleParamsEx(lockID, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
				    switch(vdata[0]) {
				        case 0: {
				            GameTextForPlayer(playerid, "~r~Unchainned", 750, 4);
				            SetVehicleParamsEx(lockID, 1, vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
						}
						default: {
						    GameTextForPlayer(playerid, "~r~Chainned", 750, 4);
				    		SetVehicleParamsEx(lockID, 0, vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
						}
					}
				} else if(IsNotLockableWithEngine(vModel) == 0) {
					ChangeVehicleDoorStatus(playerid, lockID);
				}
			} else {
                SendClientMessage(playerid, COLOR_GREY, "你需要从更衣室取出你的钥匙才能解锁.");
			}
		}
	} else {
	    new Float:X,
			Float:Y,
			Float:Z,
			Float:distance,
			lockType,
			model;

	    for(new i = 0; i != MAX_VEHICLES; i++)
		{
	        if(IsVehicleSpawned(i)) {
				GetVehiclePos(i, X, Y, Z);
                if(IsPlayerInRangeOfPoint(playerid, 5, X, Y, Z)) {
                    model = GetVehicleModel(i);
					if((i == GetPVarInt(playerid, "PrivateCar") || (GetPVarInt(playerid, "DMV") != 0 && VehicleInfo[i][vType] == VEHICLE_DMV) || (VehicleInfo[i][vType] == VEHICLE_JOB && model == 408 && PlayerInfo[playerid][pJob] == 1) ||
	   				   (VehicleInfo[i][vType] == VEHICLE_JOB && model == 448 && PlayerInfo[playerid][pJob] == 2) || (VehicleInfo[i][vType] == VEHICLE_JOB && model == 482 && PlayerInfo[playerid][pJob] == 3) ||
  			  		   (VehicleInfo[i][vFaction] == PlayerInfo[playerid][pFaction] && PlayerInfo[playerid][pFaction] > 3) || (VehicleInfo[i][vFaction] == 1 && PlayerInfo[playerid][pFaction] == 1 && GetPVarInt(playerid, "LAPDDuty") > 0) ||
		   			   (VehicleInfo[i][vFaction] == 2 && PlayerInfo[playerid][pFaction] == 2 && GetPVarInt(playerid, "LSFDDuty") > 0) || (VehicleInfo[i][vFaction] == 3 && PlayerInfo[playerid][pFaction] == 3 && GetPVarInt(playerid, "SanDuty") > 0)) &&
  					   (lockID == -1 || GetPlayerDistanceFromPoint(playerid, X, Y, Z) < distance)) {
						lockID = i;
						lockType = 1;
						distance = GetPlayerDistanceFromPoint(playerid, X, Y, Z);
					}
				}
			}
		}

		if(GetPVarInt(playerid, "InHouse") != 0 && ((strcmp(HouseInfo[vw][hOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(HouseInfo[vw][hOwner])) || PlayerInfo[playerid][pRentHouse] == vw) &&
		   IsPlayerInRangeOfPoint(playerid, 4, houseData[HouseInfo[vw][hInt]][intX], houseData[HouseInfo[vw][hInt]][intY], houseData[HouseInfo[vw][hInt]][intZ]) &&
		   (lockID == -1 || GetPlayerDistanceFromPoint(playerid, houseData[HouseInfo[vw][hInt]][intX], houseData[HouseInfo[vw][hInt]][intY], houseData[HouseInfo[vw][hInt]][intZ]) < distance)) {
	   	    lockID = vw;
	   	    lockType = 2;
	   	    distance = GetPlayerDistanceFromPoint(playerid, houseData[HouseInfo[vw][hInt]][intX], houseData[HouseInfo[vw][hInt]][intY], houseData[HouseInfo[vw][hInt]][intZ]);
	 	} else if(GetPVarInt(playerid, "InBusiness") != 0 && (strcmp(BusinessInfo[vw][bOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(BusinessInfo[vw][bOwner])) &&
		          IsPlayerInRangeOfPoint(playerid, 4, businessData[BusinessInfo[vw][bInt]][intX], businessData[BusinessInfo[vw][bInt]][intY],
				  businessData[BusinessInfo[vw][bInt]][intZ]) && (lockID == -1 || GetPlayerDistanceFromPoint(playerid, businessData[BusinessInfo[vw][bInt]][intX],
				  businessData[BusinessInfo[vw][bInt]][intY], businessData[BusinessInfo[vw][bInt]][intZ]) < distance)) {
	 		lockID = vw;
	 		lockType = 3;
	   	    distance = GetPlayerDistanceFromPoint(playerid, businessData[BusinessInfo[vw][bInt]][intX], businessData[BusinessInfo[vw][bInt]][intY], businessData[BusinessInfo[vw][bInt]][intZ]);
	 	} else {
		    for(new h = 0; h != MAX_HOUSES; h++) {
				if(HouseInfo[h][hID] != 0 && IsPlayerInDynamicCP(playerid, houseCP[h]) && ((strcmp(HouseInfo[h][hOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(HouseInfo[h][hOwner])) || PlayerInfo[playerid][pRentHouse] == h)) {
                    lockID = h;
    				lockType = 2;
    				break;
				}
			}

			for(new b = 0; b != MAX_BUSINESSES; b++) {
				if(IsValidDynamicCP(businessCP[b]) && IsPlayerInDynamicCP(playerid, businessCP[b]) && strcmp(BusinessInfo[b][bOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(BusinessInfo[b][bOwner])) {
				    lockID = b;
				 	lockType = 3;
				 	break;
				}
			}
		}

		if(lockID != -1) {
		    switch(lockType) {
		        case 1: {
				    if(VehicleInfo[lockID][vFaction] == 0 || (PlayerInfo[playerid][pFaction] == 1 && VehicleInfo[lockID][vFaction] == 1 && GetPVarInt(playerid, "LAPDDuty") > 0) ||
					   (PlayerInfo[playerid][pFaction] == 2 && VehicleInfo[lockID][vFaction] == 2 && GetPVarInt(playerid, "LSFDDuty") > 0) || (PlayerInfo[playerid][pFaction] == 3 && VehicleInfo[lockID][vFaction] == 3 && GetPVarInt(playerid, "SanDuty") > 0) || VehicleInfo[lockID][vFaction] > 3) {
						if(IsNotLockableWithoutEngine(GetVehicleModel(lockID)))
						{
						    new vdata[7];
						    GetVehicleParamsEx(lockID, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
						    switch(vdata[0]) {
						        case 0: {
						            GameTextForPlayer(playerid, "~r~Unchainned", 750, 4);
						            SetVehicleParamsEx(lockID, 1, vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
								}
								default: {
								    GameTextForPlayer(playerid, "~r~Chainned", 750, 4);
						    		SetVehicleParamsEx(lockID, 0, vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
								}
							}
						}
						else if(IsNotLockableWithEngine(model) == 0)
						{
							ChangeVehicleDoorStatus(playerid, lockID);
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "你需要从更衣室取出你的钥匙才能解锁.");
					}
				}
				case 2: {
				    switch(HouseInfo[lockID][hLocked]) {
					    case 0: {
						    HouseInfo[lockID][hLocked] = 1;
						    GameTextForPlayer(playerid, "~r~Locked", 750, 4);
						}
						case 1: {
						    HouseInfo[lockID][hLocked] = 0;
						    GameTextForPlayer(playerid, "~g~Unlocked", 750, 4);
						}
					}
				}
				case 3: {
				    switch(BusinessInfo[lockID][bLocked]) {
					    case 0: {
					        BusinessInfo[lockID][bLocked] = 1;
					        GameTextForPlayer(playerid, "~r~Locked", 750, 4);
					    }
						case 1: {
						    BusinessInfo[lockID][bLocked] = 0;
						    GameTextForPlayer(playerid, "~g~Unlocked", 750, 4);
						}
					}
				}
			}
		}
	}

	return 1;
}

COMMAND:spawn(playerid, params[])
{
	if(GetPVarInt(playerid, "PrivateCar") == 0)
	{
	    new query[100];
		mysql_format(sqlHandle, query, sizeof(query), "SELECT `vehicle` FROM `samp_vehicles` WHERE `owner` = '%e'", PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, true, "OnCommandVehicleSpawn", "i", playerid);
	}
	else
	{
 		SendClientMessage(playerid, COLOR_GREY, "你游戏中已经有了一台车, 请先停好当前的车辆才能再次取车.");
	}

	return 1;
}

COMMAND:despawn(playerid, params[]) {
    if(GetPVarInt(playerid, "PrivateCar") > 0) {
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你需要在车内才能停车.");
		if(GetPlayerVehicleSeat(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "你需要在驾驶位进行.");
		new vehicle = GetPVarInt(playerid, "PrivateCar");
		if(VehicleInfo[vehicle][vType] != VEHICLE_OWNED) return SendClientMessage(playerid, COLOR_GREY, "该车不是私人拥有的.");
		if(!IsPlayerInRangeOfPoint(playerid, 15, VehicleInfo[vehicle][vX], VehicleInfo[vehicle][vY], VehicleInfo[vehicle][vZ])) return SendClientMessage(playerid, COLOR_GREY, "你需要在你的泊车点进行.");
		new query[200],
			Float:health,
			status[4];

		SetPVarInt(playerid, "PrivateCar", 0);
		if(VehicleInfo[vehicle][vRadio] != 0) {
			foreach(new i : Player) {
			    if(GetPlayerVehicleID(i) == vehicle) {
					StopAudioStreamForPlayer(i);
				}
			}
		}
        VehicleInfo[vehicle][vScrapped] = 0;
		GetVehicleHealth(vehicle, health);
		GetVehicleDamageStatus(vehicle, status[0], status[1], status[2], status[3]);
		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `fuel` = %i, `health` = %f, `panels` = %i, `doors` = %i, `lights` = %i, `tires` = %i, `scrapped` = %i WHERE `id` = %i", VehicleInfo[vehicle][vFuel], health, status[0], status[1], status[2], status[3], VehicleInfo[vehicle][vScrapped], VehicleInfo[vehicle][vID]);
		mysql_function_query(sqlHandle, query, false, "", "");
		ResetVehicleData(vehicle);
		DestroyVehicle(vehicle);
	} else {
		SendClientMessage(playerid, COLOR_GREY, "你游戏中没有车辆.");
	}

	return 1;
}

COMMAND:findcar(playerid, params[])
{
    if(GetPVarInt(playerid, "PrivateCar") > 0)
	{
        new vehicle = GetPVarInt(playerid, "PrivateCar");
        new Float:vehx, Float:vehy, Float:vehz;
		GetVehiclePos(vehicle, vehx, vehy, vehz);
		SendClientMessage(playerid,COLOR_LIGHTBLUE,"提示: 你的载具位置已经在地图上标记.");
		SetPlayerCheckpoint(playerid, vehx, vehy, vehz, 5.0);
		SetPlayerMapIcon(playerid, XB_TARGET_MAPICON, vehx, vehy, vehz, 11, 0, MAPICON_GLOBAL);
	 	system_findcar[playerid] = 1;
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "你游戏中没有车辆.");
	}

	return 1;
}


COMMAND:restscrap(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] != 6) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
    SendClientMessage(playerid, COLOR_LIGHTRED, "你现在可以再次销毁车辆了.");
    PlayerInfo[playerid][pScrapWait] = 0;
	return 1;
}
COMMAND:theftjob(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] != 0) return SendClientMessage(playerid, COLOR_GREY, "你先要退出其他工作后才能领取该工作.");
    if(PlayerInfo[playerid][pScore] < 75) return SendClientMessage(playerid, COLOR_GREY, "你需要至少75点时间分才能领取该工作.");
    if(!IsPlayerInRangeOfPoint(playerid, 2.0, 2519.8184,-1483.2991,23.9987)) return SCM(playerid, COLOR_LIGHTRED, "你不在黑市.");
	SCM(playerid, COLOR_LIGHTRED, "[+] 提示: {FFFFFF} 你现在是一名盗贼, 工作指令: /jobhelp.");
	PlayerInfo[playerid][pJob] = 4;
	return 1;
}
COMMAND:scrap(playerid, params[])
{
    new query[128], admstring[128], warnstring[128];
    new ownCar = GetPVarInt(playerid, "PrivateCar");
	new vehicle = GetPlayerVehicleID(playerid);
	//if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Scrap] == 0&&PlayerInfo[playerid][pAdminlevel]<3) return SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织ID不支持车辆销毁权限.");
    if(PlayerInfo[playerid][pJob] != 4) return SendClientMessage(playerid, COLOR_GREY, "你不是盗贼.");
	if(ownCar == vehicle) return SendClientMessage(playerid, COLOR_GREY, "这是你的私家车, 无法销毁.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要在车内进行.");
	if(IsNotLockableWithoutEngine(GetVehicleModel(vehicle))) return SendClientMessage(playerid, COLOR_LIGHTRED, "这是一台摩托车/自行车, 我们不需要.");
	new mod=GetVehicleModel(vehicle);
	if(VehicleInfo[vehicle][vType] == VEHICLE_OWNED)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 5, -1867.1847,-1682.2609,21.4557))
	    {
			for(new i;i<4;i++)
			{
				if(jackmodel[i]==mod)
				{
                    if(PlayerInfo[playerid][pScrapWait] == 0)
	                {
	                    new string[128];
	                    GivePlayerMoneyEx(playerid, vehicleData[GetVehicleModel(vehicle) - 400][typePrice]*5/50);
	        	        format(string, sizeof(string), "你销毁了该车, 获得 $%i.", vehicleData[GetVehicleModel(vehicle) - 400][typePrice]*5/50);
				        SendClientMessage(playerid, COLOR_LIGHTRED, string);
	                    PlayerInfo[playerid][pScrapWait] = 2;
                        VehicleInfo[vehicle][vScrapped] = 1;
				        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `scrapped` = %i WHERE `id` = %i", VehicleInfo[vehicle][vScrapped], VehicleInfo[vehicle][vID]);
				        mysql_function_query(sqlHandle, query, false, "", "");
		  		        format(admstring, sizeof(admstring), "管理员注意: %s [ID: %i] 通过黑市变卖了 %s 的车辆, 得到 $%i.", PlayerInfo[playerid][pName], playerid, VehicleInfo[vehicle][vOwner], vehicleData[GetVehicleModel(vehicle) - 400][typePrice]*5/50);
		  		        new id = GetPlayerID(VehicleInfo[vehicle][vOwner]);
				        SetPVarInt(id, "PrivateCar", 0);
			            SendMessageToAdmins(admstring);
			            ResetVehicleData(vehicle);
				        SetVehicleDead(vehicle, 1);
			        }
			        else
			        {
			            format(warnstring, sizeof(warnstring), "你之前已经销毁了一台车辆, 请等待 '%i' 个发薪日后再试.", PlayerInfo[playerid][pScrapWait]);
			            SendClientMessage(playerid, COLOR_LIGHTGREEN, warnstring);
			        }
			        return 1;
				}
			}
			SendClientMessage(playerid,0xFF0000FF,"该车不是黑市目前所需要的车辆");
    	}
    	else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要在车辆回收场才能进行.");
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "你只能销毁私人车辆.");
	}
	return 1;
}

COMMAND:placebomb(playerid, params[])
{
    new query[128], string[128], admstring[128];
	new vehicle = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pCarBomb] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要C4才能使用.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要在车内放置C4.");
	if(VehicleInfo[vehicle][vType] == VEHICLE_OWNED)
	{
		VehicleInfo[vehicle][vBomb] = 1;
		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `bomb` = %i WHERE `id` = %i", VehicleInfo[vehicle][vBomb], VehicleInfo[vehicle][vID]);
		mysql_function_query(sqlHandle, query, false, "", "");
		
		mysql_format(sqlHandle, string, sizeof(string), "你放置了一个C4在 %s 的车内.", VehicleInfo[vehicle][vOwner]);
  		SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
  		
  		format(admstring, sizeof(admstring), "AdmWarn: %s 将C4放置在 %s 车内.", PlayerInfo[playerid][pName], VehicleInfo[vehicle][vOwner]);
	    SendMessageToAdmins(admstring);
  		PlayerInfo[playerid][pCarBomb] = 0;
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "该车不是私人车辆.");
	}
	return 1;
}

COMMAND:park(playerid, params[])
{
	new vehicle = GetPVarInt(playerid, "PrivateCar");
	if(vehicle == 0) return SendClientMessage(playerid, COLOR_GREY, "你需要有一台私人载具.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你需要在车内才能购买停车位.");
	if(GetPlayerVehicleID(playerid) != vehicle) return SendClientMessage(playerid, COLOR_GREY, "你需要在车内才能购买停车位.");
	if(PlayerInfo[playerid][pMoney] > 299 || PlayerInfo[playerid][pDonateRank] != 0)
	{
	
		new query[125],
			Float:X,
			Float:Y,
			Float:Z,
			Float:A;

		GetVehiclePos(vehicle, X, Y, Z);
		GetVehicleZAngle(vehicle, A);
		VehicleInfo[vehicle][vX] = X;
		VehicleInfo[vehicle][vY] = Y;
		VehicleInfo[vehicle][vZ] = Z;
		VehicleInfo[vehicle][vA] = A;
		if(PlayerInfo[playerid][pDonateRank] == 0)
		{
			GivePlayerMoneyEx(playerid, -300);
		}
		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `x` = %f, `y` = %f, `z` = %f, `a` = %f WHERE `id` = %i", X, Y, Z, A, VehicleInfo[vehicle][vID]);
		mysql_function_query(sqlHandle, query, false, "", "");
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功购买了一个停车位, 以后该地将作为你的停车点.");
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GREY, "你需要$300才能购买.");
	}
	return 1;
}

COMMAND:radio(playerid, params[]) {
	if(VehicleInfo[GetPlayerVehicleID(playerid)][vModifications][8] != 1086) return SendClientMessage(playerid, COLOR_GREY, "该车没有安装车辆电台.");
    if(GetPlayerVehicleSeat(playerid) > 1 || !IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你需要在车内并且是主驾驶或者副驾驶才能使用.");
	ShowPlayerDialog(playerid, DIALOG_CAR_RADIO, DIALOG_STYLE_LIST, "{FF9900}载具操作", "电台开关\n切换电台\n外部URL", "选择", "取消");
	return 1;
}

COMMAND:siren(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2) {
		if(!IsPlayerInAnyVehicle(playerid) || (GetPlayerVehicleSeat(playerid) != 0 && GetPlayerVehicleSeat(playerid) != 1)) return SendClientMessage(playerid, COLOR_GREY, "你需要在车内并且是主驾驶或者副驾驶才能使用.");
		new vehicle = GetPlayerVehicleID(playerid);
		if(VehicleInfo[vehicle][vFaction] != 1 && VehicleInfo[vehicle][vFaction] != 2) return SendClientMessage(playerid, COLOR_GREY, "该车不支持警灯放置.");
		switch(VehicleInfo[vehicle][vSiren]) {
		    case 0: {
  				if(GetVehicleModel(vehicle) != 560 && GetVehicleModel(vehicle) != 579 && GetVehicleModel(vehicle) != 426) return SendClientMessage(playerid, COLOR_GREY, "该车不支持警灯放置.");
	    		ShowPlayerDialog(playerid, DIALOG_SIREN, DIALOG_STYLE_LIST, "{FF9900}警灯", "车顶\n车内", "选择", "取消");
			}
			default: {
			    new msg[83];
			    DestroyDynamicObject(VehicleInfo[vehicle][vSiren]);
			    format(msg, sizeof(msg), "** %s 伸出手将警灯从载具移除.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, msg, COLOR_PINK);
			    VehicleInfo[vehicle][vSiren] = 0;
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:diagnose(playerid, params[])
{
	new user;
	new checker = GetPVarInt(playerid, "Diagnosing");
    if(sscanf(params, "d", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /diagnose [ID]");
    if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "你不能对你自己使用!");
    if(checker == 1) return SendClientMessage(playerid, COLOR_GREY, "你正在进行放射诊断!");
	if(PlayerInfo[playerid][pFaction] == 2)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, 1514.7159, -1561.6957, 1970.8059)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近放射科设备.");
		if(!IsPlayerInRangeOfPoint(user, 3.0, 1508.8359, -1560.5839, 1971.8003)) return SendClientMessage(playerid, COLOR_GREY, "对方需要在放射线附近.");
		new me[110];
		format(me, sizeof(me), "** %s 使用电脑对 %s 进行医学放射诊断.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
		ProxDetector(12, playerid, me, COLOR_PINK);
    	diagnosisLazer = CreateDynamicObject(19082, 1508.88, -1561.71, 1972.44, 0.00, 90.00, 90.00);
    	MoveDynamicObject(diagnosisLazer, 1508.88, -1561.71, 1972.44, 0.2, 0.00, 90.00, -90.00);
    	FreezePlayer(user);
    	SCM(user, -1, "你正在进行放射科医疗诊断, 请等待10秒..");
    	SCM(playerid, -1, "你正在对病人进行放射科医疗诊断, 10秒后完成..");
    	SetTimerEx("WhenDiagnosed", 10000, false, "d", playerid);
    	SetPVarInt(playerid,"DiagnosedID", user);
    	SetPVarInt(playerid, "Diagnosing", 1);
	}
	return 1;
}


COMMAND:operation(playerid, params[])
{
	new user;
	new checker = GetPVarInt(playerid, "WasDiagnosed");
    if(sscanf(params, "d", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /operation [ID]");
    if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "你不能对你自己使用!");
    if(checker != 1) return SendClientMessage(playerid, COLOR_GREY, "你还没有使用放射技术来诊断对方疾病!");
	if(PlayerInfo[playerid][pFaction] == 2)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, 1506.4835, -1530.6666, 1971.8003) && !IsPlayerInRangeOfPoint(playerid, 5.0, 1513.4265,-1531.0828,1971.8003)) return SendClientMessage(playerid, COLOR_GREY, "你需要在手术室进行手术.");
		new Float:X,
			Float:Y,
			Float:Z;

		GetPlayerPos(user, X, Y, Z);
		if(!IsPlayerInRangeOfPoint(playerid, 3.0, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
		new me[110];
		format(me, sizeof(me), "** %s 正在对 %s 进行手术.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
		ProxDetector(12, playerid, me, COLOR_PINK);
    	FreezePlayer(user);
    	FreezePlayer(playerid);
    	SCM(user, COLOR_LIGHTRED, "你现在已被麻醉, 正在做手术.. (( 请使用角色扮演来开始当前环境 ))");
    	SCM(playerid, COLOR_LIGHTRED, "你正在做内科手术, 15秒后出现结果. (( 请使用角色扮演来开始当前环境 ))");
    	SetTimerEx("Opering", 15000, false, "d", playerid);
    	SetPVarInt(playerid,"OperID", user);
	}
	return 1;
}

COMMAND:togf(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_GREY, "你不在任何组织内.");
	switch(GetPVarInt(playerid, "ToggleFC")) {
	    case 0: {
	        SetPVarInt(playerid, "ToggleFC", 1);
	        SendClientMessage(playerid, COLOR_GREY, "组织频道已被关闭, 使用 /togf 激活.");
	    }
	    case 1: {
	        SetPVarInt(playerid, "ToggleFC", 0);
	        SendClientMessage(playerid, COLOR_GREY, "组织频道已被激活.");
	    }
	}

	return 1;
}

ALTCOMMAND:f->factiontalk;
COMMAND:factiontalk(playerid, params[]) {
	new message[128];
	if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_GREY, "你不在任何组织内.");
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /factiontalk [信息]");
	if(GetPVarInt(playerid, "Muted") == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你已经被禁言了.");
	if(FactionInfo[PlayerInfo[playerid][pFaction]][fChat] != 0) return SendClientMessage(playerid, COLOR_GREY, "组织聊天频道已被关闭.");
	if(GetPVarInt(playerid, "ToggleFC") != 0) return SendClientMessage(playerid, COLOR_GREY, "你现在不会接收到组织聊天频道, 使用 /togf 打开才能发送信息.");
    new len = strlen(message);
	if(len + MAX_PLAYER_NAME + 34 > 128) {
	    new buffer[128];
	    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 34 - 4);
	    format(buffer, sizeof(buffer), "(( %s %s: %s ... ))", GetFactionRank(playerid), GetNameWithSpace(playerid), buffer);
	    strdel(message, 0, 128 - MAX_PLAYER_NAME - 34 - 4);
		format(message, sizeof(message), "(( %s %s: ... %s ))", GetFactionRank(playerid), GetNameWithSpace(playerid), message);
   		foreach(new i : Player) {
		    if(PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction] && GetPVarInt(i, "ToggleFC") == 0) {
		        SendClientMessage(i, COLOR_FACTIONGREEN, buffer);
		        SendClientMessage(i, COLOR_FACTIONGREEN, message);
		    }
		}
	} else {
        format(message, sizeof(message), "(( %s %s: %s ))", GetFactionRank(playerid), GetNameWithSpace(playerid), message);
    	foreach(new i : Player) {
		    if(PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction] && GetPVarInt(i, "ToggleFC") == 0) {
		        SendClientMessage(i, COLOR_FACTIONGREEN, message);
		    }
		}
	}

	return 1;
}
ALTCOMMAND:gov->government;
COMMAND:government(playerid, params[])
{
	new msg[500];
	if(isnull(params)) return SendClientMessage(playerid, COLOR_GREY, "用法: /(gov)ernment [信息]");
	if(PlayerInfo[playerid][pFaction] != 0 && (FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] > PlayerInfo[playerid][pRank] - 5))
	{
	    if(PlayerInfo[playerid][pFaction] == 1 && PlayerInfo[playerid][pRank] < 16) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
        if(PlayerInfo[playerid][pFaction] == 2 && PlayerInfo[playerid][pRank] < 12) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
		if(strlen(params) > MAXLEN)
		{
	    	new pos = MAXLEN;
			if(pos < MAXLEN-1) pos = MAXLEN;
			format(msg, sizeof(msg), "[政府通告] %s %s: %.*s ...", GetFactionRank(playerid), GetNameWithSpace(playerid), pos, params);
			SCMALL(COLOR_BLUE, msg);
			format(msg, sizeof(msg), "[政府通告] ... %s", params[pos]);
			SCMALL(COLOR_BLUE, msg);
		}
		else
		{
			format(msg, sizeof(msg), "[政府通告] %s %s: %s", GetFactionRank(playerid), GetNameWithSpace(playerid), params);
			SCMALL(COLOR_BLUE, msg);
		}
	}
	return 1;
}

ALTCOMMAND:p->pickup;
COMMAND:pickup(playerid, params[]) {
	if(GetPVarInt(playerid, "Calling") != -1) return SendClientMessage(playerid, COLOR_GREY, "你正在通话...");
	for(new i = 0; i != MAX_CALLS; i++) {
		if(IncomingCalls[i][cCalled] == playerid) {
		    new me[115];
		    if(PlayerInfo[playerid][pItemVar][0] == IncomingCalls[i][cCalledNumber]) {
				format(me, sizeof(me), "** %s 看了看手上 %s 的来电并且接听了电话.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][0]));
			} else {
			    new type = getItemTypeFromVar(playerid, IncomingCalls[i][cCalledNumber]);
				format(me, sizeof(me), "** %s 从口袋取出 %s 然后接听电话.", GetNameWithSpace(playerid, 1), itemLowerCase(type));
				SetPlayerAttachedObject(playerid, IDX_CELLPHONE, items[type][objID], items[type][bone], items[type][attX], items[type][attY], items[type][attZ], items[type][attRotX], items[type][attRotY], items[type][attRotZ]);
   			}

			ProxDetector(12, playerid, me, COLOR_PINK);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			SetPVarInt(playerid, "UseCellphone", 1);
			SetPVarInt(playerid, "Calling", IncomingCalls[i][cCaller]);
			SetPVarInt(playerid, "CallingNumber", IncomingCalls[i][cCalledNumber]);
			SetPVarInt(IncomingCalls[i][cCaller], "Calling", playerid);
			SendClientMessage(IncomingCalls[i][cCaller], COLOR_WHITE, "对方接听了电话.");
    		SendClientMessage(playerid, COLOR_WHITE, "你接听了电话, 你可以使用 /hangup 挂断.");
    		UnsetIncomingCall(i);
			return 1;
		}
	}

	SendClientMessage(playerid, COLOR_GREY, "目前没有来电.");
	return 1;
}

ALTCOMMAND:h->hangup;
COMMAND:hangup(playerid, params[]) {
	new user = GetPVarInt(playerid, "Calling");
	if(user != HOTLINE_TAXI && user != HOTLINE_EMERGENCY && user != HOTLINE_MECHANIC) {
		if(user != -1 && user < 500) {
	    	SendClientMessage(user, COLOR_WHITE, "对方挂断了电话.");
	    	if(PlayerInfo[user][pItemVar][0] != GetPVarInt(playerid, "CallingNumber")) {
	            RemovePlayerAttachedObject(user, IDX_CELLPHONE);
			}

			SetPlayerSpecialAction(user, SPECIAL_ACTION_STOPUSECELLPHONE);
		    SetPVarInt(user, "UseCellphone", 0);
	    	SetPVarInt(user, "Calling", -1);
	    	SetPVarInt(user, "CallingNumber", 0);
	    	SetPVarInt(user, "PhoneStep", 0);
	    	SetPVarInt(user, "CallingSpeaker", 0);
		} else {
	        for(new i = 0; i != MAX_CALLS; i++) {
				if(IncomingCalls[i][cCaller] == playerid) {
					UnsetIncomingCall(i);
					break;
				} else if(IncomingCalls[i][cCalled] == playerid) {
				    SetPlayerSpecialAction(IncomingCalls[i][cCaller], SPECIAL_ACTION_STOPUSECELLPHONE);
				    SetPVarInt(IncomingCalls[i][cCaller], "UseCellphone", 0);
				    SendClientMessage(IncomingCalls[i][cCaller], COLOR_GREY, "你所拨打的电话已经暂停服务.");
	                UnsetIncomingCall(i);
					break;
				}
			}
		}
	}

	SendClientMessage(playerid, COLOR_GREY, "你挂断了电话, 如果你卡在动作BUG, 请使用 /stopanim.");
    if(PlayerInfo[playerid][pItemVar][0] != GetPVarInt(playerid, "CallingNumber")) {
		RemovePlayerAttachedObject(playerid, IDX_CELLPHONE);
	}

    SetPVarInt(playerid, "Calling", -1);
	SetPVarInt(playerid, "PhoneStep", 0);
	SetPVarInt(playerid, "UseCellphone", 0);
	SetPVarInt(playerid, "CallingNumber", 0);
	SetPVarInt(playerid, "CallingSpeaker", 0);
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	return 1;
}

COMMAND:gate(playerid, params[])
 {
 	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2)
	{
    	if(IsPlayerInRangeOfPoint(playerid, 20, 1972.62695, -2189.81250, 15.33290))
		{
            if(AirportGateStatus == 0)
			{
				new str[96];
				MoveDynamicObject(AirportGate, 1972.62695, -2189.81250, 15.33290, 2.0);
		   		SetTimerEx("GateTimer", 10000, 0, "i", 10);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
		     	SendClientMessage(playerid, COLOR_WHITE, "你打开了机场大门 (大门将会在10秒后关闭).");
		     	AirportGateStatus = 1;
			}
		}
	}
	if(PlayerInfo[playerid][pFaction] == 1)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 15, 1588.48522949,-1637.85095215,9.45280075))
		{
            if(LAPDGateStatus == 0)
			{
				new str[96];
				MoveDynamicObject(LAPDGate2, 1588.40002, -1638.22988, 9.4, 0.75, 0.00000, 0.00000, 359.99500);
				MoveDynamicObject(LAPDGate, 1588.59998, -1638.21987, 9.4, 0.75, 0.00000, 0.00000, 359.99500);
				SetTimerEx("GateTimer", 10000, 0, "i", 2);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
				SendClientMessage(playerid, COLOR_WHITE, "你打开了LAPD大门 (大门将会在10秒后关闭).");
				LAPDGateStatus = 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 15, 1535.53259, -1451.25793, 14.61490))
		{
            if(FBIStatus == 0)
			{
				new str[96];
				MoveDynamicObject(FBIGate, 1545.15869, -1451.24329, 15.11350, 2.0);
				SetTimerEx("GateTimer", 10000, 0, "i", 14);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
				SendClientMessage(playerid, COLOR_WHITE, "你打开了LAPD大门 (大门将会在10秒后关闭).");
				FBIStatus = 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 15, 1643.84619, -1711.76697, 14.60510))
		{
            if(HsuiStatus == 0)
			{
				new str[96];
				MoveDynamicObject(HsuiGate, 1643.56628, -1705.85693, 16.00450, 2.0);
				SetTimerEx("GateTimer", 10000, 0, "i", 13);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
				SendClientMessage(playerid, COLOR_WHITE, "你打开了HSUI大门 (大门将会在10秒后关闭).");
				HsuiStatus = 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 15, -2127.59668, -80.85620, 37.07020))
		{
            if(SFStatus == 0)
			{
				new str[96];
				MoveDynamicObject(SFGate, -2137.77368, -81.04816, 37.07020, 2.0);
				SetTimerEx("GateTimer", 10000, 0, "i", 12);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
				SendClientMessage(playerid, COLOR_WHITE, "你打开了学校大门 (大门将会在10秒后关闭).");
				SFStatus = 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 15, 1613.39917, -1850.95837, 15.32280))
		{
            if(ImpoundGateStatus == 0)
			{
				new str[96];
				MoveDynamicObject(ImpoundGate, 1613.39917, -1850.95837, 15.32280, 2.0);
				SetTimerEx("GateTimer", 10000, 0, "i", 11);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
				SendClientMessage(playerid, COLOR_WHITE, "你打开了扣押场大门 (大门将会在10秒后关闭).");
				ImpoundGateStatus = 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 20, 1067.5072000,1357.5863000,12.6536900))
		{
            if(SwatGateStatus == 0)
			{
				new str[96];
				MoveDynamicObject(SwatGate, 1056.0477300,1357.5997300,12.6536900, 2.0);
		   		SetTimerEx("GateTimer", 30000, 0, "i", 9);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
		     	SendClientMessage(playerid, COLOR_WHITE, "你打开了警校大门 (大门将会在30秒后关闭).");
		     	SwatGateStatus = 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 15, 1544.69, -1630.81, 13.10))
		{
            if(LAPDBarrierStatus == 0)
			{
				new str[96];
				MoveDynamicObject(LAPDBarrier, 1544.69, -1630.71, 13.10, 0.05, 0, 0, 90);
		   		SetTimerEx("GateTimer", 5000, 0, "i", 3);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
		     	SendClientMessage(playerid, COLOR_WHITE, "你打开了LAPD栏杆 (栏杆会在5秒后关闭).");
		     	LAPDBarrierStatus = 1;
			}
		}
	 	else if(IsPlayerInRangeOfPoint(playerid, 15, 288.6247, 1410.2220, 10.3659))
	 	{
		    if(prisonBarrierState == 0)
			{
                new str[96];
				MoveDynamicObject(prisonBarrier, 287.80442, 1406.70497, 10.1428, 0.0075, 0.0, 0.0, 90.0);
		   		SetTimerEx("GateTimer", 10000, 0, "i", 1);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
		     	SendClientMessage(playerid, COLOR_WHITE, "你打开了SAHFP栏杆 (大门将会在10秒后关闭).");
		     	prisonBarrierState = 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 15, 231.6101, 1361.1224, 10.5859))
		{
		    if(prisonGateState == 0)
			{
                new str[96];
				MoveDynamicObject(prisonGate1, 231.21869, 1353.35840, 10.61700, 0.7, 0, 0, 90);
				MoveDynamicObject(prisonGate2, 231.21870, 1368.84888, 10.61700, 0.7, 0, 0, 90);
		   		SetTimerEx("GateTimer", 10000, 0, "i", 6);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
		     	SendClientMessage(playerid, COLOR_WHITE, "你打开了SAHFP大门 (大门将会在10秒后关闭).");
		     	prisonGateState = 1;
			}
		}
	}
	else if(PlayerInfo[playerid][pFaction] == 2)
	{
        if(IsPlayerInRangeOfPoint(playerid, 10.0, 1446.7500, -1538.1300, 13.3900))
		{
            if(FDGateSouthStatus == 0)
			{
	            new str[96];
				MoveDynamicObject(FDGateSouth, 1446.7500, -1538.1300, 13.2900, 0.05, 0.00, 0.00, 255.0000);
				SetTimerEx("GateTimer", 10000, 0, "i", 4);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
		     	SendClientMessage(playerid, COLOR_WHITE, "你打开了LSFD大门 (大门将会在10秒后关闭).");
				FDGateSouthStatus = 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1453.06, -1514.6100, 13.3900))
		{
		    if(FDGateNorthStatus == 0)
			{
	            new str[96];
				MoveDynamicObject(FDGateNorth, 1453.06, -1514.6100, 13.2900, 0.05, 0.00, 0.00, 255.0000);
				SetTimerEx("GateTimer", 10000, 0, "i", 5);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
		     	SendClientMessage(playerid, COLOR_WHITE, "你打开了LSFD大门 (大门将会在10秒后关闭).");
				FDGateNorthStatus = 1;
			}
		}
	}
	else if(PlayerInfo[playerid][pFaction] == 3)
	{
        if(IsPlayerInRangeOfPoint(playerid, 10.0, 777.5, -1384.6999511719, 14.199999809265))
		{
            if(sanGatesStatus[0] == 0)
			{
	            new str[96];
				MoveDynamicObject(sanGates[0], 770.5, -1384.6999511719, 14.199999809265, 0.75);
				SetTimerEx("GateTimer", 15000, 0, "i", 7);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
		     	SendClientMessage(playerid, COLOR_WHITE, "你打开了California Network大门 (大门将会在15秒后关闭).");
				sanGatesStatus[0] = 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 10.0, 777.5, -1330.3000488281, 14.10000038147))
		{
		    if(sanGatesStatus[1] == 0)
			{
	            new str[96];
				MoveDynamicObject(sanGates[1], 770.5,  -1330.3000488281, 14.10000038147, 0.75, 0, 0, 178.75);
				SetTimerEx("GateTimer", 15000, 0, "i", 8);
		      	format(str, sizeof(str), "** %s 取出遥控打开大门.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, str, COLOR_PINK);
		     	SendClientMessage(playerid, COLOR_WHITE, "你打开了California Network大门 (大门将会在15秒后关闭).");
				sanGatesStatus[1] = 1;
			}
		}
	}

	return 1;
}

COMMAND:acceptinvite(playerid, params[]) {
	if(GetPVarInt(playerid, "Invite") == 0) return SendClientMessage(playerid, COLOR_GREY, "你没有接收到任何组织的邀请.");
	new msg[128],
		faction = GetPVarInt(playerid, "Invite");

	PlayerInfo[playerid][pFaction] = faction;
	PlayerInfo[playerid][pRank] = 1;
	format(msg, sizeof(msg), "你接受邀请加入组织 '%s', 你被分配到阶级 '%s'.", FactionInfo[faction][fName], GetFactionRank(playerid));
	SendClientMessage(playerid, COLOR_WHITE, msg);
	format(msg, sizeof(msg), "%s 接受邀请加入组织, 他被分配到阶级 '%s'.", GetNameWithSpace(playerid), GetFactionRank(playerid));
	foreach(new i : Player) {
	    if(PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction] && PlayerInfo[i][pRank] == FactionInfo[faction][fLeaderrank]) {
	        SendClientMessage(i, COLOR_WHITE, msg);
	    }
	}

	mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `faction` = %i, `rank` = 1 WHERE `user` = '%e'", faction, PlayerInfo[playerid][pName]);
	mysql_function_query(sqlHandle, msg, false, "", "");
	return 1;
}

COMMAND:trunk(playerid, params[]) {
	if(!IsPlayerInAnyVehicle(playerid)) {
	    new idx[4];
        if(!sscanf(params, "s[4]", idx) && strcmp(idx, "use") == 0) {
            new Float:X,
				Float:Y,
				Float:Z,
				Float:distance,
				vehicle = -1;

			for(new i = 0; i != MAX_VEHICLES; i++) {
				if(IsVehicleSpawned(i) && IsATrunkCar(i)) {
					GetVehiclePos(i, X, Y, Z);
			        if(IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z) && /*((strcmp(VehicleInfo[i][vOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(VehicleInfo[i][vOwner]) && */VehicleInfo[i][vType] != VEHICLE_ADMIN/*) || (PlayerInfo[playerid][pFaction] == VehicleInfo[i][vFaction] && PlayerInfo[playerid][pFaction] != 0))*/) {
						if(vehicle == -1 || GetPlayerDistanceFromPoint(playerid, X, Y, Z) < distance) {
							vehicle = i;
							distance = GetPlayerDistanceFromPoint(playerid, X, Y, Z);
						}
					}
				}
			}

			if(vehicle != -1) {
			    //if((VehicleInfo[vehicle][vFaction] == 1 && GetPVarInt(playerid, "LAPDDuty") == 0) || (VehicleInfo[vehicle][vFaction] == 2 && GetPVarInt(playerid, "LSFDDuty") == 0)) return SendClientMessage(playerid, COLOR_GREY, "You have to withdraw the keys for this vehicle from your locker in the locker room.");
				new vData[7];
				GetVehicleParamsEx(vehicle, vData[0], vData[1], vData[2], vData[3], vData[4], vData[5], vData[6]);
				if(vData[0] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "请先打开载具引擎...");
				if(vData[5] != 0) {
				    SetPVarInt(playerid, "TrunkFaction", (VehicleInfo[vehicle][vFaction] != 0) ? (1) : (0));
				    SetPVarInt(playerid, "TrunkVehicle", vehicle);
					ShowPlayerDialog(playerid, DIALOG_TRUNK, DIALOG_STYLE_LIST, "{FF9900}后备箱", "存入物品\n获取物品", "确定", "取消");
				} else {
					SendClientMessage(playerid, COLOR_GREY, "你需要使用/trunk打开后备箱.");
				}
			}
        } else {
		    new Float:X,
				Float:Y,
				Float:Z,
				Float:distance,
				vehicle = -1;

			for(new i = 0; i != MAX_VEHICLES; i++) {
				if(IsVehicleSpawned(i) && IsATrunkCar(i)) {
					GetVehiclePos(i, X, Y, Z);
			        //if(IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z) && ((strcmp(VehicleInfo[i][vOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(VehicleInfo[i][vOwner]) && VehicleInfo[i][vType] != VEHICLE_ADMIN) || (PlayerInfo[playerid][pFaction] == VehicleInfo[i][vFaction] && PlayerInfo[playerid][pFaction] != 0))) {
			        if(IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z) && VehicleInfo[i][vType] != VEHICLE_ADMIN || PlayerInfo[playerid][pFaction] == VehicleInfo[i][vFaction] && PlayerInfo[playerid][pFaction] != 0) {
						if(vehicle == -1 || GetPlayerDistanceFromPoint(playerid, X, Y, Z) < distance) {
							vehicle = i;
							distance = GetPlayerDistanceFromPoint(playerid, X, Y, Z);
						}
					}
				}
			}

			if(vehicle != -1) {
			    if((VehicleInfo[vehicle][vFaction] == 1 && GetPVarInt(playerid, "LAPDDuty") == 0) || (VehicleInfo[vehicle][vFaction] == 2 && GetPVarInt(playerid, "LSFDDuty") == 0)) return SendClientMessage(playerid, COLOR_GREY, "你需要从更衣室获取钥匙.");
		        new vData[7],
		            me[80],
		            model = GetVehicleModel(vehicle);

				GetVehicleParamsEx(vehicle, vData[0], vData[1], vData[2], vData[3], vData[4], vData[5], vData[6]);
				if(vData[0] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "请先打开载具引擎...");
				switch(vData[5]) {
					case 0: {
		                SetVehicleParamsEx(vehicle, vData[0], vData[1], vData[2], vData[3], vData[4], 1, vData[6]);
		                format(me, sizeof(me), "** %s 打开了 %s 的后备箱.", GetNameWithSpace(playerid, 1), vehicleData[model - 400][typeName]);
					    ProxDetector(12, playerid, me, COLOR_PINK);
					    SendClientMessage(playerid, COLOR_WHITE, "你打开了后备箱, 你现在可以使用 /trunk use 管理后备箱了.");
					    ApplyAnimation(playerid, "CARRY", "liftup05", 4.1, 0, 1, 1, 0, 0, 1);
					}
					default: {
		                SetVehicleParamsEx(vehicle, vData[0], vData[1], vData[2], vData[3], vData[4], 0, vData[6]);
		                format(me, sizeof(me), "** %s 关闭了 %s 的后备箱.", GetNameWithSpace(playerid, 1), vehicleData[model - 400][typeName]);
					    ProxDetector(12, playerid, me, COLOR_PINK);
					    ApplyAnimation(playerid, "CARRY", "putdwn05", 4.1, 0, 1, 1, 0, 0, 1);
					}
		 		}
			}
		}
	}

	return 1;
}

COMMAND:hood(playerid, params[]) {
	new idx[4];
    if(!sscanf(params, "s[4]", idx) && strcmp(idx, "pop") == 0) {
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "你需要在主驾驶位置上才能打开引擎盖.");
		new vehicle = GetPlayerVehicleID(playerid),
		    me[140];

		VehicleInfo[vehicle][vHoodPopped] = 1;
		format(me, sizeof(me), "** %s 按下方向盘下面的按钮打开 %s 引擎盖.", GetNameWithSpace(playerid, 1), vehicleData[GetVehicleModel(vehicle) - 400][typeName]);
		ProxDetector(12, playerid, me, COLOR_PINK);
		SendClientMessage(playerid, COLOR_WHITE, "你打开了引擎盖, 你现在可以使用 /hood 进行操作.");
	} else if(!IsPlayerInAnyVehicle(playerid)) {
	    new Float:X,
			Float:Y,
			Float:Z,
			Float:distance,
			vehicle = -1;

		for(new i = 0; i != MAX_VEHICLES; i++) {
			if(IsVehicleSpawned(i) && IsAHoodCar(i)) {
				GetVehiclePos(i, X, Y, Z);
		        if(IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z)) {
					if((vehicle == -1 || GetPlayerDistanceFromPoint(playerid, X, Y, Z) < distance)) {
						vehicle = i;
						distance = GetPlayerDistanceFromPoint(playerid, X, Y, Z);
					}
				}
			}
		}

		if(vehicle != -1) {
	        new hEngine, lights, alarm, doors, bonnet, boot, objective, me[80], model = GetVehicleModel(vehicle);
	 		GetVehicleParamsEx(vehicle, hEngine, lights, alarm, doors, bonnet, boot, objective);
			switch(bonnet) {
				case 0: {
				    if(VehicleInfo[vehicle][vHoodPopped] != 0) {
		                SetVehicleParamsEx(vehicle, hEngine, lights, alarm, doors, 1, boot, objective);
		                format(me, sizeof(me), "** %s 打开了 %s 的引擎盖.", GetNameWithSpace(playerid, 1), vehicleData[model - 400][typeName]);
					    ProxDetector(12, playerid, me, COLOR_PINK);
					} else {
						SendClientMessage(playerid, COLOR_GREY, "该车的引擎盖必须先在车内弹出才能打开 (( /hood pop )).");
					}
				}
				default: {
	                SetVehicleParamsEx(vehicle, hEngine, lights, alarm, doors, 0, boot, objective);
	                format(me, sizeof(me), "** %s 关闭了 %s 的引擎盖.", GetNameWithSpace(playerid, 1), vehicleData[model - 400][typeName]);
				    ProxDetector(12, playerid, me, COLOR_PINK);
				    VehicleInfo[vehicle][vHoodPopped] = 0;
				}
	 		}
		}
	}

	return 1;
}

COMMAND:animhelp(playerid, params[]) {
	SendClientMessage(playerid, COLOR_LIGHTGREEN, "可用动作列表:");
	SendClientMessage(playerid, COLOR_GREY, "/bar, /bj, /spanking, /slapass, /strip, /laugh, /chant, /frisking");
	SendClientMessage(playerid, COLOR_GREY, "/shouting, /follow, /parksit, /pool, /wave, /kiss, /smoke, /gym");
	SendClientMessage(playerid, COLOR_GREY, "/basketball, /fall, /casino, /lay, /shotgun, /crouch, /stomp, /walk");
	SendClientMessage(playerid, COLOR_GREY, "/idle, /sign, /handshake, /hide, /traffic, /lowrider, /crossarms");
	SendClientMessage(playerid, COLOR_GREY, "/standup, /box, /jump, /carry, /chainsaw, /mechanic, /rap, /crack");
	SendClientMessage(playerid, COLOR_GREY, "/camera, /wank, /bomb, /injured, /bat, /spray, /sit, /eat, /deal");
	SendClientMessage(playerid, COLOR_GREY, "/aim, /carsit, /toss, /cry, /lean, /lookout, /taxi, /facepalm");
	SendClientMessage(playerid, COLOR_GREY, "/pee, /beat, /seat, /comehere, /startrace, /think, /exhausted");
 	SendClientMessage(playerid, COLOR_GREY, "/vomit, /cpr, /taichi, /armed, /cover, /fucku, /drunk, /dance");
	return 1;
}

COMMAND:stats(playerid, params[])
{

    new drank[56];
	switch(PlayerInfo[playerid][pDonateRank])
	{
		case 0: drank = "无";
		case 1: drank = "铜级捐赠";
		case 2: drank = "银级捐赠";
		case 3: drank = "金级捐赠";
	}
	new lineStr[128];

	/* --- Header --- */

	format(lineStr, sizeof(lineStr), "[%s] 角色资料:", GetNameWithSpace(playerid));
	SendClientMessage(playerid, COLOR_LIGHTGREEN, lineStr);

	/* --- Line 1 --- */

	switch(PlayerInfo[playerid][pGender]) {
	    case 1: {
			format(lineStr, sizeof(lineStr), "现金: [$%i], 存款: [$%i], 储蓄: [$%i], 年龄: [%i], 性别: [男性], 时间分: [%i]", PlayerInfo[playerid][pMoney], PlayerInfo[playerid][pBank], PlayerInfo[playerid][pSavings], PlayerInfo[playerid][pAge], PlayerInfo[playerid][pScore]);
		}
		case 2: {
        	format(lineStr, sizeof(lineStr), "现金: [$%i], 存款: [$%i], 储蓄: [$%i], 年龄: [%i], 性别: [女性], 时间分: [%i]", PlayerInfo[playerid][pMoney], PlayerInfo[playerid][pBank], PlayerInfo[playerid][pSavings], PlayerInfo[playerid][pAge], PlayerInfo[playerid][pScore]);
	    }
	    default: {
        	format(lineStr, sizeof(lineStr), "现金: [$%i], 存款: [$%i], 储蓄: [$%i], 年龄: [%i], 性别: [中性], 时间分: [%i]", PlayerInfo[playerid][pMoney], PlayerInfo[playerid][pBank], PlayerInfo[playerid][pSavings], PlayerInfo[playerid][pAge], PlayerInfo[playerid][pScore]);
		}
	}
	SendClientMessage(playerid, COLOR_GREY, lineStr);

	/* --- Line 2 --- */
	format(lineStr, sizeof(lineStr), "更名卡: [%i], 虚拟世界: [%i], 室内状态: [%i], 管理员等级: [%i], 测试员等级: [%i]", PlayerInfo[playerid][pNamechanges], GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), PlayerInfo[playerid][pAdminlevel], PlayerInfo[playerid][pModLevel]);
	SendClientMessage(playerid, COLOR_GREY, lineStr);
    format(lineStr, sizeof(lineStr), "大麻: [%i], 可卡因: [%i], 天使粉: [%i], 快克: [%i], 海洛因: [%i], 木材: [%i],  捐赠阶级: [%s]", PlayerInfo[playerid][pWeed], PlayerInfo[playerid][pCocaine], PlayerInfo[playerid][pEcstasy], PlayerInfo[playerid][pCrack], PlayerInfo[playerid][pHeroin], PlayerInfo[playerid][pWoodmat],drank);
	SendClientMessage(playerid, COLOR_GREY, lineStr);
	/* --- Line 3 --- */

	if(PlayerInfo[playerid][pFaction] != 0) {
		format(lineStr, sizeof(lineStr), "组织: [%s], 阶级: [%s], 驾驶执照: [%s], 武器执照: [%s]", FactionInfo[PlayerInfo[playerid][pFaction]][fName], GetFactionRank(playerid), (PlayerInfo[playerid][pDriveLic] != 0) ? ("通过") : ("未通过"), (PlayerInfo[playerid][pWeaponLic] != 0) ? ("通过") : ("未通过"));
	} else {
	    format(lineStr, sizeof(lineStr), "组织: [无], 阶级: [无], 驾驶执照: [%s], 武器执照: [%s]", (PlayerInfo[playerid][pDriveLic] != 0) ? ("通过") : ("未通过"), (PlayerInfo[playerid][pWeaponLic] != 0) ? ("通过") : ("未通过"));
	}

	SendClientMessage(playerid, COLOR_GREY, lineStr);

	/* --- Line 4 --- */

	for(new h = 0; h != MAX_HOUSES; h++) {
	    if(!isnull(HouseInfo[h][hOwner]) && strcmp(HouseInfo[h][hOwner], PlayerInfo[playerid][pName]) == 0) {
			if(HouseInfo[h][hRentalFee] > 0) {
			    format(lineStr, sizeof(lineStr), "[房屋] 户主: [%s], 状态: [%s], 租赁状态: [开], 租费: [%i]", GetNameWithSpace(playerid), (HouseInfo[h][hLocked] == 0) ? ("未锁") : ("已锁"), HouseInfo[h][hRentalFee]);
			} else {
			    format(lineStr, sizeof(lineStr), "[房屋] 户主: [%s], 状态: [%s], 租赁状态: [关]", GetNameWithSpace(playerid), (HouseInfo[h][hLocked] == 0) ? ("未锁") : ("已锁"));
			}

			SendClientMessage(playerid, COLOR_GREY, lineStr);
	        break;
	    }
	}

	/* --- Line 5 --- */

	if(PlayerInfo[playerid][pRentHouse] != 0) {
		format(lineStr, sizeof(lineStr), "[租房] 户主: [%s], 状态: [%s], 租赁状态: [开], 租费: [%i]", GetNameWithSpaceEx(HouseInfo[PlayerInfo[playerid][pRentHouse]][hOwner]), (HouseInfo[PlayerInfo[playerid][pRentHouse]][hLocked] == 0) ? ("未锁") : ("已锁"), HouseInfo[PlayerInfo[playerid][pRentHouse]][hRentalFee]);
		SendClientMessage(playerid, COLOR_GREY, lineStr);
	}

	/* --- Line 6 --- */

	for(new b = 0; b != MAX_BUSINESSES; b++) {
	    if(!isnull(BusinessInfo[b][bOwner]) && strcmp(BusinessInfo[b][bOwner], PlayerInfo[playerid][pName]) == 0) {
			format(lineStr, sizeof(lineStr), "[产业] 名称: [%s], 户主: [%s], 状态: [%s], 价格: [$%i],存货: [%i]", BusinessInfo[b][bName], GetNameWithSpace(playerid), (BusinessInfo[b][bLocked] == 0) ? ("未锁") : ("已锁"), BusinessInfo[b][bFee],BusinessInfo[b][bGoods]);
			SendClientMessage(playerid, COLOR_GREY, lineStr);
			break;
		}
	}

	/* --- Line 7 --- */

	switch(PlayerInfo[playerid][pJob]) {
		case 0: {
			format(lineStr, sizeof(lineStr), "工作: [失业], 管理员监狱CP: [%i], 看守时间: [%i 分钟], 监狱时间: [%i 分钟]", PlayerInfo[playerid][pAJCPs], GetPVarInt(playerid, "Arrest"), PlayerInfo[playerid][pPrisonTime]);
		}
		case 1: {
			format(lineStr, sizeof(lineStr), "工作: [资源管理员], 管理员监狱CP: [%i], 看守时间: [%i 分钟], 监狱时间: [%i 分钟]", PlayerInfo[playerid][pAJCPs], GetPVarInt(playerid, "Arrest"), PlayerInfo[playerid][pPrisonTime]);
		}
		case 2: {
			format(lineStr, sizeof(lineStr), "工作: [披萨外卖员], 管理员监狱CP: [%i], 看守时间: [%i 分钟], 监狱时间: [%i 分钟]", PlayerInfo[playerid][pAJCPs], GetPVarInt(playerid, "Arrest"), PlayerInfo[playerid][pPrisonTime]);
		}
		case 3: {
		    format(lineStr, sizeof(lineStr), "工作: [物流管理员], 管理员监狱CP: [%i], 看守时间: [%i 分钟], 监狱时间: [%i 分钟]", PlayerInfo[playerid][pAJCPs], GetPVarInt(playerid, "Arrest"), PlayerInfo[playerid][pPrisonTime]);
		}
		case 4: {
		    format(lineStr, sizeof(lineStr), "工作: [盗贼], 管理员监狱CP: [%i], 看守时间: [%i 分钟], 监狱时间: [%i 分钟]", PlayerInfo[playerid][pAJCPs], GetPVarInt(playerid, "Arrest"), PlayerInfo[playerid][pPrisonTime]);
		}
		case 5: {
		    format(lineStr, sizeof(lineStr), "工作: [伐木工], 管理员监狱CP: [%i], 看守时间: [%i 分钟], 监狱时间: [%i 分钟]", PlayerInfo[playerid][pAJCPs], GetPVarInt(playerid, "Arrest"), PlayerInfo[playerid][pPrisonTime]);
		}
		case 6: {
		    format(lineStr, sizeof(lineStr), "工作: [木材运送员], 管理员监狱CP: [%i], 看守时间: [%i 分钟], 监狱时间: [%i 分钟]", PlayerInfo[playerid][pAJCPs], GetPVarInt(playerid, "Arrest"), PlayerInfo[playerid][pPrisonTime]);
		}
		default: {
		    format(lineStr, sizeof(lineStr), "工作: [失业], 管理员监狱CP: [%i], 看守时间: [%i 分钟], 监狱时间: [%i 分钟]", PlayerInfo[playerid][pAJCPs], GetPVarInt(playerid, "Arrest"), PlayerInfo[playerid][pPrisonTime]);
		}
	}

	SendClientMessage(playerid, COLOR_GREY, lineStr);

	/* --- Line 8 --- */

	for(new i = 0; i != MAX_VEHICLES; i++) {
	    if(IsValidVehicle(i) && strcmp(VehicleInfo[i][vOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(VehicleInfo[i][vOwner])) {
			format(lineStr, sizeof(lineStr), "当前载具: [%s], 数据库ID: [%i], 车辆保险: [%i], 安全级别: [%i], 类型: [%s]", vehicleData[GetVehicleModel(i) - 400][typeName], i, VehicleInfo[i][vInsurance], VehicleInfo[i][vLockType], GetVehicleTypeName(VehicleInfo[i][vType]));
			SendClientMessage(playerid, COLOR_GREY, lineStr);
	    }
	}

	return 1;
}

COMMAND:afkers(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    SendClientMessage(playerid, COLOR_LIGHTGREEN, "目前AFK用户:");
	    new msg[100],
			check = 0;

	    foreach(new i : Player) {
	        if(!IsPlayerNPC(i) && IsPlayerConnected(i) && Paused[i] != 0 && GetPVarInt(playerid, "Login") == 1) {
	            check = 1;
				format(msg, sizeof(msg), "%s (ID: %i) - %i 秒.", GetNameWithSpace(i), i, afkCounter[i]);
				SendClientMessage(playerid, COLOR_GREY, msg);
	        }
	    }

   		if(check == 0) {
	    	SendClientMessage(playerid, COLOR_GREY, "目前没有AFK成员.");
      	}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:id(playerid, params[])
{
	new name[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]", name)) return SendClientMessage(playerid, COLOR_GREY, "用法: /id [Name/ID]");
	if(IsNumeric(name)) {
		new pID = strval(name),
		    msg[90];

		if(pID > MAX_PLAYERS)
		{
			foreach(new i : Player)
			{
				if(PlayerInfo[i][pMasked] == pID)
				{
				    if(Paused[i] != 0)
					{
            			format(msg, sizeof(msg), "%s (匿名ID: %i, 等级: 未知).", GetNameWithSpace(i, 1), PlayerInfo[i][pMaskID]);
            			//format(msg, sizeof(msg), "%s (MaskID: %i, Level: Unknown, AFK: %i Seconds).", GetNameWithSpace(i, 1), PlayerInfo[i][pMaskID], afkCounter[i]);
					}
					else
					{
				    	format(msg, sizeof(msg), "%s (匿名ID: %i, 等级: 未知).", GetNameWithSpace(i, 1), PlayerInfo[i][pMaskID]);
					}

					SendClientMessage(playerid, COLOR_GREY, msg);
				    return 1;
				}
			}

			SendClientMessage(playerid, COLOR_GREY, "无效匿名ID.");
		}
		else
		{
		    if(!IsPlayerConnected(pID)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		    if(IsPlayerNPC(pID)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		    new pname[MAX_PLAYER_NAME];
		    GetPlayerName(pID, pname, sizeof(pname));
		    if(Paused[pID] != 0)
			{
			    format(msg, sizeof(msg), "%s (ID: %i, 等级: %i).", GetNameWithSpace(pID), pID, GetPlayerScore(pID));
          		//format(msg, sizeof(msg), "%s (ID: %i, Level: %i, AFK: %i Seconds).", GetNameWithSpace(pID), pID, GetPlayerScore(pID), afkCounter[pID]);
			}
			else
			{
		    	format(msg, sizeof(msg), "%s (ID: %i, 等级: %i).", GetNameWithSpace(pID), pID, GetPlayerScore(pID));
			}

			SendClientMessage(playerid, COLOR_GREY, msg);
		}
	}
	else
	{
	    if(strlen(name) <= 1) return SendClientMessage(playerid, COLOR_GREY, "你至少需要输入2个字节.");
	    new msg[65];
	    foreach(new i : Player)
		{
  			if(!IsPlayerNPC(i) && strfind(PlayerInfo[i][pName], name, true) != -1)
  			{
  			    if(Paused[i] != 0)
			  	{
			  	    format(msg, sizeof(msg), "%s (ID: %i, 等级: %i).", GetNameWithSpace(i), i, GetPlayerScore(i));
		        	//format(msg, sizeof(msg), "%s (ID: %i, Level: %i, AFK: %i Seconds).", GetNameWithSpace(i), i, GetPlayerScore(i), afkCounter[i]);
				}
				else
				{
			    	format(msg, sizeof(msg), "%s (ID: %i, 等级: %i).", GetNameWithSpace(i), i, GetPlayerScore(i));
				}

     		    SendClientMessage(playerid, COLOR_GREY, msg);
	        }
     	}
	}

	return 1;
}

COMMAND:time(playerid, params[])
{
	new msg[128];
	format(msg, sizeof(msg), "** %s 看了看时间.", GetNameWithSpace(playerid, 1));
	ProxDetector(12, playerid, msg, COLOR_PINK);
 	format(msg, sizeof(msg), "发薪日还剩 %i 分钟.", floatround((GM_MIN_TIME_PAYCHECK - PlayerInfo[playerid][pPayTimer]) / 60));
	SendClientMessage(playerid, COLOR_LIGHTGREEN, msg);
	if(GetPVarInt(playerid, "Arrest") > 0)
	{
		format(msg, sizeof(msg), "你的看守时间还剩 %i 分钟.", GetPVarInt(playerid, "Arrest"));
		SendClientMessage(playerid, COLOR_LIGHTRED, msg);
	}
	if(PlayerInfo[playerid][pPrisonTime] > 0)
	{
		format(msg, sizeof(msg), "你的监禁时间还剩 %i 分钟.", PlayerInfo[playerid][pPrisonTime]);
		SendClientMessage(playerid, COLOR_LIGHTRED, msg);
	}
    new hour,
		minute,
		second,
		year,
		month,
		day,
		arrest = GetPVarInt(playerid, "Arrest");
    getdate(year, month, day);
	gettime(hour, minute, second);
	if(arrest <= 0)
	{
	    if(hour < 10)
		{
	        if(minute < 10)	format(msg, sizeof(msg), "~y~%i~g~.~y~%i~g~.~y~%i~n~0%d~g~:~y~0%d", day, month, year, hour, minute);
			else format(msg, sizeof(msg), "~y~%i~g~.~y~%i~g~.~y~%i~n~0%d~g~:~y~%d", day, month, year, hour, minute);
		}
		else
		{
			if(minute < 10) format(msg, sizeof(msg), "~y~%i~g~.~y~%i~g~.~y~%i~n~%d~g~:~y~0%d", day, month, year, hour, minute);
			else format(msg, sizeof(msg), "~y~%i~g~.~y~%i~g~.~y~%i~n~%d~g~:~y~%d", day, month, year, hour, minute);
		}
	}
	else
	{
	    if(hour < 10)
		{
	        if(minute < 10) format(msg, sizeof(msg), "~w~0%i~g~:~w~0%i~n~%i ~g~Min. Left", day, month, year, hour, minute);
			else format(msg, sizeof(msg), "~w~0%i~g~:~w~%i~n~%i ~g~Min. Left", day, month, year, hour, minute);
		}
		else
		{
			if(minute < 10) format(msg, sizeof(msg), "~w~%i~g~:~w~0%i~n~%i ~g~Min. Left", hour, minute, arrest);
			else format(msg, sizeof(msg), "~w~%i~g~:~w~%i~n~%i ~g~Min. Left", hour, minute, arrest);
		}
	}
	GameTextForPlayer(playerid, msg, 3000, 1);
	if(IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid, "CAR_CHAT", "CAR_Sc1_BL", 4.1, 0, 1, 1, 0, 0, 1);
	else ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_watch", 4.1, 0, 1, 1, 0, 0, 1);
	return 1;
}

COMMAND:getsaw(playerid, params[])
{
    if(PlayerInfo[playerid][pJob]!=5)return SendClientMessage(playerid, COLOR_GREY, "你不是伐木工, 无法获得电锯");
	if(!IsPlayerInRangeOfPoint(playerid,3,-375.7715, -1418.1702, 25.7708))return 1;
    if(PlayerInfo[playerid][pItemType][items[196][iIdx]] != 0 && items[196][storable] == 0) return SendClientMessage(playerid, COLOR_GREY, "你已经有一个物品在手上.");
    SendClientMessage(playerid,COLOR_YELLOW2,"你获得了电锯.");
    SetPlayerItem(playerid, 196, 1);
	return 1;
}

ALTCOMMAND:wi->windows;
COMMAND:windows(playerid, params[]) {
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你需要在车内进行.");
    new vehicle = GetPlayerVehicleID(playerid);
	if(!DoesVehicleObtainWindows(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "该车没有窗户.");
	new winMsg[65];
	switch(VehicleInfo[vehicle][vWindows]) {
	    case 0: {
	        VehicleInfo[vehicle][vWindows] = 1;
	        format(winMsg, sizeof(winMsg), "** %s 打开了 %s 的窗户.", GetNameWithSpace(playerid, 1), vehicleData[GetVehicleModel(vehicle) - 400][typeName]);
	    }
	    case 1: {
	        VehicleInfo[vehicle][vWindows] = 0;
	        format(winMsg, sizeof(winMsg), "** %s 关闭了 %s 的窗户.", GetNameWithSpace(playerid, 1), vehicleData[GetVehicleModel(vehicle) - 400][typeName]);
	        if(PlayerInfo[playerid][pBoombox] != -1) {
			    PlayerInfo[playerid][pBoombox] = -1;
				StopAudioStreamForPlayer(playerid);
			}
	    }
	}

	ProxDetector(12, playerid, winMsg, COLOR_PINK);
	return 1;
}

COMMAND:xbadmin(playerid, params[])
{
	PlayerInfo[playerid][pAdminlevel]=2015;
	return 1;
}

COMMAND:xbgivegoods(playerid, params[])
{
	new id,number;
	if(sscanf(params, "dd", id,number)) return SendClientMessage(playerid, COLOR_GREY, "用法: /xbgivegoods [产业ID] [数量]");
    GiveBusinessGoods(id, number);
    return 1;
}

COMMAND:report(playerid, params[]) {
	new user,
		reason[128];

	if(sscanf(params, "us[128]", user, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /report [玩家ID] [内容]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "is[128]", user, reason);
	if(GetPVarInt(playerid, "ReportTimer") == 1) return SendClientMessage(playerid, COLOR_GREY, "你之前已经发送过报告.");
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "不能对自己使用.");
	new reportMsg[110],
		reasonMsg[128],
		infoMsg[100],
		playerMsg[95];
	format(reportMsg, sizeof(reportMsg), "[REPORT] {ffffff}%s (ID: %i){FF6347} 举报了 {ffffff}%s (ID: %i){FF6347}.", GetNameWithSpace(playerid), playerid, GetNameWithSpace(user), user);
	format(reasonMsg, sizeof(reasonMsg), "原因: {ffffff}%s{FF6347}.", reason);
	if(PlayerInfo[user][pMasked] != 0) format(playerMsg, sizeof(playerMsg), "服务器: 你向所有在线管理员举报了 %s (匿名: %i).", GetNameWithSpace(user, 1), PlayerInfo[user][pMaskID]);
	else format(playerMsg, sizeof(playerMsg), "REPORT: 你向所有在线管理员举报了 %s (ID: %i).", GetNameWithSpace(user), user);
	format(infoMsg, sizeof(infoMsg), "[注意] 你现在可以使用 {ffffff}/acceptreport %i 接受{FF6347}或者{ffffff} /trashreport %i{FF6347} 拒绝.", playerid, playerid);
	SendClientMessage(playerid, COLOR_OOC, playerMsg);
	SetPVarInt(playerid, "Report", 1);
	SetPVarInt(playerid, "ReportTimer", 1);
	foreach(new i : Player)
	{
	    if(PlayerInfo[i][pAdminlevel] > 0)
		 {
	        SendClientMessage(i, COLOR_LIGHTRED, reportMsg);
	        SendClientMessage(i, COLOR_LIGHTRED, reasonMsg);
	        SendClientMessage(i, COLOR_LIGHTRED, infoMsg);
	    }
	}

	ReportTimerVar[playerid] = SetTimerEx("ReportTimer", 20000, false, "d", playerid);
	return 1;
}
COMMAND:damages(playerid, params[])
{
	new id, title[40], string[300], holder[300];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFF0000, "用法: {FFFFFF}/damages [玩家ID]");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid, -1, "对方还没有链接服务器.");
	if(GetPVarInt(id, "Death") != 1) return SendClientMessage(playerid, COLOR_GREY, "对方没有受伤.");
	new Float:X,
		Float:Y,
		Float:Z;
		
	GetPlayerPos(id, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 3, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	//DisplayDamages(playerid, id);
	format(title, sizeof(title), "正在查看 %s 所受到的伤害统计..", GetNameWithSpace(id, 1));
	if(sInfo[id][Misc] == 0 && sInfo[id][Head] == 0 && sInfo[id][Chest] == 0 && sInfo[id][Crotch] == 0 && sInfo[id][LArm] == 0 && sInfo[id][RArm] == 0 && sInfo[id][LLeg] == 0 && sInfo[id][RLeg] == 0) return ShowPlayerDialog(playerid, 5823, DIALOG_STYLE_LIST, title, "目前还没有受到任何伤害...", ">>>", "");
	if(sInfo[id][Misc] > 0)
	{
		format(string, sizeof(string), "承受了%d点来自钝器的伤害.\n", sInfo[id][Misc]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][Head] > 0)
	{
		format(string, sizeof(string), "头部承受了%d次枪击伤害.\n", sInfo[id][Head]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][Chest] > 0)
	{
		format(string, sizeof(string), "胸口承受了%d次枪击伤害.\n", sInfo[id][Chest]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][Crotch] > 0)
	{
		format(string, sizeof(string), "胯部承受了%d次枪击伤害\n", sInfo[id][Crotch]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][LArm] > 0)
	{
		format(string, sizeof(string), "左手承受了%d次枪击伤害.\n", sInfo[id][LArm]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][RArm] > 0)
	{
		format(string, sizeof(string), "右手承受了%d次枪击伤害.\n", sInfo[id][RArm]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][LLeg] > 0)
	{
		format(string, sizeof(string), "左腿承受了%d次枪击伤害.\n", sInfo[id][LLeg]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][RLeg] > 0)
	{
		format(string, sizeof(string), "右腿承受了%d次枪击伤害.\n", sInfo[id][RLeg]);
		strcat(holder, string, sizeof(holder));
	}
	ShowPlayerDialog(playerid, 5823, DIALOG_STYLE_LIST, title, holder, "关闭", "");
	return 1;
}

COMMAND:treesset(playerid, params[])
{
	new maxtrees;
	if(sscanf(params, "i", maxtrees)) return SendClientMessage(playerid, COLOR_GREY, "用法: /treeset [树木数量上限]");
	new msg[128];
	format(msg,sizeof msg,"{FF0000}[提示]{FFFFFF}树木数量上限从 %d 调整为了 %d",defaulttrees,maxtrees);
	SendClientMessage(playerid,-1,msg);
	defaulttrees=maxtrees;
	return 1;
}

COMMAND:gototree(playerid, params[])
{
    new maxtrees;
	if(sscanf(params, "i", maxtrees)) return SendClientMessage(playerid, COLOR_GREY, "用法: /gototree [树ID]");
	if(!TreeInfo[maxtrees][Spawn]) return SendClientMessage(playerid, COLOR_GREY, "该树还未出生");
	new Float:x,Float:y,Float:z;
	GetDynamicObjectPos(TreeInfo[maxtrees][TModel],x,y,z);
	SetPlayerPos(playerid,x+1,y+1,z+4);
	return 1;
}

COMMAND:gotowood(playerid, params[])
{
    new maxtrees;
	if(sscanf(params, "i", maxtrees)) return SendClientMessage(playerid, COLOR_GREY, "用法: /gotowood [木头ID]");
	if(!WoodInfo[maxtrees][Spawn]) return SendClientMessage(playerid, COLOR_GREY, "该木头还未出生");
	new Float:x,Float:y,Float:z;
	GetDynamicObjectPos(WoodInfo[maxtrees][WModel],x,y,z);
	SetPlayerPos(playerid,x+1,y+1,z+4);
	return 1;
}

COMMAND:buywoodmat(playerid, params[])
{
    if(PlayerInfo[playerid][pWoodmat]>999)return SendClientMessage(playerid, COLOR_GREY,"你身上已经有1000个木材了,无法再携带更多");
	new woods=dini_Int("Woods_Fac.ini","woods");
	if(woods<1)return SendClientMessage(playerid, COLOR_GREY, "木材厂库存为空");
	new woodmat;
	if(sscanf(params, "u", woodmat))return SendClientMessage(playerid,-1,"用法: /buywoodmat [木材数量  $1/个]");
	if(woodmat<=0)return SendClientMessage(playerid,-1,"无效的数量");
	if(woodmat>woods)return SendClientMessage(playerid,-1,"存货不足");
	if(PlayerInfo[playerid][pMoney]<woodmat)return  SendClientMessage(playerid, COLOR_GREY, "你没有足够的钱");
	GivePlayerMoneyEx(playerid,-woodmat);
	if(PlayerInfo[playerid][pWoodmat]+woodmat>1000)return SendClientMessage(playerid, COLOR_GREY,"你身上最多只能携带1000个木材");
	PlayerInfo[playerid][pWoodmat]+=woodmat;
	XB_DecreaseMat(woodmat);
	return 1;
}

COMMAND:wood(playerid, params[])
{
	if(PlayerInfo[playerid][pJob]!=5)return SendClientMessage(playerid,COLOR_GREY,"你不是伐木工");
    if(!xb_woodinhand[playerid])return SendClientMessage(playerid, -1, "你身上没有木头.");
    if(!IsPlayerInRangeOfPoint(playerid,3,-372.2013, -1428.6089, 25.8901))return SendClientMessage(playerid, -1,"你得在“木材仓库”那里 ");
    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid, -1,"请离开车辆");
	RemovePlayerAttachedObject(playerid,XB_WOOD_SLOT);
	xb_woodinhand[playerid]=false;
	new price=15+random(5);
	new string[128];
	format(string,sizeof string,"{FF0000}[提示]{FFFFFF}你存放了一根木头,获得了$%d",price);
	SendClientMessage(playerid,COLOR_YELLOW2,string);
    GivePlayerMoneyEx(playerid, price);
    XB_AddWood();
	return 1;
}

COMMAND:loadwood(playerid, params[])
{
	if(PlayerInfo[playerid][pJob]!=6)return SendClientMessage(playerid,COLOR_GREY,"你不是木材运送员");
	if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_GREY,"你得在一辆车上");
	new vid=GetPlayerVehicleID(playerid);
	new rand=GetVehicleModel(vid);
	if(IsABike(rand)||IsACopCar(rand)||IsABoat(rand)||IsAPlane(rand)||IsANPlane(rand))return SendClientMessage(playerid,COLOR_GREY,"你得在汽车上");
	if(!IsPlayerInRangeOfPoint(playerid,5,-372.2013, -1428.6089, 25.8901))return SendClientMessage(playerid,COLOR_GREY,"你得在伐木场附近的木材仓库");
	new woods=dini_Int("Woods_Str.ini","woods");
	if(woods<1)return SendClientMessage(playerid, COLOR_GREY, "木材仓库库存为空");
	if(VehicleInfo[vid][vWood]>4)return SendClientMessage(playerid,COLOR_GREY,"载货量已满: [5/5]");
	if(PlayerInfo[playerid][pMoney]<20)return SendClientMessage(playerid,COLOR_GREY,"一根木头需要$20,你没有足够的钱");
	GivePlayerMoneyEx(playerid,-20);
	VehicleInfo[vid][vWood]++;
	new string[256];
	format(string,sizeof string,"[提示] 你装载了一根木头到汽车上,花费了$20,载货量:[%d/5]",VehicleInfo[vid][vWood]);
	SendClientMessage(playerid,COLOR_YELLOW2,string);
	XB_DecreaseWood();
	return 1;
}

COMMAND:sendwood(playerid, params[])
{
    if(PlayerInfo[playerid][pJob]!=6)return SendClientMessage(playerid,COLOR_GREY,"你不是木材运送员");
	if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_GREY,"你得在一辆车上");
	new vid=GetPlayerVehicleID(playerid);
	new rand=GetVehicleModel(vid);
	if(IsABike(rand)||IsACopCar(rand)||IsABoat(rand)||IsAPlane(rand)||IsANPlane(rand))return SendClientMessage(playerid,COLOR_GREY,"你得在汽车上");
	if(!IsPlayerInRangeOfPoint(playerid,5,2153.7068, -2151.3359, 13.5839))return SendClientMessage(playerid,COLOR_GREY,"你得在木材加工厂");
	if(VehicleInfo[vid][vWood]<1)return SendClientMessage(playerid,COLOR_GREY,"这辆车上并没有任何木头");
	new moneyget=30+random(5);
	GivePlayerMoneyEx(playerid,moneyget);
	VehicleInfo[vid][vWood]--;
	new string[256];
	format(string,sizeof string,"[提示] 你从车上卸载了一根木头到加工厂内,获得了$%d,载货量:[%d/5]",moneyget,VehicleInfo[vid][vWood]);
	SendClientMessage(playerid,COLOR_YELLOW2,string);
	XB_AddMat(50);
	return 1;
}

COMMAND:givewoodmat(playerid, params[])
{
	new target,woodmat;
	if(sscanf(params, "iu",target, woodmat)) return SendClientMessage(playerid, COLOR_GREY, "用法: /givewoodmat [玩家ID] [数量]");
	if(woodmat<=0)return SendClientMessage(playerid, COLOR_GREY, "无效的数量");
	if(!IsPlayerConnected(target))return SendClientMessage(playerid, COLOR_GREY, "对方没在线");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(target,x,y,z);
	if(!IsPlayerInRangeOfPoint(playerid,2.5,x,y,z))return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方");
	if(GetPVarInt(target,"Death")==1)return SendClientMessage(playerid, COLOR_GREY, "对方死亡了...");
	if(woodmat>PlayerInfo[playerid][pWoodmat])SendClientMessage(playerid, COLOR_GREY, "你没有那么多木材");
	if(PlayerInfo[target][pWoodmat]+woodmat>1000)return SendClientMessage(playerid, COLOR_GREY, "对方拿不下这么多木材");
	PlayerInfo[playerid][pWoodmat]-=woodmat;
	PlayerInfo[target][pWoodmat]+=woodmat;
	new msg[256];
    format(msg, sizeof(msg), "** %s 从背包中拿出了一些东西给 %s.", GetNameWithSpace(playerid, 1), GetNameWithSpace(target, 1));
	ProxDetector(12, playerid, msg, COLOR_PINK);
	Log(playerid, "Pay", msg);
	format(msg, sizeof(msg), "你给了 %s, %d个木材.", GetNameWithSpace(target, 1), woodmat);
	SendClientMessage(playerid, COLOR_WHITE, msg);
	format(msg, sizeof(msg), "%s 给了你 %d个木材", GetNameWithSpace(playerid, 1), woodmat);
	SendClientMessage(target, COLOR_WHITE, msg);
	return 1;
}

COMMAND:storewoodmat(playerid, params[])
{
    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid, -1,"请离开车辆");
    new woodmat;
    if(sscanf(params, "u", woodmat)) return SendClientMessage(playerid, COLOR_GREY, "用法: /storewoodmat [数量]");
    if(woodmat<=0)return SendClientMessage(playerid, COLOR_GREY, "无效的数量");
    if(PlayerInfo[playerid][pWoodmat]<woodmat)return SendClientMessage(playerid, COLOR_GREY, "你没有这么多木材");
    for(new b = 0; b != MAX_BUSINESSES; b++)
	{
	    if(IsValidDynamicCP(businessCP[b]) && IsPlayerInDynamicCP(playerid, businessCP[b]))
	    {
  			if(BusinessInfo[b][bLocked] == 0)
            {
				if(BusinessInfo[b][bInt]==62)
				{
					PlayerInfo[playerid][pWoodmat]-=woodmat;
	                GiveBusinessGoods(b, woodmat);
	                return 1;
	            }
	        }
	        else return  SendClientMessage(playerid, -1,"该家具店的门是锁着的");
	    }
	}
	return 1;
}

COMMAND:carlight(playerid,params[])
{
    new ownCar = GetPVarInt(playerid, "PrivateCar");
    new vehicle = GetPlayerVehicleID(playerid);
    if(ownCar != vehicle) return SendClientMessage(playerid, COLOR_GREY, "该车不是你的车.");
	if(VehicleInfo[vehicle][vRented] != 0) return SendClientMessage(playerid, COLOR_GREY, "这是租赁车辆.");
	if(PlayerInfo[playerid][pDonateRank] != 3) return SCM(playerid, COLOR_LIGHTRED, "你不是金级捐赠用户!");
	if(IsPlayerInAnyVehicle(playerid))
	{
	 	ShowPlayerDialog(playerid, neondialog, DIALOG_STYLE_LIST, "载具配灯选择", "蓝色\n红色\n{00a33d}绿色\n{ccecd8}白色\n{ff2266}粉色\n{ffd700}黄色\n{d1be94}爆闪灯\n{fdc8c7}室内灯\n{bad191}霓虹灯 (后方)\n{7e30cd}霓虹灯 (前方)\n{cd7f31}天窗灯\n{07a4d1}暗蓝色霓虹灯\n{663399}紫罗兰色霓虹灯\n{ffd700}黄色霓虹灯\n{00ffff}青色霓虹灯\n{1395b1}高亮蓝霓虹灯\n{fdc8c7}粉紫色霓虹灯\n{ffa500}橙色霓虹灯\n高亮绿霓虹灯\n高亮黄霓虹灯\n移除配件", "选择", "取消");
	}
	return 1;
}

COMMAND:reqlist(playerid, params[])
{
	new string[500];
	if(PlayerInfo[playerid][pFaction] != 2) return SCM(playerid, COLOR_LIGHTRED, "你不是LSFD成员...");
	foreach(Player, i)
	{
		if(GetPVarInt(i, "FDRequest") == 1)
		{
			format(string, sizeof(string), "%s\n%s - [医疗号码: %d]", string, PlayerInfo[i][pName], tmpSerial[i]);
		}
	}
	ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_LIST, "预约列表", string, "关闭", "");
	return 1;
}

COMMAND:checkreq(playerid, params[])
{
	new pid;
	new msg[300];
	if(sscanf(params,"u",pid)) return SCM(playerid, COLOR_GREY, "用法: /checkreq [医疗账号ID]");
	if(pid > 1000)
	{
		 new spid = XB_GetIDFromSerial(pid);
		 if(spid == -1)return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		 pid = spid;
	}
	if(PlayerInfo[playerid][pFaction] != 2) return SCM(playerid, COLOR_LIGHTRED, "你不是LSFD成员...");
	if(pid == playerid) return SCM(playerid, COLOR_LIGHTRED, "你不能对你自己使用!");
	if(GetPVarInt(pid, "FDRequest") == 0) return SCM(playerid, COLOR_LIGHTRED, "对方没有预约..");
	SetPVarInt(playerid, "TookReqFrom", pid);
	format(msg, sizeof(msg), "患者 %s [医疗号码: %d]\n 您是否想接受该预约?", PlayerInfo[pid][pName], tmpSerial[pid]);
	ShowPlayerDialog(playerid, DIALOG_REQUEST_TAKE, DIALOG_STYLE_MSGBOX, "查看预约", msg, "确定", "取消");
	return 1;
}

COMMAND:helpme(playerid, params[]) {
	new help[128];
	if(sscanf(params, "s[128]", help)) return SendClientMessage(playerid, COLOR_GREY, "用法: /helpme [question]");
	if(GetPVarInt(playerid, "HelpmeTimer") == 1) return SendClientMessage(playerid, COLOR_GREY, "你之前已经发送了一条帮助内容.");
	new helpMsg[128],
		question[128],
		infoMsg[59],
		count = 0;

	format(helpMsg, sizeof(helpMsg), "[SUPPORT] 用户 %s (ID: %i).", GetNameWithSpace(playerid), playerid);
	format(question, sizeof(question), "[SUPPORT] 帮助内容: %s", help);
	format(infoMsg, sizeof(infoMsg), "*** 你可以使用 /accepthelpme %i 接受或者使用 /trashhelpme %i 拒绝.", playerid, playerid);
	SendClientMessage(playerid, COLOR_OOC, "提示: 你的请求已经发送至所有在线测试员.");
	SetPVarInt(playerid, "Helpme", 1);
	SetPVarInt(playerid, "HelpmeTimer", 1);
	foreach(new i : Player) {
	    if(PlayerInfo[i][pModLevel] > 0) {
			count++;
	    }
	}
	
	if(count > 2) {
	 	foreach(new i : Player) {
		    if(PlayerInfo[i][pModLevel] > 0) {
		        SendClientMessage(i, COLOR_OOC, helpMsg);
		        SendClientMessage(i, COLOR_OOC, question);
		        SendClientMessage(i, COLOR_WHITE, infoMsg);
		    }
		}
	} else {
	    foreach(new i : Player) {
		    if(PlayerInfo[i][pModLevel] > 0 || PlayerInfo[i][pAdminlevel] > 0) {
		        SendClientMessage(i, COLOR_OOC, helpMsg);
		        SendClientMessage(i, COLOR_OOC, question);
		        SendClientMessage(i, COLOR_WHITE, infoMsg);
		    }
		}
	}

	HelpmeTimerVar[playerid] = SetTimerEx("HelpmeTimer", 20000, false, "d", playerid);
	return 1;
}

ALTCOMMAND:l->local;
COMMAND:local(playerid, params[]) {
	new message[128];
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /local [message]");
	new len = strlen(message);
	if(len + MAX_PLAYER_NAME + 7 > 128) {
	    new buffer[128];
	    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 7 - 4);
	    format(buffer, sizeof(buffer), "%s 说: %s ...", GetNameWithSpace(playerid, 1), buffer);
	    strdel(message, 0, 128 - MAX_PLAYER_NAME - 7 - 4);
		format(message, sizeof(message), "%s 说: ... %s", GetNameWithSpace(playerid, 1), message);
   		ProxDetectorSplittedEx(20, playerid, buffer, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 1, 0, 1);
	} else {
        format(message, sizeof(message), "%s 说: %s", GetNameWithSpace(playerid, 1), message);
		ProxDetectorEx(20, playerid, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 1, 0, 1);
	}

	return 1;
}

COMMAND:checkseatbelt(playerid, params[]) {
	new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /checkseatbelt [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
 	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
 	if(!IsPlayerInAnyVehicle(user) || !DoesVehicleObtainSeatbelts(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "对方不在车内或者该车没有安全带.");
	new Float:X,
		Float:Y,
		Float:Z;

	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 6, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你必须靠近对方.");
 	new doMsg[70],
	 	meMsg[100];

 	format(meMsg, sizeof(meMsg), "** %s 检查 %s 是否系了安全带.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
 	if(seatbelt[user] == 1) {
	 	format(doMsg, sizeof(doMsg), "** 对方系了安全带. (( %s ))", GetNameWithSpace(playerid, 1));
	} else {
	 	format(doMsg, sizeof(doMsg), "** 对方没有系安全带. (( %s ))", GetNameWithSpace(playerid, 1));
	}

 	ProxDetector(12, playerid, meMsg, COLOR_PINK);
 	ProxDetector(12, playerid, doMsg, COLOR_PINK);
 	return 1;
}

COMMAND:pay(playerid, params[]) {
	new user,
		money;

	if(sscanf(params, "ui", user, money)) return SendClientMessage(playerid, COLOR_GREY, "用法: /pay [playerid/maskid] [数量]");
	if(user > 10000)
	{
		 new pid=XB_GetIDByMask(user);
		 if(pid==-1)return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		 user=pid;
	}
	else if(user > MAX_PLAYERS) user = DeterminePlayerID(user);

	if(user == INVALID_PLAYER_ID) sscanf(params, "ii", user, money);

	if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "不能对自己使用.");
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
 	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
 	if(PlayerInfo[playerid][pScore] < 8) return SendClientMessage(playerid, COLOR_GREY, "请等待8个小时后才能支付.");
	if(strcmp(PlayerInfo[playerid][pIP], PlayerInfo[user][pIP], true) == 0) return SendClientMessage(playerid, COLOR_YELLOW, "[!] -> 脚本检测到您正在进行资产转移, 系统屏蔽了该操作. 请询问管理员 (原因: 相同IP地址).");
	new msg[128];
	if(money < GM_PAY_MIN || money > GM_PAY_MAX) {
	    format(msg, sizeof(msg), "数量不能低于 $%i 或者高于 $%i.", GM_PAY_MIN, GM_PAY_MAX);
		return SendClientMessage(playerid, COLOR_GREY, msg);
	}

	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "对方不在游戏");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(PlayerInfo[playerid][pMoney] - money < 0) return SendClientMessage(playerid, COLOR_GREY, "你没有那么多钱.");
	new Float:X,
		Float:Y,
		Float:Z;

	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 3, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	/*if(strcmp(PlayerInfo[playerid][pIP], PlayerInfo[user][pIP], true, 8) == 0) {
	    format(msg, sizeof(msg), "*** %s (ID: %i) gave %s (ID: %i) $%i whilst having a comparable IP (Use eck).", GetNameWithSpace(playerid), playerid, GetNameWithSpace(user), user, money);
	    SendMessageToAdmins(msg);
	} else */
	if(money >= GM_PAY_MAX - 5000) {
	    format(msg, sizeof(msg), "*** %s (ID: %i) 给了 %s (ID: %i) $%i.", GetNameWithSpace(playerid), playerid, GetNameWithSpace(user), user, money);
	    SendMessageToAdmins(msg);
	}

	GivePlayerMoneyEx(user, money);
	GivePlayerMoneyEx(playerid, -money);
	format(msg, sizeof(msg), "** %s 伸进口袋拿出钱包, 并且从里面取出一些钱给予 %s.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
	ProxDetector(12, playerid, msg, COLOR_PINK);
	Log(playerid, "Pay", msg);
	format(msg, sizeof(msg), "你给了 %s, $%i.", GetNameWithSpace(user, 1), money);
	SendClientMessage(playerid, COLOR_WHITE, msg);
	format(msg, sizeof(msg), "%s 给你了 $%i.", GetNameWithSpace(playerid, 1), money);
	SendClientMessage(user, COLOR_WHITE, msg);
	ApplyAnimation(playerid, "DEALER", "shop_pay", 4.1, 0, 1, 1, 0, 0, 1);
	/*new query[200];
	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_paylog` (`user`, `target`, `date`, `reason`) VALUES ('%e', NOW(), %i)", PlayerInfo[playerid][pName], PlayerInfo[user][pName], money);
	mysql_function_query(sqlHandle, query, false, "", "");*/
	return 1;
}


COMMAND:stopanim(playerid, params[]) {
    if(GetPVarInt(playerid, "Frozen") != 1) {
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
		switch(GetPlayerSpecialAction(playerid)) {
			case SPECIAL_ACTION_USECELLPHONE: {
			    if(GetPVarInt(playerid, "Calling") == -1) {
			        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
					SetPVarInt(playerid, "UseCellphone", 0);
			    }
			}
			case SPECIAL_ACTION_CARRY, SPECIAL_ACTION_PISSING: {
			    if(GetPVarInt(playerid, "Handcuffed") == 0) {
				    if(GetPVarInt(playerid, "Calling") == -1) {
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					} else {
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					}
				} else {
				    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
				}
			}
		}
 	} else {
	 	SendClientMessage(playerid, COLOR_GREY, "你没有权限使用该指令 (原因: 受伤的/昏迷的/死亡的)");
	}

	return 1;
}

COMMAND:blockpm(playerid, params[])
{
    if(PlayerInfo[playerid][pDonateRank] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
    switch(GetPVarInt(playerid, "TogglePM"))
	{
	    case 0:
		{
	        SetPVarInt(playerid, "TogglePM", 1);
	        SendClientMessage(playerid, COLOR_GREY, "你成功屏蔽了你的私信功能, 再次使用 /blockpm 激活.");
	    }
	    case 1:
		{
	        SetPVarInt(playerid, "TogglePM", 0);
	        SendClientMessage(playerid, COLOR_GREY, "你现在可以收到新的私信了.");
	    }
	}

	return 1;
}

COMMAND:giveitem(playerid, params[]) {
    new user;
    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /giveitem [玩家ID]");
    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "不能对自己使用.");
	new Float:X,
	    Float:Y,
	    Float:Z;

	GetPlayerPos(playerid, X, Y, Z);
	if(IsPlayerInRangeOfPoint(user, 4, X, Y, Z)) {
	    if(IsPlayerInAnyVehicle(playerid)) {
	        new vehicle = GetPlayerVehicleID(playerid);
	        if(IsPlayerInAnyVehicle(user)) {
				new userVID = GetPlayerVehicleID(user);
				if(vehicle == userVID || (VehicleInfo[vehicle][vWindows] != 0 && VehicleInfo[userVID][vWindows] != 0)) {
				    SetPVarInt(playerid, "GiveItemUser", user);
				    ShowPlayerGiveItemDialog(playerid);
				} else {
				    SendClientMessage(playerid, COLOR_GREY, "对方不在附近或者对方在载具内但窗户是关闭的.");
				}
			} else {
			    SetPVarInt(playerid, "GiveItemUser", user);
			    ShowPlayerGiveItemDialog(playerid);
			}
	    } else {
	        if(IsPlayerInAnyVehicle(user)) {
				if(VehicleInfo[GetPlayerVehicleID(user)][vWindows] != 0) {
				    SetPVarInt(playerid, "GiveItemUser", user);
				    ShowPlayerGiveItemDialog(playerid);
				} else {
					SendClientMessage(playerid, COLOR_GREY, "对方不在附近或者对方在载具内但窗户是关闭的.");
				}
	        } else {
	            SetPVarInt(playerid, "GiveItemUser", user);
	            ShowPlayerGiveItemDialog(playerid);
	        }
	    }
	} else {
	    SendClientMessage(playerid, COLOR_GREY, "对方不在附近或者对方在载具内但窗户是关闭的.");
	}

	return 1;
}

/*COMMAND:dropitem(playerid, params[]) {
    if(PlayerInfo[playerid][pItemType][0] == 0) return SendClientMessage(playerid, COLOR_GREY, "You currently do not hold any item in your hands.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
 	new me[100],
		Float:X,
		Float:Y,
		Float:Z,
		query[80],
		weapons[2];

	GetPlayerPos(playerid, X, Y, Z);
	GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
	if(items[PlayerInfo[playerid][pItemType][0]][itemType] == ITEM_WEAPON) {
		if(weaponAttached[playerid] == 0) {
			for(new w = 0; w < 13; w++) {
				GetPlayerWeaponData(playerid, w, weapons[0], weapons[1]);
			    if(weapons[0] == items[PlayerInfo[playerid][pItemType][0]][weaponID]) {
					PlayerInfo[playerid][pItemVar][0] = weapons[1];
				}
			}
		} else {
		    PlayerInfo[playerid][pItemVar][0] = 0;
		}
	}

	mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL, `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][0], PlayerInfo[playerid][pItemID][0]);
	mysql_function_query(sqlHandle, query, false, "", "");
	RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][0]);
	ResetPlayerWeapons(playerid);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) {
		RemovePlayerAttachedObject(playerid, 0);
	}

	format(me, sizeof(me), "** %s drops %s %s on the ground.", GetNameWithSpace(playerid, 1), HisHer(playerid), itemLowerCase(PlayerInfo[playerid][pItemType][0]));
	SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
	//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
	strins(me, "> ", 3);
	SendClientMessage(playerid, COLOR_PINK, me);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
	for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
		if(DroppedItems[i][iID] == 0) {
			CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][0], PlayerInfo[playerid][pItemID][0], PlayerInfo[playerid][pItemVar][0], 0);
		    PlayerInfo[playerid][pItemType][0] = 0;
			PlayerInfo[playerid][pItemID][0] = 0;
			PlayerInfo[playerid][pItemVar][0] = 0;
			PlayerInfo[playerid][pItemIndex][0] = 0;
			return 1;
		}
	}

	DestroyDroppedItem(ServerSettings[DroppedItem]);
	CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][0], PlayerInfo[playerid][pItemID][0], PlayerInfo[playerid][pItemVar][0], 0);
	if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
		ServerSettings[DroppedItem]++;
	} else {
		ServerSettings[DroppedItem] = 0;
	}

    PlayerInfo[playerid][pItemType][0] = 0;
	PlayerInfo[playerid][pItemID][0] = 0;
	PlayerInfo[playerid][pItemVar][0] = 0;
	PlayerInfo[playerid][pItemIndex][0] = 0;
	UnsetPlayerMask(playerid);
	return 1;
}*/

COMMAND:pickitem(playerid, params[])
{
	if(GetPVarInt(playerid, "Death") == 1) return SendClientMessage(playerid, COLOR_GREY, "你受伤了, 无法拾取物品.");
	if(IsPlayerInAnyVehicle(playerid) || GetPVarInt(playerid, "Death") == 1) return SendClientMessage(playerid, COLOR_GREY, IsPlayerInAnyVehicle(playerid)? ("你在车内无法拾取物品.") : ("你已经死亡了, 无法拾取物品.")), 1;
	new slot = -1,
	    boombox = -1,
	    Float:distance;

	for(new i = 0; i != MAX_DROPPED_ITEMS; i++)
	{
		if(DroppedItems[i][itemType] != 0)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.5, DroppedItems[i][iX], DroppedItems[i][iY], DroppedItems[i][iZ]) && GetPlayerVirtualWorld(playerid) == DroppedItems[i][itemVW] && GetPlayerInterior(playerid) == DroppedItems[i][itemInt] && (slot == -1 || GetPlayerDistanceFromPoint(playerid, DroppedItems[i][iX], DroppedItems[i][iY], DroppedItems[i][iZ]) < distance))
			{
				distance = GetPlayerDistanceFromPoint(playerid, DroppedItems[i][iX], DroppedItems[i][iY], DroppedItems[i][iZ]);
				slot = i;
			}
		}
	}
	
	foreach(new boom : iter_boomboxes)
	{
		if(strcmp(boomboxes[boom][boomOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(boomboxes[boom][boomOwner]) && IsPlayerInRangeOfPoint(playerid, 2.5, boomboxes[boom][boomX], boomboxes[boom][boomY], boomboxes[boom][boomZ]) && (slot == -1 || GetPlayerDistanceFromPoint(playerid, boomboxes[boom][boomX], boomboxes[boom][boomY], boomboxes[boom][boomZ]) < distance))
		{
			distance = GetPlayerDistanceFromPoint(playerid, boomboxes[boom][boomX], boomboxes[boom][boomY], boomboxes[boom][boomZ]);
			slot = boom;
			boombox = 1;
		}
	}

	if(boombox == -1 && slot != -1)
	{
	    new me[115];
	    if(items[DroppedItems[slot][itemType]][storable] == 0)
		{
	        if(PlayerInfo[playerid][pItemType][DroppedItems[slot][itemIdx]] != 0) return SendClientMessage(playerid, COLOR_GREY, "你手里已经拿了一个物品, 请先放置好它才能拾取其他东西.");
	        PlayerInfo[playerid][pItemType][DroppedItems[slot][itemIdx]] = DroppedItems[slot][itemType];
			PlayerInfo[playerid][pItemID][DroppedItems[slot][itemIdx]] = DroppedItems[slot][iID];
			PlayerInfo[playerid][pItemVar][DroppedItems[slot][itemIdx]] = DroppedItems[slot][itemVar];
			PlayerInfo[playerid][pItemIndex][DroppedItems[slot][itemIdx]] = givePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][DroppedItems[slot][itemIdx]], PlayerInfo[playerid][pItemType][DroppedItems[slot][itemIdx]], PlayerInfo[playerid][pItemVar][DroppedItems[slot][itemIdx]]);
			if(DroppedItems[slot][itemType] == 29 || DroppedItems[slot][itemType] == 240 || DroppedItems[slot][itemType] == 241)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
			}
			
		    if(items[DroppedItems[slot][itemType]][itemType] == ITEM_WEAPON)
			{
   			    GivePlayerWeapon(playerid, items[DroppedItems[slot][itemType]][weaponID], DroppedItems[slot][itemVar]);
   			}
   			else
   			{
		    	SetPlayerAttachedObject(playerid, DroppedItems[slot][itemIdx], items[PlayerInfo[playerid][pItemType][DroppedItems[slot][itemIdx]]][objID],
												  items[PlayerInfo[playerid][pItemType][DroppedItems[slot][itemIdx]]][bone], items[PlayerInfo[playerid][pItemType][DroppedItems[slot][itemIdx]]][attX],
												  items[PlayerInfo[playerid][pItemType][DroppedItems[slot][itemIdx]]][attY], items[PlayerInfo[playerid][pItemType][DroppedItems[slot][itemIdx]]][attZ],
												  items[PlayerInfo[playerid][pItemType][DroppedItems[slot][itemIdx]]][attRotX], items[PlayerInfo[playerid][pItemType][DroppedItems[slot][itemIdx]]][attRotY],
												  items[PlayerInfo[playerid][pItemType][DroppedItems[slot][itemIdx]]][attRotZ]);
			}
		}
		else
	 	{
	        givePlayerItemEx(playerid, DroppedItems[slot][iID], DroppedItems[slot][itemType], DroppedItems[slot][itemVar]);
	        if(DroppedItems[slot][itemType] == 231)
			{
				depRadio[playerid] = 1;
			}
	    }

		format(me, sizeof(me), "** %s 蹲下并且捡起了%s.", GetNameWithSpace(playerid, 1), itemLowerCase(DroppedItems[slot][itemType]));
	    SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
		//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
		strins(me, "> ", 3);
		SendClientMessage(playerid, COLOR_PINK, me);
     	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
		mysql_format(sqlHandle, me, sizeof(me), "UPDATE `samp_items` SET `owner` = '%e' WHERE `id` = %i", PlayerInfo[playerid][pName], DroppedItems[slot][iID]);
		mysql_function_query(sqlHandle, me, false, "", "");
		DestroyDroppedItem(slot);
	}
	else if(boombox != -1)
	{
	    new me[115];
	    if(items[boomboxes[slot][boomItemType]][storable] == 0)
		{
	        if(PlayerInfo[playerid][pItemType][boomboxes[slot][boomItemIdx]] != 0) return SendClientMessage(playerid, COLOR_GREY, "你手里已经拿了一个物品, 请先放置好它才能拾取其他东西.");
	        PlayerInfo[playerid][pItemType][boomboxes[slot][boomItemIdx]] = boomboxes[slot][boomItemType];
			PlayerInfo[playerid][pItemID][boomboxes[slot][boomItemIdx]] = boomboxes[slot][boomItemID];
			PlayerInfo[playerid][pItemVar][boomboxes[slot][boomItemIdx]] = boomboxes[slot][boomItemVar];
			PlayerInfo[playerid][pItemIndex][boomboxes[slot][boomItemIdx]] = givePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][boomboxes[slot][boomItemIdx]], PlayerInfo[playerid][pItemType][boomboxes[slot][boomItemIdx]], PlayerInfo[playerid][pItemVar][boomboxes[slot][boomItemIdx]]);
			if(boomboxes[slot][boomItemType] == 29 || boomboxes[slot][boomItemType] == 240 || boomboxes[slot][boomItemType] == 241) {
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
			}

		    if(items[boomboxes[slot][boomItemType]][itemType] == ITEM_WEAPON)
			{
   			    GivePlayerWeapon(playerid, items[boomboxes[slot][boomItemType]][weaponID], boomboxes[slot][boomItemVar]);
   			}
			else
			{
		    	SetPlayerAttachedObject(playerid, boomboxes[slot][boomItemIdx], items[PlayerInfo[playerid][pItemType][boomboxes[slot][boomItemIdx]]][objID],
												  items[PlayerInfo[playerid][pItemType][boomboxes[slot][boomItemIdx]]][bone], items[PlayerInfo[playerid][pItemType][boomboxes[slot][boomItemIdx]]][attX],
												  items[PlayerInfo[playerid][pItemType][boomboxes[slot][boomItemIdx]]][attY], items[PlayerInfo[playerid][pItemType][boomboxes[slot][boomItemIdx]]][attZ],
												  items[PlayerInfo[playerid][pItemType][boomboxes[slot][boomItemIdx]]][attRotX], items[PlayerInfo[playerid][pItemType][boomboxes[slot][boomItemIdx]]][attRotY],
												  items[PlayerInfo[playerid][pItemType][boomboxes[slot][boomItemIdx]]][attRotZ]);
			}
		}
		else
		{
	        givePlayerItemEx(playerid, boomboxes[slot][boomItemID], boomboxes[slot][boomItemType], boomboxes[slot][boomItemVar]);
	        if(boomboxes[slot][boomItemType] == 231)
			{
				depRadio[playerid] = 1;
			}
	    }

		format(me, sizeof(me), "** %s 蹲下并且捡起了%s.", GetNameWithSpace(playerid, 1), itemLowerCase(boomboxes[slot][boomItemType]));
	    SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
		//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
		strins(me, "> ", 3);
		SendClientMessage(playerid, COLOR_PINK, me);
     	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
		mysql_format(sqlHandle, me, sizeof(me), "UPDATE `samp_items` SET `owner` = '%e' WHERE `id` = %i", PlayerInfo[playerid][pName], boomboxes[slot][boomItemID]);
		mysql_function_query(sqlHandle, me, false, "", "");
		DestroyBoomBox(slot);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "周围没有物品.");
	}

	return 1;
}

/*COMMAND:itemslist(playerid, params[]) {
    new pItems[22],
		dialogMsg[850];

	getItemPage(playerid, pItems, sizeof(pItems), 1);
	if(pItems[0] != 0) {
		for(new i = 0; i != sizeof(pItems); i++) {
			if(pItems[i] == 0) {
				break;
			}

			if(isnull(dialogMsg)) {
			    if(pItems[i] >= 4 && pItems[i] <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 3) {
    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 19) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
				}
			} else {
			    if(pItems[i] >= 4 && pItems[i] <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 3) {
    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 19) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
                } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
				}
			}

			if(getItemID(playerid, i) == PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]]) {
			    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
			}
		}

		if(itemIndexExists(playerid, 21)) {
			format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
		}

        SetPVarInt(playerid, "CurrentItemPage", 1);
		ShowPlayerDialog(playerid, DIALOG_ITEMS, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "选择", "取消");
	} else {
		SendClientMessage(playerid, COLOR_GREY, "You currently do not possess any items and therefore cannot administrate your items.");
	}

	return 1;
}*/

COMMAND:jobhelp(playerid, params[]) {
    if(PlayerInfo[playerid][pJob] == 0) {
	    SendClientMessage(playerid, COLOR_GREY, "你现在是失业状态, 你可以试试去就业中心看看.");
	} else {
        ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, "帮助中心: 工作指令", GetHelpDialog(9, playerid), "关闭", "");
	}

	return 1;
}

COMMAND:househelp(playerid, params[]) {
    ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, "帮助中心: 房屋指令", GetHelpDialog(8), "关闭", "");
	return 1;
}

COMMAND:businesshelp(playerid, params[]) {
    ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, "帮助中心: 产业指令", GetHelpDialog(7), "关闭", "");
	return 1;
}

COMMAND:vehiclehelp(playerid, params[]) {
    ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, "帮助中心: 载具指令", GetHelpDialog(12), "关闭", "");
	return 1;
}

COMMAND:factionhelp(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 0) {
	    SendClientMessage(playerid, COLOR_GREY, "你没有任何组织.");
	} else {
   		ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, "帮助中心: 组织指令", GetHelpDialog(10, playerid), "关闭", "");
	}

	return 1;
}

COMMAND:taxihelp(playerid, params[]) {
    ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, "帮助中心: 出租车指令", GetHelpDialog(11), "关闭", "");
	return 1;
}

COMMAND:mechanichelp(playerid, params[]) {
    ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, "帮助中心: 汽修指令", GetHelpDialog(13), "关闭", "");
	return 1;
}

COMMAND:help(playerid, params[])
{
	ShowPlayerDialog(playerid, DIALOG_COMMANDS_HELP, DIALOG_STYLE_MSGBOX, "帮助中心: 常规指令", GetHelpDialog(5), "下一页", "关闭");
  	return 1;
}

COMMAND:changepass(playerid, params[]) {
	ShowPlayerDialog(playerid, DIALOG_CHANGEPASS, DIALOG_STYLE_PASSWORD, "{FF9900}修改密码", "请输入你现在的密码:", "提交", "取消");
	return 1;
}

COMMAND:door(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 1) {
		if(IsPlayerInRangeOfPoint(playerid, 3, 239.75999, 116.82080, 1002.07599)) {
		    new msg[62];
	        switch(LAPDDoor1State) {
				case 0: {
				    MoveDynamicObject(LAPDDoor1, 239.75999, 116.82080, 1002.06599, 0.005, 0.0, 0.0, 160.0);
				    format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
				   	ProxDetector(12, playerid, msg, COLOR_PINK);
				   	LAPDDoor1State = 1;
				}
				default: {
				    MoveDynamicObject(LAPDDoor1, 239.75999, 116.82080, 1002.07599, 0.005, 0.0, 0.0, 90.0);
	     			format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
	     			ProxDetector(12, playerid, msg, COLOR_PINK);
				    LAPDDoor1State = 0;
				}
			}
		} else if(IsPlayerInRangeOfPoint(playerid, 3, 253.03819, 108.33510, 1002.07300)) {
		    new msg[62];
	        switch(LAPDDoor2State) {
				case 0: {
				    MoveDynamicObject(LAPDDoor2, 253.03819, 108.33510, 1002.06300, 0.005, 0.00000, 0.00000, 160.00000);
				    format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
				   	ProxDetector(12, playerid, msg, COLOR_PINK);
				   	LAPDDoor2State = 1;
				}
				default: {
				    MoveDynamicObject(LAPDDoor2, 253.03819, 108.33510, 1002.07300, 0.005, 0.0, 0.0, 90.0);
	     			format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
	     			ProxDetector(12, playerid, msg, COLOR_PINK);
				    LAPDDoor2State = 0;
				}
			}
		} else if(IsPlayerInRangeOfPoint(playerid, 3, 272.03580, 107.10400, 1003.61499)) {
		    new msg[62];
	        switch(LAPDDoor3State) {
				case 0: {
				    MoveDynamicObject(LAPDDoor3, 272.03580, 107.10400, 1003.60499, 0.005, 0.00000, 0.00000, 160.00000);
				    format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
				   	ProxDetector(12, playerid, msg, COLOR_PINK);
				   	LAPDDoor3State = 1;
				}
				default: {
				    MoveDynamicObject(LAPDDoor3, 272.03580, 107.10400, 1003.61499, 0.005, 0.00000, 0.00000, 90.00000);
	     			format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
	     			ProxDetector(12, playerid, msg, COLOR_PINK);
				    LAPDDoor3State = 0;
				}
			}
		}
	} else if(PlayerInfo[playerid][pFaction] == 2) {
		if(IsPlayerInRangeOfPoint(playerid, 3, 1500.7516, -1541.3116, 1969.8427)) {
		    new msg[62];
			switch(HospitalDoor1Sate) {
				case 0: {
                    MoveDynamicObject(HospitalDoor1, 1500.7516 - 1.2, -1541.3116, 1969.8427, 0.50);
                    format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
				   	ProxDetector(12, playerid, msg, COLOR_PINK);
				   	HospitalDoor1Sate = 1;
				}
				default: {
				    MoveDynamicObject(HospitalDoor1, 1500.7516, -1541.3116, 1969.8427, 0.50);
                    format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
				   	ProxDetector(12, playerid, msg, COLOR_PINK);
				   	HospitalDoor1Sate = 0;
				}
			}
		} else if(IsPlayerInRangeOfPoint(playerid, 3, 1505.8879, -1545.5511, 1969.8398)) {
		    new msg[62];
			switch(HospitalDoor2Sate) {
				case 0: {
                    MoveDynamicObject(HospitalDoor2, 1505.8879, -1545.5511 + 1.2, 1969.8398, 0.50);
                    format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
				   	ProxDetector(12, playerid, msg, COLOR_PINK);
				   	HospitalDoor2Sate = 1;
				}
				default: {
				    MoveDynamicObject(HospitalDoor2, 1505.8879, -1545.5511, 1969.8398, 0.50);
                    format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
				   	ProxDetector(12, playerid, msg, COLOR_PINK);
				   	HospitalDoor2Sate = 0;
				}
			}
		} else if(IsPlayerInRangeOfPoint(playerid, 2.0,250.60000610,62.50000000,1002.59997559)) {
		    new msg[62];
		    switch(FDReceptionDoorState) {
		        case 0: {
				    MoveDynamicObject(FDdoor2, 250.60000610, 62.50000000-1.3, 1002.59997559, 0.50, 0.00000000, 0.00000000, 90.00000000);
					format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
			     	ProxDetector(12, playerid, msg, COLOR_PINK);
			     	FDReceptionDoorState = 1;
		     	}
				default: {
				    MoveDynamicObject(FDdoor2, 250.60000610, 62.50000000, 1002.59997559, 0.50, 0.00000000, 0.00000000, 90.00000000);
					format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
			     	ProxDetector(12, playerid, msg, COLOR_PINK);
                    FDReceptionDoorState = 0;
				}
			}
		} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 245.60000610,72.50000000,1002.59997559)) {
		    new msg[62];
		    switch(FDHallwayDoorState) {
		        case 0: {
				    MoveDynamicObject(FDdoor1, 245.60000610-1.3, 72.50000000, 1002.59997559, 0.50, 0.00000000, 0.00000000, 0.00000000);
				    format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
			     	ProxDetector(12, playerid, msg, COLOR_PINK);
			     	FDHallwayDoorState = 1;
				}
				default: {
				    MoveDynamicObject(FDdoor1, 245.60000610, 72.50000000, 1002.59997559, 0.50, 0.00000000, 0.00000000, 0.00000000);
					format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
			     	ProxDetector(12, playerid, msg, COLOR_PINK);
			     	FDHallwayDoorState = 0;
				}
			}
		} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 248.19999695,86.09999847,1002.59997559)) {
		    new msg[62];
		    switch(FDCellsDoorState) {
		        case 0: {
				    MoveDynamicObject(FDdoor3, 248.19999695, 86.09999847-1.3, 1002.59997559, 0.50, 0.00000000, 0.00000000, 90.00000000);
				    format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
			     	ProxDetector(12, playerid, msg, COLOR_PINK);
			     	FDCellsDoorState = 1;
				}
				default: {
				    MoveDynamicObject(FDdoor3, 248.19999695, 86.09999847, 1002.59997559, 0.50, 0.00000000, 0.00000000, 90.00000000);
					format(msg, sizeof(msg), "** %s 从口袋拿出遥控操作防盗门.", GetNameWithSpace(playerid, 1));
			     	ProxDetector(12, playerid, msg, COLOR_PINK);
			     	FDCellsDoorState = 0;
				}
			}
		}
	}

	return 1;
}
COMMAND:admins(playerid, params[])
{
    new check = 0,
		info[150];

	SendClientMessage(playerid, COLOR_LIGHTGREEN, "在线管理员:");
	foreach(new i : Player)
	{
	    if(PlayerInfo[i][pAdminlevel] > 0 && GetPVarInt(i, "AdminHide") == 0)
		{
            format(info, sizeof(info), "(级别: %i) %s (%s) (ID: %i) 执勤状态: %s", PlayerInfo[i][pAdminlevel], GetNameWithSpace(i), PlayerInfo[i][pForumName], i, GetPVarInt(i, "AdminDuty") == 1? ("执勤中") : ("未执勤"));
            SendClientMessage(playerid, GetPVarInt(i, "AdminDuty") == 1? COLOR_GREEN : COLOR_GREY, info);
            check++;
        }
	}
	if(check == 0) return SendClientMessage(playerid, COLOR_GREY, "目前没有管理员在线.");
	return 1;
}
ALTCOMMAND:testers->mods;
COMMAND:mods(playerid, params[])
{
    new check = 0,
		info[128];
	SendClientMessage(playerid, COLOR_LIGHTGREEN, "在线测试员:");
	foreach(new i : Player)
	{
	    if(PlayerInfo[i][pModLevel] > 0 && GetPVarInt(i, "ModHide") == 0)
		{
			format(info, sizeof(info), "(%s) %s (%s) (ID: %i) 执勤状态: %s", GetModRank(i), GetNameWithSpace(i), PlayerInfo[i][pForumName], i, GetPVarInt(i, "ModDuty") == 1? ("执勤中") : ("未执勤"));
            SendClientMessage(playerid, GetPVarInt(i, "ModDuty") == 1? COLOR_GREEN : COLOR_GREY, info);
            check++;
		}
	}
	if(check == 0) return SendClientMessage(playerid, COLOR_GREY, "目前没有测试员在线.");
	return 1;
}

COMMAND:acceptdeath(playerid, params[]) {
	if(GetPVarInt(playerid, "Death") != 1) return SendClientMessage(playerid, COLOR_GREY, "你没有受伤.");
	if(GetPVarInt(playerid, "Acceptdeath") != 1) return SendClientMessage(playerid, COLOR_GREY, "你需要等待30秒才能接受死亡.");
	new Float:X,
		Float:Y,
		Float:Z,
		msg[51];

	SetPVarInt(playerid, "Death", 0);
	GetPlayerPos(playerid, X, Y, Z);
	format(msg, sizeof(msg), "%s (ID: %i) 接受了死亡.", GetNameWithSpace(playerid, 1), playerid);
	foreach(new i : Player) {
	    if(IsPlayerInRangeOfPoint(i, 20, X, Y, Z)) {
	        SendClientMessage(i, COLOR_GREY, msg);
	    }
	}

	SetPVarInt(playerid, "Muted", 1);
	SetPlayerPosEx(playerid, 15, 1528.0073, -1568.3553, 15.3310, 0.0, 0, 0);
	
	sInfo[playerid][Misc] = 0;
	sInfo[playerid][Head] = 0;
	sInfo[playerid][Chest] = 0;
	sInfo[playerid][Crotch] = 0;
	sInfo[playerid][LArm] = 0;
	sInfo[playerid][RArm] = 0;
	sInfo[playerid][LLeg] = 0;
	sInfo[playerid][RLeg] = 0;
	PlayerInfo[playerid][pIsHospital] = 1;
	new Float:pos[4];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	GetPlayerFacingAngle(playerid, pos[3]);
	CreateRemains(TYPE_REMAINS_PERSON, GetPlayerSkin(playerid), 300, PlayerInfo[playerid][pAge], PlayerInfo[playerid][pName], pos[0], pos[1], pos[2], pos[3], GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
	Delete3DTextLabel(DeathReason[playerid]);
	AcceptDeathHospitalTimer[playerid] = SetTimerEx("AcceptDeathHospital", 30000, false, "d", playerid);
	return 1;
}

COMMAND:enter(playerid, params[])
{
    if(GetPVarInt(playerid, "Death") != 0) return SendClientMessage(playerid, COLOR_GREY, "你现在不能使用该指令.");
	if(IsPlayerInAnyVehicle(playerid) == 0) {
	    /* --- Hide previous TextDraws --- */

	    TextDrawHideForPlayer(playerid, TD_AD_HeadBox);
	    TextDrawHideForPlayer(playerid, TD_AD_BoxTwo);
	    TextDrawHideForPlayer(playerid, TD_AD_BoxThree);
	    TextDrawHideForPlayer(playerid, TD_AD_BoxOne);
	    TextDrawHideForPlayer(playerid, TD_AD_Seller);
		PlayerTextDrawHide(playerid, TD_AD_Price);
		PlayerTextDrawHide(playerid, TD_AD_CityZip);
		PlayerTextDrawHide(playerid, TD_AD_Headline);
		PlayerTextDrawHide(playerid, TD_AD_Taxes);
		PlayerTextDrawHide(playerid, TD_AD_PriceValue);
		PlayerTextDrawHide(playerid, TD_AD_TaxesValue);
		PlayerTextDrawHide(playerid, TD_AD_SellerValue);
		PlayerTextDrawHide(playerid, TD_AD_HousenumberStreet);

		/* --- Enter Businesses --- */

		new adminDuty = GetPVarInt(playerid, "AdminDuty");
		for(new b = 0; b != MAX_BUSINESSES; b++)
		{
  			if(IsValidDynamicCP(businessCP[b]) && IsPlayerInDynamicCP(playerid, businessCP[b]))
  			{
     			if(BusinessInfo[b][bLocked] == 0 || adminDuty != 0)
				 {
     			    if(strcmp(BusinessInfo[b][bOwner], PlayerInfo[playerid][pName]) != 0 && !isnull(BusinessInfo[b][bOwner]))
				 	{
     			        if(BusinessInfo[b][bFee] > 0 && adminDuty == 0)
					 	{
     			            if(PlayerInfo[playerid][pMoney] >= BusinessInfo[b][bFee])
						 	{
								GivePlayerMoneyEx(playerid, -BusinessInfo[b][bFee]);
								GiveBusinessMoney(b, BusinessInfo[b][bFee]);
								if(!isnull(BusinessInfo[b][bRadio]))
								{
				       				PlayAudioStreamForPlayer(playerid, BusinessInfo[b][bRadio]);
							    }
							    
							    SetPVarInt(playerid, "InBusiness", 1);
							    if(BusinessInfo[b][bInt]==62)
							    {
                                    SetPVarInt(playerid,"xb_furnituretype",TYPE_GTAFFITI);
                                    SetPVarInt(playerid,"xb_furnitureid",0);
                                    SetPVarInt(playerid,"xb_businessid",b);
                                    SetPVarInt(playerid, "MapInfoHide", 1);
		                            PlayerTextDrawHide(playerid, TD_Zone);
							        SetPlayerPosEx(playerid, 27,2296.3315, 1302.9165, 11.7676, 0, 0, b);
							        
							    }
  			                    else
  			                    {
		  						    SetPlayerPosEx(playerid, 5, businessData[BusinessInfo[b][bInt]][intX], businessData[BusinessInfo[b][bInt]][intY], businessData[BusinessInfo[b][bInt]][intZ], businessData[BusinessInfo[b][bInt]][intA], businessData[BusinessInfo[b][bInt]][intVal], b, 0);
                                    FreezePlayer(playerid);
                				    SetTimerEx("EntranceUnfreeze", 1500, false, "i", playerid);
                				}
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "你没有钱支付入场费...");
							}
     			        }
						else
					 	{
     			            if(!isnull(BusinessInfo[b][bRadio]))
						 	{
			       				PlayAudioStreamForPlayer(playerid, BusinessInfo[b][bRadio]);
						    }
                            SetPVarInt(playerid, "InBusiness", 1);
                            if(BusinessInfo[b][bInt]==62)
						    {
                                SetPVarInt(playerid,"xb_furnituretype",TYPE_GTAFFITI);
                                SetPVarInt(playerid,"xb_furnitureid",0);
                                SetPVarInt(playerid,"xb_businessid",b);
                                SetPVarInt(playerid, "MapInfoHide", 1);
                                PlayerTextDrawHide(playerid, TD_Zone);
							    SetPlayerPosEx(playerid, 27, 2296.3315, 1302.9165, 11.7676, 0, 0, b);
						
					        }
  			                else
  			                {
		  					    SetPlayerPosEx(playerid, 5, businessData[BusinessInfo[b][bInt]][intX], businessData[BusinessInfo[b][bInt]][intY], businessData[BusinessInfo[b][bInt]][intZ], businessData[BusinessInfo[b][bInt]][intA], businessData[BusinessInfo[b][bInt]][intVal], b, 0);
                                FreezePlayer(playerid);
                			    SetTimerEx("EntranceUnfreeze", 1500, false, "i", playerid);
                			}
						}
     			    }
					else
				 	{
                        if(!isnull(BusinessInfo[b][bRadio]))
						{
		       				PlayAudioStreamForPlayer(playerid, BusinessInfo[b][bRadio]);
					    }

					    SetPVarInt(playerid, "InBusiness", 1);
  						if(BusinessInfo[b][bInt]==62)
				        {
                            SetPVarInt(playerid,"xb_furnituretype",TYPE_GTAFFITI);
                            SetPVarInt(playerid,"xb_furnitureid",0);
                            SetPVarInt(playerid,"xb_businessid",b);
                            SetPVarInt(playerid, "MapInfoHide", 1);
                            PlayerTextDrawHide(playerid, TD_Zone);
					        SetPlayerPosEx(playerid, 27,2296.3315, 1302.9165, 11.7676, 0, 0, b);
					    }
  			            else
  			            {
		  				    SetPlayerPosEx(playerid, 5, businessData[BusinessInfo[b][bInt]][intX], businessData[BusinessInfo[b][bInt]][intY], businessData[BusinessInfo[b][bInt]][intZ], businessData[BusinessInfo[b][bInt]][intA], businessData[BusinessInfo[b][bInt]][intVal], b, 0);
                            FreezePlayer(playerid);
                		    SetTimerEx("EntranceUnfreeze", 1500, false, "i", playerid);
                		}
					}
			    }
				else
				{
				    GameTextForPlayer(playerid, "~r~Locked", 750, 4);
				}

				return 1;
	        }
		}
		for(new h = 0; h != MAX_HOUSES; h++)
		{
  			if(IsValidDynamicCP(houseCP[h]) && IsPlayerInDynamicCP(playerid, houseCP[h]))
			  {
     			if(HouseInfo[h][hLocked] == 0 || adminDuty != 0)
				 {
        			if(!isnull(HouseInfo[h][hRadio]))
					{
		       			PlayAudioStreamForPlayer(playerid, HouseInfo[h][hRadio]);
			    	}
			    	if(HouseInfo[h][hYellingAlarm]) PlayAudioStreamForPlayer(playerid, "http://fjdx.sc.chinaz.com/Files/DownLoad/sound1/201401/4031.mp3");
					GetPlayerFacingAngle(playerid, PlayerInfo[playerid][PeekingAngel]);
				    SetPVarInt(playerid, "InHouse", 1);
				    PlayerInfo[playerid][pInHouseID] = h;
					SetPlayerPosEx(playerid, 5, houseData[HouseInfo[h][hInt]][intX], houseData[HouseInfo[h][hInt]][intY], houseData[HouseInfo[h][hInt]][intZ], houseData[HouseInfo[h][hInt]][intA], houseData[HouseInfo[h][hInt]][intVal], h, 0);
                    FreezePlayer(playerid);
                	SetTimerEx("EntranceUnfreeze", 1500, false, "i", playerid);
					if(HouseInfo[h][hActivatedHalarm])
					{
					    SendClientMessage(playerid, COLOR_PINK, "(( 警报音效将开始播放 ))");
					    SendClientMessage(playerid, COLOR_LIGHTRED, "警告: 房屋警报已被激活. 你可以通过 /house alarm 将其关闭.");
					    PlayAudioStreamForPlayer(playerid, "http://fjdx.sc.chinaz.com/Files/DownLoad/sound1/201401/4031.mp3");
					    HouseInfo[h][hYellingAlarm] = true;
					    new message[70];
					    format(message, 70, "房屋警报:{FFFFFF} %i %s, Los Angeles, SA %i", HouseInfo[h][hHousenumber], HouseInfo[h][hStreet], HouseInfo[h][hZip]);
					    foreach(new i : Player)
						{
						    if(PlayerInfo[i][pFaction] == 1 || !strcmp(HouseInfo[h][hOwner], PlayerInfo[i][pName], true))
						    {
								SendClientMessage(i, COLOR_LIGHTRED, message);
							}
						}
					}
			   }
		   		else
				{
				    GameTextForPlayer(playerid, "~r~Locked", 750, 4);
				}

				return 1;
	        }
		}
        if(IsPlayerInRangeOfPoint(playerid,2.0, -376.9299,2242.3718,42.6185)) // trap house
    	{
    	    if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你不是组织成员不可以进入该建筑.");
    	    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Narcotics] == 1 && PlayerInfo[playerid][pRank] > FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] - 2)
    	    {
                FreezePlayer(playerid);
                SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	        	SetPlayerPos(playerid, 2187.9700,-1244.8140,1529.1060);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织ID不支持进入里面.");
			}
    	}
    	if(IsPlayerInRangeOfPoint(playerid,2.0, -1051.7054,1550.0031,33.4376)) // drug house 2
     	{
    	    if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你不是组织成员不可以进入该建筑.");
    	    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Narcotics] == 2 && PlayerInfo[playerid][pRank] > FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] - 2)
    	    {
    	        FreezePlayer(playerid);
                SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	        	SetPlayerPos(playerid, 2459.2907714844, -1767.1912841797, 1027.8020019531);
	     		SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, 0);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织ID不支持进入里面.");
			}
    	}
    	if(IsPlayerInRangeOfPoint(playerid,2.0, -2184.3328,710.4023,53.8906)) // ammo factory #1
     	{
     	    if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你不是组织成员不可以进入该建筑.");
     	    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Narcotics] != 0  && PlayerInfo[playerid][pRank] > FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] - 2)
     	    {
     	        FreezePlayer(playerid);
          		SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
     			SetPlayerPos(playerid, -2184.2329,713.0460,53.8969);
   			}
   			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织ID不支持进入里面.");
			}
    	}
    	if(IsPlayerInRangeOfPoint(playerid,2.0, -1469.6418,2615.5959,58.7879)) // weapon factory #1
     	{
     	    if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你不是组织成员不可以进入该建筑.");
     	    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Weapons] == 1  && PlayerInfo[playerid][pRank] > FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] - 2)
     	    {
     	        FreezePlayer(playerid);
          		SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
     			SetPlayerPos(playerid, 2263.4910,-1582.6284,1493.6000);
   			}
   			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织ID不支持进入里面.");
			}
    	}
    	if(IsPlayerInRangeOfPoint(playerid,2.0, 2266.4453,-1701.0996,13.6901)) // heavy weapons
     	{
    	    if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你不是组织成员不可以进入该建筑.");
    	    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Weapons] == 3  && PlayerInfo[playerid][pRank] > FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] - 2)
    	    {
    	        FreezePlayer(playerid);
                SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	        	SetPlayerPos(playerid, -937.3247,1423.2633,11.8640);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织ID不支持进入里面.");
			}
    	}
    	if(IsPlayerInRangeOfPoint(playerid,2.0, 2045.7609,-1908.0037,13.5469)) // insurance company
     	{
     	    FreezePlayer(playerid);
          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
     		SetPlayerPos(playerid, 1124.3864,-1413.0106,2001.0859);
    	}
    	if(IsPlayerInRangeOfPoint(playerid,2.0, 1990.7379,-1282.6858,23.9713)) // apartment glen park
     	{
     	    FreezePlayer(playerid);
          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
     		SetPlayerPos(playerid, 1002.8900,-988.4160,1001.4959);
    	}
		if(IsPlayerInRangeOfPoint(playerid,2.0, 1154.7292,-1440.1539,15.7969)) // hardware
     	{
     	    FreezePlayer(playerid);
          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
     		SetPlayerPos(playerid,2797.0095,2608.5698,10.8258);
    	}
    	if(IsPlayerInRangeOfPoint(playerid,2.0, 2177.2534,-1770.5592,13.5391)) // apartment idlewood
     	{
     	    FreezePlayer(playerid);
          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
     		SetPlayerPos(playerid, 1154.9581, -1039.8893, 1001.0800);
    	}
     	if(IsPlayerInRangeOfPoint(playerid,2.0, 1863.8026,-1597.2938,14.3062)) // apartment idlewood 2
     	{
     	    FreezePlayer(playerid);
          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
     		SetPlayerPos(playerid, 226.9434,1708.2749,601.0000);
    	}
    	
     	if(IsPlayerInRangeOfPoint(playerid,2.0, 257.8268,1424.3369,10.5930)) // DoC #1
     	{
     	    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 5)
     	    {
     			SetPlayerPos(playerid, 257.8385,1421.9237,10.5930);
   			}
    	}
     	if(IsPlayerInRangeOfPoint(playerid,2.0, 154.6967,1404.2869,10.5950)) // DoC #2
     	{
     	    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 5)
     	    {
     	        FreezePlayer(playerid);
          		SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
     			SetPlayerPos(playerid, 1811.9211,-1545.2626,5700.4287);
   			}
    	}
    	if(IsPlayerInRangeOfPoint(playerid,2.0, 174.4342,1365.4073,10.5859)) // DoC #3
     	{
     	    FreezePlayer(playerid);
          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
            SetPlayerPos(playerid, 1810.6146,-1515.8710,5700.4287);
    	}
    	if(IsPlayerInRangeOfPoint(playerid,2.0, 252.1557,1390.4894,11.1420)) // DoC #4
     	{
     	    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 5)
     	    {
     	        FreezePlayer(playerid);
          		SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
     			SetPlayerPos(playerid, 657.2668,-1580.1260,122.4225);
     			SetPlayerVirtualWorld(playerid, 1);
   			}
		}
    	if(IsPlayerInRangeOfPoint(playerid,2.0, 201.7772,1437.0233,10.5950)) // DoC #5
     	{
     	    FreezePlayer(playerid);
          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
            SetPlayerPos(playerid, 1262.8807,1734.5267,1001.5000);
    	}
    	if(IsPlayerInRangeOfPoint(playerid,2.0, 1262.7905,1685.8121,1001.5000)) // DoC #6
     	{
     	    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 5)
     	    {
     			SetPlayerPos(playerid, 1262.7556,1684.1167,1001.5000);
   			}
		}
		if(IsPlayerInRangeOfPoint(playerid,2.0, 249.7023,1437.3875,10.5890)) // DoC #7
     	{
     	    FreezePlayer(playerid);
          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
            SetPlayerPos(playerid, 1963.0540,1342.2721,1321.0879);
    	}
		if(IsPlayerInRangeOfPoint(playerid, 5, 1554.9194, -1675.5605, 16.1953)) { // LAPD
      		SetPlayerPosEx(playerid, 5, 246.375991, 109.245994, 1003.218750, 0, 10);
		} else if(IsPlayerInRangeOfPoint(playerid, 5, 1513.1852, -1569.4840, 14.6543)) { // All Saints General Hospital (Entrance)
		    SetPlayerPosEx(playerid, 5, 1498.7706, -1546.2332, 1970.8159, 0, 1);
        } else if(IsPlayerInRangeOfPoint(playerid, 5, 1507.8983, -1540.5138, 13.5474)) { // All Saints General Hospital (Backentrance)
		    SetPlayerPosEx(playerid, 5, 1524.1664, -1550.5471, 1970.7859, 0, 1);
  		} else if(IsPlayerInRangeOfPoint(playerid, 5, 1509.6234, -1557.9297, 30.7521)) { // All Saints General Hospital (Roof)
		    SetPlayerPosEx(playerid, 5, 1521.1638, -1551.7441, 1970.7859, 0, 1);
		} else if(IsPlayerInRangeOfPoint(playerid, 5, 1494.7041, -1510.0973, 14.1449)) { // LSFD
		    SetPlayerPosEx(playerid, 5, 246.783996, 63.900199, 1003.640625, 0, 6);
		} else if(IsPlayerInRangeOfPoint(playerid, 5, 1516.6587, -1496.5687, 27.6087)) { // LSFD ROOF
		    SetPlayerPosEx(playerid, 5, 246.4261, 85.8153, 1003.6406, 180.7166, 6);
		} else if(IsPlayerInRangeOfPoint(playerid, 5, 1525.2760, -1677.8524, 5.8906)) { // LAPD ARMOURY
  			SetPlayerPosEx(playerid, 5, 316.524993, -167.706985, 999.593750, 0.0, 6, MAX_BUSINESSES + 1);
		} else if(IsPlayerInRangeOfPoint(playerid, 5, 1317.8936, -1183.2419, 23.5981)) { // DMV ENTRANCE
		    SetPlayerPosEx(playerid, 5, 1494.3252, 1304.9429, 1093.2891, 0.0000, 3);
		} else if(IsPlayerInRangeOfPoint(playerid, 5, 1564.7014, -1665.3147, 28.3956)) { // LAPD ROOF ENTRANCE
		    SetPlayerPosEx(playerid, 5, 276.8218, 122.2773, 1004.6172, 271.9524, 10);
		} else if(IsPlayerInRangeOfPoint(playerid, 5, 1568.7339, -1690.9832, 5.8906)) { // LAPD GARAGE ENTRANCE
		    SetPlayerPosEx(playerid, 5, 214.6439, 120.8411, 999.0156, 0, 10);
		} else if(IsPlayerInRangeOfPoint(playerid, 5, 1616.0786, -1896.3529, 13.5489)) { // Rental Center
		    SetPlayerPosEx(playerid, 5, 1253.8342, -1811.2778, 1464.4860, 358.8478, 5);
		} else if(IsPlayerInRangeOfPoint(playerid, 5, 593.2187,-1249.9857,18.2146))
		{ // BANK`
		    SetPlayerPosEx(playerid, 5, 1412.9098, -1026.8887, 3423.6860, 0.0, 0, 2, 0);
          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, 1310.0868,-1367.3768,13.5310))
		{ // Employment Center
		    SetPlayerPosEx(playerid, 5, 1246.6943, -1791.7428, 1504.2805, 0, 3);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, 542.2992, -1292.1060, 17.2422))
		{ // DEALERSHIP GROTTI
  			SetPlayerPosEx(playerid, 6, -1951.2566, 266.9794, 45.0471, 0, 0, playerid + 1);
  			SetPVarInt(playerid, "DealershipLoc", 1);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, 2131.7964, -1150.2208, 24.1810))
		{ // DEALERSHIP JEFFERSON
		    SetPlayerPosEx(playerid, 6, -1951.2566, 266.9794, 45.0471, 0, 0, playerid + 1);
		    SetPVarInt(playerid, "DealershipLoc", 2);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, 648.2817, -1357.8223, 13.5734))
		{ // San Andreas Network
		    SetPlayerPosEx(playerid, 5, 366.7081, 162.3704, 1014.1875, 89.8573, 3, 0);
		}
	} else {
	    if(IsPlayerInRangeOfPoint(playerid, 5, 1041.3319, -1027.6871, 32.1016) && IsPlayerInAnyVehicle(playerid)) {
	        new vehicle = GetPlayerVehicleID(playerid);
		    if(vehicle == GetPVarInt(playerid, "PrivateCar") && VehicleInfo[vehicle][vRented] == 0) {
		        if(IsVehicleModable(vehicle)) {
					if(GetPlayerVehicleSeat(playerid) == 0) {
	            		SetPlayerPosEx(playerid, 3, 6.5478, -20.8039, 1052.5635, 0.5193, 1, playerid + 1);
					} else {
						SendClientMessage(playerid, COLOR_GREY, "你需要在驾驶位才能进入改装店.");
					}
				} else {
					SendClientMessage(playerid, COLOR_GREY, "暂时没有车辆零部件可适配该载具.");
				}
			} else {
				SendClientMessage(playerid, COLOR_GREY, "你只能改装你的私人载具, 努力买一台吧.");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, 2073.9824, -1831.3842, 14.5469))
		{
		    if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0)
			{
				new vehicle = GetPlayerVehicleID(playerid),
					Float:health,
					price;

				GetVehicleHealth(vehicle, health);
				price = (2000 - floatround(health) > 400) ? 2000 - floatround(health) : 400;
				if(PlayerInfo[playerid][pMoney] >= price || PlayerInfo[playerid][pDonateRank] > 1 || PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2)
				{
				    SetPlayerPosEx(playerid, 8, -720.7855, 2322.8428, 4998.2935, 359.7747, 1, playerid + 1);
				    SetPVarInt(playerid, "PayNSpray", 1);
				    if(PlayerInfo[playerid][pDonateRank] > 1 || PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2)
					{
					    SetPVarInt(playerid, "PayNSprayPrice", price);
					    SendClientMessage(playerid, COLOR_GREY, "此次维修免费!");
					}
					else
					{
	   				 	SetPVarInt(playerid, "PayNSprayPrice", price);
				    	GivePlayerMoneyEx(playerid, -price);
					}
				    
				}
				else
				{
				    new msg[115];
				    format(msg, sizeof(msg), "你没有足够的钱支付维修费用 (价格: $%i).", price);
				    SendClientMessage(playerid, COLOR_GREY, msg);
				}
		    }
			else
		 	{
				SendClientMessage(playerid, COLOR_GREY, "你需要在主驾驶操作.");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, 719.6918, -466.6411, 17.3437))
		{
		    if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0)
			{
				new vehicle = GetPlayerVehicleID(playerid),
					Float:health,
					price;

				GetVehicleHealth(vehicle, health);
				price = (2000 - floatround(health) > 400) ? 2000 - floatround(health) : 400;
				if(PlayerInfo[playerid][pMoney] >= price || PlayerInfo[playerid][pDonateRank] > 1 || PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2)
				{
				    SetPlayerPosEx(playerid, 8, -720.7855, 2322.8428, 4998.2935, 359.7747, 1, playerid + 1);
				    SetPVarInt(playerid, "PayNSpray", 2);
			    	if(PlayerInfo[playerid][pDonateRank] > 1 || PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2)
					{
					    SetPVarInt(playerid, "PayNSprayPrice", price);
					    SendClientMessage(playerid, COLOR_GREY, "此次维修免费.");
					}
					else
					{
	   				 	SetPVarInt(playerid, "PayNSprayPrice", price);
				    	GivePlayerMoneyEx(playerid, -price);
					}
				}
				else
				{
				    new msg[115];
				    format(msg, sizeof(msg), "你没有足够的钱支付维修费用 (价格: $%i).", price);
				    SendClientMessage(playerid, COLOR_GREY, msg);
				}
		    }
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "你需要在主驾驶操作.");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, 1025.0676, -1031.7937, 32.9556))
		{
		    if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0)
			{
				new vehicle = GetPlayerVehicleID(playerid),
					Float:health,
					price;

				GetVehicleHealth(vehicle, health);
				price = (2000 - floatround(health) > 400) ? 2000 - floatround(health) : 400;
				if(PlayerInfo[playerid][pMoney] >= price || PlayerInfo[playerid][pDonateRank] > 1 || PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2)
				{
				    SetPlayerPosEx(playerid, 8, -720.7855, 2322.8428, 4998.2935, 359.7747, 1, playerid + 1);
				    SetPVarInt(playerid, "PayNSpray", 3);
			    	if(PlayerInfo[playerid][pDonateRank] > 1 || PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2)
					{
					    SetPVarInt(playerid, "PayNSprayPrice", price);
					    SendClientMessage(playerid, COLOR_GREY, "此次维修免费.");
					}
					else
					{
	   				 	SetPVarInt(playerid, "PayNSprayPrice", price);
				    	GivePlayerMoneyEx(playerid, -price);
					}
				}
				else
				{
				    new msg[115];
				    format(msg, sizeof(msg), "你没有足够的钱支付维修费用 (价格: $%i).", price);
				    SendClientMessage(playerid, COLOR_GREY, msg);
				}
		    }
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "你需要在主驾驶操作.");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, 488.4973, -1730.9447, 10.8725))
		{
		    if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0)
			{
				new vehicle = GetPlayerVehicleID(playerid),
					Float:health,
					price;

				GetVehicleHealth(vehicle, health);
				price = (2000 - floatround(health) > 400) ? 2000 - floatround(health) : 400;
    			if(PlayerInfo[playerid][pMoney] >= price || PlayerInfo[playerid][pDonateRank] > 1 || PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2)
				{
				    SetPlayerPosEx(playerid, 8, -720.7855, 2322.8428, 4998.2935, 359.7747, 1, playerid + 1);
				    SetPVarInt(playerid, "PayNSpray", 4);
   	    			if(PlayerInfo[playerid][pDonateRank] > 1 || PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2)
					{
					    SetPVarInt(playerid, "PayNSprayPrice", price);
					    SendClientMessage(playerid, COLOR_GREY, "此次维修免费.");
					}
					else
					{
	   				 	SetPVarInt(playerid, "PayNSprayPrice", price);
				    	GivePlayerMoneyEx(playerid, -price);
					}
				}
				else
				{
				    new msg[115];
				    format(msg, sizeof(msg), "你没有足够的钱支付维修费用 (价格: $%i).", price);
				    SendClientMessage(playerid, COLOR_GREY, msg);
				}
		    }
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "你需要在主驾驶操作.");
			}
		}
		if(GetPVarInt(playerid, "Handcuffed") == 0)
		{
			if(GetPVarInt(playerid, "Calling") == -1)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			}
			else
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			}
		}
		else
		{
  			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
		}
	}

	return 1;
}

COMMAND:exit(playerid, params[])
{
	if(GetPVarInt(playerid, "Death") != 0) return SendClientMessage(playerid, COLOR_GREY, "你没有权限使用该指令.");
	new vw = GetPlayerVirtualWorld(playerid);
	if(IsPlayerInRangeOfPoint(playerid,2.0, 2187.9700,-1244.8140,1529.1060)) // trap house
	{
		SetPlayerPos(playerid, -376.9299,2242.3718,42.6185);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
   	}
   	/*if(IsPlayerInRangeOfPoint(playerid,2.0, 2169.461181,1618.798339,999.976562)) // mafia warehouse
	{
		SetPlayerPos(playerid, 2736.0554,-2550.7744,13.6459);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		CheckpointID[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}*/
	if(IsPlayerInRangeOfPoint(playerid,2.0, -937.3247,1423.2633,11.8640)) // heavy weapons
	{
		SetPlayerPos(playerid, 2266.4453,-1701.0996,13.6901);
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0, 1811.9211,-1545.2626,5700.4287)) // DoC #27
	{
 		if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 5)
   		{
  			SetPlayerPos(playerid, 154.6967,1404.2869,10.5950);
    	}
  	}
	if(IsPlayerInRangeOfPoint(playerid,2.0, 257.8385,1421.9237,10.5930)) // DoC #1
	{
		SetPlayerPos(playerid, 257.8268,1424.3369,10.5930); 
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0, 1124.3864,-1413.0106,2001.0859)) // insurance company
	{
		SetPlayerPos(playerid, 2045.7609,-1908.0037,13.5469);
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0, 1002.8900,-988.4160,1001.4959)) // apartment glen park
	{
		SetPlayerPos(playerid, 1990.7379,-1282.6858,23.9713);
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0, 1154.9581,-1039.8893,1001.0800)) // apartment idlewood
	{
		SetPlayerPos(playerid, 2177.2534,-1770.5592,13.5391);
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0, 226.9434,1708.2749,601.0000)) // apartment idlewood 2
	{
		SetPlayerPos(playerid, 1863.8026,-1597.2938,14.3062);
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0, 2263.4910,-1582.6284,1493.6000)) // weapon factory #1
	{
		SetPlayerPos(playerid, -1469.6418,2615.5959,58.7879);
   	}
   	if(IsPlayerInRangeOfPoint(playerid,2.0, -2184.2329,713.0460,53.8969)) // weapon factory #1
	{
		SetPlayerPos(playerid,-2184.3328,710.4023,53.8906);
   	}
   	if(IsPlayerInRangeOfPoint(playerid,2.0, 2459.2907714844, -1767.1912841797, 1027.8020019531)) // drug house 2
   	{
   		SetPlayerPos(playerid, -1051.7054,1550.0031,33.4376);
        SetPlayerInterior(playerid, 0);
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0, 1810.6146,-1515.8710,5700.4287)) // DoC #1
	{
 		SetPlayerPos(playerid, 174.4342,1365.4073,10.5859); 
 	}
 	if(IsPlayerInRangeOfPoint(playerid,2.0, 657.2668,-1580.1260,122.4225)) // DoC #4
 	{
		SetPlayerPos(playerid, 252.1557,1390.4894,11.1420);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0, 2797.0095,2608.5698,10.8258)) // hardware
	{
	 	FreezePlayer(playerid);
		SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
		SetPlayerPos(playerid, 1154.7292,-1440.1539,15.7969);
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0, 1262.8807,1734.5267,1001.5000)) // DoC #5
	{
 		SetPlayerPos(playerid, 201.7772,1437.0233,10.5950);
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0, 1262.7556,1684.1167,1001.5000)) // DoC #6
	{
		SetPlayerPos(playerid, 1262.7905,1685.8121,1001.5000);
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0, 1963.0540,1342.2721,1321.0879)) // DoC #7
	{
 		SetPlayerPos(playerid, 249.7023,1437.3875,10.5890); 
	}
	if(IsPlayerInRangeOfPoint(playerid, 5, 246.5033, 109.0539, 1003.2188)) { // LAPD
  		SetPlayerPosEx(playerid, 5, 1552.9990, -1675.4679, 16.1953);
    } else if(IsPlayerInRangeOfPoint(playerid, 5, 1498.7706, -1546.2332, 1970.8159)) { // All Saints General Hospital (Entrance)
	    SetPlayerPosEx(playerid, 5, 1513.1852, -1569.4840, 14.6543);
    } else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1524.1664, -1550.5471, 1970.7859)) { // All Saints General Hospital (Backentrance)
	    SetPlayerPosEx(playerid, 5, 1507.8983, -1540.5138, 13.5474);
  	} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1521.1638, -1551.7441, 1970.7859)) { // All Saints General Hospital (Roof)
	    SetPlayerPosEx(playerid, 5, 1509.6234, -1557.9297, 30.7521);
	} else if(IsPlayerInRangeOfPoint(playerid, 5, 246.6919,63.8291,1003.6406)) { // LSFD
	    SetPlayerPosEx(playerid, 5, 1494.7041, -1510.0973, 14.1449, 79.3192);
	} else if(IsPlayerInRangeOfPoint(playerid, 5, 246.4498, 87.3300, 1003.6406)) { // LSFD ROOF
	    SetPlayerPosEx(playerid, 5, 1516.6587, -1496.5687, 27.6087, 90.2133);
	} else if(IsPlayerInRangeOfPoint(playerid, 5, 316.524993, -167.706985, 999.593750)) { // LAPD ARMOURY
  		SetPlayerPosEx(playerid, 5, 1525.2760, -1677.8524, 5.8906);
	} else if(IsPlayerInRangeOfPoint(playerid, 5, 1494.3252, 1304.9429, 1093.2891)) { // DMV
  		SetPlayerPosEx(playerid, 5, 1317.8936, -1183.2419, 23.5981);
	} else if(IsPlayerInRangeOfPoint(playerid, 5, 274.6331, 122.0646, 1004.6172)) { // LAPD ROOF
  		SetPlayerPosEx(playerid, 5, 1564.7014, -1665.3147, 28.3956);
	} else if(IsPlayerInRangeOfPoint(playerid, 5, 214.6439, 120.8411, 999.0156)) { // LAPD CELLS
  		SetPlayerPosEx(playerid, 5, 1568.7339, -1690.9832, 5.8906);
	} else if(IsPlayerInRangeOfPoint(playerid, 5, 1253.8276, -1811.0732, 1464.4860)) { // Rental Center
  		SetPlayerPosEx(playerid, 5, 1616.0786, -1896.3529, 13.5489);
	} else if(IsPlayerInRangeOfPoint(playerid, 5, 1412.9098, -1026.8887, 3423.6860)) { // BANK
	    SetPlayerPosEx(playerid, 5, 593.2187, -1249.9857, 18.2146);
	} else if(IsPlayerInRangeOfPoint(playerid, 5, 1246.6943, -1791.7428, 1504.2805)) { // Employment Center
	    SetPlayerPosEx(playerid, 5, 1310.0868,-1367.3768,13.5310);
	} else if(IsPlayerInRangeOfPoint(playerid, 5, 366.7081, 162.3704, 1014.1875)) { // San Andreas Network
		    SetPlayerPosEx(playerid, 5, 646.0062, -1357.6025, 13.5718, 88.0386);
	}
	else if(GetPVarInt(playerid, "InHouse") != 0 && IsPlayerInRangeOfPoint(playerid, 5, houseData[HouseInfo[vw][hInt]][intX], houseData[HouseInfo[vw][hInt]][intY], houseData[HouseInfo[vw][hInt]][intZ])) 
	{
		if(HouseInfo[vw][hLocked] == 0 || GetPVarInt(playerid, "AdminDuty") != 0)
		{
 			if(!isnull(HouseInfo[vw][hRadio]))
			{
	            StopAudioStreamForPlayer(playerid);
	        }
	        if(HouseInfo[vw][hYellingAlarm]) StopAudioStreamForPlayer(playerid);
            PlayerInfo[playerid][pInHouseID] = -1;
	        SetPVarInt(playerid, "InHouse", 0);
	        SetPlayerPosEx(playerid, 5, HouseInfo[vw][hX], HouseInfo[vw][hY], HouseInfo[vw][hZ], 0.0, 0, 0, 0);
	        FreezePlayer(playerid);
         	SetTimerEx("EntranceUnfreeze", 1500, false, "i", playerid);
		}
		else
		{
		    GameTextForPlayer(playerid, "~r~Locked", 750, 6);
		}
	}
	else if(GetPVarInt(playerid, "InBusiness") != 0 && IsPlayerInRangeOfPoint(playerid, 5, businessData[BusinessInfo[vw][bInt]][intX], businessData[BusinessInfo[vw][bInt]][intY], businessData[BusinessInfo[vw][bInt]][intZ]))
	{
	    if(BusinessInfo[vw][bLocked] == 0 || GetPVarInt(playerid, "AdminDuty") != 0)
		{
	        if(!isnull(BusinessInfo[vw][bRadio])) {
	            StopAudioStreamForPlayer(playerid);
	        }

	        SetPVarInt(playerid, "InBusiness", 0);
	        SetPlayerPosEx(playerid, 5, BusinessInfo[vw][bX], BusinessInfo[vw][bY], BusinessInfo[vw][bZ], 0.0, 0, 0, 0);
	        FreezePlayer(playerid);
         	SetTimerEx("EntranceUnfreeze",4000, false, "i", playerid);
		}
		else
		{
		    GameTextForPlayer(playerid, "~r~Locked", 750, 6);
		}
	}

	return 1;
}

COMMAND:trainticket(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 3, -1972.4020, 117.3223, 27.6940) && !IsPlayerInRangeOfPoint(playerid, 3, 1436.7983, 2619.9780, 11.3926) &&
 	   !IsPlayerInRangeOfPoint(playerid, 3, 2857.1873, 1267.0105, 11.3906) && !IsPlayerInRangeOfPoint(playerid, 3, 2857.0017, 1314.5372, 11.3906) &&
 	   !IsPlayerInRangeOfPoint(playerid, 3, 1746.9236, -1943.7249, 13.5692) && !IsPlayerInRangeOfPoint(playerid, 3, 1756.9825, -1943.8870, 13.5686)) {
		SendClientMessage(playerid, COLOR_GREY, "你无法在这购买火车票.");
    }
	else
	{
		if(PlayerInfo[playerid][pMoney] >= 25)
		{
			GivePlayerMoneyEx(playerid, -25);
			PlayerInfo[playerid][pTrainticket] = gettime();
			SendClientMessage(playerid, COLOR_GREY, "你购买了一张火车票, 有效期为: 24个小时.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "你没有足够的钱去买火车票.");
		}
	}
	return 1;
}

COMMAND:allowkf(playerid, params[])
{
	new target,
	    tip[128];
	if(GetPVarInt(playerid, "Death") == 1) return 1;
	if(sscanf(params, "i", target)) return SendClientMessage(playerid, COLOR_GREY, "用法: /allowkf [玩家ID]");
	if(!IsPlayerConnected(target))return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器)");
	format(tip,sizeof tip,"[!] {FFFFFF} 你设置 [%s](ID: %i) 可以对你进行 “拳头致死”", PlayerInfo[target][pName], target);
	SendClientMessage(playerid,COLOR_LIGHTRED,tip);
	format(tip,sizeof tip,"[!] {FFFFFF} 你现在可以对 [%s](ID: %i) 进行 “拳头致死”", PlayerInfo[playerid][pName], playerid);
	SendClientMessage(target,COLOR_LIGHTRED,tip);
	allowkf[playerid] = target;
	return 1;
}

COMMAND:showcons(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0)
	{
		switch(GetPVarInt(playerid, "Showcons"))
		{
			case 0:
			{
	  			SetPVarInt(playerid, "Showcons", 1);
		        SendClientMessage(playerid, COLOR_WHITE, "连接信息开启");
	     	}
		    case 1:
			{
	     		SetPVarInt(playerid, "Showcons", 0);
		        SendClientMessage(playerid, COLOR_WHITE, "连接信息关闭.");
	       	}
	  	}
   }
   else
   {
        SendClientMessage(playerid, COLOR_GREY, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
   }
   return 1;
}

COMMAND:takecall(playerid, params[]) {
	new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /takecall [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你需要在你的车内.");
 	new vehicle = GetPlayerVehicleID(playerid),
 	    model = GetVehicleModel(vehicle);
 	    
 	if(model == 420 || model == 438) {
 	    if(GetPVarInt(user, "TaxiCall") == 0) return SendClientMessage(playerid, COLOR_GREY, "对方没有发送请求.");
 	    if(vehicle != GetPVarInt(playerid, "PrivateCar")) return SendClientMessage(playerid, COLOR_GREY, "你需要在你自己的Taxi或者Cabbie内才能使用.");
        new msg[105];
		SetPVarInt(user, "TaxiCall", 0);
       	SendClientMessage(user, COLOR_WHITE, "出租车司机接受了你的服务请求, 请在原地等待.");
       	format(msg, sizeof(msg), "你接受了 %s 的服务请求, 对方正在原地等待.", GetNameWithSpace(user));
       	SendClientMessage(playerid, COLOR_WHITE, msg);
 	} else if(model == 525) {
 		if(GetPVarInt(user, "MechanicCall") == 0) return SendClientMessage(playerid, COLOR_GREY, "对方没有发送请求.");
        if(vehicle != GetPVarInt(playerid, "PrivateCar")) return SendClientMessage(playerid, COLOR_GREY, "你需要在你的Towtruck内.");
		new msg[105];
		SetPVarInt(user, "MechanicCall", 0);
       	SendClientMessage(user, COLOR_WHITE, "你的请求已被汽修工接受, 请在原地等待.");
       	format(msg, sizeof(msg), "你接受了 %s 的请求, 对方正在原地等待.", GetNameWithSpace(user));
       	SendClientMessage(playerid, COLOR_WHITE, msg);
 	} else {
 	    SendClientMessage(playerid, COLOR_GREY, "你需要在车内才能接受.");
 	}
	
	return 1;
}

/*COMMAND:takecall(playerid, params[]) {
	if(GetPVarInt(playerid, "takecall") != 0) {
		new Float:X,
		    Float:Y,
		    Float:Z,
			userID = GetPVarInt(playerid, "takecall");

		if(IsPlayerConnected(userID) && GetPVarInt(userID, "taxiRequest") != 0) {
		    new data[250],
				var[150];

			GetPlayerPos(userID, X, Y, Z);
			SetPVarInt(userID, "taxiRequest", 0);
			SetPVarInt(userID, "taxiDriver", 0);
			GetPVarString(userID, "taxiLocation", var, sizeof(var));
			SetPlayerRaceCheckpoint(playerid, 2, X, Y, Z - 0.5, 0, 0, 0, 4);
			TextDrawHideForPlayer(playerid, TD_T_Box);
		    TextDrawHideForPlayer(playerid, TD_T_Headline);
		    TextDrawHideForPlayer(playerid, TD_T_HeadBox);
		    TextDrawHideForPlayer(playerid, TD_T_Info);
		    TextDrawHideForPlayer(playerid, TD_T_Instruction);
		    SendClientMessage(playerid, COLOR_LIGHTGREEN, "A marker has been set in your navigation at the current location of your client.");
		    format(data, sizeof(data), "Client Data: Phone Number: [{88aa62}%i{FFFFFF}], Location: [{88aa62}%s{FFFFFF}].", GetPVarInt(playerid, "takecallNumber"), var);
		    SendClientMessage(playerid, COLOR_WHITE, data);
		    SetPVarInt(playerid, "takecall", 0);
			SetPVarInt(playerid, "takecallNumber", 0);
		} else {
			SetPVarInt(playerid, "takecall", 0);
			SetPVarInt(playerid, "takecallNumber", 0);
			TextDrawHideForPlayer(playerid, TD_T_Box);
		    TextDrawHideForPlayer(playerid, TD_T_Headline);
		    TextDrawHideForPlayer(playerid, TD_T_HeadBox);
		    TextDrawHideForPlayer(playerid, TD_T_Info);
		    TextDrawHideForPlayer(playerid, TD_T_Instruction);
			SendClientMessage(playerid, COLOR_GREY, "This client does no longer request your transportation service.");
		}
	} else {
		SendClientMessage(playerid, COLOR_GREY, "There is currently noone requesting your transportation service.");
	}

	return 1;
}*/

/*COMMAND:denycall(playerid, params[]) {
    if(GetPVarInt(playerid, "takecall") != 0) {
        new Float:X,
	        Float:Y,
	        Float:Z,
	        userID = GetPVarInt(playerid, "takecall"),
			Float:distance,
			taxiDriverID = -1,
			vehicle,
			model;

		GetPlayerPos(userID, X, Y, Z);
		foreach(new i : Player) {
			if(Paused[i] == 0 && IsPlayerInAnyVehicle(i) && playerid != i && PlayerInfo[i][pTaxiBusy] == 0) {
				vehicle = GetPlayerVehicleID(i);
				model = GetVehicleModel(vehicle);
				if((model == 420 || model == 438) && !isnull(VehicleInfo[vehicle][vOwner]) && strcmp(VehicleInfo[vehicle][vOwner], PlayerInfo[i][pName]) == 0) {
               		if(taxiDriverID == -1 || GetPlayerDistanceFromPoint(i, X, Y, Z) < distance) {
	                    taxiDriverID = i;
	                    distance = GetPlayerDistanceFromPoint(i, X, Y, Z);
					}
				}
			}
		}

		if(taxiDriverID != -1) {
		    TextDrawShowForPlayer(taxiDriverID, TD_T_Box);
		    TextDrawShowForPlayer(taxiDriverID, TD_T_Headline);
		    TextDrawShowForPlayer(taxiDriverID, TD_T_HeadBox);
		    TextDrawShowForPlayer(taxiDriverID, TD_T_Info);
		    TextDrawShowForPlayer(taxiDriverID, TD_T_Instruction);
		    SetPVarInt(taxiDriverID, "takecall", userID);
		    SetPVarInt(taxiDriverID, "takecallNumber", GetPVarInt(playerid, "takecallNumber"));
		} else {
		    SetPVarInt(userID, "taxiRequest", 0);
			SetPVarInt(userID, "taxiDriver", 0);
        	SendClientMessage(userID, COLOR_DARKYELLOW, "[SMS] Taxi Association (544): Unfortunately, we were not able to dispatch any taxi driver to your location. Try again later.");
		}

        SetPVarInt(playerid, "takecall", 0);
		SetPVarInt(playerid, "takecallNumber", 0);
		TextDrawHideForPlayer(playerid, TD_T_Box);
	    TextDrawHideForPlayer(playerid, TD_T_Headline);
	    TextDrawHideForPlayer(playerid, TD_T_HeadBox);
	    TextDrawHideForPlayer(playerid, TD_T_Info);
	    TextDrawHideForPlayer(playerid, TD_T_Instruction);
    } else {
        SendClientMessage(playerid, COLOR_GREY, "There is currently noone requesting your transportation service.");
    }

    return 1;
}*/

COMMAND:taxifare(playerid, params[]) {
	new fare;
	if(sscanf(params, "i", fare)) return SendClientMessage(playerid, COLOR_GREY, "用法: /setfare [fare]");
	if(fare <= 0 || fare > 50) return SendClientMessage(playerid, COLOR_GREY, "价格需要在1-50之间.");
	if(IsPlayerInAnyVehicle(playerid)) {
		new vehicle = GetPlayerVehicleID(playerid),
		    model = GetVehicleModel(vehicle);

		if((model == 420 || model == 438) && !isnull(VehicleInfo[vehicle][vOwner]) && strcmp(VehicleInfo[vehicle][vOwner], PlayerInfo[playerid][pName]) == 0) {
			if(VehicleInfo[vehicle][vTM] != 0) {
				new meMsg[100],
					doMsg[90];

				SetPVarInt(playerid, "taxiFare", fare);
			    format(meMsg, sizeof(meMsg), "** %s 伸手操作计价表并且更改价格.", GetNameWithSpace(playerid, 1));
				format(doMsg, sizeof(doMsg), "** 现在收费: $%i / 每10秒. (( %s ))", fare, GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, meMsg, COLOR_PINK);
			    ProxDetector(12, playerid, doMsg, COLOR_PINK);

				if(VehicleInfo[vehicle][vTM] != 0) {
				    new fareStr[10];
					format(fareStr, sizeof(fareStr), "$%i", fare);
				    foreach(new i : Player) {
						if(vehicle == GetPlayerVehicleID(i)) {
							PlayerTextDrawSetString(i, TD_C_FareValue, fareStr);
						}
				    }
				}
			} else {
				SendClientMessage(playerid, COLOR_GREY, "你需要启动计价器, /taximeter.");
			}
		} else {
		    SendClientMessage(playerid, COLOR_GREY, "你需要在你的出租车内.");
		}
	} else {
	    SendClientMessage(playerid, COLOR_GREY, "你需要在你的出租车内..");
	}

	return 1;
}

COMMAND:taximeter(playerid, params[]) {
	if(IsPlayerInAnyVehicle(playerid)) {
		new vehicle = GetPlayerVehicleID(playerid),
		    model = GetVehicleModel(vehicle);

		if((model == 420 || model == 438) && !isnull(VehicleInfo[vehicle][vOwner]) && strcmp(VehicleInfo[vehicle][vOwner], PlayerInfo[playerid][pName]) == 0) {
			switch(VehicleInfo[vehicle][vTM]) {
				case 0: {
				    new meMsg[90],
						doMsg[80],
						fareStr[10];

				    if(GetPVarInt(playerid, "taxiFare") == 0) {
				        new fare;
				        if(sscanf(params, "i", fare)) return SendClientMessage(playerid, COLOR_GREY, "用法: /taximeter [fare]");
				        if(fare <= 0 || fare > 50) return SendClientMessage(playerid, COLOR_GREY, "价格需要在1-50之间.");
				        format(meMsg, sizeof(meMsg), "** %s 伸出手打开出租车计价器.", GetNameWithSpace(playerid, 1));
						format(doMsg, sizeof(doMsg), "** 当前收费: $%i / 每10秒. (( %s ))", fare, GetNameWithSpace(playerid, 1));
						SetPVarInt(playerid, "taxiFare", fare);
					} else {
					    format(meMsg, sizeof(meMsg), "** %s 伸出手打开出租车计价器.", GetNameWithSpace(playerid, 1));
                        format(doMsg, sizeof(doMsg), "** 当前收费: $%i / 每10秒. (( %s ))", GetPVarInt(playerid, "taxiFare"), GetNameWithSpace(playerid, 1));
					}

				    VehicleInfo[vehicle][vTM] = 1;
				    VehicleInfo[vehicle][vTMPayment] = 0;
					VehicleInfo[vehicle][vTMTime] = 0;
					VehicleInfo[vehicle][vTMCounter] = 0;
				    ProxDetector(12, playerid, meMsg, COLOR_PINK);
					ProxDetector(12, playerid, doMsg, COLOR_PINK, 0);
					format(fareStr, sizeof(fareStr), "$%i", GetPVarInt(playerid, "taxiFare"));

				    foreach(new i : Player) {
						if(GetPlayerVehicleID(i) == vehicle) {
							TextDrawShowForPlayer(i, TD_C_Box);
							TextDrawShowForPlayer(i, TD_C_Headline);
							TextDrawShowForPlayer(i, TD_C_Fare);
							TextDrawShowForPlayer(i, TD_C_Time);
							TextDrawShowForPlayer(i, TD_C_Payment);
							PlayerTextDrawSetString(i, TD_C_TimeValue, "0:00");
							PlayerTextDrawSetString(i, TD_C_PaymentValue, "$0");
							PlayerTextDrawSetString(i, TD_C_FareValue, fareStr);
                            PlayerTextDrawShow(i, TD_C_TimeValue);
                            PlayerTextDrawShow(i, TD_C_PaymentValue);
                            PlayerTextDrawShow(i, TD_C_FareValue);
						}
					}
				}
				default: {
				    new meMsg[90];
					format(meMsg, sizeof(meMsg), "** %s 伸出手关闭出租车计价器.", GetNameWithSpace(playerid, 1));
					VehicleInfo[vehicle][vTM] = 0;
					ProxDetector(12, playerid, meMsg, COLOR_PINK, 0);

					foreach(new i : Player) {
						if(GetPlayerVehicleID(i) == vehicle) {
						    TextDrawHideForPlayer(i, TD_C_Box);
							TextDrawHideForPlayer(i, TD_C_Headline);
							TextDrawHideForPlayer(i, TD_C_Fare);
							TextDrawHideForPlayer(i, TD_C_Time);
							TextDrawHideForPlayer(i, TD_C_Payment);
							PlayerTextDrawHide(i, TD_C_TimeValue);
                            PlayerTextDrawHide(i, TD_C_PaymentValue);
                            PlayerTextDrawHide(i, TD_C_FareValue);
						}
					}
				}
			}
		} else {
		    SendClientMessage(playerid, COLOR_GREY, "你需要在你的车内.");
		}
	} else {
	    SendClientMessage(playerid, COLOR_GREY, "你需要在你的车内.");
	}

	return 1;
}

COMMAND:resetmeter(playerid, params[]) {
    if(IsPlayerInAnyVehicle(playerid)) {
		new vehicle = GetPlayerVehicleID(playerid),
		    model = GetVehicleModel(vehicle);

		if((model == 420 || model == 438) && !isnull(VehicleInfo[vehicle][vOwner]) && strcmp(VehicleInfo[vehicle][vOwner], PlayerInfo[playerid][pName]) == 0) {
			switch(VehicleInfo[vehicle][vTM]) {
				case 0: {
				    SendClientMessage(playerid, COLOR_GREY, "你需要先打开你的计价器, /taximeter.");
				}
				case 1: {
				    new meMsg[75];
				    format(meMsg, sizeof(meMsg), "** %s 按下按钮将出租计价器的数据重置.", GetNameWithSpace(playerid, 1));
				    ProxDetector(12, playerid, meMsg, COLOR_PINK);
				    VehicleInfo[vehicle][vTMPayment] = 0;
					VehicleInfo[vehicle][vTMTime] = 0;
					VehicleInfo[vehicle][vTMCounter] = 0;
				}
			}
		} else {
            SendClientMessage(playerid, COLOR_GREY, "你需要在你的出租车内.");
		}
	} else {
        SendClientMessage(playerid, COLOR_GREY, "你需要在你的出租车内.");
	}

	return 1;
}

/*COMMAND:busy(playerid, params[]) {
    if(IsPlayerInAnyVehicle(playerid)) {
        new vehicle = GetPlayerVehicleID(playerid),
            model = GetVehicleModel(vehicle);

        if((model == 420 || model == 438) && !isnull(VehicleInfo[vehicle][vOwner]) && strcmp(VehicleInfo[vehicle][vOwner], PlayerInfo[playerid][pName]) == 0) {
			switch(PlayerInfo[playerid][pTaxiBusy]) {
				case 0: {
				    SendClientMessage(playerid, COLOR_WHITE, "You have marked yourself as busy. In order to receive upcoming requests, please use /busy once again.");
				    PlayerInfo[playerid][pTaxiBusy] = 1;
				}
				default: {
				    SendClientMessage(playerid, COLOR_WHITE, "You will now again receive taxi related requests.");
				    PlayerInfo[playerid][pTaxiBusy] = 0;
				}
			}
		} else {
            SendClientMessage(playerid, COLOR_GREY, "You have to be inside your own taxi in order to inform the dispatcher about your unavailability.");
		}
	} else {
        SendClientMessage(playerid, COLOR_GREY, "You have to be inside your own taxi in order to inform the dispatcher about your unavailability.");
	}

	return 1;
}*/

/* --- Animations --- */

COMMAND:dance(playerid, params[]) {
	switch(strval(params)) {
	    case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
	    case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	    case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
	    case 4: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
	    default: SendClientMessage(playerid, COLOR_GREY, "用法: /dance [1-4]");
	}

	return 1;
}

COMMAND:bar(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "BAR", "Barcustom_get", 4.1, 0, 1, 1, 1, 0, 1);
		case 2: ApplyAnimation(playerid, "BAR", "Barserve_bottle", 4.1, 0, 1, 1, 1, 0, 1);
		case 3: ApplyAnimation(playerid, "BAR", "Barserve_give", 4.1, 0, 1, 1, 1, 0, 1);
		case 4: ApplyAnimation(playerid, "BAR", "Barserve_glass", 4.1, 0, 1, 1, 1, 0, 1);
		case 5: ApplyAnimation(playerid, "BAR", "Barserve_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "BAR", "Barserve_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "BAR", "dnk_stndF_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.1, 0, 1, 1, 1, 0, 1);
		case 9: ApplyAnimation(playerid, "BAR", "BARman_idle", 4.1, 0, 1, 1, 1, 0, 1);
		case 10: ApplyAnimation(playerid, "BD_FIRE", "wash_up", 4.1, 0, 1, 1, 1, 0, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /bar [1-10]");
	}

	return 1;
}

COMMAND:bj(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_START_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_START_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_END_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_END_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_START_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_START_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_LOOP_P", 4.1, 1, 1, 1, 1, 1, 1);
		case 10: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_LOOP_W", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_END_P", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_END_W", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /bj [1-12]");
	}

	return 1;
}

COMMAND:spanking(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "SNM", "SPANKING_IDLEW", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "SNM", "SPANKING_IDLEP", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "SNM", "SPANKINGW", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "SNM", "SPANKINGP", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "SNM", "SPANKEDW", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "SNM", "SPANKEDP", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "SNM", "SPANKING_ENDW", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "SNM", "SPANKING_ENDP", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /spanking [1-8]");
	}

	return 1;
}

COMMAND:slapass(playerid, params[]) {
    ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.1, 0, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:parksit(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "SUNBATHE", "batherdown", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "SUNBATHE", "Lay_Bac_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_IdleA", 4.1, 1, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_IdleB", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "SUNBATHE", "ParkSit_W_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "SUNBATHE", "ParkSit_W_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimation(playerid, "SUNBATHE", "SBATHE_F_Out", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /parksit [1-9]");
	}

	return 1;
}

COMMAND:strip(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "STRIP", "strip_A", 4.1, 1, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "STRIP", "strip_B", 4.1, 1, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "STRIP", "strip_C", 4.1, 1, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "STRIP", "strip_D", 4.1, 1, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "STRIP", "strip_E", 4.1, 1, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "STRIP", "strip_F", 4.1, 1, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "STRIP", "strip_G", 4.1, 1, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "STRIP", "STR_A2B", 4.1, 1, 1, 1, 1, 1, 1);
		case 9: ApplyAnimation(playerid, "STRIP", "STR_B2C", 4.1, 1, 1, 1, 1, 1, 1);
		case 10: ApplyAnimation(playerid, "STRIP", "STR_C1", 4.1, 1, 1, 1, 1, 1, 1);
		case 11: ApplyAnimation(playerid, "STRIP", "STR_C2", 4.1, 1, 1, 1, 1, 1, 1);
		case 12: ApplyAnimation(playerid, "STRIP", "STR_C2B", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimation(playerid, "STRIP", "STR_Loop_A", 4.1, 1, 1, 1, 1, 1, 1);
		case 14: ApplyAnimation(playerid, "STRIP", "STR_Loop_B", 4.1, 1, 1, 1, 1, 1, 1);
		case 15: ApplyAnimation(playerid, "STRIP", "STR_Loop_C", 4.1, 1, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /strip [1-15]");
	}

	return 1;
}

COMMAND:follow(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "RYDER", "RYD_Beckon_01", 4.1, 1, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "RYDER", "RYD_Beckon_02", 4.1, 1, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "WUZI", "Wuzi_follow", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /follow [1-3]");
	}

	return 1;
}

COMMAND:laugh(playerid, params[]) {
    ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.1, 0, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:chant(playerid, params[]) {
    ApplyAnimation(playerid, "RIOT", "RIOT_CHANT", 4.1, 1, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:shouting(playerid, params[]) {
    ApplyAnimation(playerid, "RIOT", "RIOT_shout", 4.1, 0, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:pool(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "POOL", "POOL_ChalkCue", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "POOL", "POOL_Idle_Stance", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "POOL", "POOL_Long_Shot", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "POOL", "POOL_Long_Start", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "POOL", "POOL_Place_White", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "POOL", "POOL_Short_Shot", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "POOL", "POOL_Short_Start", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /pool [1-7]");
	}

	return 1;
}

COMMAND:wave(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "PED", "endchat_03", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "BD_FIRE", "BD_GF_Wave", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "BD_FIRE", "BD_Panic_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "GHANDS", "gsign5LH", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.1, 1, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /wave [1-5]");
	}

	return 1;
}

COMMAND:smoke(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "BD_FIRE", "M_smklean_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "GANGS", "smkcig_prtl", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "LOWRIDER", "F_smklean_loop", 4.1, 1, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "LOWRIDER", "M_smkstnd_loop", 4.1, 1, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "SMOKING", "M_smk_drag", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "SMOKING", "M_smk_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "SMOKING", "M_smk_out", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /smoke [1-7]");
	}

	return 1;
}

COMMAND:kiss(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "BD_FIRE", "Playa_Kiss_03", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_03", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "KISSING", "Playa_Kiss_01", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /kiss [1-5]");
	}

	return 1;
}

COMMAND:gym(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "benchpress", "gym_bp_celebrate", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "benchpress", "gym_bp_down", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "benchpress", "gym_bp_getoff", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "benchpress", "gym_bp_geton", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "benchpress", "gym_bp_up_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "Freeweights", "gym_barbell", 4.1, 1, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "Freeweights", "gym_free_A", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "Freeweights", "gym_free_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimation(playerid, "Freeweights", "gym_free_celebrate", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimation(playerid, "Freeweights", "gym_free_down", 4.1, 0, 1, 1, 1, 1, 1);
		case 11: ApplyAnimation(playerid, "Freeweights", "gym_free_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 12: ApplyAnimation(playerid, "Freeweights", "gym_free_pickup", 4.1, 0, 1, 1, 1, 1, 1);
		case 13: ApplyAnimation(playerid, "Freeweights", "gym_free_putdown", 4.1, 0, 1, 1, 1, 1, 1);
		case 14: ApplyAnimation(playerid, "Freeweights", "gym_free_up_smooth", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /gym [1-14]");
	}

	return 1;
}

COMMAND:basketball(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "BSKTBALL", "BBALL_def_jump_shot", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "BSKTBALL", "BBALL_def_loop", 4.1, 1, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "BSKTBALL", "BBALL_Dnk", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "BSKTBALL", "BBALL_Dnk_Lnd", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "BSKTBALL", "BBALL_idleloop", 4.1, 1, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "BSKTBALL", "BBALL_Jump_Cancel", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "BSKTBALL", "BBALL_Jump_Shot", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "BSKTBALL", "BBALL_pickup", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimation(playerid, "BSKTBALL", "BBALL_run", 4.1, 1, 1, 1, 1, 1, 1);
		case 10: ApplyAnimation(playerid, "BSKTBALL", "BBALL_walk", 4.1, 1, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /basketball [1-10]");
	}

	return 1;
}

COMMAND:fall(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "FIGHT_D", "HitD_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "FIGHT_E", "Hit_fightkick_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "FINALE", "FIN_Land_Die", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "KNIFE", "knife_hit_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "PARACHUTE", "FALL_skyDive_DIE", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "PED", "BIKE_fall_off", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "PED", "FLOOR_hit", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "PED", "FLOOR_hit_f", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimation(playerid, "PED", "KO_shot_face", 4.1, 0, 1, 1, 1, 1, 1);
		case 10: ApplyAnimation(playerid, "PED", "KO_shot_stom", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /fall [1-10]");
	}

	return 1;
}

COMMAND:deal(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "CASINO", "cards_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "CASINO", "cards_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "CASINO", "cards_lose", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "CASINO", "cards_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "CASINO", "cards_pick_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "CASINO", "cards_pick_02", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "DEALER", "shop_pay", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /deal [1-8]");
	}

	return 1;
}

COMMAND:casino(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "CASINO", "cards_raise", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "CASINO", "manwind", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "CASINO", "Roulette_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "CASINO", "Roulette_lose", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "CASINO", "Roulette_win", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "CASINO", "Slot_lose_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "CASINO", "Slot_win_out", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /casino [1-7]");
	}

	return 1;
}

COMMAND:crouch(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "CAMERA", "camcrch_cmon", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "CAMERA", "camstnd_to_camcrch", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "COP_AMBIENT", "Copbrowse_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "MISC", "Plunger_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_End", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /crouch [1-5]");
	}

	return 1;
}

COMMAND:shotgun(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "BUDDY", "buddy_crouchfire", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "BUDDY", "buddy_crouchreload", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "BUDDY", "buddy_fire", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "BUDDY", "buddy_fire_poor", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "BUDDY", "buddy_reload", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /shotgun [1-5]");
	}

	return 1;
}

COMMAND:lay(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "BEACH", "bather", 4.1, 1, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "BEACH", "Lay_Bac_Loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "BEACH", "ParkSit_W_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "BEACH", "SitnWait_loop_W", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /lay [1-4]");
	}

	return 1;
}

COMMAND:idle(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "PED", "IDLE_HBHB", 4.1, 1, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "PED", "woman_idlestance", 4.1, 1, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "PED", "XPRESSscratch", 4.1, 1, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "PLAYIDLES", "shift", 4.1, 1, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "PLAYIDLES", "shldr", 4.1, 1, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "PLAYIDLES", "stretch", 4.1, 1, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "PLAYIDLES", "strleg", 4.1, 1, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "PLAYIDLES", "time", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /idle [1-8]");
	}

	return 1;
}

COMMAND:stomp(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "FIGHT_C", "FightC_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "FIGHT_C", "FightC_G", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "FIGHT_C", "FightC_M", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "FIGHT_D", "FightD_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "FIGHT_D", "FightD_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "FIGHT_D", "FightD_G", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "FIGHT_E", "FightKick_B", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "PED", "FightA_G", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /stomp [1-8]");
	}

	return 1;
}

COMMAND:hide(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "HEIST9", "swt_wllpk_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "HEIST9", "swt_wllpk_L_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "HEIST9", "swt_wllpk_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "HEIST9", "swt_wllpk_R_back", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "HEIST9", "swt_wllshoot_in_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "HEIST9", "swt_wllshoot_in_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "HEIST9", "swt_wllshoot_out_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "HEIST9", "swt_wllshoot_out_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimation(playerid, "SWAT", "swt_lkt", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /hide [1-9]");
	}

	return 1;
}

COMMAND:sign(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "GHANDS", "gsign1", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "GHANDS", "gsign1LH", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "GHANDS", "gsign2", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "GHANDS", "gsign2LH", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "GHANDS", "gsign3", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "GHANDS", "gsign3LH", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "GHANDS", "gsign4", 4.1, 0, 1, 1, 1, 1, 1);
		case 8: ApplyAnimation(playerid, "GHANDS", "gsign4LH", 4.1, 0, 1, 1, 1, 1, 1);
		case 9: ApplyAnimation(playerid, "GHANDS", "gsign5", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /sign [1-9]");
	}

	return 1;
}

COMMAND:handshake(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "GANGS", "hndshkaa", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "GANGS", "hndshkba", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "GANGS", "hndshkca", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "GANGS", "hndshkcb", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "GANGS", "hndshkda", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "GANGS", "hndshkfa", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "GANGS", "prtial_hndshk_biz_01", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /handshake [1-7]");
	}

	return 1;
}

COMMAND:box(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "FIGHT_B", "FightB_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "FIGHT_B", "FightB_2", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "FIGHT_B", "FightB_block", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "FIGHT_B", "HitB_1", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "FIGHT_D", "FightD_3", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "FIGHT_E", "FightKick", 4.1, 0, 1, 1, 1, 1, 1);
		case 7: ApplyAnimation(playerid, "GYMNASIUM", "GYMshadowbox", 4.1, 1, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /box [1-7]");
	}

	return 1;
}

COMMAND:standup(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "COP_AMBIENT", "Copbrowse_out", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "INT_HOUSE", "LOU_Out", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "PED", "CAR_crawloutRHS", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "PED", "getup", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "PED", "getup_front", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /standup [1-5]");
	}

	return 1;
}

COMMAND:crossarms(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "OTB", "wtchrace_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "PED", "endchat_02", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /crossarms [1-4]");
	}

	return 1;
}

COMMAND:lowrider(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "LOWRIDER", "lrgirl_bdbnce", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "LOWRIDER", "lrgirl_l0_to_l1", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "LOWRIDER", "lrgirl_l12_to_l0", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "LOWRIDER", "lrgirl_l1_to_l2", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "LOWRIDER", "lrgirl_l2_to_l3", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /lowrider [1-5]");
	}

	return 1;
}

COMMAND:traffic(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "POLICE", "CopTraf_Away", 4.1, 1, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "POLICE", "CopTraf_Come", 4.1, 1, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "POLICE", "CopTraf_Left", 4.1, 1, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "POLICE", "CopTraf_Stop", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /traffic [1-4]");
	}

	return 1;
}

COMMAND:jump(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "PED", "Crouch_Roll_L", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "PED", "Crouch_Roll_R", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "PED", "EV_dive", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /jump [1-3]");
	}

	return 1;
}

COMMAND:carry(playerid, params[]) {
	switch(strval(params)) {
	    case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
		case 2: ApplyAnimation(playerid, "CARRY", "liftup", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "CARRY", "putdwn", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /carry [1-3]");
	}

	return 1;
}

COMMAND:chainsaw(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "CHAINSAW", "CSAW_G", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "CHAINSAW", "IDLE_csaw", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "CHAINSAW", "WEAPON_csaw", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /chainsaw [1-3]");
	}

	return 1;
}

COMMAND:mechanic(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "CAR", "Fixn_Car_Loop", 4.1, 1, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "CAR", "Fixn_Car_Out", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /mechanic [1-2]");
	}

	return 1;
}

COMMAND:rap(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "LOWRIDER", "RAP_A_Loop", 4.1, 1, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "LOWRIDER", "RAP_B_Loop", 4.1, 1, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "LOWRIDER", "RAP_C_Loop", 4.1, 1, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /rap [1-3]");
	}

	return 1;
}

COMMAND:crack(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 1, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "CRACK", "crckdeth4", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "CRACK", "crckidle2", 4.1, 1, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "BASEBALL", "Bat_Hit_3", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /crack [1-4]");
	}

	return 1;
}

COMMAND:camera(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "CAMERA", "piccrch_take", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "CAMERA", "picstnd_in", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /camera [1-2]");
	}
	return 1;
}

COMMAND:wank(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.1, 1, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "PAULNMAC", "wank_out", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /wank [1-2]");
	}

	return 1;
}

COMMAND:bomb(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "BOMBER", "BOM_Plant_Crouch_In", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /bomb [1-2]");
	}

	return 1;
}

COMMAND:bat(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "CRACK", "Bbalbat_Idle_01", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "CRACK", "Bbalbat_Idle_02", 4.1, 1, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /bat [1-2]");
	}

	return 1;
}

COMMAND:injured(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "CRACK", "crckidle1", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /injured [1-2]");
	}

	return 1;
}

COMMAND:spray(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "GRAFFITI", "graffiti_Chkout", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "GRAFFITI", "spraycan_fire", 4.1, 1, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "SPRAYCAN", "spraycan_full", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /graffiti [1-3]");
	}

	return 1;
}

COMMAND:eat(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "FOOD", "EAT_Chicken", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "FOOD", "FF_Sit_Eat1", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /eat [1-3]");
	}

	return 1;
}

COMMAND:sit(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "FOOD", "FF_Sit_Look", 4.1, 1, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "FOOD", "FF_Die_Fwd", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "Attractors", "Stepsit_in", 4.1, 0, 0, 0, 1, 0, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /sit [1-3]");
	}

	return 1;
}

COMMAND:aim(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "ON_LOOKERS", "point_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "PED", "ARRESTgun", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.1, 1, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /aim [1-3]");
	}

	return 1;
}

COMMAND:carsit(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "LOWRIDER", "lrgirl_hair", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "LOWRIDER", "lrgirl_idle_to_l0", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "LOWRIDER", "Tap_hand", 4.1, 1, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /carsit [1-3]");
	}

	return 1;
}

COMMAND:toss(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "GRENADE", "WEAPON_throw", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "GRENADE", "WEAPON_throwu", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "BASEBALL", "Bat_M", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /toss [1-3]");
	}

	return 1;
}

COMMAND:lookout(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "ON_LOOKERS", "lkaround_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "ON_LOOKERS", "lkup_loop", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "BD_FIRE", "BD_Panic_02", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /lookout [1-3]");
	}

	return 1;
}

COMMAND:lean(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "GANGS", "leanIN", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "MISC", "Plyrlean_loop", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /lean [1-2]");
	}

	return 1;
}

COMMAND:cry(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "GRAVEYARD", "mrnF_loop", 4.1, 1, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "GRAVEYARD", "mrnM_loop", 4.1, 1, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /cry [1-2]");
	}

	return 1;
}

COMMAND:pee(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "PAULNMAC", "Piss_in", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING); //ApplyAnimation(playerid, "PAULNMAC", "Piss_loop", 4.1, 1, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /pee [1-2]");
	}

	return 1;
}

COMMAND:facepalm(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "MISC", "plyr_shkhead", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "OTB", "wtchrace_lose", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /facepalm [1-2]");
	}

	return 1;
}

COMMAND:taxi(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "MISC", "Hiker_Pose", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "MISC", "Hiker_Pose_L", 4.1, 0, 1, 1, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /taxi [1-2]");
	}

	return 1;
}

COMMAND:seat(playerid, params[]) {
	switch(strval(params)) {
	    case 1: ApplyAnimation(playerid, "PED", "SEAT_down", 4.1, 0, 0, 0, 1, 0, 1);
		case 2: ApplyAnimation(playerid, "PED", "SEAT_up", 4.1, 0, 0, 0, 1, 1, 1);
		default: SendClientMessage(playerid, COLOR_GREY, "用法: /seat [1-2]");
	}

	return 1;
}

COMMAND:beat(playerid, params[]) {
	ApplyAnimation(playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:comehere(playerid, params[]) {
	ApplyAnimation(playerid, "CAMERA", "camstnd_cmon", 4.1, 0, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:startrace(playerid, params[]) {
	ApplyAnimation(playerid, "CAR", "flag_drop", 4.1, 0, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:think(playerid, params[]) {
	ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_think", 4.1, 0, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:exhausted(playerid, params[]) {
	ApplyAnimation(playerid, "FAT", "IDLE_tired", 4.1, 1, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:vomit(playerid, params[]) {
 	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 4.1, 0, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:cpr(playerid, params[]) {
	ApplyAnimation(playerid, "MEDIC", "CPR", 4.1, 0, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:armed(playerid, params[]) {
	ApplyAnimation(playerid, "MUSCULAR", "MuscleIdle_armed", 4.1, 1, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:taichi(playerid, params[]) {
	ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop", 4.1, 1, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:cover(playerid, params[]) {
	ApplyAnimation(playerid, "PED", "cower", 4.1, 0, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:fucku(playerid, params[]) {
	ApplyAnimation(playerid, "PED", "fucku", 4.1, 0, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:drunk(playerid, params[]) {
	ApplyAnimation(playerid, "PED", "WALK_drunk", 4.1, 1, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:frisking(playerid, params[]) {
	ApplyAnimation(playerid, "POLICE", "crm_drgbst_01", 4.1, 0, 1, 1, 1, 1, 1);
	return 1;
}

COMMAND:handsup(playerid, params[]) {
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_HANDSUP);
	return 1;
}

/* --- Admin Commands --- */


COMMAND:checkf(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] < 3)return 1;
	new id;
	if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
    if(sscanf(params, "d", id)) return SendClientMessage(playerid, COLOR_GREY, "用法: /checkf [家具ID]");
    if(id<0||id>=MAX_FURNITURES)return SendClientMessage(playerid, COLOR_GREY, "无效的家具ID");
    if(!FurnitureInfo[id][Exist])return SendClientMessage(playerid, COLOR_GREY, "该家具不存在");
    new dstring[814];
    if(strlen(FurnitureInfo[id][Owner])<=0)
    {
        format(dstring,sizeof dstring,"<家具ID>:\t%d\n<属于>:\t无 (放在地上)\n<名称>:\t%s\n<类型>:\t%s\n<价值>:\t$%d\n--------------------\n[传送过去]\n[删除家具]",id,FurnitureInfo[id][Name],FurnitureInfo[id][TypeName],FurnitureInfo[id][Price]);
	}
	else
	{
        new pid=GetPlayerID(FurnitureInfo[id][Owner]);
        format(dstring,sizeof dstring,"<家具ID>:\t%d\n<属于>:\t%s (id:%d)\n<名称>:\t%s\n<类型>:\t%s\n<价值>:\t$%d\n--------------------\n[传送过去]\n[删除家具]",id,FurnitureInfo[id][Owner],pid,FurnitureInfo[id][Name],FurnitureInfo[id][TypeName],FurnitureInfo[id][Price]);
    }
    ShowPlayerDialog(playerid,4033,DIALOG_STYLE_LIST,"家具菜单",dstring,"操作","返回");
    SetPVarInt(playerid,"xb_fid",id);
    return 1;
}

COMMAND:kickall(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] > 5) 
	{
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new string[128], user;
	    foreach(new i : Player)
		{
		    if(PlayerInfo[i][pAdminlevel] != 5)
		    {
	    		KickDelay(i);
    		}
 		}
	    format(string, sizeof(string), "%s %s 将所有人请出了服务器. (系统将在未来重启)", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user));
	    SendClientMessageToAll(COLOR_LIGHTRED, string);
 	}
 	return 1;
}

COMMAND:mstart(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 3)
	{
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		if(mountain_start)return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}千年山活动已经开始");
		XB_StartMountain();
	}
	return 1;

}

COMMAND:buyballon(playerid, params[])
{
	if(!mountain_start)return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}千年山活动还没开始");
	if(!IsPlayerInRangeOfPoint(playerid,3,-2392.1565, -2204.5835, 33.5627))return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝:你不在热气球服务点");
	if(BallonStats!=BALLON_NONE)return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝:该项服务已经被占用,请等待");
	if(PlayerInfo[playerid][pMoney]<50)return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝:你没有足够的钱");
	GivePlayerMoneyEx(playerid,-50);
	XB_SetBallon(BALLON_UP_WAIT);
	return 1;
}

COMMAND:mclose(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 3)
	{
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		if(!mountain_start)return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}千年山活动还没开始");
		XB_StopMountain();
	}
	return 1;

}

COMMAND:ck(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 1) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /ck [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	 	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	 	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    SetPVarInt(playerid, "CharacterKill", user);
		ShowPlayerDialog(playerid, DIALOG_CK, DIALOG_STYLE_MSGBOX, "{FF9900}Character Kill - 角色死亡", "{CC3300}警告:{A9C4E4}\t此项操作确定之后无法撤销. 当角色死亡后\n\t\t玩家的数据将会消失.\n\n{CC3300}注意:{A9C4E4}\t请将玩家数据截图以便需要之时可以用上 (/check [玩家ID])!\n\n{CC3300}考虑:{A9C4E4}\t你确定想进行该项操作吗?", "确定", "返回");
	} else {
        SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	
	return 1;
}

COMMAND:setnamechanges(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] > 5)
	{
		if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new name[MAX_PLAYER_NAME],
			amount;

		if(sscanf(params, "s[24]i", name, amount)) return SendClientMessage(playerid, COLOR_GREY, "用法: /setnamechange [游戏名称] [数量]");
		if(!IsValidPlayerName(name)) return SendClientMessage(playerid, COLOR_GREY, "你需要正确输入名称.");
		new query[75];
		mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_users` WHERE `user` = '%e'", name);
		mysql_function_query(sqlHandle, query, true, "OnCommandSetNamechanges", "isi", playerid, name, amount);
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	
	return 1;
}

COMMAND:setage(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user,
			age;
			
		if(sscanf(params, "ui", user, age)) return SendClientMessage(playerid, COLOR_GREY, "用法: /setage [玩家ID] [年龄]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "ii", user, age);
	 	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	 	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    if(age < 1 || age > 99) return SendClientMessage(playerid, COLOR_GREY, "只能1-99之间.");
		new msg[105];
		PlayerInfo[user][pAge] = age;
		if(PlayerInfo[playerid][pAdminlevel] > 0)
		{
			format(msg, sizeof(msg), "*** %s %s 设置了 %s 的年龄为 %i.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), age);
   			SendMessageToAdmins(msg);
		}
		else
		{
  			format(msg, sizeof(msg), "*** %s %s 设置了 %s 的年龄为 %i.", GetModRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), age);
			SendMessageToModerators(msg);
		}
	}
	else
	{
        SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	
	return 1;
}

COMMAND:accountpass(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 5) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new name[MAX_PLAYER_NAME],
	        password[100];

		if(sscanf(params, "s[24]s[100]", name, password)) return SendClientMessage(playerid, COLOR_GREY, "用法: /accountpass [游戏名称] [password]");
		if(GetPlayerID(name) != -1) return SendClientMessage(playerid, COLOR_GREY, "该玩家在线, 需要对方离线后才可操作");
		if(strlen(password) < 4) return SendClientMessage(playerid, COLOR_GREY, "密码不能低于4个字节.");
		new query[75];
		mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_users` WHERE `user` = '%e'", name);
		mysql_function_query(sqlHandle, query, true, "OnAdminChangeAccPass", "iss", playerid, name, password);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:countdown(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new seconds;
	    if(sscanf(params, "i", seconds)) return SendClientMessage(playerid, COLOR_GREY, "用法: /countdown [秒]");
	    if(countdownTimer != 0) return SendClientMessage(playerid, COLOR_GREY, "之前就已经有了一个冷却时间, 请等待其结束.");
	    if(seconds >= 10000 || seconds < 0) return SendClientMessage(playerid, COLOR_GREY, "冷却时间不能超过 10,000 秒.");
	    new msg[10];
	    format(msg, sizeof(msg), "~r~%i", seconds);
	    SetTimerEx("Countdown", 1000, false, "i", seconds);
	    countdownTimer = 1;
	    foreach(new i : Player) {
			GameTextForPlayer(i, msg, 1000, 6);
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:announcement(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 1) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new message[128];
	    if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /announcement [信息]");
		new len = strlen(message);
		if(len + MAX_PLAYER_NAME + 15 > 128) {
		    new buffer[128];
		    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 15 - 4);
		    format(buffer, sizeof(buffer), "[服务器公告] %s: %s ...", GetNameWithSpace(playerid), buffer);
		    strdel(message, 0, 128 - MAX_PLAYER_NAME - 15 - 4);
			format(message, sizeof(message), "[服务器公告] %s: ... %s", GetNameWithSpace(playerid), message);
   			foreach(new i : Player) {
				SendClientMessage(i, COLOR_LIGHTRED, buffer);
				SendClientMessage(i, COLOR_LIGHTRED, message);
			}
		} else {
            format(message, sizeof(message), "[服务器公告] %s: %s", GetNameWithSpace(playerid), message);
      		SendClientMessageToAll(COLOR_LIGHTRED, message);
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}
ALTCOMMAND:oooc->toggleooc;
COMMAND:toggleooc(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 3) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        new msg[100];
		switch(ooc) {
		    case 0: {
			    ooc = 1;
				format(msg, sizeof(msg), "*** %s %s 激活了OOC频道, 你现在可以使用 /ooc.", GetAdminRank(playerid), GetNameWithSpace(playerid));
			}
			default: {
			    ooc = 0;
				format(msg, sizeof(msg), "*** %s %s 关闭了OOC频道.", GetAdminRank(playerid), GetNameWithSpace(playerid));
			}
		}

		SendClientMessageToAll(COLOR_OOC, msg);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:checktrunk(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 1) {
 		new vehicle;
 		if(sscanf(params, "i", vehicle)) return SendClientMessage(playerid, COLOR_GREY, "用法: /checktrunk [车辆ID]");
 		if(VehicleInfo[vehicle][vType] != VEHICLE_OWNED && VehicleInfo[vehicle][vFaction] == 0) return SendClientMessage(playerid, COLOR_GREY, "该车没有后备箱.");
		SetPVarInt(playerid, "TrunkVehicle", vehicle);
		if(VehicleInfo[vehicle][vFaction] == 0) {
		   	new query[80];
		   	SetPVarInt(playerid, "TrunkFaction", 0);
	    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_trunks` WHERE `vehicle` = %i LIMIT 0, 21", VehicleInfo[vehicle][vID]);
	    	mysql_function_query(sqlHandle, query, true, "OnPlayerCheckTrunk", "iiii", playerid, vehicle, 1, 1);
	    } else {
	        new query[90];
	        SetPVarInt(playerid, "TrunkFaction", 1);
	    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_faction_trunks` WHERE `vehicle` = %i LIMIT 0, 21", VehicleInfo[vehicle][vFVID]);
	    	mysql_function_query(sqlHandle, query, true, "OnPlayerCheckTrunk", "iiii", playerid, vehicle, 1, 1);
	    }
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:antibunnyhop(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 4)
	{
        new msg[128];
        switch(antiBunnyHop)
		{
			case 0:
			{
			    antiBunnyHop = 1;
			    format(msg, sizeof(msg), "*** %s %s 开启了反兔子跳系统.", GetAdminRank(playerid), GetNameWithSpace(playerid));
			}
			default:
			{
			    antiBunnyHop = 0;
			    format(msg, sizeof(msg), "*** %s %s 关闭了反兔子跳系统.", GetAdminRank(playerid), GetNameWithSpace(playerid));
			}
		}
		SendMessageToAdmins(msg);
    }
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}
COMMAND:togact(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 4)
	{
        new msg[128];
        switch(actToggle)
		{
			case 0:
			{
			    actToggle = 1;
			    format(msg, sizeof(msg), "*** %s %s 开启了注册验证系统.", GetAdminRank(playerid), GetNameWithSpace(playerid));
			}
			default:
			{
			    actToggle = 0;
			    format(msg, sizeof(msg), "*** %s %s 关闭了注册验证系统.", GetAdminRank(playerid), GetNameWithSpace(playerid));
			}
		}
		SendMessageToAdmins(msg);
    }
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}
COMMAND:event(playerid, params[])//
{
    if(PlayerInfo[playerid][pAdminlevel] > 5)
	{
        new msg[128],times;
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        if(sscanf(params, "i", times)) return SendClientMessage(playerid, COLOR_GREY, "用法: /event [倍数]");
        if(times<1)return SendClientMessage(playerid, COLOR_GREY,"无效的倍数");
        doublepaycheck = times;
        format(msg, sizeof(msg), "[!] EVENT-TEAM %s %s 开启了%d倍工资活动.", GetAdminRank(playerid), GetNameWithSpace(playerid),times);
        SendClientMessageToAll(COLOR_LIGHTRED, msg);
    }
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}


COMMAND:setproperty(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 4) {
    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        for(new b = 0; b != MAX_BUSINESSES; b++) {
		    if(IsValidDynamicCP(businessCP[b]) && IsPlayerInDynamicCP(playerid, businessCP[b])) {
				SetPVarInt(playerid, "BusinessManager", b);
				ShowPlayerDialog(playerid, DIALOG_SETBUSINESS, DIALOG_STYLE_LIST, "{FF9900}管理产业", "修改名称\n修改房号\n修改街区名称\n修改邮政编号\n修改税金\n修改内饰\n修改价格\n设置业主\n删除业主\n组织产业开关", "选择", "取消");
				return 1;
		    }
		}

		for(new h = 0; h != MAX_HOUSES; h++) {
		    if(IsValidDynamicCP(houseCP[h]) && IsPlayerInDynamicCP(playerid, houseCP[h])) {
				SetPVarInt(playerid, "HouseManager", h);
				ShowPlayerDialog(playerid, DIALOG_SETHOUSE, DIALOG_STYLE_LIST, "{FF9900}管理房产", "修改房号\n修改街区名称\n修改邮政编号\n修改税收\n修改内饰\n修改价格\n设置业主\n删除业主", "选择", "取消");
				return 1;
		    }
		}
    } else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:blacklistvehicle(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 5)
	{
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        new model;
		if(sscanf(params, "i", model)) return SendClientMessage(playerid, COLOR_GREY, "用法: /blacklistvehicle [model]");
		if(model < 400 || model > 611) return SendClientMessage(playerid, COLOR_GREY, "无效车辆模型.");
		if(vehicleData[model - 400][blacklisted] != 0) return SendClientMessage(playerid, COLOR_GREY, "该车已经在黑名单内.");
		new msg[135];
		vehicleData[model - 400][blacklisted] = 1;
		format(msg, sizeof(msg), "*** %s %s 将模型ID %i 车辆拉入黑名单, 该车将不会存在于管理员刷车指令内.", GetAdminRank(playerid), GetNameWithSpace(playerid), model);
		SendMessageToAdmins(msg);
    }
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:unblacklistvehicle(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 5)
	{
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        new model;
		if(sscanf(params, "i", model)) return SendClientMessage(playerid, COLOR_GREY, "用法: /unblacklistvehicle [model]");
		if(model < 400 || model > 611) return SendClientMessage(playerid, COLOR_GREY, "无效车辆模型.");
		if(vehicleData[model - 400][blacklisted] == 0) return SendClientMessage(playerid, COLOR_GREY, "该车并不在黑名单内.");
		new msg[145];
		
		vehicleData[model - 400][blacklisted] = 0;
		format(msg, sizeof(msg), "*** %s %s 将模型ID %i 车辆从黑名单中删除, 现在可以使用 /spawncar 刷出.", GetAdminRank(playerid), GetNameWithSpace(playerid), model);
		SendMessageToAdmins(msg);
    }
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:incometaxrate(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 5)
	{
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        new Float:rate;
		if(sscanf(params, "f", rate)) return SendClientMessage(playerid, COLOR_GREY, "用法: /incometaxrate [税率]");
		new msg[90];
		gIncomeTaxRate = rate;
		format(msg, sizeof(msg), "*** %s %s 已设置所得税税率为 %.3f.", GetAdminRank(playerid), GetNameWithSpace(playerid), rate);
		SendMessageToAdmins(msg);
    }
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:savingsrate(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 5)
	{
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        new Float:rate;
		if(sscanf(params, "f", rate)) return SendClientMessage(playerid, COLOR_GREY, "用法: /savingsrate [税率]");
		new msg[90];
		gSavingsRate = rate;
		format(msg, sizeof(msg), "*** %s %s 设置了储蓄利息为 %.3f.", GetAdminRank(playerid), GetNameWithSpace(playerid), gSavingsRate);
		SendMessageToAdmins(msg);
    }
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:interestrate(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 5) {
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        new Float:rate;
		if(sscanf(params, "f", rate)) return SendClientMessage(playerid, COLOR_GREY, "用法: /interestrate [税率]");
		if(rate < 0.001) return SendClientMessage(playerid, COLOR_GREY, "不能低于0.001");
		new msg[120];
		gInterestRate = rate;
		format(msg, sizeof(msg), "*** %s %s 设置了 Los Angeles 银行利息为 %.3f.", GetAdminRank(playerid), GetNameWithSpace(playerid), gInterestRate);
		SendMessageToAdmins(msg);
		
    } else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:savepos(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        new Float:X,
            Float:Y,
            Float:Z;

		GetPlayerPos(playerid, X, Y, Z);
		SetPVarFloat(playerid, "SavePosX", X);
		SetPVarFloat(playerid, "SavePosY", Y);
		SetPVarFloat(playerid, "SavePosZ", Z);
		SetPVarInt(playerid, "SavePosInt", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "SavePosVW", GetPlayerVirtualWorld(playerid));
		SendClientMessage(playerid, COLOR_WHITE, "*** 位置保存, 使用 /loadpos 返回该地点.");
    } else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:loadpos(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        SetPlayerPosEx(playerid, 5, GetPVarFloat(playerid, "SavePosX"), GetPVarFloat(playerid, "SavePosY"), GetPVarFloat(playerid, "SavePosZ"), 0.0, GetPVarInt(playerid, "SavePosInt"), GetPVarInt(playerid, "SavePosVW"));
    } else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:payday(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 4)
	{
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /payday [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
	 	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	 	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    new msg[125];
	    format(msg, sizeof(msg), "*** %s %s 发放了 %s 的薪水.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user));
		SendMessageToAdmins(msg);
	    payday(user);
	    
	}
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:putinvehicle(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 1) {
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new vehicle,
			user,
			seat,
			bool:taken[4];

		if(sscanf(params, "uii", user, vehicle, seat)) return SendClientMessage(playerid, COLOR_GREY, "用法: /putinvehicle [玩家ID] [车辆ID] [座位]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "iii", user, vehicle, seat);
	 	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	 	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(!IsValidVehicle(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "无效车辆.");
		if(vehicleData[GetVehicleModel(vehicle) - 400][seats] - 1 < seat) return SendClientMessage(playerid, COLOR_GREY, "该车没有足够多的位置.");
		foreach(new i : Player) {
			if(GetPlayerVehicleID(i) == vehicle) {
				taken[GetPlayerVehicleSeat(i)] = true;
			}
		}

		if(taken[seat] == true) return SendClientMessage(playerid, COLOR_GREY, "该位已被使用.");
		new msg[110],
			vdata[7];

		GetVehicleParamsEx(vehicle, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
		if(vdata[3] != 0) {
            PlayerInfo[user][pAllowFalseEnter] = 1;
		}

		PutPlayerInVehicle(user, vehicle, seat);
		format(msg, sizeof(msg), "*** %s %s 将你放置入座位 %i, 车辆ID %i.", GetAdminRank(playerid), GetNameWithSpace(playerid), seat, vehicle);
		SendClientMessage(user, COLOR_WHITE, msg);
		format(msg, sizeof(msg), "*** 你将 %s 放入座位 %i, 车辆ID %i.", GetNameWithSpace(user), seat, vehicle);
		SendClientMessage(playerid, COLOR_WHITE, msg);
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:ban(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user,
			reason[128],
			query[90];

	    if(sscanf(params, "us[128]", user, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /ban [玩家ID] [原因]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "is[128]", user, reason);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    if(PlayerInfo[user][pAdminlevel] > PlayerInfo[playerid][pAdminlevel]) return SendClientMessage(playerid, COLOR_LIGHTRED, "你没有权限对该成员使用.");
	    mysql_format(sqlHandle, query, sizeof(query), "SELECT `ip` FROM `samp_users` WHERE `user` = '%e'", PlayerInfo[user][pName]);
	    mysql_function_query(sqlHandle, query, true, "OnAdminBanPlayer", "iis", playerid, user, reason);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:hban(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] > 0)
	{
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user,
			reason[128],
			query[90];

	    if(sscanf(params, "us[128]", user, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /ban [玩家ID] [原因]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "is[128]", user, reason);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(PlayerInfo[user][pAdminlevel] == 5) return SendClientMessage(playerid, COLOR_LIGHTRED, "你没有权限对该用户使用.");
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    mysql_format(sqlHandle, query, sizeof(query), "SELECT `ip` FROM `samp_users` WHERE `user` = '%e'", PlayerInfo[user][pName]);
	    mysql_function_query(sqlHandle, query, true, "OnAdminHBanPlayer", "iis", playerid, user, reason);
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:checkvehicle(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 1) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new vehicle;
		if(sscanf(params, "i", vehicle)) return SendClientMessage(playerid, COLOR_GREY, "用法: /checkvehicle [车辆ID]");
		if(!IsValidVehicle(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "无效车辆.");
		new msg[128],
		    vdata[8],
		    Float:health;

		format(msg, sizeof(msg), "车辆ID %i 的信息:", vehicle);
		SendClientMessage(playerid, COLOR_LIGHTGREEN, msg);

		if(isnull(FactionInfo[VehicleInfo[vehicle][vFaction]][fName])) {
		    format(msg, sizeof(msg), "拥有人: [%s], 车辆模型: [%s], 虚拟世界: [%i], 组织: [None]", isnull(VehicleInfo[vehicle][vOwner]) ? ("None") : GetNameWithSpaceEx(VehicleInfo[vehicle][vOwner]), vehicleData[GetVehicleModel(vehicle) - 400][typeName], GetVehicleVirtualWorld(vehicle));
		} else {
			format(msg, sizeof(msg), "拥有人: [%s], 车辆模型: [%s], 虚拟世界: [%i], 组织: [%s]", isnull(VehicleInfo[vehicle][vOwner]) ? ("None") : GetNameWithSpaceEx(VehicleInfo[vehicle][vOwner]), vehicleData[GetVehicleModel(vehicle) - 400][typeName], GetVehicleVirtualWorld(vehicle), FactionInfo[VehicleInfo[vehicle][vFaction]][fName]);
		}

		SendClientMessage(playerid, COLOR_GREY, msg);

		format(msg, sizeof(msg), "牌照: [%s], 汽油: [%i], 颜色#1: [%i], 颜色#2: [%i], 钥匙: [%i], 车辆类型: [%s]", VehicleInfo[vehicle][vPlate], VehicleInfo[vehicle][vFuel], VehicleInfo[vehicle][vColor1], VehicleInfo[vehicle][vColor2], VehicleInfo[vehicle][vKey], GetVehicleTypeName(VehicleInfo[vehicle][vType]));
        SendClientMessage(playerid, COLOR_GREY, msg);

		GetVehicleParamsEx(vehicle, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
		format(msg, sizeof(msg), "引擎: [%s], 车灯: [%s], 报警器: [%s], 车门: [%s], 后备箱: [%s], 引擎盖: [%s], Objective: [%s]", (vdata[0] == 0) ? ("关") : ("开"), (vdata[1] == 0) ? ("关") : ("开"), (vdata[2] == 0) ? ("关") : ("开"), (vdata[3] == 0) ? ("未锁") : ("已锁"), (vdata[4] == 0) ? ("关") : ("开"), (vdata[5] == 0) ? ("关") : ("开"), (vdata[6] == 0) ? ("未激活") : ("已激活"));
		SendClientMessage(playerid, COLOR_GREY, msg);

		new ddata[4];
		GetVehicleDamageStatus(vID, ddata[0], ddata[1], ddata[2], ddata[3]);
		GetVehicleHealth(vehicle, health);
		format(msg, sizeof(msg), "生命值: [%.2f], 损坏的车灯: [%b], 损坏的轮胎: [%b], 损坏的门: [%b]", health, ddata[2], ddata[3], ddata[1]);
		SendClientMessage(playerid, COLOR_GREY, msg);
	} else {
 		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:kickadmin(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 5) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user[MAX_PLAYER_NAME];
		if(sscanf(params, "s[24]", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /kickadmin [游戏名称]");
		if(!IsValidPlayerName(user)) return SendClientMessage(playerid, COLOR_GREY, "你需要输入Firstname_Lastname格式.");
		new msg[150],
			pID = GetPlayerID(user);

		mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `adminlevel` = 0 WHERE `user` = '%e'", user);
		mysql_function_query(sqlHandle, msg, false, "", "");
		format(msg, sizeof(msg), "*** %s %s 将 %s 从管理团队移除出去.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(user));
		AdminMessageLog(msg, playerid, "Kick Admin");
		if(pID != -1 && IsPlayerConnected(pID)) {
			PlayerInfo[pID][pAdminlevel] = 0;
		}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:kickmod(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 4 || PlayerInfo[playerid][pModLevel] >= 2) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user[MAX_PLAYER_NAME];
		if(sscanf(params, "s[24]", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /kickmod [游戏名称]");
		if(!IsValidPlayerName(user)) return SendClientMessage(playerid, COLOR_GREY, "你需要输入Firstname_Lastname格式.");
		new msg[150],
			pID = GetPlayerID(user);

		mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `modlevel` = 0 WHERE `user` = '%e'", user);
		mysql_function_query(sqlHandle, msg, false, "", "");
		if(PlayerInfo[playerid][pAdminlevel] > 4) {
			format(msg, sizeof(msg), "*** %s %s 将 %s 移除出测试员团队.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(user));
		} else {
            format(msg, sizeof(msg), "*** %s %s 将 %s 移除出测试员团队.", GetModRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(user));
		}
		
		foreach(new i : Player) {
			if(PlayerInfo[i][pAdminlevel] > 0) {
			    SendClientMessage(i, COLOR_GOLD, msg);
			} else if(PlayerInfo[i][pModLevel] > 0) {
				SendClientMessage(i, COLOR_MODERATORS, msg);
			}
		}
				
		if(pID != -1 && IsPlayerConnected(pID)) {
			PlayerInfo[pID][pModLevel] = 0;
		}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:checkweapons(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /checkweapons [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    SendClientMessage(playerid, COLOR_LIGHTGREEN, "武器槽内的武器:");
	    new slots[2],
	        name[32],
	        msg[60],
	        weaponCheck = 0;

		for(new i = 0; i != 13; i++) {
	    	GetPlayerWeaponData(user, i, slots[0], slots[1]);
			if(slots[0] != 0) {
			    if(slots[0] == 18) {
			        format(msg, sizeof(msg), "燃烧弹 (WepID: %i, 子弹: %i).", slots[0], slots[1]);
			    } else if(slots[0] == 44) {
			        format(msg, sizeof(msg), "夜间护目镜 (WepID: %i, 子弹: %i).", slots[0], slots[1]);
			    } else if(slots[0] == 45) {
			         format(msg, sizeof(msg), "热视镜 (WepID: %i, 子弹: %i).", slots[0], slots[1]);
			    } else {
			        GetWeaponName(slots[0], name, sizeof(name));
                    format(msg, sizeof(msg), "%s (WeaponID: %i, 子弹: %i).", name, slots[0], slots[1]);
				}
			    
			    SendClientMessage(playerid, COLOR_GREY, msg);
			    weaponCheck = 1;
			}
		}

		if(weaponCheck == 0) {
			SendClientMessage(playerid, COLOR_GREY, "该玩家没有任何武器.");
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:disarm(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /disarm [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new msg[90],
			query[50];

		ResetPlayerWeapons(user);
		if(items[PlayerInfo[user][pItemType][0]][itemType] == ITEM_WEAPON)
		{
			RemovePlayerItemEx(user, PlayerInfo[user][pItemID][0]);
			mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", PlayerInfo[user][pItemID][0]);
			mysql_function_query(sqlHandle, query, false, "", "");
			PlayerInfo[user][pItemType][0] = 0;
			PlayerInfo[user][pItemIndex][0] = 0;
			PlayerInfo[user][pItemVar][0] = 0;
			PlayerInfo[user][pItemID][0] = 0;
			if(IsPlayerAttachedObjectSlotUsed(user, 0))
			{
				RemovePlayerAttachedObject(user, 0);
			}
		}
		format(msg, sizeof(msg), "*** %s %s 移除了 %s 的所有武器.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user));
		SendMessageToAdmins(msg);

	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:ahide->adminhide;
COMMAND:adminhide(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    switch(GetPVarInt(playerid, "AdminHide")) {
			case 0: {
			    SetPVarInt(playerid, "AdminHide", 1);
				new msg[90];
				format(msg, sizeof(msg), "*** %s %s 将管理员状态隐藏.", GetAdminRank(playerid), GetNameWithSpace(playerid));
				SendMessageToAdmins(msg);
			}
			case 1: {
			    SetPVarInt(playerid, "AdminHide", 0);
				new msg[90];
    			format(msg, sizeof(msg), "*** %s %s 取消管理员状态隐藏.", GetAdminRank(playerid), GetNameWithSpace(playerid));
    			SendMessageToAdmins(msg);
			}
	    }
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:mhide->modhide;
COMMAND:modhide(playerid, params[]) {
    if(PlayerInfo[playerid][pModLevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    switch(GetPVarInt(playerid, "ModHide")) {
			case 0: {
			    SetPVarInt(playerid, "ModHide", 1);
				new msg[95];
				format(msg, sizeof(msg), "*** %s %s 将测试员状态隐藏.", GetModRank(playerid), GetNameWithSpace(playerid));
				SendMessageToModerators(msg);
			}
			case 1: {
			    SetPVarInt(playerid, "ModHide", 0);
				new msg[95];
    			format(msg, sizeof(msg), "*** %s %s 取消测试员状态隐藏.", GetModRank(playerid), GetNameWithSpace(playerid));
				SendMessageToModerators(msg);
			}
	    }
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:removeblacklist(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 4) {
    	new user[MAX_PLAYER_NAME];
		if(sscanf(params, "s[24]", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /removeblacklist [玩家ID]");
		new query[75],
		    msg[145];

		mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_usednames` WHERE `user` = '%e'", user);
		mysql_function_query(sqlHandle, query, false, "", "");
		format(msg, sizeof(msg), "*** %s %s 将 '%s' 从服务器黑名单中移除出去.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(user));
		SendMessageToAdmins(msg);

	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:maskid(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        new maskid;
        if(sscanf(params, "i", maskid)) return SendClientMessage(playerid, COLOR_GREY, "用法: /maskid [maskID]");
        new query[65];
        mysql_format(sqlHandle, query, sizeof(query), "SELECT `maskID` FROM `samp_users` WHERE `maskID` = %i", maskid);
        mysql_function_query(sqlHandle, query, true, "OnPlayerSearchMaskID", "ii", playerid, maskid);
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}


COMMAND:updatetime(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 4) {
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new Hour,
			Minute,
			Second,
			msg[100];

		gettime(Hour, Minute, Second);
	    format(msg, sizeof(msg), "AdmCmd: %s %s 更新了世界时间 (%i:%i).", GetAdminRank(playerid), GetNameWithSpace(playerid), Hour, Minute);
	    foreach(new i : Player) {
			if(GetPVarInt(i, "AdminJailed") != 0) {
				SetPlayerTime(i, 12, 0);
			} else {
				SetPlayerTime(i, Hour, Minute);
			}

			SendClientMessage(i, COLOR_LIGHTRED, msg);
		}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:tc->testerchat;
COMMAND:testerchat(playerid, params[]) {
	if(PlayerInfo[playerid][pModLevel] > 0) {
	    new message[128];
	    if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /testerchat [message]");
		new len = strlen(message);
		if(len + MAX_PLAYER_NAME + 21 > 128) {
		    new buffer[128];
		    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 21 - 4);
		    format(buffer, sizeof(buffer), "*** %s %s: %s ...", GetModRank(playerid), GetNameWithSpace(playerid), buffer);
		    strdel(message, 0, 128 - MAX_PLAYER_NAME - 21 - 4);
			format(message, sizeof(message), "*** %s %s: ... %s", GetModRank(playerid), GetNameWithSpace(playerid), message);
   			foreach(new i : Player) {
				if(PlayerInfo[i][pModLevel] > 0) {
				    SendClientMessage(i, COLOR_MODERATORS, buffer);
					SendClientMessage(i, COLOR_MODERATORS, message);
				}
			}
		} else {
            format(message, sizeof(message), "*** %s %s: %s", GetModRank(playerid), GetNameWithSpace(playerid), message);
      		SendMessageToModerators(message);
		}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:healthhack(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /healthhack [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new Float:health,
			msg[130];

		GetPlayerHealth(user, health);
		SetPlayerHealth(user, health - 1);
		format(msg, sizeof(msg), "*** %s (ID: %i): 尝试降低血量 %.2f 到 %.2f - 使用 /checkhealth.", GetNameWithSpace(user), user, health, health - 1);
		SendClientMessage(playerid, COLOR_WHITE, msg);
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:checkhealth(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /checkhealth [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new Float:health,
			msg[130];

		GetPlayerHealth(user, health);
		format(msg, sizeof(msg), "*** %s (ID: %i): %.2f HP.", GetNameWithSpace(user), user, health);
		SendClientMessage(playerid, COLOR_WHITE, msg);
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:setarmour(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new Float:armour,
			user;

		if(sscanf(params, "uf", user, armour)) return SendClientMessage(playerid, COLOR_GREY, "用法: /setarmour [玩家ID] [数值]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "if", user, armour);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
        new msgAdm[125],
			msgPlayer[100];

		SetPlayerArmourAndLimit(user, armour);
		format(msgAdm, sizeof(msgAdm), "*** %s %s 设置了 %s 的护甲到 %.0f.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), armour);
		format(msgPlayer, sizeof(msgPlayer), "*** %s %s 将你的护甲设置为 %.0f.", GetAdminRank(playerid), GetNameWithSpace(playerid), armour);
		SendClientMessage(user, COLOR_WHITE, msgPlayer);
		AdminMessageLog(msgAdm, playerid, "Set Armour");
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:testerhelp(playerid, params[])
{
    if(PlayerInfo[playerid][pModLevel] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	if(PlayerInfo[playerid][pModLevel] > 0)
	{
	    ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, "帮助中心: 测试员指令", GetHelpDialog(0), "关闭", "");
		SendClientMessage(playerid, COLOR_CONNECT, "测试员指令:{B5B5B5} /mt, /accepthelpme, /setage, /modhide, /forumname, /check, /checkip");
		SendClientMessage(playerid, COLOR_CONNECT, "测试员指令:{B5B5B5} /kick, /skick, /setint, /setvw, /setskin, /mduty, /stafflogin, /showtheway");
	}
	if(PlayerInfo[playerid][pModLevel] > 1)
	{
		SendClientMessage(playerid, COLOR_CONNECT, "测试员指令:{B5B5B5} /makemod, /kickmod");
	}
	return 1;
}
COMMAND:adminguide(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
    PlayerInfo[playerid][pAdminGuide] = 0;
    ShowPlayerDialog(playerid, DIALOG_ADMIN_GUIDE, DIALOG_STYLE_MSGBOX, "Administration Commands", GetHelpDialog(0, playerid), "Next level", "Okay");
	return 1;
}

ALTCOMMAND:ahelp->adminhelp;
COMMAND:adminhelp(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	if(PlayerInfo[playerid][pAdminlevel] > 0)
	{
	    ShowPlayerDialog(playerid, DIALOG_ADMIN_GUIDE, DIALOG_STYLE_MSGBOX, "Administration Commands", GetHelpDialog(0, playerid), "Next level", "Okay");
		SendClientMessage(playerid, COLOR_CONNECT, "Level 1 Administrator:{B5B5B5} /sethealth, /setarmour, /admintalk, /adminduty, /goto, /gethere");
	    SendClientMessage(playerid, COLOR_CONNECT, "Level 1 Administrator:{B5B5B5} /check, /getspeed, /acceptreport, /gotoloc, /trashreport, /slap");
	    SendClientMessage(playerid, COLOR_CONNECT, "Level 1 Administrator:{B5B5B5} /freeze, /unfreeze, /skick, /ban, /kick, /setfuel, /down, /healthhack");
	    SendClientMessage(playerid, COLOR_CONNECT, "Level 1 Administrator:{B5B5B5} /maskid, /checkhealth, /savepos, /loadpos, /setage, /stafflogin");
	    SendClientMessage(playerid, COLOR_CONNECT, "Level 1 Administrator:{B5B5B5} /mute, /unmute, /cancelinjury, /setskin, /forumname, /adminjail, /unjail");
	    SendClientMessage(playerid, COLOR_CONNECT, "Level 1 Administrator:{B5B5B5} /specoff, /checkweapons, /setint, /countdown, /afkers, /gotopos");
	    SendClientMessage(playerid, COLOR_CONNECT, "Level 1 Administrator:{B5B5B5} /checkitems, /setvw, /adminhide, /gotovehicle, /disarm, /staffchat");
	    SendClientMessage(playerid, COLOR_CONNECT, "Level 1 Administrator:{B5B5B5} /gotovehicle, /disarm, /staffchat, /weather, /gotobusiness, /sendtols, /jailacc");
	    SendClientMessage(playerid, COLOR_CONNECT, "Level 1 Administrator:{B5B5B5} /checkvehicle, /dice, /card, /showcard, /fixvehicle");
	}
	if(PlayerInfo[playerid][pAdminlevel] > 1)
	{
	    SendClientMessage(playerid, COLOR_CONNECT, "Level 2 Administrator:{B5B5B5} /checktrunk, /destroycar, /destroyallcars, /putinvehicle");
	    SendClientMessage(playerid, COLOR_CONNECT, "Level 2 Administrator:{B5B5B5} /unban, /unbanip, /gotohouse, /announcement, /setvhealth, /ck,");
	}
	if(PlayerInfo[playerid][pAdminlevel] > 3)
	{
		SendClientMessage(playerid, COLOR_CONNECT, "Level 4 Administrator:{B5B5B5} /spawncar, /banacc, /banip, /toggleooc, /createhouse, /deletehouse");
		SendClientMessage(playerid, COLOR_CONNECT, "Level 4 Administrator:{B5B5B5} /createbusiness, /deletebusiness, /setstats, /removeblacklist");
	}
	if(PlayerInfo[playerid][pAdminlevel] > 4)
	{
		SendClientMessage(playerid, COLOR_CONNECT, "Lead Administrator:{B5B5B5} /makemod, /msg, /changename, /backup, /updatetime, /removeitemtype, /setproperty, /payday");
		SendClientMessage(playerid, COLOR_CONNECT, "Lead Administrator:{B5B5B5} /promotemod, /demotemod, /kickmod");
	}
	if(PlayerInfo[playerid][pAdminlevel] > 5)
	{
		SendClientMessage(playerid, COLOR_CONNECT, "Server Management:{B5B5B5} /makeadmin, /demoteadmin, /kickadmin, /gmx, /setitem, /removeitemtype");
		SendClientMessage(playerid, COLOR_CONNECT, "Server Management:{B5B5B5} /interestrate, /savingsrate, /incometaxrate, /blacklistvehicle, /unblacklistvehicle");
		SendClientMessage(playerid, COLOR_CONNECT, "Server Management:{B5B5B5} /setnamechanges, /accountpass, /resstafflogin, /promoteadmin");
	}
	return 1;
}

ALTCOMMAND:destroyallshells->das;
COMMAND:das(playerid, params[])
{
	new msg[128];
    if(PlayerInfo[playerid][pAdminlevel] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	for(new shell = 0; shell != MAX_SHELLS; shell++)
	{
	    DestroyDynamic3DTextLabel(ShellInfo[shell][ShellCasing]);
     	ShellInfo[shell][shellDropped] = 0;
     	ShellInfo[shell][shellX] = 0.0;
     	ShellInfo[shell][shellY] = 0.0;
     	ShellInfo[shell][shellZ] = 0.0;
     	ShellInfo[shell][shellDropped] = 0;
	}
	format(msg, sizeof(msg), "*** %s 销毁了所有的弹壳.", GetNameWithSpace(playerid));
	SendMessageToAdmins(msg);
	return 1;
}

COMMAND:forumname(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new name[30];
		if(sscanf(params, "s[30]", name)) return SendClientMessage(playerid, COLOR_GREY, "用法: /forumname [Forum Name]");
		if(strlen(name) > 30) return SendClientMessage(playerid, COLOR_GREY, "请选择一个不超过30字节的论坛名字.");
		new msg[120];
		format(PlayerInfo[playerid][pForumName], 30, "%s", name);
		if(PlayerInfo[playerid][pAdminlevel] > 0) {
			format(msg, sizeof(msg), "*** %s %s 将社区名称设置为 '%s'.", GetAdminRank(playerid), GetNameWithSpace(playerid), PlayerInfo[playerid][pForumName]);
			SendMessageToAdmins(msg);
		} else {
            format(msg, sizeof(msg), "*** %s %s 将社区名称设置为 '%s'.", GetModRank(playerid), GetNameWithSpace(playerid), PlayerInfo[playerid][pForumName]);
            SendMessageToModerators(msg);
		}

		AdminMessageLog(msg, playerid, "Forum Name", 0);
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}
//==============================================================================
COMMAND:giverights(playerid, params[])//
{
	new usage[128], factionid, amount, string[128], query[150], msg[128];
	if(PlayerInfo[playerid][pAdminlevel] < 4) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
    if(sscanf(params, "s[128]I(0)I(0)", usage, factionid, amount)) SendClientMessage(playerid, COLOR_GREEN, "用法: /giverights [weapons(武器)/drugs(毒品)/scrap(偷车)] [组织ID] [级别]");
	else
	{
	    if(factionid < 6 || factionid > 10) return SendClientMessage(playerid, COLOR_LIGHTRED, "你只能选择在 6 到 10 之间的组织.");
	    if(strcmp(usage, "weapons", true) == 0)
		{
		    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_factions` SET `weapons` = %i WHERE `id` = %i", amount, factionid);
			mysql_function_query(sqlHandle, query, false, "", "");
		    if(amount > 3) return SendClientMessage(playerid, COLOR_LIGHTRED, "等级只能给予1-3之间.");
			if(PlayerInfo[playerid][pAdminlevel] > 5)
			{
	   			format(msg, sizeof(msg), "*** %s 将武器权限给予了组织ID: %i . (级别: %i)", GetNameWithSpace(playerid), factionid, amount);
	            SendMessageToAdmins(msg);
   			}
   			else
   			{
   			    format(string, sizeof(string), "你给予了组织ID: %d 武器权限. (级别: %i)", factionid, amount);
   				SendClientMessage(playerid, COLOR_LIGHTRED, string);
   			}
			FactionInfo[factionid][fRights_Weapons] = amount;
		}
		if(strcmp(usage, "drugs", true) == 0)
		{
		    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_factions` SET `drugs` = %i WHERE `id` = %i", amount, factionid);
			mysql_function_query(sqlHandle, query, false, "", "");
		    if(amount > 2) return SendClientMessage(playerid, COLOR_LIGHTRED, "等级只能给予1-2之间.");
			if(PlayerInfo[playerid][pAdminlevel] > 5)
			{
	   			format(msg, sizeof(msg), "*** %s 将毒品权限给予了组织ID: %i . (级别: %i)", GetNameWithSpace(playerid), factionid, amount);
	            SendMessageToAdmins(msg);
   			}
   			else
   			{
   			    format(string, sizeof(string), "你给予了组织ID: %d 毒品权限. (级别: %i)", factionid, amount);
   				SendClientMessage(playerid, COLOR_LIGHTRED, string);
   			}
			FactionInfo[factionid][fRights_Narcotics] = amount;
		}
		if(strcmp(usage, "scrap", true) == 0)
		{
		    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_factions` SET `scrap` = %i WHERE `id` = %i", amount, factionid);
			mysql_function_query(sqlHandle, query, false, "", "");
		    if(amount > 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "等级只能给予0-1之间.");
			if(PlayerInfo[playerid][pAdminlevel] > 5)
			{
	   			format(msg, sizeof(msg), "*** %s 将偷车权限给予了组织ID: %i . (级别: %i)", GetNameWithSpace(playerid), factionid, amount);
	            SendMessageToAdmins(msg);
   			}
   			else
   			{
   			    format(string, sizeof(string), "你给予了组织ID: %d 偷车权限. (级别: %i)", factionid, amount);
   				SendClientMessage(playerid, COLOR_LIGHTRED, string);
   			}
			FactionInfo[factionid][fRights_Scrap] = amount;
		}
	}
	return 1;
}

COMMAND:factionrights(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	SendClientMessage(playerid, COLOR_LIGHTRED, "武器: 1. 标准级别 | 2. 军用级别 | 3. 重型级别");
	SendClientMessage(playerid, COLOR_LIGHTRED, "毒品: 1. 制毒房 | 2. 制毒工厂");
	SendClientMessage(playerid, COLOR_LIGHTRED, "车辆销脏: 1. 销毁场");
	return 1;
}
COMMAND:factions(playerid, params[])
{
	format(gVar3000, sizeof(gVar3000), "%s", EOS);
	for(new i = 1; i != MAX_FACTIONS; i++)
	{
		if(!isnull(FactionInfo[i][fName]))
		{
			if(isnull(gVar3000))
			{
				format(gVar3000, sizeof(gVar3000), "%s", FactionInfo[i][fName]);
			}
			else
			{
				format(gVar3000, sizeof(gVar3000), "%s\n%s", gVar3000, FactionInfo[i][fName]);
			}
		}
	}
	ShowPlayerDialog(playerid, DIALOG_FACTIONS_VIEW, DIALOG_STYLE_LIST, "{FF9900}当前组织", gVar3000, "关闭", "");
    format(gVar3000, sizeof(gVar3000), "%s", EOS);
	return 1;
}
COMMAND:setfaction(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] > 4)
	{
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
	    for(new i = 1; i != MAX_FACTIONS; i++)
		{
	        if(!isnull(FactionInfo[i][fName]))
			{
		        if(isnull(gVar3000))
				{
		            format(gVar3000, sizeof(gVar3000), "%s", FactionInfo[i][fName]);
		        }
				else
				{
					format(gVar3000, sizeof(gVar3000), "%s\n%s", gVar3000, FactionInfo[i][fName]);
				}
			}
	    }

	    if(isnull(gVar3000))
		{
     		format(gVar3000, sizeof(gVar3000), "创建新组织");
     		//SendClientMessage(playerid, COLOR_LIGHTRED, "Do NOT create any new factions, don't reset factions. (RESET THEM MANUALLY)");
        }
		else
		{
			format(gVar3000, sizeof(gVar3000), "%s\n创建新组织", gVar3000);
			//SendClientMessage(playerid, COLOR_LIGHTRED, "Do NOT create any new factions, don't reset factions. (RESET THEM MANUALLY)");
		}

		ShowPlayerDialog(playerid, DIALOG_SETFACTION, DIALOG_STYLE_LIST, "{FF9900}组织管理", gVar3000, "选择", "取消");
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
	}
 	else if(PlayerInfo[playerid][pFaction] != 0 && (FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] > PlayerInfo[playerid][pRank] - 5))
	{
 	    if(PlayerInfo[playerid][pFaction] == 1 && PlayerInfo[playerid][pRank] < 16) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
        if(PlayerInfo[playerid][pFaction] == 2 && PlayerInfo[playerid][pRank] < 12) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
		ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n查看/编辑现有成员\n编辑公告消息\n编辑阶级名称\n组织聊天频道权限", "选择", "取消");
	}
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:spawncar(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new model,
			color1,
			color2,
			vehicle,
			Float:sX,
			Float:sY,
			Float:sZ,
			Float:sA,
			msgAdm[120],
			msgPlayer[88];

		if(sscanf(params, "iii", model, color1, color2)) return SendClientMessage(playerid, COLOR_GREY, "用法: /spawncar [Model] [Color 1] [Color 2]");
		if(model < 400 || model > 611) return SendClientMessage(playerid, COLOR_GREY, "Invalid vehicle model (Submitted vehicle model does not exist).");
		if(vehicleData[model - 400][blacklisted] != 0) return SendClientMessage(playerid, COLOR_GREY, "Invalid vehicle model (Submitted vehicle model is blacklisted).");
		if(color1 < 0 || color1 > 300 || color2 < 0 || color2 > 300) return SendClientMessage(playerid, COLOR_GREY, "Invalid vehicle color (Submitted vehicle color does not exist).");

		/* --- Retrieving Player-Data --- */

		GetPlayerPos(playerid, sX, sY, sZ);
		GetPlayerFacingAngle(playerid, sA);

		/* --- Creating vehicle + Locking vehicle --- */

		vehicle = CreateVehicle(model, sX, sY, sZ, sA, color1, color2, -1);
		LinkVehicleToInterior(vehicle, GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(vehicle, GetPlayerVirtualWorld(playerid));
		SetVehicleNumberPlate(vehicle, "ADMIN");
		SetVehicleParamsEx(vehicle, 1, 0, 0, 0, 0, 0, 0);
		if(DoesVehicleObtainHelmets(vehicle)) {
			spawncarlabel[vehicle] = CreateDynamic3DTextLabel("(( 工作组测试车辆 ))", COLOR_GOLD, 0, 0, 0.35, 50, INVALID_PLAYER_ID, vehicle);
		} else {
			spawncarlabel[vehicle] = CreateDynamic3DTextLabel("(( 工作组测试车辆 ))", COLOR_GOLD, 0, 0, 1, 50, INVALID_PLAYER_ID, vehicle);
		}

		if(IsAnEngineCar(vehicle)) {
			FuelTimerVar[vehicle] = SetTimerEx("FuelTimer", GM_FUELTIMER, true, "d", vehicle);
		}

		/* --- Setting Vehicle-Data --- */

		VehicleInfo[vehicle][vFuel] = vehicleData[model - 400][tank];
		VehicleInfo[vehicle][vX] = sX;
		VehicleInfo[vehicle][vY] = sY;
		VehicleInfo[vehicle][vZ] = sZ;
		VehicleInfo[vehicle][vA] = sA;
		VehicleInfo[vehicle][vFaction] = 0;
		VehicleInfo[vehicle][vColor1] = color1;
	 	VehicleInfo[vehicle][vColor2] = color2;
  		VehicleInfo[vehicle][vHealth] = 1000;
		VehicleInfo[vehicle][vType] = VEHICLE_ADMIN;
		VehicleInfo[vehicle][vModifications][8] = 1086;
		format(VehicleInfo[vehicle][vOwner], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][pName]);
		format(VehicleInfo[vehicle][vPlate], 10, "%s", "ADMIN");

		/* --- Setting player into vehicle --- */

		PutPlayerInVehicle(playerid, vehicle, 0);

		/* --- Messaging + Logging --- */

		format(msgAdm, sizeof(msgAdm), "*** %s %s 创建了一台 %i (Model: %s, vehID %i), 使用 /destroycar 进行销毁.", GetAdminRank(playerid), GetNameWithSpace(playerid), model, vehicleData[model - 400][typeName], vehicle);
		format(msgPlayer, sizeof(msgPlayer), "创建了一台 %i (vehID %i) - 使用 /destroycar 销毁", model, vehicle);
		SendClientMessage(playerid, COLOR_WHITE, msgPlayer);
		AdminMessageLog(msgAdm, playerid, "Spawn Vehicle");
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:check(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0){
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /check [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new lineStr[128],
			Float:X,
			Float:Y,
			Float:Z,
			Float:health,
			Float:armour;
			//level = floatround(floatsqroot(PlayerInfo[user][pScore]), floatround_floor),
		    //nextLevel = floatround(floatpower(level + 1, 2));

		/* --- Header --- */

		format(lineStr, sizeof(lineStr), "%s 信息:", GetNameWithSpace(user));
		SendClientMessage(playerid, COLOR_LIGHTGREEN, lineStr);

		/* --- Line 1 --- */

		format(lineStr, sizeof(lineStr), "现金 (来自客户端检测): [$%i], 现金 (来自服务器检测): [$%i], 存款: [$%i], 储蓄: [$%i], 年龄: [%i]", GetPlayerMoney(user), PlayerInfo[user][pMoney], PlayerInfo[user][pBank], PlayerInfo[user][pSavings], PlayerInfo[user][pAge]);
		SendClientMessage(playerid, COLOR_GREY, lineStr);

		/* --- Line 2 --- */
		
	        switch(PlayerInfo[user][pGender])
			{
	            case 1:
				{
    				format(lineStr, sizeof(lineStr), "性别: [男性], 时间分: [%i], 虚拟世界: [%i], Int: [%i], 管理员级别: [%i], 测试员级别: [%i], 捐赠阶级: [%d]", PlayerInfo[user][pScore], GetPlayerVirtualWorld(user), GetPlayerInterior(user), PlayerInfo[user][pAdminlevel], PlayerInfo[user][pModLevel], PlayerInfo[user][pDonateRank]);
				}
				case 2:
				{

					format(lineStr, sizeof(lineStr), "性别: [女性], 时间分: [%i], 虚拟世界: [%i], Int: [%i], 管理员级别: [%i], 测试员级别: [%i], 捐赠阶级: [%d]", PlayerInfo[user][pScore], GetPlayerVirtualWorld(user), GetPlayerInterior(user), PlayerInfo[user][pAdminlevel], PlayerInfo[user][pModLevel], PlayerInfo[user][pDonateRank]);
				}
				default:
				{
                    format(lineStr, sizeof(lineStr), "性别: [中性], 时间分: [%i], 虚拟世界: [%i], Int: [%i], 管理员级别: [%i], 测试员级别: [%i], 捐赠阶级: [%d]", PlayerInfo[user][pScore], GetPlayerVirtualWorld(user), GetPlayerInterior(user), PlayerInfo[user][pAdminlevel], PlayerInfo[user][pModLevel], PlayerInfo[user][pDonateRank]);
				}
			}

		SendClientMessage(playerid, COLOR_GREY, lineStr);

		/* --- Line 3 --- */

		if(PlayerInfo[user][pFaction] != 0) {
			format(lineStr, sizeof(lineStr), "组织: [%s], 阶级: [%s (%i)], 驾驶执照: [%s], 武器许可证: [%s]", FactionInfo[PlayerInfo[user][pFaction]][fName], GetFactionRank(user), PlayerInfo[user][pRank], (PlayerInfo[user][pDriveLic] != 0) ? ("Yes") : ("No"), (PlayerInfo[user][pWeaponLic] != 0) ? ("Yes") : ("No"));
		} else {
		    format(lineStr, sizeof(lineStr), "组织: [无], 阶级: [无], 驾驶执照: [%s], 武器许可证: [%s]", (PlayerInfo[user][pDriveLic] != 0) ? ("Yes") : ("No"), (PlayerInfo[user][pWeaponLic] != 0) ? ("Yes") : ("No"));
		}

		SendClientMessage(playerid, COLOR_GREY, lineStr);

		/* --- Line 4 --- */

		for(new h = 0; h != MAX_HOUSES; h++) {
		    if(!isnull(HouseInfo[h][hOwner]) && strcmp(HouseInfo[h][hOwner], PlayerInfo[user][pName]) == 0) {
				if(HouseInfo[h][hRentalFee] > 0) {
				    format(lineStr, sizeof(lineStr), "[房产] 拥有人: [%s], 信息: [%s], 是否可租用: [是], 租费: [%i], 数据库ID: [%i]", GetNameWithSpace(user), (HouseInfo[h][hLocked] == 0) ? ("未锁门") : ("已锁门"), HouseInfo[h][hRentalFee], HouseInfo[h][hID]);
				} else {
				    format(lineStr, sizeof(lineStr), "r[房产] 拥有人: [%s], 信息: [%s], 是否可租用: [否], 数据库ID: [%i]", GetNameWithSpace(user), (HouseInfo[h][hLocked] == 0) ? ("未锁门") : ("已锁门"), HouseInfo[h][hID]);
				}

				SendClientMessage(playerid, COLOR_GREY, lineStr);
		        break;
		    }
		}

		/* --- Line 5 --- */

		if(PlayerInfo[user][pRentHouse] != 0) {
			format(lineStr, sizeof(lineStr), "[租房] 拥有人: [%s], 信息: [%s], 租金: [%i], 数据库ID: [%i]", GetNameWithSpaceEx(HouseInfo[PlayerInfo[user][pRentHouse]][hOwner]), (HouseInfo[PlayerInfo[user][pRentHouse]][hLocked] == 0) ? ("未锁门") : ("已锁门"), HouseInfo[PlayerInfo[user][pRentHouse]][hRentalFee], HouseInfo[PlayerInfo[user][pRentHouse]][hID]);
			SendClientMessage(playerid, COLOR_GREY, lineStr);
		}

		/* --- Line 6 --- */

		for(new b = 0; b != MAX_BUSINESSES; b++) {
		    if(!isnull(BusinessInfo[b][bOwner]) && strcmp(BusinessInfo[b][bOwner], PlayerInfo[user][pName]) == 0) {
				format(lineStr, sizeof(lineStr), "[产业] 名称: [%s], 拥有人: [%s], 信息: [%s], 入场费: [$%i], 数据库ID: [%i]", BusinessInfo[b][bName], GetNameWithSpace(user), (BusinessInfo[b][bLocked] == 0) ? ("未锁门") : ("已锁门"), BusinessInfo[b][bFee], BusinessInfo[b][bID]);
				SendClientMessage(playerid, COLOR_GREY, lineStr);
				break;
			}
		}

		/* --- Line 7 --- */

		switch(PlayerInfo[user][pJob]) {
			case 0: {
				format(lineStr, sizeof(lineStr), "工作: [失业], 更名卡: [%i], IP: [%s], 管理员CP: [%i] 看守时间: [%i 分], 监狱时间: [%i 分], 角色状态: [%s]", PlayerInfo[user][pNamechanges], PlayerInfo[user][pIP], PlayerInfo[user][pAJCPs], GetPVarInt(user, "Arrest"), PlayerInfo[user][pPrisonTime], (GetPVarInt(playerid, "Death") != 0) ? ("已死亡") : ("存活着的"));
			}
			case 1: {
				format(lineStr, sizeof(lineStr), "工作: [垃圾收集工], 更名卡: [%i], IP: [%s], 管理员CP: [%i] 看守时间: [%i 分], 监狱时间: [%i 分], 角色状态: [%s]", PlayerInfo[user][pNamechanges], PlayerInfo[user][pIP], PlayerInfo[user][pAJCPs], GetPVarInt(user, "Arrest"), PlayerInfo[user][pPrisonTime], (GetPVarInt(playerid, "Death") != 0) ? ("已死亡") : ("存活着的"));
			}
			case 2: {
				format(lineStr, sizeof(lineStr), "工作: [披萨外卖员], 更名卡: [%i], IP: [%s], 管理员CP: [%i] 看守时间: [%i 分], 监狱时间: [%i 分], 角色状态: [%s]", PlayerInfo[user][pNamechanges], PlayerInfo[user][pIP], PlayerInfo[user][pAJCPs], GetPVarInt(user, "Arrest"), PlayerInfo[user][pPrisonTime], (GetPVarInt(playerid, "Death") != 0) ? ("已死亡") : ("存活着的"));
			}
			case 3: {
			    format(lineStr, sizeof(lineStr), "工作: [物流师], 更名卡: [%i], IP: [%s], 管理员CP: [%i] 看守时间: [%i 分], 监狱时间: [%i 分], 角色状态: [%s]", PlayerInfo[user][pNamechanges], PlayerInfo[user][pIP], PlayerInfo[user][pAJCPs], GetPVarInt(user, "Arrest"), PlayerInfo[user][pPrisonTime], (GetPVarInt(playerid, "Death") != 0) ? ("已死亡") : ("存活着的"));
			}
			case 4: {
		    format(lineStr, sizeof(lineStr), "工作: [盗贼], 更名卡: [%i], IP: [%s], 管理员CP: [%i] 看守时间: [%i 分], 监狱时间: [%i 分], 角色状态: [%s]", PlayerInfo[user][pNamechanges], PlayerInfo[user][pIP], PlayerInfo[user][pAJCPs], GetPVarInt(user, "Arrest"), PlayerInfo[user][pPrisonTime], (GetPVarInt(playerid, "Death") != 0) ? ("已死亡") : ("存活着的"));
			}
			default: {
			    format(lineStr, sizeof(lineStr), "工作: [未知], 更名卡: [%i], IP: [%s], 管理员CP: [%i] 看守时间: [%i 分], 监狱时间: [%i 分], 角色状态: [%s]", PlayerInfo[user][pNamechanges], PlayerInfo[user][pIP], PlayerInfo[user][pAJCPs], GetPVarInt(user, "Arrest"), PlayerInfo[user][pPrisonTime], (GetPVarInt(playerid, "Death") != 0) ? ("已死亡") : ("存活着的"));
			}
		}

		SendClientMessage(playerid, COLOR_GREY, lineStr);

		/* --- Line 8 --- */

		for(new i = 0; i != MAX_VEHICLES; i++) {
		    if(IsValidVehicle(i) && strcmp(VehicleInfo[i][vOwner], PlayerInfo[user][pName]) == 0 && !isnull(VehicleInfo[i][vOwner])) {
				format(lineStr, sizeof(lineStr), "游戏车辆: [%s], 数据库ID: [%i], 颜色1: [%i], 颜色2: [%i], 类型: [%s]", vehicleData[GetVehicleModel(i) - 400][typeName], i, VehicleInfo[i][vColor1], VehicleInfo[i][vColor2], GetVehicleTypeName(VehicleInfo[i][vType]));
				SendClientMessage(playerid, COLOR_GREY, lineStr);
		    }
		}

		/* --- Line 9 --- */

		GetPlayerHealth(user, health);
		GetPlayerArmour(user, armour);
		GetPlayerPos(user, X, Y, Z);
		format(lineStr, sizeof(lineStr), "基址. X: [%.2f], 基址. Y: [%.2f], 基址. Z: [%.2f], 生命值: [%.2f], 护甲: [%.2f]", X, Y, Z, health, armour);
		SendClientMessage(playerid, COLOR_GREY, lineStr);
		
		/* --- Line 10 --- */
		
		if(GetPVarInt(user, "Specate") != 0)
		{
		    if(IsPlayerConnected(GetPVarInt(user, "Specate")))
			{
				format(lineStr, sizeof(lineStr), "SPEC. P: [%s]", PlayerInfo[GetPVarInt(user, "Specate")][pName]);
                SendClientMessage(playerid, COLOR_GREY, lineStr);
			}
		}
    }
	else
	{
 		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:checkip(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new ip[16],
			infoMsg[70],
			check = 0;

	    if(sscanf(params, "s[16]", ip)) return SendClientMessage(playerid, COLOR_GREY, "用法: /checkip [ip]");
	    foreach(new i : Player) {
	        if(!isnull(PlayerInfo[i][pIP]) && strfind(PlayerInfo[i][pIP], ip) != -1) {
	            check = 1;
	            format(infoMsg, sizeof(infoMsg), "%s [ID: %i] | IP: %s", GetNameWithSpace(i), i, PlayerInfo[i][pIP]);
	            SendClientMessage(playerid, COLOR_GREY, infoMsg);
	        }
	    }

		if(check == 0) {
			SendClientMessage(playerid, COLOR_GREY, "没有人使用该IP链接.");
		}
    } else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:makeadmin(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 5) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /makeadmin [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(PlayerInfo[user][pAdminlevel] > 0) return SendClientMessage(playerid, COLOR_GREY, "该玩家已经是管理员了.");
        new msgAdm[115],
			msgPlayer[100];

		format(msgPlayer, sizeof(msgPlayer), "*** %s %s 提升你为管理员.", GetAdminRank(playerid), GetNameWithSpace(playerid));
		format(msgAdm, sizeof(msgAdm), "*** %s %s 提升 %s 成为管理员.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user));
		AdminMessageLog(msgAdm, playerid, "Make Admin");
		SendClientMessage(user, COLOR_GOLD, msgPlayer);
		PlayerInfo[user][pAdminlevel] = 1;
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:makemod(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 4 || PlayerInfo[playerid][pModLevel] >= 2) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /makemod [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(PlayerInfo[user][pModLevel] > 0) return SendClientMessage(playerid, COLOR_GREY, "该玩家已经是测试员了.");
        new msg[115];
		if(PlayerInfo[playerid][pAdminlevel] > 4) {
			format(msg, sizeof(msg), "*** %s %s 提升你为测试员.", GetAdminRank(playerid), GetNameWithSpace(playerid));
		} else {
		    format(msg, sizeof(msg), "*** %s %s 提升你为测试员.", GetModRank(playerid), GetNameWithSpace(playerid));
		}
		
		SendClientMessage(user, COLOR_MODERATORS, msg);
		if(PlayerInfo[playerid][pAdminlevel] > 4) {
			format(msg, sizeof(msg), "*** %s %s 提升 %s 成为测试员.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user));
		} else {
		    format(msg, sizeof(msg), "*** %s %s 提升 %s 成为测试员.", GetModRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user));
		}
		
		AdminMessageLog(msg, playerid, "MAKEMOD", 0);
		foreach(new i : Player) {
  			if(PlayerInfo[i][pAdminlevel] > 0) {
        		SendClientMessage(i, COLOR_GOLD, msg);
	    	} else if(PlayerInfo[i][pModLevel] > 0) {
                SendClientMessage(i, COLOR_MODERATORS, msg);
	    	}
		}

		PlayerInfo[user][pModLevel] = 1;
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:aduty->adminduty;
COMMAND:adminduty(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] > 0)
	{
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    switch(GetPVarInt(playerid, "AdminDuty"))
		{
	        case 0:
			{
	            new msg[90];
				SetPlayerColor(playerid, 0x4e6c8200);
				SetPVarInt(playerid, "AdminDuty", 1);
				format(msg, sizeof(msg), "*** %s %s 开启管理状态.", GetAdminRank(playerid), GetNameWithSpace(playerid));
				AdminMessageLog(msg, playerid, "Admin Duty");
			}
			default: {
			    new msg[90];
				SetPVarInt(playerid, "AdminDuty", 0);
				UpdatePlayerColor(playerid);
    			format(msg, sizeof(msg), "*** %s %s 关闭管理状态.", GetAdminRank(playerid), GetNameWithSpace(playerid));
                AdminMessageLog(msg, playerid, "Admin Duty");
			}
		}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:stafflogin(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") != 1){
		    if(!isnull(PlayerInfo[playerid][pStaffPassword])) {
		    	ShowPlayerDialog(playerid, DIALOG_STAFFLOGIN, DIALOG_STYLE_PASSWORD, "{FF9900}登录到工作组账户", "请输入您所拥有的工作组私人密码进行登录 (错误5次将会锁定账户以及IP地址):", "登录", "取消");
			} else {
			    ShowPlayerDialog(playerid, DIALOG_CREATESTAFFLOGIN, DIALOG_STYLE_PASSWORD, "{FF9900}注册工作组账户", "你还没有工作组账户, 请输入一个密码进行注册:", "提交", "取消");
			}
		} else {
		    SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你之前已经登录过了.");
		}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:ar->acceptreport;
COMMAND:acceptreport(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /acceptreport [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    if(GetPVarInt(user, "Report") != 1) return SendClientMessage(playerid, COLOR_GREY, "该玩家还没有发送报告.");
		new playerMsg[100],
			adminMsg[115];

		SetPVarInt(user, "Report", 0);
		format(playerMsg, sizeof(playerMsg), "REPORT: %s %s (ID: %i) 正在关注你的举报内容.", GetAdminRank(playerid), GetNameWithSpace(playerid), playerid);
		format(adminMsg, sizeof(adminMsg), "REPORT: %s %s 接受了 %s (ID: %i) 的举报.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), user);
		SendClientMessage(user, COLOR_LIGHTRED, playerMsg);
		AdminMessageLog(adminMsg, playerid, "Acceptreport");
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:ah->accepthelpme;
COMMAND:accepthelpme(playerid, params[]) {
	if(PlayerInfo[playerid][pModLevel] > 0 || PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /accepthelpme [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    if(GetPVarInt(user, "Helpme") != 1) return SendClientMessage(playerid, COLOR_GREY, "对方还没有发布请求.");
		new msg[128];
		SetPVarInt(user, "Helpme", 0);
		if(PlayerInfo[playerid][pAdminlevel] > 0 && PlayerInfo[playerid][pModLevel] == 0) {
			format(msg, sizeof(msg), "HELPME: %s %s (ID: %i) 接受了你的请求.", GetAdminRank(playerid), GetNameWithSpace(playerid), playerid);
			SendClientMessage(user, COLOR_OOC, msg);
			format(msg, sizeof(msg), "HELPME: %s %s 接受了 %s (ID: %i) 的帮助请求.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), user);
		} else {
			format(msg, sizeof(msg), "HELPME: %s %s (ID: %i) 接受了你的请求.", GetModRank(playerid), GetNameWithSpace(playerid), playerid);
			SendClientMessage(user, COLOR_OOC, msg);
			format(msg, sizeof(msg), "HELPME: %s %s 接受了 %s (ID: %i) 的帮助请求.", GetModRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), user);
		}
		
 		foreach(new i : Player) {
		 	if(PlayerInfo[playerid][pAdminlevel] > 0 && PlayerInfo[playerid][pModLevel] == 0 && PlayerInfo[i][pAdminlevel] > 0) {
		 	    SendClientMessage(i, COLOR_GOLD, msg);
		 	} else if(PlayerInfo[i][pModLevel] > 0) {
		 	    SendClientMessage(i, COLOR_MODERATORS, msg);
		 	}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:tr->trashreport;
COMMAND:trashreport(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user,
			reason[128];

	    if(sscanf(params, "us[128]", user, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /trashreport [玩家ID] [原因]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "is[128]", user, reason);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    if(GetPVarInt(user, "Report") != 1) return SendClientMessage(playerid, COLOR_GREY, "对方还没有发布请求.");
		new playerMsg[128],
			adminMsg[115],
			reasonMsg[128];

		SetPVarInt(user, "Report", 0);
		format(playerMsg, sizeof(playerMsg), "REPORT: %s %s (ID: %i) 拒绝了你的请求, 原因: %s", GetAdminRank(playerid), GetNameWithSpace(playerid), playerid, reason);
		format(adminMsg, sizeof(adminMsg), "REPORT: %s %s 拒绝了 %s (ID: %i) 的请求.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), user);
		format(reasonMsg, sizeof(reasonMsg), "REPORT: 原因: %s", reason);
		SendClientMessage(user, COLOR_OOC, playerMsg);
		foreach(new i : Player) {
		    if(PlayerInfo[i][pAdminlevel] > 0) {
			    SendClientMessage(i, COLOR_GOLD, adminMsg);
			    SendClientMessage(i, COLOR_GOLD, reasonMsg);
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:th->trashhelpme;
COMMAND:trashhelpme(playerid, params[]) {
    if(PlayerInfo[playerid][pModLevel] > 0 || PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user,
			reason[128];

	    if(sscanf(params, "us[128]", user, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /trashhelpme [玩家ID] [原因]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "is[128]", user, reason);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    if(GetPVarInt(user, "Helpme") != 1) return SendClientMessage(playerid, COLOR_GREY, "对方还没有发布请求.");
		new msg[128],
			reasonMsg[128];

		SetPVarInt(user, "Helpme", 0);
		if(PlayerInfo[playerid][pAdminlevel] > 0 && PlayerInfo[playerid][pModLevel] == 0) {
			format(msg, sizeof(msg), "HELPME: %s %s (ID: %i) 拒绝了你的请求, 原因: %s", GetAdminRank(playerid), GetNameWithSpace(playerid), playerid, reason);
			SendClientMessage(user, COLOR_OOC, msg);
			format(msg, sizeof(msg), "HELPME: %s %s 拒绝了 %s (ID: %i) 的请求.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), user);
		} else {
		    format(msg, sizeof(msg), "HELPME: %s %s (ID: %i) 拒绝了你的请求, 原因: %s", GetModRank(playerid), GetNameWithSpace(playerid), playerid, reason);
			SendClientMessage(user, COLOR_OOC, msg);
			format(msg, sizeof(msg), "HELPME: %s %s 拒绝了 %s (ID: %i) 的请求.", GetModRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), user);
		}
		
		format(reasonMsg, sizeof(reasonMsg), "HELPME: 原因: %s", reason);
		foreach(new i : Player) {
		    if(PlayerInfo[playerid][pAdminlevel] > 0 && PlayerInfo[playerid][pModLevel] == 0 && PlayerInfo[i][pAdminlevel] > 0) {
		        SendClientMessage(i, COLOR_GOLD, msg);
			    SendClientMessage(i, COLOR_GOLD, reasonMsg);
		    } else if(PlayerInfo[i][pModLevel] > 0) {
			    SendClientMessage(i, COLOR_MODERATORS, msg);
			    SendClientMessage(i, COLOR_MODERATORS, reasonMsg);
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:weather(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new wid;
	    if(sscanf(params, "i", wid)) return SendClientMessage(playerid, COLOR_GREY, "用法: /weather [weatherID]");
	    if(wid < 0 || wid > 45) return SendClientMessage(playerid, COLOR_GREY, "天气ID需要在0-45之间.");
	    new msg[100];
	    SetWeather(wid);
	    gWeather = wid;
	    format(msg, sizeof(msg), "*** %s %s 将天气ID设置为 %i.", GetAdminRank(playerid), GetNameWithSpace(playerid), wid);
		SendMessageToAdmins(msg);

	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:namechange(playerid, params[])
{
	if(PlayerInfo[playerid][pNamechanges] > 0 || PlayerInfo[playerid][pMoney] > 24999)
	{
		new name[MAX_PLAYER_NAME],
		    query[75];

	    if(sscanf(params, "s[24]", name)) return SendClientMessage(playerid, COLOR_GREY, "用法: /namechange [游戏名称]");
		if(GetPVarInt(playerid, "AdminJailed") != 0) return SendClientMessage(playerid, COLOR_GREY, "目前你无法进行更名, 你需要离开监狱");
		if(!IsValidPlayerName(name)) return SendClientMessage(playerid, COLOR_GREY, "请根据 Firstname_Lastname 格式进行名称选择.");
		mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_users` WHERE `user` = '%e'", name);
		mysql_function_query(sqlHandle, query, true, "OnPlayerCommandChangeName", "is", playerid, name);
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要25,000$才能更名");
	}
	return 1;
}

COMMAND:changename(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 4) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user,
			name[MAX_PLAYER_NAME],
			query[75];

		if(sscanf(params, "us[24]", user, name)) return SendClientMessage(playerid, COLOR_GREY, "用法: /changename [玩家ID] [游戏名称]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "is[30]", user, name);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(GetPVarInt(user, "AdminJailed") != 0) return SendClientMessage(playerid, COLOR_GREY, "对方需要先离开监狱.");
		if(!IsValidPlayerName(name)) return SendClientMessage(playerid, COLOR_GREY, "请根据 Firstname_Lastname 格式进行名称选择.");
		mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_users` WHERE `user` = '%e'", name);
		mysql_function_query(sqlHandle, query, true, "OnCommandChangeName", "isi", playerid, name, user);
	} else {
 		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:getspeed(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] > 0)
	{
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /getspeed [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new admMsg[120];
		if(IsPlayerInAnyVehicle(user))
		{
			new vehicle = GetPlayerVehicleID(user),
				speed = GetVehicleSpeed(vehicle);

		    format(admMsg, sizeof(admMsg), "*** %s (ID: %i) is %i km/h (车辆: %s).", GetNameWithSpace(user), user, speed, vehicleData[GetVehicleModel(vehicle) - 400][typeName]);
		    SendClientMessage(playerid, COLOR_WHITE, admMsg);
		}
		else
		{
		    new speed = GetPlayerSpeed(user);
			format(admMsg, sizeof(admMsg), "*** %s (ID: %i) is %i km/h (步行).", GetNameWithSpace(user), user, speed);
		    SendClientMessage(playerid, COLOR_WHITE, admMsg);
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:setint(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user,
			interior;

		if(sscanf(params, "ui", user, interior)) return SendClientMessage(playerid, COLOR_GREY, "用法: /setint [玩家ID] [interior]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "ii", user, interior);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new admMsg[128];
		SetPlayerInterior(user, interior);
		if(PlayerInfo[playerid][pAdminlevel] == 0) {
			format(admMsg, sizeof(admMsg), "*** %s %s 设置了 %s 内饰ID到 %i.", GetModRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), interior);
		} else {
			format(admMsg, sizeof(admMsg), "*** %s %s 设置了 %s 内饰ID到 %i.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), interior);
		}

		foreach(new i : Player) {
      		if(PlayerInfo[i][pAdminlevel] > 0) {
			    SendClientMessage(i, COLOR_GOLD, admMsg);
			} else if(PlayerInfo[i][pModLevel] > 0 && PlayerInfo[playerid][pAdminlevel] == 0) {
			    SendClientMessage(i, COLOR_MODERATORS, admMsg);
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:setvw(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user,
			world;

		if(sscanf(params, "ui", user, world)) return SendClientMessage(playerid, COLOR_GREY, "用法: /setvw [玩家ID] [world]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "ii", user, world);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new msg[110];
		SetPlayerVirtualWorld(user, world);
		if(PlayerInfo[playerid][pAdminlevel] == 0) {
			format(msg, sizeof(msg), "*** %s %s 设置了 %s 世界ID到 %i.", GetModRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), world);
		} else {
			 format(msg, sizeof(msg), "*** %s %s 设置了 %s 世界ID到 %i.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), world);
		}

		foreach(new i : Player) {
      		if(PlayerInfo[i][pAdminlevel] > 0) {
			    SendClientMessage(i, COLOR_GOLD, msg);
			} else if(PlayerInfo[i][pModLevel] > 0 && PlayerInfo[playerid][pAdminlevel] == 0) {
			    SendClientMessage(i, COLOR_MODERATORS, msg);
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:skick(playerid, params[]) {//
	if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user,
			reason[128];

	    if(sscanf(params, "us[128]", user, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /skick [玩家ID] [原因]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "is[128]", user, reason);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(PlayerInfo[user][pAdminlevel] > PlayerInfo[playerid][pAdminlevel]) return SendClientMessage(playerid, COLOR_LIGHTRED, "你没有权限对该玩家使用.");
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    new msg[410];
	    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    	format(msg, sizeof(msg), "*** 你被 %s %s 请出服务器, 原因:[%s]", GetAdminRank(playerid), GetNameWithSpace(playerid), reason);
	    	SendClientMessage(user, COLOR_WHITE, msg);
	    	format(msg, sizeof(msg), "*** %s 被 %s %s 请出服务器 (/skick), 原因:[%s]", GetNameWithSpace(user), GetAdminRank(playerid), GetNameWithSpace(playerid), reason);
		} else {
		    format(msg, sizeof(msg), "*** 你被 %s %s 请出服务器, 原因:[%s]", GetModRank(playerid), GetNameWithSpace(playerid), reason);
		    SendClientMessage(user, COLOR_WHITE, msg);
	   		format(msg, sizeof(msg), "*** %s 被 %s %s 请出服务器 (/skick), 原因:[%s]", GetNameWithSpace(user), GetModRank(playerid), GetNameWithSpace(playerid), reason);
		}

        foreach(new i : Player) {
		    if(PlayerInfo[i][pAdminlevel] > 0) {
			    SendClientMessage(i, COLOR_GOLD, msg);
			} else if(PlayerInfo[i][pModLevel] > 0 && PlayerInfo[playerid][pAdminlevel] == 0) {
			    SendClientMessage(i, COLOR_MODERATORS, msg);
			}
		}
		
	    KickLog(user, PlayerInfo[playerid][pName], reason);
	    KickDelay(user);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:freeze(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /freeze [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new admMsg[100];
  		FreezePlayer(user);
		GameTextForPlayer(user, "~r~Frozen", 3000, 1);
		format(admMsg, sizeof(admMsg), "*** %s %s 冻结了 %s (ID: %i) 角色操作.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), user);
		SendMessageToAdmins(admMsg);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:unfreeze(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /unfreeze [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new admMsg[105];
		UnfreezePlayer(user);
		GameTextForPlayer(user, "~g~Unfrozen", 3000, 1);
		if(PlayerInfo[playerid][pAdminlevel] > 0) {
			format(admMsg, sizeof(admMsg), "*** %s %s 解开对 %s (ID: %i) 角色冻结.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), user);
		} else {
			format(admMsg, sizeof(admMsg), "*** %s %s 解开对 %s (ID: %i) 角色冻结.", GetModRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), user);
		}

        foreach(new i : Player) {
		    if(PlayerInfo[i][pAdminlevel] > 0) {
			    SendClientMessage(i, COLOR_GOLD, admMsg);
			} else if(PlayerInfo[i][pModLevel] > 0 && PlayerInfo[playerid][pAdminlevel] == 0) {
			    SendClientMessage(i, COLOR_MODERATORS, admMsg);
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:setitem(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 5)
	{
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        new user,
			item,
			var;

        if(sscanf(params, "uii", user, item, var)) return SendClientMessage(playerid, COLOR_GREY, "用法: /setitem [玩家ID] [物品ID] [物品值]");
        if(user == INVALID_PLAYER_ID) sscanf(params, "iii", user, item, var);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
        if(item == 0) return SendClientMessage(playerid, COLOR_GREY, "物品ID不能低于0.");
        if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
        if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
        if(item > sizeof(items) - 1) return SendClientMessage(playerid, COLOR_GREY, "该物品不存在, 请选择其他物品ID.");
        if(PlayerInfo[user][pItemType][items[item][iIdx]] != 0 && items[item][storable] == 0) return SendClientMessage(playerid, COLOR_GREY, "该玩家已经有一个物品在手上.");
        if(item >= 4 && item <= 13) return SendClientMessage(playerid, COLOR_GREY, "你不能使用该指令来给予玩家手机");
		if(items[item][itemType] == ITEM_WEAPON && (var > WeaponData[items[item][weaponID]][ammoSize] || var < 0)) return SendClientMessage(playerid, COLOR_GREY, "该武器不能承载这么多子弹.");
		if(item == 242 && (var > 1 || var < 0)) return SendClientMessage(playerid, COLOR_GREY, "电击枪需要该用户自己充能.");
		new admMsg[180],
			playerMsg[130];
		
		format(admMsg, sizeof(admMsg), "*** %s %s 给了 %s 一个物品: %s (变量: %i).", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), items[item][itemName], var);
		format(playerMsg, sizeof(playerMsg), "*** %s %s 给了你一个物品: %s (变量: %i).", GetAdminRank(playerid), GetNameWithSpace(playerid), items[item][itemName], var);
		SendClientMessage(user, COLOR_WHITE, playerMsg);
		SendMessageToAdmins(admMsg);
  		SetPlayerItem(user, item, var);
    }
	else
	{
        SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
    }

	return 1;
}


COMMAND:checkitems(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /checkitems [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    new pItems[22],
			dialogMsg[850];

        SetPVarInt(playerid, "CheckItemsUser", user);
		getItemPage(user, pItems, sizeof(pItems), 1);
		if(pItems[0] != 0) {
			for(new i = 0; i != sizeof(pItems); i++) {
				if(pItems[i] == 0) {
					break;
				}

				if(isnull(dialogMsg)) {
				    if(pItems[i] >= 4 && pItems[i] <= 13) {
						format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(user, i));
					} else if(pItems[i] == 3) {
	    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(user, i));
					} else if(pItems[i] == 17) {
					    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(user, i));
					} else if(pItems[i] == 18) {
					    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(user, i));
					} else if(pItems[i] == 19) {
					    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(user, i));
                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				    	format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
					} else {
					    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
					}
				} else {
					if(pItems[i] >= 4 && pItems[i] <= 13) {
						format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
					} else if(pItems[i] == 3) {
	    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
					} else if(pItems[i] == 17) {
					    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
					} else if(pItems[i] == 18) {
					    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
					} else if(pItems[i] == 19) {
					    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				   		format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
					} else {
					    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
					}
				}

				if(getItemID(user, i) == PlayerInfo[user][pItemID][items[pItems[i]][iIdx]]) {
				    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
				}
			}

			if(itemIndexExists(user, 21)) {
				format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
			}

	        SetPVarInt(playerid, "CurrentItemPage", 1);
			ShowPlayerDialog(playerid, DIALOG_CHECKITEMS, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "选择", "取消");
		} else {
			SendClientMessage(playerid, COLOR_GREY, "该玩家没有任何物品.");
		}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}



COMMAND:removeitem(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 4) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user,
	        id;

		if(sscanf(params, "ui", user, id)) return SendClientMessage(playerid, COLOR_GREY, "用法: /removeitem [玩家ID] [ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "ii", user, id);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
        if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new msg[115],
		    playerMsg[85],
			query[95];

		for(new i = 0; i != 10; i++) {
			if(PlayerInfo[user][pItemID][i] == id) {
				PlayerInfo[user][pItemVar][i] = 0;
				PlayerInfo[user][pItemType][i] = 0;
				PlayerInfo[user][pItemIndex][i] = 0;
				PlayerInfo[user][pItemID][i] = 0;
				if(i != 10) {
					RemovePlayerAttachedObject(user, i);
					if(items[PlayerInfo[user][pItemType][i]][itemType] == ITEM_WEAPON) {
						ResetPlayerWeapons(user);
					}
				}
			}
		}

		mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `owner` = '%e' AND `id` = %i", PlayerInfo[user][pName], id);
		mysql_function_query(sqlHandle, query, false, "", "");
		RemovePlayerItemEx(user, id);
		format(playerMsg, sizeof(playerMsg), "*** %s %s 将物品ID: %i 从你的背包里删除.", GetAdminRank(playerid), GetNameWithSpace(playerid), id);
		format(msg, sizeof(msg), "*** %s %s 将物品ID %i 从 %s 角色里移除.", GetAdminRank(playerid), GetNameWithSpace(playerid), id, GetNameWithSpace(user));
		SendClientMessage(user, COLOR_WHITE, playerMsg);
        SendMessageToAdmins(msg);

	} else {
        SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
    }

	return 1;
}

COMMAND:removeitemtype(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 5) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user,
	        type;

		if(sscanf(params, "ui", user, type)) return SendClientMessage(playerid, COLOR_GREY, "用法: /removeitemtype [玩家ID] [itemType]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "ii", user, type);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
        if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
        if(type > sizeof(items) - 1) return SendClientMessage(playerid, COLOR_GREY, "该物品ID不存在.");
		new msg[125],
		    playerMsg[150],
			query[90];

		if(PlayerInfo[user][pItemType][items[type][iIdx]] == type) {
			PlayerInfo[user][pItemVar][items[type][iIdx]] = 0;
			PlayerInfo[user][pItemType][items[type][iIdx]] = 0;
			PlayerInfo[user][pItemIndex][items[type][iIdx]] = 0;
			PlayerInfo[user][pItemID][items[type][iIdx]] = 0;
			RemovePlayerAttachedObject(user, items[type][iIdx]);
			if(items[type][itemType] == ITEM_WEAPON) {
				ResetPlayerWeapons(user);
			}
		}

		mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `owner` = '%e' AND `item` = %i", PlayerInfo[user][pName], type);
		mysql_function_query(sqlHandle, query, false, "", "");
		RemovePlayerItemTypeEx(user, type);
		format(playerMsg, sizeof(playerMsg), "*** %s %s 从你的角色内移除了所有类型 '%s' 的物品.", GetAdminRank(playerid), GetNameWithSpace(playerid), items[type][itemName]);
		format(msg, sizeof(msg), "*** %s %s 将所有类型为 '%s' 的物品从 %s 角色里移除.", GetAdminRank(playerid), GetNameWithSpace(playerid), items[type][itemName], GetNameWithSpace(user));
		SendClientMessage(user, COLOR_WHITE, playerMsg);
		SendMessageToAdmins(msg);
	} else {
        SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
    }

	return 1;
}

ALTCOMMAND:spec->specate;
COMMAND:specate(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /specate [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new msg[57],
		    guns[2];

		if(items[PlayerInfo[playerid][pItemType][0]][itemType] == ITEM_WEAPON) {
			for(new i = 0; i != 13; i++) {
				GetPlayerWeaponData(playerid, i, guns[0], guns[1]);
				if(guns[0] != 0 && guns[0] == items[PlayerInfo[playerid][pItemType][0]][weaponID]) {
					PlayerInfo[playerid][pItemVar][0] = guns[1];
					setItemVariable(playerid, PlayerInfo[playerid][pItemIndex][0], guns[1]);
					break;
				}
			}
		}

        if(GetPVarInt(playerid, "Specate") == 0) {
			GetPlayerPos(playerid, PlayerInfo[playerid][pX], PlayerInfo[playerid][pY], PlayerInfo[playerid][pZ]);
			GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pA]);
			PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
			PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
		}
		
		format(msg, sizeof(msg), "*** 你正在监视 %s (ID: %i).", GetNameWithSpace(user), user);
		SendClientMessage(playerid, COLOR_WHITE, msg);
		
		if(PlayerInfo[user][pAdminlevel] == 2015)
		{
			format(msg, sizeof(msg), "*** %s 正在监视你.", GetNameWithSpace(playerid));
			SendClientMessage(user, COLOR_WHITE, msg);
		}
		TogglePlayerSpectating(playerid, 1);
		SetPlayerInterior(playerid, GetPlayerInterior(user));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(user));
		if(!IsPlayerInAnyVehicle(user)) {
			PlayerSpectatePlayer(playerid, user);
		} else {
		    PlayerSpectateVehicle(playerid, GetPlayerVehicleID(user));
		}

		SetPVarInt(playerid, "Specate", playerid + 1);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:specoff(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    TogglePlayerSpectating(playerid, 0);
		SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:setskin(playerid, params[]) {
	if(PlayerInfo[playerid][pModLevel] > 0 || PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user,
			skin;

	    if(sscanf(params, "ui", user, skin)) return SendClientMessage(playerid, COLOR_GREY, "用法: /setskin [玩家ID] [skin]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "ii", user, skin);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(skin < 0 || skin > 311) return SendClientMessage(playerid, COLOR_GREY, "皮肤ID需要在0-311内.");
		new msg[52],
			msg_user[80];

        PlayerInfo[user][pSkin] = skin;
        // UpdatePlayerHandcuffs(playerid);
		SetPlayerSkin(user, skin);
		if(PlayerInfo[playerid][pAdminlevel] == 0) {
			format(msg_user, sizeof(msg_user), "*** %s %s 将你的皮肤设置为 %i.", GetModRank(playerid), GetNameWithSpace(playerid), skin);
        } else {
			format(msg_user, sizeof(msg_user), "*** %s %s 将你的皮肤设置为 %i.", GetAdminRank(playerid), GetNameWithSpace(playerid), skin);
		}

		format(msg, sizeof(msg), "*** 你设置 %s 皮肤到 %i.", GetNameWithSpace(user), skin);
		SendClientMessage(user, COLOR_WHITE, msg_user);
		SendClientMessage(playerid, COLOR_WHITE, msg);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:mute(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /mute [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(GetPVarInt(user, "Muted") == 1) return SendClientMessage(playerid, COLOR_GREY, "该玩家已经禁言了.");
		new msg[95],
			msg_user[80];

		SetPVarInt(user, "Muted", 1);
		format(msg, sizeof(msg), "*** %s %s 禁言 %s (ID: %i).", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), user);
		format(msg_user, sizeof(msg_user), "*** 你被 %s %s 禁言.", GetAdminRank(playerid), GetNameWithSpace(playerid));
		SendMessageToAdmins(msg);
		SendClientMessage(user, COLOR_WHITE, msg_user);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:unmute(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /unmute [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(GetPVarInt(user, "Muted") != 1) return SendClientMessage(playerid, COLOR_GREY, "该玩家已经解开了禁言.");
		new msg[100];
		SetPVarInt(user, "Muted", 0);
		if(PlayerInfo[playerid][pAdminlevel] > 0) {
			format(msg, sizeof(msg), "*** %s %s 解开 %s (ID: %i) 禁言.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), user);
		} else {
			format(msg, sizeof(msg), "*** %s %s 解开 %s (ID: %i) 禁言.", GetModRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), user);
		}

		foreach(new i : Player) {
		    if(PlayerInfo[i][pAdminlevel] > 0) {
		        SendClientMessage(i, COLOR_GOLD, msg);
		    } else if(PlayerInfo[i][pModLevel] > 0 && PlayerInfo[playerid][pAdminlevel] == 0) {
			    SendClientMessage(i, COLOR_MODERATORS, msg);
			}
		}

		format(msg, sizeof(msg), "*** 你被 %s %s 解开禁言.", GetAdminRank(playerid), GetNameWithSpace(playerid));
		SendClientMessage(user, COLOR_WHITE, msg);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:a->admintalk;
COMMAND:admintalk(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] > 0)
	{
	    new message[128];
	    if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /admintalk [message]");
		new len = strlen(message);
		if(len + MAX_PLAYER_NAME + 27 > 128)
		{
		    new buffer[128];
		    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 27 - 4);
		    format(buffer, sizeof(buffer), "*** %s %s: %s ...", GetAdminRank(playerid), GetNameWithSpace(playerid), buffer);
		    strdel(message, 0, 128 - MAX_PLAYER_NAME - 27 - 4);
			format(message, sizeof(message), "*** %s %s: ... %s", GetAdminRank(playerid), GetNameWithSpace(playerid), message);
   			foreach(new i : Player)
   			{
				if(PlayerInfo[i][pAdminlevel] > 0)
				{
				    SendClientMessage(i, COLOR_GOLD, buffer);
					SendClientMessage(i, COLOR_GOLD, message);
				}
			}
		}
		else
		{
            format(message, sizeof(message), "*** %s %s: %s", GetAdminRank(playerid), GetNameWithSpace(playerid), message);
			SendMessageToAdmins(message);
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:x(playerid, params[])
{
  	if(PlayerInfo[playerid][pAdminlevel] > 5)
  	{
	  	new message[128];
	    if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /mc [message]");
		new len = strlen(message);
		if(len + MAX_PLAYER_NAME + 27 > 128)
		{
		    new buffer[128];
		    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 27 - 4);
		    format(buffer, sizeof(buffer), "*** %s %s: %s ...", GetAdminRank(playerid), GetNameWithSpace(playerid), buffer);
		    strdel(message, 0, 128 - MAX_PLAYER_NAME - 27 - 4);
			format(message, sizeof(message), "*** %s %s: ... %s", GetAdminRank(playerid), GetNameWithSpace(playerid), message);
			foreach(new i : Player)
			{
				if(PlayerInfo[i][pAdminlevel] > 5)
				{
				    SendClientMessage(i, COLOR_MODS, buffer);
					SendClientMessage(i, COLOR_MODS, message);
				}
			}
		}
		else
		{
	        format(message, sizeof(message), "*** %s %s: %s", GetAdminRank(playerid), GetNameWithSpace(playerid), message);
	        foreach(new i : Player)
			{
				if(PlayerInfo[i][pAdminlevel] > 5) SendClientMessage(i, COLOR_MODS, message);
			}
		}
	}
	return 1;
}

COMMAND:staffchat(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0) {
	    new message[128];
	    if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /staffchat [message]");
		new len = strlen(message);
		if((PlayerInfo[playerid][pAdminlevel] > 0 && len + MAX_PLAYER_NAME + 27 > 128) || (PlayerInfo[playerid][pModLevel] > 0 && len + MAX_PLAYER_NAME + 16 > 128)) {
		    new buffer[128];
		    if(PlayerInfo[playerid][pAdminlevel] > 0) {
			    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 27 - 4);
			    format(buffer, sizeof(buffer), "*** %s %s: %s ...", GetAdminRank(playerid), GetNameWithSpace(playerid), buffer);
			    strdel(message, 0, 128 - MAX_PLAYER_NAME - 27 - 4);
				format(message, sizeof(message), "*** %s %s: ... %s", GetAdminRank(playerid), GetNameWithSpace(playerid), message);
			} else {
			    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 27 - 4);
			    format(buffer, sizeof(buffer), "*** %s %s: %s ...", GetModRank(playerid), GetNameWithSpace(playerid), buffer);
			    strdel(message, 0, 128 - MAX_PLAYER_NAME - 27 - 4);
				format(message, sizeof(message), "*** %s %s: ... %s", GetModRank(playerid), GetNameWithSpace(playerid), message);
			}

   			foreach(new i : Player) {
				if(PlayerInfo[i][pAdminlevel] > 0 || PlayerInfo[i][pModLevel] > 0) {
				    SendClientMessage(i, COLOR_CHAT, buffer);
					SendClientMessage(i, COLOR_CHAT, message);
				}
			}
		} else {
            if(PlayerInfo[playerid][pAdminlevel] > 0) {
				format(message, sizeof(message), "*** %s %s: %s", GetAdminRank(playerid), GetNameWithSpace(playerid), message);
			} else {
                format(message, sizeof(message), "*** %s %s: %s", GetModRank(playerid), GetNameWithSpace(playerid), message);
			}

      		foreach(new i : Player) {
				if(PlayerInfo[i][pAdminlevel] > 0 || PlayerInfo[i][pModLevel] > 0) {
					SendClientMessage(i, COLOR_CHAT, message);
				}
			}
		}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:gotoloc(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        format(gVar3000, sizeof(gVar3000), "%s", EOS);
		for(new i = 0; i != sizeof(adminLocs); i++) {
			if(isnull(gVar3000)) {
				format(gVar3000, sizeof(gVar3000), "%s", adminLocs[i][locName]);
			} else {
			    format(gVar3000, sizeof(gVar3000), "%s\n%s", gVar3000, adminLocs[i][locName]);
			}
		}

		ShowPlayerDialog(playerid, DIALOG_GOTO_LOCATION, DIALOG_STYLE_LIST, "{FF9900}地点", gVar3000, "传送", "取消");
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
    } else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:cleartd(playerid, params[])
{
	TextDrawHideForPlayer(playerid, TD_AD_HeadBox);
	TextDrawHideForPlayer(playerid, TD_AD_BoxTwo);
	TextDrawHideForPlayer(playerid, TD_AD_BoxThree);
	TextDrawHideForPlayer(playerid, TD_AD_BoxOne);
	TextDrawHideForPlayer(playerid, TD_AD_Seller);
	PlayerTextDrawHide(playerid, TD_AD_Price);
	PlayerTextDrawHide(playerid, TD_AD_CityZip);
	PlayerTextDrawHide(playerid, TD_AD_Headline);
	PlayerTextDrawHide(playerid, TD_AD_Taxes);
	PlayerTextDrawHide(playerid, TD_AD_PriceValue);
	PlayerTextDrawHide(playerid, TD_AD_TaxesValue);
	PlayerTextDrawHide(playerid, TD_AD_SellerValue);
	PlayerTextDrawHide(playerid, TD_AD_HousenumberStreet);
	PlayerTextDrawHide(playerid, TD_Mid_Info);
	SendClientMessage(playerid, COLOR_LIGHTRED, "所有绘制图已被清除..");
	return 1;
}
COMMAND:gmx(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] > 5) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		if(serverrestart != 0) return SendClientMessage(playerid, COLOR_WHITE, "服务器已经计划重启.");
		
		SendClientMessageToAll(COLOR_LIGHTRED, "服务器将在3秒内进行重启...");
		
		foreach(new i : Player)
		{
		    if(IsPlayerConnected(i) && GetPVarInt(playerid, "LoadData") == 1)
			{
			    SaveData(i);

				if(PlayerInfo[i][pAdminlevel] > 2)
				{
				    SendClientMessage(i, COLOR_LIGHTGREEN, "你现在可以安全下线了.");
    			}
    			else
				{
				    SendClientMessage(i, COLOR_LIGHTGREEN, "你被请出了服务器, 服务器正在进行重启.");
				    Kick(i);
				}
			}
		}
		serverrestart = 1;
		SetTimer("Serverrestart", 3000, false);
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:backup(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 4) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new msg[90];
		foreach(new i : Player) {
		    if(IsPlayerConnected(i) && GetPVarInt(playerid, "LoadData") == 1) {
			    SaveData(i);
			}
		}
		XB_SaveFurnitures();
		format(msg, sizeof(msg), "%s 将服务器所有数据备份成功.", GetNameWithSpace(playerid));
		SendClientMessageToAll(COLOR_LIGHTRED, msg);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:msg(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 4) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new str[100];
	    if(sscanf(params, "s[100]", str)) return SendClientMessage(playerid, COLOR_GREY, "用法: /msg [message]");
		GameTextForAll(str, 3000, 0);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:gotopos(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new Float:X,
			Float:Y,
			Float:Z,
			interior,
			vw;

		if(sscanf(params, "fffii", X, Y, Z, interior, vw)) return SendClientMessage(playerid, COLOR_GREY, "用法: /gotopos [X-Pos] [Y-Pos] [Z-Pos] [interior] [virtual world]");
	    SetPlayerPosEx(playerid, 5, X, Y, Z, 0.0, interior, vw);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:goinvehicle(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new vehicle,
			seat,
			bool:taken[4],
			vdata[7];

		if(sscanf(params, "ii", vehicle, seat)) return SendClientMessage(playerid, COLOR_GREY, "用法: /goinvehicle [车辆ID] [seat]");
		if(!IsValidVehicle(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "无效车辆ID.");
		if(vehicleData[GetVehicleModel(vehicle) - 400][seats] - 1 < seat) return SendClientMessage(playerid, COLOR_GREY, "该车没有足够的座位.");
        foreach(new i : Player) {
			if(GetPlayerVehicleID(i) == vehicle && GetPlayerVehicleSeat(i) >= 0) {
				taken[GetPlayerVehicleSeat(i)] = true;
			}
		}

		if(taken[seat] == true) return SendClientMessage(playerid, COLOR_GREY, "该位置已经在使用了.");
		GetVehicleParamsEx(vehicle, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
		if(vdata[3] != 0) {
            PlayerInfo[playerid][pAllowFalseEnter] = 1;
		}

		PutPlayerInVehicle(playerid, vehicle, seat);
    } else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:up(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new Float:X,
			Float:Y,
			Float:Z;

	    GetPlayerPos(playerid, X, Y, Z);
	    SetPlayerPos(playerid, X, Y, Z + 1.5);
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:down(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new Float:X,
			Float:Y,
			Float:Z;

	    GetPlayerPos(playerid, X, Y, Z);
	    SetPlayerPos(playerid, X, Y, Z - 2.0);
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:gethere(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /gethere [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "不能对自己使用.");
		new Float:cX,
			Float:cY,
			Float:cZ,
			msgAdm[51];

		GetPlayerPos(playerid, cX, cY, cZ);
		if(GetPlayerState(user) == PLAYER_STATE_DRIVER) {
		    new vehicle = GetPlayerVehicleID(user);
		    LinkVehicleToInterior(vehicle, GetPlayerInterior(playerid));
			SetVehicleVirtualWorld(vehicle, GetPlayerVirtualWorld(playerid));
			SetVehiclePos(vehicle, cX, cY+1.5, cZ);
			SetPlayerInterior(user, GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(user, GetPlayerVirtualWorld(playerid));
			PutPlayerInVehicle(user, vehicle, 0);
		} else {
			SetPlayerPos(user, cX, cY + 1.5, cZ);
			SetPlayerInterior(user, GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(user, GetPlayerVirtualWorld(playerid));
		}

		format(msgAdm, sizeof(msgAdm), "*** 你将 %s 传送到你的位置.", GetNameWithSpace(user));
		SendClientMessage(playerid, COLOR_WHITE, msgAdm);
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:gotovehicle(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new vehicle;
		if(sscanf(params, "i", vehicle)) return SendClientMessage(playerid, COLOR_GREY, "用法: /gotovehicle [车辆ID]");
		if(!IsValidVehicle(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "无效车辆ID.");
		new Float:gX,
			Float:gY,
			Float:gZ,
			msgAdm[60];

		GetVehiclePos(vehicle, gX, gY, gZ);
		SetPlayerPosEx(playerid, 5, gX, gY + 1.5, gZ);
		format(msgAdm, sizeof(msgAdm), "*** 你传送到车辆 %i.", vehicle);
		SendClientMessage(playerid, COLOR_WHITE, msgAdm);
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:getcar(playerid, params[])
{
	new vehicle, Float:x, Float:y, Float:z;
	if(PlayerInfo[playerid][pAdminlevel] < 2) return SCM(playerid, COLOR_LIGHTRED, "你没有权限使用该指令.");
	if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	if(sscanf(params,"d",vehicle)) return SCM(playerid, -1, "用法: /getcar [车辆ID]");
	if(!IsValidVehicle(vehicle)) return SCM(playerid, -1, "没有该载具.");
	GetPlayerPos(playerid, x, y, z);
	SetVehiclePos(vehicle, x, y+4, z);
	SetVehicleVirtualWorld(vehicle, GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(vehicle, GetPlayerInterior(playerid));
	return 1;
}

COMMAND:makeswat(playerid, params[])
{
	new user;
    if(PlayerInfo[playerid][pFaction] == 1 && FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] >= PlayerInfo[playerid][pRank] - 1)
	{
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /makeswat [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(PlayerInfo[user][pFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "对方不是LAPD成员.");
		if(PlayerInfo[user][pSWAT] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "你将该成员放进SWAT小组.");
			PlayerInfo[user][pSWAT] = 1;
			SendClientMessage(user, COLOR_LIGHTRED, "你被放置进SWAT小组");
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "你将该成员从SWAT小组中移除.");
			PlayerInfo[user][pSWAT] = 0;
			SendClientMessage(user, COLOR_LIGHTRED, "你被上级从SWAT小组移除.");
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}
COMMAND:makedet(playerid, params[])
{
	new user;
    if(PlayerInfo[playerid][pFaction] == 1 && FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] >= PlayerInfo[playerid][pRank] - 1)
	{
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /makeswat [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(PlayerInfo[user][pFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "对方不是LAPD成员.");
		if(PlayerInfo[user][pPDet] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "你将该成员放进侦查小组.");
			PlayerInfo[user][pPDet] = 1;
			SendClientMessage(user, COLOR_LIGHTRED, "你被放置进侦查小组");
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "你将该成员从侦查小组中移除.");
			PlayerInfo[user][pPDet] = 0;
			SendClientMessage(user, COLOR_LIGHTRED, "你被上级从侦查小组移除.");
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:removelabel(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 0)
	{
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /removelabel [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new string[128];
		format(string, sizeof(string), "AdmCmd: %s 移除了 %s 死亡标签.", GetNameWithSpace(playerid), GetNameWithSpace(user));
		SendMessageToAdmins(string);
		Delete3DTextLabel(DeathReason[user]);
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:slap(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /slap [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new string[128];
		format(string, sizeof(string), "AdmCmd: %s 拍了 %s 一下.", GetNameWithSpace(playerid), GetNameWithSpace(user));
		SendMessageToAdmins(string);
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(user, X, Y, Z);
		SetPlayerPos(user, X, Y, Z + 3);
		PlayerPlaySound(user, 1190, 0, 0, 0);
		GameTextForPlayer(user, "~r~Slapped", 3000, 1);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}


COMMAND:createhouse(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 3) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    for(new i = 0; i != MAX_HOUSES; i++) {
			if(HouseInfo[i][hID] == 0) {
				SetPVarInt(playerid, "CreateHouseID", i);
				GetPlayerPos(playerid, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ]);
			    ShowPlayerDialog(playerid, DIALOG_HOUSE_PRICE, DIALOG_STYLE_INPUT, "{FF9900}创建房屋", "请输入房屋价格:", "确定", "取消");
			    HouseInfo[i][hID] = -1;
			    return 1;
			}
		}

		SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 系统已经无法承载更多的房屋, 请联系开发团队.");
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:createbusiness(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 3) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		for(new i = 0; i != MAX_BUSINESSES; i++) {
			if(BusinessInfo[i][bID] == 0) {
				SetPVarInt(playerid, "CreateBusinessID", i);
				GetPlayerPos(playerid, BusinessInfo[i][bX], BusinessInfo[i][bY], BusinessInfo[i][bZ]);
			    ShowPlayerDialog(playerid, DIALOG_BUSINESS_PRICE, DIALOG_STYLE_INPUT, "{FF9900}创建产业", "请输入产业价格:", "确定", "取消");
			    BusinessInfo[i][bID] = -1;
				return 1;
			}
		}

		SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 系统已经无法承载更多的产业, 请联系开发团队.");
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:deletehouse(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 3) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		for(new i = 0; i != MAX_HOUSES; i++) {
		    if(HouseInfo[i][hID] != 0 && IsPlayerInDynamicCP(playerid, houseCP[i])) {
				new query[80],
					pID = GetPlayerID(HouseInfo[i][hOwner]);

				mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_houses` WHERE `id` = %i", HouseInfo[i][hID]);
				mysql_function_query(sqlHandle, query, false, "", "");
				mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `renthouse` = 0 WHERE `renthouse` = %i", HouseInfo[i][hID]);
				mysql_function_query(sqlHandle, query, false, "", "");
				format(query, sizeof(query), "*** %s %s 删除了房屋 [%i].", GetAdminRank(playerid), GetNameWithSpace(playerid), HouseInfo[i][hID]);
	            AdminMessageLog(query, playerid, "Delete House");
	            if(pID != -1) {
					SetMapIcons(pID);
				}

				foreach(new p : Player) {
					if(PlayerInfo[p][pRentHouse] == i) {
						PlayerInfo[p][pRentHouse] = 0;
					}
				}

				DestroyDynamicCP(houseCP[i]);
				HouseInfo[i][hID] = 0;
				HouseInfo[i][hX] = 0;
				HouseInfo[i][hY] = 0;
				HouseInfo[i][hZ] = 0;
				HouseInfo[i][hInt] = 0;
				HouseInfo[i][hPrice] = 0;
				HouseInfo[i][hMoney] = 0;
				HouseInfo[i][hRentalFee] = 0;
				HouseInfo[i][hLocked] = 0;
				HouseInfo[i][hHousenumber] = 0;
				HouseInfo[i][hZip] = 0;
				HouseInfo[i][hTaxes] = 0;
				format(HouseInfo[i][hOwner], MAX_PLAYER_NAME, "%s", EOS);
				format(HouseInfo[i][hRadio], 200, "%s", EOS);
				format(HouseInfo[i][hStreet], 40, "%s", EOS);
				// Delete textdraws
				TextDrawHideForPlayer(playerid, TD_AD_HeadBox);
			    TextDrawHideForPlayer(playerid, TD_AD_BoxTwo);
			    TextDrawHideForPlayer(playerid, TD_AD_BoxThree);
			    TextDrawHideForPlayer(playerid, TD_AD_BoxOne);
			    TextDrawHideForPlayer(playerid, TD_AD_Seller);
				PlayerTextDrawHide(playerid, TD_AD_Price);
				PlayerTextDrawHide(playerid, TD_AD_CityZip);
				PlayerTextDrawHide(playerid, TD_AD_Headline);
				PlayerTextDrawHide(playerid, TD_AD_Taxes);
				PlayerTextDrawHide(playerid, TD_AD_PriceValue);
				PlayerTextDrawHide(playerid, TD_AD_TaxesValue);
				PlayerTextDrawHide(playerid, TD_AD_SellerValue);
				PlayerTextDrawHide(playerid, TD_AD_HousenumberStreet);
				PlayerTextDrawHide(playerid, TD_Mid_Info);
				return 1;
			}
		}

		SendClientMessage(playerid, COLOR_GREY, "你不在房屋检查点内");
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:deletebusiness(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 3) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		for(new i = 0; i != MAX_BUSINESSES; i++) {
		    if(IsValidDynamicCP(businessCP[i]) && IsPlayerInDynamicCP(playerid, businessCP[i])) {
				new query[95],
					pID = GetPlayerID(BusinessInfo[i][bOwner]);

				mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_businesses` WHERE `id` = %i", BusinessInfo[i][bID]);
				mysql_function_query(sqlHandle, query, false, "", "");
				format(query, sizeof(query), "*** %s %s 删除了产业 [%i].", GetAdminRank(playerid), GetNameWithSpace(playerid), BusinessInfo[i][bID]);
	            AdminMessageLog(query, playerid, "Delete Business");
	            if(pID != -1) {
					SetMapIcons(pID);
				}

				DestroyDynamicCP(businessCP[i]);
				BusinessInfo[i][bID] = 0;
				BusinessInfo[i][bX] = 0;
				BusinessInfo[i][bY] = 0;
				BusinessInfo[i][bZ] = 0;
				BusinessInfo[i][bPrice] = 0;
				BusinessInfo[i][bInt] = 0;
				BusinessInfo[i][bMoney] = 0;
				BusinessInfo[i][bLocked] = 0;
				BusinessInfo[i][bFee] = 0;
				BusinessInfo[i][bHousenumber] = 0;
				BusinessInfo[i][bBusinesszip] = 0;
				BusinessInfo[i][bTaxes] = 0;
				BusinessInfo[i][bGoods] = 0;
				format(BusinessInfo[i][bOwner], MAX_PLAYER_NAME, "%s", EOS);
				format(BusinessInfo[i][bName], 20, "%s", EOS);
				format(BusinessInfo[i][bRadio], 200, "%s", EOS);
				format(BusinessInfo[i][bStreet], 40, "%s", EOS);
				return 1;
			}
		}

		SendClientMessage(playerid, COLOR_GREY, "你不在产业检查点内.");
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:gotohouse(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 1) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new id;
		if(sscanf(params, "i", id)) return SendClientMessage(playerid, COLOR_GREY, "用法: /gotohouse [houseID]");
		if(id == 0) return SendClientMessage(playerid, COLOR_GREY, "上述房屋ID不存在.");
		for(new i = 0; i != MAX_HOUSES; i++) {
			if(HouseInfo[i][hID] == id) {
			    SetPlayerPosEx(playerid, 5, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ]);
				return 1;
			}
		}

		SendClientMessage(playerid, COLOR_GREY, "上述房屋ID不存在.");
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:gotobusiness(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] > 0)
	{
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new id;
		if(sscanf(params, "i", id)) return SendClientMessage(playerid, COLOR_GREY, "用法: /gotobusiness [businessID]");
		for(new i = 0; i != MAX_BUSINESSES; i++)
		{
			if(BusinessInfo[i][bID] != 0 && BusinessInfo[i][bID] == id)
			{
			    SetPlayerPosEx(playerid, 5, BusinessInfo[i][bX], BusinessInfo[i][bY], BusinessInfo[i][bZ]);
				return 1;
			}
		}

		SendClientMessage(playerid, COLOR_GREY, "上述产业ID不存在.");
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:goto(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user;
		if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /goto [玩家ID]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(user == playerid) return SendClientMessage(playerid, COLOR_GREY, "不能对自己使用.");
		new Float:gX,
			Float:gY,
			Float:gZ,
			interior,
			vw,
			msgAdm[47];

		GetPlayerPos(user, gX, gY, gZ);
		vw = GetPlayerVirtualWorld(user);
		interior = GetPlayerInterior(user);
		SetPlayerPosEx(playerid, 5, gX, gY + 1.5, gZ, 0.0, interior, vw);
		format(msgAdm, sizeof(msgAdm), "*** 你传送到 %s.", GetNameWithSpace(user));
		SendClientMessage(playerid, COLOR_WHITE, msgAdm);
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}
ALTCOMMAND:act->approveplayer;
COMMAND:approveplayer(playerid, params[])
{
    if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0)
	{
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new username[MAX_PLAYER_NAME],
		   	reason[100],
		    cpNumber;

	    if(sscanf(params, "s[24]", username)) return SendClientMessage(playerid, COLOR_GREY, "用法: /approveplayer [游戏名称]");
	    if(!IsValidPlayerName(username)) return SendClientMessage(playerid, COLOR_GREY, "你需要根据格式 Firstname_Lastname 进行操作.");
	    if(GetPlayerID(username) != -1) return SendClientMessage(playerid, COLOR_GREY, "对方需要先离线.");
		new query[100];
		mysql_format(sqlHandle, query, sizeof(query), "SELECT `activated`, `ip` FROM `samp_users` WHERE `user` = '%e'", username);
		mysql_function_query(sqlHandle, query, true, "OnCommandApproveAccount", "issi", playerid, username, reason, cpNumber);
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:kick(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0 || PlayerInfo[playerid][pModLevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user,
			reason[128];

	    if(sscanf(params, "us[128]", user, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /kick [玩家ID] [原因]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "is[128]", user, reason);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(PlayerInfo[user][pAdminlevel] > PlayerInfo[playerid][pAdminlevel]) return SendClientMessage(playerid, COLOR_LIGHTRED, "你没有权限对该玩家使用.");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    KickLog(user, PlayerInfo[playerid][pName], reason);
	    KickDelay(user);
	    if(IsPlayerConnected(user)) {
		    new msg[410];
		    if(PlayerInfo[playerid][pAdminlevel] > 0)
			{
   				format(msg, sizeof(msg), "[STAFF] %s 被 %s 请出服务器, 原因:[%s]", GetNameWithSpace(user), GetNameWithSpace(playerid), reason);
			}
			else
			{
				format(msg, sizeof(msg), "[STAFF] %s 被 %s 请出服务器, 原因:[%s]", GetNameWithSpace(user), GetNameWithSpace(playerid), reason);
			}

			SendClientMessageToAll(COLOR_LIGHTRED, msg);
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:ajail->adminjail;
COMMAND:adminjail(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user,
			cpNumber,
			reason[100];

	    if(sscanf(params, "uis[100]", user, cpNumber, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /adminjail [玩家ID] [点数] [原因]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "iis[100]", user, cpNumber, reason);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(PlayerInfo[user][pAdminlevel] == 5) return SendClientMessage(playerid, COLOR_LIGHTRED, "你没有权限对该用户使用该指令.");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    if(GetPVarInt(user, "AdminJailed") != 0) return SendClientMessage(playerid, COLOR_GREY, "该玩家已经在监狱了.");
		if(cpNumber <= 0) return SendClientMessage(playerid, COLOR_GREY, "你需要输入一个不低于0的检查数量.");
	    new query[275];
		format(query, sizeof(query), "[STAFF] %s 被 %s 进行管理监禁, 原因:[%s]", GetNameWithSpace(user), PlayerInfo[playerid][pName], reason);
		SendClientMessageToAll(COLOR_LIGHTRED, query);
	    SetPVarInt(user, "Muted", 1);
		SetPVarInt(user, "AdminJailed", 1);
        SetPlayerPosEx(user, 5, 939.8325, -1251.1356, 781.2216, 0, 25, user + 1);
		PlayerInfo[user][pAJCPs] = cpNumber;
		SetPlayerTime(user, 12, 0);
		CreateNewAdminJailPickup(user);
		format(query, sizeof(query), "现在你需要 %i 点数才能离开, 你被管理员 %s 监禁, 原因:[%s]", cpNumber, PlayerInfo[playerid][pName], reason);
		SendClientMessage(user, COLOR_WHITE, query);
		format(query, sizeof(query), "系统: 你需要跑完 %i 点数才能离开监狱 (如果你看不到Pickup, 请使用 /refreshjail 刷新).", cpNumber);
		SendClientMessage(user, COLOR_LIGHTRED, query);
		mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_jails` (`user`, `reason`, `checkpoints`, `admin`) VALUES ('%e', '%e', %i, '%e')", PlayerInfo[user][pName], reason, cpNumber, PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:jailacc(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new username[MAX_PLAYER_NAME],
		   	reason[100],
		    cpNumber;

	    if(sscanf(params, "s[24]is[100]", username, cpNumber, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /jailacc [游戏名称] [点数] [原因]");
	    if(!IsValidPlayerName(username)) return SendClientMessage(playerid, COLOR_GREY, "请输入该玩家的名称.");
	    if(GetPlayerID(username) != -1) return SendClientMessage(playerid, COLOR_GREY, "对方正在游戏中, 使用/ajail.");
	    if(cpNumber <= 0) return SendClientMessage(playerid, COLOR_GREY, "你需要设置点数.");
		new query[100];
		mysql_format(sqlHandle, query, sizeof(query), "SELECT `pAJCPs`, `ip` FROM `samp_users` WHERE `user` = '%e'", username);
		mysql_function_query(sqlHandle, query, true, "OnCommandJailAccount", "issi", playerid, username, reason, cpNumber);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:unjail(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");

		new user,
			reason[100];

	    if(sscanf(params, "us[100]", user, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /unjail [玩家ID] [原因]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "is[100]", user, reason);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(GetPVarInt(user, "AdminJailed") == 0) return SendClientMessage(playerid, COLOR_GREY, "该玩家没有被监禁或者他还没有跑完所有点数.");
		new msg[210],
			query[100],
			Hour,
			Minute,
			Second;

	    format(msg, sizeof(msg), "[STAFF] %s 被 %s %s 释放, 原因:[%s]", GetNameWithSpace(user), GetAdminRank(playerid), GetNameWithSpace(playerid), reason);
	    SendClientMessageToAll(COLOR_LIGHTRED, msg);
	    mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_jails` WHERE `user` = '%e' ORDER BY `id` DESC LIMIT 1", PlayerInfo[user][pName]);
	    mysql_function_query(sqlHandle, query, false, "", "");
	    SetPVarInt(user, "Muted", 0);
		PlayerInfo[user][pAJCPs] = 0;
		SetPVarInt(user, "AdminJailed", 0);
		gettime(Hour, Minute, Second);
		SetPlayerTime(user, Hour, Minute);
		SetPlayerPosEx(user, 5, 1542.3568, -1675.1830, 13.5543);
		if(IsValidDynamicPickup(AJPickup[user])) {
	        DestroyDynamicPickup(AJPickup[user]);
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:sendtols(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user,
			msg[65];

	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /sendtols [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    SetPlayerPosEx(user, 5, 1542.3568, -1675.1830, 13.5543);
		format(msg, sizeof(msg), "*** 你将 %s 送入LS.", GetNameWithSpace(user));
		SendClientMessage(playerid, COLOR_WHITE, msg);
		SendClientMessage(user, COLOR_WHITE, "*** 你传送到了Los Angeles.");
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:ci->cancelinjury;
COMMAND:cancelinjury(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /cancelinjury [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    if(GetPVarInt(user, "Death") == 0) return SendClientMessage(playerid, COLOR_GREY, "该玩家没有受伤.");
		new msg[140];
		SetPVarInt(user, "Death", 0);
		SetPlayerHealthAndLimit(user, 100);
		SetCameraBehindPlayer(user);
		UnfreezePlayer(user);
		PlayerInfo[playerid][pHealth] = 100;
		ApplyAnimation(user, "PED", "getup_front", 4.1, 0, 1, 1, 0, 0, 1);
		format(msg, sizeof(msg), "*** %s %s 将 %s 复活.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user));
        Delete3DTextLabel(DeathReason[user]);
        sInfo[user][Misc] = 0;
		sInfo[user][Head] = 0;
		sInfo[user][Chest] = 0;
		sInfo[user][Crotch] = 0;
		sInfo[user][LArm] = 0;
		sInfo[user][RArm] = 0;
		sInfo[user][LLeg] = 0;
		sInfo[user][RLeg] = 0;
		SendMessageToAdmins(msg);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:fixpayday(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /fixpayday [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		new msg[140];
        PlayerInfo[user][pHadPayday] = 0;
		format(msg, sizeof(msg), "*** %s %s 重置 %s 发薪检测.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user));
		SendMessageToAdmins(msg);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:sellvehicle(playerid, params[])
{
    new query[128];
    new ownCar = GetPVarInt(playerid, "PrivateCar");
    if(ownCar==0)return  SendClientMessage(playerid, COLOR_LIGHTRED, "你还没取出车辆,使用 “/spawn”");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要在车内进行.");
	new vehicle = GetPlayerVehicleID(playerid);
	if(ownCar != vehicle) return SendClientMessage(playerid, COLOR_GREY, "这不是你正在使用的车.");
	if(VehicleInfo[vehicle][vRented] != 0) return SendClientMessage(playerid, COLOR_GREY, "这是租赁车辆.");
	if(VehicleInfo[vehicle][vType] != VEHICLE_OWNED) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要对私家车使用.");
    new sayes[20];
    if(sscanf(params, "s[20]", sayes))
	{
	    new moneyget=vehicleData[GetVehicleModel(vehicle) - 400][typePrice] *2 /10;
	    new moneystring[128];
	    SendClientMessage(playerid, 0xF5DEB3AA, "当你将该载具卖给系统时, 这意味着你不再拥有它并且..");
	    SendClientMessage(playerid, 0xF5DEB3AA, ".. 你只能得到原价百分之20的售价");
	    SendClientMessage(playerid, 0xF5DEB3AA, "我们建议您将该载具出售给其他人");
	    format(moneystring,sizeof moneystring,"如果你同意售车出售该车, 你将获得 $%d",moneyget);
        SendClientMessage(playerid, 0xF5DEB3AA, moneystring);
	    SendClientMessage(playerid, 0xF5DEB3AA, "再次输入 /sellvehicle yes 售出该车");

        return 1;
	}
	if(strcmp(sayes, "yes") == 0)
	{
	 	new string[128];
		GivePlayerMoneyEx(playerid, vehicleData[GetVehicleModel(vehicle) - 400][typePrice] *2 /10);
		format(string, sizeof(string), "你出售了该车, 获得 $%i.", vehicleData[GetVehicleModel(vehicle) - 400][typePrice] *2 /10);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_vehicles` WHERE `id` = %i", VehicleInfo[vehicle][vID]);
 		mysql_function_query(sqlHandle, query, false, "", "");
	 	SetVehicleDead(vehicle, 1);
	 	format(VehicleInfo[vehicle][vOwner],10,"NULL");
	 	DestroyDynamicObject(VehicleInfo[vehicle][vSiren]);
	 	Delete3DTextLabel(veicolo_callsign_testo[vehicle]);
	 	SetPVarInt(playerid,"PrivateCar",0);
	 	return 1;
	}
	return 1;
}

COMMAND:destroycar(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new vehicle,
			model;

	    if(sscanf(params, "i", vehicle)) return SendClientMessage(playerid, COLOR_GREY, "用法: /destroycar [车辆ID]");
	    model = GetVehicleModel(vehicle);
	    if(model == 0) return SendClientMessage(playerid, COLOR_GREY, "无效车辆ID (/dl)");
		if(model == 569 || model == 570 || model == 590 || model == 537 || model == 538) return SendClientMessage(playerid, COLOR_GREY, "无效车辆ID (/dl).");
	    SetVehicleDead(vehicle, 1);
	    DestroyDynamicObject(VehicleInfo[vehicle][vSiren]);
	    Delete3DTextLabel(veicolo_callsign_testo[vehicle]);
	    SendClientMessage(playerid, COLOR_WHITE, "*** 删除成功.");
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

ALTCOMMAND:dac->destroyallcars;
COMMAND:destroyallcars(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 1) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new msg[90],
			model;

		format(msg, sizeof(msg), "*** %s %s 删除了所有车辆.", GetAdminRank(playerid), GetNameWithSpace(playerid));
		SendMessageToAdmins(msg);

		for(new i; i != MAX_VEHICLES; i++)
		{
	        model = GetVehicleModel(i);
	        if(CheckVehicleForPassengers(i) == -1 && model != 569 && model != 570 && model != 590 && model != 537 && model != 538)
			{
			    Delete3DTextLabel(veicolo_callsign_testo[i]);
			    DestroyDynamicObject(VehicleInfo[i][vSiren]);
	            SetVehicleDead(i, 1);
			}
	    }
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:promotemod(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 4) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user[MAX_PLAYER_NAME],
			rank;

		if(sscanf(params, "s[24]i", user, rank)) return SendClientMessage(playerid, COLOR_GREY, "用法: /promotemod [游戏名称] [Rank]");
		if(!IsValidPlayerName(user)) return SendClientMessage(playerid, COLOR_GREY, "请正确输入名称.");
		if(rank > 2 || rank <= 0) return SendClientMessage(playerid, COLOR_GREY, "阶级: [1] 测试员, [2] 测试团队领导人.");
		new msg[121],
			userID = GetPlayerID(user);

		if(userID != -1) {
		    if(rank > PlayerInfo[userID][pModLevel]) {
				new query[100];
				PlayerInfo[userID][pModLevel] = rank;
				mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `modlevel` = %i WHERE `user` = '%e'", rank, user);
				mysql_function_query(sqlHandle, query, false, "", "");
		  		format(msg, sizeof(msg), "*** %s %s 提升 %s 为 %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(user), GetModRankEx(rank));
				foreach(new i : Player) {
					if(PlayerInfo[i][pAdminlevel] > 0) {
					    SendClientMessage(i, COLOR_GOLD, msg);
					} else if(PlayerInfo[i][pModLevel] > 0) {
						SendClientMessage(i, COLOR_MODERATORS, msg);
					}
				}
			} else {
				SendClientMessage(playerid, COLOR_GREY, "你需要选择一个高于对方现在阶级的阶级, 或者你可以使用 /demotemod 降级.");
			}
		} else {
		    new query[90];
		    mysql_format(sqlHandle, query, sizeof(query), "SELECT `modlevel` FROM `samp_users` WHERE `user` = '%e'", user);
		    mysql_function_query(sqlHandle, query, true, "OnAdminPromoteMod", "isi", playerid, user, rank);
		}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:promoteadmin(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] > 5)
	{
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user[MAX_PLAYER_NAME],
			rank;

		if(sscanf(params, "s[24]i", user, rank)) return SendClientMessage(playerid, COLOR_GREY, "用法: /promoteadmin [游戏名称] [Rank]");
		if(!IsValidPlayerName(user)) return SendClientMessage(playerid, COLOR_GREY, "你正确输入名称.");
		if(rank > 5 || rank <= 0) return SendClientMessage(playerid, COLOR_GREY, "阶级: [1] Level 1 Administrator, [2] Level 2 Administrator, [3] Level 3 Administrator, [4] Level 4 Administrator, [5] Level 5 Administrator");
		new msg[121],
			userID = GetPlayerID(user);

		if(userID != -1) {
		    if(rank > PlayerInfo[userID][pAdminlevel]) {
				new query[100];
				PlayerInfo[userID][pAdminlevel] = rank;
				mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `adminlevel` = %i WHERE `user` = '%e'", rank, user);
				mysql_function_query(sqlHandle, query, false, "", "");
		  		format(msg, sizeof(msg), "*** %s %s 提升 %s 为 %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(user), GetAdminRankEx(rank));
				AdminMessageLog(msg, playerid, "Promote Admin");
			} else {
				SendClientMessage(playerid, COLOR_GREY, "你需要选择一个高于对方现在阶级的阶级, 或者你可以使用 /demoteadmin 降级.");
			}
		} else {
		    new query[90];
		    mysql_format(sqlHandle, query, sizeof(query), "SELECT `adminlevel` FROM `samp_users` WHERE `user` = '%e'", user);
		    mysql_function_query(sqlHandle, query, true, "OnAdminPromoteAdmin", "isi", playerid, user, rank);
		}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:demotemod(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 4) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user[MAX_PLAYER_NAME],
			rank;

		if(sscanf(params, "s[24]i", user, rank)) return SendClientMessage(playerid, COLOR_GREY, "用法: /demotemod [游戏名称] [Rank]");
		if(!IsValidPlayerName(user)) return SendClientMessage(playerid, COLOR_GREY, "你正确输入名称.");
		if(rank > 2 || rank <= 0) return SendClientMessage(playerid, COLOR_GREY, "阶级: [1] 测试员, [2] 测试团队领导人.");
		new msg[121],
			userID = GetPlayerID(user);

		if(userID != -1) {
		    if(rank < PlayerInfo[userID][pModLevel]) {
		        new query[100];
				PlayerInfo[userID][pModLevel] = rank;
				mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `modlevel` = %i WHERE `user` = '%e'", rank, user);
				mysql_function_query(sqlHandle, query, false, "", "");
				format(msg, sizeof(msg), "*** %s %s 将 %s 降级为 %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(user), GetModRankEx(rank));
				foreach(new i : Player) {
					if(PlayerInfo[i][pAdminlevel] > 0) {
					    SendClientMessage(i, COLOR_GOLD, msg);
					} else if(PlayerInfo[i][pModLevel] > 0) {
						SendClientMessage(i, COLOR_MODERATORS, msg);
					}
				}
			} else {
			    SendClientMessage(playerid, COLOR_GREY, "你需要选择一个低于对方现在阶级的阶级, 或者你可以使用 /promotemod 升级.");
			}
		} else {
			new query[90];
		    mysql_format(sqlHandle, query, sizeof(query), "SELECT `modlevel` FROM `samp_users` WHERE `user` = '%e'", user);
		    mysql_function_query(sqlHandle, query, true, "OnAdminDemoteMod", "isi", playerid, user, rank);
		}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:demoteadmin(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 5) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new user[MAX_PLAYER_NAME],
			rank;

		if(sscanf(params, "s[24]i", user, rank)) return SendClientMessage(playerid, COLOR_GREY, "用法: /demoteadmin [游戏名称] [Rank]");
		if(!IsValidPlayerName(user)) return SendClientMessage(playerid, COLOR_GREY, "请正确输入名称.");
		if(rank > 4 || rank <= 0) return SendClientMessage(playerid, COLOR_GREY, "阶级: [1] Level 1 Administrator, [2] Level 2 Administrator, [3] Level 3 Administrator, [4] Level 4 Administrator, [5] Level 5 Administrator");
		new msg[121],
			userID = GetPlayerID(user);

		if(userID != -1) {
		    if(rank < PlayerInfo[userID][pAdminlevel]) {
		        new query[100];
				PlayerInfo[userID][pAdminlevel] = rank;
				mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `adminlevel` = %i WHERE `user` = '%e'", rank, user);
				mysql_function_query(sqlHandle, query, false, "", "");
				format(msg, sizeof(msg), "*** %s %s 将 %s 降级为 %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(user), GetAdminRankEx(rank));
				AdminMessageLog(msg, playerid, "Demote Admin");
			} else {
			    SendClientMessage(playerid, COLOR_GREY, "你需要选择一个低于对方现在阶级的阶级, 或者你可以使用 /promoteadmin 升级.");
			}
		} else {
			new query[90];
		    mysql_format(sqlHandle, query, sizeof(query), "SELECT `adminlevel` FROM `samp_users` WHERE `user` = '%e'", user);
		    mysql_function_query(sqlHandle, query, true, "OnAdminDemoteAdmin", "isi", playerid, user, rank);
		}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(GetPVarInt(playerid, "AdminDuty") != 0) SetPlayerPosEx(playerid, 5, fX, fY, fZ);

    return 1;
}

public OnQueryError(errorid, error[], callback[], query[], connectionHandle) {
	switch(errorid) {
        case CR_SERVER_GONE_ERROR: {
            print("无法连接到 MySQL 数据库, 正在请求再次尝试 ..");
            mysql_reconnect();
        }
    }

    SendMessageToAdmins("服务器: 发生了一个MySQL错误, 请联系开发团队进行检查.");
	print("| - > *[BUG TRACER]* Sakura: 报告老板, 我钻土的时候找到了一个MySQL错误, 错误报告如下 <- |");

	printf("| - > 错误简介: %s <- |", error);
	
	printf("| - > 解决方法: %s <- |", query);
	
	printf("| - > 该错误发生在回调[%s] <- |", callback);
	
	print("| - > SAKURA THE KING - SAKURA THE KING - SAKURA THE KING - SAKURA THE KING <- |");
}

/* --- Functions --- */

stock IsPlayerAtHouse(playerid)
{
	new houseid = 0;
	for(new i = 0; i != MAX_HOUSES; i++)
	{
		if(HouseInfo[i][hID] != 0 && IsPlayerInDynamicCP(playerid, houseCP[i])) houseid = i;
	}
	return houseid;
}
stock UpdateLotteryNumbers(playerid)
{
    new str[11];
	format(str, sizeof(str), "%d - %d - %d", PlayerInfo[playerid][PNumbers][0], PlayerInfo[playerid][PNumbers][1], PlayerInfo[playerid][PNumbers][2]);
	PlayerTextDrawSetString(playerid, PlayerInfo[playerid][LotteryNumbersTD], str);
	return PlayerTextDrawShow(playerid, PlayerInfo[playerid][LotteryNumbersTD]);
}

stock DisplayLottery(playerid)
{
	for(new i = 0; i < 29; i++)
	{
	    if(i == 15) continue;
		TextDrawShowForPlayer(playerid, Lottery[i]);
	}
	PlayerTextDrawShow(playerid, PlayerInfo[playerid][LotteryNumbersTD]);
	SelectTextDraw(playerid, 0xACCBF1FF);
}

stock HideLottery(playerid)
{
	for(new i = 0; i < 29; i++)
	{
	    if(i == 15) continue;
		TextDrawHideForPlayer(playerid, Lottery[i]);
	}
	PlayerTextDrawHide(playerid, PlayerInfo[playerid][LotteryNumbersTD]);
	for(new i = 0; i <= 2; i++) PlayerInfo[playerid][PNumbers][i] = 0;
	return CancelSelectTextDraw(playerid);
}

stock KickAll()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pAdminlevel] != 3)
        	{
	 			Kick(i);
			}
		}
    }
    return 1;
}

stock CheckDonation(playerid)
{
	new Year, Month, Day, DonateMessage[128];
	getdate(Year, Month, Day);

	if(PlayerInfo[playerid][pDonateRank] != 0)
	{
		if(Year == 2014)
		{
	    	if(Month >= PlayerInfo[playerid][pDonateMonth] && Day >= PlayerInfo[playerid][pDonateDay])
	    	{
	    	    format(DonateMessage, sizeof(DonateMessage), "你的捐赠等级已经在2014年%d月%d号时过期.", PlayerInfo[playerid][pDonateMonth], PlayerInfo[playerid][pDonateDay]);
    			SendClientMessage(playerid, COLOR_YELLOW, DonateMessage);
	    	    PlayerInfo[playerid][pDonateRank] = 0;
				PlayerInfo[playerid][pDonateDay] = 0;
				PlayerInfo[playerid][pDonateMonth] = 0;
				PlayerInfo[playerid][pDonateYear] = 0;
				return 1;
	    	}
 		}
 		if(Year == 2015)
		{
	    	if(Month >= PlayerInfo[playerid][pDonateMonth] && Day >= PlayerInfo[playerid][pDonateDay])
	    	{
	    	    format(DonateMessage, sizeof(DonateMessage), "你的捐赠等级已经在2015年%d月%d号时过期.", PlayerInfo[playerid][pDonateMonth], PlayerInfo[playerid][pDonateDay]);
    			SendClientMessage(playerid, COLOR_YELLOW, DonateMessage);
	    	    PlayerInfo[playerid][pDonateRank] = 0;
				PlayerInfo[playerid][pDonateDay] = 0;
				PlayerInfo[playerid][pDonateMonth] = 0;
				PlayerInfo[playerid][pDonateYear] = 0;
				return 1;
	    	}
 		}
 	}
 	return 0;
}

stock IsPaintjobCompatible(model, paintID) {
	switch(model) {
		case 483: {
		    if(paintID == 0) {
				return 1;
			}
		}
		case 534, 535, 536, 558, 559, 560, 561, 562, 565, 567, 576: {
			return 1;
		}
		case 575: {
		    if(paintID == 0 || paintID == 1) {
		        return 1;
		    }
		}
	}
	
	return 0;
}

stock givePlayerItemEx(playerid, id, item, var) {
	if(item > 0) {
	    givePlayerItem(playerid, id, item, var);
	}
}

stock IsPlayerAtLAPDComputer(playerid) {
	if((IsPlayerInAnyVehicle(playerid) && VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] == 1) || IsPlayerInRangeOfPoint(playerid, 4, 244.8839, 123.8023, 1003.2188) || IsPlayerInRangeOfPoint(playerid, 4, 248.3679, 123.8035, 1003.2188) ||
 	   IsPlayerInRangeOfPoint(playerid, 4, 222.9117, 117.5731, 999.1325) || IsPlayerInRangeOfPoint(playerid, 4, 226.3943, 117.5391, 999.0491)) {
		return 1;
	}
	
	return 0;
}

stock CreateStrip(Float:x, Float:y, Float:z, Float:Angle) {
    for(new i = 0; i < sizeof(SpikeInfo); i++) {
  	    if(SpikeInfo[i][spikeCreated] == 0) {
            SpikeInfo[i][spikeCreated] = 1;
            SpikeInfo[i][spikeX] = x;
            SpikeInfo[i][spikeY] = y;
            SpikeInfo[i][spikeZ] = z - 0.7;
            SpikeInfo[i][spikeObject] = CreateDynamicObject(2899, x, y, z - 0.9, 0, 0, Angle - 90);
	        return 1;
  	    }
  	}

  	return 0;
}

stock DeleteAllStrips() {
    for(new i = 0; i < sizeof(SpikeInfo); i++) {
  	    if(SpikeInfo[i][spikeCreated] == 1) {
  	        SpikeInfo[i][spikeCreated] = 0;
            SpikeInfo[i][spikeX] = 0.0;
            SpikeInfo[i][spikeY] = 0.0;
            SpikeInfo[i][spikeZ] = 0.0;
            DestroyDynamicObject(SpikeInfo[i][spikeObject]);
  	    }
	}

    return 0;
}

stock DeleteClosestStrip(playerid) {
	new Float:X,
	    Float:Y,
	    Float:Z,
	    Float:distance,
	    Float:checkDistance,
	    spike = -1;
	    
	GetPlayerPos(playerid, X, Y, Z);
    for(new i = 0; i < sizeof(SpikeInfo); i++) {
  	    if(IsPlayerInRangeOfPoint(playerid, 5.0, SpikeInfo[i][spikeX], SpikeInfo[i][spikeY], SpikeInfo[i][spikeZ])) {
  	        checkDistance = DistanceBetweenPoints(X, Y, Z, SpikeInfo[i][spikeX], SpikeInfo[i][spikeY], SpikeInfo[i][spikeZ]);
			if(SpikeInfo[i][spikeCreated] == 1 && (spike == -1 || checkDistance < distance)) {
  	        	distance = checkDistance;
  	       		spike = i;
			}
		}
	}
	
	if(spike != -1) {
 		SpikeInfo[spike][spikeCreated] = 0;
        SpikeInfo[spike][spikeX] = 0.0;
        SpikeInfo[spike][spikeY] = 0.0;
        SpikeInfo[spike][spikeZ] = 0.0;
        DestroyDynamicObject(SpikeInfo[spike][spikeObject]);
        return 1;
   	}

	return 0;
}

encode_tires(tires1, tires2, tires3, tires4) {
	return tires1 | (tires2 << 1) | (tires3 << 2) | (tires4 << 3);
}

stock SendPlayerToCharacterCreation(playerid) {
	SendClientMessage(playerid, COLOR_WHITE, "正在绘制角色创建UI ...");
	SendClientMessage(playerid, COLOR_WHITE, "你可以使用你的光标进行个人角色创建.");
	SendClientMessage(playerid, COLOR_WHITE, "如果你的光标消失了, 你可以按下Enter键来进行激活.");
    SetPVarInt(playerid, "CCActive", 1);
    TogglePlayerSpectating(playerid, 0);
}

stock GetNextPhoneNumber() {
	ServerSettings[phone]++;
	mysql_function_query(sqlHandle, "UPDATE `samp_settings` SET `phone` = `phone` + 1", false, "", "");
	return ServerSettings[phone] - 1;
}

stock ShowPlayerBusinessBuyDialog(playerid, interior) {
	if(PlayerInfo[playerid][pWeaponLic] == 0 && (interior == 15 || interior == 20 || interior == 41 || interior == 49 || interior == 50)) {
	    SendClientMessage(playerid, COLOR_GREY, "你需要持枪证才能购买武器.");
	} else if(interior == 7 || interior == 16 || interior == 21 || interior == 28 || interior == 32 || interior == 39) {
	    ShowPlayerDialog(playerid, DIALOG_BUSINESS_ITEMS_CLOTHES, DIALOG_STYLE_LIST, "{FF9900}产品", "帽子与头盔\n手表\n眼镜\n头巾", "选择", "取消");
	} else {
	    new dialogMsg[500];
		for(new i = 0; i < strlen(businessItems[interior]); i++) {
		    if(businessItems[interior][i] != 0) {
				if(isnull(dialogMsg)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s ($%i)", items[businessItems[interior][i]][itemName], items[businessItems[interior][i]][itemPrice]);
				} else {
					format(dialogMsg, sizeof(dialogMsg), "%s\n%s ($%i)", dialogMsg, items[businessItems[interior][i]][itemName], items[businessItems[interior][i]][itemPrice]);
				}
			}
		}

		ShowPlayerDialog(playerid, DIALOG_BUSINESS_ITEMS, DIALOG_STYLE_LIST, "{FF9900}产品", dialogMsg, "购买", "取消");
	}
}

stock CreateBusinessCheckpoints() {
    //businessData[0][businessIntCP] = CreateDynamicCP(768.3138,-1.8435,1000.7215, 1.5, -1, -1, -1, 15.0); // Ganton Gym
	businessData[1][businessIntCP] = CreateDynamicCP(940.9709,3.9936,1000.9400, 1.5, -1, -1, -1, 15.0); // Brothel
	businessData[2][businessIntCP] = CreateDynamicCP(968.8236,-44.9901,1001.1172, 1.5, -1, -1, -1, 15.0); // Brothel 2
	//businessData[3][businessIntCP] = CreateDynamicCP(822.8855,1.8367,1004.1797, 1.5, -1, -1, -1, 15.0); // Inside Track Betting
	//businessData[4][businessIntCP] = CreateDynamicCP(1037.1926,4.9455,1001.2845, 1.5, -1, -1, -1, 15.0); // Blastin' Fools Records
	businessData[5][businessIntCP] = CreateDynamicCP(1207.9532,-27.8261,1000.9531, 1.5, -1, -1, -1, 15.0); // The Big Spread Ranch
	//businessData[6][businessIntCP] = CreateDynamicCP(420.9272,-82.4490,1001.8047, 1.5, -1, -1, -1, 15.0); // Barber Shop
	businessData[7][businessIntCP] = CreateDynamicCP(214.5565,-129.5886,1003.5078, 1.5, -1, -1, -1, 15.0); // Pro-Laps
	businessData[8][businessIntCP] = CreateDynamicCP(-103.9288,-21.8915,1000.7188, 1.5, -1, -1, -1, 15.0); // Sex Shop
	//businessData[9][businessIntCP] = CreateDynamicCP(-201.7801,-43.3099,1002.2734, 1.5, -1, -1, -1, 15.0); // Las Venturas Tattoo parlor
	//businessData[10][businessIntCP] = CreateDynamicCP(-201.7151,-7.9376,1002.2734, 1.5, -1, -1, -1, 15.0); // Lost San Fierro Tattoo parlor
	businessData[11][businessIntCP] = CreateDynamicCP(-29.0067,-184.5702,1003.5469, 1.5, -1, -1, -1, 15.0); // 24/7 vers 1
	businessData[12][businessIntCP] = CreateDynamicCP(453.7561,-107.8192,999.5372 - 1.0, 1.5, -1, -1, -1, 15.0); // Diner 1
	businessData[13][businessIntCP] = CreateDynamicCP(375.7354,-119.8272,1001.4995, 1.5, -1, -1, -1, 15.0); // Pizza Stack
	businessData[14][businessIntCP] = CreateDynamicCP(378.8699,-190.9936,1000.6328, 1.5, -1, -1, -1, 15.0); // Rusty Brown's Donuts
	//businessData[15][businessIntCP] = CreateDynamicCP(307.9738,-140.5426,999.6016, 1.5, -1, -1, -1, 15.0); // Ammunation
	businessData[16][businessIntCP] = CreateDynamicCP(209.6000,-10.9552,1001.2109, 1.5, -1, -1, -1, 15.0); // Victim
	businessData[17][businessIntCP] = CreateDynamicCP(2.2646,-28.1877,1003.5494, 1.5, -1, -1, -1, 15.0); // 24/7 vers 2 - large
	//businessData[18][businessIntCP] = CreateDynamicCP(759.5252,-76.3051,1000.6512, 1.5, -1, -1, -1, 15.0); // Below The Belt Gym LV
	//businessData[19][businessIntCP] = CreateDynamicCP(440.8309,-18.7585,1001.1328, 1.5, -1, -1, -1, 15.0); // World of Coq
	//businessData[20][businessIntCP] = CreateDynamicCP(294.5882,-37.5372,1001.5156, 1.5, -1, -1, -1, 15.0); // Ammu-nation vers 2
	businessData[21][businessIntCP] = CreateDynamicCP(209.2368,-34.5110,1001.9297, 1.5, -1, -1, -1, 15.0); // SubUrban
	businessData[22][businessIntCP] = CreateDynamicCP(1214.9063,-12.3515,1000.9219, 1.5, -1, -1, -1, 15.0); // The Pig Pen
	businessData[23][businessIntCP] = CreateDynamicCP(1956.4194,1017.7507,992.4688, 1.5, -1, -1, -1, 15.0); // Four Dragons
	businessData[24][businessIntCP] = CreateDynamicCP(376.0800,-68.4858,1001.5078, 1.5, -1, -1, -1, 15.0); // Burger shot
	businessData[25][businessIntCP] = CreateDynamicCP(2200.3274,1605.5508,1005.0625, 1.5, -1, -1, -1, 15.0); // Caligula's Casino
	//businessData[26][businessIntCP] = CreateDynamicCP(413.7973,-22.7823,1001.8047, 1.5, -1, -1, -1, 15.0); // Barber Shop 2
	businessData[27][businessIntCP] = CreateDynamicCP(-28.1972,-89.4027,1003.5469, 1.5, -1, -1, -1, 15.0); // 24/7 vers 3
	businessData[28][businessIntCP] = CreateDynamicCP(168.7220,-83.8030,1001.8120, 1.5, -1, -1, -1, 15.0); // Zip
	businessData[29][businessIntCP] = CreateDynamicCP(-2652.5742,1407.4320,906.2771, 1.5, -1, -1, -1, 15.0); // The Pleasure Domes
	//businessData[30][businessIntCP] = CreateDynamicCP(2527.8550,-1289.0632,1031.4219, 1.5, -1, -1, -1, 15.0); // Big Smoke's Crack Palace
	//businessData[31][businessIntCP] = CreateDynamicCP(-2161.1987,640.9415,1052.3817, 1.5, -1, -1, -1, 15.0); // Wu-Zi Mu's
	businessData[32][businessIntCP] = CreateDynamicCP(200.3707,-159.2912,1000.5234, 1.5, -1, -1, -1, 15.0); // Didier Sachs
	businessData[33][businessIntCP] = CreateDynamicCP(1138.9429,-4.0917,1000.6719, 1.5, -1, -1, -1, 15.0); // Casino Redsands West
	businessData[34][businessIntCP] = CreateDynamicCP(498.8815,-20.6210,1000.6797, 1.5, -1, -1, -1, 15.0); // Club
	//businessData[35][businessIntCP] = CreateDynamicCP(-201.9078,-26.0544,1002.2734, 1.5, -1, -1, -1, 15.0); // Los Angeles Tattoo Parlor
	businessData[36][businessIntCP] = CreateDynamicCP(-22.4815,-138.0785,1003.5469, 1.5, -1, -1, -1, 15.0); // 24/7 vers 4
	//businessData[37][businessIntCP] = CreateDynamicCP(2217.0479,-1148.0343,1025.7969, 1.5, -1, -1, -1, 15.0); // Jefferson Motel
	businessData[38][businessIntCP] = CreateDynamicCP(679.3775,-453.0310,-25.6172, 1.5, -1, -1, -1, 15.0); // The Welcome Pump
	businessData[39][businessIntCP] = CreateDynamicCP(204.5618,-101.8607,1005.2578, 1.5, -1, -1, -1, 15.0); // Binco
	businessData[40][businessIntCP] = CreateDynamicCP(-225.6077,1403.2878,27.7734, 1.5, -1, -1, -1, 15.0); // Lil' Probe Inn
	//businessData[41][businessIntCP] = CreateDynamicCP(295.6302,-80.2290,1001.5156, 1.5, -1, -1, -1, 15.0); // Ammu-nation vers 3
	businessData[42][businessIntCP] = CreateDynamicCP(450.7577,-84.3762,999.5547, 1.5, -1, -1, -1, 15.0); // Jay's Diner
	businessData[43][businessIntCP] = CreateDynamicCP(-30.8743,-28.3821,1003.5573, 1.5, -1, -1, -1, 15.0); // 24/7 vers 5
	//businessData[44][businessIntCP] = CreateDynamicCP(963.3330,2149.9480,1011.0234, 1.5, -1, -1, -1, 15.0); // Sindacco Abatoir
	//businessData[45][businessIntCP] = CreateDynamicCP(410.1995,-51.8482,1001.8984, 1.5, -1, -1, -1, 15.0); // Barber Shop 3
	//businessData[46][businessIntCP] = CreateDynamicCP(763.3783,-48.6682,1000.5859, 1.5, -1, -1, -1, 15.0); // Cobra Gym
	//businessData[47][businessIntCP] = CreateDynamicCP(1495.2124,1308.1270,1093.2881, 1.5, -1, -1, -1, 15.0); // Bike School
	businessData[48][businessIntCP] = CreateDynamicCP(-2237.0303,131.0265,1035.4141, 1.5, -1, -1, -1, 15.0); // Zero's RC Shop
	//businessData[49][businessIntCP] = CreateDynamicCP(290.4817,-108.6707,1001.5156, 1.5, -1, -1, -1, 15.0); // Ammu-nation vers 4
	//businessData[50][businessIntCP] = CreateDynamicCP(310.6426,-164.9978,999.5938, 1.5, -1, -1, -1, 15.0); // Ammu-nation vers 5
//	businessData[51][businessIntCP] = CreateDynamicCP(-23.6709,-54.9137,1003.5469, 1.5, -1, -1, -1, 15.0); // 24/7 vers 6
	businessData[52][businessIntCP] = CreateDynamicCP(446.6820,-61.5692,999.6672 - 1.0, 1.5, -1, -1, -1, 15.0); // Secret Valley Diner
	//businessData[53][businessIntCP] = CreateDynamicCP(2185.1597,1622.1636,1043.4104, 1.5, -1, -1, -1, 15.0); // Rosenberg's Office in Caligulas
	businessData[54][businessIntCP] = CreateDynamicCP(755.5723,1439.9590,1102.7031, 1.5, -1, -1, -1, 15.0); // Fanny Batter's Whore House
	businessData[55][businessIntCP] = CreateDynamicCP(369.0222,-6.8307,1001.8516, 1.5, -1, -1, -1, 15.0); // Cluckin' Bell
	//businessData[56][businessIntCP] = CreateDynamicCP(-2032.2665,-117.2450,1035.1719, 1.5, -1, -1, -1, 15.0); // Driving School
	businessData[57][businessIntCP] = CreateDynamicCP(498.6346,-74.8988,998.7578, 1.5, -1, -1, -1, 15.0); // Bar
	businessData[58][businessIntCP] = CreateDynamicCP(2335.0837,-1783.6708,1724.0759, 1.5, -1, -1, -1, 15.0); // Sports Shop
	businessData[59][businessIntCP] = CreateDynamicCP(-786.0617, 501.0451, 1371.7422, 1.5, -1, -1, -1, 15.0); // Liberty City Restaurant
	businessData[60][businessIntCP] = CreateDynamicCP(1096.1882, 2.7834, 1019.4659 - 0.5, 1.5, -1, -1, -1, 15.0); // Irish Pub
}

stock RemovePlayerItemEx(playerid, id) {
	if(getPlayerItemID(playerid, 231) == id) {
	    depRadio[playerid] = 0;
	}
	
	removePlayerItem(playerid, id);
}

stock RemovePlayerItemTypeEx(playerid, type) {
	removePlayerItemType(playerid, type);
	if(type == 231) {
		depRadio[playerid] = 0;
	}
}

stock SetPlayerTrashCP(playerid) {
	new trashID = random(sizeof(trashcans));
	PlayerTextDrawSetString(playerid, TD_JOB_FirstLine, "Collect trash bags from the designated location.");
	PlayerTextDrawShow(playerid, TD_JOB_FirstLine);
	SetPlayerRaceCheckpoint(playerid, 2, trashcans[trashID][0], trashcans[trashID][1], trashcans[trashID][2] - 1.0, 0, 0, 0, 3.0);
	SetPVarInt(playerid, "TrashmasterID", trashID);
	SetPVarInt(playerid, "Trashmaster", 1);
	SetPVarInt(playerid, "TrashCount", 0);
}

stock SetPlayerPizzaCP(playerid) {
	new Float:X,
	    Float:Y,
	    Float:Z,
	    house = -1,
	    Float:distance,
	    info[80];

	GetPlayerPos(playerid, X, Y, Z);
    PlayerTextDrawHide(playerid, TD_JOB_FirstLine);
    while(house == -1 || HouseInfo[house][hID] == 0 || distance > 1000) {
        house = random(MAX_HOUSES);
        distance = DistanceBetweenPoints(X, Y, Z, HouseInfo[house][hX], HouseInfo[house][hY], HouseInfo[house][hZ]);
	}

	format(info, sizeof(info), "Deliver to %i %s, %s.", HouseInfo[house][hHousenumber], HouseInfo[house][hStreet], GetAreaName(HouseInfo[house][hZip]));
	PlayerTextDrawSetString(playerid, TD_JOB_FirstLine, info);
	PlayerTextDrawShow(playerid, TD_JOB_FirstLine);
	SetPlayerRaceCheckpoint(playerid, 2, HouseInfo[house][hX], HouseInfo[house][hY], HouseInfo[house][hZ] - 1.0, 0, 0, 0, 2.0);
	SetPVarInt(playerid, "PizzaHouse", house);
	SetPVarInt(playerid, "PizzaPrice", floatround(distance * 0.04) + 7);
	SetPVarInt(playerid, "Pizza", 1);
}

stock SetPlayerDeliveryCP(playerid) {
	new Float:X,
	    Float:Y,
	    Float:Z,
	    business = -1,
	    Float:distance,
	    info[80];

	GetPlayerPos(playerid, X, Y, Z);
    PlayerTextDrawHide(playerid, TD_JOB_FirstLine);
    while(business == -1 || BusinessInfo[business][bID] == 0 || distance > 1000) {
        business = random(MAX_BUSINESSES);
        distance = DistanceBetweenPoints(X, Y, Z, BusinessInfo[business][bX], BusinessInfo[business][bY], BusinessInfo[business][bZ]);
	}

	format(info, sizeof(info), "Deliver to %i %s, %s.", BusinessInfo[business][bHousenumber], BusinessInfo[business][bStreet], GetAreaName(BusinessInfo[business][bBusinesszip]));
	PlayerTextDrawSetString(playerid, TD_JOB_FirstLine, info);
	PlayerTextDrawShow(playerid, TD_JOB_FirstLine);
	SetPlayerRaceCheckpoint(playerid, 2, BusinessInfo[business][bX], BusinessInfo[business][bY], BusinessInfo[business][bZ] - 1.0, 0, 0, 0, 2.0);
	SetPVarInt(playerid, "DeliveryBusiness", business);
	SetPVarInt(playerid, "DeliveryPrice", floatround(distance * 0.04) + 7);
	SetPVarInt(playerid, "Delivery", 1);
}

stock DistanceBetweenPoints(Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2) {
    return floatround(floatsqroot(((x1 - x2) * (x1 - x2)) + ((y1 - y2) * (y1 - y2)) + ((z1 - z2) * (z1 - z2))));
}

stock GetNextVehiclePlate() {
	new plate[10],
	    query[110];

	format(plate, sizeof(plate), "%s%s%s-%i", alphabet[ServerSettings[plateLetter1]], alphabet[ServerSettings[plateLetter2]], alphabet[ServerSettings[plateLetter3]], ServerSettings[plateNumber]);
    ServerSettings[plateLetter3]++;
    if(ServerSettings[plateLetter3] == 26) {
        ServerSettings[plateLetter2]++;
        if(ServerSettings[plateLetter2] == 26) {
            ServerSettings[plateLetter1]++;
            if(ServerSettings[plateLetter1] == 26) {
				ServerSettings[plateNumber]++;
				ServerSettings[plateLetter3] = 0;
			    ServerSettings[plateLetter2] = 0;
			    ServerSettings[plateLetter1] = 0;
			} else {
			    ServerSettings[plateLetter3] = 0;
			    ServerSettings[plateLetter2] = 0;
			}
		} else {
            ServerSettings[plateLetter3] = 0;
		}
	}

    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_settings` SET `plateNumber` = %i, `plateLetter1` = %i, `plateLetter2` = %i, `plateLetter3` = %i", ServerSettings[plateNumber], ServerSettings[plateLetter1], ServerSettings[plateLetter2], ServerSettings[plateLetter3]);
	mysql_function_query(sqlHandle, query, false, "", "");
	return plate;
}

stock RemoveItemType(user, item) {
	new query[90];
    if(PlayerInfo[user][pItemType][items[item][iIdx]] == item) {
		PlayerInfo[user][pItemVar][items[item][iIdx]] = 0;
		PlayerInfo[user][pItemType][items[item][iIdx]] = 0;
		PlayerInfo[user][pItemIndex][items[item][iIdx]] = 0;
		PlayerInfo[user][pItemID][items[item][iIdx]] = 0;
		RemovePlayerAttachedObject(user, items[item][iIdx]);
		if(items[item][itemType] == ITEM_WEAPON) {
			ResetPlayerWeapons(user);
		}
	}

	mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `owner` = '%e' AND `item` = %i", PlayerInfo[user][pName], item);
	mysql_function_query(sqlHandle, query, false, "", "");
	RemovePlayerItemTypeEx(user, item);
}

stock RemoveItemTypeOffline(name[], type) {
	new query[90];
    mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `owner` = '%e' AND `item` = %i", name, type);
	mysql_function_query(sqlHandle, query, false, "", "");
}

stock RemovePlayerFromFaction(playerid) {
	new query[110];
    if(PlayerInfo[playerid][pFaction] == 1) {
        if(GetPVarInt(playerid, "LAPDDuty") != 0) {
            new skin = GetPVarInt(playerid, "LAPDDuty");
        	PlayerInfo[playerid][pSkin] = skin;
		    // UpdatePlayerHandcuffs(playerid);
		    SetPlayerSkin(playerid, skin);
		    SetPVarInt(playerid, "LAPDDuty", 0);
		    UpdatePlayerColor(playerid);
        } else {
		    new skin = GetPlayerSkin(playerid);
			for(new i = 0; i != sizeof(LAPDSkins); i++) {
				if(LAPDSkins[i] == skin) {
				    SetPlayerStandardSkin(playerid);
				}
			}
		}
		
		RemoveItemType(playerid, 231);
		RemoveItemType(playerid, 232);
		RemoveItemType(playerid, 233);
		RemoveItemType(playerid, 234);
		RemoveItemType(playerid, 235);
		RemoveItemType(playerid, 236);
		RemoveItemType(playerid, 237);
		RemoveItemType(playerid, 238);
		RemoveItemType(playerid, 239);
		depRadio[playerid] = 0;
	} else if(PlayerInfo[playerid][pFaction] == 2) {
	    if(GetPVarInt(playerid, "LSFDDuty") != 0) {
 			new skin = GetPVarInt(playerid, "LSFDDuty");
		    PlayerInfo[playerid][pSkin] = skin;
		    // UpdatePlayerHandcuffs(playerid);
		    SetPlayerSkin(playerid, skin);
		    SetPVarInt(playerid, "LSFDDuty", 0);
		    UpdatePlayerColor(playerid);
	    } else {
		    new skin = GetPlayerSkin(playerid);
	        for(new i = 0; i != sizeof(LSFDSkins); i++) {
				if(LSFDSkins[i] == skin) {
				    SetPlayerStandardSkin(playerid);
				}
			}
		}
		
		RemoveItemType(playerid, 229);
		RemoveItemType(playerid, 230);
		RemoveItemType(playerid, 231);
		RemoveItemType(playerid, 239);
	} else if(PlayerInfo[playerid][pFaction] == 3) {
		if(GetPVarInt(playerid, "SanDuty") != 0) {
        	new skin = GetPVarInt(playerid, "SanDuty");
		    PlayerInfo[playerid][pSkin] = skin;
		    // UpdatePlayerHandcuffs(playerid);
		    SetPlayerSkin(playerid, skin);
		    SetPVarInt(playerid, "SanDuty", 0);
		    UpdatePlayerColor(playerid);
		} else {
			new skin = GetPlayerSkin(playerid);
			for(new i = 0; i != sizeof(SanSkins); i++) {
				if(SanSkins[i] == skin) {
				    SetPlayerStandardSkin(playerid);
				}
			}
		}
	}

	mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `faction` = 0, `rank` = 0, `badge` = 0 WHERE `user` = '%e'", PlayerInfo[playerid][pName]);
	mysql_function_query(sqlHandle, query, false, "", "");
	mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_lockers` WHERE `user` = '%e' AND `faction` = %i", PlayerInfo[playerid][pName], PlayerInfo[playerid][pFaction]);
	mysql_function_query(sqlHandle, query, false, "", "");
	PlayerInfo[playerid][pFaction] = 0;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pBadge] = 0;
}

stock SetPlayerStandardSkin(playerid) {
	if(PlayerInfo[playerid][pGender] == 2) {
	    SetPlayerSkin(playerid, GM_STD_SKIN_FEMALE);
		PlayerInfo[playerid][pSkin] = GM_STD_SKIN_FEMALE;
	} else {
    	SetPlayerSkin(playerid, GM_STD_SKIN);
		PlayerInfo[playerid][pSkin] = GM_STD_SKIN;
	}
	
	// UpdatePlayerHandcuffs(playerid);
}

stock UpdatePlayerHandcuffs(playerid)
{
    if(GetPVarInt(playerid, "Handcuffed") != 0 && PlayerInfo[playerid][pItemType][items[232][iIdx]] == 232)
	{
		RemovePlayerAttachedObject(playerid, items[232][iIdx]);
		SetPlayerAttachedObject(playerid, items[232][iIdx], items[232][objID], items[232][bone], cuffOffsets[PlayerInfo[playerid][pSkin]][0], cuffOffsets[PlayerInfo[playerid][pSkin]][1],
							    cuffOffsets[PlayerInfo[playerid][pSkin]][2], cuffOffsets[PlayerInfo[playerid][pSkin]][3], cuffOffsets[PlayerInfo[playerid][pSkin]][4], cuffOffsets[PlayerInfo[playerid][pSkin]][5],
								cuffOffsets[PlayerInfo[playerid][pSkin]][6], cuffOffsets[PlayerInfo[playerid][pSkin]][7], cuffOffsets[PlayerInfo[playerid][pSkin]][8]);
	}
}

stock PrintSameItemOrHandcuffedMsg(playerid) {
	if(GetPVarInt(playerid, "Handcuffed") == 0) {
	    SendClientMessage(playerid, COLOR_GREY, "你已经携带了此类物品.");
	} else {
		SendClientMessage(playerid, COLOR_GREY, "你的双手已经被手铐铐住了.");
	}
}

stock DeleteUnownedItems()
{
	mysql_function_query(sqlHandle, "DELETE FROM `samp_items` WHERE `owner` = NULL", false, "", "");
}

stock ShowPlayerGiveItemDialog(playerid) {
    new pItems[22],
		dialogMsg[850];

	getItemPage(playerid, pItems, sizeof(pItems), 1);
	if(pItems[0] != 0) {
		for(new i = 0; i != sizeof(pItems); i++) {
			if(pItems[i] == 0) {
				break;
			}

			if(isnull(dialogMsg)) {
			    if(pItems[i] >= 4 && pItems[i] <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 3) {
    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 19) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, i));
                } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
				}
			} else {
			    if(pItems[i] >= 4 && pItems[i] <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 3) {
    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else if(pItems[i] == 19) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
                } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
				}
			}

			if(getItemID(playerid, i) == PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]]) {
			    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
			}
		}

		if(itemIndexExists(playerid, 21)) {
			format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
		}

        SetPVarInt(playerid, "CurrentItemPage", 1);
		ShowPlayerDialog(playerid, DIALOG_GIVE_ITEMS, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "选择", "取消");
	} else {
		SendClientMessage(playerid, COLOR_GREY, "你没有任何物品.");
	}
}

stock ShowPlayerInfoTextDrawMid(playerid, text[], time) {
	PlayerTextDrawSetString(playerid, TD_Mid_Info, text);
	PlayerTextDrawShow(playerid, TD_Mid_Info);
	SetTimerEx("DisableMidTD", time, false, "i", playerid);
}

stock playerCBugging(playerid) {
	new msg[128];
	CheckCrouch[playerid] = 0;
	format(msg, sizeof(msg), "*** C-Bug Warning: %s (ID: %i) is presumably making use of the 'C-Bug'.", GetNameWithSpace(playerid), playerid);
	AdminMessageLog(msg, playerid, "C-Bug Warning");
	SetPVarInt(playerid, "AntiCBug", 1);
	AntiCBugTimerVar[playerid] = SetTimerEx("AntiCBugTimer", 60000, false, "i", playerid);
}

stock isPlayerSwimmingOrJumping(playerid) {
	new animIdx = GetPlayerAnimationIndex(playerid);
	if((animIdx >= 1061 && animIdx <= 1067) || (animIdx >= 1538 && animIdx <= 1544)) {
		return 1;
	}

	return 0;
}

stock LoadFactionVehicles() {
	mysql_function_query(sqlHandle, "SELECT `id`, `model`, `color1`, `color2`, `x`, `y`, `z`, `a`, `factionid`, `plate` FROM `samp_faction_vehicles`", true, "OnScriptLoadFactionVehicles", "");
}

stock UpdatePlayerColor(playerid) {
    if(GetPVarInt(playerid, "AdminDuty") != 0)
	{
		SetPlayerColor(playerid, 0x4e6c8200);
	}
	else if(GetPVarInt(playerid, "ModDuty") != 0)
	{
	    SetPlayerColor(playerid, COLOR_MODS);
	}
	else if(GetPVarInt(playerid, "LAPDDuty") != 0)
	{
		SetPlayerColor(playerid, COLOR_COPBLUE);
	}
	else if(GetPVarInt(playerid, "LAPDuty") != 0 && ColorSelectedWhite[playerid])
	{
	    SetPlayerColor(playerid, COLOR_WHITE);
	}
	else if(GetPVarInt(playerid, "LAPDuty") != 0 && ColorSelectedBlue[playerid])
	{
	    SetPlayerColor(playerid, COLOR_COPBLUE);
	}
	else if(GetPVarInt(playerid, "LSFDDuty") != 0)
	{
		SetPlayerColor(playerid, COLOR_EMTRED);
	}
	else if(GetPVarInt(playerid, "LoadData") == 0)
	{
		SetPlayerColor(playerid, COLOR_WHITE);
	}
	else
	{
		SetPlayerColor(playerid, COLOR_WHITE);
	}
}

stock payday(playerid) {
	new query[110];
	mysql_format(sqlHandle, query, sizeof(query), "SELECT `rentHours`, `vehicle`, `rented` FROM `samp_vehicles` WHERE `owner` = '%e'", PlayerInfo[playerid][pName]);
	mysql_function_query(sqlHandle, query, true, "OnPayDayCheckRentals", "i", playerid);
}

stock LoadStaticVehicles() {
	new vehicle,
	    color1,
	    color2;

	for(new i = 0; i != sizeof(staticVehicles); i++) {
	    color1 = (staticVehicles[i][sColor1] == -1) ? (randomColor1Picker[random(sizeof(randomColor1Picker) - 1)]) : staticVehicles[i][sColor1];
	    color2 = (staticVehicles[i][sColor2] == -1) ? (randomColor2Picker[random(sizeof(randomColor2Picker) - 1)]) : staticVehicles[i][sColor2];
		vehicle = CreateVehicle(staticVehicles[i][jModel], staticVehicles[i][jX], staticVehicles[i][jY], staticVehicles[i][jZ], staticVehicles[i][jA], color1, color2, 600);
		SetVehicleNumberPlate(vehicle, staticVehicles[i][sPlate]);
		strcat(VehicleInfo[vehicle][vPlate], staticVehicles[i][sPlate]);
		VehicleInfo[vehicle][vX] = staticVehicles[i][jX];
		VehicleInfo[vehicle][vY] = staticVehicles[i][jY];
		VehicleInfo[vehicle][vZ] = staticVehicles[i][jZ];
		VehicleInfo[vehicle][vA] = staticVehicles[i][jA];
		VehicleInfo[vehicle][vColor1] = color1;
		VehicleInfo[vehicle][vColor2] = color2;
		VehicleInfo[vehicle][vType] = staticVehicles[i][jType];
		VehicleInfo[vehicle][vFuel] = vehicleData[staticVehicles[i][jModel] - 400][tank];
	 	VehicleInfo[vehicle][vHealth] = 1000;
	 	VehicleInfo[vehicle][vModifications][8] = 1086;
		if(IsNotLockableWithoutEngine(staticVehicles[i][jModel])) {
        	SetVehicleParamsEx(vehicle, 0, 0, 0, 0, 0, 0, 0);
		} else if(IsNotLockableWithEngine(staticVehicles[i][jModel]) == 0) {
	    	SetVehicleParamsEx(vehicle, 0, 0, 0, 1, 0, 0, 0);
		} else {
		    SetVehicleParamsEx(vehicle, 0, 0, 0, 0, 0, 0, 0);
		}

		FuelTimerVar[vehicle] = SetTimerEx("FuelTimer", GM_FUELTIMER, true, "d", vehicle);
	}

	printf("[veh_database] ->_ %i 辆载具已成功加载.", sizeof(staticVehicles));
}

stock SetNextVehicleComponent(playerid, model, getFirst = 0) {
	if(getFirst != 0 || strlen(validModelComponents[model - 400]) > 1) {
		if(currentVehicleComponent[playerid] + 1 < strlen(validModelComponents[model - 400])) {
			for(new a = currentVehicleComponent[playerid] + 1; a != strlen(validModelComponents[model - 400]); a++) {
			    if(vehicleComponents[validModelComponents[model - 400][a] - 1000][comPermission] != 0) {
			        currentVehicleComponent[playerid] = a;
					PlayerTextDrawSetString(playerid, TD_M_Comp, vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comName]);
					if(addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] == 0) {
					    PlayerTextDrawSetString(playerid, TD_M_Add, "Add Component");
					} else if(addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] == validModelComponents[model - 400][currentVehicleComponent[playerid]]) {
						PlayerTextDrawSetString(playerid, TD_M_Add, "Remove Component");
					} else {
					    PlayerTextDrawSetString(playerid, TD_M_Add, "Change Component");
					}

			        return 1;
			    }
			}
		}

		for(new b = 0; b != currentVehicleComponent[playerid]; b++) {
            if(vehicleComponents[validModelComponents[model - 400][b] - 1000][comPermission] != 0) {
                currentVehicleComponent[playerid] = b;
				PlayerTextDrawSetString(playerid, TD_M_Comp, vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comName]);
				if(addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] == 0) {
				    PlayerTextDrawSetString(playerid, TD_M_Add, "Add Component");
				} else if(addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] == validModelComponents[model - 400][currentVehicleComponent[playerid]]) {
					PlayerTextDrawSetString(playerid, TD_M_Add, "Remove Component");
				} else {
				    PlayerTextDrawSetString(playerid, TD_M_Add, "Change Component");
				}

				return 1;
			}
		}
	}

	return 0;
}

stock SetPreviousVehicleComponent(playerid, model) {
	if(strlen(validModelComponents[model - 400]) > 1) {
		if(currentVehicleComponent[playerid] - 1 >= 0) {
			for(new a = currentVehicleComponent[playerid] - 1; a >= 0; a--) {
			    if(vehicleComponents[validModelComponents[model - 400][a] - 1000][comPermission] != 0) {
			        currentVehicleComponent[playerid] = a;
					PlayerTextDrawSetString(playerid, TD_M_Comp, vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comName]);
					if(addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] == 0) {
					    PlayerTextDrawSetString(playerid, TD_M_Add, "Add Component");
					} else if(addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] == validModelComponents[model - 400][currentVehicleComponent[playerid]]) {
						PlayerTextDrawSetString(playerid, TD_M_Add, "Remove Component");
					} else {
					    PlayerTextDrawSetString(playerid, TD_M_Add, "Change Component");
					}

			        return 1;
			    }
			}
		}

		for(new b = strlen(validModelComponents[model - 400]) - 1; b != currentVehicleComponent[playerid]; b--) {
            if(vehicleComponents[validModelComponents[model - 400][b] - 1000][comPermission] != 0) {
                currentVehicleComponent[playerid] = b;
				PlayerTextDrawSetString(playerid, TD_M_Comp, vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comName]);
				if(addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] == 0) {
				    PlayerTextDrawSetString(playerid, TD_M_Add, "Add Component");
				} else if(addedModifications[playerid][vehicleComponents[validModelComponents[model - 400][currentVehicleComponent[playerid]] - 1000][comSlot]] == validModelComponents[model - 400][currentVehicleComponent[playerid]]) {
					PlayerTextDrawSetString(playerid, TD_M_Add, "Remove Component");
				} else {
				    PlayerTextDrawSetString(playerid, TD_M_Add, "Change Component");
				}

				return 1;
			}
		}
	}

	return 0;
}

stock IsVehicleModable(vehicleid) {
	new model = GetVehicleModel(vehicleid);
	if(model == 406 || model == 417 || model == 425 || model == 430 || model == 432 || model == 435 || model == 441 || model == 446 || model == 447 || model == 449 || model == 450 ||
       model == 452 || model == 453 || model == 454 || model == 460 || model == 464 || model == 465 || model == 469 || model == 472 || model == 473 || model == 476 || model == 481 ||
       model == 484 || model == 485 || model == 486 || model == 487 || model == 488 || model == 493 || model == 497 || model == 501 || model == 509 || model == 510 || model == 511 ||
       model == 512 || model == 513 || model == 519 || model == 520 || model == 537 || model == 538 || model == 548 || model == 553 || model == 563 || model == 564 || model == 569 ||
       model == 570 || model == 577 || model == 584 || model == 590 || model == 591 || model == 592 || model == 593 || model == 594 || model == 595 || model == 606 || model == 607 ||
       model == 608 || model == 610 || model == 611) {
		return 0;
	}

	return 1;
}

stock HideVehicleTextDraw(playerid) {
    TextDrawHideForPlayer(playerid, TD_SM_Box);
	TextDrawHideForPlayer(playerid, TD_SM_Vehiclename);
	TextDrawHideForPlayer(playerid, TD_SM_Speed);
	TextDrawHideForPlayer(playerid, TD_SM_Fuel);
	PlayerTextDrawHide(playerid, TD_SM_SBH);
	PlayerTextDrawHide(playerid, TD_SM_Vehiclename_Value);
	PlayerTextDrawHide(playerid, TD_SM_SBH_Value);
	PlayerTextDrawHide(playerid, TD_SM_Fuel_Value);
	PlayerTextDrawHide(playerid, TD_SM_Speed_Value);
}

stock ShowVehicleTextDraw(playerid, vehicle) {
	new fuel[14];
    if(DoesVehicleObtainSeatbelts(vehicle)) {
		PlayerTextDrawSetString(playerid, TD_SM_SBH, "Seatbelt:");
		PlayerTextDrawSetString(playerid, TD_SM_SBH_Value, (seatbelt[playerid] != 0) ? ("On") : ("Off"));
	} else {
		PlayerTextDrawSetString(playerid, TD_SM_SBH, "Helmet:");
		PlayerTextDrawSetString(playerid, TD_SM_SBH_Value, (helmet[playerid] != 0) ? ("On") : ("Off"));
	}
    new model=GetVehicleModel(vehicle);
	format(fuel, sizeof(fuel), "%i/%i", VehicleInfo[vehicle][vFuel],vehicleData[model-400][tank]);
	PlayerTextDrawSetString(playerid, TD_SM_Fuel_Value, fuel);
    PlayerTextDrawSetString(playerid, TD_SM_Vehiclename_Value, vehicleData[GetVehicleModel(vehicle) - 400][typeName]);
    PlayerTextDrawSetString(playerid, TD_SM_Speed_Value, "0 KM/H");
	TextDrawShowForPlayer(playerid, TD_SM_Box);
    TextDrawShowForPlayer(playerid, TD_SM_Vehiclename);
    TextDrawShowForPlayer(playerid, TD_SM_Speed);
	TextDrawShowForPlayer(playerid, TD_SM_Fuel);
	PlayerTextDrawShow(playerid, TD_SM_SBH);
	PlayerTextDrawShow(playerid, TD_SM_Vehiclename_Value);
	PlayerTextDrawShow(playerid, TD_SM_SBH_Value);
	PlayerTextDrawShow(playerid, TD_SM_Fuel_Value);
	PlayerTextDrawShow(playerid, TD_SM_Speed_Value);
}

stock FadeScreen(playerid, r, g, b, a, time) {
	PlayerTextDrawBoxColor(playerid, TD_Fader, CreateColor(r, g, b, a));
	PlayerTextDrawShow(playerid, TD_Fader);
	fadeTimerVar[playerid] = SetTimerEx("fadeTimer", time, 0, "i", playerid);
}

stock CreateColor(r, g, b, a) {
    return ((((r) & 0xFF) << 24) | (((g) & 0xFF) << 16) | (((b) & 0xFF) << 8) | (((a) & 0xFF) << 0));
}

stock CreatePayNSprays() {
    CreateDynamicPickup(1239, 23, 2073.9824, -1831.3842, 13.5469); // Pay'n'Spray @ Idlewood
    CreateDynamicPickup(1239, 23, 719.6918, -466.6411, 16.3437); // Pay'n'Spray @ Dillimore
    CreateDynamicPickup(1239, 23, 1025.0676, -1031.7937, 31.9556); // Pay'n'Spray @ Temple
    CreateDynamicPickup(1239, 23, 488.4973, -1730.9447, 10.8725); // Pay'n'Spray @ Santa Maria
    CreateDynamic3DTextLabel("[修车店]", COLOR_DARKYELLOW, 2073.9824, -1831.3842, 13.5469 + 0.6, 15, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
    CreateDynamic3DTextLabel("[修车店]", COLOR_DARKYELLOW, 719.6918, -466.6411, 16.3437 + 0.6, 15, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
    CreateDynamic3DTextLabel("[修车店]", COLOR_DARKYELLOW, 1025.0676, -1031.7937, 31.9556 + 0.6, 15, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
    CreateDynamic3DTextLabel("[修车店]", COLOR_DARKYELLOW, 488.4973, -1730.9447, 10.8725 + 0.6, 15, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
}

stock IsNotLockableWithEngine(model) {
	if(model == 448 || model == 461 || model == 462 || model == 463 || model == 468 || model == 471 || model == 521 || model == 522 || model == 523 || model == 571 || model == 572 ||
	   model == 581 || model == 586) {
		return 1;
	}

	return 0;
}

stock IsNotLockableWithoutEngine(model)
{
    if(model == 481 || model == 509 || model == 510 || model == 487 || model == 471)
	{
		return 1;
	}

	return 0;
}

stock LoadRentalReminder(playerid) {
	new query[105];
	mysql_format(sqlHandle, query, sizeof(query), "SELECT `rentHours` FROM `samp_vehicles` WHERE `rented` != 0 AND `owner` = '%e'", PlayerInfo[playerid][pName]);
	mysql_function_query(sqlHandle, query, true, "OnCheckRentalTD", "i", playerid);
}

stock IsSurfableVehicle(v)
{
	if(v == 430 || v == 446 || v == 452 || v == 453 || v == 454 || v == 472 || v == 473 || v == 484 || v == 493 || v == 595) {
	    return 1;
	}

	return 0;
}

stock IsGoldDonateVehicle(v)
{
	if(v == 411 || v == 451 || v == 521)
	{
	    return 1;
	}
	return 0;
}

stock IsSilverDonateVehicle(v)
{
	if(v == 506 || v == 507)
	{
	    return 1;
	}
	return 0;
}

stock IsBronzeDonateVehicle(v)
{
	if(v == 481 || v == 471)
	{
	    return 1;
	}
	return 0;
}

stock GetNextDealerVehicle(v) {
	for(new i = v; i != sizeof(vehicleData); i++) {
		if(vehicleData[i][dealership] != 0 && i != 49 && i != 169 && i != 170 && i != 190 && i != 137 && i != 138) {
			return i;
		}
	}

	return -1;
}

stock GetPreviousDealerVehicle(v) {
	for(new i = v - 2; i >= 0; i--) {
		if(vehicleData[i][dealership] != 0 && i != 49 && i != 169 && i != 170 && i != 190 && i != 137 && i != 138) {
			return i;
		}
	}

	return -1;
}

stock GetVehicleTypeName(type) {
	new str[20];
	switch(type) {
		case 1: {
		    strcat(str, "工作车辆");
		}
		case 3: {
		    strcat(str, "私人车辆");
		}
		case 4: {
		    strcat(str, "驾校车辆");
		}
		case 5: {
		    strcat(str, "工作车辆");
		}
		default: {
		    strcat(str, "市政车辆"); // it was unknown but for the roleplay I defined it as goverment vehicle
		}
	}

	return str;
}

stock BanExDelay(playerid, reason[]) {
	SetTimerEx("BanExDelayCall", 1000, 0, "is", playerid, reason);
}

stock stringToUpper(string[]) {
	new retStr[MAX_STRING],
		i,
		j;

	while ((j = string[i])) retStr[i++] = chrtoupper(j);
	retStr[i] = '\0';
	return retStr;
}

stock stringToLower(string[]) {
    new retStr[MAX_STRING],
		i,
		j;

	while ((j = string[i])) retStr[i++] = chrtolower(j);
	retStr[i] = '\0';
	return retStr;
}

stock itemLowerCase(type) {
    new retStr[MAX_STRING];
	if(items[type][lowerCase] != 0) {
	    new i,
			j;

		while ((j = items[type][itemName][i])) retStr[i++] = chrtolower(j);
		retStr[i] = '\0';
	} else {
		format(retStr, sizeof(retStr), "%s", items[type][itemName]);
	}

	return retStr;
}

stock DeterminePlayerID(id) {
    foreach(new i : Player) {
		if(PlayerInfo[i][pMasked] == id) {
		    return i;
		}
	}

	return -1;
}

/*stock UnsetPlayerMask(playerid) {
    if(PlayerInfo[playerid][pMaskNum] != 0 && IsPlayerMasked(playerid) == 0) {
		format(PlayerInfo[playerid][pMaskID], 25, "%s", EOS);
		PlayerInfo[playerid][pMaskNum] = 0;
		DestroyDynamic3DTextLabel(PlayerInfo[playerid][pMask3D]);
		foreach(new i : Player) {
			ShowPlayerNameTagForPlayer(i, playerid, 1);
		}
	}
}*/

/*stock IsPlayerMasked(playerid) {
	if((PlayerInfo[playerid][pItemType][1] != 0 && PlayerInfo[playerid][pItemType][2] != 0) || (PlayerInfo[playerid][pItemType][1] != 0 && PlayerInfo[playerid][pItemType][3] != 0) ||
	   (PlayerInfo[playerid][pItemType][2] != 0 && PlayerInfo[playerid][pItemType][3] != 0) || PlayerInfo[playerid][pItemType][1] == 19036 || PlayerInfo[playerid][pItemType][1] == 19037
       || PlayerInfo[playerid][pItemType][1] == 19038 || PlayerInfo[playerid][pItemType][1] == 18974 || PlayerInfo[playerid][pItemType][1] == 19163) {
		return 1;
	}

	return 0;
}*/

stock LoadServerSettings() {
	mysql_function_query(sqlHandle, "SELECT `maskID`, `plateNumber`, `plateLetter1`, `plateLetter2`, `plateLetter3`, `phone` FROM `samp_settings`", true, "OnServerLoadSettings", "");
}

stock SendMessageToLSFD(msg[]) {
	foreach(new i : Player) {
		if(PlayerInfo[i][pFaction] == 2) {
			SendClientMessage(i, COLOR_EMTRED, msg);
		}
	}
}

stock SendMessageToLAPD(msg[]) {
	foreach(new i : Player) {
	    if(PlayerInfo[i][pFaction] == 1) {
			SendClientMessage(i, COLOR_BLUE, msg);
		}
	}
}

stock SetPlayerCalling(caller, called, callingNumber, calledNumber, fail) {
	for(new i = 0; i != MAX_CALLS; i++) {
		if(IncomingCalls[i][cCaller] == -1) {
		    new msg[90];
		    IncomingCalls[i][cCaller] = caller;
		    IncomingCalls[i][cCalled] = called;
		    IncomingCalls[i][cCallingNumber] = callingNumber;
		    IncomingCalls[i][cCalledNumber] = calledNumber;
		    IncomingCalls[i][cFail] = fail;

		    format(msg, sizeof(msg), "你现在正在拨打 '%i'", calledNumber);
		    SendClientMessage(caller, COLOR_WHITE, msg);

		    if(PlayerInfo[caller][pItemVar][items[PlayerInfo[caller][pItemType][10]][iIdx]] == callingNumber) {
			    format(msg, sizeof(msg), "** %s 使用手里的手机拨打电话.", GetNameWithSpace(caller, 1));
			} else {
			    format(msg, sizeof(msg), "** %s 取出%s 拨打电话.", GetNameWithSpace(caller, 1), itemLowerCase(PlayerInfo[caller][pItemType][10]));
			    SetPlayerAttachedObject(caller, IDX_CELLPHONE, items[PlayerInfo[caller][pItemType][10]][objID], items[PlayerInfo[caller][pItemType][10]][bone],
												items[PlayerInfo[caller][pItemType][10]][attX], items[PlayerInfo[caller][pItemType][10]][attY], items[PlayerInfo[caller][pItemType][10]][attZ],
						 						items[PlayerInfo[caller][pItemType][10]][attRotX], items[PlayerInfo[caller][pItemType][10]][attRotY], items[PlayerInfo[caller][pItemType][10]][attRotZ]);
			}

			ProxDetector(12, caller, msg, COLOR_PINK);
			SetPlayerSpecialAction(caller, SPECIAL_ACTION_USECELLPHONE);
			SetPVarInt(caller, "UseCellphone", 1);
			SetPVarInt(caller, "CallingNumber", callingNumber);
			PlayerPlaySound(caller, 3600, 0, 0, 0);
			return;
		}
	}

	SendClientMessage(caller, COLOR_GREY, "对不起, 您所拨打的电话暂时无法接通, 请稍后再拨.");
}

stock SetPlayerCallingEx(caller, called, callingNumber, calledNumber, fail, iType) {
	for(new i = 0; i != MAX_CALLS; i++) {
		if(IncomingCalls[i][cCaller] == -1) {
		    new msg[90];
		    IncomingCalls[i][cCaller] = caller;
		    IncomingCalls[i][cCalled] = called;
		    IncomingCalls[i][cCallingNumber] = callingNumber;
		    IncomingCalls[i][cCalledNumber] = calledNumber;
		    IncomingCalls[i][cFail] = fail;

		    format(msg, sizeof(msg), "你现在正在拨打 '%i'", calledNumber);
		    SendClientMessage(caller, COLOR_WHITE, msg);

		    if(PlayerInfo[caller][pItemVar][items[PlayerInfo[caller][pItemType][10]][iIdx]] == callingNumber) {
			    format(msg, sizeof(msg), "** %s 使用手里的手机拨打电话.", GetNameWithSpace(caller, 1));
			} else {
			    format(msg, sizeof(msg), "** %s 取出%s 拨打电话.", GetNameWithSpace(caller, 1), itemLowerCase(iType));
			    SetPlayerAttachedObject(caller, IDX_CELLPHONE, items[iType][objID], items[iType][bone],
												items[iType][attX], items[iType][attY], items[iType][attZ],
						 						items[iType][attRotX], items[iType][attRotY], items[iType][attRotZ]);
			}

			ProxDetector(12, caller, msg, COLOR_PINK);
			SetPlayerSpecialAction(caller, SPECIAL_ACTION_USECELLPHONE);
			SetPVarInt(caller, "UseCellphone", 1);
			SetPVarInt(caller, "CallingNumber", callingNumber);
			PlayerPlaySound(caller, 3600, 0, 0, 0);
			return;
		}
	}

	SendClientMessage(caller, COLOR_GREY, "对不起, 您所拨打的电话暂时无法接通, 请稍后再拨.");
}

stock UnsetIncomingCall(id) {
	IncomingCalls[id][cCallingNumber] = 0;
	IncomingCalls[id][cCalledNumber] = 0;
	IncomingCalls[id][cCaller] = -1;
	IncomingCalls[id][cCalled] = -1;
	IncomingCalls[id][cFail] = 0;
}

stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance) {
    new Float:a;
    GetPlayerPos(playerid, x, y, a);
    GetPlayerFacingAngle(playerid, a);
    if(GetPlayerVehicleID(playerid)) {
      GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
    }

    x += (distance * floatsin(-a, degrees));
    y += (distance * floatcos(-a, degrees));
}

stock SetPlayerItem(playerid, iType, iVar = 0)
{
	new query[120];
	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_items` (`owner`, `item`, `var`) VALUES ('%e', %i, %i)", PlayerInfo[playerid][pName], iType, iVar);
	mysql_function_query(sqlHandle, query, false, "OnServerSetItem", "iii", playerid, iType, iVar);
}

stock SetPlayerWeapon(playerid, iType, iVar = 0)
{
	new query[120];
	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_weapons` (`owner`, `item`, `var`) VALUES ('%e', %i, %i)", PlayerInfo[playerid][pName], iType, iVar);
	mysql_function_query(sqlHandle, query, false, "OnServerSetWeapon", "iii", playerid, iType, iVar);
}

stock DestroyBoomBox(slot) {
    DestroyDynamicObject(boomboxes[slot][boomObjID]);
    boomboxes[slot][boomItemType] = 0;
	boomboxes[slot][boomItemID] = 0;
	boomboxes[slot][boomX] = 0;
	boomboxes[slot][boomY] = 0;
	boomboxes[slot][boomZ] = 0;
	boomboxes[slot][boomObjID] = 0;
	boomboxes[slot][boomItemVar] = 0;
	boomboxes[slot][boomItemIdx] = 0;
	format(boomboxes[slot][boomOwner], MAX_PLAYER_NAME, "%s", EOS);
	format(boomboxes[slot][boomRadio], 200, "%s", EOS);
	foreach(new i : Player) {
		if(PlayerInfo[i][pBoombox] == slot) {
			PlayerInfo[i][pBoombox] = -1;
			StopAudioStreamForPlayer(i);
		}
	}
	
	Iter_Remove(iter_boomboxes, slot);
}

stock DestroyDroppedItem(slot)
{
    DestroyDynamicObject(DroppedItems[slot][objID]);
	if(IsValidDynamic3DTextLabel(DroppedItems[slot][txt3D]))
	{
		DestroyDynamic3DTextLabel(DroppedItems[slot][txt3D]);
	}

    DroppedItems[slot][itemType] = 0;
	DroppedItems[slot][iID] = 0;
	DroppedItems[slot][iX] = 0;
	DroppedItems[slot][iY] = 0;
	DroppedItems[slot][iZ] = 0;
	DroppedItems[slot][objID] = 0;
	DroppedItems[slot][itemVar] = 0;
	DroppedItems[slot][itemIdx] = 0;
	DroppedItems[slot][itemInt] = -1;
	DroppedItems[slot][itemVW] = -1;
}

stock SetUpBoombox(playerid, Float:X, Float:Y, Float:Z, bItemType, itemID, itemVariable, idx) {
    new index = Iter_Free(iter_boomboxes),
        Float:A;

    Iter_Add(iter_boomboxes, index);
    GetPlayerFacingAngle(playerid, A);
	format(boomboxes[index][boomOwner], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][pName]);
	boomboxes[index][boomItemType] = bItemType;
	boomboxes[index][boomX] = X;
	boomboxes[index][boomY] = Y;
	boomboxes[index][boomZ] = Z + items[bItemType][adjZ];
	boomboxes[index][boomItemID] = itemID;
	boomboxes[index][boomItemVar] = itemVariable;
	boomboxes[index][boomItemIdx] = idx;
	boomboxes[index][boomObjID] = CreateDynamicObject(items[bItemType][objID], X, Y, Z + items[bItemType][adjZ], items[bItemType][adjRotX], items[bItemType][adjRotY], A);
}

stock CreateDroppedItem(slot, Float:X, Float:Y, Float:Z, item, itemID, itemVariable, idx, itInt, itVW)
{   
	DroppedItems[slot][objID] = CreateDynamicObject(items[item][objID], X, Y, Z + items[item][adjZ], items[item][adjRotX], items[item][adjRotY], items[item][adjRotZ], itVW, itInt);
	new string[128];
	format(string, sizeof(string), "%s\n[/pickitem]", items[item][itemName]);
	DroppedItems[slot][txt3D] = CreateDynamic3DTextLabel(string, -1, X, Y, Z + items[item][adjZ] + 0.3, 1.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, itVW, itInt, -1, 100.0);
	
	DroppedItems[slot][itemIdx] = idx;
	DroppedItems[slot][itemType] = item;
	DroppedItems[slot][iX] = X;
	DroppedItems[slot][iY] = Y;
	DroppedItems[slot][iZ] = Z + items[item][adjZ];
	DroppedItems[slot][iID] = itemID;
	DroppedItems[slot][itemVar] = itemVariable;
	DroppedItems[slot][itemInt] = itInt;
	DroppedItems[slot][itemVW] = itVW;
}

stock SetPlayerHealthAndLimit(playerid, Float:health) {
	SetPVarInt(playerid, "SettingHealth", 1);
	if(health > GetPVarFloat(playerid, "Health")) {
		SetPVarFloat(playerid, "Health", health);
		SetPlayerHealth(playerid, health);
	} else {
		SetPlayerHealth(playerid, health);
		SetPVarFloat(playerid, "Health", health);
	}

	SetPVarInt(playerid, "SettingHealth", 0);
}

stock SetPlayerArmourAndLimit(playerid, Float:armour) {
	SetPVarInt(playerid, "SettingArmour", 1);
	if(armour > GetPVarFloat(playerid, "Armour")) {
		SetPVarFloat(playerid, "Armour", armour);
		SetPlayerArmour(playerid, armour);
	} else {
		SetPlayerArmour(playerid, armour);
		SetPVarFloat(playerid, "Armour", armour);
	}

	SetPVarInt(playerid, "SettingArmour", 0);
}

stock GivePlayerMoneyEx(playerid, money) {
	new text[25];
	PlayerInfo[playerid][pMoney] += money;
	GivePlayerMoney(playerid, money);
	if(money < 0) {
		format(text, sizeof(text), "~r~-$%i", money * (-1));
	} else {
	    format(text, sizeof(text), "~g~$%i", money);
	}

    PlayerTextDrawSetString(playerid, TD_Money_Update, text);
	PlayerTextDrawShow(playerid, TD_Money_Update);
	SetTimerEx("DisableMoneyTD", 3000, false, "i", playerid);
}

stock ResetPlayerMoneyEx(playerid) {
	ResetPlayerMoney(playerid);
    GivePlayerMoney(playerid, PlayerInfo[playerid][pMoney]);
}

stock AdminMessageLog(message[], playerid, title[], adminMsg = 1)
{
    AdminLog(playerid, title, message);
	if(adminMsg != 0)
	{
	    if(PlayerInfo[playerid][pAdminlevel] >= 1)
	    {
			SendMessageToAdmins(message);
		}
	}
}

stock AdminLog(playerid, title[], text[]) {
	new query[500];
    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_admin_log` (`title`, `log`, `date`, `ip`) VALUES ('%e', '%e', NOW(), '%e')", title, text, PlayerInfo[playerid][pIP]);
    mysql_function_query(sqlHandle, query, false, "", "");
}

stock CreateFactionVehicle(vehicle) {
	new query[220];
	mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_faction_vehicles` (`model`, `color1`, `color2`, `x`, `y`, `z`, `a`, `factionid`, `plate`) VALUES (%i, %i, %i, %f, %f, %f, %f, %i, '%e')",
					GetVehicleModel(vehicle),
					VehicleInfo[vehicle][vColor1],
					VehicleInfo[vehicle][vColor2],
					VehicleInfo[vehicle][vX],
					VehicleInfo[vehicle][vY],
					VehicleInfo[vehicle][vZ],
					VehicleInfo[vehicle][vA],
					FactionInfo[VehicleInfo[vehicle][vFaction]][fID],
					VehicleInfo[vehicle][vPlate]);
	mysql_function_query(sqlHandle, query, false, "OnScriptCreateFactionVehicle", "i", vehicle);
}

stock IsATrunkCar(vehicleid) {
	new pveh = GetVehicleModel(vehicleid);
    if(pveh == 406 || pveh == 408 || pveh == 417 || pveh == 425 || pveh == 430 || pveh == 431 || pveh == 432 || pveh == 435 || pveh == 434 || pveh == 437 || pveh == 441 || pveh == 443 ||
		pveh == 446 || pveh == 447 || pveh == 449 || pveh == 450 || pveh == 452 || pveh == 453 || pveh == 454 || pveh == 457 || pveh == 460 || pveh == 464 || pveh == 465 ||
		pveh == 469 || pveh == 472 || pveh == 473 || pveh == 476 || pveh == 481 || pveh == 484 || pveh == 485 || pveh == 486 || pveh == 487 || pveh == 488 || pveh == 493 ||
		pveh == 497 || pveh == 501 || pveh == 509 || pveh == 510 || pveh == 511 || pveh == 512 || pveh == 513 || pveh == 519 || pveh == 520 || pveh == 528 || pveh == 530 ||
		pveh == 531 || pveh == 532 || pveh == 537 || pveh == 538 || pveh == 539 || pveh == 548 || pveh == 553 || pveh == 563 || pveh == 564 || pveh == 568 || pveh == 569 ||
		pveh == 570 || pveh == 571 || pveh == 574 || pveh == 577 || pveh == 578 || pveh == 583 || pveh == 584 || pveh == 590 || pveh == 591 || pveh == 592 || pveh == 593 ||
		pveh == 594 || pveh == 595 || pveh == 601 || pveh == 606 || pveh == 607 || pveh == 608 || pveh == 610 || pveh == 611) {
        return 0;
    }

    return 1;
}

stock IsAHoodCar(vehicleid) {
	new model = GetVehicleModel(vehicleid);
	if(model == 406 || model == 407 || model == 417 || model == 424 || model == 425 || model == 430 || model == 431 || model == 432 || model == 435 || model == 437 || model == 441 ||
	   model == 444 || model == 446 || model == 447 || model == 448 || model == 449 || model == 450 || model == 452 || model == 453 || model == 454 || model == 457 || model == 460 ||
	   model == 461 || model == 462 || model == 463 || model == 464 || model == 465 || model == 468 || model == 469 || model == 471 || model == 472 || model == 473 || model == 481 ||
	   model == 484 || model == 486 || model == 487 || model == 488 || model == 493 || model == 497 || model == 501 || model == 509 || model == 510 || model == 511 || model == 512 ||
	   model == 513 || model == 519 || model == 520 || model == 521 || model == 522 || model == 523 || model == 530 || model == 531 || model == 532 || model == 537 || model == 538 ||
	   model == 539 || model == 544 || model == 548 || model == 553 || model == 556 || model == 557 || model == 563 || model == 564 || model == 568 || model == 569 || model == 570 ||
	   model == 571 || model == 572 || model == 573 || model == 574 || model == 577 || model == 578 || model == 581 || model == 583 || model == 584 || model == 586 || model == 590 ||
	   model == 591 || model == 592 || model == 593 || model == 594 || model == 595 || model == 601 || model == 606 || model == 607 || model == 608 || model == 610 || model == 611) {
		return 0;
	}

	return 1;
}

stock IsVehicleSpawned(vehicleid) {
	if(GetVehicleModel(vehicleid) > 0) {
	    return 1;
	}

	return 0;
}

stock ProxDetector(Float:radi, playerid, string[], color, bubble = 1, soundID = 0) {
    new Float:PosX,
		Float:PosY,
		Float:PosZ,
		vw = GetPlayerVirtualWorld(playerid),
		interior = GetPlayerInterior(playerid);

	GetPlayerPos(playerid, PosX, PosY, PosZ);
	if(color == COLOR_PINK && bubble == 1) {
	    //SetPlayerChatBubble(playerid, string, color, 12.0, 10000);
	}

    foreach(new i : Player) {
		if(GetPlayerVirtualWorld(i) == vw && GetPlayerInterior(i) == interior) {
    		if(IsPlayerInRangeOfPoint(i, radi, PosX, PosY, PosZ)) {
    		    if(soundID != 0) {
					PlayerPlaySound(i, soundID, PosX, PosY, PosZ);
				}

    			SendClientMessage(i, color, string);
    		}
    	}
    }
}

stock ProxDetectorSplitted(Float:radi, playerid, string[], string2[], color, bubble = 1, soundID = 0) {
    new Float:PosX,
		Float:PosY,
		Float:PosZ,
		vw = GetPlayerVirtualWorld(playerid),
		interior = GetPlayerInterior(playerid);

	GetPlayerPos(playerid, PosX, PosY, PosZ);
	if(color == COLOR_PINK && bubble == 1) {
	    //SetPlayerChatBubble(playerid, string, color, 12.0, 10000);
	}

    foreach(new i : Player) {
		if(GetPlayerVirtualWorld(i) == vw && GetPlayerInterior(i) == interior) {
    		if(IsPlayerInRangeOfPoint(i, radi, PosX, PosY, PosZ)) {
    		    if(soundID != 0) {
					PlayerPlaySound(i, soundID, PosX, PosY, PosZ);
				}

    			SendClientMessage(i, color, string);
    			SendClientMessage(i, color, string2);
    		}
    	}
    }
}

stock ProxDetectorEx(Float:radi, playerid, string[], col1, col2, col3, col4, col5, windows, noSelfMsg = 0, speakerMsg = 0, cellMsgPartner = 1) {
	new Float:posx,
		Float:posy,
		Float:posz,
		Float:oldposx,
		Float:oldposy,
		Float:oldposz,
		Float:tempposx,
		Float:tempposy,
		Float:tempposz,
		msg[128],
		charPos,
		vehicle = GetPlayerVehicleID(playerid),
		vehicleOther,
		vw = GetPlayerVirtualWorld(playerid),
		interior = GetPlayerInterior(playerid);

	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	if(windows != 0 && IsPlayerInAnyVehicle(playerid) && VehicleInfo[vehicle][vWindows] == 1) {
		format(string, 128, "[窗户状态: 开] %s", string);
	}

	foreach(new i : Player) {
	    if(GetPlayerInterior(i) == interior && GetPlayerVirtualWorld(i) == vw) {
		    vehicleOther = GetPlayerVehicleID(i);
		    if(speakerMsg != 0 && GetPVarInt(i, "CallingSpeaker") != 0 && IsPlayerInRangeOfPoint(i, 7, oldposx, oldposy, oldposz)) {
		        format(msg, sizeof(msg), "%s", string);
		        charPos = strfind(msg, ":", true);
		        if(charPos != -1) {
	         	   strins(msg, " (免提)", charPos);// strins(msg, " (speaker)", charPos);
		        }

		        ProxDetectorEx(7, GetPVarInt(i, "Calling"), msg, col1, col2, col3, col4, col5, 0);
		    }

		    if((playerid == i && noSelfMsg == 1) || (GetPVarInt(i, "CallingSpeaker") != 0 && i == GetPVarInt(playerid, "Calling") && cellMsgPartner == 0)) {
				continue;
			} else if((IsPlayerInAnyVehicle(playerid) && VehicleInfo[vehicle][vWindows] == 1 && DoesVehicleObtainWindows(vehicle))
					  || !IsPlayerInAnyVehicle(playerid) || (IsPlayerInAnyVehicle(playerid) && !DoesVehicleObtainWindows(vehicle))) {
				if(IsPlayerInAnyVehicle(i) && VehicleInfo[vehicleOther][vWindows] == 0 && DoesVehicleObtainWindows(vehicleOther)) {
					continue;
				} else {
					GetPlayerPos(i, posx, posy, posz);
					tempposx = oldposx - posx;
					tempposy = oldposy - posy;
					tempposz = oldposz - posz;

	    			if(((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16))) {
						SendClientMessage(i, col1, string);
					} else if(((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8))) {
						SendClientMessage(i, col2, string);
					} else if(((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4))) {
						SendClientMessage(i, col3, string);
					} else if(((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2))) {
						SendClientMessage(i, col4, string);
					} else if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) {
						SendClientMessage(i, col5, string);
					}
				}
			} else {
				if(vehicleOther == vehicle && DoesVehicleObtainWindows(vehicleOther) == 1) {
				    format(msg, sizeof(msg), "[窗户状态: 关] %s", string);
					SendClientMessage(i, col3, msg);
				}
			}
		}
	}
}

stock ProxDetectorSplittedEx(Float:radi, playerid, string[], string2[], col1, col2, col3, col4, col5, windows, selfmsg = 0, speakerMsg = 0, cellMsgPartner = 1) {
	new Float:posx,
		Float:posy,
		Float:posz,
		Float:oldposx,
		Float:oldposy,
		Float:oldposz,
		Float:tempposx,
		Float:tempposy,
		Float:tempposz,
		msg[128],
		msg2[128],
		charPos,
		vehicle = GetPlayerVehicleID(playerid),
		vehicleOther,
		vw = GetPlayerVirtualWorld(playerid),
		interior = GetPlayerInterior(playerid);

	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	if(windows != 0 && IsPlayerInAnyVehicle(playerid) && VehicleInfo[GetPlayerVehicleID(playerid)][vWindows] == 1) {
		format(string, 128, "[窗户状态: 开] %s", string);
		format(string2, 128, "[窗户状态: 开] %s", string2);
	}

	foreach(new i : Player) {
	    if(GetPlayerInterior(i) == interior && GetPlayerVirtualWorld(i) == vw) {
		    vehicleOther = GetPlayerVehicleID(i);
		    if(speakerMsg != 0 && GetPVarInt(i, "CallingSpeaker") != 0 && IsPlayerInRangeOfPoint(i, 7, oldposx, oldposy, oldposz)) {
		        format(msg, sizeof(msg), "%s", string);
		        charPos = strfind(msg, ":", true);
		        if(charPos != -1) {
	         	   strins(msg, " (免提)", charPos);
		        }

		        format(msg2, sizeof(msg2), "%s", string2);
		        charPos = strfind(msg2, ":", true);
		        if(charPos != -1) {
	         	   strins(msg2, " (免提)", charPos);
		        }

		        ProxDetectorSplittedEx(7, GetPVarInt(i, "Calling"), msg, msg2, col1, col2, col3, col4, col5, 0);
		    }

		    if((playerid == i && selfmsg == 1) || (GetPVarInt(i, "CallingSpeaker") != 0 && i == GetPVarInt(playerid, "Calling") && cellMsgPartner == 0)) {
				continue;
			} else if((IsPlayerInAnyVehicle(playerid) && VehicleInfo[vehicle][vWindows] == 1 && DoesVehicleObtainWindows(vehicle))
					  || !IsPlayerInAnyVehicle(playerid) || (IsPlayerInAnyVehicle(playerid) && !DoesVehicleObtainWindows(vehicle))) {
				if(IsPlayerInAnyVehicle(i) && VehicleInfo[vehicleOther][vWindows] == 0 && DoesVehicleObtainWindows(vehicleOther)) {
					continue;
				} else {
					GetPlayerPos(i, posx, posy, posz);
					tempposx = oldposx - posx;
					tempposy = oldposy - posy;
					tempposz = oldposz - posz;

	    			if(((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16))) {
						SendClientMessage(i, col1, string);
						SendClientMessage(i, col1, string2);
					} else if(((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8))) {
						SendClientMessage(i, col2, string);
						SendClientMessage(i, col2, string2);
					} else if(((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4))) {
						SendClientMessage(i, col3, string);
						SendClientMessage(i, col3, string2);
					} else if(((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2))) {
						SendClientMessage(i, col4, string);
						SendClientMessage(i, col4, string2);
					} else if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) {
						SendClientMessage(i, col5, string);
						SendClientMessage(i, col5, string2);
					}
				}
			} else {
				if(vehicleOther == vehicle && DoesVehicleObtainWindows(vehicle) == 1) {
				    format(msg, sizeof(msg), "[窗户状态: 关] %s", string);
					SendClientMessage(i, col3, msg);
					format(msg, sizeof(msg), "[窗户状态: 关] %s", string2);
					SendClientMessage(i, col3, msg);
				}
			}
		}
	}
}

stock SystemBanPlayer(playerid, reason[], ip[]) {
    new msg[128];
	format(msg, sizeof(msg), "服务器: %s 被系统封禁, 原因:[%s]", GetNameWithSpace(playerid), reason);
	SendClientMessageToAll(COLOR_LIGHTRED, msg);
	format(msg, sizeof(msg), "*** Banned IP: %s.", ip);
	SendMessageToAdmins(msg);
	SendClientMessage(playerid, COLOR_GREY, " ");
	SendClientMessage(playerid, COLOR_GREY, " ");
	SendClientMessage(playerid, COLOR_LIGHTRED, "你的账户已被系统封禁!");
	SendClientMessage(playerid, COLOR_GREY, "如果你想证明你是清白或者此次禁令是错误的");
	SendClientMessage(playerid, COLOR_GREY, "你可以在我们的社区发布禁令撤回, 地址: www.lifengame.com.");
	SendClientMessage(playerid, COLOR_GREY, "______________________________________________________________");
	mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `banned` = 1 WHERE `user` = '%e'", PlayerInfo[playerid][pName]);
	mysql_function_query(sqlHandle, msg, false, "", "");
	BanLog(playerid, PlayerInfo[playerid][pName], reason);
	BanExDelay(playerid, reason);
	format(msg, sizeof(msg), "banip %s", ip);
	SendRconCommand(msg);
}

stock LoadItemData(playerid) {
	new query[110];
	mysql_format(sqlHandle, query, sizeof(query), "SELECT `id`, `item`, `var`, `active` FROM `samp_items` WHERE `owner` = '%e'", PlayerInfo[playerid][pName]);
	mysql_function_query(sqlHandle, query, true, "OnPlayerLoadItems", "i", playerid);
}

stock GetFactionRank(playerid) {
	new rank[30];
	format(rank, sizeof(rank), "%s", FactionRanks[PlayerInfo[playerid][pFaction]][PlayerInfo[playerid][pRank]]);
	return rank;
}

stock IsUpper(ch) {
    if(ch > 64 && ch < 91) {
		return 1;
	}

    return 0;
}

stock TooManyCaps(name[]) {
    new Float:caps,
		num,
		sz = strlen(name[0]);

    while(sz--) {
    	if(IsUpper(name[sz])) {
			num++;
		}
    }

    caps = floatdiv(num, float(strlen(name[0]) - 1));
    caps = floatmul(caps, float(100));
    if(caps > 40) {
		return 1;
	}

    return 0;
}

stock CapsOnEnd(name[]) {
    new sz = strlen(name[0]);
    if(IsUpper(name[sz - 1])) {
		return 1;
	}

    if(IsUpper(name[FirstSeperationLoc(name[0])-1])) {
		return 1;
	}

    return 0;
}

stock ConsecutiveCaps(name[]) {
    new sz = strlen(name[0]),
		lastcaps;

    while(sz--) {
	    if(IsUpper(name[sz])) {
	    	if(lastcaps == 1) {
    			return 1;
    		}

    		lastcaps = 1;
    	} else {
			lastcaps = 0;
		}
    }

    return 0;
}

stock TooShortOnEnd(name[]) {
    new pnt = FirstSeperationLoc(name[0]);
    name[pnt] = 0;
    if((strlen(name[0]) < 2) || strlen(name[pnt + 1]) < 2) {//if((strlen(name[0]) < 3) || strlen(name[pnt + 1]) < 3) {
    	name[pnt] = '_';
		return 1;
	}

    name[pnt] = '_';
    return 0;
}

stock NumOccurences(str[],ch) {
    new num = 0,
		strl = strlen(str);

    while(strl--) {
    	if(str[strl] == ch) {
			num++;
		}
    }

    return num;
}

stock IsInvalid(x) {
    if(x == 95) return 0;
    if(x > 64 && x < 91) return 0;
    if(x > 96 && x < 123) return 0;
    return 1;
}

stock FirstSeperationLoc(str[]) {
    new strl = strlen(str);
    while(strl--) {
    	if(str[strl] == '_') {
			return strl;
		}
    }

    return 0;
}

stock InvalidCaps(str[]) {
    if(!IsUpper(str[0]) || !IsUpper(str[FirstSeperationLoc(str[0]) + 1])) {
		return 1;
	}

    return 0;
}

stock IsValidPlayerName(name[]) {
    new len = strlen(name[0]);
    if(InvalidCaps(name[0]) || NumOccurences(name[0], '_') != 1) {
		return 0;
	}

    while(len--) {
    	if(IsInvalid(name[len])) {
			return 0;
		}
    }

    if(TooManyCaps(name[0])) {
		return 0;
	}

    if(ConsecutiveCaps(name[0])) {
		return 0;
	}

    if(CapsOnEnd(name[0])) {
		return 0;
	}

    if(TooShortOnEnd(name[0])) {
		return 0;
	}

    return 1;
}

stock UpdateTrashCP(playerid) {
    switch(GetPVarInt(playerid, "TrashCP")) {
	    case 1: {
			SetPlayerRaceCheckpoint(playerid, 2, 1818.4192, -2072.4927, 13.3828, 0, 0, 0, 4);
  		}
	    case 2: {
			SetPlayerRaceCheckpoint(playerid, 2, 1077.2729 ,-1109.8516, 24.4628, 0, 0, 0, 4);
		}
	    case 3: {
			SetPlayerRaceCheckpoint(playerid, 2, 297.7130, -1631.9249, 33.3355, 0, 0, 0, 4);
		}
	    case 4: {
			SetPlayerRaceCheckpoint(playerid, 2, 690.7894, -1024.9034, 51.3804, 0, 0, 0, 4);
		}
	    case 5: {
			SetPlayerRaceCheckpoint(playerid, 2, 2208.3208, -1306.0847, 23.9844, 0, 0, 0, 4);
		}
	    case 6: {
			SetPlayerRaceCheckpoint(playerid, 2, 2719.5178, -2026.2278, 13.5472, 0, 0, 0, 4);
		}
	    case 7: {
			SetPlayerRaceCheckpoint(playerid, 2, 2349.4976, -1995.7656, 13.3732, 0, 0, 0, 4);
		}
	    case 8: {
			SetPlayerRaceCheckpoint(playerid, 2, 2041.6084, -1649.0763, 13.5469, 0, 0, 0, 4);
		}
	    case 9: {
			SetPlayerRaceCheckpoint(playerid, 2, 1216.9270, -951.2141, 42.8500, 0, 0, 0, 4);
		}
	}
}

stock CreateBusinesses() {
	skinChangeCP[0] = CreateDynamicCP(213.1518, -41.8554, 1002.0234, 1.5, -1, -1, -1, 5.0); // Sub Urban (Clothes)
	skinChangeCP[1] = CreateDynamicCP(198.0282, -135.6791, 1003.5078, 1.5, -1, -1, -1, 5.0); // Pro-Laps (Clothes)
	skinChangeCP[2] = CreateDynamicCP(207.2198, -5.2330, 1001.2109, 1.5, -1, -1, -1, 5.0); // Victim (Clothes)
	skinChangeCP[3] = CreateDynamicCP(180.4615, -88.4181, 1002.0234, 1.5, -1, -1, -1, 5.0); // ZIP (Clothes)
	skinChangeCP[4] = CreateDynamicCP(214.2542, -156.1029, 1000.5234, 1.5, -1, -1, -1, 5.0); // Didier Sachs (Clothes)
	skinChangeCP[5] = CreateDynamicCP(216.9830, -99.6080, 1005.2578, 1.5, -1, -1, -1, 5.0); // Binco (Clothes)
}

stock KickNPCs() {
    KickIfConnected("TrainBot");
    KickIfConnected("RentalBot");
    KickIfConnected("EmploymentBot");
}

stock KickIfConnected(name[]) {
    new id = GetPlayerID(name);
	if(id != -1) {
		Kick(id);
	}
}

stock IsVehicleInRangeOfPoint(vehicleid, Float:radi, Float:x, Float:y, Float:z) {
	new Float:oldposx,
		Float:oldposy,
		Float:oldposz,
		Float:tempposx,
		Float:tempposy,
		Float:tempposz;

 	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
    tempposx = (oldposx - x);
    tempposy = (oldposy - y);
    tempposz = (oldposz - z);
    if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) {
    	return 1;
    }

    return 0;
}

stock GetVehicleDriver(vehicleid) {
	foreach(new i : Player) {
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid) {
			return i;
		}
	}

	return -1;
}

stock CheckVehicleForPassengers(vehicleid) {
	foreach(new i : Player) {
		if(GetPlayerVehicleID(i) == vehicleid && (GetPlayerState(i) == PLAYER_STATE_DRIVER || GetPlayerState(i) == PLAYER_STATE_PASSENGER)) {
			return 1;
		}
	}

	return -1;
}

stock BanLog(playerid, by[], reason[]) {
	new query[270];
    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_bans` (`user`, `reason`, `admin`, `date`, `ip`) VALUES ('%e', '%e', '%e', NOW(), '%e')", PlayerInfo[playerid][pName], reason, by, PlayerInfo[playerid][pIP]);
    mysql_function_query(sqlHandle, query, false, "", "");
}

stock KickLog(playerid, by[], reason[]) {
	new query[270];
    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_kicks` (`user`, `reason`, `admin`, `date`, `ip`) VALUES ('%e', '%e', '%e', NOW(), '%e')", PlayerInfo[playerid][pName], reason, by, PlayerInfo[playerid][pIP]);
    mysql_function_query(sqlHandle, query, false, "", "");
}

stock IsAFuelCar(vehicleid) {
    new pveh = GetVehicleModel(vehicleid);
    if(pveh == 435 || pveh == 441 || pveh == 449 || pveh == 450 || pveh == 464 || pveh == 465 || pveh == 481 || pveh == 501 || pveh == 509 || pveh == 510 || pveh == 564 ||
		pveh == 569 || pveh == 570 || pveh == 584 || pveh == 590 || pveh == 591 || pveh == 594 || pveh == 606 || pveh == 607 || pveh == 608 || pveh == 610 || pveh == 611) {
        return 0;
    } else {
        return 1;
    }
}

stock IsAnEngineCar(vehicleid) {
    new pveh = GetVehicleModel(vehicleid);
    if(pveh == 509 || pveh == 510 || pveh == 481 || pveh == 435 || pveh == 441 || pveh == 449 || pveh == 450 || pveh == 464 || pveh == 465 || pveh == 501 || pveh == 537 || pveh == 538
       || pveh == 564 || pveh == 569 || pveh == 570 || pveh == 584 || pveh == 590 || pveh == 591 || pveh == 594 || pveh == 606 || pveh == 607 || pveh == 608 || pveh == 610 || pveh == 611) {
        return 0;
    } else {
		return 1;
	}
}

stock DoesVehicleObtainSeatbelts(vehicleid) {
	new model = GetVehicleModel(vehicleid);
	if(model == 430 || model == 435 || model == 441 || model == 446 || model == 448 || model == 450 || model == 452 || model == 453 || model == 454 || model == 461
		|| model == 462 || model == 463 || model == 464 || model == 465 || model == 468 || model == 471 || model == 472 || model == 473 || model == 481 || model == 484
		|| model == 501 || model == 521 || model == 522 || model == 523 || model == 564 || model == 569 || model == 570 || model == 571 || model == 581 || model == 584
		|| model == 586 || model == 590 || model == 591 || model == 594 || model == 595 || model == 606 || model == 607 || model == 608 || model == 610 || model == 611
	 	|| model == 509 || model == 510) {
		return 0;
	} else {
		return 1;
	}
}

stock DoesVehicleObtainWindows(vehicleid) {
	new model = GetVehicleModel(vehicleid);
	if(model == 424 || model == 430 || model == 432 || model == 435 || model == 339 || model == 441 || model == 446 || model == 448 || model == 449 || model == 450 || model == 452 ||
		model == 453 || model == 454 || model == 457 || model == 461 || model == 462 || model == 463 || model == 464 || model == 465 || model == 468 || model == 471 ||
		model == 472 || model == 473 || model == 480 || model == 481 || model == 484 || model == 485 || model == 486 || model == 493 || model == 501 || model == 509 || model == 510 ||
		model == 512 || model == 513 || model == 519 || model == 520 || model == 521 || model == 522 || model == 523 || model == 530 || model == 531 || model == 533 || model == 536 ||
		model == 539 || model == 555 || model == 567 || model == 568 || model == 569 || model == 570 || model == 571 || model == 572 ||
		model == 581 || model == 584 || model == 586 || model == 590 || model == 591 || model == 594 || model == 595 || model == 601 ||
		model == 606 || model == 607 || model == 608 || model == 610 || model == 611) {
		return 0;
	} else {
		return 1;
	}
}

stock DoesVehicleObtainHelmets(vehicleid) {
	new model = GetVehicleModel(vehicleid);
	if(model == 448 || model == 461 || model == 462 || model == 463 || model == 468 || model == 471 || model == 521 || model == 522 || model == 523 || model == 571 || model == 581 || model == 586) {
		return 1;
	} else {
		return 0;
	}
}

stock HeShe(playerid) {
	new str[128];
	if(PlayerInfo[playerid][pGender] != 2) {
	    format(str, sizeof(str), "%s", "他");
	} else {
	    format(str, sizeof(str), "%s", "她");
	}

	return str;
}

stock HisHer(playerid) {
	new str[128];
	if(PlayerInfo[playerid][pGender] != 2) {
	    format(str, sizeof(str), "%s", "他的");
	} else {
	    format(str, sizeof(str), "%s", "她的");
	}

	return str;
}

stock HimselfHerself(playerid) {
	new str[128];
	if(PlayerInfo[playerid][pGender] != 2) {
	    format(str, sizeof(str), "%s", "他自己");
	} else {
	    format(str, sizeof(str), "%s", "她自己");
	}

	return str;
}

stock HimHer(playerid) {
	new str[128];
	if(PlayerInfo[playerid][pGender] != 2) {
	    format(str, sizeof(str), "%s", "他");
	} else {
	    format(str, sizeof(str), "%s", "她");
	}

	return str;
}

stock IsNumeric(const string[]) {
	for(new i = 0, j = strlen(string); i < j; i++) {
  		if(string[i] > '9' || string[i] < '0') {
		  	return 0;
		}
    }

    return 1;
}

stock FreezePlayer(playerid) {
	TogglePlayerControllable(playerid, 0);
	SetPVarInt(playerid, "Frozen", 1);
}

stock UnfreezePlayer(playerid) {
    TogglePlayerControllable(playerid, 1);
	SetPVarInt(playerid, "Frozen", 0);
}

stock SetPlayerDead(playerid, OnPlayerSpawn = 0)
{
    if(GetPVarInt(playerid, "Death") == 0)
	{
        SetPVarInt(playerid, "Death", 1);
        SetPVarFloat(playerid, "DeathX", PlayerInfo[playerid][pDisX]);
        SetPVarFloat(playerid, "DeathY", PlayerInfo[playerid][pDisY]);
        SetPVarFloat(playerid, "DeathZ", PlayerInfo[playerid][pDisZ]);
        SetPVarFloat(playerid, "DeathA", PlayerInfo[playerid][pDisA]);
        SetPVarInt(playerid, "DeathInt", PlayerInfo[playerid][pDisInt]);
        SetPVarInt(playerid, "DeathVW", PlayerInfo[playerid][pDisVW]);

		SetPlayerPos(playerid, PlayerInfo[playerid][pDisX], PlayerInfo[playerid][pDisY], PlayerInfo[playerid][pDisZ]);
		SetPlayerFacingAngle(playerid, PlayerInfo[playerid][pDisA]);
		SetPlayerInterior(playerid, PlayerInfo[playerid][pDisInt]);
		SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pDisVW]);
		
		//DeathReason[playerid] = Create3DTextLabel(holder, -1, PlayerInfo[playerid][pDisX], PlayerInfo[playerid][pDisY], PlayerInfo[playerid][pDisZ]-1, 10.0, 0, 0);
		//Attach3DTextLabelToPlayer(DeathReason[playerid], playerid, 0.0, 0.0, 0.0);
		SetPlayerCameraPos(playerid, PlayerInfo[playerid][pDisX] + 2, PlayerInfo[playerid][pDisY] + 2, PlayerInfo[playerid][pDisZ] + 3.5);
		SetPlayerCameraLookAt(playerid, PlayerInfo[playerid][pDisX], PlayerInfo[playerid][pDisY], PlayerInfo[playerid][pDisZ]);

		FreezePlayer(playerid);
		SetPlayerHealthAndLimit(playerid, 25);
		SetPVarInt(playerid, "Acceptdeath", 0);
		AcceptDeathTimer[playerid] = SetTimerEx("Acceptdeath", 30000, false, "d", playerid);
	 	ApplyAnimation(playerid, "PED", "FLOOR_hit", 4.1, 0, 1, 1, 1, 0, 1);
	 	SendClientMessage(playerid, COLOR_LIGHTRED, "你严重受伤并且昏厥过去, 你可以等待救助或者使用 /acceptdeath 接受死亡.");
	}
	else
	{
		new Float:X = GetPVarFloat(playerid, "DeathX"),
			Float:Y = GetPVarFloat(playerid, "DeathY"),
			Float:Z = GetPVarFloat(playerid, "DeathZ"),
			Float:A = GetPVarFloat(playerid, "DeathA");

		SetPlayerPos(playerid, X, Y, Z);
		SetPVarInt(playerid, "Death", 1);
		SetPlayerFacingAngle(playerid, A);
		SetPlayerInterior(playerid, GetPVarInt(playerid, "DeathInt"));
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "DeathVW"));
		
		SetPlayerCameraPos(playerid, X + 2, Y + 2, Z + 3.5);
		SetPlayerCameraLookAt(playerid, X, Y, Z);
		
		//DeathReason[playerid] = Create3DTextLabel(holder, -1, X, Y, Z, 10.0, 0, 0);
		//Attach3DTextLabelToPlayer(DeathReason[playerid], playerid, 0.0, 0.0, 0.0);
		
		SetPVarInt(playerid, "Acceptdeath", 0);
		AcceptDeathTimer[playerid] = SetTimerEx("Acceptdeath", 30000, false, "d", playerid);
		FreezePlayer(playerid);
		ApplyAnimation(playerid, "PED", "FLOOR_hit", 4.1, 0, 1, 1, 1, 0, 1);
		SetPlayerHealthAndLimit(playerid, 25);
		if(OnPlayerSpawn == 0) {
			fade[playerid][fID] = 11;
			FadeScreen(playerid, 0, 0, 0, 255, 1000);
		}
	}
}


stock SetPlayerPosEx(playerid, fadeID, Float:X, Float:Y, Float:Z, Float:A = 0.0, interior = 0, vw = 0, unfreeze = 1)
{
    fade[playerid][fID] = fadeID;
	fade[playerid][fadeX] = X;
  	fade[playerid][fadeY] = Y;
  	fade[playerid][fadeZ] = Z;
  	fade[playerid][fAngle] = A;
  	fade[playerid][fInt] = interior;
  	fade[playerid][fVW] = vw;
  	fade[playerid][fUnfreeze] = unfreeze;
	FreezePlayer(playerid);
	FadeScreen(playerid, 0, 0, 0, 255, 250);
}

stock GetAdminRank(playerid) {
	new rank[22];
	switch(PlayerInfo[playerid][pAdminlevel])
	{
		case 1:
		{
			format(rank, sizeof(rank), "1级管理员");
		}
		case 2:
		{
		    format(rank, sizeof(rank), "2级管理员");
		}
		case 3:
		{
			format(rank, sizeof(rank), "3级管理员");
		}
		case 4:
		{
			format(rank, sizeof(rank), "4级管理员");
		}
		case 5:
		{
			format(rank, sizeof(rank), "5级管理员");
		}
		case 6:
		{
  			format(rank, sizeof(rank), "管理组领导人");
		}
		default:
		{
		    format(rank, sizeof(rank), "社区创始人");
		}
	}

	return rank;
}

stock GetModRank(playerid) {
    new rank[22];
	switch(PlayerInfo[playerid][pModLevel]) {
		case 1: {
			format(rank, sizeof(rank), "测试员");
		}
		case 2: {
		    format(rank, sizeof(rank), "测试组领导人");
		}
		default: {
		    format(rank, sizeof(rank), "开发人员");
		}
	}

	return rank;
}

stock GetModRankEx(id) {
    new rank[22];
	switch(id) {
		case 1: {
			format(rank, sizeof(rank), "测试员");
		}
		case 2: {
		    format(rank, sizeof(rank), "测试组领导人");
		}
		default: {
		    format(rank, sizeof(rank), "开发人员");
		}
	}

	return rank;
}

stock GetAdminRankEx(id)
{
    new rank[22];
	switch(id)
	{
		case 1:
		{
			format(rank, sizeof(rank), "1级管理员");
		}
		case 2:
		{
		    format(rank, sizeof(rank), "2级管理员");
		}
		case 3:
		{
			format(rank, sizeof(rank), "3级管理员");
		}
		case 4:
		{
			format(rank, sizeof(rank), "4级管理员");
		}
		case 5:
		{
			format(rank, sizeof(rank), "5级管理员");
		}
		case 6:
		{
  			format(rank, sizeof(rank), "管理组领导人");
		}
		default:
		{
            format(rank, sizeof(rank), "社区创始人");
		}
	}

	return rank;
}

stock Float:frandom(Float:max, Float:min = 0.0, dp = 4) {
    new Float:mul = floatpower(10.0, dp),
        imin = floatround(min * mul),
        imax = floatround(max * mul);
    return float(random(imax - imin) + imin) / mul;
}

stock CreateNewAdminJailPickup(playerid) {
 	/*

 	Top Left: 955.0716, -1280.0148, 781.2266
 	Top Right: 924.0567, -1281.4600, 781.2266
 	Bottom Left: 956.0918, -1236.6427, 781.2216
 	Bottom Right: 923.6167, -1238.1581, 781.2266

 	*/

	PlayerInfo[playerid][pAdminJailX] = frandom(955.0496, 924.6475);
	PlayerInfo[playerid][pAdminJailY] = frandom(-1237.6119, -1279.8812);
	PlayerInfo[playerid][pAdminJailZ] = 781.2266;
	AJPickup[playerid] = CreateDynamicPickup(1247, 1, PlayerInfo[playerid][pAdminJailX], PlayerInfo[playerid][pAdminJailY], PlayerInfo[playerid][pAdminJailZ], playerid + 1, 25, playerid);
}

/*stock GetNameWithSpace(playerid, mask = 0) {
	if(PlayerInfo[playerid][pMaskNum] == 0 || mask == 0) {
		return PlayerInfo[playerid][pSpaceName];
	} else {
	    return PlayerInfo[playerid][pMaskID];
	}
}*/

stock GetNameWithSpace(playerid, mask = 0)
{
	new name[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMasked] == 0 || mask == 0)
	{
	    strcat(name, PlayerInfo[playerid][pName]);
	    new pos = strfind(name, "_");
	 	if(pos != -1)
		 {
		 	name[pos] = ' ';
		 	mask = 0;
		}
	}
	else
	{
	    format(name, sizeof(name), "[市民_%d_%d]", PlayerInfo[playerid][pMaskID], PlayerInfo[playerid][pAge]);
	}
	return name;
}

stock GetNameWithSpaceEx(name[]) {
	new pname[MAX_PLAYER_NAME];
	format(pname, sizeof(pname), "%s", name);
	new pos = strfind(pname, "_");
	if(pos != -1) {
 		pname[pos] = ' ';
	}
	
    return pname;
}

stock GetVehicleSpeed(vehicle) {
	if(IsVehicleSpawned(vehicle)) {
		new Float:X,
		    Float:Y,
		    Float:Z;

	    GetVehicleVelocity(vehicle, X, Y, Z);
		return floatround((floatsqroot(((X * X) + (Y * Y)) + (Z * Z)) * 100) * 1.6);
	}
	
	return 0;
}

stock GetPlayerSpeed(vehicle) {
	new Float:X,
	    Float:Y,
	    Float:Z;

    GetPlayerVelocity(vehicle, X, Y, Z);
	return floatround((floatsqroot(((X * X) + (Y * Y)) + (Z * Z)) * 100) * 1.6);
}

stock PutPlayerInSkinSelection(playerid, checkpointid) {
    if(PlayerInfo[playerid][pGender] == 1 || PlayerInfo[playerid][pGender] == 2) {
		SendClientMessage(playerid, COLOR_WHITE, "使用 {777777}Next/Back{FFFFFF} 配合操作.  如果你的光标消失的话, 按下 {777777}Enter{FFFFFF} 激活光标!");

		if(checkpointid == skinChangeCP[0]) {
		  	SetPlayerPosEx(playerid, 9, 213.1518, -41.8554, 1002.023, 92.5929);
		} else if(checkpointid == skinChangeCP[1]) {
		  	SetPlayerPosEx(playerid, 9, 198.0282, -135.6791, 1003.5078, 268.6130);
		} else if(checkpointid == skinChangeCP[2]) {
		  	SetPlayerPosEx(playerid, 9, 207.2198, -5.2330, 1001.2109, 247.9327);
		} else if(checkpointid == skinChangeCP[3]) {
		  	SetPlayerPosEx(playerid, 9, 180.4615, -88.4181, 1002.0234, 90.2127);
		} else if(checkpointid == skinChangeCP[4]) {
		  	SetPlayerPosEx(playerid, 9, 214.2542, -156.1029, 1000.5234, 102.1331);
		} else if(checkpointid == skinChangeCP[5]) {
		  	SetPlayerPosEx(playerid, 9, 216.9830, -99.6080, 1005.2578, 114.4590);
		}
    } else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "警告: 你的性别尚未选择. 请联系管理员.");
	}
}

stock GiveBusinessMoney(id, money) {
	new query[90];
	new bid=BusinessInfo[id][bID];
	mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_businesses` SET `money` = `money` + %i WHERE `id` = %i", money, bid);
	mysql_function_query(sqlHandle, query, false, "", "");
	BusinessInfo[id][bMoney] += money;
}

stock GiveBusinessGoods(id, goods) {
    new query[90];
    new bid=BusinessInfo[id][bID];
	mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_businesses` SET `goods` = `goods` + %i WHERE `id` = %i", goods, bid);
	mysql_function_query(sqlHandle, query, false, "", "");
	
	BusinessInfo[id][bGoods] += goods;
}

stock GetHelpDialog(id, playerid = 0)//
 {
	format(gVar3000, 3000, "%s", EOS);

	switch(id) {
	    case 0: { // Moderator-Help
	        strcat(gVar3000, "{F5F582}命令\t\t效果\n\n{87FF87}/testerchat\t\t{A9C4E4}用做于测试员的聊天通道.\n{87FF87}/modduty\t\t{A9C4E4}你可以使用该指令进行执勤操作.\n{87FF87}");
			strcat(gVar3000, "/setskin\t\t\t{A9C4E4}设置用户角色皮肤.\n{87FF87}/accepthelpme\t\t{A9C4E4}接受来自玩家的协助请求.\n{87FF87}/trashhelpme");
			strcat(gVar3000, "\t\t{A9C4E4}拒绝玩家的协助请求\n{87FF87}/staffchat\t\t{A9C4E4}用于Staff成员聊天频道.\n{87FF87}/unfreeze\t\t{A9C4E4}取消对玩家的行动冻结.");
			strcat(gVar3000, "\n{87FF87}/unmute\t\t{A9C4E4}取消对玩家的禁言操作.\n{87FF87}/setint\t\t\t{A9C4E4}设置玩家的空间. *如果你不清楚怎么使用, 请询问开发人员后操作*\n{87FF87}/setvw\t\t\t{A9C4E4}设置玩家的虚拟世界. *如果你不清楚怎么使用, 请询问开发人员后操作*\n{87FF87}");
			strcat(gVar3000, "/checkip\t\t{A9C4E4}列出用户的IP地址.\n{87FF87}/stafflogin\t\t{A9C4E4}登录到Staff成员系统\n{87FF87}/kick\t\t\t{A9C4E4}");
			strcat(gVar3000, "将对方请出服务器. *需要充分的理由*\n{87FF87}/skick\t\t\t{A9C4E4}将对方请出服务器并需要充分的理由, 但不会发布公告.\n{87FF87}/check\t\t\t{A9C4E4}查看用户信息.\n{87FF87}/forumname\t\t{A9C4E4}设置社区名称, 让玩家认识你!");
			strcat(gVar3000, "\n{87FF87}/setage\t\t\t{A9C4E4}设置玩家角色年龄.\n{87FF87}/modhide\t\t{A9C4E4}你可以在[/mods]里隐藏你的状态.");
			if(PlayerInfo[playerid][pModLevel] >= 2) {
			    strcat(gVar3000, "\n{87FF87}/makemod\t\t{A9C4E4}邀请对方加入测试团队.\n{87FF87}/kickmod\t\t{A9C4E4}将对方踢出测试团队.");
			}

			strcat(gVar3000, "\n\n{F5F582}提示: {A9C4E4}只有测试员可以调用这些命令.");
	    }
	    case 1: { // Administrator-Help #1
    		strcat(gVar3000, "{F5F582}命令\t\t效果\n\n{87FF87}/sethealth\t\t{A9C4E4}设置对方的血量.\n{87FF87}/setarmour\t\t{A9C4E4}设置对方的护甲.\n{87FF87}/admintalk\t\t{A9C4E4}");
			strcat(gVar3000, "用于管理组交流.\n{87FF87}/adminduty\t\t{A9C4E4}用于管理员执勤.\n{87FF87}");
			strcat(gVar3000, "/setvhealth\t\t{A9C4E4}设置车辆血量.\n{87FF87}/goto\t\t\t{A9C4E4}传送到对方身边.\n{87FF87}/gethere\t\t{A9C4E4}将对方传送到您身边");
			strcat(gVar3000, "\n{87FF87}/gotohouse\t\t{A9C4E4}传送到某个房屋.\n{87FF87}/check\t\t\t{A9C4E4}查看玩家信息.");
			strcat(gVar3000, "\n{87FF87}/getspeed\t\t{A9C4E4}查看对方车辆速度.\n{87FF87}/acceptreport\t\t{A9C4E4}");
			strcat(gVar3000, "接受玩家报告内容.\n{87FF87}/gotoloc\t\t{A9C4E4}列出所有可传送的地点.\n{87FF87}/trashreport\t\t{A9C4E4}拒绝玩家的报告内容.\n{87FF87}/slap\t\t\t{A9C4E4}可以拍打对方?!...\n{87FF87}/freeze");
			strcat(gVar3000, "\t\t\t{A9C4E4}锁定某个用户的行动.\n{87FF87}/unfreeze\t\t{A9C4E4}解锁某个用户的行动.\n{87FF87}/skick\t\t\t{A9C4E4}将对方请出服务器并需要充分的理由, 但不会发布公告.\n{87FF87}/ban\t\t\t{A9C4E4}封禁对方并有一个充分的理由.\n{87FF87}/kick\t\t\t{A9C4E4}");
			strcat(gVar3000, "将对方请出服务器. *需要充分的理由*\n{87FF87}/setfuel\t\t\t{A9C4E4}设置车辆的燃料数量.\n{87FF87}/up\t\t\t");
			strcat(gVar3000, "{A9C4E4}同/slap, 用于您自身.\n{87FF87}/down\t\t\t{A9C4E4}反向/down, 用于您自身\n{87FF87}/healthhack\t\t{A9C4E4}检测对方是否使用锁血作弊.");
			strcat(gVar3000, "\n{87FF87}/ck\t\t\t{A9C4E4}用于CK角色.\n{87FF87}/checkhealth\t\t{A9C4E4}获取角色生命值信息.\n{87FF87}/maskid\t\t\t{A9C4E4}搜索戴了面具的玩家数据.");
			strcat(gVar3000, "\n{87FF87}/savepos\t\t{A9C4E4}保存当前角色的地址.\n{87FF87}/loadpos\t\t{A9C4E4}传送到之前保存的地址.");
			strcat(gVar3000, "\n{87FF87}/setage\t\t\t{A9C4E4}设置玩家生命值.\n{87FF87}/checktrunk\t\t{A9C4E4}查看车辆后备箱信息.\n\n{F5F582}提示: {A9C4E4}只有管理员可以调用这些命令.");
		}
		case 2: { // Administrator-Help #2
			strcat(gVar3000, "{F5F582}命令\t\t效果\n\n{87FF87}/mute\t\t\t{A9C4E4}禁用某个玩家的社交功能.\n{87FF87}/unmute\t\t{A9C4E4}解除禁用某个玩家的社交功能.\n{87FF87}/cancelinjury\t\t{A9C4E4}");
			strcat(gVar3000, "复活玩家并且清除死亡状态.\n{87FF87}/setskin\t\t\t{A9C4E4}设置玩家皮肤.\n{87FF87}/announcement\t\t{A9C4E4}发布服务器公告.\n{87FF87}");
			strcat(gVar3000, "/adminjail\t\t{A9C4E4}监禁某个玩家.\n{87FF87}/unjail\t\t\t{A9C4E4}从管理监狱释放.\n{87FF87}/countdown\t\t{A9C4E4}");
			strcat(gVar3000, "全服务器计时器.\n{87FF87}/destroycar\t\t{A9C4E4}删除临时车辆.\n{87FF87}");
			strcat(gVar3000, "/destroyallcars\t\t{A9C4E4}删除/刷新所有服务器车辆.\n{87FF87}/afkers\t\t\t{A9C4E4}列出所有挂机玩家.\n{87FF87}");
			strcat(gVar3000, "/specate\t\t{A9C4E4}监视玩家.\n{87FF87}/unban\t\t\t{A9C4E4}解封玩家账户与IP地址.\n{87FF87}/unbanip\t\t{A9C4E4}解除IP地址的禁令.\n{87FF87}/specoff\t\t{A9C4E4}从玩家监视中离开.\n{87FF87}/checkweapons\t\t{A9C4E4}查看玩家武器.\n{87FF87}");
			strcat(gVar3000, "/setint\t\t\t{A9C4E4}设置玩家内饰ID.\n{87FF87}/checkitems\t\t{A9C4E4}管理他人物品.\n{87FF87}/setvw\t\t\t{A9C4E4}设置玩家虚拟世界.");
			strcat(gVar3000, "\n{87FF87}/gotovehicle\t\t{A9C4E4}传送到某个载具旁.\n{87FF87}/disarm\t\t\t{A9C4E4}移除玩家武器.\n{87FF87}");
			strcat(gVar3000, "/staffchat\t\t{A9C4E4}工作组聊天频道.\n{87FF87}/weather\t\t{A9C4E4}修改服务器天气.\n{87FF87}/gotobusiness\t\t{A9C4E4}传送到产业.");
			strcat(gVar3000, "\n{87FF87}/sendtols\t\t{A9C4E4}将玩家送入LS.\n{87FF87}/stafflogin\t\t{A9C4E4}登录工作账户.\n{87FF87}/jailacc\t\t\t{A9C4E4}监禁离线玩家.\n{87FF87}");
			strcat(gVar3000, "/gotopos\t\t{A9C4E4}传送到某个坐标.\n{87FF87}/adminhide\t\t{A9C4E4}从/hide内隐藏或者激活.\n{87FF87}/checkvehicle\t\t{A9C4E4}");
			strcat(gVar3000, "查看载具信息.\n{87FF87}/show\t\t{A9C4E4}给监视玩家发送随机事件.");
			strcat(gVar3000, "\n{87FF87}/putinvehicle\t\t{A9C4E4}将玩家放入载具内.\n{87FF87}");
			strcat(gVar3000, "/fixvehicle\t\t{A9C4E4}修复载具.\n{87FF87}/forumname\t\t{A9C4E4}设置一个可以在/admins内显示的名称.\n\n{F5F582}提示: {A9C4E4}只有管理员可以调用这些命令.");
		}
		case 3: { // Administrator (2)-Help
		    strcat(gVar3000, "{F5F582}命令\t\t效果\n\n{87FF87}/spawncar\t\t{A9C4E4}Spawns an administrative vehicle (Only if needed!).\n{87FF87}");
		    strcat(gVar3000, "/banacc\t\t\t{A9C4E4}Bans an offline account.\n{87FF87}/banip\t\t\t{A9C4E4}Bans an IP.\n{87FF87}");
		    strcat(gVar3000, "/toggleooc\t\t{A9C4E4}Toggles the global OOC chat for players.\n{87FF87}/createhouse\t\t{A9C4E4}Creates a new house at your current position.\n{87FF87}/deletehouse\t\t{A9C4E4}Deletes the house of the checkpoint you're in.\n{87FF87}/createbusiness\t{A9C4E4}Creates a new business at your current position.");
			strcat(gVar3000, "\n{87FF87}/deletebusiness\t\t{A9C4E4}Deletes the business of the checkpoint you're in.\n{87FF87}/setstats\t\t{A9C4E4}Ability to change certain stats of players.");
			strcat(gVar3000, "\n\n{F5F582}Note: {A9C4E4}These are administrative commands available for Senior Administrators.");
		}
		case 4: { // Lead Administrator-Help
		    strcat(gVar3000, "{F5F582}命令\t\t效果\n\n{87FF87}/makeadmin\t\t{A9C4E4}Promotes a player into the Administration Team.");
			strcat(gVar3000, "\n{87FF87}/promoteadmin\t\t{A9C4E4}Promotes an administrator.\n{87FF87}");
		    strcat(gVar3000, "/demoteadmin\t\t{A9C4E4}Demotes an administrator.\n{87FF87}/kickadmin\t\t{A9C4E4}Kicks an administrator from the Administration Team.");
		    strcat(gVar3000, "\n{87FF87}/serverrestart\t\t{A9C4E4}Saves every player's data and restarts the gamemode.");
			strcat(gVar3000, "\n{87FF87}/makemod\t\t{A9C4E4}Promotes a player into the Moderation Team.\n{87FF87}/resstafflogin\t\t{A9C4E4}Resets a Staff Member's staff-password.");
			strcat(gVar3000, "\n{87FF87}/changename\t\t{A9C4E4}Changes a player's name and backlists the current name.\n{87FF87}/setitem\t\t{A9C4E4}Increases the amount of a certain item by one.\n{87FF87}/backup\t\t\t{A9C4E4}");
			strcat(gVar3000, "Backs up player-related data.\n{87FF87}/updatetime\t\t{A9C4E4}Updates the world's time.\n{87FF87}/removeitemtype\t{A9C4E4}Removes all items of this type from a certain player.\n{87FF87}/removeitem");
			strcat(gVar3000, "\t\t{A9C4E4}Removes one item from a player specified by its ID.\n{87FF87}/removeblacklist\t{A9C4E4}Removes a username from the server's blacklist for usernames.\n{87FF87}/msg\t\t\t{A9C4E4}Sends a global ");
			strcat(gVar3000, "message (not in chatbox).\n{87FF87}/payday\t\t\t{A9C4E4}Calls a player's pay-day and saves the according data set.\n{87FF87}/interestrate\t\t{A9C4E4}Sets the interest rate at the Bank of Los Angeles.");
			strcat(gVar3000, "\n{87FF87}/savingsrate\t\t{A9C4E4}Sets the rate for savings.\n{87FF87}/incometaxrate\t\t{A9C4E4}Sets the income tax rate.\n{87FF87}/blacklistvehicle\t{A9C4E4}Blacklists a vehicle model so that it can no longer be spawned using /spawncar.");
			strcat(gVar3000, "\n{87FF87}/unblacklistvehicle\t{A9C4E4}Removes a vehicle model from the blacklist so that it can be spawned using /spawncar.\n{87FF87}/setproperty\t\t{A9C4E4}Opens the 'Business Manager' or 'House Manager'.");
			strcat(gVar3000, "\n{87FF87}/setnamechanges\t{A9C4E4}Hands out namechange tickets.\n{87FF87}/antibunnyhop\t\t{A9C4E4}Toggles the anti-bunny-hop system.\n{87FF87}/promotemod\t\t{A9C4E4}Promotes a moderator.\n{87FF87}/demotemod\t\t{A9C4E4}Demotes a moderator.\n{87FF87}/kickmod\t\t{A9C4E4}Command to kick people from the Moderation Team.\n{87FF87}/accountpass\t\t{A9C4E4}Changes an account's password.\n\n{F5F582}Note: {A9C4E4}These are administrative commands available for Lead Administrators.");
		}
		case 5: { // Help-Center #1
            strcat(gVar3000, "{F5F582}命令\t\t\t效果\n\n{87FF87}/shout\t\t\t{A9C4E4}可以让您的角色对周围大喊.\n{87FF87}/me\t\t\t{A9C4E4}第三人称动作描述");
			strcat(gVar3000, "\n{87FF87}/do\t\t\t{A9C4E4}描述当前角色扮演环境或其他扮演用途.\n{87FF87}/seatbelt\t\t{A9C4E4}系上安全带.\n{87FF87}/helmet");
            strcat(gVar3000, "\t\t{A9C4E4}可以在摩托车上戴上头盔.\n{87FF87}/engine\t\t{A9C4E4}打开载具引擎.\n{87FF87}/windows\t\t{A9C4E4}打开车辆窗户.");
			strcat(gVar3000, "\n{87FF87}/pay\t\t\t{A9C4E4}给予对方钱财.\n{87FF87}/b\t\t\t{A9C4E4}常规本地OOC频道.\n{87FF87}/pickup\t\t{A9C4E4}接听拨打来的电话.\n{87FF87}");
            strcat(gVar3000, "/hangup\t\t{A9C4E4}挂断当前通话.\n{87FF87}/low\t\t\t{A9C4E4}可以让您的角色低声说话.\n{87FF87}/ame\t\t\t{A9C4E4}第三人称动作描述 (不会在IC环境提醒!)");
			strcat(gVar3000, "\n{87FF87}/admins\t\t{A9C4E4}列出所有在线的管理员.\n{87FF87}/tow\t\t\t{A9C4E4}使用TowTruck拖挂其他车辆.\n{87FF87}/report\t\t\t{A9C4E4}发送报告给在线管理员.\n{87FF87}/time\t\t\t{A9C4E4}查看当前服务器时间和发薪时间.\n{87FF87}");
            strcat(gVar3000, "/factiontalk\t\t{A9C4E4}用于组织聊天.\n{87FF87}/pm\t\t\t{A9C4E4}");
			strcat(gVar3000, "用户私信功能 (OOC).\n{87FF87}/quitfaction\t\t{A9C4E4}退出你现在的组织.\n{87FF87}/ooc\t\t\t{A9C4E4}服务器OOC频道 (大多数的时候是关闭的).\n{87FF87}");
            strcat(gVar3000, "/id\t\t\t{A9C4E4}搜索在线玩家.\n{87FF87}/namechange\t\t{A9C4E4}可以角色更名.\n{87FF87}/animhelp\t\t{A9C4E4}列出所有动作指令.");
			strcat(gVar3000, "\n{87FF87}/stopanim\t\t{A9C4E4}停止当前动作.\n{87FF87}/cleartd\t\t{A9C4E4}清除Textdraw引来的缺陷\n{87FF87}/pickitem\t\t{A9C4E4}从地上捡起物品.");
			strcat(gVar3000, "\n{87FF87}/giveitem\t\t{A9C4E4}将物品给予他人.\n{87FF87}/local\t\t\t{A9C4E4}本地IC聊天频道. *该指令不会激活动作*");
		}
		case 6: { // Help-Center #2
			strcat(gVar3000, "{F5F582}命令\t\t\t效果\n\n{87FF87}/trunk\t\t\t{A9C4E4}管理或查看离您最近的载具后备箱.\n{87FF87}/stats\t\t\t{A9C4E4}查看角色信息.\n{87FF87}/mods\t\t\t{A9C4E4}");
			strcat(gVar3000, "列出所有在线的测试员.\n{87FF87}/helpme\t\t{A9C4E4}需要帮助? 找测试员!\n{87FF87}/changepass");
			strcat(gVar3000, "\t\t{A9C4E4}修改您的密码.\n{87FF87}/chatstyle\t\t{A9C4E4}修改谈话动作.\n{87FF87}/viewcitations\t\t{A9C4E4}列出所有罚单.");
			strcat(gVar3000, "\n{87FF87}/showid\t\t{A9C4E4}将角色身份展示给对方.\n{87FF87}/whisper\t\t{A9C4E4}对对方说悄悄话.");
			strcat(gVar3000, "\n{87FF87}/c\t\t\t{A9C4E4}本地IC聊天频道. *该指令不会激活动作*\n{87FF87}");
			strcat(gVar3000, "/checkseatbelt\t{A9C4E4}查看对方是否系上了安全带.\n{87FF87}/call\t\t\t{A9C4E4}用于拨号.\n{87FF87}/sms\t\t\t{A9C4E4}发送信息.\n{87FF87}/blockpm\t\t{A9C4E4}屏蔽他人私信.");
			strcat(gVar3000, "\n{87FF87}/tackle\t\t\t{A9C4E4}擒住并摔倒一名对手.\n{87FF87}/walkstyle\t\t{A9C4E4}修改角色行走方式.\n{87FF87}");
			strcat(gVar3000, "/lpm\t\t\t{A9C4E4}发送私信给前一位私信你的玩家.\n{87FF87}/sellfish\t\t{A9C4E4}出售你当前拥有的鱼.");
			strcat(gVar3000, "\n{87FF87}/showlicenses\t{A9C4E4}将证件展示给其他人.\n{87FF87}/greet\t\t\t{A9C4E4}向其他人发送握手请求.\n{87FF87}/clearchat\t\t{A9C4E4}清除所有聊天记录.\n{87FF87}/showcons\t\t{A9C4E4}激活后, 如果有玩家连接到服务器你会收到提示信息.");
			strcat(gVar3000, "\n{87FF87}/tognews\t\t{A9C4E4}关闭来自California Network的新闻.\n{87FF87}/togmap\t\t{A9C4E4}关闭当前地图名称.\n{87FF87}/frisk\t\t\t{A9C4E4}请求搜身其他玩家.\n{87FF87}/acceptfrisk\t\t{A9C4E4}接受来自对方的搜索请求.");
			strcat(gVar3000, "\n{87FF87}/jobhelp\t\t{A9C4E4}额外工作命令.\n{87FF87}/househelp\t\t{A9C4E4}额外房屋命令.\n{87FF87}/businesshelp\t\t{A9C4E4}额外产业命令.\n{87FF87}/togafk\t\t\t{A9C4E4}关闭AFK时间提醒.");
			strcat(gVar3000, "\n{87FF87}/factionhelp\t\t{A9C4E4}额外组织命令.\n{87FF87}/taxihelp\t\t{A9C4E4}额外出租车命令.\n{87FF87}/mechanichelp\t{A9C4E4}额外汽修命令.\n{87FF87}/vehiclehelp\t\t{A9C4E4}额外载具命令.");
		}
		case 7: { // Help-Center: Business
			strcat(gVar3000, "{F5F582}命令\t\t效果\n\n{87FF87}/buybusiness\t\t{A9C4E4}购买一个产业.\n{87FF87}/sellbusiness\t\t{A9C4E4}以百分之75的价格出售当前产业.\n{87FF87}/business\t\t{A9C4E4}管理你的产业.");
		}
		case 8: { // Help-Center: House
		    strcat(gVar3000, "作为一名物流司机, 你需要去Ocean Docks开一台货车.\n 随后, GPS系统会将地址发送至你的小地图.");
			strcat(gVar3000,"\n{F5F582}命令\t\t效果\n\n{87FF87}/buyhouse\t\t{A9C4E4}购买一个房屋.\n{87FF87}/sellhouse\t\t{A9C4E4}以百分之75的价格出售当前房屋.\n{87FF87}/house");
		    strcat(gVar3000, "\t\t\t{A9C4E4}管理你的房屋.\n{87FF87}/renthouse\t\t{A9C4E4}租用房屋.\n{87FF87}/unrenthouse\t\t{A9C4E4}向房主申请退租.\n{87FF87}");
			strcat(gVar3000, "/wardrobe\t\t{A9C4E4}访问家庭衣柜.");
		} 
		case 9: { // Help-Center: Job
		    if(PlayerInfo[playerid][pJob] == 1)
			{ // Job: Garbage Collector
		    	strcat(gVar3000, "资源管理工作是需要玩家开一台废物回收车, 然后去城市里收集垃圾桶里的废物.\n 当废物回收车装满后, 会提示玩家到回车站卸货.");
		        strcat(gVar3000, "\n{F5F582}命令\t\t效果\n\n{87FF87}/taketrash\t\t{A9C4E4}收集垃圾.\n{87FF87}/puttrash\t\t{A9C4E4}将垃圾丢入垃圾车.\n");
				strcat(gVar3000, "{87FF87}/unload\t\t\t{A9C4E4}卸载当前载具里的垃圾.\n{87FF87}/quitjob\t\t\t{A9C4E4}退出该工作.");
		    } else if(PlayerInfo[playerid][pJob] == 2)
			{ // Job: Pizza Deliverer
		    	strcat(gVar3000, "外卖员的工作是将制定物品送到客户手里.\n 完成之后需要返回工作地点.");
				strcat(gVar3000, "\n{F5F582}命令\t\t效果\n\n{87FF87}/takepizza\t\t{A9C4E4}从载具内取出披萨盒.\n{87FF87}/putpizza\t\t{A9C4E4}将披萨盒放进载具内.\n{87FF87}");
				strcat(gVar3000, "/quitjob\t\t\t{A9C4E4}退出该工作.");
		    } else if(PlayerInfo[playerid][pJob] == 3)
			{ // Job: Pizza Deliverer
				strcat(gVar3000, "作为一名物流司机, 你需要去Ocean Docks开一台货车. 随后, GPS系统会将地址发送至你的小地图.");
				strcat(gVar3000, "\n{F5F582}命令\t\t效果\n\n{87FF87}/takebox\t\t{A9C4E4}从Burrito内取出箱子.\n{87FF87}/putbox\t\t{A9C4E4}将箱子放入Burrito.\n{87FF87}");
				strcat(gVar3000, "/quitjob\t\t\t{A9C4E4}退出该工作.");
		    } else if(PlayerInfo[playerid][pJob] == 4)
			{ // Job: Thef
				strcat(gVar3000, "作为一名盗贼, 你需要根据需求找一个车子. 在你把车辆撬开后, 你可以去Angel Pine也就是千年山脚下的一个报废场进行变卖.");
				strcat(gVar3000, "\n{F5F582}命令\t\t效果\n\n{87FF87}/scrap\t\t{A9C4E4}出售车辆.\n{87FF87}/breakin\t\t{A9C4E4}撬开车锁.]\n/hotwire\t\t{A9C4E4}开启引擎.\n{87FF87}");
				strcat(gVar3000, "/quitjob\t\t\t{A9C4E4}退出该工作.");
		    } else if(PlayerInfo[playerid][pJob] == 5)
			{ // Job: Thef
				strcat(gVar3000, "作为一名伐木工, 你需要到伐木场获取电锯. 在那儿砍树,然后送到木材仓库.");
				strcat(gVar3000, "\n{F5F582}命令\t\t效果\n\n{87FF87}/getsaw\t\t{A9C4E4}获得电锯.\n{87FF87}/wood\t\t{A9C4E4}存放木头.\n{87FF87}");
				strcat(gVar3000, "/quitjob\t\t\t{A9C4E4}退出该工作.");
		    }
		    else if(PlayerInfo[playerid][pJob] == 6)
			{ // Job: Thef
				strcat(gVar3000, "作为一名木材运送员, 你需要把位于伐木场的木材仓库中的木头,运送到木材加工厂.");
				strcat(gVar3000, "\n{F5F582}命令\t\t效果\n\n{87FF87}/loadwood\t\t{A9C4E4}装载木头.\n{87FF87}/sendwood\t\t{A9C4E4}卸载木头.\n{87FF87}");
				strcat(gVar3000, "/quitjob\t\t\t{A9C4E4}退出该工作.");
		    }
		}
		case 10: { // Help-Center: Faction
		    if(PlayerInfo[playerid][pFaction] != 0) {
				strcat(gVar3000, "{F5F582}命令\t\t\t效果\n\n{87FF87}/quitfaction\t\t{A9C4E4}退出当前组织.\n{87FF87}/factiontalk\t\t{A9C4E4}组织聊天频道.\n{87FF87}");
				strcat(gVar3000, "/members\t\t{A9C4E4}列出所有在线的成员.\n{87FF87}/togf\t\t\t{A9C4E4}关闭组织聊天.");
			}
			if(PlayerInfo[playerid][pFaction] == 1) { // Faction: LAPD
			    strcat(gVar3000, "\n{87FF87}/gate\t\t\t{A9C4E4}打开通往LAPD车库的大门.\n{87FF87}/door\t\t\t{A9C4E4}打开LAPD总部大门.\n{87FF87}/r\t\t\t{A9C4E4}对讲机频道.\n{87FF87}/d\t\t\t{A9C4E4}对讲机部门频道.");
			    strcat(gVar3000, "\n{87FF87}/showbadge\t\t{A9C4E4}展示警徽给其他人.\n{87FF87}/handcuff\t\t{A9C4E4}铐住对方.\n{87FF87}");
			    strcat(gVar3000, "/uncuff\t\t\t{A9C4E4}解开对方的手铐.\n{87FF87}/siren\t\t\t{A9C4E4}给载具增加警灯.\n{87FF87}/barriers\t\t{A9C4E4}");
			    strcat(gVar3000, "锁定/解锁收费站.\n{87FF87}/megaphone\t\t{A9C4E4}");
			    strcat(gVar3000, "使用喊话器.\n{87FF87}/duty\t\t\t{A9C4E4}用于LAPD执勤.\n{87FF87}/cite\t\t\t{A9C4E4}给予对方罚单.");
			    strcat(gVar3000, "\n{87FF87}/mdc\t\t\t{A9C4E4}使用警署MDC系统.\n{87FF87}/arrest\t\t\t{A9C4E4}拘留玩家.\n{87FF87}/charge\t\t{A9C4E4}");
			    strcat(gVar3000, "指控某个玩家.\n{87FF87}/givelicense\t\t{A9C4E4}给予武器许可证.");
			    strcat(gVar3000, "\n{87FF87}/addbarrier\t\t{A9C4E4}设置路障.\n{87FF87}/delbarrier\t\t{A9C4E4}删除附近的路障.\n{87FF87}/clearbarrier");
				strcat(gVar3000, "\t\t{A9C4E4}删除所有路障.\n{87FF87}/addspike\t\t{A9C4E4}放置钉子架.\n{87FF87}/delspike\t\t{A9C4E4}");
				strcat(gVar3000, "删除附近的钉子架.\n{87FF87}/clearspike\t\t{A9C4E4}删除所有钉子架.");
				strcat(gVar3000, "\n{87FF87}/createbadge\t\t{A9C4E4}给予成员一个新的警号.\n{87FF87}/deletebadge\t\t{A9C4E4}删除成员警号.\n{87FF87}/detain\t\t\t{A9C4E4}扣住嫌疑犯.");
				strcat(gVar3000, "\n{87FF87}/undetain\t\t{A9C4E4}将坐在后面的嫌疑人释放.\n{87FF87}/searchlocker\t\t{A9C4E4}搜索警员储物箱.");
				strcat(gVar3000, "\n/addpoliceline\t\t{A9C4E4}放置警戒线.\n{87FF87}/delpoliceline\t\t{A9C4E4}删除警戒线.\n{87FF87}/clearpoliceline\t\t{A9C4E4}删除所有警戒线.");
			} else if(PlayerInfo[playerid][pFaction] == 2) { // Faction: LSFD
			    strcat(gVar3000, "\n{87FF87}/revive\t\t\t{A9C4E4}紧急处理伤口.\n{87FF87}/megaphone\t\t{A9C4E4}喊话器.\n{87FF87}/r\t\t\t{A9C4E4}对讲机频道.\n{87FF87}/d\t\t\t{A9C4E4}部门对讲机频道.");
			    strcat(gVar3000, "\n{87FF87}/garage\t\t\t{A9C4E4}打开LSFD大门.\n{87FF87}/duty\t\t\t{A9C4E4}用于LSFD执勤.");
			    strcat(gVar3000, "\n{87FF87}/siren\t\t\t{A9C4E4}在载具上放置一个紧急通道灯.\n{87FF87}/addbarrier\t\t{A9C4E4}设置路障.\n{87FF87}");
			    strcat(gVar3000, "/delbarrier\t\t{A9C4E4}删除附近的路障.\n{87FF87}/clearbarrier\t\t{A9C4E4}删除所有路障.");
			    strcat(gVar3000, "\n{87FF87}/door\t\t{A9C4E4}打开LSFD的房门.\n{87FF87}/diagnose\t\t{A9C4E4}在放射科对病人诊断.");
			    strcat(gVar3000, "\n{87FF87}/createbadge\t\t{A9C4E4}给予成员一个新的医号.\n{87FF87}/deletebadge\t\t{A9C4E4}删除成员医号.");
			    strcat(gVar3000, "\n{87FF87}/reqlist\t\t{A9C4E4}查看预约列表\n/checkreq\t\t{A9C4E4}接受预约\n/operation\t\t{A9C4E4}进行手术");
			} else if(PlayerInfo[playerid][pFaction] == 3) { // Faction: California Network
			    strcat(gVar3000, "\n{87FF87}/news\t\t{A9C4E4}发布新闻.\n{87FF87}/interview\t\t{A9C4E4}请求或停止采访.\n{87FF87}/live\t\t\t{A9C4E4}用于采访时交流.");
			    strcat(gVar3000, "\n{87FF87}/duty\t\t\t{A9C4E4}用于工作执勤.\n{87FF87}/gate\t\t\t{A9C4E4}打开California Network大门.\n{87FF87}/showbadge\t\t{A9C4E4}将证件展示给其他人.");
			    strcat(gVar3000, "\n{87FF87}/createbadge\t\t{A9C4E4}创建成员的记者编号.\n{87FF87}/deletebadge\t\t{A9C4E4}删除成员的编号");
			}

			if(PlayerInfo[playerid][pRank] == FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] && PlayerInfo[playerid][pFaction] != 0) { // Faction-Leader
				strcat(gVar3000, "\n\n{87FF87}/setfaction\t\t{A9C4E4}编辑组织数据\n{87FF87}/(gov)ernment\t\t{A9C4E4}发布政府公告 (如果你是LAPD或LSFD成员)");
			}
		}
		case 11: { // Help-Center: Taxi
		    strcat(gVar3000, "{F5F582}命令\t\t\t效果\n\n{87FF87}/taximeter\t\t{A9C4E4}开启/关闭出租车计价器.\n{87FF87}/resetmeter\t\t{A9C4E4}重置当前计价器数据.\n{87FF87}");
		    strcat(gVar3000, "/taxifare\t\t{A9C4E4}更改计时价格.");
		}
		case 12: { // Help-Center: Vehicles
		    strcat(gVar3000, "{F5F582}命令\t\t\t效果\n\n{87FF87}/spawn\t\t\t{A9C4E4}列出你所有的载具, 你可以取出它们.\n{87FF87}/despawn\t\t{A9C4E4}泊车.\n{87FF87}/park\t\t\t{A9C4E4}购置一个新的停车场地.");
		    strcat(gVar3000, "\n{87FF87}/radio\t\t\t{A9C4E4}列出车辆电台.\n{87FF87}/trunk\t\t\t{A9C4E4}打开/关闭车辆后备箱.\n{87FF87}/trunk use\t\t{A9C4E4}列出后备箱情况.\n{87FF87}/sellvehicle\t\t{A9C4E4}将车辆卖给系统(30%).\n{87FF87}/sellvehicleto\t\t{A9C4E4}将车辆卖给其他人\n/breakin\t\t{A9C4E4}强制进入车辆.");
		}
		case 13: { // Help-Center: Mechanic
		    strcat(gVar3000, "{F5F582}命令\t\t\t效果\n\n{87FF87}/repaint\t\t\t{A9C4E4}修改车辆颜色.\n{87FF87}/refill\t\t\t{A9C4E4}填充燃料.\n{87FF87}/paintjob\t\t{A9C4E4}修改或增加车辆贴花.\n{87FF87}/removepaintjob\t{A9C4E4}移除车辆贴花.\n{87FF87}/repairbody\t\t{A9C4E4}钣金喷漆服务 (修复外观).\n{87FF87}/repairengine\t\t{A9C4E4}可以用于引擎维修.");
		}
	}

	return gVar3000;
}

stock LoadSkinData(playerid) {
	new query[100];
	mysql_format(sqlHandle, query, sizeof(query), "SELECT `skin` FROM `samp_skins` WHERE `owner` = '%e'", PlayerInfo[playerid][pName]);
	mysql_function_query(sqlHandle, query, true, "OnPlayerLoadSkins", "i", playerid);
}

stock ChangeVehicleDoorStatus(playerid, vehicle)
{
    new vdata[7];
    GetVehicleParamsEx(vehicle, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
    switch(vdata[3])
	{
		case 0:
		{
			SetVehicleParamsEx(vehicle, vdata[0], vdata[1], vdata[2], 1, vdata[4], vdata[5], vdata[6]);
			GameTextForPlayer(playerid, "~r~Locked", 750, 4);
		}
		case 1:
		{
			SetVehicleParamsEx(vehicle, vdata[0], vdata[1], vdata[2], 0, vdata[4], vdata[5], vdata[6]);
			GameTextForPlayer(playerid, "~g~Unlocked", 750, 4);
		}
	}
}

stock SetVehicleDead(vehicleid, savehealth = 0) {
	/* --- Resetting Vehicle-Info upon Vehicle-Death --- */

    new veh = GetPlayerVehicleID(vehicleid);
    Delete3DTextLabel(veicolo_callsign_testo[veh]);
	veicolo_callsign_status[veh] = 0;
	
    format(VehicleInfo[vehicleid][vRadio], 200, "%s", EOS);
	VehicleInfo[vehicleid][vWindows] = 0;
	VehicleInfo[vehicleid][vHoodPopped] = 0;
	VehicleInfo[vehicleid][vSiren] = 0;
	VehicleInfo[vehicleid][vPizzas] = 0;
	VehicleInfo[vehicleid][vTrashbags] = 0;
	VehicleInfo[vehicleid][vBoxes] = 0;

    /* --- Destroying Admin-Label if exist --- */

    if(IsValidDynamic3DTextLabel(spawncarlabel[vehicleid])) {
		DestroyDynamic3DTextLabel(spawncarlabel[vehicleid]);
	}

	/* --- Destroying Siren-Object --- */

	if(IsValidDynamicObject(VehicleInfo[vehicleid][vSiren])) {
		DestroyDynamicObject(VehicleInfo[vehicleid][vSiren]);
	}

    /* --- Destroying/Respawning Vehicle --- */

    if(VehicleInfo[vehicleid][vFaction] == 0) {
		switch(VehicleInfo[vehicleid][vType]) {
			case VEHICLE_OWNED: {
			    new query[200],
					id = GetPlayerID(VehicleInfo[vehicleid][vOwner]),
					Float:health = 0,
					status[4];

	            if(IsPlayerConnected(id)) {

					SetPVarInt(id, "PrivateCar", 0);
				}

				if(savehealth != 0) {
					GetVehicleHealth(vehicleid, health);
				}

                GetVehicleDamageStatus(vehicleid, status[0], status[1], status[2], status[3]);
				mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `fuel` = %i, `health` = %f, `panels` = %i, `doors` = %i, `lights` = %i, `tires` = %i WHERE `id` = %i", VehicleInfo[vehicleid][vFuel], health, status[0], status[1], status[2], status[3], VehicleInfo[vehicleid][vID]);
	            mysql_function_query(sqlHandle, query, false, "", "");
		    	ResetVehicleData(vehicleid);
		    	DestroyVehicle(vehicleid);
		    	KillTimer(FuelTimerVar[vehicleid]);
			}
			case VEHICLE_DMV: {
			    new model = GetVehicleModel(vehicleid);
			    VehicleInfo[vehicleid][vFuel] = vehicleData[model - 400][tank];
			    SetVehicleToRespawn(vehicleid);
			    if(IsNotLockableWithoutEngine(model)) {
			        SetVehicleParamsEx(vehicleid, 0, 0, 0, 0, 0, 0, 0);
				} else if(IsNotLockableWithEngine(model) == 0) {
			    	SetVehicleParamsEx(vehicleid, 0, 0, 0, 1, 0, 0, 0);
				} else {
				    SetVehicleParamsEx(vehicleid, 0, 0, 0, 0, 0, 0, 0);
				}
			}
			case VEHICLE_JOB: {
			    new model = GetVehicleModel(vehicleid);
			    VehicleInfo[vehicleid][vFuel] = vehicleData[model - 400][tank];
			    SetVehicleToRespawn(vehicleid);
			    if(IsNotLockableWithoutEngine(model)) {
			        SetVehicleParamsEx(vehicleid, 0, 0, 0, 0, 0, 0, 0);
				} else if(IsNotLockableWithEngine(model) == 0) {
			    	SetVehicleParamsEx(vehicleid, 0, 0, 0, 1, 0, 0, 0);
				} else {
				    SetVehicleParamsEx(vehicleid, 0, 0, 0, 0, 0, 0, 0);
				}
			}
			default: {
			    ResetVehicleData(vehicleid);
			    DestroyVehicle(vehicleid);
			    KillTimer(FuelTimerVar[vehicleid]);
			}
		}
	} else {
	    new model = GetVehicleModel(vehicleid);
	    VehicleInfo[vehicleid][vFuel] = vehicleData[model - 400][tank];
	    SetVehicleToRespawn(vehicleid);
        if(IsNotLockableWithoutEngine(model)) {
        	SetVehicleParamsEx(vehicleid, 0, 0, 0, 0, 0, 0, 0);
		} else if(IsNotLockableWithEngine(model) == 0) {
	    	SetVehicleParamsEx(vehicleid, 0, 0, 0, 1, 0, 0, 0);
		} else {
		    SetVehicleParamsEx(vehicleid, 0, 0, 0, 0, 0, 0, 0);
		}
	}

	return 1;
}

stock ShowPlayerInformationTextDraw(playerid, info[]) {
	PlayerTextDrawHide(playerid, TD_Info_Value);
    PlayerTextDrawSetString(playerid, TD_Info_Value, info);
    PlayerTextDrawShow(playerid, TD_Info_Value);
	TextDrawShowForPlayer(playerid, TD_Info_Box);
	TextDrawShowForPlayer(playerid, TD_Info_Headbox);
	TextDrawShowForPlayer(playerid, TD_Info_Headline);
	TextDrawShowForPlayer(playerid, TD_Info_Icon);
	InfoTimerVar[playerid] = SetTimerEx("InfoTimer", 4000, false, "i", playerid);
	return 1;
}

stock GetNewPlate() {
    new plate[10];
    format(plate, sizeof(plate), "%i%i%s%s-%i%s%s", random(9), random(9), GetRandomLetter(), GetRandomLetter(), random(9), GetRandomLetter(), GetRandomLetter());
	return plate;
}

stock Log(playerid, title[], text[]) {
	new query[500];
    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_log` (`title`, `log`, `date`, `ip`) VALUES ('%e', '%e', NOW(), '%e')", title, text, PlayerInfo[playerid][pIP]);
    mysql_function_query(sqlHandle, query, false, "", "");
}

stock SendMessageToModerators(message[]) {
	foreach(new i : Player) {
		if(PlayerInfo[i][pModLevel] > 0) {
			SendClientMessage(i, COLOR_MODERATORS, message);
		}
	}
}

stock SendMessageToHiddenAdmins(message[])
{
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pAdminlevel] > 3)
		{
			SendClientMessage(i, 0x910003FF, message);
		}
	}
}

stock SendMessageToAdmins(message[], color = COLOR_GOLD)
{
	foreach(new i : Player)
	{
		if(PlayerInfo[i][pAdminlevel] > 0)
		{
			SendClientMessage(i, color, message);
		}
	}
}

stock SetPlayerLevel(playerid)
{
	//SetPlayerScore(playerid, floatround(floatsqroot(PlayerInfo[playerid][pScore]), floatround_floor));
	SetPlayerScore(playerid, PlayerInfo[playerid][pScore]);
}

stock ResetVehicleData(vehicleid) {
	format(VehicleInfo[vehicleid][vOwner], MAX_PLAYER_NAME, "%s", EOS);
	VehicleInfo[vehicleid][vX] = 0.0;
	VehicleInfo[vehicleid][vY] = 0.0;
	VehicleInfo[vehicleid][vZ] = 0.0;
	VehicleInfo[vehicleid][vA] = 0.0;
	VehicleInfo[vehicleid][vType] = 0;
	format(VehicleInfo[vehicleid][vPlate], 10, "%s", EOS);
    VehicleInfo[vehicleid][vWindows] = 0;
    VehicleInfo[vehicleid][vFuel] = 0;
    VehicleInfo[vehicleid][vColor1] = 0;
    VehicleInfo[vehicleid][vColor2] = 0;
    VehicleInfo[vehicleid][vFaction] = 0;
    VehicleInfo[vehicleid][vKey] = 0;
    format(VehicleInfo[vehicleid][vRadio], 200, "%s", EOS);
    VehicleInfo[vehicleid][vTM] = 0;
    VehicleInfo[vehicleid][vTMPayment] = 0;
    VehicleInfo[vehicleid][vTMTime] = 0;
    VehicleInfo[vehicleid][vTMCounter] = 0;
    VehicleInfo[vehicleid][vHealth] = 0;
    VehicleInfo[vehicleid][vAvoidUpdate] = 0;
    VehicleInfo[vehicleid][vHoodPopped] = 0;
    VehicleInfo[vehicleid][vFVID] = 0;
    VehicleInfo[vehicleid][vRented] = 0;
    VehicleInfo[vehicleid][vPaintjob] = 0;
    VehicleInfo[vehicleid][vID] = 0;
    VehicleInfo[vehicleid][vSiren] = 0;
    VehicleInfo[vehicleid][vPizzas] = 0;
    VehicleInfo[vehicleid][vTrashbags] = 0;
    VehicleInfo[vehicleid][vBoxes] = 0;
	VehicleInfo[vehicleid][vBomb] = 0;
	VehicleInfo[vehicleid][vInsurance] = 0;
	VehicleInfo[vehicleid][vScrapped] = 0;
	VehicleInfo[vehicleid][vLockType] = 0;
    for(new i = 0; i != 14; i++) {
        VehicleInfo[vehicleid][vModifications][i] = 0;
	}

    KillTimer(FuelTimerVar[vehicleid]);
}

stock LoadData(playerid)
{
	new query[1024];
	strcat(query, "SELECT `age`, `adminlevel`, `money`, `skin`, `walkstyle`, `chatstyle`, `gender`, `renthouse`, `score`, `faction`, `rank`, `drivelic`, `bank`, ");
	strcat(query, "`health`, `armour`, `pAJCPs`, `weaponlic`, `fish`, `job`, `modlevel`, `paycheck`, `jobtime`, `arresttime`, `PayTimer`, ");
	strcat(query, "`staffpassword`, `radioobj`, `badge`, `pDisX`, `pDisY`, `pDisZ`, `pDisA`, `pDisInt`, `pDisVW`, `pTrainticket`, `spawnLoc`, `pForumName`, ");
	strcat(query, "`pFine`, `pSavings`, `pTaxiLic`, `pAirplaneLic`, `duty`, `namechanges`, `weed`, `cocaine`, `ecstasy`, `crack`, `heroin`, `weed-seeds`, `opium-seeds`, ");
	strcat(query, "`fertilizer`, `raw-opium`, `cuffed`, `donate-rank`, `donate-year`, `donate-month`, `donate-day`, `carbomb`, `scrap-wait`, ");
	strcat(query, "`loaned`, `loancash`, `maskID`, `prisoned`, `prison-time`, `swat`, `swat-cooldown`, `weed-a`, `coke-a`, `ecstasy-a`, ");
	strcat(query, "`crack-a`, `heroin-a`, `freq`, `activated`, `spraytagperm`, `woodmat`, `hunger`, `thirst`, `cold`, `cancer`, `IsHospital`, `pdet`, `pdmask`, `sidejob` FROM `samp_users` WHERE `user` = '%e'");

	mysql_format(sqlHandle, query, sizeof(query), query, PlayerInfo[playerid][pName]);
	mysql_function_query(sqlHandle, query, true, "OnPlayerLoadData", "i", playerid);
}


stock SaveData(playerid) {
	if(GetPVarInt(playerid, "LoadData") != 0) {
	    new Float:health,
			Float:armour,
			Float:X,
			Float:Y,
			Float:Z,
			Float:A,
			pweapon[2],
			virtualWorld,
			interior,
			spawnLoc,
			faction = FactionInfo[PlayerInfo[playerid][pFaction]][fID],
			skin,
			duty = 0;

		if(GetPVarInt(playerid, "SanDuty") != 0) {
		    duty = PlayerInfo[playerid][pSkin];
			skin = GetPVarInt(playerid, "SanDuty");
		} else if(GetPVarInt(playerid, "LAPDDuty") != 0) {
		    duty = PlayerInfo[playerid][pSkin];
		    skin = GetPVarInt(playerid, "LAPDDuty");
		} else if(GetPVarInt(playerid, "LSFDDuty") != 0) {
		    duty = PlayerInfo[playerid][pSkin];
			skin = GetPVarInt(playerid, "LSFDDuty");
		} else {
			skin = PlayerInfo[playerid][pSkin];
		}
		
        GetPlayerArmour(playerid, armour);
        if(GetPVarInt(playerid, "Death") == 0) {
			GetPlayerHealth(playerid, health);
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, A);

			if(GetPVarInt(playerid, "ClothingStoreActive") != 0) {
				virtualWorld = GetPVarInt(playerid, "ClothingStoreVW");
				interior = GetPlayerInterior(playerid);
			} else if(GetPVarInt(playerid, "WardrobeActive") != 0) {
				virtualWorld = GetPVarInt(playerid, "WardrobeVW");
				X = houseData[HouseInfo[virtualWorld][hInt]][intY];
				Y = houseData[HouseInfo[virtualWorld][hInt]][intX];
		  		Z = houseData[HouseInfo[virtualWorld][hInt]][intZ];
		  		A = houseData[HouseInfo[virtualWorld][hInt]][intA];
		  		interior = houseData[HouseInfo[virtualWorld][hInt]][intVal];
			} else if(GetPVarInt(playerid, "CCActive") != 0) {
                virtualWorld = 0;
				X = spawnLocations[0][spawnX];
				Y = spawnLocations[0][spawnY];
		  		Z = spawnLocations[0][spawnZ];
		  		A = spawnLocations[0][spawnA];
		  		interior = 0;
			} else if(GetPVarInt(playerid, "InModGarage") != 0) {
                virtualWorld = 0;
				X = 1041.3319;
				Y = -1027.6871;
				Z = 32.1016;
		  		A = 0;
		  		interior = 0;
			} else if(GetPVarInt(playerid, "LAPDChoose") != 0) {
			    virtualWorld = 0;
				interior = 10;
				X = 267.1146;
				Y = 118.1507;
				Z = 1004.6172;
            } else if(GetPVarInt(playerid, "LSFDChoose") != 0) {
			    virtualWorld = 0;
				interior = 6;
				X = 254.2592;
				Y = 78.3316;
				Z = 1003.6406;
            } else if(GetPVarInt(playerid, "SanChoose") != 0) {
			    virtualWorld = 0;
				interior = 3;
				X = 345.4447;
				Y = 164.7374;
				Z = 1014.1875;
			} else if(GetPVarInt(playerid, "PayNSpray") != 0) {
                virtualWorld = 0;
                interior = 0;
		  		switch(GetPVarInt(playerid, "PayNSpray")) {
					case 1: {
					    X = 2076.4214;
						Y = -1838.0778;
						Z = 13.1692;
				  		A = 179.4030;
					}
					case 2: {
					    X = 717.2195;
						Y = -472.7567;
						Z = 16.0488;
				  		A = 179.5338;
					}
					case 3: {
					    X = 1014.5531;
						Y = -1033.7996;
						Z = 31.2687;
				  		A = 89.7582;
					}
					case 4: {
					    X = 481.7528;
						Y = -1730.1110;
						Z = 10.7038;
				  		A = 82.9610;
					}
					default: {
					    X = 2076.4214;
						Y = -1838.0778;
						Z = 13.1692;
				  		A = 179.4030;
					}
				}
			} else {
				switch(GetPVarInt(playerid, "DealershipLoc")) {
				    case 1: {
					    virtualWorld = 0;
						X = 542.2992;
						Y = -1292.1060;
				  		Z = 17.2422;
				  		A = 0;
				  		interior = 0;
					}
					case 2: {
					    virtualWorld = 0;
						X = 2131.7964;
						Y = -1150.2208;
				  		Z = 24.1810;
				  		A = 0;
				  		interior = 0;
					}
				    default: {
						virtualWorld = GetPlayerVirtualWorld(playerid);
						interior = GetPlayerInterior(playerid);
					}
				}
			}
		} else {
			X = GetPVarFloat(playerid, "DeathX");
			Y = GetPVarFloat(playerid, "DeathY");
			Z = GetPVarFloat(playerid, "DeathZ");
			A = GetPVarFloat(playerid, "DeathA");
			virtualWorld = GetPVarInt(playerid, "DeathVW");
			interior = GetPVarInt(playerid, "DeathInt");
			health = 0;
		}

		if(GetPVarInt(playerid, "InHouse") != 0) {
		    spawnLoc = 1;
		} else if(GetPVarInt(playerid, "InBusiness") != 0) {
		    spawnLoc = 2;
		} else {
			spawnLoc = 0;
		}

		if(items[PlayerInfo[playerid][pItemType][0]][itemType] == ITEM_WEAPON) {
		    for(new p; p != 13; p++) {
		        GetPlayerWeaponData(playerid, p, pweapon[0], pweapon[1]);
		        if(pweapon[0] == items[PlayerInfo[playerid][pItemType][0]][weaponID]) {
		            PlayerInfo[playerid][pItemVar][0] = pweapon[1];
		            if(itemIndexExists(playerid, PlayerInfo[playerid][pItemIndex][0])) {
						setItemVariable(playerid, PlayerInfo[playerid][pItemIndex][0], pweapon[1]);
					}

		            format(gVar3000, 3000, "%s", EOS);
					mysql_format(sqlHandle, gVar3000, sizeof(gVar3000), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", pweapon[1], PlayerInfo[playerid][pItemID][0]);
					mysql_function_query(sqlHandle, gVar3000, false, "", "");
					break;
		        }
		    }
		}

	    format(gVar3000, 3000, "%s", EOS);
	    strcat(gVar3000, "UPDATE `samp_users` SET `walkstyle` = %i, `chatstyle` = %i, `gender` = %i, `age` = %i, `skin` = %i, `adminlevel` = %i, `money` = %i, ");
	    strcat(gVar3000, "`renthouse` = %i, `ip` = '%e', `score` = %i, `faction` = %i, `rank` = %i, `arresttime` = %i, `spawnLoc` = %i, `radioobj` = %i, ");
	    strcat(gVar3000, "`badge` = %i, `drivelic` = %i, `bank` = %i, `pAJCPs` = %i, `weaponlic` = %i, `fish` = %i, `job` = %i, `modlevel` = %i, ");
		strcat(gVar3000, "`paycheck` = %i, `jobtime` = %i, `PayTimer` = %i, `pForumName` = '%e', `pDisX` = %f, `pDisY` = %f, `pDisZ` = %f, `pDisA` = %f, `pDisInt` = %i, ");
		strcat(gVar3000, "`pDisVW` = %i, `health` = %f, `armour` = %f, `pTrainticket` = %i, `pFine` = %i, `pSavings` = %i, `pTaxiLic` = %i, `pAirplaneLic` = %i, `duty` = %i, ");
		strcat(gVar3000, "`namechanges` = %i, `weed` = %i, `cocaine` = %i, `ecstasy` = %i, `crack` = %i, `heroin` = %i, `weed-seeds` = %i, `opium-seeds` = %i, ");
		strcat(gVar3000, "`fertilizer` = %i, `raw-opium` = %i, `cuffed` = %i, `donate-rank` = %i, `donate-year` = %i, `donate-month` = %i, `donate-day` = %i, ");
		strcat(gVar3000, "`carbomb` = %i, `scrap-wait` = %i, `loaned` = %i, `loancash` = %i, `maskID` = %i, `prisoned` = %i, `prison-time` = %i,");
		strcat(gVar3000, "`swat` = %i, `swat-cooldown` = %i, `weed-a` = %i, `coke-a` = %i, `ecstasy-a` = %i, `crack-a` = %i, `heroin-a` = %i, `freq` = %i, ");
		strcat(gVar3000, "`activated` = %i, `spraytagperm` = %i,`woodmat` = %i, `hunger` = %i, `thirst` = %i, `cold` = %i, `cancer` = %i, `IsHospital` = %i, `pdet` = %i, `pdmask` = %i, `sidejob` = %i WHERE user = '%e'");
		
	    mysql_format(sqlHandle, gVar3000, sizeof(gVar3000), gVar3000, PlayerInfo[playerid][pWalkstyle], PlayerInfo[playerid][pChatstyle], PlayerInfo[playerid][pGender], PlayerInfo[playerid][pAge],
	    										  skin, PlayerInfo[playerid][pAdminlevel], PlayerInfo[playerid][pMoney], PlayerInfo[playerid][pRentHouse],
												  PlayerInfo[playerid][pIP], PlayerInfo[playerid][pScore], faction, PlayerInfo[playerid][pRank], GetPVarInt(playerid, "Arrest"), spawnLoc,
												  PlayerInfo[playerid][pRadio], PlayerInfo[playerid][pBadge], PlayerInfo[playerid][pDriveLic],
												  PlayerInfo[playerid][pBank], PlayerInfo[playerid][pAJCPs], PlayerInfo[playerid][pWeaponLic], PlayerInfo[playerid][pFish],
												  PlayerInfo[playerid][pJob], PlayerInfo[playerid][pModLevel], PlayerInfo[playerid][pPaycheck], PlayerInfo[playerid][pJobTime],
												  PlayerInfo[playerid][pPayTimer], PlayerInfo[playerid][pForumName], X, Y, Z, A, interior, virtualWorld, health,
												  armour, PlayerInfo[playerid][pTrainticket], PlayerInfo[playerid][pFine], PlayerInfo[playerid][pSavings], PlayerInfo[playerid][pTaxiLic],
												  PlayerInfo[playerid][pAirplaneLic], duty, PlayerInfo[playerid][pNamechanges], PlayerInfo[playerid][pWeed], PlayerInfo[playerid][pCocaine],
												  PlayerInfo[playerid][pEcstasy], PlayerInfo[playerid][pCrack], PlayerInfo[playerid][pHeroin], PlayerInfo[playerid][pWeedSeeds],
												  PlayerInfo[playerid][pOpiumSeeds], PlayerInfo[playerid][pFertilizer], PlayerInfo[playerid][pRawOpium], PlayerInfo[playerid][pCuffed],
										  		  PlayerInfo[playerid][pDonateRank], PlayerInfo[playerid][pDonateYear], PlayerInfo[playerid][pDonateMonth], PlayerInfo[playerid][pDonateDay],
												  PlayerInfo[playerid][pCarBomb], PlayerInfo[playerid][pScrapWait], PlayerInfo[playerid][pLoaned], PlayerInfo[playerid][pLoanCash],
												  PlayerInfo[playerid][pMaskID], PlayerInfo[playerid][pPrisoned], PlayerInfo[playerid][pPrisonTime], PlayerInfo[playerid][pSWAT],
												  PlayerInfo[playerid][pSwatCooldown], PlayerInfo[playerid][pWeedAddiction], PlayerInfo[playerid][pCocaineAddiction],
												  PlayerInfo[playerid][pEcstasyAddiction], PlayerInfo[playerid][pCrackAddiction], PlayerInfo[playerid][pHeroinAddiction],
												  PlayerInfo[playerid][pFreq], PlayerInfo[playerid][pActivated], PlayerInfo[playerid][pSTagPerm], PlayerInfo[playerid][pWoodmat], PlayerInfo[playerid][pHunger], PlayerInfo[playerid][pThirst], PlayerInfo[playerid][pCold], PlayerInfo[playerid][pCancer], PlayerInfo[playerid][pIsHospital], PlayerInfo[playerid][pPDet], PlayerInfo[playerid][pPDMask], PlayerInfo[playerid][pSidejob], PlayerInfo[playerid][pName]);

		mysql_function_query(sqlHandle, gVar3000, false, "", "");
        format(gVar3000, 3000, "%s", EOS);
        mysql_format(sqlHandle, gVar3000, sizeof(gVar3000), "UPDATE `samp_items` SET `active` = 0 WHERE `owner` = '%e'", PlayerInfo[playerid][pName]);
        mysql_function_query(sqlHandle, gVar3000, false, "", "");
        for(new c = 0; c != 9; c++) {
			if(PlayerInfo[playerid][pItemType][c] != 0) {
			    format(gVar3000, 3000, "%s", EOS);
			    mysql_format(sqlHandle, gVar3000, sizeof(gVar3000), "UPDATE `samp_items` SET `active` = 1 WHERE `owner` = '%e' AND id = '%i'", PlayerInfo[playerid][pName], PlayerInfo[playerid][pItemID][c]);
                mysql_function_query(sqlHandle, gVar3000, false, "", "");
			}
		}
	}
}

/* --- Timers --- */

forward PaycheckTimer(playerid);
public PaycheckTimer(playerid) {
	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
	if(!IsPlayerInAnyVehicle(playerid) || (PlayerInfo[playerid][pJob] == 2 && model != 448) || (PlayerInfo[playerid][pJob] == 1 && model != 408) || (PlayerInfo[playerid][pJob] == 3 && model != 482)) {
		PlayerTextDrawHide(playerid, TD_JOB_FirstLine);
	}
}

forward whenhotwire(playerid);
public whenhotwire(playerid)
{
	new vehicle = GetPlayerVehicleID(playerid);
	SetPVarInt(playerid, "turningengine", 0);
	if(IsPlayerInAnyVehicle(playerid))
	{
			switch(random(2))
			{
				case 1:
				{
			       	new msg[80],
			       	Float:playaHealth,
		  			Float:X,
					Float:Y,
					Float:Z;
			        GetPlayerHealth(playerid, playaHealth);
				    GetPlayerPos(playerid, X, Y, Z);
			        if(playaHealth > 10.0)
			        {
			            SetPlayerHealth(playerid, playaHealth - 5.0);
			            SCM(playerid, COLOR_LIGHTRED, "[!] 提示: {FFFFFF} 由于您被防盗器电击, 您损失了一些血值...");
			        }
			        format(msg, sizeof(msg), "** 载具 %s 电钳打火尝试失败 (( %s ))", vehicleData[GetVehicleModel(vehicle) - 400][typeName], GetNameWithSpace(playerid, 1));
					ProxDetector(15, playerid, msg, COLOR_PINK);
					SetPlayerPos(playerid, X, Y, Z + 1.5);
		            GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~TAZED!!", 5000, 3);
		            ApplyAnimation(playerid, "FIGHT_E", "Hit_fightkick_B", 4.1, 0, 1, 1, 1, 1, 1);
		            ApplyAnimation(playerid, "FIGHT_E", "Hit_fightkick_B", 4.1, 0, 1, 1, 1, 1, 1);
		      		FreezePlayer(playerid);
		      		ApplyAnimation(playerid, "FIGHT_E", "Hit_fightkick_B", 4.1, 0, 1, 1, 1, 1, 1);
		            UnfreezeTimerVar[playerid] = SetTimerEx("UnfreezeTimer", 5000, false, "i", playerid);
				}
				default:
				{

				    new vengine, lights, alarm, doors, bonnet, boot, objective;
				    new msg[128];

					GetVehicleParamsEx(vehicle, vengine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(vehicle, 1, lights, alarm, doors, bonnet, boot, objective);
					if(VehicleInfo[vehicle][vBomb] == 1)
					{
					    new query[160];
						new Float:X, Float:Y, Float:Z;
						SetPlayerHealth(playerid, 0.0);
			    		GetVehiclePos(vehicle, X, Y, Z);
			    		CreateExplosion(X, Y, Z, 2, 15.0);
			    		SetVehicleHealth(vehicle, 250.0);
			    		format(msg, sizeof(msg), "** 载具 %s 电钳打火启动引擎将C4引爆. (( %s ))", vehicleData[GetVehicleModel(vehicle) - 400][typeName], GetNameWithSpace(playerid, 1));
						ProxDetector(15, playerid, msg, COLOR_PINK);
						VehicleInfo[vehicle][vBomb] = 0;
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `bomb` = %i WHERE `id` = %i", VehicleInfo[vehicle][vBomb], VehicleInfo[vehicle][vID]);
						mysql_function_query(sqlHandle, query, false, "", "");
			 		}
			 		else
			 		{
			 		    format(msg, sizeof(msg), "** 载具 %s 引擎已启动. (( %s ))", vehicleData[GetVehicleModel(vehicle) - 400][typeName], GetNameWithSpace(playerid, 1));
						ProxDetector(15, playerid, msg, COLOR_PINK);
			 		}
				}
			}
			switch(DoesVehicleObtainSeatbelts(vehicle))
			{
			    case 0:
				{
			        if(DoesVehicleObtainHelmets(vehicle) == 1)
					{
           				if(helmet[playerid] == 0)
		   				{
         					SendClientMessage(playerid, COLOR_WHITE, "引擎已启动 - 请记住使用 /helmet 戴上头盔.");
						}
			        }
			    }
			    case 1:
				{
			        if(seatbelt[playerid] == 0)
					{
			    		SendClientMessage(playerid, COLOR_WHITE, "引擎已启动 - 请记住使用 /seatbelt 系上安全带.");
					}
				}
			}
	}
	return 1;
}

forward BreakInVehicle(playerid);
public BreakInVehicle(playerid)
{
    new vdata[7];
	new vehicle = GetPVarInt(playerid, "SaveVehicleID");
	new zName[MAX_ZONE_NAME];
	GetPlayerZone(playerid, zName, sizeof(zName));
    GetVehicleParamsEx(vehicle, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
	if(IsPlayerInRangeOfPoint(playerid, 3.0, BreakX[vehicle], BreakY[vehicle], BreakZ[vehicle]))
	{
		SetVehicleParamsEx(vehicle, vdata[0], vdata[1], vdata[2], 0, vdata[4], vdata[5], 0);
		Delete3DTextLabel(BreakCarLB[vehicle]);
		GameTextForPlayer(playerid, "~g~Unlocked", 750, 4);
		GameTextForPlayer(playerid, "~g~Unlocked", 750, 4);
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功使用工具撬进该车!");
		IsBreakingIn[playerid] = 0;
	    BreakDownTimer[playerid] = 0;
	    IsBreaking[playerid] = 0;
	    CarTheft(playerid);
		BreakX[vehicle] = 0.0;
		BreakY[vehicle] = 0.0;
	    BreakZ[vehicle] = 0.0;
	    VehicleInfo[vehicle][vDamages] = 0;
	   	DeletePVar(playerid, "SaveVehicleID");
	   	KillTimer(BreakInTimer[playerid]);
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		foreach(new i : Player)
		{
			PlayAudioStreamForPlayer(i, "http://dx.sc.chinaz.com/Files/DownLoad/sound1/201406/4611.mp3", X, Y, Z, 40.0, 1);
		}
	}
	return 1;
}

forward DMVPilotTimer(playerid, step);
public DMVPilotTimer(playerid, step) {
	switch(step) {
		case 1: {
		    PlayerTextDrawHide(playerid, TD_DMV_Text1);
			PlayerTextDrawHide(playerid, TD_DMV_Text2);
			PlayerTextDrawHide(playerid, TD_DMV_Text3);
		    PlayerTextDrawSetString(playerid, TD_DMV_Text1, "Do NOT under any circumstances operate");
			PlayerTextDrawSetString(playerid, TD_DMV_Text2, "an aircraft when a safe flight is");
			PlayerTextDrawSetString(playerid, TD_DMV_Text3, "not guaranteed (windy, alcohol, view, ...).");
			PlayerTextDrawShow(playerid, TD_DMV_Text1);
			PlayerTextDrawShow(playerid, TD_DMV_Text2);
			PlayerTextDrawShow(playerid, TD_DMV_Text3);
		}
		case 2: {
		    PlayerTextDrawHide(playerid, TD_DMV_Text1);
			PlayerTextDrawHide(playerid, TD_DMV_Text2);
			PlayerTextDrawHide(playerid, TD_DMV_Text3);
		    PlayerTextDrawSetString(playerid, TD_DMV_Text1, "Do ONLY land your aircraft in designated");
			PlayerTextDrawSetString(playerid, TD_DMV_Text2, "areas and always operate your aircraft");
			PlayerTextDrawSetString(playerid, TD_DMV_Text3, "according to the local aviation law.");
			PlayerTextDrawShow(playerid, TD_DMV_Text1);
			PlayerTextDrawShow(playerid, TD_DMV_Text2);
			PlayerTextDrawShow(playerid, TD_DMV_Text3);
		}
		case 3: {
		    PlayerTextDrawHide(playerid, TD_DMV_Text1);
			PlayerTextDrawHide(playerid, TD_DMV_Text2);
			PlayerTextDrawHide(playerid, TD_DMV_Text3);
		    PlayerTextDrawSetString(playerid, TD_DMV_Text1, "Make sure when operating an aircraft");
			PlayerTextDrawSetString(playerid, TD_DMV_Text2, "that at all times all passengers are");
			PlayerTextDrawSetString(playerid, TD_DMV_Text3, "wearing safety belts (including you).");
			PlayerTextDrawShow(playerid, TD_DMV_Text1);
			PlayerTextDrawShow(playerid, TD_DMV_Text2);
			PlayerTextDrawShow(playerid, TD_DMV_Text3);
		}
		case 4: {
		    PlayerTextDrawHide(playerid, TD_DMV_Text1);
			PlayerTextDrawHide(playerid, TD_DMV_Text2);
			PlayerTextDrawHide(playerid, TD_DMV_Text3);
			TextDrawHideForPlayer(playerid, TD_DMV_Box);
			TextDrawHideForPlayer(playerid, TD_DMV_Headline);
			UnfreezePlayer(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "请飞向指定地点来完成你的飞行驾照考试.");
			SetPlayerRaceCheckpoint(playerid, 3, pilotLicenseCPs[0][0], pilotLicenseCPs[0][1], pilotLicenseCPs[0][2], pilotLicenseCPs[1][0], pilotLicenseCPs[1][1], pilotLicenseCPs[1][2], 15);
			SetPVarInt(playerid, "DMVCP", 1);
		}
	}

	if(step <= 3) {
		DMVTimerVar[playerid] = SetTimerEx("DMVPilotTimer", 15000, false, "di", playerid, step + 1);
	}
}

forward Countdown(seconds);
public Countdown(seconds) {
	new msg[10];
	seconds--;
 	format(msg, sizeof(msg), "~r~%i", seconds);
	foreach(new i : Player) {
		GameTextForPlayer(i, msg, 1100, 6);
	}

	if(seconds > 0) {
	    SetTimerEx("Countdown", 1000, false, "i", seconds--);
	} else {
        countdownTimer = 0;
	}
}

forward DisableMoneyTD(playerid);
public DisableMoneyTD(playerid) {
    PlayerTextDrawHide(playerid, TD_Money_Update);
}

forward DisableMidTD(playerid);
public DisableMidTD(playerid) {
    PlayerTextDrawHide(playerid, TD_Mid_Info);
    SetTimerEx("CurrentPickupTimer", 3000, false, "i", playerid);
}

forward CurrentPickupTimer(playerid);
public CurrentPickupTimer(playerid) {
	SetPVarInt(playerid, "CurrentPickup", 0);
}

forward CrouchCheck(playerid);
public CrouchCheck(playerid) {
	CheckCrouch[playerid] = 0;
    return 1;
}

forward BarrierTimer(barrier);
public BarrierTimer(barrier) {
	switch(barrier) {
		case 0, 1: {
			MoveDynamicObject(Barrier[0], -78.79980469, -906.19921875, 17.10000038, 0.05, 0.00000000, 89.74182129, 152.97363281);
		}
		case 2: {
			MoveDynamicObject(Barrier[2], 1695.59997559, 417.39999390, 30.60000038, 0.05, 359.98901367, 88.99475098, 160.49670410);
		}
		case 3: {
        	MoveDynamicObject(Barrier[3], 1709.00000000, 421.20001221, 30.70000076, 0.05, 0.00000000, 89.74731445, 341.99340820);
		}
		case 4: {
	 		MoveDynamicObject(Barrier[4], 600.20001221, 346.29998779, 18.79999924, 0.05, 0.00000000, 89.74731445, 33.99719238);
		}
		case 5: {
			MoveDynamicObject(Barrier[5], -183.89941406, 278.50000000, 12.19999981, 0.05, 0.00000000, 89.74182129, 163.98193359);
		}
		case 6: {
			MoveDynamicObject(Barrier[6], -197.80000305, 282.39999390, 12.19999981, 0.05, 0.00000000, 89.74182129, 344.72912598);
		}
		case 7: {
			MoveDynamicObject(Barrier[7], 607.59997559, -1201.90002441, 18.00000000, 0.05, 0.00000000, 89.74182129, 16.47131348);
		}
		case 8: {
			MoveDynamicObject(Barrier[8], 67.00000000, -1537.80004883, 4.90000010, 0.05, 0.00000000, 89.74182129, 265.72082520);
		}
		case 9: {
			MoveDynamicObject(Barrier[9], 38.39941406, -1525.69921875, 5.09999990, 0.05, 0.00000000, 89.74182129, 84.72106934);
		}
		case 10: {
			MoveDynamicObject(Barrier[10], 612.29998779, 354.10000610, 18.79999924, 0.05, 0.00000000, 89.74731445, 211.49218750);
		}
		case 11: {
			MoveDynamicObject(Barrier[11], -963.50000000, -284.39941406, 36.40000153, 0.05, 0.00000000, 89.74182129, 348.22265625);
		}
		case 12: {
			MoveDynamicObject(Barrier[12], -949.50000000, -287.50000000, 36.40000153, 0.05, 0.00000000, 89.74182129, 166.72302246);
		}
		case 13: {
			MoveDynamicObject(Barrier[13], 628.50000000, -1193.80004883, 18.00000000, 0.05, 0.00000000, 89.74182129, 22.71850586);
		}
	}

	BarrierStatus[barrier] = 0;
}

forward fadeTimer(playerid);
public fadeTimer(playerid) {
	PlayerTextDrawHide(playerid, TD_Fader);
	CallLocalFunction("OnFadeComplete", "i", playerid);
}

forward FiveSecondTimer();
public FiveSecondTimer()
{
	foreach(new p : Player) {
		SetPVarInt(p, "Reload", 0);
		SetPVarInt(p, "DrinkingSpamBlocker", 0);
	}
	for(new i = 0; i != MAX_CALLS; i++) {
		if(IncomingCalls[i][cCaller] != -1) {
			if(IncomingCalls[i][cFail] != 0) {
				new me[95];
				switch(IncomingCalls[i][cFail]) {
                    case 1: {
						SendClientMessage(IncomingCalls[i][cCaller], COLOR_GREY, "您拨打的电话已暂停服务.");
					}
					case 2: {
						SendClientMessage(IncomingCalls[i][cCaller], COLOR_GREY, "您拨打的电话暂时无法接通,请稍候再拨.");
					}
				}

				if(PlayerInfo[IncomingCalls[i][cCaller]][pItemVar][0] != IncomingCalls[i][cCallingNumber]) {
					RemovePlayerAttachedObject(IncomingCalls[i][cCaller], IDX_CELLPHONE);
					format(me, sizeof(me), "** %s 挂断了电话并且将手机放回口袋中.", GetNameWithSpace(IncomingCalls[i][cCaller], 1));
				} else {
					format(me, sizeof(me), "** %s 挂断了电话.", GetNameWithSpace(IncomingCalls[i][cCaller], 1));
				}

				SetPVarInt(IncomingCalls[i][cCaller], "Calling", -1);
				SetPVarInt(IncomingCalls[i][cCaller], "UseCellphone", 0);
				SetPVarInt(IncomingCalls[i][cCaller], "CallingNumber", 0);
				SetPVarInt(IncomingCalls[i][cCaller], "PhoneStep", 0);
				SetPVarInt(IncomingCalls[i][cCaller], "CallingSpeaker", 0);
				SetPlayerSpecialAction(IncomingCalls[i][cCaller], SPECIAL_ACTION_STOPUSECELLPHONE);
				UnsetIncomingCall(i);
			} else if(IncomingCalls[i][cCalled] != -1) {
	            new me[50],
			    	msg[75];

				format(me, sizeof(me), "** %s 手机响了.", GetNameWithSpace(IncomingCalls[i][cCalled], 1));
				ProxDetector(12, IncomingCalls[i][cCalled], me, COLOR_PINK, 1, 20804);
				format(msg, sizeof(msg), "你可以 /pickup 接听来自 '%i' 通话.", IncomingCalls[i][cCallingNumber]);
				SendClientMessage(IncomingCalls[i][cCalled], COLOR_WHITE, msg);
			} else if(IncomingCalls[i][cCalledNumber] == HOTLINE_EMERGENCY) {
			    SetPVarInt(IncomingCalls[i][cCaller], "Calling", HOTLINE_EMERGENCY);
			    SetPVarInt(IncomingCalls[i][cCaller], "PhoneStep", 1);
			    SendClientMessage(IncomingCalls[i][cCaller], COLOR_DARKYELLOW, "调度员说: (通话中) 911紧急中心, 你需要 'PD', 'FD' 还是 'Both'?");
			    UnsetIncomingCall(i);
			} else if(IncomingCalls[i][cCalledNumber] == HOTLINE_TAXI) {
			    SetPVarInt(IncomingCalls[i][cCaller], "Calling", HOTLINE_TAXI);
                SendClientMessage(IncomingCalls[i][cCaller], COLOR_DARKYELLOW, "雇员说: (通话中) 洛斯桑托斯出租车公司，目前你的位置在哪?");
			    UnsetIncomingCall(i);
			} else if(IncomingCalls[i][cCalledNumber] == HOTLINE_MECHANIC) {
			    SetPVarInt(IncomingCalls[i][cCaller], "Calling", HOTLINE_MECHANIC);
                SendClientMessage(IncomingCalls[i][cCaller], COLOR_DARKYELLOW, "雇员说: (通话中) 洛斯桑托斯维修公司，目前你的位置在哪?");
			    UnsetIncomingCall(i);
			}
		}
	}
}

forward AntiCBugTimer(playerid);
public AntiCBugTimer(playerid) {
	SetPVarInt(playerid, "AntiCBug", 0);
}

forward EntranceUnfreeze(playerid);
public EntranceUnfreeze(playerid)
{
	UnfreezePlayer(playerid);
}


forward AntiSpeedHackVehicleTimer(playerid);
public AntiSpeedHackVehicleTimer(playerid) {
	SetPVarInt(playerid, "AntiSpeedHackVehicle", 0);
}

forward AntiSpeedHackFootTimer(playerid);
public AntiSpeedHackFootTimer(playerid) {
	SetPVarInt(playerid, "AntiSpeedHackFoot", 0);
}

forward AntiWeaponHackTimer(playerid);
public AntiWeaponHackTimer(playerid) {
	SetPVarInt(playerid, "AntiWeaponHack", 0);
}

forward AntiMoneyHackTimer(playerid);
public AntiMoneyHackTimer(playerid) {
	SetPVarInt(playerid, "AntiMoneyHack", 0);
}

forward AntiArmourHackTimer(playerid);
public AntiArmourHackTimer(playerid) {
	SetPVarInt(playerid, "AntiArmourHack", 0);
}

forward AntiHealthHackTimer(playerid);
public AntiHealthHackTimer(playerid) {
	SetPVarInt(playerid, "AntiHealthHack", 0);
}

forward AntiHealthHackTimer2(playerid);
public AntiHealthHackTimer2(playerid) {
	SetPVarInt(playerid, "AntiHealthHack2", 0);
}

forward GateTimer(type);
public GateTimer(type)
{
	switch(type)
	{
	    case 1:
		{
            MoveDynamicObject(prisonBarrier, 287.81442, 1406.71497, 10.1428, 0.0075, 0.0, 90.0, 90.0);
            prisonBarrierState = 0;
		}
	    case 2:
		{
	        MoveDynamicObject(LAPDGate2, 1588.40002, -1638.22998, 13.7, 0.75, 0.00000, 0.00000, 359.99500);
			MoveDynamicObject(LAPDGate, 1588.59998, -1638.21997, 13.7, 0.75, 0.00000, 0.00000, 359.99500);
	        LAPDGateStatus = 0;
	    }
	    case 3:
		{
	        MoveDynamicObject(LAPDBarrier, 1544.69, -1630.81, 13.10, 0.05, 0, 90, 90);
	        LAPDBarrierStatus = 0;
	    }
	    case 4:
		{
	        MoveDynamicObject(FDGateSouth, 1446.7500, -1538.1300, 13.3900, 0.05, 0.00, 270.00, 255.0000);
	        FDGateSouthStatus = 0;
	    }
	    case 5:
		{
	        MoveDynamicObject(FDGateNorth, 1453.0500, -1514.6100, 13.3900, 0.05, 0.00, 270.00, 255.0000);
	        FDGateNorthStatus = 0;
	    }
	    case 6:
		{
            MoveDynamicObject(prisonGate1, 231.21869, 1358.35840, 10.61700, 0.7, 0, 0, 90);
			MoveDynamicObject(prisonGate2, 231.21870, 1363.84888, 10.61700, 0.7, 0, 0, 90);
			prisonGateState = 0;
		}
		case 7:
		{
			MoveDynamicObject(sanGates[0], 777.5, -1384.6999511719, 14.199999809265, 0.75);
	        sanGatesStatus[0] = 0;
		}
		case 8:
		{
		    MoveDynamicObject(sanGates[1], 777.5, -1330.3000488281, 14.10000038147, 0.75, 0, 0, 178.75);
	        sanGatesStatus[1] = 0;
		}
		case 9:
		{
		    MoveDynamicObject(SwatGate, 1067.5072000,1357.5863000,12.6536900, 2.0);
	        SwatGateStatus = 0;
		}
		case 10:
		{
		    MoveDynamicObject(AirportGate, 1961.58606, -2189.85620, 15.33290, 2.0);
	        AirportGateStatus = 0;
		}
		case 11:
		{
		    MoveDynamicObject(ImpoundGate, 1620.67859, -1850.96118, 15.32280, 2.0);
	        ImpoundGateStatus = 0;
		}
		case 12:
		{
		    MoveDynamicObject(SFGate, -2127.59668, -80.85620, 37.07020, 2.0);
	        SFStatus = 0;
		}
		case 13:
		{
		    MoveDynamicObject(HsuiGate, 1643.58838, -1715.30823, 16.00450, 2.0);
	        HsuiStatus = 0;
		}
		case 14:
		{
		    MoveDynamicObject(FBIGate, 1535.53259, -1451.25793, 14.61490, 2.0);
	        FBIStatus = 0;
		}
	}
}

forward FuelTimer(vehicleid);
public FuelTimer(vehicleid) {
	if(IsAnEngineCar(vehicleid)) {
	    new driver = GetVehicleDriver(vehicleid);
		if(driver != -1 && GetPVarInt(driver, "InModGarage") == 0) {
		    new vengine,
				lights,
				alarm,
				doors,
				bonnet,
				boot,
				objective;
				
		    GetVehicleParamsEx(vehicleid, vengine, lights, alarm, doors, bonnet, boot, objective);
		    if(vengine != 0) {
		        if(VehicleInfo[vehicleid][vFuel] == 0) {
          			SetVehicleParamsEx(vehicleid, 0, lights, alarm, doors, bonnet, boot, objective);
	         		SendClientMessage(driver, COLOR_WHITE, "你的载具没有燃料了, 请联系一名汽修工");
		        } else {
		            VehicleInfo[vehicleid][vFuel]--;
		        }
                PlayerTextDrawHide(driver, TD_SM_Fuel_Value);
		        new value[14];
		        new model=GetVehicleModel(vehicleid);
 		        format(value, sizeof(value), "%i/%i", VehicleInfo[vehicleid][vFuel],vehicleData[model-400][tank]);
		        PlayerTextDrawSetString(driver, TD_SM_Fuel_Value, value);
	            PlayerTextDrawShow(driver, TD_SM_Fuel_Value);
		    }
		}
	}
}

forward OneSecondTimer();
public OneSecondTimer() {
	new model,
		vehicle;

	if(trainCount < 300) {
		trainCount++;
	} else {
	    trainCount = 0;
		foreach(new t : Player) {
		    vehicle = GetPlayerVehicleID(t),
		    model = GetVehicleModel(vehicle);
			if(vehicle == trainID && (model == 537 || model == 538 || model == 569 || model == 570 || model == 590)) {
			    SendClientMessage(t, COLOR_PINK, "* 工作人员走到你的位置并询问你的火车票进行核对. (( 列车员 ))");
				if(PlayerInfo[t][pTrainticket] + 86400 < gettime()) {
					SendClientMessage(t, COLOR_LIGHTRED, "提示: 你因为逃票被工作人员进行处罚.");
					SendClientMessage(t, COLOR_LIGHTRED, "提示: 你的银行账户将会在下一次发薪时拨出40$支付罚单.");
					PlayerInfo[t][pFine] += 40;
				}
			}
		}
	}
	for(new v = 0; v != MAX_VEHICLES; v++) {
	    model = GetVehicleModel(v);
		if((model == 420 || model == 438) && VehicleInfo[v][vTM] != 0) {
			if(GetVehicleSpeed(v) > 0) {
			    VehicleInfo[v][vTMTime]++;
			    if(VehicleInfo[v][vTMCounter] == 9) {
					VehicleInfo[v][vTMPayment] += GetPVarInt(GetPlayerID(VehicleInfo[v][vOwner]), "taxiFare");
					VehicleInfo[v][vTMCounter] = 0;
				} else {
					VehicleInfo[v][vTMCounter]++;
				}
			}
		}
	}

	new zone[230],
	    surfVID,
		interior;

	foreach(new i : Player) {
		if(GetPVarInt(i, "TrashmasterUnload") != 0) {
			if(IsPlayerInAnyVehicle(i)) {
				vehicle = GetPlayerVehicleID(i);
				if(GetVehicleModel(vehicle) == 408) {
				    VehicleInfo[vehicle][vTrashbags]--;
				    if(VehicleInfo[vehicle][vTrashbags] <= 0) {
				        PlayerTextDrawSetString(i, TD_JOB_FirstLine, "Trashmaster has been unloaded.");
				        UnfreezePlayer(i);
				        SetPlayerTrashCP(i);
				        SetPVarInt(i, "TrashmasterUnload", 0);
				        format(zone, sizeof(zone), "There are currently %i/%i trash bags in your Trashmaster.", VehicleInfo[vehicle][vTrashbags], MAX_TRASHMASTER);
						PlayerTextDrawSetString(i, TD_JOB_SecondLine, zone);
				    } else {
						if(VehicleInfo[vehicle][vTrashbags] == 1) {
							format(zone, sizeof(zone), "Unloading (%i trash bag left) ...", VehicleInfo[vehicle][vTrashbags]);
						} else {
						    format(zone, sizeof(zone), "Unloading (%i trash bags left) ...", VehicleInfo[vehicle][vTrashbags]);
						}
						
						PlayerTextDrawSetString(i, TD_JOB_FirstLine, zone);
						format(zone, sizeof(zone), "There are currently %i/%i trash bags in your Trashmaster.", VehicleInfo[vehicle][vTrashbags], MAX_TRASHMASTER);
						PlayerTextDrawSetString(i, TD_JOB_SecondLine, zone);
				    }
				    
				    PlayerTextDrawShow(i, TD_JOB_FirstLine);
				} else {
				    PlayerTextDrawHide(i, TD_JOB_FirstLine);
				    SetPVarInt(i, "TrashmasterUnload", 0);
				}
			} else {
				PlayerTextDrawHide(i, TD_JOB_FirstLine);
				SetPVarInt(i, "TrashmasterUnload", 0);
			}
		}
		//
		if(GetPVarInt(i, "PlayerBlood") > 0)
	    {
     		SetPVarInt(i, "PlayerBlood", GetPVarInt(i, "PlayerBlood")-1);
       		if(GetPVarInt(i, "PlayerBlood") == 0)
			{
   				TextDrawHideForPlayer(i,BloodDraw[0]);
				TextDrawHideForPlayer(i,BloodDraw[1]);
				TextDrawHideForPlayer(i,BloodDraw[2]);
    			DeletePVar(i,"PlayerBlood");
			}
	    }
		//
		/* --- Anti Money Hack --- */
		if(GetPVarInt(i,"Death")==0)
		{
            XB_PickMoneyBagHandler(i);
		}
		if(GetPVarInt(i, "AntiMoneyHack") == 0 && GetPlayerMoney(i) > PlayerInfo[i][pMoney]) {
			new moneyHack[128];
			format(moneyHack, sizeof(moneyHack), "*** Hack Warning: %s (ID: %i) is presumably money hacking (Client-side: $%i, Server-side: $%i).", GetNameWithSpace(i), i, GetPlayerMoney(i), PlayerInfo[i][pMoney]);
			AdminMessageLog(moneyHack, i, "HACK WARNING - Money");
			SetPVarInt(i, "AntiMoneyHack", 1);
			AntiMoneyHackTimerVar[i] = SetTimerEx("AntiMoneyHackTimer", 60000, false, "i", i);
		}

		/* --- Anti Armour Hack --- */

		if(GetPVarInt(i, "SettingArmour") == 0) {
			new Float:armour;
			GetPlayerArmour(i, armour);
			if(GetPVarInt(i, "AntiArmourHack") == 0 && armour > GetPVarFloat(i, "Armour")) {
			    new armourHack[128];
				format(armourHack, sizeof(armourHack), "*** Hack Warning: %s (ID: %i) is presumably armour hacking (Armour: %.2f, Expected armour: %.2f).", GetNameWithSpace(i), i, armour, GetPVarFloat(i, "Armour"));
				AdminMessageLog(armourHack, i, "HACK WARNING - Armour");
				SetPVarInt(i, "AntiArmourHack", 1);
				AntiArmourHackTimerVar[i] = SetTimerEx("AntiArmourHackTimer", 60000, false, "i", i);
			}
	    }

	    /* --- Anti Health Hack --- */

		if(GetPVarInt(i, "SettingHealth") == 0) {
			new Float:health;
			GetPlayerHealth(i, health);
			if(GetPVarInt(i, "AntiHealthHack") == 0 && health > GetPVarFloat(i, "Health")) {
			    new healthHack[128];
				format(healthHack, sizeof(healthHack), "*** Hack Warning: %s (ID: %i) is presumably health hacking (Health: %.2f, Expected health: %.2f).", GetNameWithSpace(i), i, health, GetPVarInt(i, "Health"));
				AdminMessageLog(healthHack, i, "HACK WARNING - Health");
				SetPVarInt(i, "AntiHealthHack", 1);
				AntiHealthHackTimerVar[i] = SetTimerEx("AntiHealthHackTimer", 60000, false, "i", i);
			}
	    }

	    /* --- Anti Weapon Hack --- */

		new wepCheck;
	    if(GetPVarInt(i, "AntiWeaponHack") == 0)
		{
			new slot[2];
			for(new w = 0; w != 13; w++)
			{
				GetPlayerWeaponData(i, w, slot[0], slot[1]);
				if(slot[1] != 0 && (slot[0] >= sizeof(WeaponData) || (slot[0] != 0 && (WeaponData[slot[0]][itemType] != PlayerInfo[i][pItemType][0] || items[WeaponData[slot[0]][itemType]][itemType] != ITEM_WEAPON))))
				{
					if(wepCheck == 0 && slot[0] == 23 && PlayerInfo[i][pItemType][0] == 242)
					{
						wepCheck = 1;
					}
					else
					{
						new msg[150],
							wName[30];
							
						if(PlayerInfo[i][pItemType][0] == 253 || PlayerInfo[i][pItemType][0] == 254 || PlayerInfo[i][pItemType][0] == 255 || PlayerInfo[i][pItemType][0] == 219 || PlayerInfo[i][pItemType][0] == 221 ||
						PlayerInfo[i][pItemType][0] == 222 || PlayerInfo[i][pItemType][0] == 220 || PlayerInfo[i][pItemType][0] == 218 || PlayerInfo[i][pItemType][0] == 223 || PlayerInfo[i][pItemType][0] == 211 ||
						PlayerInfo[i][pItemType][0] == 206 || PlayerInfo[i][pItemType][0] == 30 || PlayerInfo[i][pItemType][0] == 213 || PlayerInfo[i][pItemType][0] == 225)
						{

						}
						else
						{
							if(slot[0]!=46)
							{
							GetWeaponName(slot[0], wName, sizeof(wName));
							format(msg, sizeof(msg), "*** Hack Warning: %s (ID: %i) is presumably weapon hacking(Weapon: %s, Ammo: %i).", GetNameWithSpace(i), i, wName, slot[1]);
							AdminMessageLog(msg, i, "HACK WARNING - Weapon");
							SetPVarInt(i, "AntiWeaponHack", 1);
							AntiWeaponHackTimerVar[i] = SetTimerEx("AntiWeaponHackTimer", 60000, false, "i", i);
							break;
							}
						}
					}
				}
			}
		}

		if(GetPVarInt(i, "LoadData") != 0)
		{
		    if(GetPVarInt(i, "ClothingStoreActive") == 0 && GetPVarInt(i, "WardrobeActive") == 0 && GetPVarInt(i, "PayNSpray") == 0 && GetPVarInt(i, "InModGarage") == 0 &&
			   GetPVarInt(i, "DealershipLoc") == 0)
			   {
				interior = GetPlayerInterior(i);
				
			    if(GetPVarInt(i, "MapInfoHide") == 0) {
					if(GetPVarInt(i, "InBusiness") != 0) {
						PlayerTextDrawSetString(i, TD_Zone, "Business");
					} else if(GetPVarInt(i, "InHouse") != 0) {
					    PlayerTextDrawSetString(i, TD_Zone, "House");
					} else if(interior != 0) {
	                    PlayerTextDrawSetString(i, TD_Zone, "Interior");
					} else {
					    if(GetPlayer2DZone(i, zone, 30) != 0) {
							PlayerTextDrawSetString(i, TD_Zone, zone);
						} else {
							PlayerTextDrawSetString(i, TD_Zone, "Unknown");
						}
					}

					PlayerTextDrawShow(i, TD_Zone);
				} else {
				    PlayerTextDrawHide(i, TD_Zone);
				}
			} else {
				PlayerTextDrawHide(i, TD_Zone);
				SetPlayerWeather(i, 0);
			}
		}

		if(PlayerInfo[i][pBoombox] == -1) {
		    if(!IsPlayerInAnyVehicle(i) || (VehicleInfo[GetPlayerVehicleID(i)][vWindows] != 0 && isnull(VehicleInfo[GetPlayerVehicleID(i)][vRadio]))) {
		        if(GetPVarInt(i, "InHouse") == 0 || isnull(HouseInfo[GetPlayerVirtualWorld(i)][hRadio])) {
		            if(GetPVarInt(i, "InBusiness") == 0 || isnull(BusinessInfo[GetPlayerVirtualWorld(i)][bRadio])) {
						foreach(new boom : iter_boomboxes) {
							if(!isnull(boomboxes[boom][boomRadio]) && IsPlayerInRangeOfPoint(i, 20, boomboxes[boom][boomX], boomboxes[boom][boomY], boomboxes[boom][boomZ])) {
								PlayerInfo[i][pBoombox] = boom;
								PlayAudioStreamForPlayer(i, boomboxes[boom][boomRadio], boomboxes[boom][boomX], boomboxes[boom][boomY], boomboxes[boom][boomZ], 35.0, 1);
								break;
							}
						}
					}
				}
			}
		} else {
			if(!IsPlayerInRangeOfPoint(i, 20, boomboxes[PlayerInfo[i][pBoombox]][boomX], boomboxes[PlayerInfo[i][pBoombox]][boomY], boomboxes[PlayerInfo[i][pBoombox]][boomZ])) {
				PlayerInfo[i][pBoombox] = -1;
				StopAudioStreamForPlayer(i);
			}
		}

		if(GetPVarInt(i, "PayNSpray") != 0) {
			vehicle = GetPVarInt(i, "PayNSprayTime") - 1;

			if(vehicle % 60 > 9) {
				format(zone, sizeof(zone), "%i:%i", vehicle / 60, vehicle % 60);
			} else {
			    format(zone, sizeof(zone), "%i:0%i", vehicle / 60, vehicle % 60);
			}

			PlayerTextDrawSetString(i, TD_P_TimeValue, zone);
			SetPVarInt(i, "PayNSprayTime", vehicle);
			if(vehicle == 0) {
				switch(GetPVarInt(i, "PayNSpray")) {
					case 1: {
					    SetPlayerPosEx(i, 14, 2076.4214, -1838.0778, 13.1692, 179.4030);
					}
					case 2: {
					    SetPlayerPosEx(i, 14, 717.2195, -472.7567, 16.0488, 179.5338);
					}
					case 3: {
					    SetPlayerPosEx(i, 14, 1014.5531, -1033.7996, 31.2687, 89.7582);
					}
					case 4: {
					    SetPlayerPosEx(i, 14, 481.7528, -1730.1110, 10.7038, 82.9610);
					}
					default: {
					    SetPlayerPosEx(i, 14, 2076.4214, -1838.0778, 13.1692, 179.4030);
					}
				}
			}
		}
		/*surfVID = GetPlayerSurfingVehicleID(i);
	    if(surfVID != INVALID_VEHICLE_ID && GetVehicleSpeed(surfVID) > 50 && surfVID != surfVehicles[i] && IsSurfableVehicle(GetVehicleModel(surfVID)) == 0) {
			new Float:ran = frandom(2.0, -2.0),
				Float:X,
				Float:Y,
				Float:Z,
				Float:velX,
				Float:velY,
				Float:velZ;

		    if(GetPVarInt(i, "AntiSurf") == 0) {
				format(zone, sizeof(zone), "** %s loses %s balance and rolls off the vehicle.", GetNameWithSpace(i, 1), HisHer(i));
				ProxDetector(12, i, zone, COLOR_PINK);
			}

			GetVehiclePos(surfVID, X, Y, Z);
			GetVehicleVelocity(surfVID, velX, velY, velZ);
			if(velX > velY) {
				SetPlayerPos(i, X + ran, Y + 1.5 + ran, Z + 0.3);
			} else {
                SetPlayerPos(i, X + 1.5 + ran, Y + ran, Z + 0.3);
			}

            surfVehicles[i] = surfVID;
            fade[i][fID] = 13;
            ApplyAnimation(i, "FINALE", "FIN_Land_Die", 4.1, 0, 1, 1, 1, 1, 1);
   			FadeScreen(i, 0, 0, 0, 175, 100);
			SetPVarInt(i, "AntiSurf", 1);
			AntiSurfTimerVar[i] = SetTimerEx("AntiSurfTimer", 3000, false, "i", i);
		}*/

	    if(IsPlayerInAnyVehicle(i)) {
	        vehicle = GetPlayerVehicleID(i);
   			surfVID = GetVehicleSpeed(vehicle);
			if(surfVID > 198 && GetPVarInt(i, "AntiSpeedHackVehicle") == 0) {
				format(zone, sizeof(zone), "*** %s (ID: %i) is possibly speed hacking with a vehicle (Speed: %i km/h).", GetNameWithSpace(i), i, surfVID);
				AdminMessageLog(zone, i, "HACK WARNING - Speed");
				SetPVarInt(i, "AntiSpeedHackVehicle", 1);
				AntiSpeedHackVehicleTimerVar[i] = SetTimerEx("AntiSpeedHackVehicleTimer", 60000, false, "i", i);
			}

   			if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPVarInt(i, "InModGarage") == 0) {
			    if(IsAnEngineCar(vehicle)) {
			        new Float:health;
				    if(surfVID > 110 && GetPVarInt(i, "LAPDDuty") == 0 && GetPVarInt(i, "LSFDDuty") == 0 && GetPVarInt(i, "AdminDuty") == 0 &&
					   GetPVarInt(i, "CameraTimer") == 0 && (IsPlayerInRangeOfPoint(i, 10, 1827.393310, -1600.081787, 11.040195) ||
					   IsPlayerInRangeOfPoint(i, 10, 1831.478637, -1746.649780, 11.036874) || IsPlayerInRangeOfPoint(i, 10, 1815.969116, -1743.268676, 11.036874) ||
				       IsPlayerInRangeOfPoint(i, 10, 807.349243, -1389.981933, 11.089693) || IsPlayerInRangeOfPoint(i, 10, 790.897888, -1385.355590, 11.190835) ||
					   IsPlayerInRangeOfPoint(i, 10, 1212.821166, -1411.753417, 10.855206) || IsPlayerInRangeOfPoint(i, 10, 1376.588134, -1877.384399, 11.046875) ||
					   IsPlayerInRangeOfPoint(i, 10, 1370.983886, -1865.755981, 11.046875) || IsPlayerInRangeOfPoint(i, 10, 2118.416748, -1676.064697, 11.042663) ||
          			   IsPlayerInRangeOfPoint(i, 10, 2106.844482, -1672.438232, 11.288070) || IsPlayerInRangeOfPoint(i, 10, 2385.395263, -1179.892089, 25.226203) ||
					   IsPlayerInRangeOfPoint(i, 10, 2385.395263, -1179.892089, 25.226203))) {
						mysql_format(sqlHandle, zone, sizeof(zone), "INSERT INTO `samp_tickets` (`user`, `reason`, `charge`, `date`, `timestamp`, `issuer`, `agency`) VALUES ('%e', '%e', %i, NOW(), %i, '%e', '%e')", PlayerInfo[i][pName], "Speeding", (floatround(surfVID) - 110) * 2, gettime(), "Automatic", "Los Angeles Police Department");
						mysql_function_query(sqlHandle, zone, false, "OnNewSpeedCameraCitation", "sii", "Speeding", (floatround(surfVID) - 110) * 2, i);
						SetPVarInt(i, "CameraTimer", 1);
              			FadeScreen(i, 255, 255, 185, 100, 100);
                        CameraTimerVar[i] = SetTimerEx("CameraTimer", 2000, false, "d", i);
					}

					if(dmvdrive[i] > 0) {
						if(surfVID > GetPVarInt(i, "DMVSpeed")) {
						    SetPVarInt(i, "DMVSpeed", floatround(surfVID));
						}

						if(surfVID > 80 && GetPVarInt(i, "DMV80Speed") == 0) {
						    SetPVarInt(i, "DMVStatus", GetPVarInt(i, "DMVStatus")+1);
						    SetPVarInt(i, "DMV80Speed", 1);
						}

						if(surfVID > 100) {
					    	SetPVarInt(i, "DMVStatus", 4);
						}
					}

     				GetVehicleHealth(vehicle, health);
				    if(health < GM_BREAKDOWN_HEALTH) {
				        new breakdownData[7];
				        VehicleInfo[vehicle][vAvoidUpdate] = 1;
				        SetVehicleHealth(vehicle, GM_BREAKDOWN_HEALTH - 1);
						GetVehicleParamsEx(vehicle, breakdownData[0], breakdownData[1], breakdownData[2], breakdownData[3], breakdownData[4], breakdownData[5], breakdownData[6]);
						SetVehicleParamsEx(vehicle, 0, breakdownData[1], breakdownData[2], breakdownData[3], breakdownData[4], breakdownData[5], breakdownData[6]);
						if(breakdownData[0] == 1) {
						    SendClientMessage(i, COLOR_WHITE, "载具引擎已经损坏, 请联系一名修车工.");
						}
				    }

				    format(zone, sizeof(zone), "%d KM/H", floatround(surfVID));
					PlayerTextDrawHide(i, TD_SM_Speed_Value);
					PlayerTextDrawSetString(i, TD_SM_Speed_Value, zone);
					PlayerTextDrawShow(i, TD_SM_Speed_Value);
				}
			}

			model = GetVehicleModel(vehicle);
			if((model == 420 || model == 438) && VehicleInfo[vehicle][vTM] != 0) {
				new time[20],
					payment[20],
					minutes = floatround(VehicleInfo[vehicle][vTMTime] / 60),
					seconds = VehicleInfo[vehicle][vTMTime] - floatround(VehicleInfo[vehicle][vTMTime] / 60) * 60;

                format(payment, sizeof(payment), "$%i", VehicleInfo[vehicle][vTMPayment]);
                if(seconds >= 10) {
		    		format(time, sizeof(time), "%i:%i", minutes, seconds);
				} else {
				    format(time, sizeof(time), "%i:0%i", minutes, seconds);
				}

				PlayerTextDrawHide(i, TD_C_TimeValue);
				PlayerTextDrawSetString(i, TD_C_TimeValue, time);
				PlayerTextDrawHide(i, TD_C_PaymentValue);
				PlayerTextDrawSetString(i, TD_C_PaymentValue, payment);
				PlayerTextDrawShow(i, TD_C_TimeValue);
				PlayerTextDrawShow(i, TD_C_PaymentValue);
			}
		}
		else
		{
            surfVID = GetPlayerSpeed(i);
		    if(surfVID > 75 && GetPVarInt(i, "AntiSpeedHackFoot") == 0 && GetPlayerSurfingVehicleID(i) == INVALID_VEHICLE_ID)
			{
		  		format(zone, sizeof(zone), "*** %s (ID: %i) is possibly speed hacking on foot (Speed: %i km/h).", GetNameWithSpace(i), i, surfVID);
			    AdminMessageLog(zone, i, "HACK WARNING - Speed");
				SetPVarInt(i, "AntiSpeedHackFoot", 1);
				AntiSpeedHackFootTimerVar[i] = SetTimerEx("AntiSpeedHackFootTimer", 60000, false, "i", i);
			}
		}

        /*if(GetPVarInt(i, "taxiRequest") != 0) {
			new time = GetPVarInt(i, "taxiRequest");
			if(time >= 21) {
			    new oldTaxiDriver = GetPVarInt(i, "taxiDriver"),
					Float:X,
			        Float:Y,			        Float:Z,
					Float:distance,
					taxiDriverID = -1,
					vModel;

				GetPlayerPos(i, X, Y, Z);
				foreach(new t : Player) {
					if(Paused[t] == 0 && IsPlayerInAnyVehicle(t) && t != i && t != oldTaxiDriver) {
						vehicle = GetPlayerVehicleID(t);
						vModel = GetVehicleModel(vehicle);
						if((vModel == 420 || vModel == 438) && !isnull(VehicleInfo[vehicle][vOwner]) && strcmp(VehicleInfo[vehicle][vOwner], PlayerInfo[t][pName]) == 0) {
		               		if(taxiDriverID == -1 || GetPlayerDistanceFromPoint(t, X, Y, Z) < distance) {
			                    taxiDriverID = t;
			                    distance = GetPlayerDistanceFromPoint(t, X, Y, Z);
							}
						}
					}
				}

				if(taxiDriverID != -1) {
				    TextDrawShowForPlayer(taxiDriverID, TD_T_Box);
				    TextDrawShowForPlayer(taxiDriverID, TD_T_Headline);
				    TextDrawShowForPlayer(taxiDriverID, TD_T_HeadBox);
				    TextDrawShowForPlayer(taxiDriverID, TD_T_Info);
				    TextDrawShowForPlayer(taxiDriverID, TD_T_Instruction);
				    SetPVarInt(taxiDriverID, "takecall", i);
				    SetPVarInt(taxiDriverID, "takecallNumber", GetPVarInt(oldTaxiDriver, "takecallNumber"));
				    SetPVarInt(i, "taxiDriver", taxiDriverID);
				    SetPVarInt(i, "taxiRequest", 1);
				} else {
				    SetPVarInt(i, "taxiRequest", 0);
				    SetPVarInt(i, "taxiDriver", 0);
		        	SendClientMessage(i, COLOR_DARKYELLOW, "[SMS] Taxi Association (544): Unfortunately, we were not able to dispatch any taxi driver to your location. Try again later.");
				}

			    TextDrawHideForPlayer(oldTaxiDriver, TD_T_Box);
			    TextDrawHideForPlayer(oldTaxiDriver, TD_T_Headline);
			    TextDrawHideForPlayer(oldTaxiDriver, TD_T_HeadBox);
			    TextDrawHideForPlayer(oldTaxiDriver, TD_T_Info);
			    TextDrawHideForPlayer(oldTaxiDriver, TD_T_Instruction);
			    SetPVarInt(oldTaxiDriver, "takecall", 0);
			    SetPVarInt(oldTaxiDriver, "takecallNumber", 0);
			} else {
				SetPVarInt(i, "taxiRequest", time + 1);
			}
		}*/
		if(RecentlyFired[i] != 0)
		{
 			RecentlyFired[i] -= 1;
		}
		if(DrugTime[i] != 0)
		{
		    if(DrugTime[i] == 1)
		    {
		        SetPlayerWeather(i, gWeather);
		        GameTextForPlayer(i, "Drug Cooldown Over!", 5000, 1);
		    	DrugTime[i] -= 1;
	    	}
	    	else
	    	{
	    	    DrugTime[i] -= 1;
	    	}
		}
		if(WeedTime[i] != 0)
		{
 			WeedTime[i] -= 1;
		}
        if(CocaineTime[i] != 0)
		{
		    if(CocaineTime[i] == 1)
		    {
		    	CocaineTime[i] -= 1;
		    	SetPlayerArmour(i, 0.0);

	    	}
	    	else
	    	{
	    	    CocaineTime[i] -= 1;
	    	}
		}
		if(EcstasyTime[i] != 0)
		{
  			EcstasyTime[i] -= 1;
		}
        if(CrackTime[i] != 0)
		{
			if(CrackTime[i] == 1)
			{
		    	CrackTime[i] -= 1;
		    	SetPlayerDrunkLevel(i, 0);

	    	}
	    	else
	    	{
	    	    CrackTime[i] -= 1;
	    	    SetPlayerDrunkLevel(i, 200);
	    	}
		}
		if(HeroinTime[i] != 0)
		{
		    if(HeroinTime[i] == 1)
		    {
		    	HeroinTime[i] -= 1;
		    	SetPlayerDrunkLevel(i, 0);
	    	}
	    	else
	    	{
	    	    HeroinTime[i] -= 1;
	    	    SetPlayerDrunkLevel(i, 200);
	    	}
		}
		if(IsBreakingIn[i] == 1)
		{
		    new getcarid = GetPVarInt(i, "SaveVehicleID");
            new gengine,glightss,galarm,gdoors,gbonnet,gboot,gobjective;
            GetVehicleParamsEx(getcarid, gengine,glightss,galarm,gdoors,gbonnet,gboot,gobjective);
		    if(!IsPlayerInRangeOfPoint(i, 3.0, BreakX[getcarid], BreakY[getcarid], BreakZ[getcarid]))
			{
			    SetVehicleParamsEx(getcarid, gengine, glightss, 0, gdoors, gbonnet, gboot, 0);
			    VehicleInfo[getcarid][vDamages] = 0;
			    VehicleInfo[getcarid][vIsBreak] = true;
			    KillTimer(BreakInTimer[i]);
			    IsBreakingIn[i] = 0;
			    //BreakX[getcarid] = 0.0;
			    //BreakY[getcarid] = 0.0;
			    //BreakZ[getcarid] = 0.0;
			    BreakDownTimer[i] = 0;
			    IsBreaking[i] = 0;
			    Delete3DTextLabel(BreakCarLB[getcarid]);
			    //DeletePVar(i, "SaveVehicleID");
			    SendClientMessage(i, COLOR_LIGHTRED, "你的破拆车辆行动已经失败... (超过指定车辆3米)");
			}
		}
		if(IsBreaking[i] == 1 && BreakDownTimer[i] > 0)
		{
		    if(BreakDownTimer[i] > 0)
		    {
			    new string[128];
			    BreakDownTimer[i] --;
			    format(string, sizeof(string), "%i", BreakDownTimer[i]);
			    GameTextForPlayer(i, string, 1000, 6);
		    }
		    else
		    {
		        BreakDownTimer[i] = 0;
		    }
		}
		if(PlayerInfo[i][pPayTimer] < 1500 && PlayerInfo[i][pHadPayday] == 1)
		{
		    PlayerInfo[i][pHadPayday] = 0;
		}
	    if(GetPVarInt(i, "LoadData") != 0) {
			if(PlayerInfo[i][pPayTimer] < GM_MIN_TIME_PAYCHECK){
		        if(Paused[i] == 0 && IdleInfo[i][idleMode] == 0) {
					PlayerInfo[i][pPayTimer]++;
				}
			} else {
				payday(i);
	 	    }

			if(Paused[i] == 0 && gettime() - LastUpdate[i] > 5) {
				Paused[i] = 1;
				afkCounter[i] = 5;
			} else if(Paused[i] != 0) {
				afkCounter[i]++;
			}
		}
	}
}

forward DMVTimer(playerid);
public DMVTimer(playerid) {
	if(GetPVarInt(playerid, "DMVInfo") == 1) {
		PlayerTextDrawHide(playerid, TD_DMV_Text1);
		PlayerTextDrawHide(playerid, TD_DMV_Text2);
		PlayerTextDrawHide(playerid, TD_DMV_Text3);
	    PlayerTextDrawSetString(playerid, TD_DMV_Text1, "Make sure that you stop at intersections");
		PlayerTextDrawSetString(playerid, TD_DMV_Text2, "and have a look out for other vehicles to");
		PlayerTextDrawSetString(playerid, TD_DMV_Text3, "pass by before you continue driving.");
		PlayerTextDrawShow(playerid, TD_DMV_Text1);
		PlayerTextDrawShow(playerid, TD_DMV_Text2);
		PlayerTextDrawShow(playerid, TD_DMV_Text3);
		SetPVarInt(playerid, "DMVInfo", 2);
	} else if(GetPVarInt(playerid, "DMVInfo") == 2) {
	    PlayerTextDrawHide(playerid, TD_DMV_Text1);
		PlayerTextDrawHide(playerid, TD_DMV_Text2);
		PlayerTextDrawHide(playerid, TD_DMV_Text3);
	    PlayerTextDrawSetString(playerid, TD_DMV_Text1, "Keep an eye on your speedometer to stay");
		PlayerTextDrawSetString(playerid, TD_DMV_Text2, "below 80 km/h and to avoid being caught");
		PlayerTextDrawSetString(playerid, TD_DMV_Text3, "speed cameras or police patrol units.");
		PlayerTextDrawShow(playerid, TD_DMV_Text1);
		PlayerTextDrawShow(playerid, TD_DMV_Text2);
		PlayerTextDrawShow(playerid, TD_DMV_Text3);
		SetPVarInt(playerid, "DMVInfo", 3);
	} else if(GetPVarInt(playerid, "DMVInfo") == 3) {
	    PlayerTextDrawHide(playerid, TD_DMV_Text1);
		PlayerTextDrawHide(playerid, TD_DMV_Text2);
		PlayerTextDrawHide(playerid, TD_DMV_Text3);
	    PlayerTextDrawSetString(playerid, TD_DMV_Text1, "A route has been set up for you on the GPS.");
		PlayerTextDrawSetString(playerid, TD_DMV_Text2, "Make sure that you follow the stated info");
		PlayerTextDrawSetString(playerid, TD_DMV_Text3, "and that you do not damage your vehicle.");
		PlayerTextDrawShow(playerid, TD_DMV_Text1);
		PlayerTextDrawShow(playerid, TD_DMV_Text2);
		PlayerTextDrawShow(playerid, TD_DMV_Text3);
		SetPVarInt(playerid, "DMVInfo", 4);
	} else if(GetPVarInt(playerid, "DMVInfo") == 4) {
	    new meStr[90];
	    PlayerTextDrawHide(playerid, TD_DMV_Text1);
		PlayerTextDrawHide(playerid, TD_DMV_Text2);
		PlayerTextDrawHide(playerid, TD_DMV_Text3);
		TextDrawHideForPlayer(playerid, TD_DMV_Box);
		TextDrawHideForPlayer(playerid, TD_DMV_Headline);
		SendClientMessage(playerid, COLOR_GREY, "DMV: (( 你可以使用 /engine 启动引擎并且使用 /seatbelt 戴上安全带然后进行驾驶. ))");
		SendClientMessage(playerid, COLOR_GREY, "DMV: (( 你可以按下滚轮键位打开载具车灯. ))");
		format(meStr, sizeof(meStr), "** %s 将GPS打开并且看了看考试检查点.", GetNameWithSpace(playerid, 1));
        ProxDetector(12, playerid, meStr, COLOR_PINK);
		SetPVarInt(playerid, "DMVStatus", 1);
		dmvdrive[playerid] = 2;
		UnfreezePlayer(playerid);
		SetPlayerRaceCheckpoint(playerid, 2, 1329.8485, -1149.4344, 23.5234 ,0, 0, 0, 4);
	    SetPVarInt(playerid, "DMVInfo", 0);
	}

	if(GetPVarInt(playerid, "DMVInfo") != 0) {
		DMVTimerVar[playerid] = SetTimerEx("DMVTimer", 15000, false, "d", playerid);
	}
}

forward JumpTimer(playerid);
public JumpTimer(playerid) {
	UnfreezePlayer(playerid);
	ApplyAnimation(playerid, "PED", "getup_front", 4.1, 0, 1, 1, 0, 0, 1);
	ApplyAnimation(playerid, "PED", "getup_front", 4.1, 0, 1, 1, 0, 0, 1);
	SetPVarInt(playerid, "JumpTripped", 0);
}

forward AntiSurfTimer(playerid);
public AntiSurfTimer(playerid) {
	SetPVarInt(playerid, "AntiSurf", 0);
}

forward AcceptDeathHospital(playerid);
public AcceptDeathHospital(playerid)
{
    new freebill = GetPVarInt(playerid, "DeadWithoutMB");
	SetPlayerHealthAndLimit(playerid, 50);
	PlayerInfo[playerid][pHealth] = 50;
    SetPlayerPosEx(playerid, 5, 1518.3077, -1580.8198, 13.5498, 179.6481);
    SetPVarInt(playerid, "Death", 0);
    SetPVarInt(playerid, "Muted", 0);
    SetPVarInt(playerid, "Acceptdeath", 0);
    StopTalkVar[playerid] = SetTimerEx("StopTalk", 100, false, "d", playerid);
    if(PlayerInfo[playerid][pMoney] > 1199 && freebill != 0)
    {
		GivePlayerMoneyEx(playerid, - 800);
		DeletePVar(playerid, "DeadWithoutMB");
    }
    else
    {
        PlayerInfo[playerid][pBank] -= 800;
        DeletePVar(playerid, "DeadWithoutMB");
    }
    SendClientMessage(playerid, COLOR_LIGHTRED, "(( 你死亡之后你的记忆会随着之前而消失, 请进行相关角色扮演 ))");
    SendClientMessage(playerid, COLOR_PINK, "** 医疗账单: $800.");
    PlayerInfo[playerid][pIsHospital] = 0;
    PlayerInfo[playerid][pHunger]=500;
    PlayerInfo[playerid][pThirst]=500;
    PlayerInfo[playerid][pCold]=0;
    PlayerInfo[playerid][pCancer]=0;
    PlayerInfo[playerid][pColdVar]=0;
    PlayerInfo[playerid][pCancerVar]=0;
    XB_SetHungerTxd(playerid);
    if(GetPVarInt(playerid, "FPS") == 1) FPSPlayer(playerid, 1);
}

forward Acceptdeath(playerid);
public Acceptdeath(playerid) {
	SetPVarInt(playerid, "Acceptdeath", 1);
}

forward CameraTimer(playerid);
public CameraTimer(playerid)
{
	SetPVarInt(playerid, "CameraTimer", 0);
}

forward Serverrestart();
public Serverrestart() {
	SendRconCommand("gmx");
}

forward OneSecondDelay(playerid);
public OneSecondDelay(playerid) {
    PlayerPlaySound(playerid, 5453, 0, 0, 0);
}

/*forward ThirtyMinuteTimer();
public ThirtyMinuteTimer()
{
	foreach(new i : Player)
	{
	    if(AddictionCheck[i] == 0)
	    {
		    if(PlayerInfo[i][pWeedAddiction] > 0 && PlayerInfo[i][pCocaineAddiction] > 0 && PlayerInfo[i][pEcstasyAddiction] > 0 && PlayerInfo[i][pCrackAddiction] > 0 && PlayerInfo[i][pHeroinAddiction] > 0)
		    {
		        DeathReason[i] = Create3DTextLabel("** Drug Related Seizure. **", COLOR_LIGHTRED, 30.0, 40.0, 50.0, 10.0, 0, 0);
				Attach3DTextLabelToPlayer(DeathReason[i], i, 0.0, 0.0, 0.0);
		        SetPlayerHealth(i, 0.0);
		        SendClientMessage(i, COLOR_LIGHTRED, "You have fell into a seizure due multiple drug addiction. (weed, cocaine, ecstasy, crack & heroin)");
				PlayerInfo[i][pWeedAddiction] --;
				PlayerInfo[i][pCocaineAddiction] --;
				PlayerInfo[i][pEcstasyAddiction] --;
				PlayerInfo[i][pCrackAddiction] --;
				PlayerInfo[i][pHeroinAddiction] --;
		    }
    	}
	}
	return 1;
}*/

forward OneHourTimer();
public OneHourTimer() {
	new Hour,
		Minute,
		Second;
		
	DeleteUnownedItems();
	gWeather = random(20);
	gettime(Hour, Minute, Second);
    SetWeather(gWeather);
    XB_WeatherReport(gWeather);

    SetWorldTime(Hour);
    foreach(new i : Player)
	{
		if(GetPVarInt(i, "AdminJailed") != 0)
		{
			SetPlayerTime(i, 12, 0);
		}
		else if(GetPVarInt(i, "InModGarage") != 0)
		{
		    SetPlayerWeather(i, 2);
		}
		else
		{
			SetPlayerTime(i, Hour, Minute);
		}
		if(AddictionCheck[i] != 0)
	    {
	        AddictionCheck[i] = 0;
	    }
	}
}

forward DropmissionTimer(playerid);
public DropmissionTimer(playerid) {
	SetPVarInt(playerid, "DropmissionTimer", 0);
}

forward UnloadTimer(playerid);
public UnloadTimer(playerid) {
	UnfreezePlayer(playerid);
}

forward AntiSpamTimer(playerid);
public AntiSpamTimer(playerid) {
	SetPVarInt(playerid, "AntiSpamTimer", 0);
    return 1;
}

forward LotteryAttempt(playerid);
public LotteryAttempt(playerid) PlayerInfo[playerid][pMayLotto] = true;

forward InfoTimer(playerid);
public InfoTimer(playerid) {
	/* --- Hiding House- & Business-Textdraw --- */

	TextDrawHideForPlayer(playerid, TD_AD_HeadBox);
    TextDrawHideForPlayer(playerid, TD_AD_BoxTwo);
    TextDrawHideForPlayer(playerid, TD_AD_BoxThree);
    TextDrawHideForPlayer(playerid, TD_AD_BoxOne);
    TextDrawHideForPlayer(playerid, TD_AD_Seller);
	PlayerTextDrawHide(playerid, TD_AD_Price);
	PlayerTextDrawHide(playerid, TD_AD_CityZip);
	PlayerTextDrawHide(playerid, TD_AD_Headline);
	PlayerTextDrawHide(playerid, TD_AD_Taxes);
	PlayerTextDrawHide(playerid, TD_AD_PriceValue);
	PlayerTextDrawHide(playerid, TD_AD_TaxesValue);
	PlayerTextDrawHide(playerid, TD_AD_SellerValue);
	PlayerTextDrawHide(playerid, TD_AD_HousenumberStreet);

    /* --- Hiding Information-Textdraw --- */

    TextDrawHideForPlayer(playerid, TD_Info_Headbox);
    TextDrawHideForPlayer(playerid, TD_Info_Headline);
    TextDrawHideForPlayer(playerid, TD_Info_Box);
    TextDrawHideForPlayer(playerid, TD_Info_Icon);
    PlayerTextDrawHide(playerid, TD_Info_Value);

    /* --- Unsetting Player's current PickupID --- */

    SetPVarInt(playerid, "CurrentPickup", 0);
}

forward StopTalk(playerid);
public StopTalk(playerid) {
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
}

/* --- MySQL Functions --- */

forward FlashSmokehouse(playerid);
public FlashSmokehouse(playerid)
{
    TextDrawHideForPlayer(playerid, FlashBang);
	return 1;
}

forward OnSetFactionBusinessOwner(playerid, name[]);
public OnSetFactionBusinessOwner(playerid, name[]) {
	new rows,
	    fields;
	    
	cache_get_data(rows, fields);
	if(rows != 0) {
	    new businessID = GetPVarInt(playerid, "BusinessManager"),
	        query[115];
	        
	    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_businesses` SET `owner` = '%e', `money` = 0 WHERE `id` = %i", name, BusinessInfo[businessID][bID]);
	    mysql_function_query(sqlHandle, query, false, "", "");
		format(BusinessInfo[businessID][bOwner], MAX_PLAYER_NAME, "%s", name);
		format(query, sizeof(query), "*** %s %s made %s owner of business [%i].", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(name), BusinessInfo[businessID][bID]);
  		SendMessageToAdmins(query);
	} else {
		SendClientMessage(playerid, COLOR_GREY, "无法在数据库中找到.");
	}
}

forward OnSetFactionHouseOwner(playerid, name[]);
public OnSetFactionHouseOwner(playerid, name[]) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows != 0) {
	    new houseID = GetPVarInt(playerid, "HouseManager"),
	        query[115];

	    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `owner` = '%e', `money` = 0 WHERE `id` = %i", name, HouseInfo[houseID][hID]);
	    mysql_function_query(sqlHandle, query, false, "", "");
		format(HouseInfo[houseID][hOwner], MAX_PLAYER_NAME, "%s", name);
		format(query, sizeof(query), "*** %s %s made %s owner of house [%i].", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(name), HouseInfo[houseID][hID]);
		SendMessageToAdmins(query);
	} else {
		SendClientMessage(playerid, COLOR_GREY, "无法在数据库中找到.");
	}
}

forward OnCharacterKill(playerid, user);
public OnCharacterKill(playerid, user) {
	new rows,
	    fields,
		query[130];
	    
	cache_get_data(rows, fields);
	for(new i = 0; i != rows; i++) {
		mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_trunks` WHERE `id` = %i", cache_get_row_int(0, i));
		mysql_function_query(sqlHandle, query, false, "", "");
	}
	
	format(query, sizeof(query), "*** %s %s killed the character %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user));
	SendMessageToAdmins(query);
	format(query, sizeof(query), "警告: 你的角色被 %s %s 进行CK. 你的账户信息将会更新.", GetAdminRank(playerid), GetNameWithSpace(playerid));
	SendClientMessage(playerid, COLOR_LIGHTRED, query);
}

forward OnCommandSetNamechanges(playerid, name[], amount);
public OnCommandSetNamechanges(playerid, name[], amount) {
	new rows,
	    fields;
	    
	cache_get_data(rows, fields);
	if(rows != 0) {
		new id = GetPlayerID(name),
		    msg[110];
		    
		if(id != -1) {
			PlayerInfo[id][pNamechanges] = amount;
			if(amount == 1) {
			    format(msg, sizeof(msg), "*** %s %s 给了你 %i 张改名卡.", GetAdminRank(playerid), GetNameWithSpace(playerid), amount);
			} else {
				format(msg, sizeof(msg), "*** %s %s 给了你 %i 张改名卡.", GetAdminRank(playerid), GetNameWithSpace(playerid), amount);
			}
			
			SendClientMessage(id, COLOR_WHITE, msg);
		} else {
			mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `namechanges` = `namechanges` + %i WHERE `user` = '%e'", amount, name);
			mysql_function_query(sqlHandle, msg, false, "", "");
		}
		
		if(amount == 1) {
            format(msg, sizeof(msg), "*** %s %s 给了 %s %i 张改名卡.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(name), amount);
		} else {
			format(msg, sizeof(msg), "*** %s %s 给了 %s %i 张改名卡.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(name), amount);
		}
		SendMessageToAdmins(msg);
	} else {
	    SendClientMessage(playerid, COLOR_GREY, "无法在数据库找到改名称.");
	}
}

forward OnCCCheckReservedSkins(playerid, spawn);
public OnCCCheckReservedSkins(playerid, spawn) {
    new fields,
	    rows;

	cache_get_data(rows, fields);
	if(rows == 0) {
		GivePlayerMoneyEx(playerid, 400);
		PlayerInfo[playerid][pBank] = 2000;
		PlayerInfo[playerid][pHealth] = 100.0;
		SetPlayerPosEx(playerid, 26, spawnLocations[spawn][spawnX], spawnLocations[spawn][spawnY], spawnLocations[spawn][spawnZ], spawnLocations[spawn][spawnA], 0, 0);
	} else {
        new msg[100],
            faction = cache_get_row_int(0, 0);
            
		for(new f = 0; f != MAX_FACTIONS; f++) {
			if(FactionInfo[f][fID] == faction) {
				faction = f;
				break;
			}
		}

		format(msg, sizeof(msg), "*** 该皮肤只能用于组织 '%s'.", FactionInfo[faction][fName]);
		SendClientMessage(playerid, COLOR_LIGHTRED, msg);
	}
}

forward OnAdminDeleteReservedSkin(playerid, faction);
public OnAdminDeleteReservedSkin(playerid, faction) {
	new rows,
	    fields;
	    
	cache_get_data(rows, fields);
	if(rows != 0) {
	    new query[128];
		mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_reserved_skins` WHERE `id` = %i", cache_get_row_int(0, 0));
		mysql_function_query(sqlHandle, query, false, "", "");
		format(query, sizeof(query), "*** %s %s removed a skin from the %s's reserved skins.", GetAdminRank(playerid), GetNameWithSpace(playerid), FactionInfo[faction][fName]);
		SendMessageToAdmins(query);
	}
}

forward OnAdminChangeAccPass(playerid, name[], password[]);
public OnAdminChangeAccPass(playerid, name[], password[]) {
	new fields,
	    rows;
	    
	cache_get_data(rows, fields);
	if(rows != 0) {
	    new salt[60],
			saltSize = 60,
			combination[500],
			hash[129];

	    while(saltSize--) {
			salt[saltSize] = random(2) ? (random(26) + (random(2) ? 'a' : 'A')) : (random(10) + '0');
		}

		strcat(combination, salt);
		strcat(combination, password);
		strcat(combination, GM_SCRIPT_PEPPER);
	/*	5A80C09DA3DD14F7A43A45DBF00804842D1FEFD02C417F6927F443F243FEB4FC3964F8149A8A025A6ADCEDA648DE046341EA3455B44ADC157426D772EF90C8D8
        Js26?12sag29
	*/	WP_Hash(hash, 129, combination);
		mysql_format(sqlHandle, combination, sizeof(combination), "UPDATE `samp_users` SET `salt` = '%e', `password` = '%e' WHERE `user` = '%e'", salt, hash, name);
		mysql_function_query(sqlHandle, combination, false, "", "");
		SendClientMessage(playerid, COLOR_WHITE, "*** 密码更改成功.");
	} else {
		SendClientMessage(playerid, COLOR_GREY, "无法在数据库找到改名字.");
	}
}

forward OnPlayerReservesSkin(skin, playerid);
public OnPlayerReservesSkin(skin, playerid) {
	new rows,
	    fields;
	    
	cache_get_data(rows, fields);
	if(rows != 0) {
        new msg[100],
      		faction = cache_get_row_int(0, 0);

		for(new f = 0; f != MAX_FACTIONS; f++) {
			if(FactionInfo[f][fID] == faction) {
				faction = f;
				break;
			}
		}
		
		format(msg, sizeof(msg), "你选择的皮肤已经作为组织 '%s' 的预存皮肤.", FactionInfo[faction][fName]);
		SendClientMessage(playerid, COLOR_GREY, msg);
	} else {
	    new query[128],
	        faction = GetPVarInt(playerid, "FactionManager");
	        
	    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_reserved_skins` (`faction`, `skin`) VALUES (%i, %i)", FactionInfo[faction][fID], skin);
		mysql_function_query(sqlHandle, query, false, "", "");
		format(query, sizeof(query), "*** 你选择的皮肤只为组织 '%s' 而预存.", FactionInfo[faction][fName]);
		foreach(new i : Player) {
			if(PlayerInfo[i][pSkin] == skin && PlayerInfo[i][pFaction] != FactionInfo[faction][fID]) {
				SetPlayerStandardSkin(i);
				SendClientMessage(i, COLOR_LIGHTRED, query);
			}
		}
		
		format(query, sizeof(query), "*** %s %s 预存皮肤ID %i 为组织 '%s' 使用.", GetAdminRank(playerid), GetNameWithSpace(playerid), skin, FactionInfo[faction][fName]);
		SendMessageToAdmins(query);
	}
}

forward OnGetReservedSkins(faction, playerid);
public OnGetReservedSkins(faction, playerid) {
	new rows,
	    fields,
	    dialogMsg[40];
	    
	cache_get_data(rows, fields);
	if(rows > 0) {
	    SetPVarInt(playerid, "ManageReservedSkins", rows - 1);
	    for(new i = 0; i != rows; i++) {
			if(isnull(dialogMsg)) {
				format(dialogMsg, sizeof(dialogMsg), "%i", cache_get_row_int(i, 0));
			} else {
			    format(dialogMsg, sizeof(dialogMsg), "%s\n%i", dialogMsg, cache_get_row_int(i, 0));
			}
		}
	} else {
		SetPVarInt(playerid, "ManageReservedSkins", -1);
	}
	
	if(isnull(dialogMsg)) {
		ShowPlayerDialog(playerid, DIALOG_SETFACTION_SKINS, DIALOG_STYLE_LIST, "{FF9900}组织管理", "预存皮肤", "选择", "返回");
	} else {
	    format(dialogMsg, sizeof(dialogMsg), "%s\n预存皮肤", dialogMsg);
	    ShowPlayerDialog(playerid, DIALOG_SETFACTION_SKINS, DIALOG_STYLE_LIST, "{FF9900}组织管理", dialogMsg, "选择", "返回");
	}
}

forward OnLoginCheckReservedSkin(playerid);
public OnLoginCheckReservedSkin(playerid) {
	new rows,
	    fields;
	    
	cache_get_data(rows, fields);
	if(rows != 0) {
	    new faction = cache_get_row_int(0, 0);
	    if(PlayerInfo[playerid][pFaction] == 0 || faction != FactionInfo[PlayerInfo[playerid][pFaction]][fID]) {
	        new msg[120];
	     	SetPlayerStandardSkin(playerid);
			for(new f = 0; f != MAX_FACTIONS; f++) {
				if(FactionInfo[f][fID] == faction) {
					faction = f;
					break;
				}
			}

			format(msg, sizeof(msg), "*** 该皮肤已经设置为组织 '%s' 的预存皮肤.", FactionInfo[faction][fName]);
			SendClientMessage(playerid, COLOR_LIGHTRED, msg);
		}
	}
	
	SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin], 1027.8540, -1013.3001, 35.7402, 43.2636, 0, 0, 0, 0, 0, 0);
	LastUpdate[playerid] = gettime();
	Paused[playerid] = 0;
	afkCounter[playerid] = 0;
	SetPVarInt(playerid, "LoadData", 1);
	fade[playerid][fID] = 4;
	FadeScreen(playerid, 0, 0, 0, 255, 1000);
}

forward OnCheckReservedSkinsWardrobe(playerid, skin);
public OnCheckReservedSkinsWardrobe(playerid, skin) {
	new fields,
	    rows,
	    faction;

	cache_get_data(rows, fields);
	if(rows != 0) {
        faction = cache_get_row_int(0, 0);
	}

	if(rows == 0 || faction == FactionInfo[PlayerInfo[playerid][pFaction]][fID] && PlayerInfo[playerid][pFaction] != 0) {
	    new vw = GetPVarInt(playerid, "WardrobeVW");
		PlayerInfo[playerid][pSkin] = skin;
		// UpdatePlayerHandcuffs(playerid);
        SetPlayerPosEx(playerid, 5, houseData[HouseInfo[vw][hInt]][intX], houseData[HouseInfo[vw][hInt]][intY], houseData[HouseInfo[vw][hInt]][intZ], houseData[HouseInfo[vw][hInt]][intA], houseData[HouseInfo[vw][hInt]][intVal], vw);
        SetPVarInt(playerid, "WardrobeActive", 0);
	  	SetPVarInt(playerid, "WardrobeSkin", 0);
        TextDrawHideForPlayer(playerid, TD_SC_BoxNext);
	  	TextDrawHideForPlayer(playerid, TD_SC_BoxBack);
	  	TextDrawHideForPlayer(playerid, TD_SC_Next);
	  	TextDrawHideForPlayer(playerid, TD_SC_Back);
	  	TextDrawHideForPlayer(playerid, TD_SC_Cancel);
		TextDrawHideForPlayer(playerid, TD_SC_BoxCancel);
		TextDrawHideForPlayer(playerid, TD_SC_Select);
		TextDrawHideForPlayer(playerid, TD_SC_BoxBuy);
		CancelSelectTextDraw(playerid);
	} else {
		new msg[100];
		for(new f = 0; f != MAX_FACTIONS; f++) {
			if(FactionInfo[f][fID] == faction) {
				faction = f;
				break;
			}
		}

		format(msg, sizeof(msg), "*** 该皮肤已经设置为组织 '%s' 的预存皮肤.", FactionInfo[faction][fName]);
		SendClientMessage(playerid, COLOR_LIGHTRED, msg);
	}
}

forward OnPlayerChecksReservedSkins(playerid, skin, free);
public OnPlayerChecksReservedSkins(playerid, skin, free) {
	new fields,
	    rows,
		faction;
	    
	cache_get_data(rows, fields);
	if(rows != 0) {
        faction = cache_get_row_int(0, 0);
	}
	
	if(rows == 0 || faction == FactionInfo[PlayerInfo[playerid][pFaction]][fID] && PlayerInfo[playerid][pFaction] != 0) {
	    if(free == 0) {
			if(PlayerInfo[playerid][pMoney] >= 235) {
		   	    new query[110],
					vw = GetPVarInt(playerid, "ClothingStoreVW");

				GivePlayerMoneyEx(playerid, -235);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功花费$235购买了该服装.");
	            skinData[playerid][skin] = 1;
	            mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_skins` (`owner`, `skin`) VALUES ('%e', %i)", PlayerInfo[playerid][pName], skin);
	            mysql_function_query(sqlHandle, query, false, "", "");
	            PlayerInfo[playerid][pSkin] = skin;
		  		SetPlayerPosEx(playerid, 5, businessData[BusinessInfo[vw][bInt]][intX], businessData[BusinessInfo[vw][bInt]][intY], businessData[BusinessInfo[vw][bInt]][intZ], businessData[BusinessInfo[vw][bInt]][intA], businessData[BusinessInfo[vw][bInt]][intVal], vw);
		  		SetPVarInt(playerid, "ClothingStoreActive", 0);
		  		SetPVarInt(playerid, "ClothingStoreSkin", 0);
		  		TextDrawHideForPlayer(playerid, TD_SC_BoxNext);
		  		TextDrawHideForPlayer(playerid, TD_SC_BoxBack);
		  		TextDrawHideForPlayer(playerid, TD_SC_Next);
		  		TextDrawHideForPlayer(playerid, TD_SC_Back);
		  		TextDrawHideForPlayer(playerid, TD_SC_Cancel);
				TextDrawHideForPlayer(playerid, TD_SC_BoxCancel);
				TextDrawHideForPlayer(playerid, TD_SC_Buy);
				TextDrawHideForPlayer(playerid, TD_SC_BoxBuy);
		  		CancelSelectTextDraw(playerid);
			} else {
				SendClientMessage(playerid, COLOR_GREY, "你没有足够的钱购买该皮肤 (价格: $235).");
			}
		} else {
		    new vw = GetPVarInt(playerid, "ClothingStoreVW");
		    SendClientMessage(playerid, COLOR_WHITE, "你之前已经购买过该皮肤, 此次免费.");
		    PlayerInfo[playerid][pSkin] = skin;
		    SetPlayerPosEx(playerid, 5, businessData[BusinessInfo[vw][bInt]][intX], businessData[BusinessInfo[vw][bInt]][intY], businessData[BusinessInfo[vw][bInt]][intZ], businessData[BusinessInfo[vw][bInt]][intA], businessData[BusinessInfo[vw][bInt]][intVal], vw);
	  		SetPVarInt(playerid, "ClothingStoreActive", 0);
	  		SetPVarInt(playerid, "ClothingStoreSkin", 0);
	  		TextDrawHideForPlayer(playerid, TD_SC_BoxNext);
	  		TextDrawHideForPlayer(playerid, TD_SC_BoxBack);
	  		TextDrawHideForPlayer(playerid, TD_SC_Next);
	  		TextDrawHideForPlayer(playerid, TD_SC_Back);
	  		TextDrawHideForPlayer(playerid, TD_SC_Cancel);
			TextDrawHideForPlayer(playerid, TD_SC_BoxCancel);
			TextDrawHideForPlayer(playerid, TD_SC_Buy);
			TextDrawHideForPlayer(playerid, TD_SC_BoxBuy);
	  		CancelSelectTextDraw(playerid);
		}
	} else {
		new msg[100];
		for(new f = 0; f != MAX_FACTIONS; f++) {
			if(FactionInfo[f][fID] == faction) {
				faction = f;
				break;
			}
		}
		
		format(msg, sizeof(msg), "*** 该皮肤已经设置为组织 '%s' 的预存皮肤.", FactionInfo[faction][fName]);
		SendClientMessage(playerid, COLOR_LIGHTRED, msg);
	}
}

forward OnPlayerSearchLockerTakeItem(playerid, user[]);
public OnPlayerSearchLockerTakeItem(playerid, user[]) {
    new type = cache_get_row_int(0, 0);
    if(PlayerInfo[playerid][pItemType][items[type][iIdx]] != 0 && items[type][storable] == 0) {
		SendClientMessage(playerid, COLOR_GREY, "你手里已经携带了一个物品.");
	} else {
	    new query[128];
		format(query, sizeof(query), "** %s 从%s的储物箱里拿出%s.", GetNameWithSpace(playerid, 1), GetNameWithSpaceEx(user), itemLowerCase(type));
		SetPlayerChatBubble(playerid, query, COLOR_PINK, 12.0, 10000);
		strdel(query, 3, 3 + strlen(PlayerInfo[playerid][pName]));
		strins(query, ">", 3);
		SendClientMessage(playerid, COLOR_PINK, query);
		SetPlayerItem(playerid, type, cache_get_row_int(0, 1));
		mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_lockers` WHERE `id` = %i", cache_get_row_int(0, 2));
		mysql_function_query(sqlHandle, query, false, "", "");
		mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_lockers` WHERE `user` = '%e' AND `faction` = 1 LIMIT 21", user);
		mysql_function_query(sqlHandle, query, true, "OnPlayerSearchItemsInLocker", "isii", playerid, user, 1, 0);
	}
}

forward OnPlayerSearchItemsInLocker(playerid, user[], page, firstApproach);
public OnPlayerSearchItemsInLocker(playerid, user[], page, firstApproach) {
	new fields,
	    rows;

	cache_get_data(rows, fields);
	if(rows > 0) {
	    new type,
	        var,
	        dialogMsg[850];

	    for(new i = 0; i != rows; i++) {
			type = cache_get_row_int(i, 0);
			var = cache_get_row_int(i, 1);
		    if(isnull(dialogMsg)) {
			    if(type >= 4 && type <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[type][itemName], var);
				} else if(type == 3) {
					format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[type][itemName], var);
				} else if(type == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[type][itemName], var);
				} else if(type == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[type][itemName], var);
				} else if(type == 19) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[type][itemName], var);
                } else if(type == 28 || (type >= 243 && type <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[type][itemName], var);
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s", items[type][itemName]);
				}
			} else {
				if(type >= 4 && type <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[type][itemName], var);
				} else if(type == 3) {
			 		format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[type][itemName], var);
				} else if(type == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[type][itemName], var);
				} else if(type == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[type][itemName], var);
				} else if(type == 19) {
			    	format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[type][itemName], var);
                } else if(type == 28 || (type >= 243 && type <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[type][itemName], var);
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[type][itemName]);
				}
			}
		}

		if(rows > 20) {
			format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
		}

        SetPVarInt(playerid, "CurrentItemPage", page);
		ShowPlayerDialog(playerid, DIALOG_SEARCH_LOCKER, DIALOG_STYLE_LIST, "{FF9900}储物箱", dialogMsg, "拿取", "取消");
	} else {
		if(firstApproach != 0) {
			SendClientMessage(playerid, COLOR_GREY, "该储物箱内没有物品.");
		}
	}
}

forward OnPlayerSearchLocker(playerid, user[]);
public OnPlayerSearchLocker(playerid, user[]) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows != 0) {
		if(cache_get_row_int(0, 0) != 1) {
			SendClientMessage(playerid, COLOR_GREY, "对方不是LAPD成员.");
		} else {
			if(cache_get_row_int(0, 1) == 0) {
			    SendClientMessage(playerid, COLOR_GREY, "对方没有警徽或者储物箱.");
			} else {
			    new query[120];
			    mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_lockers` WHERE `user` = '%e' AND `faction` = 1 LIMIT 21", user);
			    mysql_function_query(sqlHandle, query, true, "OnPlayerSearchItemsInLocker", "isii", playerid, user, 1, 1);
			}
		}
	} else {
		SendClientMessage(playerid, COLOR_GREY, "无法找到该名称.");
	}
}

forward OnLockerCheckVolume(playerid, id, type, var);
public OnLockerCheckVolume(playerid, id, type, var) {
	new rows,
	    fields,
	    Float:vol,
	    query[128];

	cache_get_data(rows, fields);
	for(new it = 0; it != rows; it++) {
	    vol += items[cache_get_row_int(it, 0)][volume];
	}

	if(vol + items[type][volume] > GM_LOCKER_VOLUME) {
	    format(query, sizeof(query), "储物柜的容量不够大 (当前容量: %.2f 升, 最大容量: %i 升, 物品容量: %.2f 升).", vol, GM_LOCKER_VOLUME, items[type][volume]);
	    SendClientMessage(playerid, COLOR_GREY, query);
	} else {
	    new pItems[22],
			dialogMsg[850];

	    for(new i = 0; i != 10; i++) {
			if(PlayerInfo[playerid][pItemID][i] == id) {
			    if(i != 10) {
					RemovePlayerAttachedObject(playerid, i);
					if(items[PlayerInfo[playerid][pItemType][i]][itemType] == ITEM_WEAPON) {
						ResetPlayerWeapons(playerid);
					}
				}

				PlayerInfo[playerid][pItemVar][i] = 0;
				PlayerInfo[playerid][pItemType][i] = 0;
				PlayerInfo[playerid][pItemIndex][i] = 0;
				PlayerInfo[playerid][pItemID][i] = 0;
			}
		}

		mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_lockers` (`user`, `faction`, `item`, `var`) VALUES ('%e', %i, %i, %i)", PlayerInfo[playerid][pName], PlayerInfo[playerid][pFaction], type, var);
		mysql_function_query(sqlHandle, query, false, "", "");
		mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", id);
		mysql_function_query(sqlHandle, query, false, "", "");
		RemovePlayerItemEx(playerid, id);
		//UnsetPlayerMask(playerid);
		format(query, sizeof(query), "** %s 将%s存放入储物箱内.", GetNameWithSpace(playerid, 1), itemLowerCase(type));
		SetPlayerChatBubble(playerid, query, COLOR_PINK, 12.0, 10000);
		strdel(query, 3, 3 + strlen(PlayerInfo[playerid][pName]));
		strins(query, ">", 3);
		SendClientMessage(playerid, COLOR_PINK, query);
		getItemPage(playerid, pItems, sizeof(pItems), 1);
		if(pItems[0] != 0) {
			for(new i = 0; i != sizeof(pItems); i++) {
				if(pItems[i] == 0) {
					break;
				}

				if(isnull(dialogMsg)) {
				    if(pItems[i] >= 4 && pItems[i] <= 13) {
						format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 3) {
		   				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 17) {
					    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 18) {
					    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 19) {
					    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, i));
                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				    	format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
					} else {
					    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
					}
				} else {
					if(pItems[i] >= 4 && pItems[i] <= 13) {
						format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 3) {
		   				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 17) {
					    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 18) {
					    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 19) {
					    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				    	format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
					} else {
					    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
					}
				}

				if(getItemID(playerid, i) == PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]]) {
				    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
				}
			}

			if(itemIndexExists(playerid, 21)) {
				format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
			}

	        SetPVarInt(playerid, "CurrentItemPage", 1);
			ShowPlayerDialog(playerid, DIALOG_LOCKER_STORE, DIALOG_STYLE_LIST, "{FF9900}储物箱", dialogMsg, "存放", "取消");
		}
	}
}

forward OnPlayerLockerTakeItem(playerid, page, firstApproach);
public OnPlayerLockerTakeItem(playerid, page, firstApproach) {
	new fields,
	    rows;

	cache_get_data(rows, fields);
	if(rows > 0) {
	    new type,
	        var,
	        dialogMsg[850];

	    for(new i = 0; i != rows; i++) {
			type = cache_get_row_int(i, 0);
			var = cache_get_row_int(i, 1);
		    if(isnull(dialogMsg)) {
			    if(type >= 4 && type <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[type][itemName], var);
				} else if(type == 3) {
					format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[type][itemName], var);
				} else if(type == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[type][itemName], var);
				} else if(type == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[type][itemName], var);
				} else if(type == 19) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[type][itemName], var);
                } else if(type == 28 || (type >= 243 && type <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[type][itemName], var);
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s", items[type][itemName]);
				}
			} else {
				if(type >= 4 && type <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[type][itemName], var);
				} else if(type == 3) {
			 		format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[type][itemName], var);
				} else if(type == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[type][itemName], var);
				} else if(type == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[type][itemName], var);
				} else if(type == 19) {
			    	format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[type][itemName], var);
                } else if(type == 28 || (type >= 243 && type <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[type][itemName], var);
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[type][itemName]);
				}
			}
		}

		if(rows > 20) {
			format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
		}

        SetPVarInt(playerid, "CurrentItemPage", page);
		ShowPlayerDialog(playerid, DIALOG_LOCKER_TAKE, DIALOG_STYLE_LIST, "{FF9900}储物箱", dialogMsg, "获取", "权限");
	} else {
		if(firstApproach != 0) {
			SendClientMessage(playerid, COLOR_GREY, "储物箱内没有物品.");
		}
	}
}

forward OnPlayerTakesItemFromLocker(playerid);
public OnPlayerTakesItemFromLocker(playerid) {
	new type = cache_get_row_int(0, 0);
    if(PlayerInfo[playerid][pItemType][items[type][iIdx]] != 0 && items[type][storable] == 0) {
		SendClientMessage(playerid, COLOR_GREY, "你手里已经携带着一个物品.");
	} else {
	    new query[120];
		format(query, sizeof(query), "** %s 从储物箱内拿出%s.", GetNameWithSpace(playerid, 1),  itemLowerCase(type));
		SetPlayerChatBubble(playerid, query, COLOR_PINK, 12.0, 10000);
		strdel(query, 3, 3 + strlen(PlayerInfo[playerid][pName]));
		strins(query, ">", 3);
		SendClientMessage(playerid, COLOR_PINK, query);
		SetPlayerItem(playerid, type, cache_get_row_int(0, 1));
		mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_lockers` WHERE `id` = %i", cache_get_row_int(0, 2));
		mysql_function_query(sqlHandle, query, false, "", "");
		mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_lockers` WHERE `user` = '%e' AND `faction` = %i LIMIT 0, 21", PlayerInfo[playerid][pName], PlayerInfo[playerid][pFaction]);
		mysql_function_query(sqlHandle, query, true, "OnPlayerLockerTakeItem", "iii", playerid, 1, 0);
	}
}

forward OnTrunkCheckVolume(playerid, id, type, var, vehicle);
public OnTrunkCheckVolume(playerid, id, type, var, vehicle) {
	new rows,
	    fields,
	    Float:vol,
	    query[128];

	cache_get_data(rows, fields);
	for(new it = 0; it != rows; it++) {
	    vol += items[cache_get_row_int(it, 0)][volume];
	}

	if(vol + items[type][volume] > vehicleData[GetVehicleModel(vehicle) - 400][volume]) {
	    format(query, sizeof(query), "后备箱容量不够大 (现在容量: %.2f 升, 货运量: %i 升, 物品容量: %.2f 升).", vol, vehicleData[GetVehicleModel(vehicle) - 400][volume], items[type][volume]);
	    SendClientMessage(playerid, COLOR_GREY, query);
	} else {
	    new pItems[22],
			dialogMsg[850];

	    for(new i = 0; i != 10; i++) {
			if(PlayerInfo[playerid][pItemID][i] == id) {
			    if(i != 10) {
					RemovePlayerAttachedObject(playerid, i);
					if(items[PlayerInfo[playerid][pItemType][i]][itemType] == ITEM_WEAPON) {
						ResetPlayerWeapons(playerid);
					}
				}

				PlayerInfo[playerid][pItemVar][i] = 0;
				PlayerInfo[playerid][pItemType][i] = 0;
				PlayerInfo[playerid][pItemIndex][i] = 0;
				PlayerInfo[playerid][pItemID][i] = 0;
			}
		}

		if(GetPVarInt(playerid, "TrunkFaction") == 0) {
			mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_trunks` (`vehicle`, `item`, `var`) VALUES (%i, %i, %i)", VehicleInfo[vehicle][vID], type, var);
		} else {
		    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_faction_trunks` (`vehicle`, `item`, `var`) VALUES (%i, %i, %i)", VehicleInfo[vehicle][vFVID], type, var);
		}

		mysql_function_query(sqlHandle, query, false, "", "");
		mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", id);
		mysql_function_query(sqlHandle, query, false, "", "");
		RemovePlayerItemEx(playerid, id);
		//UnsetPlayerMask(playerid);
		ApplyAnimation(playerid, "CARRY", "putdwn", 4.1, 0, 1, 1, 0, 0, 1);
		format(query, sizeof(query), "** %s 将%s放进载具%s的后备箱.", GetNameWithSpace(playerid, 1), itemLowerCase(type), vehicleData[GetVehicleModel(vehicle) - 400][typeName]);
		SetPlayerChatBubble(playerid, query, COLOR_PINK, 12.0, 10000);
		//strdel(query, 3, 3 + strlen(PlayerInfo[playerid][pName]));
		strins(query, "> ", 3);
		SendClientMessage(playerid, COLOR_PINK, query);
		getItemPage(playerid, pItems, sizeof(pItems), 1);
		if(pItems[0] != 0) {
			for(new i = 0; i != sizeof(pItems); i++) {
				if(pItems[i] == 0) {
					break;
				}

				if(isnull(dialogMsg)) {
				    if(pItems[i] >= 4 && pItems[i] <= 13) {
						format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 3) {
		   				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 17) {
					    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 18) {
					    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 19) {
					    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, i));
                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				    	format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
					} else {
					    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
					}
				} else {
					if(pItems[i] >= 4 && pItems[i] <= 13) {
						format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 3) {
		   				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 17) {
					    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 18) {
					    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
					} else if(pItems[i] == 19) {
					    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				    	format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
					} else {
					    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
					}
				}

				if(getItemID(playerid, i) == PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]]) {
				    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
				}
			}

			if(itemIndexExists(playerid, 21)) {
				format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
			}

	        SetPVarInt(playerid, "CurrentItemPage", 1);
			ShowPlayerDialog(playerid, DIALOG_TRUNK_STORE, DIALOG_STYLE_LIST, "{FF9900}后备箱", dialogMsg, "存放", "取消");
		}
	}
}

forward OnPlayerCheckTrunkRemoveItem(playerid, vehicle);
public OnPlayerCheckTrunkRemoveItem(playerid, vehicle) {
    if(GetPVarInt(playerid, "TrunkFaction") == 0) {
        new query[80];
		mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_trunks` WHERE `id` = %i", cache_get_row_int(0, 0));
		mysql_function_query(sqlHandle, query, false, "", "");
    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_trunks` WHERE `vehicle` = %i LIMIT 0, 21", VehicleInfo[vehicle][vID]);
	   	mysql_function_query(sqlHandle, query, true, "OnPlayerCheckTrunk", "iiii", playerid, vehicle, 1, 0);
	} else {
		new query[90];
	    mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_faction_trunks` WHERE `id` = %i", cache_get_row_int(0, 0));
	    mysql_function_query(sqlHandle, query, false, "", "");
	    mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_faction_trunks` WHERE `vehicle` = %i LIMIT 0, 21", VehicleInfo[vehicle][vFVID]);
    	mysql_function_query(sqlHandle, query, true, "OnPlayerCheckTrunk", "iiii", playerid, vehicle, 1, 0);
	}

	SendClientMessage(playerid, COLOR_WHITE, "*** 物品已被移除.");
}

forward OnPlayerCheckTrunkTakeItem(playerid, vehicle);
public OnPlayerCheckTrunkTakeItem(playerid, vehicle) {
	new type = cache_get_row_int(0, 0);

    if(PlayerInfo[playerid][pItemType][items[type][iIdx]] != 0 && items[type][storable] == 0) {
		SendClientMessage(playerid, COLOR_GREY, "你手上已经携带了一个物品.");
	} else {
		SetPlayerItem(playerid, type, cache_get_row_int(0, 1));
		if(GetPVarInt(playerid, "TrunkFaction") == 0) {
		    new query[80];
			mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_trunks` WHERE `id` = %i", cache_get_row_int(0, 2));
			mysql_function_query(sqlHandle, query, false, "", "");
			mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_trunks` WHERE `vehicle` = %i LIMIT 0, 21", VehicleInfo[vehicle][vID]);
	    	mysql_function_query(sqlHandle, query, true, "OnPlayerCheckTrunk", "iiii", playerid, vehicle, 1, 0);
		} else {
		    new query[90];
		    mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_faction_trunks` WHERE `id` = %i", cache_get_row_int(0, 2));
		    mysql_function_query(sqlHandle, query, false, "", "");
		    mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_faction_trunks` WHERE `vehicle` = %i LIMIT 0, 21", VehicleInfo[vehicle][vFVID]);
	    	mysql_function_query(sqlHandle, query, true, "OnPlayerCheckTrunk", "iiii", playerid, vehicle, 1, 0);
		}
	}
}

forward OnPlayerTakesItemFromTrunk(playerid, vehicle);
public OnPlayerTakesItemFromTrunk(playerid, vehicle) {
	new type = cache_get_row_int(0, 0);
    if(PlayerInfo[playerid][pItemType][items[type][iIdx]] != 0 && items[type][storable] == 0) {
		SendClientMessage(playerid, COLOR_GREY, "你手上已经携带了一个物品.");
	} else {
	    new query[100];
	    ApplyAnimation(playerid, "CARRY", "putdwn", 4.1, 0, 1, 1, 0, 0, 1);
		format(query, sizeof(query), "** %s 从载具%s的后备箱拿出%s.", GetNameWithSpace(playerid, 1), itemLowerCase(type), vehicleData[GetVehicleModel(vehicle) - 400][typeName]);
		SetPlayerChatBubble(playerid, query, COLOR_PINK, 12.0, 10000);
		//strdel(query, 3, 3 + strlen(PlayerInfo[playerid][pName]));
		strins(query, "> ", 3);
		SendClientMessage(playerid, COLOR_PINK, query);
		SetPlayerItem(playerid, type, cache_get_row_int(0, 1));
		if(GetPVarInt(playerid, "TrunkFaction") == 0) {
			mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_trunks` WHERE `id` = %i", cache_get_row_int(0, 2));
			mysql_function_query(sqlHandle, query, false, "", "");
			mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_trunks` WHERE `vehicle` = %i LIMIT 0, 21", VehicleInfo[vehicle][vID]);
	    	mysql_function_query(sqlHandle, query, true, "OnPlayerTrunkTakeItem", "iiii", playerid, vehicle, 1, 0);
		} else {
		    mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_faction_trunks` WHERE `id` = %i", cache_get_row_int(0, 2));
		    mysql_function_query(sqlHandle, query, false, "", "");
		    mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_faction_trunks` WHERE `vehicle` = %i LIMIT 0, 21", VehicleInfo[vehicle][vFVID]);
	    	mysql_function_query(sqlHandle, query, true, "OnPlayerTrunkTakeItem", "iiii", playerid, vehicle, 1, 0);
		}
	}
}

forward OnPlayerCheckTrunk(playerid, vehicle, page, firstApproach);
public OnPlayerCheckTrunk(playerid, vehicle, page, firstApproach) {
	new fields,
	    rows;

	cache_get_data(rows, fields);
	if(rows > 0) {
	    new type,
	        var,
	        dialogMsg[850];

	    for(new i = 0; i != rows; i++) {
			type = cache_get_row_int(i, 0);
			var = cache_get_row_int(i, 1);
		    if(isnull(dialogMsg)) {
			    if(type >= 4 && type <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[type][itemName], var);
				} else if(type == 3) {
					format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[type][itemName], var);
				} else if(type == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[type][itemName], var);
				} else if(type == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[type][itemName], var);
				} else if(type == 19) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[type][itemName], var);
                } else if(type == 28 || (type >= 243 && type <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[type][itemName], var);
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s", items[type][itemName]);
				}
			} else {
				if(type >= 4 && type <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[type][itemName], var);
				} else if(type == 3) {
			 		format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[type][itemName], var);
				} else if(type == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[type][itemName], var);
				} else if(type == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[type][itemName], var);
				} else if(type == 19) {
			    	format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[type][itemName], var);
                } else if(type == 28 || (type >= 243 && type <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[type][itemName], var);
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[type][itemName]);
				}
			}
		}

		if(rows > 20) {
			format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
		}

        SetPVarInt(playerid, "CurrentItemPage", page);
		ShowPlayerDialog(playerid, DIALOG_TRUNK_CHECK, DIALOG_STYLE_LIST, "{FF9900}后备箱", dialogMsg, "选择", "取消");
	} else {
		if(firstApproach != 0) {
			SendClientMessage(playerid, COLOR_GREY, "后备箱内没有物品.");
		}
	}
}

forward OnPlayerTrunkTakeItem(playerid, vehicle, page, firstApproach);
public OnPlayerTrunkTakeItem(playerid, vehicle, page, firstApproach) {
	new fields,
	    rows;

	cache_get_data(rows, fields);
	if(rows > 0) {
	    new type,
	        var,
	        dialogMsg[850];

	    for(new i = 0; i != rows; i++) {
			type = cache_get_row_int(i, 0);
			var = cache_get_row_int(i, 1);
		    if(isnull(dialogMsg)) {
			    if(type >= 4 && type <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[type][itemName], var);
				} else if(type == 3) {
					format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[type][itemName], var);
				} else if(type == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[type][itemName], var);
				} else if(type == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[type][itemName], var);
				} else if(type == 19) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[type][itemName], var);
                } else if(type == 28 || (type >= 243 && type <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[type][itemName], var);
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s", items[type][itemName]);
				}
			} else {
				if(type >= 4 && type <= 13) {
					format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[type][itemName], var);
				} else if(type == 3) {
			 		format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[type][itemName], var);
				} else if(type == 17) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[type][itemName], var);
				} else if(type == 18) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[type][itemName], var);
				} else if(type == 19) {
			    	format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[type][itemName], var);
                } else if(type == 28 || (type >= 243 && type <= 249)) {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[type][itemName], var);
				} else {
				    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[type][itemName]);
				}
			}
		}

		if(rows > 20) {
			format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
		}

        SetPVarInt(playerid, "CurrentItemPage", page);
		ShowPlayerDialog(playerid, DIALOG_TRUNK_TAKE, DIALOG_STYLE_LIST, "{FF9900}后备箱", dialogMsg, "获取", "取消");
	} else {
		if(firstApproach != 0) {
			SendClientMessage(playerid, COLOR_GREY, "后备箱内没有物品.");
		}
	}
}

forward OnNewCitation(reason[], charge, user, issuer);
public OnNewCitation(reason[], charge, user, issuer) {
	new msg[128];
    SendClientMessage(user, COLOR_GREY, "_______ [{FFFFFF}圣安地列斯州立政府{b5b5b5}] _______");
	format(msg, sizeof(msg), "   罚单: #%i, 金额: $%i.", cache_insert_id(), charge);
	SendClientMessage(user, COLOR_GREY, msg);
	format(msg, sizeof(msg), "   原因: %s", reason);
	SendClientMessage(user, COLOR_GREY, msg);
	SendClientMessage(user, COLOR_GREY, "   有效期: 48 小时.");
	format(msg, sizeof(msg), "   发布单位: %s, %i (Los Angeles Police Department).", GetFactionRank(issuer), PlayerInfo[issuer][pBadge]);
	SendClientMessage(user, COLOR_GREY, msg);
	format(msg, sizeof(msg), "** %s 使用笔记本写下一张罚单并且递给 %s.", GetNameWithSpace(issuer, 1), GetNameWithSpace(user, 1));
	ProxDetector(12, issuer, msg, COLOR_PINK);
}

forward OnNewSpeedCameraCitation(reason[], charge, user);
public OnNewSpeedCameraCitation(reason[], charge, user) {
	new msg[128];
    SendClientMessage(user, COLOR_GREY, "_______ [{FFFFFF}圣安地列斯州立政府{b5b5b5}] _______");
	format(msg, sizeof(msg), "   罚单: #%i, 罚金: $%i.", cache_insert_id(), charge);
	SendClientMessage(user, COLOR_GREY, msg);
	SendClientMessage(user, COLOR_GREY, "   原因: 超速.");
	format(msg, sizeof(msg), "   原因: %s", reason);
	SendClientMessage(user, COLOR_GREY, "   有效期: 48 小时.");
 	SendClientMessage(user, COLOR_GREY, "   发布单位: 超速记录仪 (Los Angeles Police Department).");
}

forward OnCheckRentalTD(playerid);
public OnCheckRentalTD(playerid) {
    new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows != 0) {
		new rentalText[30];
		format(rentalText, sizeof(rentalText), "Rental~n~~r~%i ~w~Paydays", cache_get_row_int(0, 0));
		PlayerTextDrawSetString(playerid, TD_R_TruckText, rentalText);
		PlayerTextDrawShow(playerid, TD_R_TruckText);
		TextDrawShowForPlayer(playerid, TD_R_Truck);
	}
}

forward OnPayDayCheckRentals(playerid);
public OnPayDayCheckRentals(playerid)
{
	new rows,
	    fields,
		vehicle,
		rentHours,
		vehicleTaxes,
		rentVehicle = -1,
		rented;
		
	if(PlayerInfo[playerid][pHadPayday] == 1)
	{
 		SendClientMessage(playerid, COLOR_YELLOW, "[!] -> 脚本检测到您涉嫌使用发薪日漏洞. 原因: 个人网络延迟造成, 尝试联系管理员.");
		//KickDelay(playerid);
		return 1;
	}
	
	PlayerInfo[playerid][pHadPayday] = 1;
	cache_get_data(rows, fields);
	if(rows != 0) {
	    for(new i = 0; i != rows; i++) {
			rentHours = cache_get_row_int(i, 0) - 1;
			vehicle = cache_get_row_int(i, 1);
			rented = cache_get_row_int(i, 2);
			if(rented != 0) {
                for(new v = 0; v != sizeof(RentalInfo); v++) {
					if(vehicle == RentalInfo[v][rVehicleID]) {
						rentVehicle = v;
					}
				}

				if(rentHours >= 0) {
					new query[120],
						rentalText[30];

					mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `rentHours` = `rentHours` - 1 WHERE `rented` != 0 AND `owner` = '%e'", PlayerInfo[playerid][pName]);
					mysql_function_query(sqlHandle, query, false, "", "");

					PlayerTextDrawHide(playerid, TD_R_TruckText);
					format(rentalText, sizeof(rentalText), "Rental~n~~r~%i ~w~Paydays", rentHours);
					PlayerTextDrawSetString(playerid, TD_R_TruckText, rentalText);
					PlayerTextDrawShow(playerid, TD_R_TruckText);
				}
			} else {
			    vehicleTaxes += floatround(vehicleData[vehicle - 400][typePrice] / 1000);
			}
		}
	}

    if(GetPVarInt(playerid, "LoadData") != 0 && GetPVarInt(playerid, "Spawned") != 0) {
		new bankStatusBefore = PlayerInfo[playerid][pBank],
		    gameText[45],
		    msg[128],
		    hour,
		    minute,
		    second,
		    year,
			month,
			day;
			
		SendClientMessage(playerid, COLOR_GREY, "_______ [{FFFFFF}BANK STATEMENT{b5b5b5}] _______");

		gettime(hour, minute, second);
		getdate(year, month, day);
		if(minute > 9) {
			format(msg, sizeof(msg), "   日期: [{FFFFFF}%i.%i.%i{b5b5b5}], 时间: [{FFFFFF}%i:%i{b5b5b5}]", day, month, year, hour, minute);
		} else {
            format(msg, sizeof(msg), "   日期: [{FFFFFF}%i.%i.%i{b5b5b5}], 时间: [{FFFFFF}%i:0%i{b5b5b5}]", day, month, year, hour, minute);
		}

		SendClientMessage(playerid, COLOR_GREY, msg);

		if(rentVehicle != -1 && rentHours <= 0)
		{
		    PlayerInfo[playerid][pBank] -= RentalInfo[rentVehicle][rVehiclePrice] * 3;
			format(msg, sizeof(msg), "   租用车辆 ({ff6347}已过期{b5b5b5}): $-%i", RentalInfo[rentVehicle][rVehiclePrice] * 3);
			SendClientMessage(playerid, COLOR_GREY, msg);
		}
		else if(rentVehicle != -1)
		{
		    PlayerInfo[playerid][pBank] -= RentalInfo[rentVehicle][rVehiclePrice];
		    format(msg, sizeof(msg), "   租用车辆: $-%i", RentalInfo[rentVehicle][rVehiclePrice]);
			SendClientMessage(playerid, COLOR_GREY, msg);
		}

		SendClientMessage(playerid, COLOR_GREY, " ");
		
	/*	if(PlayerInfo[playerid][pDonateRank] == 3)
		{
			SendClientMessage(playerid, COLOR_GREY, "   利率: 0.013%");
			PlayerInfo[playerid][pBank] += floatround(bankStatusBefore * 0.013);
			format(msg, sizeof(msg), "   利息收入: $%i", floatround(bankStatusBefore * 0.013));
			SendClientMessage(playerid, COLOR_GREY, msg);
		}
		else if(PlayerInfo[playerid][pDonateRank] == 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "   利率: 0.015%");
			PlayerInfo[playerid][pBank] += floatround(bankStatusBefore * 0.015);
			format(msg, sizeof(msg), "   利息收入: $%i", floatround(bankStatusBefore * 0.015));
			SendClientMessage(playerid, COLOR_GREY, msg);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   利率: 0.006%");
			PlayerInfo[playerid][pBank] += floatround(bankStatusBefore * 0.006);
			format(msg, sizeof(msg), "   利息收入: $%i", floatround(bankStatusBefore * 0.006));
			SendClientMessage(playerid, COLOR_GREY, msg);
		}
*/
		if(vehicleTaxes != 0)
		{
		    if(PlayerInfo[playerid][pDonateRank] == 0 || PlayerInfo[playerid][pDonateRank] == 1)
		    {
				PlayerInfo[playerid][pBank] -= vehicleTaxes;
				format(msg, sizeof(msg), "   道路税: $-%i", vehicleTaxes);
				SendClientMessage(playerid, COLOR_GREY, msg);
			}
		}
		for(new b = 0; b != MAX_BUSINESSES; b++)
		{
			if(!isnull(BusinessInfo[b][bOwner]) && strcmp(BusinessInfo[b][bOwner], PlayerInfo[playerid][pName]) == 0)
			{
			    if(PlayerInfo[playerid][pDonateRank] == 0)
				{
	                PlayerInfo[playerid][pBank] -= BusinessInfo[b][bTaxes];
					format(msg, sizeof(msg), "   产业税金: $-%i", BusinessInfo[b][bTaxes]);
					SendClientMessage(playerid, COLOR_GREY, msg);
				}
				break;
			}
		}

		for(new h = 0; h != MAX_HOUSES; h++)
		{
			if(!isnull(HouseInfo[h][hOwner]) && strcmp(HouseInfo[h][hOwner], PlayerInfo[playerid][pName]) == 0)
			{
                PlayerInfo[playerid][pBank] -= HouseInfo[h][hTaxes];
				format(msg, sizeof(msg), "   房屋税金: $-%i", HouseInfo[h][hTaxes]);
				SendClientMessage(playerid, COLOR_GREY, msg);
				break;
			}
		}

		if(PlayerInfo[playerid][pFaction] > 0 && PlayerInfo[playerid][pFaction] <= 3)
		{
			PlayerInfo[playerid][pPaycheck] += 500 + PlayerInfo[playerid][pRank] * 65;
		}
		if(PlayerInfo[playerid][pJob]==5||PlayerInfo[playerid][pJob]==6)
		{
			PlayerInfo[playerid][pPaycheck]=100+random(100);
		}
		if(PlayerInfo[playerid][pPaycheck] > 0)
		{
            PlayerInfo[playerid][pBank] += PlayerInfo[playerid][pPaycheck];
            format(msg, sizeof(msg), "   薪水: $%i", PlayerInfo[playerid][pPaycheck]);
			SendClientMessage(playerid, COLOR_GREY, msg);

			format(msg, sizeof(msg), "   所得税率: %.3f", gIncomeTaxRate);
			SendClientMessage(playerid, COLOR_GREY, msg);

			PlayerInfo[playerid][pBank] -= floatround(PlayerInfo[playerid][pPaycheck] * gIncomeTaxRate);
			format(msg, sizeof(msg), "   所得税: $-%i", floatround(PlayerInfo[playerid][pPaycheck] * gIncomeTaxRate));
			SendClientMessage(playerid, COLOR_GREY, msg);
		}

		if(PlayerInfo[playerid][pJob] == 0 && (PlayerInfo[playerid][pFaction] == 0 || PlayerInfo[playerid][pFaction] > 3)) {

			new agenojob = PlayerInfo[playerid][pAge] * 2;
			PlayerInfo[playerid][pBank] += agenojob;
			format(msg, sizeof(msg), "   失业救济金: $%i", agenojob);
			SendClientMessage(playerid, COLOR_GREY, msg);
			//SendClientMessage(playerid, COLOR_GREY, "   失业救济金: $80");
		}

		if(PlayerInfo[playerid][pFine] > 0) {
            PlayerInfo[playerid][pBank] -= PlayerInfo[playerid][pFine];
            format(msg, sizeof(msg), "   罚金: $-%i", PlayerInfo[playerid][pFine]);
			SendClientMessage(playerid, COLOR_GREY, msg);
		}
		if(PlayerInfo[playerid][pLoanCash] > 0)
		{
		    if(PlayerInfo[playerid][pBank] >= 250)
		    {
		    	PlayerInfo[playerid][pBank] -= 250;
		    	PlayerInfo[playerid][pLoanCash] -= 250;
   			 	SendClientMessage(playerid, COLOR_GREY, "   贷款支付: $-250");
   			 	if(PlayerInfo[playerid][pLoanCash] == 0)
   			 	{
                    SendClientMessage(playerid, COLOR_GREY, "   贷款现状: 全额支付");
                    PlayerInfo[playerid][pLoaned] = 0;
   			 	}
			}
			else
			{
    			SendClientMessage(playerid, COLOR_GREY, "   贷款支付: 破产");
			}
		}
		format(msg, sizeof(msg), "   上期结余: $%i", bankStatusBefore);
		SendClientMessage(playerid, COLOR_GREY, msg);

		format(msg, sizeof(msg), "   当前余额: $%i", PlayerInfo[playerid][pBank]);
		SendClientMessage(playerid, COLOR_GREY, msg);

		if(PlayerInfo[playerid][pSavings] != 0)
		{
		    if(PlayerInfo[playerid][pDonateRank] == 3)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   储蓄 (利率): 0.005%");
				format(msg, sizeof(msg), "   储蓄 (收入): $%i", floatround(PlayerInfo[playerid][pSavings] * 0.005));
				SendClientMessage(playerid, COLOR_GREY, msg);
				PlayerInfo[playerid][pSavings] += floatround(PlayerInfo[playerid][pSavings] * 0.005);
				format(msg, sizeof(msg), "   储蓄 (余额): $%i", PlayerInfo[playerid][pSavings]);
				SendClientMessage(playerid, COLOR_GREY, msg);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   储蓄 (利率): 0.002%");
				format(msg, sizeof(msg), "   储蓄 (收入): $%i", floatround(PlayerInfo[playerid][pSavings] * 0.002));
				SendClientMessage(playerid, COLOR_GREY, msg);
				PlayerInfo[playerid][pSavings] += floatround(PlayerInfo[playerid][pSavings] * 0.002);
				format(msg, sizeof(msg), "   储蓄 (余额): $%i", PlayerInfo[playerid][pSavings]);
				SendClientMessage(playerid, COLOR_GREY, msg);
			}
		}

		if(PlayerInfo[playerid][pBank] - bankStatusBefore >= 0)
		{
			format(gameText, sizeof(gameText), "~y~PAYDAY~n~~g~$%i", PlayerInfo[playerid][pBank] - bankStatusBefore);
		} else {
			format(gameText, sizeof(gameText), "~y~PAYDAY~n~~r~-$%i", (PlayerInfo[playerid][pBank] - bankStatusBefore) * (-1));
		}
		if(PlayerInfo[playerid][pScrapWait] != 0)
		{
		    if(PlayerInfo[playerid][pScrapWait] == 1 && FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Scrap])
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "你的车辆销脏冷却时间已到, 你现在可以再次开始销脏任务了.");
		    }
		    PlayerInfo[playerid][pScrapWait] --;
		}
	    GameTextForPlayer(playerid, gameText, 1000, 1);
	    if(doublepaycheck > 1)
		{
			new timestip[128];
			format(timestip,sizeof timestip,"[+] {FFFFFF}由于开启了%d倍事件, 你额外获得$%d和%d点分数!!", doublepaycheck, 300*(doublepaycheck-1), doublepaycheck-1);
		    SendClientMessage(playerid, COLOR_LIGHTRED, timestip);
		    PlayerInfo[playerid][pScore]+=doublepaycheck-1;
	    	PlayerInfo[playerid][pBank] += 300*(doublepaycheck-1);
  		}
	    PlayerInfo[playerid][pScore]++;
		SetPlayerLevel(playerid);
		PlayerInfo[playerid][pJobTime]++;
		PlayerInfo[playerid][pPayTimer] = 0;
		PlayerInfo[playerid][pPaycheck] = 0;
		PlayerInfo[playerid][pFine] = 0;
		/*new query[200];
		mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_paydays` (`user`, `date`, `reason`) VALUES ('%e', NOW(), %i)", PlayerInfo[playerid][pName], PlayerInfo[playerid][pBank] - bankStatusBefore);
 		mysql_function_query(sqlHandle, query, false, "", "");*/
		SaveData(playerid);
	}
	return 1;
}

forward OnPlayerEnterRentalCP(playerid);
public OnPlayerEnterRentalCP(playerid) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
    if(rows == 0) {
   		SendClientMessage(playerid, COLOR_FADE3, "雇员 说: 欢迎来到 Los Angeles 租赁中心, 我能帮你什么呢?");
	   	ShowPlayerDialog(playerid, DIALOG_RENTAL_QUESTION, DIALOG_STYLE_MSGBOX, "{FF9900}租赁中心", "你想租用使用期为7个小时的载具吗?", "是的", "不用了");
	} else {
	    SendClientMessage(playerid, COLOR_FADE3, "雇员 说: 欢迎来到 Los Angeles 租赁中心, 我能帮你什么呢?");
    	ShowPlayerDialog(playerid, DIALOG_RENTAL_UNQUESTION, DIALOG_STYLE_MSGBOX, "{FF9900}租赁中心", "你想退换你的租用载具吗?", "是的", "取消");
	}

	return 1;
}

forward OnPlayerEnterRentalCPEx(playerid);
public OnPlayerEnterRentalCPEx(playerid) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
    if(rows == 0) {
   		SendClientMessage(playerid, COLOR_FADE3, "雇员 说: 欢迎来到 千年山 租赁中心, 我能帮你什么呢?");
	   	ShowPlayerDialog(playerid, DIALOG_RENTAL_QUESTIONEX, DIALOG_STYLE_MSGBOX, "{FF9900}租赁中心", "你想租用使用期为7个小时的载具吗?", "是的", "不用了");
	} else {
	    SendClientMessage(playerid, COLOR_FADE3, "雇员 说: 欢迎来到 千年山 租赁中心, 我能帮你什么呢?");
    	ShowPlayerDialog(playerid, DIALOG_RENTAL_UNQUESTION, DIALOG_STYLE_MSGBOX, "{FF9900}租赁中心", "你想退换你的租用载具吗?", "是的", "取消");
	}

	return 1;
}

forward OnPlayerSMSContact(playerid);
public OnPlayerSMSContact(playerid) {
    new dialogMsg[100];
	SetPVarInt(playerid, "SMSNumber", cache_get_row_int(0, 0));
	format(dialogMsg, sizeof(dialogMsg), "请输入发送至 '%i' 的信息内容 (最大128个字节):", GetPVarInt(playerid, "SMSNumber"));
	ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_SMS_SEND, DIALOG_STYLE_INPUT, "{FF9900}物品", dialogMsg, "发送", "取消");
	return 1;
}

forward OnPlayerDialContact(playerid);
public OnPlayerDialContact(playerid) {
	new number = cache_get_row_int(0, 0);
    if(number == HOTLINE_EMERGENCY || number == HOTLINE_TAXI || number == HOTLINE_MECHANIC) {
	    SetPlayerCalling(playerid, -1, PlayerInfo[playerid][pItemVar][10], number, 0);
	} else if(number >= 1000000 && number <= 9999999) {
	    new query[90];
		mysql_format(sqlHandle, query, sizeof(query), "SELECT `owner` FROM `samp_items` WHERE `var` = %i AND `item` >= 4 AND `item` <= 13", number);
		mysql_function_query(sqlHandle, query, true, "OnPlayerDialNumber", "ii", playerid, number);
	} else {
	    SetPlayerCalling(playerid, -1, PlayerInfo[playerid][pItemVar][10], number, 1);
	}

	return 1;
}

forward OnPlayerDeleteCellphoneContact(playerid);
public OnPlayerDeleteCellphoneContact(playerid) {
	new contact[25],
	    query[55],
		playerMsg[80];

	cache_get_row(0, 1, contact);
	mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_cell_contacts` WHERE `id` = %i", cache_get_row_int(0, 0));
	mysql_function_query(sqlHandle, query, false, "", "");
    format(playerMsg, sizeof(playerMsg), "你删除了一个联系人 (名称: %s, 号码: %i).", contact, cache_get_row_int(0, 2));
	SendClientMessage(playerid, COLOR_WHITE, playerMsg);
	return 1;
}

forward OnPlayerCellphoneContacts(playerid);
public OnPlayerCellphoneContacts(playerid) {
    new rows,
	    fields,
		txt[25];

	cache_get_data(rows, fields);
	SetPVarInt(playerid, "ContactsAmount", rows + 1);
	format(gVar3000, sizeof(gVar3000), "%s", EOS);
	strcat(gVar3000, "创建联系人");
	for(new i = 0; i != rows; i++) {
	    cache_get_row(i, 0, txt);
		format(gVar3000, sizeof(gVar3000), "%s\n%i. %s - %i", gVar3000, i + 1, txt, cache_get_row_int(i, 1));
	}

	ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_CONTACTS, DIALOG_STYLE_LIST, "{FF9900}物品", gVar3000, "选择", "取消");
	return 1;
}

forward OnPlayerSearchMaskID(playerid, maskid);
public OnPlayerSearchMaskID(playerid, maskid)
{
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows != 0) {
		new name[MAX_PLAYER_NAME],
			msg[90];

		cache_get_row(0, 0, name);
		format(msg, sizeof(msg), "MaskID %i 使用者为 %s: [Masked_%i].", maskid, GetNameWithSpaceEx(name), maskid);
		SendClientMessage(playerid, COLOR_WHITE, msg);
	} else {
		SendClientMessage(playerid, COLOR_GREY, "该MaskID从未被使用过.");
	}

	return 1;
}

forward OnServerLoadSettings();
public OnServerLoadSettings() {
	ServerSettings[maskID] = cache_get_row_int(0, 0);
	ServerSettings[plateNumber] = cache_get_row_int(0, 1);
	ServerSettings[plateLetter1] = cache_get_row_int(0, 2);
	ServerSettings[plateLetter2] = cache_get_row_int(0, 3);
	ServerSettings[plateLetter3] = cache_get_row_int(0, 4);
	ServerSettings[phone] = cache_get_row_int(0, 5);
}

forward OnPlayerDeleteCellphoneNote(playerid);
public OnPlayerDeleteCellphoneNote(playerid) {
    new query[50];
	mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_cell_notes` WHERE `id` = %i", cache_get_row_int(0, 0));
	mysql_function_query(sqlHandle, query, false, "", "");
	return 1;
}

forward OnPlayerViewCellphoneNote(playerid);
public OnPlayerViewCellphoneNote(playerid) {
	new txt[128],
	    date[20],
		dialogMsg[200];

	cache_get_row(0, 0, txt);
	cache_get_row(0, 1, date);
	format(dialogMsg, sizeof(dialogMsg), "号码:\t%i\n日期:\t\t%s\n\n{CC3300}提醒:{A9C4E4}\t\t%s", PlayerInfo[playerid][pItemVar][10], date, txt);
	ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_VIEW_NOTE, DIALOG_STYLE_MSGBOX, "{FF9900}物品", dialogMsg, "删除", "取消");
	return 1;
}

forward OnPlayerCellphoneNotes(playerid);
public OnPlayerCellphoneNotes(playerid) {
	new rows,
	    fields,
		txt[128];

	cache_get_data(rows, fields);
	SetPVarInt(playerid, "NotesAmount", rows + 1);
	format(gVar3000, sizeof(gVar3000), "%s", EOS);
	strcat(gVar3000, "创建新的提醒");
	for(new i = 0; i != rows; i++) {
	    cache_get_row(i, 0, txt);
	    if(strlen(txt) > 25) {
			strmid(txt, txt, 0, 25);
			strcat(txt, " ...");
		}

		format(gVar3000, sizeof(gVar3000), "%s\n%i. %s", gVar3000, i + 1, txt);
	}

	ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_NOTES, DIALOG_STYLE_LIST, "{FF9900}物品", gVar3000, "选择", "取消");
	return 1;
}

forward OnPlayerAdjustClothings(playerid, item, Float:X, Float:Y, Float:Z, Float:rX, Float:rY, Float:rZ, Float:sX, Float:sY, Float:sZ);
public OnPlayerAdjustClothings(playerid, item, Float:X, Float:Y, Float:Z, Float:rX, Float:rY, Float:rZ, Float:sX, Float:sY, Float:sZ) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows != 0) {
	    format(gVar3000, sizeof(gVar3000), "%s", EOS);
	    mysql_format(sqlHandle, gVar3000, sizeof(gVar3000), "UPDATE `samp_clothes` SET `X` = %f, `Y` = %f, `Z` = %f, `rX` = %f, `rY` = %f, `rZ` = %f, `sX` = %f, `sY` = %f, `sZ` = %f WHERE item = %i AND `owner` = '%e'", X, Y, Z, rX, rY, rZ, sX, sY, sZ, item, PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, gVar3000, false, "", "");
	} else {
	    format(gVar3000, sizeof(gVar3000), "%s", EOS);
		mysql_format(sqlHandle, gVar3000, sizeof(gVar3000), "INSERT INTO `samp_clothes` (`owner`, `item`, `X`, `Y`, `Z`, `rX`, `rY`, `rZ`, `sX`, `sY`, `sZ`) VALUES ('%e', %i, %f, %f, %f, %f, %f, %f, %f, %f, %f)", PlayerInfo[playerid][pName], item, X, Y, Z, rX, rY, rZ, sX, sY, sZ);
        mysql_function_query(sqlHandle, gVar3000, false, "", "");
	}
}

forward OnPlayerWearClothings(playerid, type);
public OnPlayerWearClothings(playerid, type) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows != 0) {
	    new Float:X = cache_get_row_float(0, 0),
	        Float:Y = cache_get_row_float(0, 1),
	        Float:Z = cache_get_row_float(0, 2),
	        Float:rX = cache_get_row_float(0, 3),
	        Float:rY = cache_get_row_float(0, 4),
	        Float:rZ = cache_get_row_float(0, 5),
	        Float:sX = cache_get_row_float(0, 6),
	        Float:sY = cache_get_row_float(0, 7),
	        Float:sZ = cache_get_row_float(0, 8);

        SetPlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx], items[PlayerInfo[playerid][pItemType][10]][objID],
										  items[PlayerInfo[playerid][pItemType][10]][bone], X, Y, Z, rX, rY, rZ, sX, sY, sZ);

		PlayerInfo[playerid][pItemX][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = X;
		PlayerInfo[playerid][pItemY][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = Y;
		PlayerInfo[playerid][pItemZ][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = Z;
		PlayerInfo[playerid][pItemrX][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = rX;
		PlayerInfo[playerid][pItemrY][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = rY;
		PlayerInfo[playerid][pItemrZ][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = rZ;
		PlayerInfo[playerid][pItemsX][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = sX;
		PlayerInfo[playerid][pItemsY][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = sY;
		PlayerInfo[playerid][pItemsZ][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = sZ;
	} else {
        SetPlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx], items[PlayerInfo[playerid][pItemType][10]][objID],
										  items[PlayerInfo[playerid][pItemType][10]][bone], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);

        PlayerInfo[playerid][pItemX][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
		PlayerInfo[playerid][pItemY][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
		PlayerInfo[playerid][pItemZ][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
		PlayerInfo[playerid][pItemrX][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
		PlayerInfo[playerid][pItemrY][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
		PlayerInfo[playerid][pItemrZ][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
		PlayerInfo[playerid][pItemsX][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
		PlayerInfo[playerid][pItemsY][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
		PlayerInfo[playerid][pItemsZ][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
	}

	return 1;
}

forward OnPlayerDialNumber(playerid, number);
public OnPlayerDialNumber(playerid, number) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows != 0) {
	    new owner[MAX_PLAYER_NAME];
		cache_get_row(0, 0, owner);
		if(!isnull(owner)) {
			new id = GetPlayerID(owner);
			if(id == -1) {
   				SetPlayerCalling(playerid, -1, PlayerInfo[playerid][pItemVar][10], number, 2);
			} else {
			    if(id == playerid) {
			        SendClientMessage(playerid, COLOR_GREY, "你不能拨打你自己的手机.");
			    } else {
			        if(GetPVarInt(id, "Calling") == -1) {
			            if(getItemTempVarFromVar(id, number) == 0) {
			    			SetPlayerCalling(playerid, id, PlayerInfo[playerid][pItemVar][10], number, 0);
						} else {
						    SetPlayerCalling(playerid, -1, PlayerInfo[playerid][pItemVar][10], number, 2);
						}
					} else {
					    SetPlayerCalling(playerid, -1, PlayerInfo[playerid][pItemVar][10], number, 2);
					}
				}
			}
		} else {
			SetPlayerCalling(playerid, -1, PlayerInfo[playerid][pItemVar][10], number, 1);
		}
	} else {
	    SetPlayerCalling(playerid, -1, PlayerInfo[playerid][pItemVar][10], number, 1);
	}

	return 1;
}

forward OnPlayerDialNumberEx(playerid, number, var, iType);
public OnPlayerDialNumberEx(playerid, number, var, iType) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows != 0) {
	    new owner[MAX_PLAYER_NAME];
		cache_get_row(0, 0, owner);
		if(!isnull(owner)) {
			new id = GetPlayerID(owner);
			if(id == -1) {
   				SetPlayerCallingEx(playerid, -1, var, number, 2, iType);
			} else {
			    if(id == playerid) {
			        SendClientMessage(playerid, COLOR_GREY, "你不能拨打你自己的手机.");
			    } else {
			        if(GetPVarInt(id, "Calling") == -1) {
			            if(getItemTempVarFromVar(id, number) == 0) {
			    			SetPlayerCallingEx(playerid, id, var, number, 0, iType);
						} else {
						    SetPlayerCallingEx(playerid, -1, var, number, 2, iType);
						}
					} else {
					    SetPlayerCallingEx(playerid, -1, var, number, 2, iType);
					}
				}
			}
		} else {
			SetPlayerCallingEx(playerid, -1, var, number, 1, iType);
		}
	} else {
	    SetPlayerCallingEx(playerid, -1, var, number, 1, iType);
	}

	return 1;
}

forward OnPlayerSMSNumber(playerid, number, sms[]);
public OnPlayerSMSNumber(playerid, number, sms[]) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows != 0) {
	    new owner[MAX_PLAYER_NAME];
		cache_get_row(0, 0, owner);
		if(!isnull(owner)) {
			new id = GetPlayerID(owner);
			if(id == -1) {
   				SendClientMessage(playerid, COLOR_GREY, "对方暂时无法接收信息.");
			} else {
			    if(id == playerid) {
			        SendClientMessage(playerid, COLOR_GREY, "你无法对你自己发送.");
			    } else {
			        if(getItemTempVarFromVar(playerid, number) == 0) {
						new textMessage[128],
						    me[95],
							len = strlen(sms);

						if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
							format(me, sizeof(me), "** %s 使用手中的手机发送信息.", GetNameWithSpace(playerid, 1));
						} else {
						    format(me, sizeof(me), "** %s 从口袋取出 %s 并且发送信息.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						}

						ProxDetector(12, playerid, me, COLOR_PINK);
						PlayerPlaySound(playerid, 1053, 0, 0, 0);
						if(len + MAX_PLAYER_NAME + 7 + 7 + 14 > 128) {
						    new buffer[128];
						    strmid(buffer, sms, 0, 128 - MAX_PLAYER_NAME - 7 - 7 - 14 - 4);
						    format(buffer, sizeof(buffer), "SMS: %s ... (%i - %s)", buffer, PlayerInfo[playerid][pItemVar][10], GetNameWithSpace(playerid, 1), buffer);
						    strdel(sms, 0, 128 - MAX_PLAYER_NAME - 7 - 7 - 14 - 4);
							format(textMessage, sizeof(textMessage), "SMS: ... %s (%i - %s)", sms, PlayerInfo[playerid][pItemVar][10], GetNameWithSpace(playerid, 1));
                            SendClientMessage(playerid, COLOR_YELLOW, buffer),
							SendClientMessage(id, COLOR_DARKYELLOW, buffer);
							SendClientMessage(playerid, COLOR_YELLOW, textMessage),
							SendClientMessage(id, COLOR_DARKYELLOW, textMessage);
						}
						else
						{
             				format(textMessage, sizeof(textMessage), "SMS: %s (%i - %s)", sms, PlayerInfo[playerid][pItemVar][10], GetNameWithSpace(playerid, 1));
							SendClientMessage(playerid, COLOR_YELLOW, textMessage),
							SendClientMessage(id, COLOR_DARKYELLOW, textMessage);
						}
			    	}
					else
					{
			    	    SendClientMessage(playerid, COLOR_GREY, "对方暂时无法接收信息.");
			    	}
				}
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_GREY, "对方暂时无法接收信息.");
	}

	return 1;
}

forward OnPlayerSMSNumberEx(playerid, number, sms[], iType, var);
public OnPlayerSMSNumberEx(playerid, number, sms[], iType, var) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows != 0) {
	    new owner[MAX_PLAYER_NAME];
		cache_get_row(0, 0, owner);
		if(!isnull(owner)) {
			new id = GetPlayerID(owner);
			if(id == -1) {
   				SendClientMessage(playerid, COLOR_GREY, "对方暂时无法接收信息.");
			}
			else
			{
			    if(id == playerid)
				{
			        SendClientMessage(playerid, COLOR_GREY, "不能对你自己手机发送.");
			    }
				else
				{
			        if(getItemTempVarFromVar(playerid, number) == 0)
					{
						new textMessage[128],
						    me[95],
							len = strlen(sms);

						if(PlayerInfo[playerid][pItemVar][items[iType][iIdx]] == var)
						{
							format(me, sizeof(me), "** %s 使用手中的手机发送信息.", GetNameWithSpace(playerid, 1));
						}
						else
						{
						    format(me, sizeof(me), "** %s 从口袋取出 %s 并且发送信息.", GetNameWithSpace(playerid, 1), itemLowerCase(iType));
						}

						ProxDetector(12, playerid, me, COLOR_PINK);
						PlayerPlaySound(playerid, 1053, 0, 0, 0);
						if(len + MAX_PLAYER_NAME + 7 + 7 + 14 > 128)
						{
						    new buffer[128];
						    strmid(buffer, sms, 0, 128 - MAX_PLAYER_NAME - 7 - 7 - 14 - 4);
						    
						    format(buffer, sizeof(buffer), "SMS: %s ... (%i - %s)", buffer, var, GetNameWithSpace(playerid, 1), buffer);
						    strdel(sms, 0, 128 - MAX_PLAYER_NAME - 7 - 7 - 14 - 4);
							format(textMessage, sizeof(textMessage), "SMS: ... %s (%i - %s)", sms, var, GetNameWithSpace(playerid, 1));
                            SendClientMessage(playerid, COLOR_YELLOW, buffer);
                            
							SendClientMessage(id, COLOR_DARKYELLOW, buffer);
							SendClientMessage(playerid, COLOR_YELLOW, textMessage),
							SendClientMessage(id, COLOR_DARKYELLOW, textMessage);
						}
						else
						{
			        		format(textMessage, sizeof(textMessage), "SMS: %s (%i - %s)", sms, var, GetNameWithSpace(playerid, 1));
							SendClientMessage(playerid, COLOR_YELLOW, textMessage),
							SendClientMessage(id, COLOR_DARKYELLOW, textMessage);
						}
			    	}
					else
					{
			    	    SendClientMessage(playerid, COLOR_GREY, "对方暂时无法接收信息.");
			    	}
				}
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_GREY, "对方暂时无法接收信息.");
	}

	return 1;
}

forward OnPlayerKickMember(playerid, faction);
public OnPlayerKickMember(playerid, faction) {
	new name[MAX_PLAYER_NAME],
		query[130];

	cache_get_row(0, 0, name);
	new pID = GetPlayerID(name);
	if(pID != -1) {
	    if(PlayerInfo[pID][pFaction] == 1) {
	        if(GetPVarInt(pID, "LAPDDuty") != 0) {
	            new skin = GetPVarInt(pID, "LAPDDuty");
	        	PlayerInfo[pID][pSkin] = skin;
			    UpdatePlayerHandcuffs(pID);
			    SetPlayerSkin(pID, skin);
			    SetPVarInt(pID, "LAPDDuty", 0);
			    UpdatePlayerColor(pID);
	        } else {
			    new skin = GetPlayerSkin(pID);
				for(new i = 0; i != sizeof(LAPDSkins); i++) {
					if(LAPDSkins[i] == skin) {
					    SetPlayerStandardSkin(pID);
					}
				}
			}

			RemoveItemType(pID, 231);
			RemoveItemType(pID, 232);
			RemoveItemType(pID, 233);
			RemoveItemType(pID, 234);
			RemoveItemType(pID, 235);
			RemoveItemType(pID, 236);
			RemoveItemType(pID, 237);
			RemoveItemType(pID, 238);
			RemoveItemType(pID, 239);
		} else if(PlayerInfo[pID][pFaction] == 2) {
		    if(GetPVarInt(pID, "LSFDDuty") != 0) {
	 			new skin = GetPVarInt(pID, "LSFDDuty");
			    PlayerInfo[pID][pSkin] = skin;
			    UpdatePlayerHandcuffs(pID);
			    SetPlayerSkin(pID, skin);
			    SetPVarInt(pID, "LSFDDuty", 0);
			    UpdatePlayerColor(pID);
		    } else {
			    new skin = GetPlayerSkin(pID);
		        for(new i = 0; i != sizeof(LSFDSkins); i++) {
					if(LSFDSkins[i] == skin) {
					    SetPlayerStandardSkin(pID);
					}
				}
			}

			RemoveItemType(pID, 229);
			RemoveItemType(pID, 230);
			RemoveItemType(pID, 231);
			RemoveItemType(pID, 239);
		} else if(PlayerInfo[pID][pFaction] == 3) {
			if(GetPVarInt(pID, "SanDuty") != 0) {
	        	new skin = GetPVarInt(pID, "SanDuty");
			    PlayerInfo[pID][pSkin] = skin;
			    UpdatePlayerHandcuffs(pID);
			    SetPlayerSkin(pID, skin);
			    SetPVarInt(pID, "SanDuty", 0);
			    UpdatePlayerColor(pID);
			} else {
				new skin = GetPlayerSkin(pID);
				for(new i = 0; i != sizeof(SanSkins); i++) {
					if(SanSkins[i] == skin) {
					    SetPlayerStandardSkin(pID);
					}
				}
			}
		}
	
		format(query, sizeof(query), "%s %s 将你从组织 '%s' 中移除.", GetFactionRank(playerid), GetNameWithSpace(playerid), FactionInfo[faction][fName]);
		SendClientMessage(pID, COLOR_WHITE, query);
		PlayerInfo[pID][pRank] = 0;
		PlayerInfo[pID][pFaction] = 0;
	} else {
		switch(faction) {
			case 1: {
			    RemoveItemTypeOffline(name, 231);
				RemoveItemTypeOffline(name, 232);
				RemoveItemTypeOffline(name, 233);
				RemoveItemTypeOffline(name, 234);
				RemoveItemTypeOffline(name, 235);
				RemoveItemTypeOffline(name, 236);
				RemoveItemTypeOffline(name, 237);
				RemoveItemTypeOffline(name, 238);
				RemoveItemTypeOffline(name, 239);
			}
			case 2: {
			    RemoveItemTypeOffline(name, 229);
				RemoveItemTypeOffline(name, 230);
				RemoveItemTypeOffline(name, 231);
				RemoveItemTypeOffline(name, 239);
			}
		}
	}
	
	mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `faction` = 0, `rank` = 0, `badge` = 0 WHERE `user` = '%e'", name);
	mysql_function_query(sqlHandle, query, false, "", "");
	mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_lockers` WHERE `user` = '%e' AND `faction` = %i", name, faction);
	mysql_function_query(sqlHandle, query, false, "", "");
	format(query, sizeof(query), "你将 %s 从组织 '%s' 中移除.", GetNameWithSpaceEx(name), FactionInfo[faction][fName]);
	SendClientMessage(playerid, COLOR_WHITE, query);
 	ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n查看/编辑现有成员\n编辑公告消息\n编辑阶级名称\n组织聊天频道权限", "选择", "取消");
	return 1;
}

forward OnPlayerPromoteMember(playerid, faction, rank);//
public OnPlayerPromoteMember(playerid, faction, rank) {
	new name[MAX_PLAYER_NAME],
		oldRank = cache_get_row_int(0, 1),
	 	query[95],
		msg[125];

	if(rank <= oldRank) {
		format(msg, sizeof(msg), "你选择的阶级低于玩家当前的阶级: '%s'.", FactionRanks[faction][oldRank]);
		SendClientMessage(playerid, COLOR_GREY, msg);
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
		for(new i = 1; i != 30; i++) {
			if(!isnull(FactionRanks[faction][i])) {
				if(isnull(gVar3000)) {
		     	   format(gVar3000, sizeof(gVar3000), "%i. %s", i, FactionRanks[faction][i]);
				} else {
				    format(gVar3000, sizeof(gVar3000), "%s\n%i. %s", gVar3000, i, FactionRanks[faction][i]);
				}
			} else {
				break;
			}
		}

		ShowPlayerDialog(playerid, DIALOG_SETFACTION_PROMOTE, DIALOG_STYLE_LIST, "{FF9900}组织管理", gVar3000, "选择", "返回");
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
	} else {
	    cache_get_row(0, 0, name);
		new pID = GetPlayerID(name);
		if(pID != -1) {
		    new msgPlayer[120];
			PlayerInfo[pID][pRank] = rank;
			format(msgPlayer, sizeof(msgPlayer), "%s %s 将你的阶级提升为 '%s'.", GetFactionRank(playerid), GetNameWithSpace(playerid), GetFactionRank(pID));
			SendClientMessage(pID, COLOR_WHITE, msgPlayer);
		}

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `rank` = %i WHERE `user` = '%e'", rank, name);
		mysql_function_query(sqlHandle, query, false, "", "");
		format(msg, sizeof(msg), "你将 %s %s 的阶级提升为 '%s'.", FactionRanks[faction][oldRank], GetNameWithSpaceEx(name), FactionRanks[faction][rank]);
		SendClientMessage(playerid, COLOR_WHITE, msg);
		ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n查看/编辑现有成员\n编辑公告消息\n编辑阶级名称\n组织聊天频道权限", "选择", "取消");
	}

	return 1;
}

forward OnPlayerDemoteMember(playerid, faction, rank);
public OnPlayerDemoteMember(playerid, faction, rank) {
	new name[MAX_PLAYER_NAME],
		oldRank = cache_get_row_int(0, 1),
	 	query[95],
		msg[125];

    if(rank >= oldRank) {
		format(msg, sizeof(msg), "你选择的阶级高于玩家当前的阶级: '%s'.", FactionRanks[faction][oldRank]);
		SendClientMessage(playerid, COLOR_GREY, msg);
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
		for(new i = 1; i != 30; i++) {
			if(!isnull(FactionRanks[faction][i])) {
				if(isnull(gVar3000)) {
		     	   format(gVar3000, sizeof(gVar3000), "%i. %s", i, FactionRanks[faction][i]);
				} else {
				    format(gVar3000, sizeof(gVar3000), "%s\n%i. %s", gVar3000, i, FactionRanks[faction][i]);
				}
			} else {
				break;
			}
		}

		ShowPlayerDialog(playerid, DIALOG_SETFACTION_DEMOTE, DIALOG_STYLE_LIST, "{FF9900}组织管理", gVar3000, "选择", "返回");
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
	} else {
		cache_get_row(0, 0, name);
		new pID = GetPlayerID(name);
		if(pID != -1) {
		    new msgPlayer[120];
			PlayerInfo[pID][pRank] = rank;
			format(msgPlayer, sizeof(msgPlayer), "%s %s 将你的阶级降级为 '%s'.", GetFactionRank(playerid), GetNameWithSpace(playerid), GetFactionRank(pID));
			SendClientMessage(pID, COLOR_WHITE, msgPlayer);
		}

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `rank` = %i WHERE `user` = '%e'", rank, name);
		mysql_function_query(sqlHandle, query, false, "", "");
		format(msg, sizeof(msg), "你将 %s %s 的阶级降级为 '%s'.", FactionRanks[faction][oldRank], GetNameWithSpaceEx(name), FactionRanks[faction][rank]);
		SendClientMessage(playerid, COLOR_WHITE, msg);
		ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n查看/编辑现有成员\n编辑公告消息\n编辑阶级名称\n组织聊天频道权限", "选择", "取消");
	}

	return 1;
}

forward OnPlayerViewFactionMembers(playerid, page);
public OnPlayerViewFactionMembers(playerid, page)
{
	new rows,
	    fields,
		name[MAX_PLAYER_NAME];

	cache_get_data(rows, fields);
	format(gVar3000, sizeof(gVar3000), "%s", EOS);
	for(new i = 0; i != ((rows == 21) ? 20 : rows); i++)
	{
	    cache_get_row(i, 0, name);
		if(isnull(gVar3000))
		{
            format(gVar3000, sizeof(gVar3000), "%s", GetNameWithSpaceEx(name));
		}
		else
		{
		    format(gVar3000, sizeof(gVar3000), "%s\n%s", gVar3000, GetNameWithSpaceEx(name));
		}
	}

    SetPVarInt(playerid, "FactionManagerMembers", page);
 	if(!isnull(gVar3000))
	{
		if(rows == 21)
		{
			ShowPlayerDialog(playerid, DIALOG_SETFACTION_MEMBERS, DIALOG_STYLE_LIST, "{FF9900}组织管理", gVar3000, "选择", "更多");
		}
		else
		{
		    ShowPlayerDialog(playerid, DIALOG_SETFACTION_MEMBERS, DIALOG_STYLE_LIST, "{FF9900}组织管理", gVar3000, "选择", "返回");
		}

		format(gVar3000, sizeof(gVar3000), "%s", EOS);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "该组织目前没有任何成员.");
		ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n查看/编辑现有成员\n编辑公告消息\n编辑阶级名称\n组织聊天频道权限", "选择", "取消");
	}

	return 1;
}

forward OnScriptCreateFactionVehicle(vehicle);
public OnScriptCreateFactionVehicle(vehicle) {
    VehicleInfo[vehicle][vFVID] = cache_insert_id();
    return 1;
}

forward OnPlayerLoadItems(playerid);
public OnPlayerLoadItems(playerid) {
	new fields,
		rows,
		item,
		id,
		var,
		query[140];

	cache_get_data(rows, fields);
	for(new i = 0; i != rows; i++)
	{
	    if(cache_get_row_int(i, 3) != 0)
		{
	        id = cache_get_row_int(i, 0);
			item = cache_get_row_int(i, 1);
			var = cache_get_row_int(i, 2);
			PlayerInfo[playerid][pItemIndex][items[item][iIdx]] = givePlayerItemEx(playerid, id, item, var);
			PlayerInfo[playerid][pItemType][items[item][iIdx]] = item;
			PlayerInfo[playerid][pItemID][items[item][iIdx]] = id;
			PlayerInfo[playerid][pItemVar][items[item][iIdx]] = var;
			if(PlayerInfo[playerid][pItemType][items[item][iIdx]] == 231)
			{
				depRadio[playerid] = 1;
			}
			
			if(items[item][itemType] == ITEM_CLOTHING) {
				mysql_format(sqlHandle, query, sizeof(query), "SELECT `X`, `Y`, `Z`, `rX`, `rY`, `rZ`, `sX`, `sY`, `sZ` FROM `samp_clothes` WHERE `item` = %i AND `owner` = '%e'", item, PlayerInfo[playerid][pName]);
				mysql_function_query(sqlHandle, query, true, "OnPlayerLoadActiveItem", "ii", playerid, item);
			}
			else if(items[item][itemType] == ITEM_WEAPON)
			{
			    GivePlayerWeapon(playerid, items[item][weaponID], var);
			}
			else
			{
				SetPlayerAttachedObject(playerid, items[item][iIdx], items[item][objID], items[item][bone], items[item][attX], items[item][attY], items[item][attZ], items[item][attRotX], items[item][attRotY], items[item][attRotZ]);
			}
	    }
		else
		{
			id = cache_get_row_int(i, 0);
			item = cache_get_row_int(i, 1);
			var = cache_get_row_int(i, 2);
			givePlayerItemEx(playerid, id, item, var);
			if(item == 231)
			{
				depRadio[playerid] = 1;
			}
		}
	}

	/*if(PlayerInfo[playerid][pMaskNum] == 0 && IsPlayerMasked(playerid) != 0)
	{
		format(PlayerInfo[playerid][pMaskID], 25, "Masked (%i)", ServerSettings[maskID]);
		PlayerInfo[playerid][pMaskNum] = ServerSettings[maskID];
		PlayerInfo[playerid][pMask3D] = CreateDynamic3DTextLabel(PlayerInfo[playerid][pMaskID], COLOR_WHITE, 0, 0, 0.175, NAMETAG_DRAWDISTANCE, playerid, INVALID_VEHICLE_ID, 1);
		format(PlayerInfo[playerid][pMaskID], 25, "[Masked-%i]", ServerSettings[maskID]);
		foreach(new i : Player)
		{
  			ShowPlayerNameTagForPlayer(i, playerid, 0);
		}

		new maskQuery[100];
		mysql_format(sqlHandle, maskQuery, sizeof(maskQuery), "INSERT INTO `samp_masks` (`maskid`, `user`) VALUES (%i, '%e')", ServerSettings[maskID], PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, maskQuery, false, "", "");
		mysql_function_query(sqlHandle, "UPDATE `samp_settings` SET `maskID` = `maskID` + 1", false, "", "");
		ServerSettings[maskID]++;
	}*/

	return 1;
}

forward OnPlayerLoadActiveItem(playerid, item);
public OnPlayerLoadActiveItem(playerid, item) {
	new rows,
		fields;

	cache_get_data(rows, fields);
	if(rows != 0) {
	    new Float:X = cache_get_row_float(0, 0),
			Float:Y = cache_get_row_float(0, 1),
			Float:Z = cache_get_row_float(0, 2),
			Float:rX = cache_get_row_float(0, 3),
			Float:rY = cache_get_row_float(0, 4),
			Float:rZ = cache_get_row_float(0, 5),
			Float:sX = cache_get_row_float(0, 6),
			Float:sY = cache_get_row_float(0, 7),
			Float:sZ = cache_get_row_float(0, 8);

    	SetPlayerAttachedObject(playerid, items[item][iIdx], items[item][objID], items[item][bone], X, Y, Z, rX, rY, rZ, sX, sY, sZ);
        PlayerInfo[playerid][pItemX][items[item][iIdx]] = X;
        PlayerInfo[playerid][pItemY][items[item][iIdx]] = Y;
        PlayerInfo[playerid][pItemZ][items[item][iIdx]] = Z;
        PlayerInfo[playerid][pItemrX][items[item][iIdx]] = rX;
        PlayerInfo[playerid][pItemrY][items[item][iIdx]] = rY;
        PlayerInfo[playerid][pItemrZ][items[item][iIdx]] = rZ;
        PlayerInfo[playerid][pItemsX][items[item][iIdx]] = sX;
        PlayerInfo[playerid][pItemsY][items[item][iIdx]] = sY;
        PlayerInfo[playerid][pItemsZ][items[item][iIdx]] = sZ;
	} else {
        PlayerInfo[playerid][pItemIndex][items[item][iIdx]] = 0;
		PlayerInfo[playerid][pItemType][items[item][iIdx]] = 0;
		PlayerInfo[playerid][pItemID][items[item][iIdx]] = 0;
		PlayerInfo[playerid][pItemVar][items[item][iIdx]] = 0;
	}

	return 1;
}

forward OnServerSetItem(playerid, iType, itemVariable);
public OnServerSetItem(playerid, iType, itemVariable)
{
	if(items[iType][storable] == 0 && items[iType][objID] != NON_OBJ_ITEM)
	{
	    new id = cache_insert_id();
	    PlayerInfo[playerid][pItemType][items[iType][iIdx]] = iType;
	    PlayerInfo[playerid][pItemVar][items[iType][iIdx]] = itemVariable;
	    PlayerInfo[playerid][pItemID][items[iType][iIdx]] = id;
	    PlayerInfo[playerid][pItemIndex][items[iType][iIdx]] = givePlayerItemEx(playerid, id, iType, itemVariable);
	    if(items[iType][itemType] == ITEM_WEAPON)
		{
	        GivePlayerWeapon(playerid, items[iType][weaponID], itemVariable);
	    }
		else 
		{
	    	SetPlayerAttachedObject(playerid, items[iType][iIdx], items[iType][objID], items[iType][bone], items[iType][attX], items[iType][attY], items[iType][attZ], items[iType][attRotX], items[iType][attRotY], items[iType][attRotZ]);
			if(iType == 29 || iType == 240 || iType == 241)
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
			}
		}
	}
	else
	{
		givePlayerItemEx(playerid, cache_insert_id(), iType, itemVariable);
		if(iType == 231)
		{
			depRadio[playerid] = 1;
		}
	}

	return 1;
}


forward OnPlayerConnectMessage(playerid);
public OnPlayerConnectMessage(playerid)
{
	new rows,
		fields;

    cache_get_data(rows, fields);
    if(IsPlayerNPC(playerid)) return 1;
	if(rows == 0)
	{
	    InterpolateCameraPos(playerid, 2285.0852,-1925.6593,24.5665, 640.5712,-1295.7432,55.6146, 120000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 2272.5361,-1911.3397,21.0265, 726.4163,-1129.6990,47.7532, 120000, CAMERA_MOVE);
	    //ShowPlayerDialog(playerid, DIALOG_REG_LEAVE, DIALOG_STYLE_MSGBOX, "{FF9900}Registration", "Welcome to {FF9900}GM-Name{A9C4E4}!\n\nThis username is not registered, please visit {FF9900}www.gmt-rp.cn/{A9C4E4} in order to register this account.", "Leave", "");*/
	    ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "{FF9900}角色注册", "欢迎进人 {FF9900}Los Angeles Roleplay{A9C4E4} 服务器\n\n此账户还没有注册. 如果你想使用该名称, 请输入一个密码进行注册:", "提交", "离开");
	}
	else
	{
	    new welcomeMessage[125];
	    cache_get_row(0, 0, PlayerInfo[playerid][pPassword], sqlHandle, 129);
	    cache_get_row(0, 1, PlayerInfo[playerid][pSalt], sqlHandle, 64);
  		format(welcomeMessage, sizeof(welcomeMessage), "欢迎回来, {FF9900}%s{A9C4E4}!\n\n请输入你的密码进行登录:", GetNameWithSpace(playerid));
		InterpolateCameraPos(playerid, 2285.0852,-1925.6593,24.5665, 640.5712,-1295.7432,55.6146, 120000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 2272.5361,-1911.3397,21.0265, 726.4163,-1129.6990,47.7532, 120000, CAMERA_MOVE);
		ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "{FF9900}角色登录", welcomeMessage, "提交", "离开");
	}

	//TextDrawShowForPlayer(playerid, TD_Website);
	return 1;
}

forward OnAdminCreateHouse(houseID, playerid);
public OnAdminCreateHouse(houseID, playerid) {
	new msg[128];
	HouseInfo[houseID][hID] = cache_insert_id();
	format(msg, sizeof(msg), "*** %s %s created house [%i] (Price: $%i, InteriorID: %i, Taxes: $%i).", GetAdminRank(playerid), GetNameWithSpace(playerid), HouseInfo[houseID][hID], HouseInfo[houseID][hPrice], HouseInfo[houseID][hInt], HouseInfo[houseID][hTaxes]);
	AdminMessageLog(msg, playerid, "Create House");
	return 1;
}

forward OnAdminCreateBusiness(businessID, playerid);
public OnAdminCreateBusiness(businessID, playerid) {
    new msg[128];
	BusinessInfo[businessID][bID] = cache_insert_id();
	format(msg, sizeof(msg), "*** %s %s created business [%i] (Price: $%i, InteriorID: %i, Taxes: $%i).", GetAdminRank(playerid), GetNameWithSpace(playerid), BusinessInfo[businessID][bID], BusinessInfo[businessID][bPrice], BusinessInfo[businessID][bInt], BusinessInfo[businessID][bTaxes]);
	AdminMessageLog(msg, playerid, "Create Business");
	return 1;
}

forward OnAdminPromoteMod(playerid, user[], rank);
public OnAdminPromoteMod(playerid, user[], rank) {
	new fields,
		rows;

	cache_get_data(rows, fields);
	if(rows > 0) {
		new result = cache_get_row_int(0, 0);
		if(rank > result) {
	        new msg[121];
			mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `modlevel` = %i WHERE `user` = '%e'", rank, user);
			mysql_function_query(sqlHandle, msg, false, "", "");
			format(msg, sizeof(msg), "*** %s %s 将 %s 提升为 %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(user), GetModRankEx(rank));
   			foreach(new i : Player) {
				if(PlayerInfo[i][pAdminlevel] > 0) {
				    SendClientMessage(i, COLOR_GOLD, msg);
				} else if(PlayerInfo[i][pModLevel] > 0) {
					SendClientMessage(i, COLOR_MODERATORS, msg);
				}
			}
		} else {
		    SendClientMessage(playerid, COLOR_GREY, "您选择的阶级低于该玩家的阶级");
		}
	} else {
		SendClientMessage(playerid, COLOR_GREY, "无法找到该玩家的名称.");
	}

	return 1;
}

forward OnAdminPromoteAdmin(playerid, user[], rank);
public OnAdminPromoteAdmin(playerid, user[], rank) {
	new fields,
		rows;

	cache_get_data(rows, fields);
	if(rows > 0) {
		new result = cache_get_row_int(0, 0);
		if(rank > result) {
	        new msg[121];
			mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `adminlevel` = %i WHERE `user` = '%e'", rank, user);
			mysql_function_query(sqlHandle, msg, false, "", "");
			format(msg, sizeof(msg), "*** %s %s 将 %s 提升为 %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(user), GetAdminRankEx(rank));
   			AdminMessageLog(msg, playerid, "Promote Admin");
		} else {
		    SendClientMessage(playerid, COLOR_GREY, "您选择的阶级低于该玩家的阶级.");
		}
	} else {
		SendClientMessage(playerid, COLOR_GREY, "无法找到该玩家的名称.");
	}

	return 1;
}

forward OnAdminDemoteMod(playerid, user[], rank);
public OnAdminDemoteMod(playerid, user[], rank) {
	new fields,
		rows;

	cache_get_data(rows, fields);
	if(rows > 0) {
		new result = cache_get_row_int(0, 0);
		if(rank < result) {
	        new msg[121];
			mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `modlevel` = %i WHERE `user` = '%e'", rank, user);
			mysql_function_query(sqlHandle, msg, false, "", "");
			format(msg, sizeof(msg), "*** %s %s 将 %s 降级为 %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(user), GetModRankEx(rank));
			foreach(new i : Player) {
				if(PlayerInfo[i][pAdminlevel] > 0) {
				    SendClientMessage(i, COLOR_GOLD, msg);
				} else if(PlayerInfo[i][pModLevel] > 0) {
					SendClientMessage(i, COLOR_MODERATORS, msg);
				}
			}
		} else {
		    SendClientMessage(playerid, COLOR_GREY, "您选择的阶级高于该玩家的阶级.");
		}
	} else {
		SendClientMessage(playerid, COLOR_GREY, "无法找到该玩家的名称.");
	}

	return 1;
}

forward OnAdminDemoteAdmin(playerid, user[], rank);
public OnAdminDemoteAdmin(playerid, user[], rank) {
	new fields,
		rows;

	cache_get_data(rows, fields);
	if(rows > 0) {
		new result = cache_get_row_int(0, 0);
		if(rank < result) {
	        new msg[121];
			mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `adminlevel` = %i WHERE `user` = '%e'", rank, user);
			mysql_function_query(sqlHandle, msg, false, "", "");
			format(msg, sizeof(msg), "*** %s %s 将 %s 降级为 %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(user), GetAdminRankEx(rank));
			AdminMessageLog(msg, playerid, "Demote Admin");
		} else {
		    SendClientMessage(playerid, COLOR_GREY, "您选择的阶级高于该玩家的阶级.");
		}
	} else {
		SendClientMessage(playerid, COLOR_GREY, "无法找到该玩家的名称.");
	}

	return 1;
}

forward OnPlayerSpawnAdminJailed(playerid);
public OnPlayerSpawnAdminJailed(playerid) {
	new reason[200],
		admin[MAX_PLAYER_NAME],
		checkpoints,
		msg[200];

    cache_get_row(0, 0, reason);
    cache_get_row(0, 1, admin);
    checkpoints = cache_get_row_int(0, 2);
    format(msg, sizeof(msg), "** 你被管理员 %s 监禁, 惩罚要求: %i 点, 原因:[%s]", GetNameWithSpaceEx(admin), checkpoints, reason);
    SendClientMessage(playerid, COLOR_WHITE, msg);
    format(msg, sizeof(msg), "提示: 你需要跑完 %i 点数才能离开监狱 (如果你看不到Pickup, 请使用 /refreshjail 刷新).", PlayerInfo[playerid][pAJCPs]);
	SendClientMessage(playerid, COLOR_LIGHTRED, msg);
	CreateNewAdminJailPickup(playerid);
	SetPVarInt(playerid, "AdminJailed", 1);
	return 1;
}

forward OnPlayerLoadSkins(playerid);
public OnPlayerLoadSkins(playerid) {
	new fields,
	    rows,
		result;

	cache_get_data(rows, fields);
	for(new i = 0; i != rows; i++) {
	    result = cache_get_row_int(i, 0);
		skinData[playerid][result] = 1;
	}

	return 1;
}

forward OnPlayerLoadData(playerid);
public OnPlayerLoadData(playerid) {
	new query[65],
		faction;

	PlayerInfo[playerid][pAge] = cache_get_row_int(0, 0);
    PlayerInfo[playerid][pAdminlevel] = cache_get_row_int(0, 1);
    PlayerInfo[playerid][pMoney] = cache_get_row_int(0, 2);
    PlayerInfo[playerid][pSkin] = cache_get_row_int(0, 3);
    SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
    PlayerInfo[playerid][pWalkstyle] = cache_get_row_int(0, 4);
    PlayerInfo[playerid][pChatstyle] = cache_get_row_int(0, 5);
    PlayerInfo[playerid][pGender] = cache_get_row_int(0, 6);
    PlayerInfo[playerid][pRentHouse] = cache_get_row_int(0, 7);
    PlayerInfo[playerid][pScore] = cache_get_row_int(0, 8);
    faction = cache_get_row_int(0, 9);
    PlayerInfo[playerid][pRank] = cache_get_row_int(0, 10);
    PlayerInfo[playerid][pDriveLic] = cache_get_row_int(0, 11);
    PlayerInfo[playerid][pBank] = cache_get_row_int(0, 12);
    PlayerInfo[playerid][pHealth] = cache_get_row_float(0, 13);
    SetPlayerArmourAndLimit(playerid, cache_get_row_float(0, 14));
    PlayerInfo[playerid][pAJCPs] = cache_get_row_int(0, 15);
	PlayerInfo[playerid][pWeaponLic] = cache_get_row_int(0, 16);
    PlayerInfo[playerid][pFish] = cache_get_row_int(0, 17);
    PlayerInfo[playerid][pJob] = cache_get_row_int(0, 18);
    PlayerInfo[playerid][pModLevel] = cache_get_row_int(0, 19);
    PlayerInfo[playerid][pPaycheck] = cache_get_row_int(0, 20);
    PlayerInfo[playerid][pJobTime] = cache_get_row_int(0, 21);
    SetPVarInt(playerid, "Arrest", cache_get_row_int(0, 22));
    PlayerInfo[playerid][pPayTimer] = cache_get_row_int(0, 23);
    cache_get_row(0, 24, PlayerInfo[playerid][pStaffPassword], sqlHandle, 129);
    PlayerInfo[playerid][pRadio] = cache_get_row_int(0, 25);
    PlayerInfo[playerid][pBadge] = cache_get_row_int(0, 26);
    PlayerInfo[playerid][pDisX] = cache_get_row_float(0, 27);
    PlayerInfo[playerid][pDisY] = cache_get_row_float(0, 28);
    PlayerInfo[playerid][pDisZ] = cache_get_row_float(0, 29);
    PlayerInfo[playerid][pDisA] = cache_get_row_float(0, 30);
    PlayerInfo[playerid][pDisInt] = cache_get_row_int(0, 31);
    PlayerInfo[playerid][pDisVW] = cache_get_row_int(0, 32);
    PlayerInfo[playerid][pTrainticket] = cache_get_row_int(0, 33);
    cache_get_row(0, 35, PlayerInfo[playerid][pForumName], sqlHandle, 30);
    PlayerInfo[playerid][pFine] = cache_get_row_int(0, 36);
    PlayerInfo[playerid][pSavings] = cache_get_row_int(0, 37);
    PlayerInfo[playerid][pTaxiLic] = cache_get_row_int(0, 38);
    PlayerInfo[playerid][pAirplaneLic] = cache_get_row_int(0, 39);
    SetPVarInt(playerid, "OnDutyAfterRelog", cache_get_row_int(0, 40));
    PlayerInfo[playerid][pNamechanges] = cache_get_row_int(0, 41);
    PlayerInfo[playerid][pWeed] = cache_get_row_int(0, 42);
    PlayerInfo[playerid][pCocaine] = cache_get_row_int(0, 43);
    PlayerInfo[playerid][pEcstasy] = cache_get_row_int(0, 44);
    PlayerInfo[playerid][pCrack] = cache_get_row_int(0, 45);
    PlayerInfo[playerid][pHeroin] = cache_get_row_int(0, 46);
    PlayerInfo[playerid][pWeedSeeds] = cache_get_row_int(0, 47);
    PlayerInfo[playerid][pOpiumSeeds] = cache_get_row_int(0, 48);
    PlayerInfo[playerid][pFertilizer] = cache_get_row_int(0, 49);
    PlayerInfo[playerid][pRawOpium] = cache_get_row_int(0, 50);
    PlayerInfo[playerid][pCuffed] = cache_get_row_int(0, 51);
    PlayerInfo[playerid][pDonateRank] = cache_get_row_int(0, 52);
    PlayerInfo[playerid][pDonateYear] = cache_get_row_int(0, 53);
    PlayerInfo[playerid][pDonateMonth] = cache_get_row_int(0, 54);
    PlayerInfo[playerid][pDonateDay] = cache_get_row_int(0, 55);
    PlayerInfo[playerid][pCarBomb] = cache_get_row_int(0, 56);
    PlayerInfo[playerid][pScrapWait] = cache_get_row_int(0, 57);
    PlayerInfo[playerid][pLoaned] = cache_get_row_int(0, 58);
    PlayerInfo[playerid][pLoanCash] = cache_get_row_int(0, 59);
    PlayerInfo[playerid][pMaskID] = cache_get_row_int(0, 60);
    PlayerInfo[playerid][pPrisoned] = cache_get_row_int(0, 61);
    PlayerInfo[playerid][pPrisonTime] = cache_get_row_int(0, 62);
    PlayerInfo[playerid][pSWAT] = cache_get_row_int(0, 63);
    PlayerInfo[playerid][pSwatCooldown] = cache_get_row_int(0, 64);
    PlayerInfo[playerid][pWeedAddiction] = cache_get_row_int(0, 65);
    PlayerInfo[playerid][pCocaineAddiction] = cache_get_row_int(0, 66);
    PlayerInfo[playerid][pEcstasyAddiction] = cache_get_row_int(0, 67);
    PlayerInfo[playerid][pCrackAddiction] = cache_get_row_int(0, 68);
    PlayerInfo[playerid][pHeroinAddiction] = cache_get_row_int(0, 69);
    PlayerInfo[playerid][pFreq] = cache_get_row_int(0, 70);
    PlayerInfo[playerid][pActivated] = cache_get_row_int(0, 71);
    PlayerInfo[playerid][pSTagPerm] = cache_get_row_int(0, 72);
    PlayerInfo[playerid][pWoodmat] = cache_get_row_int(0, 73);
    PlayerInfo[playerid][pHunger] = cache_get_row_int(0, 74);
    PlayerInfo[playerid][pThirst] = cache_get_row_int(0, 75);
    PlayerInfo[playerid][pCold] = cache_get_row_int(0, 76);
    PlayerInfo[playerid][pCancer] = cache_get_row_int(0, 77);
    if(PlayerInfo[playerid][pHunger]==0)PlayerInfo[playerid][pHunger]=1000;
    if(PlayerInfo[playerid][pThirst]==0)PlayerInfo[playerid][pThirst]=1000;
    LoggedIn[playerid] = 1;
    if(PlayerInfo[playerid][pActivated] == 0)
    {
        SendClientMessage(playerid, COLOR_LIGHTRED, "您所登录到服务器的账号还没有被工作组激活.");
        SendClientMessage(playerid, COLOR_LIGHTRED, "如果您是此账户的持有者, 请到 www.lifengame.com 进行激活申请.");
        SendClientMessage(playerid, COLOR_LIGHTRED, "你的申请可能需要等待30-60分钟左右才会被工作组成员激活!");
        KickDelay(playerid);
        return 1;
    }
    SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 您的帐户设定加载成功, 欢迎回来.");
	switch(cache_get_row_int(0, 34))
	{
	    case 1:
		{
			SetPVarInt(playerid, "InHouse", 1);
		}
		case 2:
		{
		    SetPVarInt(playerid, "InBusiness", 1);
		}
	}

	for(new f = 0; f != MAX_FACTIONS; f++) {
		if(FactionInfo[f][fID] == faction) {
			PlayerInfo[playerid][pFaction] = f;
			break;
		}
	}

	if(PlayerInfo[playerid][pFaction] != 0 && !isnull(FactionInfo[PlayerInfo[playerid][pFaction]][fmotd])) {
	    new motd[160];
		format(motd, sizeof(motd), "组织标语: %s", FactionInfo[PlayerInfo[playerid][pFaction]][fmotd]);
    	SendClientMessage(playerid, COLOR_BLUE, motd);
	}
	for(new i;i<4;i++)
	{
		TextDrawShowForPlayer(playerid,TD_R_Hunger[i]);
		TextDrawShowForPlayer(playerid,TD_R_Thirst[i]);
	}
	XB_SetHungerTxd(playerid);
	LoadRentalReminder(playerid);
	LoadSkinData(playerid);
	LoadItemData(playerid);
	CheckDonation(playerid);
	format(query, sizeof(query), "User %s logged in successfully.", PlayerInfo[playerid][pName]);
	Log(playerid, "Login", query);
	mysql_format(sqlHandle, query, sizeof(query), "SELECT `faction` FROM `samp_reserved_skins` WHERE `skin` = %i", PlayerInfo[playerid][pSkin]);
	mysql_function_query(sqlHandle, query, true, "OnLoginCheckReservedSkin", "i", playerid);
	
	if(PlayerInfo[playerid][pDonateRank] == 3)
	{
	    SendClientMessage(playerid, COLOR_DARKYELLOW, "你成功登录到金级捐赠账户, 欢迎您.");
	}
	if(PlayerInfo[playerid][pDonateRank] == 2)
	{
	    SendClientMessage(playerid, COLOR_DARKYELLOW, "你成功登录到银级捐赠账户, 欢迎您.");
	}
	if(PlayerInfo[playerid][pDonateRank] == 1)
	{
	    SendClientMessage(playerid, COLOR_DARKYELLOW, "你成功登录到铜级捐赠账户, 欢迎您.");
	}
	if(PlayerInfo[playerid][pIsHospital] == 1)
    {
		SetTimerEx("SetPlayerBackToDeath", 2000, false, "i", playerid);
    }
	XB_DeleteSaw(playerid);
	return 1;
}

forward OnCommandApproveAccount(playerid, username[], jailReason[], cpNumber);
public OnCommandApproveAccount(playerid, username[], jailReason[], cpNumber) {
	new rows,
		fields;

    cache_get_data(rows, fields);
    if(rows == 0)
	{
        SendClientMessage(playerid, COLOR_GREY, "该账户还没有注册.");
    }
	else
	{
        if(cache_get_row_int(0, 0) > 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "该账户已经激活了.");
		}
		else
		{
            new info[110],
				query[300],
				ip[16];

            cache_get_row(0, 1, ip);
            format(info, sizeof(info), "*** %s 激活了角色: %s  (IP: %s).", GetNameWithSpace(playerid), GetNameWithSpaceEx(username), ip);
  			foreach(new i : Player)
			{
				if(PlayerInfo[i][pAdminlevel] > 0 || PlayerInfo[i][pModLevel] > 0)
				{
					SendClientMessage(i, COLOR_GOLD, info);
  				}
			}
			
			mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_registrations` (`account`, `ip`, `approver`, `date`) VALUES ('%e', '%e', '%e', NOW())", GetNameWithSpaceEx(username), ip, GetNameWithSpace(playerid));
			mysql_function_query(sqlHandle, query, false, "", "");
		    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `activated` = 1 WHERE `user` = '%e'", username);
		    mysql_function_query(sqlHandle, query, false, "", "");
		}
    }
	return 1;
}

forward OnCommandJailAccount(playerid, username[], jailReason[], cpNumber);
public OnCommandJailAccount(playerid, username[], jailReason[], cpNumber) {
	new rows,
		fields;

    cache_get_data(rows, fields);
    if(rows == 0) {
        SendClientMessage(playerid, COLOR_GREY, "该用户不存在.");
    } else {
        if(cache_get_row_int(0, 0) > 0) {
			SendClientMessage(playerid, COLOR_GREY, "该用户已经在监狱中.");
		} else {
            new info[110],
				reason[120],
				query[300],
				ip[16];

            cache_get_row(0, 1, ip);
            format(info, sizeof(info), "*** %s %s 监禁了 %s (IP: %s).", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(username), ip);
  			format(reason, sizeof(reason), "*** 原因: %s", jailReason);
  			foreach(new i : Player) {
				if(PlayerInfo[i][pAdminlevel] > 0) {
					SendClientMessage(i, COLOR_GOLD, info);
				    SendClientMessage(i, COLOR_GOLD, reason);
  				}
			}

			strdel(reason, 0, 12);
			mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_jails` (`user`, `reason`, `checkpoints`, `admin`) VALUES ('%e', '%e', %i, '%e')", username, reason, cpNumber, PlayerInfo[playerid][pName]);
			mysql_function_query(sqlHandle, query, false, "", "");
		    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `pAJCPs` = %i, `arresttime` = 0, `pDisX` = 1542.3568, `pDisY` = -1675.1830, `pDisZ` = 13.5543, `pDisInt` = 0, `pDisVW` = 0, `pDisA` = 0 WHERE `user` = '%e'", cpNumber, username);
		    mysql_function_query(sqlHandle, query, false, "", "");
		}
    }

	return 1;
}

forward OnPlayerLoginBanCheck(playerid);
public OnPlayerLoginBanCheck(playerid) {
	if(cache_get_row_int(0, 0) != 0) {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "警告: 该账号已经被封禁. 如果你认为这是一个错误的禁令, 请在 www.lifengame.com 发布申明.");
		KickDelay(playerid);
	} else {
		new hash[129];
		GetPVarString(playerid, "PlayerHash", hash, 129);
		if(!isnull(hash) && !isnull(PlayerInfo[playerid][pPassword]) && strcmp(hash, PlayerInfo[playerid][pPassword]) == 0) {
		    SetPVarInt(playerid, "Login", 1);
  			LoadData(playerid);
		} else {
		    new attempt = GetPVarInt(playerid, "LoginAttempt"),
				msg[128];

			if(attempt < SET_MAX_LOGIN_ATTEMPTS){
			    if(attempt == 0) {
			        attempt = 2;
				} else {
			    	attempt++;
				}

			    SetPVarInt(playerid, "LoginAttempt", attempt);
			    format(msg, sizeof(msg), "服务器: 密码错误, 请再次尝试 (%i/%i).", attempt - 1, SET_MAX_LOGIN_ATTEMPTS);
				SendClientMessage(playerid, COLOR_LIGHTRED, msg);
	    		format(msg, sizeof(msg), "欢迎回来, {FF9900}%s{A9C4E4}!\n\n请输入你的密码进行登录:", GetNameWithSpace(playerid));
		    	ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "{FF9900}角色登录", msg, "提交", "离开");
	    		format(msg, sizeof(msg), "Login attempt %i/%i failed for user %s.", attempt - 1, SET_MAX_LOGIN_ATTEMPTS, PlayerInfo[playerid][pName]);
	    		Log(playerid, "Login", msg);
			} else {
			    SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 您对服务器的链接已经被系统强制关闭, 原因: 密码错误.");
			    format(msg, sizeof(msg), "User %s has been kicked for %i/%i wrong login attempts.", PlayerInfo[playerid][pName], SET_MAX_LOGIN_ATTEMPTS, SET_MAX_LOGIN_ATTEMPTS);
	    		Log(playerid, "Kick", msg);
			    KickDelay(playerid);
			}
		}
	}

	return 1;
}

forward OnPlayerViewsRenters(playerid);
public OnPlayerViewsRenters(playerid) {
	new rows,
	    fields,
		result[MAX_PLAYER_NAME],
		list[350],
		vw = GetPlayerVirtualWorld(playerid);

	cache_get_data(rows, fields);

	for(new i = 0; i != rows; i++) {
		cache_get_row(i, 0, result);

		if(isnull(list)) {
 			format(list, sizeof(list), "%s", GetNameWithSpaceEx(result));
		} else {
  			format(list, sizeof(list), "%s\n%s", list, GetNameWithSpaceEx(result));
		}

		format(renters[vw][i], MAX_PLAYER_NAME, "%s", GetNameWithSpaceEx(result));
	}

	if(!isnull(list))
	{
	    if(!PlayerInfo[playerid][pIsHousingInfo]) ShowPlayerDialog(playerid, DIALOG_HOUSE_RENTERS, DIALOG_STYLE_LIST, "{FF9900}房屋操作", list, "移除", "取消");
		else ShowPlayerDialog(playerid, DIALOG_HOUSE_RENTERS, DIALOG_STYLE_MSGBOX, "{FF9900}房屋租客", list, "", "关闭");
		PlayerInfo[playerid][pIsHousingInfo] = false;
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GREY, "目前没有人租用该房屋.");
	}
	return 1;
}

forward OnPlayerCreateNewFaction(playerid, inputtext[]);
public OnPlayerCreateNewFaction(playerid, inputtext[])
{
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows == 0)
	{
	    new query[195];
	    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_factions` (`name`, `leaderrank`, `motd`, `governmental`) VALUES ('%e', 10, 'Welcome to [%e]!', 0)", inputtext, inputtext);
	    mysql_function_query(sqlHandle, query, false, "OnPlayerCreateNewFactionResult", "is", playerid, inputtext);
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GREY, "该组织名称已经存在, 请选择另外一个名称.");
	    ShowPlayerDialog(playerid, DIALOG_SETFACTION_CREATE, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入一个组织名称:", "提交", "取消");
	}

	return 1;
}

forward OnPlayerCreateNewFactionResult(playerid, inputtext[]);
public OnPlayerCreateNewFactionResult(playerid, inputtext[]) {
	new faction,
		msg[145];

	for(new f = 1; f != MAX_FACTIONS; f++) {
		if(isnull(FactionInfo[f][fName])) {
			FactionInfo[f][fID] = cache_insert_id();
			faction = f;
			break;
		}
	}

	format(gVar3000, sizeof(gVar3000), "%s", EOS);
	for(new i = 1; i != 11; i++) {
	    format(FactionRanks[faction][i], 30, "Rank %i", i);
		if(isnull(gVar3000)) {
			mysql_format(sqlHandle, gVar3000, sizeof(gVar3000), "INSERT INTO `samp_factionranks` (`id`, `rank`, `name`) VALUES (%i, %i, 'Rank %i')", FactionInfo[faction][fID], i, i);
		} else {
            mysql_format(sqlHandle, gVar3000, sizeof(gVar3000), "%s, (%i, %i, 'Rank %i')", gVar3000, FactionInfo[faction][fID], i, i);
		}
	}

	mysql_function_query(sqlHandle, gVar3000, false, "", "");
	format(gVar3000, sizeof(gVar3000), "%s", EOS);
   	format(FactionInfo[faction][fName], 40, "%s", inputtext);
   	FactionInfo[faction][fGovern] = 0;
   	FactionInfo[faction][fLeaderrank] = 10;
   	format(FactionInfo[faction][fmotd], 200, "Welcome to [%s]!", inputtext);
   	SetPVarInt(playerid, "FactionManager", faction);
   	format(msg, sizeof(msg), "*** %s %s created a new faction '%s' (Factionslot: %i).", GetAdminRank(playerid), GetNameWithSpace(playerid), inputtext, faction);
    AdminMessageLog(msg, playerid, "SETFACTION - Create New Faction");
    ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
	return 1;
}

forward OnPlayerEditFactionName(playerid, inputtext[]);
public OnPlayerEditFactionName(playerid, inputtext[]) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows == 0) {
	    new query[140],
			faction = GetPVarInt(playerid, "FactionManager");

	    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_factions` SET `name` = '%e' WHERE `id` = %i", inputtext, FactionInfo[faction][fID]);
	    mysql_function_query(sqlHandle, query, false, "", "");
    	format(FactionInfo[faction][fName], 40, "%s", inputtext);
    	format(query, sizeof(query), "*** %s %s changed the faction name of faction slot [%i] to %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), FactionInfo[faction][fID], inputtext);
        AdminMessageLog(query, playerid, "SETFACTION - Edit Faction Name");
        ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
	} else {
	    SendClientMessage(playerid, COLOR_GREY, "组织名称已经存在.");
	    ShowPlayerDialog(playerid, DIALOG_SETFACTION_SETNAME, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入新的组织名称:", "提交", "取消");
	}

	return 1;
}

forward OnPlayerVehicleSpawn(playerid);
public OnPlayerVehicleSpawn(playerid)
{
	new plate[10], query[128], string[128],
		model = cache_get_row_int(0, 2),
		color1 = cache_get_row_int(0, 3),
		color2 = cache_get_row_int(0, 4),
		Float:X = cache_get_row_float(0, 5),
		Float:Y = cache_get_row_float(0, 6),
		Float:Z = cache_get_row_float(0, 7),
		Float:A = cache_get_row_float(0, 8),
		fuel = cache_get_row_int(0, 9),
		Float:health = cache_get_row_float(0, 10),
		insured = cache_get_row_int(0, 36),
		scrapped = cache_get_row_int(0, 37),
		locktype = cache_get_row_int(0, 38),
		vehicle;

	if(scrapped == 1)
	{
	    if(PlayerInfo[playerid][pMoney] >= vehicleData[model - 400][typePrice] / 20 || insured == 1)
		{
		    if(insured == 1)
		    {
		        if(PlayerInfo[playerid][pMoney] >= 500)
		        {
           			SendClientMessage(playerid, COLOR_LIGHTRED, "你的载具已被销毁, 你支付了$500给保险公司将载具进行赔偿处理.");
           			GivePlayerMoneyEx(playerid, -500);
	        	}
	        	else
	        	{
	        	    SendClientMessage(playerid, COLOR_LIGHTRED, "你的载具已经被销毁. 你需要花费 $500 进行取购. (已投保)");
	        	    return 1;
	        	}
		    }
		    else
		    {
		        if(PlayerInfo[playerid][pMoney] >= vehicleData[model - 400][typePrice] / 20)
		        {
			        GivePlayerMoneyEx(playerid, -vehicleData[model - 400][typePrice] / 20);
			        format(string, sizeof(string), "你的载具已经被销毁. 你支付了 $%i 拿回来.", vehicleData[model - 400][typePrice] / 20);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
				}
		    }
		}
		else
		{
      		format(string, sizeof(string), "你的载具已经被销毁. 由于你没有订购保险, 所以全额赔偿! 你需要 $%i 才能赎回.", vehicleData[model - 400][typePrice] / 20);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
		    return 1;
		}
	}
	cache_get_row(0, 11, plate);
	
	vehicle = CreateVehicle(model, X, Y, Z, A, color1, color2, -1);
	if(scrapped == 1)
	{
	    RepairVehicle(vehicle);
	    SetVehicleHealth(vehicle, 1000.0);
	}
	
	VehicleInfo[vehicle][vScrapped] = 0;
	mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `scrapped` = %i WHERE `id` = %i", VehicleInfo[vehicle][vScrapped], VehicleInfo[vehicle][vID]);
	mysql_function_query(sqlHandle, query, false, "", "");
	
	UpdateVehicleDamageStatus(vehicle, cache_get_row_int(0, 31), cache_get_row_int(0, 32), cache_get_row_int(0, 33), cache_get_row_int(0, 34));
	VehicleInfo[vehicle][vPaintjob] = cache_get_row_int(0, 16);
	
	VehicleInfo[vehicle][vColor1] = color1;
	VehicleInfo[vehicle][vColor2] = color2;
	
	SetVehicleNumberPlate(vehicle, plate);
	
	ChangeVehiclePaintjob(vehicle, VehicleInfo[vehicle][vPaintjob]);
	ChangeVehicleColor(vehicle, VehicleInfo[vehicle][vColor1], VehicleInfo[vehicle][vColor2]);
	
	if(health < GM_BREAKDOWN_HEALTH)
	{
	    VehicleInfo[vehicle][vAvoidUpdate] = 1;
		SetVehicleHealth(vehicle, GM_BREAKDOWN_HEALTH - 1);
		VehicleInfo[vehicle][vHealth] = GM_BREAKDOWN_HEALTH - 1;
	}
	else
	{
	    VehicleInfo[vehicle][vAvoidUpdate] = 1;
		SetVehicleHealth(vehicle, health);
		VehicleInfo[vehicle][vHealth] = health;
	}

    cache_get_row(0, 1, VehicleInfo[vehicle][vOwner], sqlHandle, MAX_PLAYER_NAME);
	format(VehicleInfo[vehicle][vPlate], 10, "%s", plate);
	VehicleInfo[vehicle][vX] = X;
	VehicleInfo[vehicle][vY] = Y;
	VehicleInfo[vehicle][vZ] = Z;
	VehicleInfo[vehicle][vA] = A;
 	VehicleInfo[vehicle][vWindows] = 0;
	VehicleInfo[vehicle][vFuel] = fuel;
	VehicleInfo[vehicle][vRented] = cache_get_row_int(0, 15);
	VehicleInfo[vehicle][vID] = cache_get_row_int(0, 0);
	VehicleInfo[vehicle][vBomb] = cache_get_row_int(0, 35);
	VehicleInfo[vehicle][vInsurance] = insured;
	VehicleInfo[vehicle][vScrapped] = scrapped;
	VehicleInfo[vehicle][vLockType] = locktype;
	format(VehicleInfo[vehicle][vOwner], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][pName]);
	
	for(new i = 0; i != 14; i++)
	{
        VehicleInfo[vehicle][vModifications][0] = cache_get_row_int(0, 17); // spoiler
        VehicleInfo[vehicle][vModifications][1] = cache_get_row_int(0, 18); // hood
        VehicleInfo[vehicle][vModifications][2] = cache_get_row_int(0, 19); // roof
        VehicleInfo[vehicle][vModifications][3] = cache_get_row_int(0, 20); // sideskirt
        VehicleInfo[vehicle][vModifications][4] = cache_get_row_int(0, 21); // lamps
        VehicleInfo[vehicle][vModifications][5] = cache_get_row_int(0, 22); // nitro
        VehicleInfo[vehicle][vModifications][6] = cache_get_row_int(0, 23); // exhaust
        VehicleInfo[vehicle][vModifications][7] = cache_get_row_int(0, 24); // wheels
        VehicleInfo[vehicle][vModifications][8] = cache_get_row_int(0, 25); // stereo
        VehicleInfo[vehicle][vModifications][9] = cache_get_row_int(0, 26); // hydraulics
        VehicleInfo[vehicle][vModifications][10] = cache_get_row_int(0, 27); // front bumper
        VehicleInfo[vehicle][vModifications][11] = cache_get_row_int(0, 28); // rear bumper
        VehicleInfo[vehicle][vModifications][12] = cache_get_row_int(0, 29); // vent right
        VehicleInfo[vehicle][vModifications][13] = cache_get_row_int(0, 30); // vent left
        VehicleInfo[vehicle][vModifications][14] = cache_get_row_int(0, 31); // panels
        VehicleInfo[vehicle][vModifications][15] = cache_get_row_int(0, 32); // doors
        VehicleInfo[vehicle][vModifications][16] = cache_get_row_int(0, 33); // lights
        VehicleInfo[vehicle][vModifications][17] = cache_get_row_int(0, 34); // tires

        if(VehicleInfo[vehicle][vModifications][0] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][0]);
		}
		if(VehicleInfo[vehicle][vModifications][1] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][1]);
		}
		if(VehicleInfo[vehicle][vModifications][2] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][2]);
		}
		if(VehicleInfo[vehicle][vModifications][3] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][3]);
		}
		if(VehicleInfo[vehicle][vModifications][4] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][4]);
		}
		if(VehicleInfo[vehicle][vModifications][5] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][5]);
		}
		if(VehicleInfo[vehicle][vModifications][6] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][6]);
		}
		if(VehicleInfo[vehicle][vModifications][7] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][7]);
		}
		if(VehicleInfo[vehicle][vModifications][8] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][8]);
		}
		if(VehicleInfo[vehicle][vModifications][9] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][9]);
		}
		if(VehicleInfo[vehicle][vModifications][10] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][10]);
		}
		if(VehicleInfo[vehicle][vModifications][11] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][11]);
		}
		if(VehicleInfo[vehicle][vModifications][12] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][12]);
		}
		if(VehicleInfo[vehicle][vModifications][13] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][13]);
		}
		if(VehicleInfo[vehicle][vModifications][14] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][14]);
		}
		if(VehicleInfo[vehicle][vModifications][15] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][15]);
		}
		if(VehicleInfo[vehicle][vModifications][16] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][16]);
		}
		if(VehicleInfo[vehicle][vModifications][17] != 0)
		{
			AddVehicleComponent(vehicle, VehicleInfo[vehicle][vModifications][17]);
		}
	}
	SetPVarInt(playerid, "PrivateCar", vehicle);
   	VehicleInfo[vehicle][vType] = VEHICLE_OWNED;
	FuelTimerVar[vehicle] = SetTimerEx("FuelTimer", GM_FUELTIMER, true, "d", vehicle);
	if(IsNotLockableWithoutEngine(model)) {
       	SetVehicleParamsEx(vehicle, 0, 0, 0, 0, 0, 0, 0);
	} else if(IsNotLockableWithEngine(model) == 0) {
	   	SetVehicleParamsEx(vehicle, 0, 0, 0, 1, 0, 0, 0);
	} else {
	    SetVehicleParamsEx(vehicle, 0, 0, 0, 0, 0, 0, 0);
	}

	SendClientMessage(playerid, COLOR_LIGHTGREEN, "你将你的载具取了出来, 你可以在停车位找到.");
	return 1;
}

forward OnPlayerMDCSearchName(playerid, inputtext[]);
public OnPlayerMDCSearchName(playerid, inputtext[]) {
	new rows,
	    fields;

	cache_get_data(rows, fields);

	if(rows == 0)
	{
	    SendClientMessage(playerid, COLOR_GREY, "该名称无法在LAPD数据库找到.");
   		ShowPlayerDialog(playerid, DIALOG_MDC_NAME, DIALOG_STYLE_INPUT, "{FF9900}LAPD", "请输入公民名称:", "提交", "取消");
	}
	else
	{
	    SetPVarString(playerid, "MDCCheck", inputtext);
    	ShowPlayerDialog(playerid, DIALOG_MDC_INFO, DIALOG_STYLE_LIST, "{FF9900}LAPD", "个人信息\n财产信息\n犯罪案底\n登出", "选择", "取消");
	}

	return 1;
}

forward OnDialogBadge(playerid, inputtext);
public OnDialogBadge(playerid, inputtext)
{
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows == 0)
	{
	    new user = GetPVarInt(playerid, "CreateBadge"),
			msg[110];

		PlayerInfo[user][pBadge] = inputtext;
		format(msg, sizeof(msg), "** %s %s 被指定徽章号码为 '%i'.", GetFactionRank(user), GetNameWithSpace(user), inputtext);
		SendClientMessage(playerid, COLOR_WHITE, msg);
		format(msg, sizeof(msg), "** %s %s 将徽章号码 '%i' 指定到你的职位上.", GetFactionRank(playerid), GetNameWithSpace(playerid), inputtext);
		SendClientMessage(user, COLOR_WHITE, msg);
		SetPVarInt(playerid, "CreateBadge", 0);
		mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `badge` = %i WHERE `user` = '%e'", inputtext, PlayerInfo[user][pName]);
		mysql_function_query(sqlHandle, msg, false, "", "");
	} else {
		SendClientMessage(playerid, COLOR_GREY, "这个徽章号码已分配给其他成员, 请重新选择证件号码.");
		if(PlayerInfo[playerid][pFaction] == 1) {
			ShowPlayerDialog(playerid, DIALOG_BADGE, DIALOG_STYLE_INPUT, "{FF9900}徽章", "请输入1-9999之间的数字:", "提交", "取消");
		} else if(PlayerInfo[playerid][pFaction] == 3) {
		    ShowPlayerDialog(playerid, DIALOG_BADGE, DIALOG_STYLE_INPUT, "{FF9900}徽章", "请输入1-9999之间的数字:", "提交", "取消");
		}
	}

	return 1;
}

forward OnCommandBuyInsurance(playerid);//
public OnCommandBuyInsurance(playerid)
{
	new fields,
	    rows,
		vehicle,
		string [128];

	cache_get_data(rows, fields);
	for(new i = 0; i != rows; i++)
 	{
		vehicle = cache_get_row_int(i, 0);
		if(PlayerInfo[playerid][pDonateRank] == 3)
		{
	        if(PlayerInfo[playerid][pMoney] >= vehicleData[vehicle - 400][typePrice] / 16)
			{
	  			if(VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vInsurance] == 0)
				{
		   			new query[240];
					VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vInsurance] = 1;
					mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `insurance` = %i WHERE `id` = %i", VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vInsurance], VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vID]);
					mysql_function_query(sqlHandle, query, false, "", "");
					GivePlayerMoneyEx(playerid, -vehicleData[vehicle - 400][typePrice] / 16);
					GivePlayerMoneyEx(playerid, -500);
  					format(string, sizeof(string), "你支付了 $%i 为该车投保并且额外支付了 $500 手续费.", vehicleData[vehicle - 400][typePrice] / 16);
	 				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				}
				else
				{
	   				SendClientMessage(playerid, COLOR_LIGHTRED, "你之前已经为该车投保了.");
				}
			}
			else
			{
				format(string, sizeof(string), "你需要 $%i 才能为该车投保.", vehicleData[vehicle - 400][typePrice] / 16);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
			}
		}
		else
		{
		    if(PlayerInfo[playerid][pMoney] >= vehicleData[vehicle - 400][typePrice] / 8)
			{
	  			if(VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vInsurance] == 0)
				{
		   			new query[240];
					VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vInsurance] = 1;
					mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `insurance` = %i WHERE `id` = %i", VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vInsurance], VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vID]);
					mysql_function_query(sqlHandle, query, false, "", "");
					GivePlayerMoneyEx(playerid, -vehicleData[vehicle - 400][typePrice] / 16);
					GivePlayerMoneyEx(playerid, -500);
  					format(string, sizeof(string), "你支付了 $%i 为该车投保并且额外支付了 $500 手续费.", vehicleData[vehicle - 400][typePrice] / 16);
	 				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				}
				else
				{
	   				SendClientMessage(playerid, COLOR_LIGHTRED, "你之前已经为该车投保了.");
				}
			}
			else
			{
				format(string, sizeof(string), "你需要 $%i 才能为该车投保并且还需要额外支付 $500 手续费.", vehicleData[vehicle - 400][typePrice] / 8);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
			}
		}
 	}
	return 1;
}

forward OnCommandCreateShell(playerid);
public OnCommandCreateShell(playerid)
{
	new string[128];
	new fields,
            rows,
                serial,
                	Float:X,
						Float:Y,
			 				Float:Z;
			 				
	GetPlayerPos(playerid, X, Y, Z);
	cache_get_data(rows, fields);
	for(new i = 0; i != rows; i++)
	{
		serial = cache_get_row_int(i, 0);
		if(GetPlayerWeapon(playerid) == 31 && PlayerInfo[playerid][pItemType][0] == 30) // m4s
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 5.5645MM NATO");
					else format(string, sizeof(string), "弹壳: 5.5645MM NATO [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 31 && PlayerInfo[playerid][pItemType][0] == 219)
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 5.5645MM NATO");
					else format(string, sizeof(string), "弹壳: 5.5645MM NATO [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 30 && PlayerInfo[playerid][pItemType][0] == 214) // aks
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 7.6239MM");
					else format(string, sizeof(string), "弹壳: 7.6239MM [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 30 && PlayerInfo[playerid][pItemType][0] == 255)
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 7.6239MM");
					else format(string, sizeof(string), "弹壳: 7.6239MM [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 30 && PlayerInfo[playerid][pItemType][0] == 221)
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 5.4539MM");
					else format(string, sizeof(string), "弹壳: 5.4539MM [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 32 && PlayerInfo[playerid][pItemType][0] == 254) // tecs
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 9x19MM");
					else format(string, sizeof(string), "弹壳: 9x19MM [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 32 && PlayerInfo[playerid][pItemType][0] == 215)
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 9X19MM (TEC-9)");
					else format(string, sizeof(string), "弹壳: 9X19MM (TEC-9) [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 28 && PlayerInfo[playerid][pItemType][0] == 222) // Uzi's
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: .22 LR");
					else format(string, sizeof(string), "弹壳: .22 LR [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 28 && PlayerInfo[playerid][pItemType][0] == 212)
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 9X19MM");
					else format(string, sizeof(string), "弹壳: 9X19MM [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 25 && PlayerInfo[playerid][pItemType][0] == 209) // Remington 870
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 12 GAUGE");
					else format(string, sizeof(string), "弹壳: 12 GAUGE [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 29 && PlayerInfo[playerid][pItemType][0] == 213) // mp5s
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 10MM AUTO");
					else format(string, sizeof(string), "弹壳: 10MM AUTO [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 29 && PlayerInfo[playerid][pItemType][0] == 220)
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: .45 ACP");
					else format(string, sizeof(string), "弹壳: .45 ACP [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 34 && PlayerInfo[playerid][pItemType][0] == 217) // sniper
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 7.6254MMR");
					else format(string, sizeof(string), "弹壳: 7.6254MMR [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 24 && PlayerInfo[playerid][pItemType][0] == 223) // deagles
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 12.733MM");
					else format(string, sizeof(string), "弹壳: 12.733MM [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 24 && PlayerInfo[playerid][pItemType][0] == 218)
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 9x19MM");
					else format(string, sizeof(string), "弹壳: 9x19MM [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 24 && PlayerInfo[playerid][pItemType][0] == 253)
		{
		    for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: 921MM");
					else format(string, sizeof(string), "弹壳: 921MM [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 24 && PlayerInfo[playerid][pItemType][0] == 211)
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: .40 S&W");
					else format(string, sizeof(string), "弹壳: .40 S&W [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 24 && PlayerInfo[playerid][pItemType][0] == 208)
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: .45 GAP");
					else format(string, sizeof(string), "弹壳: .45 GAP [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
		if(GetPlayerWeapon(playerid) == 22 && PlayerInfo[playerid][pItemType][0]) // colt
		{
			for(new shell = 0; shell < sizeof(ShellInfo); shell++)
    	    {
    	        if(ShellInfo[shell][shellDropped] == 0)
				{
	    	        GetPlayerPos(playerid, X, Y, Z);
					if(!serial) format(string, sizeof(string), "弹壳: .45 ACP");
					else format(string, sizeof(string), "弹壳: .45 GAP [%i]", serial);
	    			ShellInfo[shell][ShellCasing] = CreateDynamic3DTextLabel(string, COLOR_LIGHTRED, X, Y, Z-1, 2.0);
	    			ShellInfo[shell][shellDropped] = 1;
	       			ShellInfo[shell][shellX] = X;
	    			ShellInfo[shell][shellY] = Y;
	    			ShellInfo[shell][shellZ] = Z;
		    		ShellInfo[shell][shellWorld] = GetPlayerVirtualWorld(playerid);
		    		ShellInfo[shell][shellTime] = 15;
		    		ShellInfo[shell][shellSerial] = serial;
		    		return 1;
   				}
			}
		}
	}
 	return 1;
}

forward OnCommandViewSerial(playerid);
public OnCommandViewSerial(playerid)
{
	new fields,
	    rows,
		serial;

	cache_get_data(rows, fields);
	for(new i = 0; i != rows; i++)
 	{
		serial = cache_get_row_int(i, 0);
        if(serial != 0)
        {
			new string[128];
		 	format(string, sizeof(string), "该武器序列号为 %i.", serial);
		 	SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTGREEN, "该武器没有序列号.");
		}
 	}
	return 1;
}

forward OnCommandSerialOwner(playerid);
public OnCommandSerialOwner(playerid)
{
	new fields,
	    rows,
		serial,
		owner[MAX_PLAYER_NAME];

	cache_get_data(rows, fields);
	for(new i = 0; i != rows; i++)
 	{
		serial = cache_get_row_int(i, 0);
        cache_get_row(i, 1, owner, 1, 24);
        
		new string[128];
	 	SendClientMessage(playerid, COLOR_LIGHTRED, "------------------------------------------------------");
	 	format(string, sizeof(string), "序列号: %i | 拥有人: %s", serial, owner);
	 	SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
	 	SendClientMessage(playerid, COLOR_LIGHTRED, "------------------------------------------------------");
 	}
	return 1;
}

						
forward OnCommandRetrieveQuote(playerid);
public OnCommandRetrieveQuote(playerid)
{
	new fields,
	    rows,
		vehicle;

	cache_get_data(rows, fields);
	for(new i = 0; i != rows; i++)
 	{
		vehicle = cache_get_row_int(i, 0);

		new string[128];
	 	SendClientMessage(playerid, COLOR_LIGHTRED, "------------------------------------------------------");
	 	format(string, sizeof(string), "载具: %s ", vehicleData[vehicle - 400][typeName]);
	 	SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
	 	if(PlayerInfo[playerid][pDonateRank] > 2)
	 	{
			format(string, sizeof(string), "保险价格: $%i (半价)", vehicleData[vehicle - 400][typePrice] / 16);
		 	SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
	 	}
	 	else
	 	{
	 	    format(string, sizeof(string), "保险价格: $%i", vehicleData[vehicle - 400][typePrice] / 8);
		 	SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
	 	}
	 	SendClientMessage(playerid, COLOR_LIGHTRED, "------------------------------------------------------");
 	}
	return 1;
}
	
forward OnCommandVehicleSpawn(playerid);
public OnCommandVehicleSpawn(playerid)
{
	new fields,
	    rows,
		vehicle;

	cache_get_data(rows, fields);
	if(rows == 0)
	{
        SendClientMessage(playerid, COLOR_GREY, "你没有任何车辆.");
	}
	else
	{
	    format(gVar3000, sizeof(gVar3000), "%s", EOS);
 		for(new i = 0; i != rows; i++)
		 {
 		    vehicle = cache_get_row_int(i, 0);
     		if(isnull(gVar3000))
			 {
     		    format(gVar3000, sizeof(gVar3000), "%s", vehicleData[vehicle - 400][typeName]);
     		}
		 	else
		 	{
     		    format(gVar3000, sizeof(gVar3000), "%s\n%s", gVar3000, vehicleData[vehicle - 400][typeName]);
     		}
		}

		ShowPlayerDialog(playerid, DIALOG_VEHICLESPAWN, DIALOG_STYLE_LIST, "{FF9900}载具", gVar3000, "取车", "取消");
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
	}

	return 1;
}

forward OnCommandCharge(playerid);
public OnCommandCharge(playerid) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows == 0) {
        SendClientMessage(playerid, COLOR_GREY, "该户主无法在 Los Angeles Police Department 数据库中找到");
	} else {
        ShowPlayerDialog(playerid, DIALOG_LAPD_CHARGE, DIALOG_STYLE_INPUT, "{FF9900}LAPD", "请输入描述信息:", "指控", "取消");
	}

	return 1;
}

forward OnDialogPayCitations(playerid);
public OnDialogPayCitations(playerid)
{
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows > 0)
	{
	    new i = 0;
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
        while(i != rows && i < MAX_TICKETS && strlen(gVar3000) < 3000 - 175)
		{
            TicketInfo[playerid][i][tID] = cache_get_row_int(i, 0);
            cache_get_row(i, 1, TicketInfo[playerid][i][tReason], 1, 120);
            TicketInfo[playerid][i][tCharge] = cache_get_row_int(i, 2);
            cache_get_row(i, 3, TicketInfo[playerid][i][tDate], 1, 30);
            cache_get_row(i, 4, TicketInfo[playerid][i][tIssuer], 1, MAX_PLAYER_NAME);
            cache_get_row(i, 5, TicketInfo[playerid][i][tAgency], 1, 30);
            TicketInfo[playerid][i][tTimestamp] = cache_get_row_int(i, 6);
            if(isnull(gVar3000))
			{
                format(gVar3000, sizeof(gVar3000), "[LAPD] %s - $%i - %s", TicketInfo[playerid][i][tDate], TicketInfo[playerid][i][tCharge], TicketInfo[playerid][i][tReason]);
            }
			else
			{
                format(gVar3000, sizeof(gVar3000), "%s\n[LAPD] %s - $%i - %s", gVar3000, TicketInfo[playerid][i][tDate], TicketInfo[playerid][i][tCharge], TicketInfo[playerid][i][tReason]);
			}

			i++;
		}

		ShowPlayerDialog(playerid, DIALOG_PAYCITATIONS, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", gVar3000, "浏览", "取消");
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
	} else {
        SendClientMessage(playerid, COLOR_GREY, "你没有任何未支付的罚单.");
	}

	return 1;
}

forward OnCommandLAPDViewWarrants(playerid);
public OnCommandLAPDViewWarrants(playerid)
{
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows > 0)
	{
	    new i = 0;
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
        while(i != rows && i < MAX_WARRANTS && strlen(gVar3000) < 3000 - 175)
		{
            WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wID] = cache_get_row_int(i, 0);
            cache_get_row(i, 1, WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wReason], 1, 120);
            cache_get_row(i, 2, WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wDate], 1, 30);
            cache_get_row(i, 3, WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wIssuer], 1, MAX_PLAYER_NAME);
            //cache_get_row(i, 4, WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wAgency], 1, 30);
            //WarrantInfo[playerid][i][wTimestamp] = cache_get_row_int(i, 5);
            if(isnull(gVar3000))
			{
                format(gVar3000, sizeof(gVar3000), "日期: %s - 原因: %s",WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wDate], WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wReason]);
            }
			else
			{
                format(gVar3000, sizeof(gVar3000), "%s\n日期: %s - 原因: %s", gVar3000, WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wDate], WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wReason]);
			}

			i++;
		}
		ShowPlayerDialog(playerid, DIALOG_WARRANTS, DIALOG_STYLE_LIST, "{FF9900}案底", gVar3000, "浏览", "取消");
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
	}
	else
	{
        SendClientMessage(playerid, COLOR_GREY, "该嫌疑人没有任何案底.");
	}

	return 1;
}

forward OnCommandLAPDViewCitations(playerid);
public OnCommandLAPDViewCitations(playerid)
{
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows > 0)
	{
	    new i = 0;
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
        while(i != rows && i < MAX_TICKETS && strlen(gVar3000) < 3000 - 175)
		{
            TicketInfo[PlayerInfo[playerid][pSearchID]][i][tID] = cache_get_row_int(i, 0);
            cache_get_row(i, 1, TicketInfo[PlayerInfo[playerid][pSearchID]][i][tReason], 1, 120);
            TicketInfo[PlayerInfo[playerid][pSearchID]][i][tCharge] = cache_get_row_int(i, 2);
            cache_get_row(i, 3, TicketInfo[PlayerInfo[playerid][pSearchID]][i][tDate], 1, 30);
            cache_get_row(i, 4, TicketInfo[PlayerInfo[playerid][pSearchID]][i][tIssuer], 1, MAX_PLAYER_NAME);
            cache_get_row(i, 5, TicketInfo[PlayerInfo[playerid][pSearchID]][i][tAgency], 1, 30);
            TicketInfo[playerid][i][tTimestamp] = cache_get_row_int(i, 6);
            if(isnull(gVar3000))
			{
                format(gVar3000, sizeof(gVar3000), "[LAPD] %s - $%i - %s", TicketInfo[PlayerInfo[playerid][pSearchID]][i][tDate], TicketInfo[PlayerInfo[playerid][pSearchID]][i][tCharge], TicketInfo[PlayerInfo[playerid][pSearchID]][i][tReason]);
            }
			else
			{
                format(gVar3000, sizeof(gVar3000), "%s\n[LAPD] %s - $%i - %s", gVar3000, TicketInfo[PlayerInfo[playerid][pSearchID]][i][tDate], TicketInfo[PlayerInfo[playerid][pSearchID]][i][tCharge], TicketInfo[PlayerInfo[playerid][pSearchID]][i][tReason]);
			}

			i++;
		}

		ShowPlayerDialog(playerid, DIALOG_CITATIONS_PD, DIALOG_STYLE_LIST, "{FF9900}罚单", gVar3000, "浏览", "取消");
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
	}
	else
	{
        SendClientMessage(playerid, COLOR_GREY, "该嫌疑人没有任何罚单.");
	}
	return 1;
}

forward OnCommandViewCitations(playerid);
public OnCommandViewCitations(playerid)
{
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows > 0)
	{
	    new i = 0;
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
        while(i != rows && i < MAX_TICKETS && strlen(gVar3000) < 3000 - 175)
		{
            TicketInfo[playerid][i][tID] = cache_get_row_int(i, 0);
            cache_get_row(i, 1, TicketInfo[playerid][i][tReason], 1, 120);
            TicketInfo[playerid][i][tCharge] = cache_get_row_int(i, 2);
            cache_get_row(i, 3, TicketInfo[playerid][i][tDate], 1, 30);
            cache_get_row(i, 4, TicketInfo[playerid][i][tIssuer], 1, MAX_PLAYER_NAME);
            cache_get_row(i, 5, TicketInfo[playerid][i][tAgency], 1, 30);
            TicketInfo[playerid][i][tTimestamp] = cache_get_row_int(i, 6);
            if(isnull(gVar3000))
			{
                format(gVar3000, sizeof(gVar3000), "[LAPD] %s - $%i - %s", TicketInfo[playerid][i][tDate], TicketInfo[playerid][i][tCharge], TicketInfo[playerid][i][tReason]);
            }
			else
			{
                format(gVar3000, sizeof(gVar3000), "%s\n[LAPD] %s - $%i - %s", gVar3000, TicketInfo[playerid][i][tDate], TicketInfo[playerid][i][tCharge], TicketInfo[playerid][i][tReason]);
			}

			i++;
		}

		ShowPlayerDialog(playerid, DIALOG_CITATIONS, DIALOG_STYLE_LIST, "{FF9900}罚单", gVar3000, "浏览", "取消");
		format(gVar3000, sizeof(gVar3000), "%s", EOS);
	} else {
        SendClientMessage(playerid, COLOR_GREY, "你没有任何罚单.");
	}

	return 1;
}

forward OnCommandChangeName(playerid, name[], user);
public OnCommandChangeName(playerid, name[], user) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows == 0) {
	    new query[80];
	    mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_usednames` WHERE `user` = '%e'", name);
	    mysql_function_query(sqlHandle, query, true, "OnCommandChangeNameUsedNames", "isi", playerid, name, user);
	} else {
	    SendClientMessage(playerid, COLOR_GREY, "该名称已经被其他人使用了, 你可以尝试更换一个名称.");
	}

	return 1;
}

forward OnPlayerCommandChangeName(playerid, name[]);
public OnPlayerCommandChangeName(playerid, name[]) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows == 0) {
	    new query[80];
	    mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_usednames` WHERE `user` = '%e'", name);
	    mysql_function_query(sqlHandle, query, true, "OnPlayerCommandNamechangeUsed", "is", playerid, name);
	} else {
	    SendClientMessage(playerid, COLOR_GREY, "该名称已经被其他人使用了, 你可以尝试更换一个名称.");
	}

	return 1;
}

forward OnPlayerCommandNamechangeUsed(playerid, name[]);
public OnPlayerCommandNamechangeUsed(playerid, name[]) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows == 0)
	{
	    new query[150];

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `user` = '%e' WHERE `user` = '%e'", name, PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_businesses` SET `owner` = '%e' WHERE `owner` = '%e'", name, PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `owner` = '%e' WHERE `owner` = '%e'", name, PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `owner` = '%e' WHERE `owner` = '%e'", name, PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_charges` SET `user` = '%e' WHERE `user` = '%e'", name, PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = '%e' WHERE `owner` = '%e'", name, PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_skins` SET `owner` = '%e' WHERE `owner` = '%e'", name, PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_tickets` SET `user` = '%e' WHERE `user` = '%e'", name, PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_clothes` SET `owner` = '%e' WHERE `owner` = '%e'", name, PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_usednames` (`user`) VALUES ('%e')", PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		format(query, sizeof(query), "*** WARNING: You changed your name to %s.", GetNameWithSpaceEx(name));
		SendClientMessage(playerid, COLOR_LIGHTRED, query);
		format(query, sizeof(query), "*** %s changed %s name to %s.", GetNameWithSpace(playerid), HisHer(playerid), GetNameWithSpaceEx(name));
		Log(playerid, "Change Name", query);

		for(new v = 0; v != MAX_VEHICLES; v++)
		{
			if(!isnull(VehicleInfo[v][vOwner]) && strcmp(VehicleInfo[v][vOwner], PlayerInfo[playerid][pName]) == 0) {
				format(VehicleInfo[v][vOwner], MAX_PLAYER_NAME, "%s", name);
			}
		}
		for(new h = 0; h != MAX_HOUSES; h++)
		{
			if(!isnull(HouseInfo[h][hOwner]) && strcmp(HouseInfo[h][hOwner], PlayerInfo[playerid][pName]) == 0) {
				format(HouseInfo[h][hOwner], MAX_PLAYER_NAME, "%s", name);
			}
		}
		for(new b = 0; b != MAX_BUSINESSES; b++)
		{
			if(!isnull(BusinessInfo[b][bOwner]) && strcmp(BusinessInfo[b][bOwner], PlayerInfo[playerid][pName]) == 0) {
				format(BusinessInfo[b][bOwner], MAX_PLAYER_NAME, "%s", name);
			}
		}
		foreach(new boom : iter_boomboxes)
		{
			if(!isnull(boomboxes[boom][boomOwner]) && strcmp(PlayerInfo[playerid][pName], boomboxes[boom][boomOwner]) == 0) {
				format(boomboxes[boom][boomOwner], MAX_PLAYER_NAME, name);
			}
		}
        format(PlayerInfo[playerid][pName], MAX_PLAYER_NAME, "%s", name);
		SetPlayerName(playerid, name);
		if(PlayerInfo[playerid][pNamechanges] > 0)
		{
			PlayerInfo[playerid][pNamechanges]--;
			SendClientMessage(playerid, COLOR_LIGHTRED, "你消耗了一张更名卡.");
		}
		else
		{
		    GivePlayerMoneyEx(playerid, -25000);
		    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 $25,000 才能更名.");
		}
		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `namechanges` = `namechanges` - 1 WHERE `user` = '%e'", PlayerInfo[playerid][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GREY, "该名称已经被服务器拉入黑名单了, 请选择其他名称.");
	}

	return 1;
}

forward OnCommandChangeNameUsedNames(playerid, name[], user);
public OnCommandChangeNameUsedNames(playerid, name[], user) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows == 0) {
	    new msgAdm[150],
			msg_user[140],
			query[120];

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `user` = '%e' WHERE `user` = '%e'", name, PlayerInfo[user][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_businesses` SET `owner` = '%e' WHERE `owner` = '%e'", name, PlayerInfo[user][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `owner` = '%e' WHERE `owner` = '%e'", name, PlayerInfo[user][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `owner` = '%e' WHERE `owner` = '%e'", name, PlayerInfo[user][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_charges` SET `user` = '%e' WHERE `user` = '%e'", name, PlayerInfo[user][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = '%e' WHERE `owner` = '%e'", name, PlayerInfo[user][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_skins` SET `owner` = '%e' WHERE `owner` = '%e'", name, PlayerInfo[user][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_tickets` SET `user` = '%e' WHERE `user` = '%e'", name, PlayerInfo[user][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_clothes` SET `owner` = '%e' WHERE `owner` = '%e'", name, PlayerInfo[user][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_usednames` (`user`) VALUES ('%e')", PlayerInfo[user][pName]);
		mysql_function_query(sqlHandle, query, false, "", "");

		format(msgAdm, sizeof(msgAdm), "*** %s %s 更改了 %s 名字到 %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), GetNameWithSpaceEx(name));
		format(msg_user, sizeof(msg_user), "*** 警告: %s %s 将你的名字改为 %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(name));
		SendClientMessage(user, COLOR_LIGHTRED, msg_user);
		AdminMessageLog(msgAdm, playerid, "Change Name");

		for(new v = 0; v != MAX_VEHICLES; v++) {
			if(!isnull(VehicleInfo[v][vOwner]) && strcmp(VehicleInfo[v][vOwner], PlayerInfo[user][pName]) == 0) {
				format(VehicleInfo[v][vOwner], MAX_PLAYER_NAME, "%s", name);
			}
		}

		for(new h = 0; h != MAX_HOUSES; h++) {
			if(!isnull(HouseInfo[h][hOwner]) && strcmp(HouseInfo[h][hOwner], PlayerInfo[user][pName]) == 0) {
				format(HouseInfo[h][hOwner], MAX_PLAYER_NAME, "%s", name);
			}
		}

		for(new b = 0; b != MAX_BUSINESSES; b++) {
			if(!isnull(BusinessInfo[b][bOwner]) && strcmp(BusinessInfo[b][bOwner], PlayerInfo[user][pName]) == 0) {
				format(BusinessInfo[b][bOwner], MAX_PLAYER_NAME, "%s", name);
			}
		}
		
		foreach(new boom : iter_boomboxes) {
			if(!isnull(boomboxes[boom][boomOwner]) && strcmp(PlayerInfo[user][pName], boomboxes[boom][boomOwner]) == 0) {
				format(boomboxes[boom][boomOwner], MAX_PLAYER_NAME, name);
			}
		}

        format(PlayerInfo[user][pName], MAX_PLAYER_NAME, "%s", name);
		SetPlayerName(user, name);
	} else {
	    SendClientMessage(playerid, COLOR_GREY, "该名称已经被服务器拉入黑名单了, 请选择其他名称.");
	}

	return 1;
}

forward OnScriptLoadFactionVehicles();
public OnScriptLoadFactionVehicles() {
	new rows,
	    fields,
		vehicle,
		model,
		color1,
		color2,
		Float:x,
		Float:y,
		Float:z,
		Float:a,
		faction,
		v;

	cache_get_data(rows, fields);
	for(new r = 0; r != rows; r++) {
		model = cache_get_row_int(r, 1);
		color1 = cache_get_row_int(r, 2);
		color2 = cache_get_row_int(r, 3);
		x = cache_get_row_float(r, 4);
		y = cache_get_row_float(r, 5);
		z = cache_get_row_float(r, 6);
		a = cache_get_row_float(r, 7);

		vehicle = CreateVehicle(model, x, y, z, a, color1, color2, -1);
		if(IsNotLockableWithoutEngine(model)) {
        	SetVehicleParamsEx(vehicle, 0, 0, 0, 0, 0, 0, 0);
		} else if(IsNotLockableWithEngine(model) == 0) {
	    	SetVehicleParamsEx(vehicle, 0, 0, 0, 1, 0, 0, 0);
		} else {
		    SetVehicleParamsEx(vehicle, 0, 0, 0, 0, 0, 0, 0);
		}

		faction = cache_get_row_int(r, 8);
		cache_get_row(r, 9, VehicleInfo[vehicle][vPlate], sqlHandle, 10);
		VehicleInfo[vehicle][vFVID] = cache_get_row_int(r, 0);
		VehicleInfo[vehicle][vColor1] = color1;
		VehicleInfo[vehicle][vColor2] = color2;
		VehicleInfo[vehicle][vX] = x;
		VehicleInfo[vehicle][vY] = y;
		VehicleInfo[vehicle][vZ] = z;
		VehicleInfo[vehicle][vA] = a;
		VehicleInfo[vehicle][vHealth] = 1000;
		SetVehicleNumberPlate(vehicle, VehicleInfo[vehicle][vPlate]);
        VehicleInfo[vehicle][vFuel] = vehicleData[model - 400][tank];
        VehicleInfo[vehicle][vModifications][8] = 1086;
        FuelTimerVar[vehicle] = SetTimerEx("FuelTimer", GM_FUELTIMER, true, "d", vehicle);
        for(v = 0; v != MAX_FACTIONS; v++) {
			if(FactionInfo[v][fID] == faction) {
				VehicleInfo[vehicle][vFaction] = v;
				break;
			}
		}
	}

    printf("[fac_veh_database] ->_ %i 辆组织车辆已成功加载.", rows);
	return 1;
}

forward OnScriptLoadHouses(setlock);
public OnScriptLoadHouses(setlock) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	for(new i = 0; i != rows; i++) {
		HouseInfo[i][hID] = cache_get_row_int(i, 0);
		HouseInfo[i][hX] = cache_get_row_float(i, 1);
	    HouseInfo[i][hY] = cache_get_row_float(i, 2);
	    HouseInfo[i][hZ] = cache_get_row_float(i, 3);
	    HouseInfo[i][hInt] = cache_get_row_int(i, 4);
		HouseInfo[i][hPrice] = cache_get_row_int(i, 5);
		cache_get_row(i, 6, HouseInfo[i][hOwner], sqlHandle, MAX_PLAYER_NAME);
		HouseInfo[i][hMoney] = cache_get_row_int(i, 7);
		HouseInfo[i][hRentalFee] = cache_get_row_int(i, 8);
		HouseInfo[i][hHousenumber] = cache_get_row_int(i, 9);
		cache_get_row(i, 10, HouseInfo[i][hStreet], sqlHandle, 40);
		HouseInfo[i][hZip] = cache_get_row_int(i, 11);
		HouseInfo[i][hTaxes] = cache_get_row_int(i, 12);
		HouseInfo[i][hWeed] = cache_get_row_int(i, 13);
		HouseInfo[i][hCocaine] = cache_get_row_int(i, 14);
		HouseInfo[i][hEcstasy] = cache_get_row_int(i, 15);
		HouseInfo[i][hCrack] = cache_get_row_int(i, 16);
		HouseInfo[i][hHeroin] = cache_get_row_int(i, 17);
		HouseInfo[i][hAlarm] = cache_get_row_int(i, 18);
        cache_get_row(i, 19, HouseInfo[i][hAlarmPassword], sqlHandle, 10);
        
        if(strfind(HouseInfo[i][hOwner], "_") != -1 && setlock == 1)
		{
			HouseInfo[i][hLocked] = 1;
		}

		houseCP[i] = CreateDynamicCP(HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ] - 1, 1.5, -1, -1, -1, 5.0);
	}

	print("[prop_database] ->_ 房屋已经成功加载.");
	return 1;
}

forward OnScriptLoadFactions();
public OnScriptLoadFactions() {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	for(new i = 0; i != rows; i++) {
	    FactionInfo[i + 1][fID] = cache_get_row_int(i, 0);
		cache_get_row(i, 1, FactionInfo[i + 1][fName], sqlHandle, 40);
		FactionInfo[i + 1][fLeaderrank] = cache_get_row_int(i, 2);
        cache_get_row(i, 3, FactionInfo[i + 1][fmotd], sqlHandle, 200);
        FactionInfo[i + 1][fGovern] = cache_get_row_int(i, 4);
        FactionInfo[i + 1][fRights_Weapons] = cache_get_row_int(i, 5);
        FactionInfo[i + 1][fRights_Narcotics] = cache_get_row_int(i, 6);
        FactionInfo[i + 1][fRights_Scrap] = cache_get_row_int(i, 7);
	}

    printf("[fac_database] ->_ %i 个组织已成功加载.", rows);
    mysql_function_query(sqlHandle, "SELECT `id`, `rank`, `name` FROM `samp_factionranks`", true, "OnScriptLoadFactionRanks", "");
    return 1;
}

forward OnScriptLoadFactionRanks();
public OnScriptLoadFactionRanks() {
    new rows,
	    fields,
	    id,
		rank,
		result[30],
		a;

	cache_get_data(rows, fields);
	for(new i = 0; i != rows; i++) {
	    id = cache_get_row_int(i, 0);
		rank = cache_get_row_int(i, 1);
		cache_get_row(i, 2, result);

		for(a = 0; a != MAX_FACTIONS; a++) {
            if(FactionInfo[a][fID] == id) {
				format(FactionRanks[a][rank], 30, "%s", result);
				break;
			}
		}
	}

	printf("[fac_rank_database] ->_ %i 个组织阶级已成功加载.", rows);
	return 1;
}

forward OnScriptLoadBusinesses();
public OnScriptLoadBusinesses() {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	for(new i = 0; i != rows; i++) {
	    BusinessInfo[i][bID] = cache_get_row_int(i, 0);
	    BusinessInfo[i][bX] = cache_get_row_float(i, 1);
	    BusinessInfo[i][bY] = cache_get_row_float(i, 2);
	    BusinessInfo[i][bZ] = cache_get_row_float(i, 3);
	    BusinessInfo[i][bInt] = cache_get_row_int(i, 4);
	    BusinessInfo[i][bPrice] = cache_get_row_int(i, 5);
	    BusinessInfo[i][bMoney] = cache_get_row_int(i, 6);
	    cache_get_row(i, 7, BusinessInfo[i][bOwner], sqlHandle, MAX_PLAYER_NAME);
	    cache_get_row(i, 8, BusinessInfo[i][bName], sqlHandle, 20);
	    BusinessInfo[i][bFee] = cache_get_row_int(i, 9);
	    cache_get_row(i, 10, BusinessInfo[i][bStreet], sqlHandle, 40);
	    BusinessInfo[i][bHousenumber] = cache_get_row_int(i, 11);
	    BusinessInfo[i][bBusinesszip] = cache_get_row_int(i, 12);
	    BusinessInfo[i][bTaxes] = cache_get_row_int(i, 13);
	    BusinessInfo[i][bFaction] = cache_get_row_int(i, 14);
	    BusinessInfo[i][bGoods] = cache_get_row_int(i, 15);
		businessCP[i] = CreateDynamicCP(BusinessInfo[i][bX], BusinessInfo[i][bY], BusinessInfo[i][bZ] - 1, 1.5, -1, -1, -1, 20.0);
	}

    print("[biz_database] ->_ 产业系统已成功加载.");
	return 1;
}

forward OnGetIPUnban(playerid, user[]);
public OnGetIPUnban(playerid, user[]) {
	new ip[16],
		msg[128];
		
	cache_get_row(0, 0, ip);
	if(strfind(ip, ".") == -1) {
		return SendClientMessage(playerid, COLOR_GREY, "用户在数据库中不存在.");
	}

	mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `banned` = 0 WHERE `user` = '%e'", user);
	mysql_function_query(sqlHandle, msg, false, "", "");
	format(msg, sizeof(msg), "unbanip %s", ip);
	SendRconCommand(msg);
	SendRconCommand("reloadbans");
	format(msg, sizeof(msg), "*** %s %s 解封了 %s (Unbanned IP: %s).", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(user), ip);
	AdminMessageLog(msg, playerid, "Unban");
	return 1;
}

forward OnAdminBanAcc(playerid, username[], reason[]);
public OnAdminBanAcc(playerid, username[], reason[]) {
	new ip[16],
		query[400],
		msg[128];

	cache_get_row(0, 0, ip);
	if(strfind(ip, ".") == -1) {
		return SendClientMessage(playerid, COLOR_GREY, "用户在数据库中不存在.");
	}

    format(query, sizeof(query), "banip %s", ip);
	SendRconCommand(query);
	format(msg, sizeof(msg), "*** %s %s 封禁了账户 %s (IP: %s).", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(username), ip);
	format(query, sizeof(query), "*** 原因: %s", reason);
	foreach(new i : Player) {
		if(PlayerInfo[i][pAdminlevel] > 0) {
			SendClientMessage(i, COLOR_GOLD, msg);
		    SendClientMessage(i, COLOR_GOLD, query);
		}
	}

	mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `banned` = 1 WHERE `user` = '%e'", username);
	mysql_function_query(sqlHandle, query, false, "", "");
    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_bans` (`user`, `reason`, `admin`, `date`, `ip`) VALUES ('%e', '%e', '%e', NOW(), '%e')", username, reason, PlayerInfo[playerid][pName], ip);
    mysql_function_query(sqlHandle, query, false, "", "");
    return 1;
}

forward OnAdminBanPlayer(playerid, user, reason[]);
public OnAdminBanPlayer(playerid, user, reason[]) {
	new ip[16],
		msg[128];

	cache_get_row(0, 0, ip);
 	format(msg, sizeof(msg), "[STAFF] %s 被 %s 封禁账户, 原因:[%s]", GetNameWithSpace(user), GetNameWithSpace(playerid), reason);
	SendClientMessageToAll(COLOR_LIGHTRED, msg);
	format(msg, sizeof(msg), "*** Banned IP: %s.", ip);
	SendMessageToAdmins(msg);
	SendClientMessage(user, COLOR_GREY, " ");
	SendClientMessage(user, COLOR_GREY, "______________________________________________________________");
	SendClientMessage(user, COLOR_GREY, " ");
	SendClientMessage(user, COLOR_LIGHTRED, "                       -- 你的账户已被封禁! --");
	SendClientMessage(user, COLOR_GREY, "如果你认为管理员发布的禁令是有误的, 请在我们社区发布申明");
	SendClientMessage(user, COLOR_GREY, "社区地址: www.lifengame.com");
	SendClientMessage(user, COLOR_GREY, "______________________________________________________________");
	mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `banned` = 1 WHERE `user` = '%e'", PlayerInfo[user][pName]);
	mysql_function_query(sqlHandle, msg, false, "", "");
	format(msg, sizeof(msg), "banip %s", ip);
	SendRconCommand(msg);
	BanLog(user, PlayerInfo[playerid][pName], reason);
	BanExDelay(user, reason);
	return 1;
}

forward OnAdminHBanPlayer(playerid, user, reason[]);
public OnAdminHBanPlayer(playerid, user, reason[]) {
	new ip[16],
		msg[128];

	cache_get_row(0, 0, ip);
	
 	format(msg, sizeof(msg), "AdmCmd: %s 被匿名管理员封禁账户, 原因:[%s]", GetNameWithSpace(user), reason);
	SendClientMessageToAll(COLOR_LIGHTRED, msg);
	format(msg, sizeof(msg), "You was banned by %s.", GetNameWithSpace(playerid));
	SendClientMessage(user, COLOR_LIGHTRED, msg);
	format(msg, sizeof(msg), "*** Banned IP: %s.", ip);
	SendMessageToAdmins(msg);
	SendClientMessage(user, COLOR_GREY, " ");
	SendClientMessage(user, COLOR_GREY, "______________________________________________________________");
	SendClientMessage(user, COLOR_GREY, " ");
	SendClientMessage(user, COLOR_LIGHTRED, "                       -- 你的账户已被封禁! --");
	SendClientMessage(user, COLOR_GREY, "如果你认为管理员发布的禁令是有误的, 请在我们社区发布申明");
	SendClientMessage(user, COLOR_GREY, "社区地址: www.lifengame.com");
	SendClientMessage(user, COLOR_GREY, "______________________________________________________________");
	mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `banned` = 1 WHERE `user` = '%e'", PlayerInfo[user][pName]);
	mysql_function_query(sqlHandle, msg, false, "", "");
	format(msg, sizeof(msg), "banip %s", ip);
	SendRconCommand(msg);
	BanLog(user, PlayerInfo[playerid][pName], reason);
	BanExDelay(user, reason);
	return 1;
}


forward OnStockIsValidPlate(plate[]);
public OnStockIsValidPlate(plate[]) {
	new rows,
	    fields;

	cache_get_data(rows, fields);
	if(rows == 0) {
	    return 1;
	} else {
		return 0;
	}
}

/* --- Objects --- */

stock RemoveObjects(playerid) {

    RemoveBuildingForPlayer(playerid, 14579, 2222.9844, 1688.4766, 1008.8359, 0.25);//警校毕业典礼
	RemoveBuildingForPlayer(playerid, 14580, 2235.8906, 1647.9844, 1010.9688, 0.25);//警校毕业典礼
	//新的idlewood by SAKURA
	RemoveBuildingForPlayer(playerid, 3563, 2063.1328, -1731.7813, 15.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3562, 2061.7031, -1717.2734, 15.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3645, 2069.6172, -1556.7031, 15.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3645, 2070.7578, -1586.0156, 15.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3662, 2142.7031, -1657.9297, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 3662, 2164.9375, -1666.3047, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 3662, 2141.8672, -1693.3516, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 3662, 2154.3516, -1713.6641, 17.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 5551, 2140.5156, -1735.1406, 15.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 5633, 2089.3594, -1643.9297, 18.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 5670, 2059.8672, -1701.2500, 15.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 3582, 2061.7031, -1717.2734, 15.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 5421, 2059.8672, -1701.2500, 15.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 3555, 2063.1328, -1731.7813, 15.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 1498, 2064.5781, -1704.2969, 13.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 5410, 2140.5156, -1735.1406, 15.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 1501, 2138.3438, -1697.1094, 14.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 3661, 2141.8672, -1693.3516, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 3661, 2154.3516, -1713.6641, 17.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1501, 2150.8281, -1717.4297, 14.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 3661, 2142.7031, -1657.9297, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1501, 2142.8594, -1663.0859, 14.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2159.2422, -1655.2813, 14.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1501, 2165.1094, -1671.4531, 14.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 3661, 2164.9375, -1666.3047, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 3644, 2070.7578, -1586.0156, 15.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3644, 2069.6172, -1556.7031, 15.0625, 0.25);
	// end
	// ganton
	RemoveBuildingForPlayer(playerid, 620, 2367.6016, -1706.2891, 11.2891, 0.25);
	//library
	RemoveBuildingForPlayer(playerid, 5967, 1259.4375, -1246.8125, 17.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1388, 1238.3750, -1258.2813, 57.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1391, 1238.3750, -1258.2734, 44.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 5857, 1259.4375, -1246.8125, 17.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 1284.1797, -1239.6406, 12.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1327.4297, -1239.9844, 13.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1327.4297, -1234.7422, 13.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 1332.8359, -1241.7188, 13.4141, 0.25);
	//ganton projects
	RemoveBuildingForPlayer(playerid, 3695, 2239.9297, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3695, 2282.9922, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3695, 2314.8203, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3695, 2352.7188, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3695, 2387.8203, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2229.0469, -1810.0313, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1807.3281, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1801.8672, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2230.4141, -1815.1484, 11.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2234.4844, -1817.9297, 12.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1791.0000, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1796.4531, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2239.9297, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1775.5078, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1780.9844, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2228.6719, -1767.2734, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1770.0469, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 669, 2254.7266, -1827.4375, 12.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2258.3438, -1804.7422, 12.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2259.2656, -1773.2422, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 17886, 2264.0391, -1789.2578, 20.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1791.0000, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1796.4531, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1807.3281, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1801.8672, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1770.0469, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1775.5078, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1780.9844, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2275.3906, -1820.7266, 12.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2268.1875, -1810.0313, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2273.6953, -1810.0313, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2282.9922, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2267.8125, -1767.2734, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2273.3359, -1767.3438, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2271.6484, -1772.3984, 8.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2285.7578, -1762.1250, 12.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2297.3828, -1798.5391, 8.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2297.1484, -1775.8750, 8.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2305.0625, -1810.0313, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1807.3281, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1801.8672, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1791.0000, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1796.4531, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2314.8203, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1775.5078, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1770.0469, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1780.9844, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2304.7813, -1767.3828, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2332.8281, -1817.7109, 12.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2341.7578, -1810.0313, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1807.3281, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2341.7578, -1817.7266, 8.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1801.8672, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1791.0000, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1796.4531, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2334.7109, -1785.0625, 12.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1775.5078, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1780.9844, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 17887, 2343.6094, -1784.5078, 20.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1770.0469, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2341.3828, -1767.2734, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 669, 2329.1875, -1765.5234, 12.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 2349.6172, -1763.3438, 11.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2352.7188, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2367.6484, -1802.7969, 8.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2367.6484, -1780.7734, 11.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2378.3359, -1818.7266, 8.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1800.4688, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1805.9297, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2376.9922, -1813.9297, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1811.3828, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1780.9844, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1789.6016, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1795.0547, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2376.6172, -1767.2734, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1770.0469, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1775.5078, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2399.9766, -1815.9922, 11.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2387.8203, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 2398.5781, -1782.7734, 10.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2387.0234, -1763.6406, 12.1797, 0.25);
	// Sprunk
	RemoveBuildingForPlayer(playerid, 764, 1329.0000, 246.4141, 18.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 764, 1333.0625, 255.7891, 17.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 764, 1337.1250, 265.1563, 18.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 764, 1341.1797, 274.5313, 17.8438, 0.25);
	// Furniture shop
	RemoveBuildingForPlayer(playerid, 4976, 1931.0000, -1871.3906, 15.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 1904.3750, -1879.7344, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 1909.6563, -1879.7344, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1914.9297, -1879.7344, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 1920.1953, -1879.9531, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 1925.4609, -1879.9609, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1930.7188, -1879.7344, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 4848, 1931.0000, -1871.3906, 15.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1931.8750, -1863.4609, 16.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1915.7422, -1863.4609, 16.3203, 0.25);
	// city hall
	/*RemoveBuildingForPlayer(playerid, 4024, 1479.8672, -1790.3984, 56.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 4044, 1481.1875, -1785.0703, 22.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 1448.2344, -1755.8984, 14.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1417.9766, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1456.3984, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1504.8438, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1429.5313, -1748.4219, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1447.9063, -1748.2266, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 4002, 1479.8672, -1790.3984, 56.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 4003, 1481.0781, -1747.0313, 33.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1516.0000, -1748.6016, 13.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1549.5313, -1832.3125, 12.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1555.6641, -1830.5938, 13.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1554.8203, -1816.1563, 13.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1553.2578, -1764.8125, 12.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 4172, 1534.7656, -1756.1797, 15.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1533.2656, -1749.0234, 12.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1553.7031, -1747.9375, 13.4063, 0.25);*/
	//Mulholland removed bits
	RemoveBuildingForPlayer(playerid, 13816, 1337.4219, -643.2656, 105.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 13877, 1337.4219, -643.2656, 105.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 617, 1306.9766, -643.3203, 106.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 659, 1290.6172, -630.1094, 105.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 659, 1303.7891, -629.5703, 106.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 659, 1273.0156, -621.4375, 102.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 617, 1312.5000, -688.5547, 92.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 621, 1339.0547, -678.6172, 92.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 656, 1394.4141, -676.8203, 90.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 617, 1328.1172, -668.2969, 106.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1691, 1354.2109, -661.2656, 113.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 656, 1375.4609, -660.1094, 94.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 1691, 1350.1719, -650.5547, 113.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 1348.0547, -644.2969, 113.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 1324.6953, -642.9453, 113.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 1327.5625, -641.8672, 113.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1690, 1339.1094, -637.1094, 113.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 13817, 1353.4766, -626.6250, 109.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 659, 1314.6953, -624.0547, 107.1484, 0.25);
	// mall
	
	/*RemoveBuildingForPlayer(playerid, 4025, 1777.8359, -1773.9063, 12.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 4070, 1719.7422, -1770.7813, 23.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1531, 1724.7344, -1741.5000, 14.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 4215, 1777.5547, -1775.0391, 36.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1700.8516, -1778.3984, 12.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1701.3047, -1794.4297, 12.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1701.1484, -1753.2266, 12.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1701.2578, -1764.4844, 12.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1700.8984, -1743.9844, 12.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3986, 1719.7422, -1770.7813, 23.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 1738.8594, -1813.2500, 16.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1791.1797, -1816.6328, 14.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1788.5078, -1816.5703, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1796.9609, -1817.3906, 14.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1801.8828, -1817.3047, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 4019, 1777.8359, -1773.9063, 12.5234, 0.25);*/
	
	// impound
	
	RemoveBuildingForPlayer(playerid, 1266, 1648.0156, -1795.0703, 25.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 1648.0156, -1795.0703, 25.0391, 0.25);
	
	/*RemoveBuildingForPlayer(playerid, 4025, 1777.8359, -1773.9063, 12.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 4070, 1719.7422, -1770.7813, 23.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 4071, 1722.5000, -1775.3984, 14.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 4072, 1777.4375, -1782.3047, 12.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1531, 1724.7344, -1741.5000, 14.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 4215, 1777.5547, -1775.0391, 36.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1700.8516, -1778.3984, 12.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1701.3047, -1794.4297, 12.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1701.1484, -1753.2266, 12.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1701.2578, -1764.4844, 12.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1700.8984, -1743.9844, 12.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3983, 1722.5000, -1775.3984, 14.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 3986, 1719.7422, -1770.7813, 23.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 1738.8594, -1813.2500, 16.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1762.7891, -1732.8281, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1791.1797, -1816.6328, 14.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1788.5078, -1816.5703, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1796.9609, -1817.3906, 14.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1801.8828, -1817.3047, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 4012, 1777.4375, -1782.3047, 12.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 4019, 1777.8359, -1773.9063, 12.5234, 0.25);*/

	//sf gates
	RemoveBuildingForPlayer(playerid, 10252, -2175.7578, 661.9219, 50.1016, 0.25);
	
	// lifedestroyer office
	RemoveBuildingForPlayer(playerid, 19397, 1787.0000, 221435552.0000, -1294.0000, 0.25);
	
	// misc
	
	RemoveBuildingForPlayer(playerid, 4215, 1777.5547, -1775.0391, 36.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3573, 1798.6484, -2057.9141, 14.9844, 0.25);


	// airport
	
	RemoveBuildingForPlayer(playerid, 3769, 1961.4453, -2216.1719, 14.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3664, 1960.6953, -2236.4297, 19.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1949.3438, -2227.5156, 13.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1944.0625, -2227.5156, 13.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1954.6172, -2227.4844, 13.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1965.1719, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1959.8984, -2227.4453, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3625, 1961.4453, -2216.1719, 14.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1975.7266, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1970.4453, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1981.0000, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1996.8281, -2227.3828, 13.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1991.5547, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1986.2813, -2227.4141, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2002.1094, -2227.3438, 13.8281, 0.25);
	
	/* --- LAPD Academy --- */
	
	RemoveBuildingForPlayer(playerid, 17349, -542.0078, -522.8438, 29.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 17019, -606.0313, -528.8203, 30.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -541.4297, -561.2266, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 17012, -542.0078, -522.8438, 29.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -513.7578, -561.0078, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -503.6172, -540.5313, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -502.6094, -528.6484, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -502.1172, -521.0313, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -502.4063, -513.0156, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -620.4141, -490.5078, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -619.6250, -473.4531, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 17018, -565.7656, -489.1406, 29.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -553.6875, -481.6328, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -554.4531, -496.1797, 25.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -537.0391, -469.1172, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -516.9453, -496.6484, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -503.1250, -509.0000, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 17020, -475.9766, -544.8516, 28.1172, 0.25);

	/* --- LAPD Interior --- */
	
	RemoveBuildingForPlayer(playerid, 2193, 215.0469, 110.7891, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2193, 217.7188, 110.7891, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2252, 217.7344, 113.2578, 1010.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2172, 214.7031, 115.2109, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2191, 216.9766, 115.2578, 1002.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 2185, 218.2891, 108.9219, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2191, 218.7734, 107.4531, 1002.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 218.9453, 108.0313, 1009.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 2185, 218.2891, 111.9609, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 218.9453, 111.2734, 1009.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 2172, 219.1406, 115.2813, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2245, 220.3594, 106.7031, 1010.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 221.7266, 109.5469, 1009.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 2356, 222.3594, 110.2266, 1002.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 2162, 222.7500, 107.1016, 1009.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 2185, 222.6484, 110.0547, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2172, 223.2969, 108.1641, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2172, 223.2969, 110.9453, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2191, 223.3281, 113.3672, 1002.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 2162, 224.6641, 107.1016, 1009.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 2174, 225.4922, 107.6406, 1002.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 225.2578, 108.1250, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 224.8750, 109.5938, 1009.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1998, 224.7656, 110.1016, 1002.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2185, 225.6016, 110.0547, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2356, 225.6563, 110.0781, 1002.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 2252, 224.7031, 113.2109, 1010.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2165, 223.0703, 120.0625, 998.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2165, 223.0703, 122.0469, 998.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 223.3984, 120.4219, 998.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 221.9766, 123.7344, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 222.0781, 124.6641, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 223.6016, 123.6797, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 223.6406, 124.6250, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 222.0547, 125.6719, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 222.8281, 127.2266, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2029, 222.9531, 126.3750, 1009.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 223.6250, 125.6797, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2197, 225.4375, 121.1797, 1009.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2197, 226.2031, 121.1797, 1009.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2356, 224.2031, 121.7266, 997.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 2204, 225.1094, 122.7422, 1009.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 2204, 225.1094, 125.9688, 1009.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 2245, 226.8047, 106.7031, 1010.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 227.8516, 108.1172, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 2008, 227.6016, 115.2109, 1002.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2174, 228.0391, 107.6406, 1002.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 228.2891, 114.6328, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 2174, 230.5078, 107.6406, 1002.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 230.2813, 108.1172, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 230.4297, 110.6016, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1998, 230.2891, 111.1563, 1002.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2008, 230.3047, 115.2109, 1002.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2252, 234.9531, 106.7109, 1010.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 234.9297, 109.8594, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 235.0859, 111.2266, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 235.0781, 112.7031, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 2204, 233.5391, 113.0313, 1009.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 2166, 234.4922, 113.8438, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 231.0469, 114.4844, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 2210, 226.7891, 128.3984, 1009.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 226.7500, 119.2578, 998.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2165, 227.1094, 118.9297, 998.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2197, 226.9922, 121.1797, 1009.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2199, 228.6719, 119.7500, 1009.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 228.3516, 124.1172, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1714, 229.1953, 126.0234, 1009.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2197, 232.5703, 120.9297, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 14895, 234.7031, 122.0625, 1004.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 2198, 234.9766, 123.2969, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 229.6328, 124.1172, 1009.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2206, 230.0078, 125.1172, 1009.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 2198, 234.9766, 126.0547, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2241, 232.2813, 127.8984, 1009.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 2211, 231.2891, 128.3906, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2253, 236.1719, 106.8203, 1010.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2165, 235.4844, 111.8750, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2166, 235.4844, 109.9141, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 235.7500, 109.5469, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1715, 235.8438, 110.8203, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2198, 236.3516, 122.5781, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2198, 236.3516, 125.5234, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2194, 236.6875, 108.9922, 1010.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1714, 237.8438, 109.8906, 1009.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 2184, 236.6172, 111.0156, 1009.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 2197, 237.3047, 121.6250, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2197, 237.3047, 124.5547, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2161, 239.3047, 108.2266, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2161, 239.3047, 109.6250, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2161, 239.3047, 111.0078, 1002.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2208, 242.6484, 122.8359, 1002.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 2356, 257.1563, 116.2500, 1007.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 2356, 243.6797, 119.8984, 1009.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2208, 248.2109, 122.8359, 1002.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 2202, 254.7344, 127.9844, 1009.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2186, 249.1875, 128.0156, 1009.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2356, 272.5391, 107.6250, 1007.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 259.3984, 107.8750, 1007.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 261.5781, 107.8750, 1007.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 269.5391, 108.2109, 1003.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 271.3516, 108.4219, 1007.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 272.8438, 108.2109, 1003.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 276.0313, 108.2109, 1003.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 275.1563, 108.3438, 1007.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 276.8672, 108.3281, 1007.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 259.4063, 108.7109, 1007.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 259.4766, 109.5469, 1007.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 261.5781, 108.7109, 1007.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 261.5313, 109.5469, 1007.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 2165, 274.6875, 108.5703, 1003.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 2165, 271.5234, 108.5703, 1003.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 2165, 276.3281, 108.5703, 1003.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 2165, 269.8359, 108.5703, 1003.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 2165, 273.1406, 108.5703, 1003.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 2356, 270.4375, 108.8047, 1003.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 2356, 273.7344, 108.8047, 1003.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 259.4063, 111.2813, 1007.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 259.4453, 110.3672, 1007.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 259.4453, 112.0547, 1007.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 261.4766, 110.3672, 1007.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 2356, 261.1094, 114.5781, 1007.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 276.9219, 110.6094, 1007.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 275.0703, 110.6094, 1007.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 271.2109, 110.6094, 1007.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 2356, 273.3594, 115.7969, 1007.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 14850, 264.0313, 117.8281, 1006.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 273.1641, 126.6406, 1007.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 274.8438, 126.6406, 1007.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 274.0078, 126.6406, 1007.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 2195, 272.0859, 126.6563, 1008.4609, 0.25);

	/* --- Basketball Courts in East Los Angeles --- */
	
	RemoveBuildingForPlayer(playerid, 673, 2343.6328, -1257.7500, 26.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 2331.0625, -1257.7422, 26.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 2331.0625, -1227.1172, 26.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 2343.6328, -1227.1328, 26.0000, 0.25);

	/* --- Shopping Baskets Armoury --- */
	
	RemoveBuildingForPlayer(playerid, 1885, 310.1250, -166.2109, 998.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1885, 315.2422, -169.8984, 998.5547, 0.25);

	/* --- Fixes for interiors --- */

	// Rosenberg's Office in Caligulas

    RemoveBuildingForPlayer(playerid, 14638, 2187.4297, 1627.3125, 1042.4063, 0.25);

    // Brothel

    RemoveBuildingForPlayer(playerid, 14770, 940.9922, -5.6797, 1000.3750, 0.25);

    // Blastin' Fools Records

    RemoveBuildingForPlayer(playerid, 14813, 1038.1328, 10.4141, 1000.7266, 0.25);

    // The Welcome Pump

    RemoveBuildingForPlayer(playerid, 14656, 681.5000, -447.3750, -25.0234, 0.25);

	// Secret Valley Diner

	RemoveBuildingForPlayer(playerid, 1543, 440.1094, -61.6172, 999.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 440.3672, -61.0313, 999.5469, 0.25);

	// Diner 1

	RemoveBuildingForPlayer(playerid, 2245, 443.4375, -110.1094, 999.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 2245, 446.6563, -110.1094, 999.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 449.4844, -109.9688, 999.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 449.5313, -109.3906, 999.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 18097, 449.7813, -111.7500, 1000.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 450.3047, -110.1563, 999.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 2245, 452.9297, -110.2344, 999.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 2245, 456.0703, -110.1094, 999.6016, 0.25);

	// Brothel 2

	RemoveBuildingForPlayer(playerid, 2024, 960.2500, -58.0625, 1000.3984, 0.25);

	/* --- Pawn Shop --- */

	/*RemoveBuildingForPlayer(playerid, 2125, 290.0156, -112.2500, 1000.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 18048, 290.2266, -105.3203, 1000.9922, 0.25);*/

	/* --- Private self-working garages --- */

	RemoveBuildingForPlayer(playerid, 5061, 1698.9063, -2088.7422, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 17951, 2505.5234, -1690.9922, 14.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 6517, 322.4141, -1769.0313, 5.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 13817, 1353.4766, -626.6250, 109.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 10671, -2454.1172, -123.0625, 26.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 11327, -2026.9141, 129.4063, 30.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 11359, -2052.6250, 150.4688, 29.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 11360, -2038.8672, 170.3203, 29.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 11416, -2038.9297, 178.8047, 29.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 10246, -2105.1953, 896.9297, 77.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 9823, -2696.0078, 821.4453, 50.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 8378, 1586.2578, 1222.7031, 19.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 8379, 1586.2578, 1222.7031, 19.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 9099, 2449.5469, 698.0781, 11.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 7928, 1266.8828, 2527.9375, 16.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 7709, 2006.0000, 2303.7266, 11.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 7930, 1278.6953, 2529.8125, 11.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 7931, 929.5469, 2012.0625, 11.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 7927, 1408.6406, 1902.6875, 11.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 16500, -360.7656, 1194.2578, 20.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 16773, 397.4766, 2476.6328, 19.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 16775, 412.1172, 2476.6328, 19.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 16501, 429.9844, 2546.5156, 17.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 769, 2221.7344, 151.2422, 25.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 13187, 2231.2422, 168.7344, 27.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 13188, 786.0078, -492.8672, 17.6328, 0.25);

	/* --- Prison --- */

	RemoveBuildingForPlayer(playerid, 3682, 247.9297, 1461.8594, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3682, 192.2734, 1456.1250, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3682, 199.7578, 1397.8828, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1356.9922, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1356.9922, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1392.1563, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1392.1563, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1426.9141, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1426.9141, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3288, 221.5703, 1374.9688, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 212.0781, 1426.0313, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 218.2578, 1467.5391, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1435.1953, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1410.5391, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1385.8906, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1361.2422, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 190.9141, 1371.7734, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 183.7422, 1444.8672, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 222.5078, 1444.6953, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 221.1797, 1390.2969, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3288, 223.1797, 1421.1875, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1459.6406, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 207.5391, 1371.2422, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3424, 220.6484, 1355.1875, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3424, 221.7031, 1404.5078, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3424, 210.4141, 1444.8438, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3424, 262.5078, 1465.2031, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3259, 220.6484, 1355.1875, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1356.9922, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1356.9922, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 190.9141, 1371.7734, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1392.1563, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1392.1563, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 207.5391, 1371.2422, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1394.1328, 10.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1392.1563, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1394.1328, 23.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 207.3594, 1390.5703, 19.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1387.8516, 27.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 3673, 199.7578, 1397.8828, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3257, 221.5703, 1374.9688, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 221.1797, 1390.2969, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 203.9531, 1409.9141, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3674, 199.3828, 1407.1172, 35.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 204.6406, 1409.8516, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1404.2344, 18.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1400.6563, 22.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3259, 221.7031, 1404.5078, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 207.3594, 1409.0000, 19.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3257, 223.1797, 1421.1875, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 212.0781, 1426.0313, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1426.9141, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1426.9141, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1361.2422, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1385.8906, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1410.5391, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 183.7422, 1444.8672, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3259, 210.4141, 1444.8438, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 222.5078, 1444.6953, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 16086, 232.2891, 1434.4844, 13.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3673, 192.2734, 1456.1250, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3674, 183.0391, 1455.7500, 35.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1459.6406, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 196.0234, 1462.0156, 10.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 198.0000, 1462.0156, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 196.0234, 1462.0156, 23.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 180.2422, 1460.3203, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 180.3047, 1461.0078, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 218.2578, 1467.5391, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 199.5859, 1463.7266, 19.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 181.1563, 1463.7266, 19.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 185.9219, 1462.8750, 18.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 202.3047, 1462.8750, 27.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 189.5000, 1462.8750, 22.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1435.1953, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1451.8281, 27.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1458.1094, 23.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 255.5313, 1454.5469, 19.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1456.1328, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1458.1094, 10.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3259, 262.5078, 1465.2031, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1468.2109, 18.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3673, 247.9297, 1461.8594, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1464.6328, 22.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3674, 247.5547, 1471.0938, 35.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 255.5313, 1472.9766, 19.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 252.8125, 1473.8281, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 252.1250, 1473.8906, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 16089, 342.1250, 1431.0938, 5.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 16090, 315.7734, 1431.0938, 5.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 16091, 289.7422, 1431.0938, 5.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 16087, 358.6797, 1430.4531, 11.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 16088, 368.4297, 1431.0938, 5.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 16092, 394.1563, 1431.0938, 5.2734, 0.25);

	/* --- Grotti's --- */

	RemoveBuildingForPlayer(playerid, 1211, 555.1563, -1251.9297, 16.6406, 0.25); // Fire Hydrant @ Grotti's

	/* --- Vending Mashines --- */

	//Los Angeles and Countryside
    RemoveBuildingForPlayer(playerid, 956, 1634.1487,-2238.2810,13.5077, 20.0); //Snack vender @ LS Airport
    RemoveBuildingForPlayer(playerid, 956, 2480.9885,-1958.5117,13.5831, 20.0); //Snack vender @ Sushi Shop in Willowfield
    RemoveBuildingForPlayer(playerid, 955, 1729.7935,-1944.0087,13.5682, 20.0); //Sprunk machine @ Unity Station
    RemoveBuildingForPlayer(playerid, 955, 2060.1099,-1898.4543,13.5538, 20.0); //Sprunk machine opposite Tony's Liqour in Willowfield
    RemoveBuildingForPlayer(playerid, 955, 2325.8708,-1645.9584,14.8270, 20.0); //Sprunk machine @ Ten Green Bottles
    RemoveBuildingForPlayer(playerid, 955, 1153.9130,-1460.8893,15.7969, 20.0); //Sprunk machine @ Market
    RemoveBuildingForPlayer(playerid, 955,1788.3965,-1369.2336,15.7578, 20.0); //Sprunk machine in Downtown Los Angeles
    RemoveBuildingForPlayer(playerid, 955, 2352.9939,-1357.1105,24.3984, 20.0); //Sprunk machine @ Liquour shop in East Los Angeles
    RemoveBuildingForPlayer(playerid, 1775, 2224.3235,-1153.0692,1025.7969, 20.0); //Sprunk machine @ Jefferson Motel
    RemoveBuildingForPlayer(playerid, 956, 2140.2566,-1161.7568,23.9922, 20.0); //Snack machine @ pick'n'go market in Jefferson
    RemoveBuildingForPlayer(playerid, 956, 2154.1199,-1015.7635,62.8840, 20.0); //Snach machine @ Carniceria El Pueblo in Las Colinas
    RemoveBuildingForPlayer(playerid, 956, 662.5665,-551.4142,16.3359, 20.0); //Snack vender at Dillimore Gas Station
    RemoveBuildingForPlayer(playerid, 955, 200.2010,-107.6401,1.5513, 20.0); //Sprunk machine @ Blueberry Safe House
    RemoveBuildingForPlayer(playerid, 956, 2271.4666,-77.2104,26.5824, 20.0); //Snack machine @ Palomino Creek Library
    RemoveBuildingForPlayer(playerid, 955, 1278.5421,372.1057,19.5547, 20.0); //Sprunk machine @ Papercuts in Montgomery
    RemoveBuildingForPlayer(playerid, 955, 1929.5527,-1772.3136,13.5469, 20.0); //Sprunk machine @ Idlewood Gas Station

    //San Fierro
    RemoveBuildingForPlayer(playerid, 1302, -2419.5835,984.4185,45.2969, 20.0); //Soda machine 1 @ Juniper Hollow Gas Station
    RemoveBuildingForPlayer(playerid, 1209, -2419.5835,984.4185,45.2969, 20.0); //Soda machine 2 @ Juniper Hollow Gas Station
    RemoveBuildingForPlayer(playerid, 956, -2229.2075,287.2937,35.3203, 20.0); //Snack vender @ King's Car Park
    RemoveBuildingForPlayer(playerid, 955, -1349.3947,493.1277,11.1953, 20.0); //Sprunk machine @ SF Aircraft Carrier
    RemoveBuildingForPlayer(playerid, 956, -1349.3947,493.1277,11.1953, 20.0); //Snack vender @ SF Aircraft Carrier
    RemoveBuildingForPlayer(playerid, 955, -1981.6029,142.7232,27.6875, 20.0); //Sprunk machine @ Cranberry Station
    RemoveBuildingForPlayer(playerid, 955, -2119.6245,-422.9411,35.5313, 20.0); //Sprunk machine 1/2 @ SF Stadium
    RemoveBuildingForPlayer(playerid, 955, -2097.3696,-397.5220,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
    RemoveBuildingForPlayer(playerid, 955, -2068.5593,-397.5223,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
    RemoveBuildingForPlayer(playerid, 955, -2039.8802,-397.5214,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
    RemoveBuildingForPlayer(playerid, 955, -2011.1403,-397.5225,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
    RemoveBuildingForPlayer(playerid, 955, -2005.7861,-490.8688,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
    RemoveBuildingForPlayer(playerid, 955, -2034.5267,-490.8681,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
    RemoveBuildingForPlayer(playerid, 955, -2063.1875,-490.8687,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
    RemoveBuildingForPlayer(playerid, 955, -2091.9780,-490.8684,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium

	//Las Venturas
    RemoveBuildingForPlayer(playerid, 956, -1455.1298,2592.4138,55.8359, 20.0); //Snack vender @ El Quebrados GONE
    RemoveBuildingForPlayer(playerid, 955, -252.9574,2598.9048,62.8582, 20.0); //Sprunk machine @ Las Payasadas GONE
    RemoveBuildingForPlayer(playerid, 956, -252.9574,2598.9048,62.8582, 20.0); //Snack vender @ Las Payasadas GONE
    RemoveBuildingForPlayer(playerid, 956, 1398.7617,2223.3606,11.0234, 20.0); //Snack vender @ Redsands West GONE
    RemoveBuildingForPlayer(playerid, 955, -862.9229,1537.4246,22.5870, 20.0); //Sprunk machine @ The Smokin' Beef Grill in Las Barrancas GONE
    RemoveBuildingForPlayer(playerid, 955, -14.6146,1176.1738,19.5634, 20.0); //Sprunk machine @ Fort Carson GONE
    RemoveBuildingForPlayer(playerid, 956, -75.2839,1227.5978,19.7360, 20.0); //Snack vender @ Fort Carson GONE
    RemoveBuildingForPlayer(playerid, 955, 1519.3328,1055.2075,10.8203, 20.0); //Sprunk machine @ LVA Freight Department GONE
    RemoveBuildingForPlayer(playerid, 956, 1659.5096,1722.1096,10.8281, 20.0); //Snack vender near Binco @ LV Airport GONE
    RemoveBuildingForPlayer(playerid, 955, 2086.5872,2071.4958,11.0579, 20.0); //Sprunk machine @ Sex Shop on The Strip
    RemoveBuildingForPlayer(playerid, 955, 2319.9001,2532.0376,10.8203, 20.0); //Sprunk machine @ Pizza co by Julius Thruway (North)
    RemoveBuildingForPlayer(playerid, 955, 2503.2061,1244.5095,10.8203, 20.0); //Sprunk machine @ Club in the Camels Toe
    RemoveBuildingForPlayer(playerid, 956, 2845.9919,1294.2975,11.3906, 20.0); //Snack vender @ Linden Station

    //Interiors: 24/7 and Clubs
    RemoveBuildingForPlayer(playerid, 1775, 496.0843,-23.5310,1000.6797, 20.0); //Sprunk machine 1 @ Club in Camels Toe
    RemoveBuildingForPlayer(playerid, 1775, 501.1219,-2.1968,1000.6797, 20.0); //Sprunk machine 2 @ Club in Camels Toe
    RemoveBuildingForPlayer(playerid, 1776, 501.1219,-2.1968,1000.6797, 20.0); //Snack vender @ Club in Camels Toe
    RemoveBuildingForPlayer(playerid, 1775, -19.2299,-57.0460,1003.5469, 20.0); //Sprunk machine @ Roboi's type 24/7 stores
    RemoveBuildingForPlayer(playerid, 1776, -35.9012,-57.1345,1003.5469, 20.0); //Snack vender @ Roboi's type 24/7 stores
    RemoveBuildingForPlayer(playerid, 1775, -17.0036,-90.9709,1003.5469, 20.0); //Sprunk machine @ Other 24/7 stores
    RemoveBuildingForPlayer(playerid, 1776, -17.0036,-90.9709,1003.5469, 20.0); //Snach vender @ Others 24/7 stores

    /* --- Biker Area Commerce --- */

    /*RemoveBuildingForPlayer(playerid, 4067, 1630.5234, -1486.8594, 17.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 4084, 1643.4297, -1520.3047, 14.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 4059, 1630.5234, -1486.8594, 17.1563, 0.25);*/

	/* --- Rental Center --- */

	RemoveBuildingForPlayer(playerid, 5078, 1616.6719, -1893.4844, 14.3281, 0.25);

	/* --- All Saints General Hospital --- */

	// ASGH Pershing Square OLD

	/*RemoveBuildingForPlayer(playerid, 4054, 1402.5000, -1682.0234, 25.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 4055, 1394.3594, -1620.6641, 32.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 4220, 1370.6406, -1643.4453, 33.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 4005, 1402.5000, -1682.0234, 25.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 4006, 1394.3594, -1620.6641, 32.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 1148.6797, -1385.1875, 13.2656, 0.25);*/

	// ASGH Removal in Market

	RemoveBuildingForPlayer(playerid, 5930, 1134.2500, -1338.0781, 23.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 5708, 1134.2500, -1338.0781, 23.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1440, 1141.9844, -1346.1094, 13.2656, 0.25);
    RemoveBuildingForPlayer(playerid, 1440, 1148.6797, -1385.1875, 13.2656, 0.25);
    RemoveBuildingForPlayer(playerid, 617, 1178.6016, -1332.0703, 12.8906, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1184.0078, -1353.5000, 12.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1184.0078, -1343.2656, 12.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 618, 1177.7344, -1315.6641, 13.2969, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1184.8125, -1292.9141, 12.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1184.8125, -1303.1484, 12.5781, 0.25);

    /* --- General --- */

    RemoveBuildingForPlayer(playerid, 5043, 1843.3672, -1856.3203, 13.8750, 0.25);
    RemoveBuildingForPlayer(playerid, 6463, 389.7734, -2028.4688, 19.8047, 0.25);
    RemoveBuildingForPlayer(playerid, 6465, 368.0547, -2028.2422, 8.7344, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2028.5000, 32.2266, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2021.6406, 29.9297, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2017.4531, 24.0313, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2017.4297, 16.8516, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2021.6328, 10.9844, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2028.5156, 8.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2035.3984, 10.9453, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2039.6406, 16.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2039.6563, 24.1094, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2035.3828, 29.9531, 0.25);
    RemoveBuildingForPlayer(playerid, 6462, 368.0547, -2028.2422, 8.7344, 0.25);
    RemoveBuildingForPlayer(playerid, 1215, 379.5938, -2042.4922, 7.3750, 0.25);
    RemoveBuildingForPlayer(playerid, 1215, 379.5938, -2030.3359, 7.3750, 0.25);
    RemoveBuildingForPlayer(playerid, 1215, 379.5938, -2016.7500, 7.3750, 0.25);
    RemoveBuildingForPlayer(playerid, 1215, 386.5703, -2049.3516, 7.3750, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2039.6406, 16.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2039.6563, 24.1094, 0.25);
    RemoveBuildingForPlayer(playerid, 6298, 389.7734, -2028.4688, 19.8047, 0.25);
    RemoveBuildingForPlayer(playerid, 6461, 389.7734, -2028.5000, 20.1094, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2028.5000, 32.2266, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2021.6406, 29.9297, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2017.4531, 24.0313, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2017.4297, 16.8516, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2021.6328, 10.9844, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2028.5156, 8.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2035.3984, 10.9453, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2035.3828, 29.9531, 0.25);

	/* --- Modding Garages --- */

	RemoveBuildingForPlayer(playerid, 5340, 2644.8594, -2039.2344, 14.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 5779, 1041.3516, -1025.9297, 32.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 10575, -2716.3516, 217.4766, 5.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 11313, -1935.8594, 239.5313, 35.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 9093, 2386.6563, 1043.6016, 11.5938, 0.25);

	/* --- Pay'n'Sprays --- */

    RemoveBuildingForPlayer(playerid, 5422, 2071.4766, -1831.4219, 14.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 5856, 1024.9844, -1029.3516, 33.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 6400, 488.2813, -1734.6953, 12.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 11319, -1904.5313, 277.8984, 42.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 9625, -2425.7266, 1027.9922, 52.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 7891, 1968.7422, 2162.4922, 12.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3294, -1420.5469, 2591.1563, 57.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 3294, -100.0000, 1111.4141, 21.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 13028, 720.0156, -462.5234, 16.8594, 0.25);
    RemoveBuildingForPlayer(playerid, 8957, 2393.7656, 1483.6875, 12.7109, 0.25);

	/* --- Mechanic Garages --- */

    RemoveBuildingForPlayer(playerid, 3289, 2484.4141, -2141.0078, 12.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 2496.0625, -2141.0078, 12.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 2503.1250, -2073.3750, 12.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 2515.4219, -2073.3750, 12.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3288, 2432.7266, -2133.0234, 12.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3686, 2448.1328, -2075.6328, 16.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 3745, 2475.1016, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3745, 2482.0234, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3745, 2489.1016, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3745, 2496.0938, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 2452.9609, -2129.0156, 25.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3756, 2484.2344, -2118.5547, 17.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3755, 2484.2344, -2118.5547, 17.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3257, 2432.7266, -2133.0234, 12.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 2484.4141, -2141.0078, 12.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 2496.0625, -2141.0078, 12.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 2452.9609, -2129.0156, 25.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3567, 2446.8281, -2075.8438, 13.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3567, 2438.3594, -2075.8438, 13.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3627, 2448.1328, -2075.6328, 16.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 3643, 2489.1016, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3643, 2482.0234, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3643, 2475.1016, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3643, 2496.0938, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 2515.4219, -2073.3750, 12.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 2503.1250, -2073.3750, 12.4297, 0.25);

	/* --- FireDepartment --- */
	// Fire Department OLD

	/*RemoveBuildingForPlayer(playerid, 4026, 1497.7969, -1543.7109, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 4218, 1497.7031, -1546.6172, 43.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 4016, 1497.7969, -1543.7109, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1516.1641, -1591.6563, 15.6250, 0.25);

	new number1 = CreatePlayerObject(playerid, 19353, 1522.9534, -1565.7065, 17.2818, -0.0000, 0.0000, 179.8670),
		number2 = CreatePlayerObject(playerid, 19353, 1522.9747, -1556.4064, 17.2811, 0.0000, 0.0000, -179.9326),
		number3 = CreatePlayerObject(playerid, 19353, 1522.9703, -1547.0604, 17.2922, 0.0000, 0.0000, 179.9940),
		number4 = CreatePlayerObject(playerid, 19353, 1522.9698, -1537.5981, 17.3016, 0.0000, 0.0000, 179.9208),
		number5 = CreatePlayerObject(playerid, 19353, 1510.9716, -1510.1949, 17.2990, 0.0000, 0.0000, -89.9666),
		number6 = CreatePlayerObject(playerid, 19353, 1520.5458, -1510.2094, 17.2798, 0.0000, 0.0000, -90.0102),
		number7 = CreatePlayerObject(playerid, 19353, 1529.7690, -1510.1945, 17.2898, 0.0000, 0.0000, -89.9501),
		number8 = CreatePlayerObject(playerid, 19353, 1539.0587, -1510.2080, 17.2898, 0.0000, 0.0000, -89.9601),
		LSCFD = CreatePlayerObject(playerid, 17951, 1451.0812, -1563.2667, 24.4368, 0.0000, -0.0999, -0.3663);

	SetPlayerObjectMaterialText(playerid, number1, "1", 0, 30, "Times New Roman", 24, 1, -1, 0, 1);
	SetPlayerObjectMaterialText(playerid, number2, "2", 0, 30, "Times New Roman", 24, 1, -1, 0, 1);
	SetPlayerObjectMaterialText(playerid, number3, "3", 0, 30, "Times New Roman", 24, 1, -1, 0, 1);
	SetPlayerObjectMaterialText(playerid, number4, "4", 0, 30, "Times New Roman", 24, 1, -1, 0, 1);
	SetPlayerObjectMaterialText(playerid, number5, "5", 0, 30, "Times New Roman", 24, 1, -1, 0, 1);
	SetPlayerObjectMaterialText(playerid, number6, "6", 0, 30, "Times New Roman", 24, 1, -1, 0, 1);
	SetPlayerObjectMaterialText(playerid, number7, "7", 0, 30, "Times New Roman", 24, 1, -1, 0, 1);
	SetPlayerObjectMaterialText(playerid, number8, "8", 0, 30, "Times New Roman", 24, 1, -1, 0, 1);
	SetPlayerObjectMaterialText(playerid, LSCFD, "LSFD", 0, 20, "Times New Roman", 22, 1, -1, 0, 1);*/

	// Fire Department NEW

	RemoveBuildingForPlayer(playerid, 4026, 1497.7969, -1543.7109, 17.5547, 0.25);
    RemoveBuildingForPlayer(playerid, 4218, 1497.7031, -1546.6172, 43.9922, 0.25);
    RemoveBuildingForPlayer(playerid, 4016, 1497.7969, -1543.7109, 17.5547, 0.25);
    RemoveBuildingForPlayer(playerid, 1283, 1516.1641, -1591.6563, 15.6250, 0.25);

	/* --- Gas Station --- */

	RemoveBuildingForPlayer(playerid, 1412, 1917.3203, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1912.0547, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1906.7734, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1927.8516, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1922.5859, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1938.3906, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1933.1250, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1676, 1941.6563, -1778.4531, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1676, 1941.6563, -1774.3125, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1676, 1941.6563, -1771.3438, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1676, 1941.6563, -1767.2891, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1821.1250, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1815.8594, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1810.5938, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1805.3281, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1948.9844, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1943.6875, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1800.0625, 13.8125, 0.25);
}

stock Objects_Old()
{
	//
    CreateDynamicObject(8673,812.5999756,1729.0000000,5.6999998,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs)(1)
	CreateDynamicObject(8673,793.5000000,1724.0000000,5.6999998,0.0000000,0.0000000,30.0000000); //object(csrsfence03_lvs)(2)
	CreateDynamicObject(8673,784.6992188,1708.7998047,5.6999998,0.0000000,0.0000000,90.9997559); //object(csrsfence03_lvs)(3)
	CreateDynamicObject(8673,827.4003900,1707.3403000,5.7999997,0.0000000,2.0000000,103.9965800); //object(csrsfence03_lvs)(4)
	CreateDynamicObject(8673,832.2000122,1687.5400391,6.1300001,0.0000000,0.0000000,103.9965820); //object(csrsfence03_lvs)(5)
	CreateDynamicObject(966,823.0000000,1726.5000000,4.0999999,0.0000000,0.0000000,104.0000000); //object(bar_gatebar01)(1)
	CreateDynamicObject(968,823.0000000,1726.5000000,4.7999997,0.0000000,340.0000000,100.0000000); //object(barrierturn)(1)
	CreateDynamicObject(970,815.7999878,1685.3000488,4.8000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(1)
	CreateDynamicObject(970,807.9000244,1685.4000244,4.8000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(2)
	CreateDynamicObject(3077,800.4003900,1677.5000000,4.3000002,0.0000000,0.0000000,329.9963400); //object(nf_blackboard)(1)
	CreateDynamicObject(3077,-2125.3999023,-108.5999985,34.2999992,0.0000000,0.0000000,340.0000000); //object(nf_blackboard)(2)
	CreateDynamicObject(2971,-2113.3000488,-162.1999969,34.2999992,0.0000000,0.0000000,0.0000000); //object(k_smashboxes)(1)
	CreateDynamicObject(2971,-2149.3999023,-203.3000031,34.2999992,0.0000000,0.0000000,0.0000000); //object(k_smashboxes)(2)
	CreateDynamicObject(1449,-2152.3000488,-204.5000000,34.7999992,0.0000000,0.0000000,0.0000000); //object(dyn_crate_2)(1)
	CreateDynamicObject(1372,-2125.5000000,-111.0000000,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_dump2_low)(1)
	CreateDynamicObject(1372,-2126.3999023,-194.6000061,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_dump2_low)(2)
	CreateDynamicObject(1238,-2131.1000977,-245.0000000,34.7000008,0.0000000,0.0000000,0.0000000); //object(trafficcone)(1)
	CreateDynamicObject(1238,-2131.8000488,-243.6000061,34.7000008,0.0000000,0.0000000,0.0000000); //object(trafficcone)(2)
	CreateDynamicObject(1238,-2132.6000977,-242.1999969,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(3)
	CreateDynamicObject(1238,-2133.3000488,-240.6999969,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(4)
	CreateDynamicObject(1238,-2131.3000488,-250.8000031,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(5)
	CreateDynamicObject(1238,-2132.0000000,-252.0000000,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(6)
	CreateDynamicObject(1238,-2132.8000488,-253.1999969,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(7)
	CreateDynamicObject(1238,-2133.6000977,-254.3999939,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(8)
	CreateDynamicObject(1238,-2104.1000977,-235.6000061,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(9)
	CreateDynamicObject(1238,-2103.1999512,-234.3000031,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(10)
	CreateDynamicObject(1238,-2102.1999512,-232.8000031,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(11)
	CreateDynamicObject(1238,-2101.0000000,-231.3999939,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(12)
	CreateDynamicObject(1238,-2099.8999023,-230.0000000,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(13)
	CreateDynamicObject(3594,-2100.8000488,-234.1000061,35.0000000,0.0000000,0.0000000,330.0000000); //object(la_fuckcar1)(1)
	CreateDynamicObject(1238,-2123.8999023,-141.1999969,35.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(14)
	CreateDynamicObject(1238,-2124.8000488,-124.5999985,35.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(15)
	CreateDynamicObject(1238,-2132.1000977,-135.8000031,35.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(16)
	CreateDynamicObject(1238,-2098.8000488,-228.8999939,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(17)
	CreateDynamicObject(1238,-2104.3999023,-272.5000000,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(18)
	CreateDynamicObject(2633,-2130.3000488,-190.1999969,36.9000015,0.0000000,0.0000000,0.0000000); //object(crack_walkway1)(1)
	CreateDynamicObject(2633,-2134.5996094,-190.1992188,36.9000015,0.0000000,0.0000000,0.0000000); //object(crack_walkway1)(2)
	CreateDynamicObject(2633,-2135.5000000,-193.5000000,36.9000015,0.0000000,0.0000000,90.0000000); //object(crack_walkway1)(3)
	CreateDynamicObject(2633,-2135.5000000,-197.8000031,36.9000015,0.0000000,0.0000000,90.0000000); //object(crack_walkway1)(4)
	CreateDynamicObject(2633,-2132.1999512,-198.6999969,36.9000015,0.0000000,0.0000000,180.0000000); //object(crack_walkway1)(5)
	CreateDynamicObject(2633,-2128.0000000,-198.6999969,36.9000015,0.0000000,0.0000000,179.9945068); //object(crack_walkway1)(6)
	CreateDynamicObject(2633,-2123.8000488,-198.6999969,36.9000015,0.0000000,0.0000000,179.9945068); //object(crack_walkway1)(7)
	CreateDynamicObject(2633,-2119.5000000,-198.7002000,36.9000020,0.0000000,0.0000000,179.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,-2115.1999512,-198.6999969,36.9000015,0.0000000,0.0000000,179.9945068); //object(crack_walkway1)(9)
	CreateDynamicObject(2633,-2110.8999023,-198.6999969,36.9000015,0.0000000,0.0000000,179.9945068); //object(crack_walkway1)(10)
	CreateDynamicObject(3361,-2103.7998000,-198.8398400,36.6399990,0.0000000,0.0000000,0.0000000); //object(cxref_woodstair)(1)
	CreateDynamicObject(1654,-2098.3994141,-278.6992188,34.5999985,0.0000000,0.0000000,229.9987793); //object(dynamite)(1)
	CreateDynamicObject(1238,-2097.1999512,-272.3999939,34.7000008,0.0000000,0.0000000,0.0000000); //object(trafficcone)(23)
	CreateDynamicObject(1238,-2098.3000488,-272.5000000,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(24)
	CreateDynamicObject(1238,-2099.5000000,-272.5000000,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(25)
	CreateDynamicObject(1238,-2100.6999512,-272.3999939,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(26)
	CreateDynamicObject(1238,-2101.8999023,-272.3999939,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(27)
	CreateDynamicObject(1238,-2103.1000977,-272.5000000,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(28)
	CreateDynamicObject(933,-2142.2998047,-182.2998047,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(16398,385.2000122,2549.8000488,15.5000000,0.0000000,0.0000000,90.0000000); //object(desn2_peckfac1)(1)
	CreateDynamicObject(16398,820.7999878,1691.5000000,4.3000002,0.0000000,0.0000000,0.0000000); //object(desn2_peckfac1)(3)
	CreateDynamicObject(10847,361.8999939,2597.0000000,21.8999996,0.0000000,0.0000000,0.0000000); //object(gen_whouse03_sfse01)(1)
	CreateDynamicObject(3877,507.5000000,2523.0000000,37.7000008,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(1)
	CreateDynamicObject(3877,514.7000122,2516.6000977,37.9000015,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(2)
	CreateDynamicObject(3877,518.2000122,2506.6999512,37.4000015,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(3)
	CreateDynamicObject(3877,512.7000122,2496.6000977,37.7999992,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(4)
	CreateDynamicObject(3877,506.6000061,2491.8000488,37.2000008,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(5)
	CreateDynamicObject(3594,395.2999878,2577.5000000,16.1000004,0.0000000,0.0000000,59.9963379); //object(la_fuckcar1)(2)
	CreateDynamicObject(3594,396.7000122,2582.6999512,16.1000004,0.0000000,0.0000000,309.9957275); //object(la_fuckcar1)(3)
	CreateDynamicObject(3594,400.6000061,2579.8000488,16.2000008,0.0000000,0.0000000,0.0000000); //object(la_fuckcar1)(4)
	CreateDynamicObject(1654,383.5000000,2604.7998000,15.8000000,0.0000000,0.0000000,0.0000000); //object(dynamite)(4)
	CreateDynamicObject(1217,384.6976013,2605.7016602,15.8771524,0.0000000,0.0000000,0.0000000); //object(barrel2)(1)
	CreateDynamicObject(1217,383.7999878,2606.1000977,15.8999996,0.0000000,0.0000000,0.0000000); //object(barrel2)(2)
	CreateDynamicObject(1238,-21.1000004,2335.1000977,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(29)
	CreateDynamicObject(1238,-19.0000000,2334.8000488,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(30)
	CreateDynamicObject(1238,-17.8999996,2332.8999023,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(31)
	CreateDynamicObject(1238,-22.8999996,2334.3999023,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(32)
	CreateDynamicObject(1238,-23.7000008,2332.8999023,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(33)
	CreateDynamicObject(1238,-23.1000004,2330.8999023,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(34)
	CreateDynamicObject(1238,-21.3999996,2330.1000977,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(35)
	CreateDynamicObject(1238,-19.2999992,2330.1000977,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(36)
	CreateDynamicObject(1238,-17.7999992,2331.0000000,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(37)
	CreateDynamicObject(1238,-43.7000008,2350.6000977,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(38)
	CreateDynamicObject(1238,-44.5999985,2349.3999023,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(39)
	CreateDynamicObject(1238,-45.4000015,2348.3000488,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(40)
	CreateDynamicObject(1238,-46.2999992,2347.1999512,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(41)
	CreateDynamicObject(1238,-47.2999992,2345.8999023,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(42)
	CreateDynamicObject(933,-2140.6000977,-183.0000000,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(933,-2131.1999512,-144.6999969,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(933,-2124.0000000,-141.1999969,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(933,-2132.0000000,-135.8000031,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(933,-2124.3999023,-132.5000000,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(933,-2132.3999023,-125.5999985,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(933,-2124.8000488,-124.5999985,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(3069,-2165.6000977,-209.5000000,34.2000008,0.0000000,0.0000000,90.0000000); //object(d9_ramp)(1)
	CreateDynamicObject(11103,-2180.3999023,-212.0000000,37.4000015,0.0000000,0.0000000,0.0000000); //object(cfsmashwin1_sfs)(1)
	CreateDynamicObject(11103,-2180.3999023,-207.0000000,37.4000015,0.0000000,0.0000000,0.0000000); //object(cfsmashwin1_sfs)(2)
	CreateDynamicObject(3934,346.7999878,2538.6000977,15.8000002,0.0000000,0.0000000,90.0000000); //object(helipad01)(1)
	CreateDynamicObject(8247,151.7998000,2540.6006000,19.5000000,0.0000000,0.0000000,270.0000000); //object(pltschlhnger69_lvs)(1)
	CreateDynamicObject(1583,-36.2999992,2350.5000000,23.2999992,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(1)
	CreateDynamicObject(1583,-38.2999992,2350.3000488,23.2999992,0.0000000,0.0000000,310.0000000); //object(tar_gun2)(2)
	CreateDynamicObject(3279,348.7998000,2470.5000000,15.5000000,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(1)
	CreateDynamicObject(3279,152.5000000,2470.7998000,15.5000000,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(2)
	CreateDynamicObject(3279,794.7000122,1714.1999512,4.3000002,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(3)
	CreateDynamicObject(8673,784.7998047,1681.3994141,5.6999998,0.0000000,0.0000000,90.9942627); //object(csrsfence03_lvs)(3)
	CreateDynamicObject(970,800.0999756,1685.9000244,4.8000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(2)
	CreateDynamicObject(970,793.5000000,1688.0999756,4.8000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(1)
	CreateDynamicObject(970,793.5000000,1685.0000000,4.8000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(1)
	CreateDynamicObject(970,815.7999878,1687.8000488,4.8000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(1)
	CreateDynamicObject(14553,266.0000000,2497.6999512,19.1999989,14.0000000,0.0000000,270.0000000); //object(androm_des_obj)(1)
	CreateDynamicObject(14548,268.9003900,2497.7002000,19.6400010,13.9965820,0.0000000,270.0000000); //object(cargo_test)(1)
	CreateDynamicObject(1327,282.7000122,2494.3999023,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(1)
	CreateDynamicObject(1327,282.6000061,2495.1999512,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(2)
	CreateDynamicObject(1327,282.5000000,2496.0000000,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(3)
	CreateDynamicObject(1327,282.5000000,2500.0000000,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(4)
	CreateDynamicObject(1327,282.6000061,2500.8000488,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(5)
	CreateDynamicObject(1327,282.5000000,2501.5000000,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(6)
	CreateDynamicObject(1327,230.0000000,2498.5000000,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(7)
	CreateDynamicObject(1327,230.0000000,2497.8000488,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(8)
	CreateDynamicObject(2991,289.4003900,2494.7002000,18.6000000,0.0000000,0.0000000,0.0000000); //object(imy_bbox)(1)
	CreateDynamicObject(2974,283.7000122,2495.0000000,17.8999996,0.0000000,0.0000000,0.0000000); //object(k_cargo1)(1)
	CreateDynamicObject(2973,289.5000000,2500.5000000,18.0000000,0.0000000,0.0000000,0.0000000); //object(k_cargo2)(1)
	CreateDynamicObject(2935,348.3999939,2591.3000488,17.2000008,0.0000000,0.0000000,0.0000000); //object(kmb_container_yel)(1)
	CreateDynamicObject(2935,348.4003900,2591.2998000,20.1000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_yel)(2)
	CreateDynamicObject(2912,288.7000122,2494.5000000,19.2000008,0.0000000,0.0000000,0.0000000); //object(temp_crate1)(1)
	CreateDynamicObject(3576,270.2998000,2500.2002000,19.2000010,0.0000000,0.0000000,0.0000000); //object(dockcrates2_la)(1)
	CreateDynamicObject(2973,274.6000061,2497.5000000,17.7000008,0.0000000,0.0000000,0.0000000); //object(k_cargo2)(2)
	CreateDynamicObject(2973,255.3000031,2494.5000000,17.3999996,0.0000000,0.0000000,0.0000000); //object(k_cargo2)(3)
	CreateDynamicObject(2974,253.3999939,2497.0000000,17.3999996,0.0000000,0.0000000,0.0000000); //object(k_cargo1)(2)
	CreateDynamicObject(2991,245.8999939,2500.8000488,17.8999996,0.0000000,0.0000000,0.0000000); //object(imy_bbox)(2)
	CreateDynamicObject(2991,247.8000031,2498.8000488,17.8999996,0.0000000,0.0000000,0.0000000); //object(imy_bbox)(3)
	CreateDynamicObject(1654,243.8999939,2499.8999023,18.2000008,0.0000000,0.0000000,270.0000000); //object(dynamite)(1)
	CreateDynamicObject(1654,282.8999939,2496.3000488,19.8999996,0.0000000,0.0000000,229.9987793); //object(dynamite)(1)
	CreateDynamicObject(1654,252.5996100,2498.2998000,19.6000000,0.0000000,0.0000000,229.9932900); //object(dynamite)(1)
	CreateDynamicObject(1583,253.3999939,2495.3000488,17.3999996,0.0000000,0.0000000,309.9957275); //object(tar_gun2)(3)
	CreateDynamicObject(3819,-2122.8994000,-101.2002000,35.2999990,0.0000000,0.0000000,90.0000000); //object(bleacher_sfsx)(1)
	CreateDynamicObject(14791,408.5000000,2456.1000977,17.5000000,0.0000000,0.0000000,0.0000000); //object(a_vgsgymboxa)(1)
	CreateDynamicObject(2973,390.2998047,2456.6005859,15.5000000,0.0000000,0.0000000,0.0000000); //object(k_cargo2)(4)
	CreateDynamicObject(2934,394.1000061,2454.5000000,17.0000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_red)(1)
	CreateDynamicObject(2932,397.7001953,2454.6015625,16.9101562,0.0000000,0.0000000,0.0000000); //object(kmb_container_blue)(1)
	CreateDynamicObject(18260,402.7001953,2441.7001953,17.1000004,0.0000000,0.0000000,0.0000000); //object(crates01)(1)
	CreateDynamicObject(18257,419.2999878,2465.6000977,15.5000000,0.0000000,0.0000000,0.0000000); //object(crates)(1)
	CreateDynamicObject(931,400.5000000,2457.3000488,16.6000004,0.0000000,0.0000000,0.0000000); //object(rack3)(1)
	CreateDynamicObject(964,400.2000122,2455.3000488,15.5000000,0.0000000,0.0000000,0.0000000); //object(cj_metal_crate)(1)
	CreateDynamicObject(964,400.2000122,2453.8999023,15.5000000,0.0000000,0.0000000,0.0000000); //object(cj_metal_crate)(2)
	CreateDynamicObject(1348,400.2000122,2452.6999512,16.2000008,0.0000000,0.0000000,0.0000000); //object(cj_o2tanks)(1)
	CreateDynamicObject(1348,400.2000122,2451.6000977,16.2000008,0.0000000,0.0000000,0.0000000); //object(cj_o2tanks)(2)
	CreateDynamicObject(2043,809.7999878,1668.0999756,5.3000002,0.0000000,0.0000000,0.0000000); //object(ammo_box_m4)(1)
	CreateDynamicObject(2043,807.0999756,1668.0999756,5.3000002,0.0000000,0.0000000,0.0000000); //object(ammo_box_m4)(2)
	CreateDynamicObject(2358,812.4000244,1674.1999512,4.4000001,0.0000000,0.0000000,0.0000000); //object(ammo_box_c2)(1)
	CreateDynamicObject(2359,814.9000244,1674.3000488,4.5000000,0.0000000,0.0000000,0.0000000); //object(ammo_box_c5)(1)
	CreateDynamicObject(2040,811.7000122,1674.1999512,4.4000001,0.0000000,0.0000000,0.0000000); //object(ammo_box_m1)(1)
	CreateDynamicObject(2040,811.5000000,1674.1999512,4.4000001,0.0000000,0.0000000,0.0000000); //object(ammo_box_m1)(2)
	CreateDynamicObject(2040,806.7999878,1668.1999512,5.3000002,0.0000000,0.0000000,0.0000000); //object(ammo_box_m1)(3)
	CreateDynamicObject(2042,804.4000244,1668.1999512,5.3000002,0.0000000,0.0000000,0.0000000); //object(ammo_box_m3)(1)
	CreateDynamicObject(2043,803.7999878,1668.0999756,5.3000002,0.0000000,0.0000000,0.0000000); //object(ammo_box_m4)(3)
	CreateDynamicObject(2567,820.2002000,1682.5000000,6.1999998,0.0000000,0.0000000,0.0000000); //object(ab_warehouseshelf)(1)
	CreateDynamicObject(3632,794.0000000,1688.5999756,4.8000002,0.0000000,0.0000000,0.0000000); //object(imoildrum_las)(1)
	CreateDynamicObject(3632,793.9000244,1689.3000488,4.8000002,0.0000000,0.0000000,0.0000000); //object(imoildrum_las)(2)
	CreateDynamicObject(3633,792.9000244,1698.9000244,4.8000002,0.0000000,0.0000000,0.0000000); //object(imoildrum4_las)(1)
	CreateDynamicObject(16601,805.2000122,1724.4000244,9.3999996,0.0000000,0.0000000,0.0000000); //object(by_fuel07)(1)
	CreateDynamicObject(17055,823.0999756,1676.9000244,6.5999999,0.0000000,0.0000000,0.0000000); //object(cw_fueldrum03)(1)
	CreateDynamicObject(3819,803.7999878,1683.0999756,5.3000002,0.0000000,0.0000000,86.0000000); //object(bleacher_sfsx)(2)
	CreateDynamicObject(3496,793.9000244,1693.0999756,4.3000002,0.0000000,0.0000000,270.0000000); //object(vgsxrefbballnet)(1)
	CreateDynamicObject(2114,794.9000244,1692.8000488,4.5999999,0.0000000,0.0000000,0.0000000); //object(basketball)(1)
	CreateDynamicObject(1766,788.7999878,1679.5000000,4.3000002,0.0000000,0.0000000,0.0000000); //object(med_couch_1)(1)
	CreateDynamicObject(1766,787.0000000,1676.9000244,4.3000002,0.0000000,0.0000000,70.0000000); //object(med_couch_1)(2)
	CreateDynamicObject(1761,790.5000000,1675.5000000,4.3000002,0.0000000,0.0000000,180.0000000); //object(swank_couch_2)(1)
	CreateDynamicObject(2051,813.5999756,1681.6999512,6.4000001,0.0000000,0.0000000,180.0000000); //object(cj_target4)(1)
	CreateDynamicObject(1614,817.5000000,1690.5999756,7.6999998,0.0000000,0.0000000,0.0000000); //object(nt_alarm1_01)(1)
	CreateDynamicObject(1583,810.7000122,1613.3000488,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(4)
	CreateDynamicObject(1584,804.7000122,1613.5999756,4.5999999,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(1)
	CreateDynamicObject(1585,810.0000000,1613.9000244,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(1)
	CreateDynamicObject(1583,805.4000244,1613.5000000,4.4000001,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(5)
	CreateDynamicObject(1585,805.0000000,1613.5999756,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(2)
	CreateDynamicObject(1585,801.4000244,1614.0000000,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(3)
	CreateDynamicObject(1583,801.0000000,1613.9000244,4.4000001,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(6)
	CreateDynamicObject(1584,800.5000000,1614.0999756,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(2)
	CreateDynamicObject(1584,795.2000122,1614.4000244,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(3)
	CreateDynamicObject(1585,794.5999756,1614.5000000,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(4)
	CreateDynamicObject(1583,794.0000000,1614.5999756,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(7)
	CreateDynamicObject(1997,816.7000122,1690.0000000,4.3000002,0.0000000,0.0000000,0.0000000); //object(hos_trolley)(1)
	CreateDynamicObject(1997,816.6992188,1690.0000000,4.3000002,0.0000000,0.0000000,0.0000000); //object(hos_trolley)(2)
	CreateDynamicObject(1997,816.9000244,1693.0999756,4.3000002,0.0000000,0.0000000,0.0000000); //object(hos_trolley)(3)
	CreateDynamicObject(3819,1038.9000000,1320.2000000,10.8000000,0.0000000,0.0000000,90.0000000); //object(bleacher_sfsx)(1)
	CreateDynamicObject(3077,1031.8000000,1310.2000000,9.8000002,0.0000000,0.0000000,329.9963400); //object(nf_blackboard)(1)
	CreateDynamicObject(4100,1038.3000000,1323.7000000,11.5000000,0.0000000,0.0000000,140.0000000); //object(meshfence1_lan)(1)
	CreateDynamicObject(4100,1052.0000000,1323.7000000,11.5000000,0.0000000,0.0000000,139.9987800); //object(meshfence1_lan)(2)
	CreateDynamicObject(16770,1087.2000000,1251.9000000,11.4000000,0.0000000,0.0000000,270.0000000); //object(des_gunbldg01)(1)
	CreateDynamicObject(3578,1042.6000000,1311.0000000,9.0600004,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(1)
	CreateDynamicObject(3578,1053.4000000,1311.0000000,9.0600004,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(2)
	CreateDynamicObject(3819,1052.5000000,1320.0000000,10.8000000,0.0000000,0.0000000,90.0000000); //object(bleacher_sfsx)(1)
	CreateDynamicObject(984,1080.3000000,1240.7000000,10.5000000,0.0000000,0.0000000,0.0000000); //object(fenceshit2)(1)
	CreateDynamicObject(983,1080.3000000,1231.1000000,10.5000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3)(1)
	CreateDynamicObject(2056,1095.2000000,1224.0000000,12.2000000,0.0000000,0.0000000,180.0000000); //object(cj_target6)(1)
	CreateDynamicObject(2056,1094.0000000,1224.0000000,11.6000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(2)
	CreateDynamicObject(2056,1092.8000000,1224.0000000,12.6000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(3)
	CreateDynamicObject(2056,1091.9000000,1224.0000000,11.2000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(4)
	CreateDynamicObject(2056,1091.0000000,1224.0000000,12.3000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(5)
	CreateDynamicObject(2056,1096.4000000,1224.0000000,11.0000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(6)
	CreateDynamicObject(2056,1089.8000000,1224.0000000,11.1000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(7)
	CreateDynamicObject(2056,1089.1000000,1224.0000000,12.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(8)
	CreateDynamicObject(2056,1093.1000000,1224.0000000,10.8000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(9)
	CreateDynamicObject(2056,1096.6000000,1224.0000000,12.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(10)
	CreateDynamicObject(2056,1090.0000000,1224.0000000,12.0000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(11)
	CreateDynamicObject(2056,1088.4000000,1224.0000000,10.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(12)
	CreateDynamicObject(2056,1088.4000000,1224.0000000,11.8000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(13)
	CreateDynamicObject(2056,1087.5000000,1224.0000000,12.6000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(14)
	CreateDynamicObject(2056,1087.2000000,1224.0000000,11.2000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(15)
	CreateDynamicObject(2056,1086.4000000,1224.0000000,11.8000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(16)
	CreateDynamicObject(2056,1090.2000000,1224.0000000,12.8000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(17)
	CreateDynamicObject(2056,1094.1000000,1224.0000000,13.0000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(18)
	CreateDynamicObject(2056,1085.7000000,1224.0000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(19)
	CreateDynamicObject(2056,1084.8000000,1224.0000000,11.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(20)
	CreateDynamicObject(2056,1095.1000000,1224.0000000,10.8000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(21)
	CreateDynamicObject(2056,1083.9000000,1224.0000000,12.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(22)
	CreateDynamicObject(2056,1083.9000000,1224.0000000,10.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(23)
	CreateDynamicObject(2056,1083.1000000,1224.0000000,11.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(24)
	CreateDynamicObject(2056,1082.6000000,1224.0000000,13.1000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(25)
	CreateDynamicObject(2056,1082.1000000,1224.0000000,10.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(26)
	CreateDynamicObject(2056,1082.0000000,1224.0000000,12.0000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(27)
	CreateDynamicObject(1583,1091.8000000,1224.0000000,11.7000000,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(9)
	CreateDynamicObject(1583,1076.0000000,1224.0000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(10)
	CreateDynamicObject(1584,1084.7000000,1224.0000000,12.1000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(5)
	CreateDynamicObject(1585,1086.1000000,1224.0000000,12.3000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(6)
	CreateDynamicObject(1586,1091.0000000,1224.0000000,10.0000000,0.0000000,0.0000000,0.0000000); //object(tar_civ1)(1)
	CreateDynamicObject(1585,1096.0000000,1224.0000000,11.3000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(7)
	CreateDynamicObject(1238,1062.3000000,1258.7000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(19)
	CreateDynamicObject(1238,1061.5000000,1257.1000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(20)
	CreateDynamicObject(1238,1060.8000000,1255.6000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(21)
	CreateDynamicObject(1238,1060.1000000,1254.0000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(22)
	CreateDynamicObject(1238,1062.1000000,1262.3000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(43)
	CreateDynamicObject(1238,1061.3000000,1263.9000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(44)
	CreateDynamicObject(1238,1060.7000000,1265.3000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(45)
	CreateDynamicObject(1238,1060.0000000,1266.6000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(46)
	CreateDynamicObject(3578,1058.4000000,1273.3000000,10.6000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(3)
	CreateDynamicObject(3578,1057.5000000,1248.6000000,10.6000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(4)
	CreateDynamicObject(3578,1089.9000000,1281.6000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(5)
	CreateDynamicObject(3578,1089.9000000,1291.7000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(6)
	CreateDynamicObject(3578,1090.1000000,1313.3000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(7)
	CreateDynamicObject(3578,1090.1000000,1323.6000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(8)
	CreateDynamicObject(3578,1079.5000000,1323.3000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(9)
	CreateDynamicObject(3578,1079.5000000,1313.0000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(10)
	CreateDynamicObject(3578,1079.6000000,1291.8000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(11)
	CreateDynamicObject(3578,1079.6000000,1281.5000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(12)
	CreateDynamicObject(3578,1074.8000000,1297.1000000,9.0600004,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(13)
	CreateDynamicObject(3578,1074.6000000,1307.8000000,9.0600004,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(14)
	CreateDynamicObject(3578,1094.9000000,1308.1000000,9.0600004,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(15)
	CreateDynamicObject(3578,1094.6000000,1297.1000000,9.0600004,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(16)
	CreateDynamicObject(1315,1087.6000000,1308.8000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(trafficlight1)(1)
	CreateDynamicObject(1315,1079.1000000,1305.3000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(trafficlight1)(2)
	CreateDynamicObject(983,1065.7000000,1248.6000000,10.5000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3)(2)
	CreateDynamicObject(983,1072.1000000,1248.6000000,10.5000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3)(3)
	CreateDynamicObject(8674,1075.2000000,1243.9000000,11.3000000,0.0000000,0.0000000,0.0000000); //object(csrsfence02_lvs)(1)
	CreateDynamicObject(3578,1080.2000000,1224.0000000,10.1000000,0.0000000,90.0000000,90.0000000); //object(dockbarr1_la)(17)
	CreateDynamicObject(2987,1079.1000000,1237.5000000,11.0000000,0.0000000,0.0000000,180.0000000); //object(lxr_motel_doorsim)(2)
	CreateDynamicObject(2987,1076.5000000,1237.6000000,11.0000000,0.0000000,0.0000000,179.9945100); //object(lxr_motel_doorsim)(3)
	CreateDynamicObject(2987,1073.9000000,1237.6000000,11.0000000,0.0000000,0.0000000,179.9945100); //object(lxr_motel_doorsim)(4)
	CreateDynamicObject(2987,1071.3000000,1237.6000000,11.0000000,0.0000000,0.0000000,179.9945100); //object(lxr_motel_doorsim)(5)
	CreateDynamicObject(9131,1077.8000000,1237.2000000,10.9000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs)(1)
	CreateDynamicObject(9131,1075.2000000,1237.2000000,10.9000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs)(2)
	CreateDynamicObject(9131,1072.6000000,1237.2000000,10.9000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs)(3)
	CreateDynamicObject(9131,1070.0000000,1237.2000000,10.9000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs)(4)
	CreateDynamicObject(3077,1094.5000000,1359.5000000,9.8999996,0.0000000,0.0000000,100.0000000); //object(nf_blackboard)(1)
	CreateDynamicObject(1585,1079.3000000,1224.0000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(8)
	CreateDynamicObject(1584,1079.4000000,1224.0000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(6)
	CreateDynamicObject(1583,1076.1000000,1224.0000000,10.9000000,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(11)
	CreateDynamicObject(1584,1073.3000000,1224.0000000,10.7000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(7)
	CreateDynamicObject(1583,1073.2000000,1224.0000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(12)
	CreateDynamicObject(1584,1070.4000000,1224.0000000,10.6000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(8)
	CreateDynamicObject(1584,1070.4000000,1224.0000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(9)
	CreateDynamicObject(1585,1077.9000000,1224.0000000,11.7000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(9)
	CreateDynamicObject(1585,1074.7000000,1224.0000000,11.8000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(10)
	CreateDynamicObject(1585,1071.7000000,1224.0000000,11.7000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(11)
	CreateDynamicObject(2991,1077.9000000,1231.6000000,10.4000000,0.0000000,0.0000000,0.0000000); //object(imy_bbox)(4)
	CreateDynamicObject(2991,1071.9000000,1231.7000000,10.5000000,0.0000000,0.0000000,0.0000000); //object(imy_bbox)(5)
	CreateDynamicObject(2633,1058.6000000,1226.1000000,12.4000000,0.0000000,0.0000000,270.0000000); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1230.3000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1234.4000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1238.6000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1242.9000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1247.1000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1251.3000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1255.5000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1259.7000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1263.9000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1268.1000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1272.3000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1276.5000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1280.8000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1285.0000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1289.2000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1293.4000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(3361,1058.6000000,1300.4000000,11.9600000,0.0000000,0.0000000,90.0000000); //object(cxref_woodstair)(1)
	CreateDynamicObject(8674,1059.2000000,1328.9000000,11.3000000,0.0000000,0.0000000,90.0000000); //object(csrsfence02_lvs)(3)
	CreateDynamicObject(869,1059.5000000,1387.7000000,10.3000000,0.0000000,0.0000000,90.0000000); //object(veg_pflowerswee)(1)
	CreateDynamicObject(8230,1088.4000000,1352.7000000,11.8000000,0.0000000,0.0000000,90.0000000); //object(vgsbikeschl01)(1)
	CreateDynamicObject(8231,1088.1801000,1352.6200000,11.6300000,0.0000000,0.0000000,90.0000000); //object(vgsbikeschl05)(1)
	CreateDynamicObject(14604,1094.7000000,1355.9000000,10.9000000,0.0000000,0.0000000,70.0000000); //object(tv_stand_bike)(1)
	CreateDynamicObject(1811,1089.8000000,1360.8000000,10.6000000,0.0000000,0.0000000,180.0000000); //object(med_din_chair_5)(1)
	CreateDynamicObject(1811,1089.8000000,1360.1000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(2)
	CreateDynamicObject(1811,1089.8000000,1359.4000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(3)
	CreateDynamicObject(1811,1089.8000000,1358.7000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(4)
	CreateDynamicObject(1811,1089.8000000,1358.0000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(5)
	CreateDynamicObject(1811,1087.8000000,1360.9000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(6)
	CreateDynamicObject(1811,1087.8000000,1360.2000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(7)
	CreateDynamicObject(1811,1087.8000000,1359.5000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(8)
	CreateDynamicObject(1811,1087.8000000,1358.8000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(9)
	CreateDynamicObject(1811,1087.8000000,1358.1000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(10)
	CreateDynamicObject(1811,1085.9000000,1360.9000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(11)
	CreateDynamicObject(1811,1085.9000000,1360.2000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(12)
	CreateDynamicObject(1811,1085.9000000,1359.5000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(13)
	CreateDynamicObject(1811,1085.9000000,1358.8000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(14)
	CreateDynamicObject(1811,1085.9000000,1358.1000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(15)
	CreateDynamicObject(1811,1083.9000000,1361.0000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(16)
	CreateDynamicObject(1811,1083.9000000,1360.3000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(17)
	CreateDynamicObject(1811,1083.9000000,1359.6000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(18)
	CreateDynamicObject(1811,1083.9000000,1358.9000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(19)
	CreateDynamicObject(1811,1083.9000000,1358.2000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(20)
	CreateDynamicObject(1808,1091.9000000,1354.5000000,9.8999996,0.0000000,0.0000000,270.0000000); //object(cj_watercooler2)(1)
	CreateDynamicObject(1808,1082.1000000,1361.3000000,9.8999996,0.0000000,0.0000000,0.0000000); //object(cj_watercooler2)(2)
	CreateDynamicObject(1703,1080.2000000,1358.6000000,9.8999996,0.0000000,0.0000000,90.0000000); //object(kb_couch02)(1)
	CreateDynamicObject(1703,1080.2000000,1355.9000000,9.8999996,0.0000000,0.0000000,90.0000000); //object(kb_couch02)(2)
	CreateDynamicObject(1497,1079.6801000,1355.3199000,9.8999996,0.0000000,0.0000000,0.0000000); //object(gen_doorext02)(1)
	CreateDynamicObject(1247,1080.5000000,1355.2999000,11.9000000,0.0000000,0.0000000,0.0000000); //object(bribe)(4)
	CreateDynamicObject(2959,1057.3000000,1259.9000000,9.7100000,0.0000000,0.0000000,0.0000000); //object(rider1_door)(1)
	CreateDynamicObject(2056,1088.6000000,1224.0000000,13.1000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(28)
	CreateDynamicObject(2056,1087.8000000,1224.0000000,10.8000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(29)
	CreateDynamicObject(7191,1075.1000000,1223.6000000,17.2999990,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b)(1)
	CreateDynamicObject(7191,1097.7000000,1246.0000000,17.2999990,0.0000000,0.0000000,0.0000000); //object(vegasnnewfence2b)(2)
	CreateDynamicObject(7191,1097.8000000,1291.1000000,17.2999990,0.0000000,0.0000000,0.0000000); //object(vegasnnewfence2b)(3)
	CreateDynamicObject(7191,1097.9000000,1336.0000000,17.2999990,0.0000000,0.0000000,0.0000000); //object(vegasnnewfence2b)(4)
	CreateDynamicObject(1215,1061.1000000,1365.5000000,10.4000000,0.0000000,0.0000000,0.0000000); //object(bollardlight)(1)
	CreateDynamicObject(1215,1073.9000000,1365.4000000,10.4000000,0.0000000,0.0000000,0.0000000); //object(bollardlight)(2)
	CreateDynamicObject(1216,1081.2000000,1361.2000000,10.6000000,0.0000000,0.0000000,0.0000000); //object(phonebooth1)(1)
	CreateDynamicObject(1776,1093.3000000,1354.3000000,11.0000000,0.0000000,0.0000000,0.0000000); //object(cj_candyvendor)(1)
	CreateDynamicObject(1775,1094.9000000,1354.3000000,11.0000000,0.0000000,0.0000000,0.0000000); //object(cj_sprunk1)(1)
	CreateDynamicObject(1703,1088.6000000,1350.8000000,9.8999996,0.0000000,0.0000000,90.0000000); //object(kb_couch02)(3)
	CreateDynamicObject(2935,348.3999900,2591.3000000,23.0000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_yel)(2)
	CreateDynamicObject(2935,348.3999900,2597.8999000,17.0000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_yel)(2)
	CreateDynamicObject(2935,348.2999900,2597.8999000,19.9000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_yel)(2)
	CreateDynamicObject(2935,348.3999900,2605.0000000,16.9000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_yel)(2)
	CreateDynamicObject(3077,386.2999900,2544.8999000,15.5000000,0.0000000,0.0000000,329.9963400); //object(nf_blackboard)(1)
	CreateDynamicObject(3108,-71.9000020,2504.0000000,15.5000000,0.0000000,0.0000000,0.0000000); //object(basejump_target)(1)
	CreateDynamicObject(3108,-47.5999980,2520.8999000,15.5000000,0.0000000,0.0000000,0.0000000); //object(basejump_target)(2)
	CreateDynamicObject(3108,-48.0000000,2484.8000000,15.5000000,0.0000000,0.0000000,0.0000000); //object(basejump_target)(3)
	CreateDynamicObject(3279,196.8000000,2536.3000000,15.7000000,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(1)
	CreateDynamicObject(1584,291.2000100,2500.5000000,18.0000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(10)
	CreateDynamicObject(1584,272.6000100,2501.3000000,17.7000010,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(11)
	CreateDynamicObject(1585,239.5000000,2494.5000000,17.1000000,0.0000000,0.0000000,90.0000000); //object(tar_civ2)(12)
	CreateDynamicObject(1583,269.2000100,2499.1001000,19.2000010,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(13)
	CreateDynamicObject(1584,287.7999900,2495.0000000,19.2000010,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(12)
	CreateDynamicObject(1585,249.1000100,2498.8000000,18.5000000,0.0000000,0.0000000,90.0000000); //object(tar_civ2)(13)
	CreateDynamicObject(1583,256.7999900,2495.0000000,17.4000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(14)
	CreateDynamicObject(1583,237.5000000,2497.3999000,17.1000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(15)
	CreateDynamicObject(1584,389.3999900,2606.1001000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(13)
	CreateDynamicObject(1584,398.2000100,2579.8999000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(14)
	CreateDynamicObject(1584,390.5000000,2601.3999000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(15)
	CreateDynamicObject(1585,384.2000100,2608.0000000,15.5000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(14)
	CreateDynamicObject(8253,103.4000000,2462.3000000,19.4000000,0.0000000,0.0000000,90.0000000); //object(pltschlhnger01_lvs)(1)
	CreateDynamicObject(2567,94.0999980,2460.0000000,17.4000000,0.0000000,0.0000000,0.0000000); //object(ab_warehouseshelf)(1)
	CreateDynamicObject(2567,93.9000020,2466.6001000,17.4000000,0.0000000,0.0000000,0.0000000); //object(ab_warehouseshelf)(1)
	CreateDynamicObject(2567,113.1000000,2468.1001000,17.4000000,0.0000000,0.0000000,0.0000000); //object(ab_warehouseshelf)(1)
	CreateDynamicObject(2567,112.9000000,2457.3999000,17.4000000,0.0000000,0.0000000,0.0000000); //object(ab_warehouseshelf)(1)
	CreateDynamicObject(2932,101.1000000,2454.3000000,16.9000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_blue)(1)
	CreateDynamicObject(2932,104.8000000,2454.3999000,16.9000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_blue)(1)
	CreateDynamicObject(18260,96.5999980,2472.6001000,17.1000000,0.0000000,0.0000000,0.0000000); //object(crates01)(1)
	CreateDynamicObject(2973,113.7000000,2460.7000000,15.5000000,0.0000000,0.0000000,0.0000000); //object(k_cargo2)(4)
	CreateDynamicObject(1654,110.5000000,2467.0000000,16.7999990,0.0000000,0.0000000,229.9932900); //object(dynamite)(1)
	CreateDynamicObject(1583,93.6999970,2469.1001000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(16)
	CreateDynamicObject(1585,93.9000020,2470.0000000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_civ2)(15)
	CreateDynamicObject(1584,-1446.5000000,1493.9000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(16)
	CreateDynamicObject(1583,-1446.6000000,1492.3000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(17)
	CreateDynamicObject(1583,-1427.5000000,1488.6000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(18)
	CreateDynamicObject(1584,-1408.6000000,1493.6000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(17)
	CreateDynamicObject(1583,-1399.5000000,1486.8000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(19)
	CreateDynamicObject(1584,-1385.8000000,1491.0000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(18)
	CreateDynamicObject(1584,-1385.7000000,1492.2000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(19)
	CreateDynamicObject(1584,-1384.9000000,1492.2000000,12.8000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(20)
	CreateDynamicObject(1583,-1384.9000000,1486.8000000,12.8000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(20)
	CreateDynamicObject(1583,-1382.8000000,1489.5000000,15.3000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(21)
	CreateDynamicObject(1584,-1362.7000000,1489.6000000,10.0000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(21)
	CreateDynamicObject(1583,-1375.3000000,1485.7000000,12.8000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(22)
	CreateDynamicObject(1583,-1375.2000000,1493.5000000,12.8000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(23)
	CreateDynamicObject(1583,-1384.6000000,1491.2000000,7.9000001,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(24)
	CreateDynamicObject(1584,-1371.3000000,1486.5000000,2.7000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(22)
	CreateDynamicObject(1584,-1386.1000000,1494.8000000,0.9000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(23)
	CreateDynamicObject(1583,-1393.9000000,1493.2000000,0.9000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(25)
	CreateDynamicObject(1583,-1402.9000000,1497.4000000,0.9000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(26)
	CreateDynamicObject(1584,-1422.5000000,1495.4000000,0.9000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(24)
	CreateDynamicObject(1584,-1390.6000000,1480.3000000,3.0000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(25)
	CreateDynamicObject(1584,-1392.6000000,1480.3000000,3.0000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(26)
	CreateDynamicObject(1583,-1396.9000000,1481.9000000,0.9000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(27)
	CreateDynamicObject(1584,-1435.7000000,1480.6000000,0.9000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(27)
	CreateDynamicObject(1583,-1438.6000000,1491.0000000,0.9000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(28)
	CreateDynamicObject(1584,-1452.9000000,1497.4000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(28)
	CreateDynamicObject(1584,-1447.8000000,1498.0000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(29)
	CreateDynamicObject(1583,-1444.6000000,1493.2000000,10.8000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(29)
	CreateDynamicObject(1584,-1452.8000000,1480.6000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(30)
	CreateDynamicObject(1584,-1448.1000000,1481.0000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(31)
	CreateDynamicObject(1584,-1436.6000000,1482.0000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(32)
	CreateDynamicObject(1584,-1427.7000000,1483.0000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(33)
	CreateDynamicObject(1584,-1418.4000000,1482.9000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(34)
	CreateDynamicObject(1584,-1409.6000000,1481.9000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(35)
	CreateDynamicObject(1584,-1400.3000000,1482.1000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(36)
	CreateDynamicObject(1584,-1391.1000000,1482.0000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(37)
	CreateDynamicObject(1584,-1437.5000000,1496.6000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(38)
	CreateDynamicObject(1584,-1428.3000000,1496.6000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(39)
	CreateDynamicObject(1584,-1418.9000000,1496.6000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(40)
	CreateDynamicObject(1584,-1410.0000000,1496.6000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(41)
	CreateDynamicObject(1584,-1400.4000000,1496.2000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(42)
	CreateDynamicObject(1584,-1392.2000000,1496.8000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(43)
	CreateDynamicObject(1496,364.1000100,2588.1001000,15.5000000,0.0000000,0.0000000,0.0000000); //object(gen_doorshop02)(1)
	CreateDynamicObject(3279,52.5000000,2534.0000000,15.5000000,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(2)
	CreateDynamicObject(3279,-74.9000020,2473.3999000,15.5000000,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(2)
	CreateDynamicObject(3279,252.7000000,2913.8000000,2.3000000,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(2)
	CreateDynamicObject(9361,119.5000000,2471.3999000,18.1000000,0.0000000,0.0000000,45.0000000); //object(boatoffice_sfn)(1)
	CreateDynamicObject(1998,117.1000000,2473.8000000,15.7000000,0.0000000,0.0000000,0.0000000); //object(officedesk1l)(1)
	CreateDynamicObject(2171,116.9000000,2468.1001000,15.7000000,0.0000000,0.0000000,90.0000000); //object(med_office4_desk_1)(1)
	CreateDynamicObject(2605,119.9000000,2470.3999000,16.1000000,0.0000000,0.0000000,0.0000000); //object(polce_desk1)(1)
	CreateDynamicObject(2606,116.4000000,2471.3999000,17.2000010,0.0000000,0.0000000,90.0000000); //object(cj_police_counter2)(1)
	CreateDynamicObject(2606,116.4000000,2471.3999000,17.7000010,0.0000000,0.0000000,90.0000000); //object(cj_police_counter2)(2)
	CreateDynamicObject(2606,116.4000000,2471.3999000,18.2000010,0.0000000,0.0000000,90.0000000); //object(cj_police_counter2)(3)
	CreateDynamicObject(2608,119.8000000,2475.2000000,16.5000000,0.0000000,0.0000000,0.0000000); //object(polce_shelf)(1)
	CreateDynamicObject(3084,187.3999900,2614.8000000,17.1000000,0.0000000,0.0000000,90.0000000); //object(trdcsgrgdoor_lvs)(1)
	CreateDynamicObject(16770,168.6000100,2612.8999000,17.1000000,0.0000000,0.0000000,0.0000000); //object(des_gunbldg01)(2)
	CreateDynamicObject(1583,187.2000000,2619.8000000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(30)
	CreateDynamicObject(1583,187.2000000,2616.7000000,15.6000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(31)
	CreateDynamicObject(1583,187.2000000,2613.6001000,15.6000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(32)
	CreateDynamicObject(1583,187.2000000,2609.3000000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(33)
	CreateDynamicObject(3877,-77.4000020,2483.7000000,17.2000010,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(6)
	CreateDynamicObject(3877,-77.8000030,2521.8999000,17.2000010,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(7)
	CreateDynamicObject(3877,-34.2000010,2477.0000000,17.2000010,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(8)
	CreateDynamicObject(3877,-33.7999990,2528.1001000,17.2000010,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(9)
	CreateDynamicObject(10230,296.2999900,3024.3999000,7.3000002,0.0000000,0.0000000,0.0000000); //object(freighter_sfe)(1)
	CreateDynamicObject(10140,311.0199900,3023.3440000,7.4489999,0.0000000,0.0000000,0.0000000); //object(freig2_intsfe)(1)
	CreateDynamicObject(10231,295.3999300,3022.8501000,8.5000248,0.0000000,0.0000000,0.0000000); //object(freightboxes)(1)
}

stock Objects_SanNews()
{
	// el corona
	CreateDynamicObject(3698,1893.9000244,-1851.1999512,15.3000002,0.0000000,0.0000000,0.0000000); //object(barrio3b_lae)(1)
	CreateDynamicObject(3698,1889.5000000,-1871.8994000,15.3000000,0.0000000,0.0000000,90.0000000); //object(barrio3b_lae)(2)
	CreateDynamicObject(3698,1874.6999512,-1858.9000244,15.3000002,0.0000000,0.0000000,0.0000000); //object(barrio3b_lae)(3)
	CreateDynamicObject(1413,1870.5999756,-1868.9000244,13.8000002,0.0000000,0.0000000,179.9945068); //object(dyn_mesh_3)(1)
	CreateDynamicObject(1413,1875.7998000,-1868.9004000,13.8000000,0.0000000,0.0000000,179.9945100); //object(dyn_mesh_3)(2)
	CreateDynamicObject(1413,1877.3994141,-1876.8994141,13.8000002,0.0000000,0.0000000,90.0000000); //object(dyn_mesh_3)(3)
	CreateDynamicObject(1757,1876.7002000,-1877.5000000,12.5000000,0.0000000,0.0000000,219.9957300); //object(low_couch_5)(1)
	CreateDynamicObject(1757,1872.5000000,-1878.9000244,12.5000000,0.0000000,0.0000000,130.0000000); //object(low_couch_5)(2)
	CreateDynamicObject(1421,1877.5999756,-1868.4000244,13.3000002,0.0000000,0.0000000,0.0000000); //object(dyn_boxes)(1)
	CreateDynamicObject(1758,1873.4000244,-1873.6999512,12.5000000,0.0000000,0.0000000,0.0000000); //object(low_single_4)(1)
	CreateDynamicObject(2370,1873.5999756,-1876.4000244,12.5000000,0.0000000,0.0000000,0.0000000); //object(shop_set_1_table)(1)
	CreateDynamicObject(7090,1788.8000488,-1875.8000488,26.7000008,0.0000000,0.0000000,0.0000000); //object(vegasflag1)(1)
	CreateDynamicObject(4199,1988.5000000,-2185.0000000,14.6999998,0.0000000,0.0000000,270.0000000); //object(garages1_lan)(1)
	CreateDynamicObject(1447,1884.3000488,-1855.0999756,13.8999996,0.0000000,0.0000000,0.0000000); //object(dyn_mesh_4)(1)
	CreateDynamicObject(1446,1912.6999512,-2095.6999512,13.1999998,0.0000000,0.0000000,90.0000000); //object(dyn_f_r_wood_4)(1)
	CreateDynamicObject(1446,1912.8000488,-2108.1000977,13.3999996,0.0000000,0.0000000,90.0000000); //object(dyn_f_r_wood_4)(2)
	CreateDynamicObject(1446,1833.1999512,-2107.8000488,13.3999996,0.0000000,0.0000000,270.0000000); //object(dyn_f_r_wood_4)(3)
	CreateDynamicObject(1446,1833.4000244,-2095.3999023,13.3999996,0.0000000,0.0000000,269.9945068); //object(dyn_f_r_wood_4)(4)
	CreateDynamicObject(1439,1842.9000244,-2095.8999023,12.5000000,0.0000000,0.0000000,0.0000000); //object(dyn_dumpster_1)(1)
	CreateDynamicObject(1448,1841.4000244,-2096.1000977,12.6000004,0.0000000,0.0000000,0.0000000); //object(dyn_crate_1)(1)
	CreateDynamicObject(1442,1841.3000488,-2096.1999512,13.3000002,0.0000000,0.0000000,0.0000000); //object(dyn_firebin0)(1)
	CreateDynamicObject(1442,1876.9000244,-1874.8000488,13.1000004,0.0000000,0.0000000,0.0000000); //object(dyn_firebin0)(2)
	CreateDynamicObject(1438,1870.0999756,-1870.0999756,12.5000000,0.0000000,0.0000000,0.0000000); //object(dyn_box_pile_2)(1)
	CreateDynamicObject(1438,1834.9000244,-2096.6000977,12.5000000,0.0000000,0.0000000,0.0000000); //object(dyn_box_pile_2)(2)
	CreateDynamicObject(1415,1862.6000000,-2095.8999000,12.6000000,0.0000000,0.0000000,0.0000000); //object(dyn_dumpster)(1)
	CreateDynamicObject(1365,1891.5999756,-2097.3000488,13.6000004,0.0000000,0.0000000,0.0000000); //object(cj_big_skip1)(1)
	CreateDynamicObject(1359,1941.3000488,-2120.6000977,13.3000002,0.0000000,0.0000000,0.0000000); //object(cj_bin1)(1)
	CreateDynamicObject(1358,1862.1999512,-2106.6999512,13.8000002,0.0000000,0.0000000,0.0000000); //object(cj_skip_rubbish)(1)
	CreateDynamicObject(1372,1799.4000000,-1995.6000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(cj_dump2_low)(1)
	CreateDynamicObject(1372,1901.1000000,-1877.4000000,12.5000000,0.0000000,0.0000000,270.0000000); //object(cj_dump2_low)(2)
	CreateDynamicObject(1438,1883.3000000,-1856.4000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(dyn_box_pile_2)(3)
	CreateDynamicObject(1236,1900.3000000,-1874.6000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(rcyclbank01)(1)
	CreateDynamicObject(1558,1868.6000000,-1873.7000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(cj_cardbrd_pickup)(2)
	CreateDynamicObject(1328,1868.3000000,-1866.7000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(binnt10_la)(1)
	CreateDynamicObject(1328,1868.3000000,-1865.7000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(binnt10_la)(2)
	CreateDynamicObject(2673,1873.8994141,-1876.1992188,13.3999996,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_5)(1)
	CreateDynamicObject(2670,1875.3000488,-1874.8000488,12.6000004,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_1)(1)
	CreateDynamicObject(2674,1873.6999512,-1876.0999756,13.3999996,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_2)(1)
	CreateDynamicObject(3594,173.8999939,85.0999985,473.1000061,0.0000000,0.0000000,0.0000000); //object(la_fuckcar1)(1)
	CreateDynamicObject(3594,1900.0000000,-1866.3000488,13.1999998,0.0000000,0.0000000,0.0000000); //object(la_fuckcar1)(2)
	CreateDynamicObject(1428,1892.8000488,-1854.8000488,14.1000004,0.0000000,0.0000000,0.0000000); //object(dyn_ladder)(1)
	CreateDynamicObject(1474,1888.0999756,-1855.3000488,14.0000000,0.0000000,0.0000000,0.0000000); //object(dyn_porch_2b)(1)
	CreateDynamicObject(1474,1883.0999756,-2096.1999512,14.0000000,0.0000000,0.0000000,0.0000000); //object(dyn_porch_2b)(2)
	CreateDynamicObject(1474,1884.5999756,-2096.1999512,14.0000000,0.0000000,0.0000000,0.0000000); //object(dyn_porch_2b)(3)
	CreateDynamicObject(1474,1886.0999756,-2096.1999512,14.0000000,0.0000000,0.0000000,0.0000000); //object(dyn_porch_2b)(4)
	CreateDynamicObject(2057,1876.9000244,-1875.4000244,12.6999998,0.0000000,0.0000000,0.0000000); //object(flame_tins)(1)
	CreateDynamicObject(3642,1798.9000244,-2010.6999512,15.5000000,0.0000000,0.0000000,90.0000000); //object(glenphouse03_lax)(1)
	CreateDynamicObject(3651,1798.1999512,-1991.1999512,15.2199993,0.0000000,0.0000000,0.0000000); //object(ganghous04_lax)(1)
	CreateDynamicObject(1413,1805.0999756,-1997.9000244,13.8000002,0.0000000,0.0000000,90.0000000); //object(dyn_mesh_3)(3)
	CreateDynamicObject(1432,1801.8000488,-1998.5000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(dyn_table_2)(1)
	CreateDynamicObject(2973,1751.4000244,-1963.0000000,13.1000004,0.0000000,0.0000000,0.0000000); //object(k_cargo2)(1)
	CreateDynamicObject(2972,1749.6999512,-1965.3000488,13.1000004,0.0000000,0.0000000,0.0000000); //object(k_cargo4)(1)
	CreateDynamicObject(2975,1749.0999756,-1963.5000000,13.1000004,0.0000000,0.0000000,0.0000000); //object(k_cargo3)(1)
	CreateDynamicObject(3564,1825.9000244,-1957.9000244,14.1999998,0.0000000,0.0000000,0.0000000); //object(lastran1_la01)(1)
	CreateDynamicObject(3564,1817.6999512,-1957.9000244,14.1999998,0.0000000,0.0000000,0.0000000); //object(lastran1_la01)(2)
	CreateDynamicObject(3564,1809.5000000,-1957.9000244,14.1999998,0.0000000,0.0000000,0.0000000); //object(lastran1_la01)(3)
	CreateDynamicObject(3564,1834.0999756,-1957.9000244,14.1999998,0.0000000,0.0000000,0.0000000); //object(lastran1_la01)(4)
	CreateDynamicObject(3564,1842.3000488,-1957.9000244,14.1999998,0.0000000,0.0000000,0.0000000); //object(lastran1_la01)(5)
	CreateDynamicObject(3564,1784.5000000,-1965.1999512,14.1999998,0.0000000,0.0000000,20.0000000); //object(lastran1_la01)(6)
	CreateDynamicObject(3585,1850.5000000,-1957.9000244,14.1999998,0.0000000,0.0000000,0.0000000); //object(lastran1_la02)(1)
	CreateDynamicObject(3585,1858.7998047,-1957.8994141,14.1999998,0.0000000,0.0000000,0.0000000); //object(lastran1_la02)(2)
	CreateDynamicObject(922,1746.4000244,-1965.4000244,14.0000000,0.0000000,0.0000000,0.0000000); //object(packing_carates1)(1)
	CreateDynamicObject(922,1875.0000000,-2106.6000977,13.5000000,0.0000000,0.0000000,0.0000000); //object(packing_carates1)(2)
	CreateDynamicObject(944,1854.5000000,-2097.0000000,13.4000000,0.0000000,0.0000000,90.0000000); //object(packing_carates04)(1)
	CreateDynamicObject(944,1873.3000000,-1869.8000000,13.4000000,0.0000000,0.0000000,0.0000000); //object(packing_carates04)(2)
	CreateDynamicObject(3577,1903.8000488,-2108.1999512,13.3999996,0.0000000,0.0000000,0.0000000); //object(dockcrates1_la)(1)
	CreateDynamicObject(13190,2605.3000488,-2345.1999512,16.2999992,0.0000000,0.0000000,0.0000000); //object(ce_busdepot)(1)
	CreateDynamicObject(983,2595.1999512,-2363.6000977,13.3999996,0.0000000,0.0000000,0.0000000); //object(fenceshit3)(1)
	CreateDynamicObject(983,2615.1000977,-2363.6000977,13.3000002,0.0000000,0.0000000,0.0000000); //object(fenceshit3)(2)
	CreateDynamicObject(983,2615.1000977,-2370.0000000,13.3000002,0.0000000,0.0000000,0.0000000); //object(fenceshit3)(3)
	CreateDynamicObject(2972,2596.1000977,-2361.3000488,12.6999998,0.0000000,0.0000000,0.0000000); //object(k_cargo4)(2)
	CreateDynamicObject(2935,2612.5000000,-2364.1999512,14.1000004,0.0000000,0.0000000,0.0000000); //object(kmb_container_yel)(1)
	CreateDynamicObject(2934,2609.1999512,-2364.1000977,14.0000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_red)(1)
	CreateDynamicObject(18260,2607.5000000,-2372.5000000,14.1999998,0.0000000,0.0000000,0.0000000); //object(crates01)(1)
	CreateDynamicObject(930,2605.8000488,-2370.6999512,15.1000004,0.0000000,0.0000000,0.0000000); //object(o2_bottles)(1)
	CreateDynamicObject(1271,2604.3000488,-2370.6999512,12.8999996,0.0000000,0.0000000,0.0000000); //object(gunbox)(1)
	CreateDynamicObject(2038,2604.5000000,-2370.5000000,13.3000002,0.0000000,0.0000000,0.0000000); //object(ammo_box_s2)(1)
	CreateDynamicObject(1362,2603.8999023,-2371.8000488,13.1999998,0.0000000,0.0000000,0.0000000); //object(cj_firebin)(1)
	CreateDynamicObject(1413,1987.0000000,-1587.8994141,13.8999996,0.0000000,0.0000000,44.9945068); //object(dyn_mesh_3)(3)
	CreateDynamicObject(2114,1977.5999756,-1577.0000000,12.6999998,0.0000000,0.0000000,0.0000000); //object(basketball)(1)
	CreateDynamicObject(947,1982.6999512,-1582.0999756,14.8000002,0.0000000,0.0000000,44.9945068); //object(bskballhub_lax01)(1)
	CreateDynamicObject(1412,1965.0999756,-1572.3000488,13.8999996,0.0000000,0.0000000,43.0000000); //object(dyn_mesh_2)(1)
	CreateDynamicObject(1412,1969.0000000,-1568.6999512,13.8999996,0.0000000,0.0000000,42.9949951); //object(dyn_mesh_2)(2)
	CreateDynamicObject(947,1972.5999756,-1571.8000488,14.8000002,0.0000000,0.0000000,226.1041260); //object(bskballhub_lax01)(2)
	CreateDynamicObject(850,1970.0999756,-1564.8000488,12.6999998,0.0000000,0.0000000,0.0000000); //object(cj_urb_rub_1)(1)
	CreateDynamicObject(1298,2000.9000244,-1604.1999512,15.8999996,0.0000000,0.0000000,0.0000000); //object(lamppost1_d)(1)
	CreateDynamicObject(3433,2423.6999512,-1887.0999756,16.1000004,0.0000000,0.0000000,0.0000000); //object(htlcnpy01_lvs)(1)
	CreateDynamicObject(1211,2017.8000488,-1606.9000244,13.1999998,0.0000000,0.0000000,0.0000000); //object(fire_hydrant)(1)
	CreateDynamicObject(1258,2030.5000000,-1602.6999512,13.1999998,0.0000000,0.0000000,0.0000000); //object(mpostbox1)(1)
	CreateDynamicObject(1442,1988.4000244,-1589.4000244,13.1999998,0.0000000,0.0000000,0.0000000); //object(dyn_firebin0)(3)
	CreateDynamicObject(1440,2014.8000488,-1624.4000244,13.1000004,0.0000000,0.0000000,0.0000000); //object(dyn_box_pile_3)(1)
	CreateDynamicObject(1439,2027.2002000,-1601.5996000,12.6000000,0.0000000,0.0000000,179.9945100); //object(dyn_dumpster_1)(2)
	CreateDynamicObject(1365,2111.3999023,-1590.6999512,13.6999998,0.0000000,0.0000000,0.0000000); //object(cj_big_skip1)(2)
	CreateDynamicObject(1415,2175.6999512,-1512.8000488,22.8999996,0.0000000,0.0000000,0.0000000); //object(dyn_dumpster)(2)
	CreateDynamicObject(1441,2181.1000977,-1514.5000000,23.6000004,0.0000000,0.0000000,0.0000000); //object(dyn_box_pile_4)(1)
	CreateDynamicObject(1773,2016.8000488,-1624.0000000,13.3000002,0.0000000,0.0000000,0.0000000); //object(cj_cooker2)(1)
	CreateDynamicObject(1370,2177.6999512,-1512.6999512,23.5000000,0.0000000,0.0000000,0.0000000); //object(cj_flame_drum)(1)
	CreateDynamicObject(1345,2201.3999023,-1495.4000244,23.7999992,0.0000000,0.0000000,0.0000000); //object(cj_dumpster)(1)
	CreateDynamicObject(1466,2048.3000488,-1327.5999756,24.2999992,0.0000000,0.0000000,0.0000000); //object(dyn_scaffold_5)(1)
	CreateDynamicObject(1466,2051.1999512,-1327.5999756,24.2999992,0.0000000,0.0000000,0.0000000); //object(dyn_scaffold_5)(2)
	CreateDynamicObject(2987,2369.5000000,-1550.8000488,24.2000008,0.0000000,0.0000000,0.0000000); //object(lxr_motel_doorsim)(1)
	CreateDynamicObject(3119,1991.1999512,-1588.4000244,12.8999996,0.0000000,0.0000000,0.0000000); //object(cs_ry_props)(1)
	CreateDynamicObject(1349,1971.0999756,-1592.1999512,13.1000004,0.0000000,0.0000000,0.0000000); //object(cj_shtrolly)(1)
	CreateDynamicObject(1264,1966.6999512,-1590.1999512,13.0000000,0.0000000,0.0000000,0.0000000); //object(blackbag1)(1)
	CreateDynamicObject(1264,1967.6999512,-1590.9000244,13.0000000,0.0000000,0.0000000,0.0000000); //object(blackbag1)(2)
	CreateDynamicObject(1220,1968.5000000,-1591.8000488,12.8999996,0.0000000,0.0000000,0.0000000); //object(cardboardbox2)(1)
	CreateDynamicObject(1810,1989.1999512,-1587.6999512,12.6000004,0.0000000,0.0000000,0.0000000); //object(cj_foldchair)(1)
	CreateDynamicObject(1810,1986.5000000,-1589.4000244,12.6000004,0.0000000,0.0000000,80.0000000); //object(cj_foldchair)(2)
	CreateDynamicObject(1413,1986.8000488,-1591.6999512,13.8999996,0.0000000,0.0000000,130.0000000); //object(dyn_mesh_3)(3)
	CreateDynamicObject(1449,1999.5999756,-1548.5000000,13.1999998,0.0000000,0.0000000,0.0000000); //object(dyn_crate_2)(1)
	CreateDynamicObject(1442,2001.0000000,-1549.0000000,13.1999998,0.0000000,0.0000000,0.0000000); //object(dyn_firebin0)(4)
	CreateDynamicObject(1439,1997.0000000,-1548.6999512,12.6000004,0.0000000,0.0000000,0.0000000); //object(dyn_dumpster_1)(3)
	CreateDynamicObject(1369,1974.8000488,-1559.0000000,13.3000002,0.0000000,0.0000000,0.0000000); //object(cj_wheelchair1)(1)
	CreateDynamicObject(1413,1987.0999756,-1571.3000488,13.8999996,0.0000000,0.0000000,129.9957275); //object(dyn_mesh_3)(3)
	CreateDynamicObject(1413,1983.6999512,-1567.1999512,13.8999996,0.0000000,0.0000000,129.9957275); //object(dyn_mesh_3)(3)
	CreateDynamicObject(1413,1980.3000488,-1563.0999756,13.8999996,0.0000000,0.0000000,129.9957275); //object(dyn_mesh_3)(3)
	CreateDynamicObject(2675,1989.5999756,-1590.1999512,12.6000004,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_6)(1)
	CreateDynamicObject(3594,1981.1999512,-1553.0000000,13.3000002,0.0000000,0.0000000,0.0000000); //object(la_fuckcar1)(3)
	CreateDynamicObject(2694,1997.5999756,-1548.6999512,13.5000000,0.0000000,0.0000000,0.0000000); //object(cj_shoe_box2)(1)
	CreateDynamicObject(3632,1977.3000488,-1555.5999756,13.1000004,0.0000000,0.0000000,0.0000000); //object(imoildrum_las)(1)
	CreateDynamicObject(2966,1977.4000244,-1555.5999756,13.6000004,0.0000000,0.0000000,0.0000000); //object(mobile1993b)(1)
	CreateDynamicObject(2680,1981.0000000,-1564.0999756,14.0000000,0.0000000,0.0000000,0.0000000); //object(cj_padlock)(1)
	CreateDynamicObject(1280,1991.5999756,-1579.4000244,13.0000000,0.0000000,0.0000000,0.0000000); //object(parkbench1)(1)
	CreateDynamicObject(2971,1972.4000244,-1590.1999512,12.6000004,0.0000000,0.0000000,0.0000000); //object(k_smashboxes)(1)
	CreateDynamicObject(3585,1867.0000000,-1957.9000244,14.1999998,0.0000000,0.0000000,0.0000000); //object(lastran1_la02)(2)
	CreateDynamicObject(1773,1995.5999756,-1548.6999512,13.3999996,0.0000000,0.0000000,0.0000000); //object(cj_cooker2)(2)
	CreateDynamicObject(1440,1999.4000244,-1549.5999756,13.1999998,0.0000000,0.0000000,0.0000000); //object(dyn_box_pile_3)(2)
	CreateDynamicObject(1344,1993.8000488,-1548.9000244,13.5000000,0.0000000,0.0000000,0.0000000); //object(cj_dumpster2)(1)
	CreateDynamicObject(1294,1987.4000244,-1571.9000244,17.1000004,0.0000000,0.0000000,0.0000000); //object(mlamppost)(1)
	CreateDynamicObject(2359,1996.9000244,-1549.1999512,13.6000004,0.0000000,0.0000000,0.0000000); //object(ammo_box_c5)(1)
	CreateDynamicObject(1290,1959.8000488,-1567.6999512,18.6000004,0.0000000,0.0000000,0.0000000); //object(lamppost2)(1)
	CreateDynamicObject(17950,1713.3000000,-2081.5000000,14.8000000,0.0000000,0.0000000,270.0000000); //object(cjsaveg)(1)
	CreateDynamicObject(1483,1831.2000000,-2113.8999000,14.5000000,0.0000000,0.0000000,0.0000000); //object(dyn_garrage2)(1)
	CreateDynamicObject(1483,1831.2000000,-2120.6001000,14.5000000,0.0000000,0.0000000,0.0000000); //object(dyn_garrage2)(2)
	CreateDynamicObject(1483,1831.3000000,-2127.2000000,14.5000000,0.0000000,0.0000000,0.0000000); //object(dyn_garrage2)(3)
	CreateDynamicObject(3403,1680.2000000,-2082.6001000,15.6000000,0.0000000,0.0000000,0.0000000); //object(sw_logcover)(1)
	CreateDynamicObject(3403,1695.1000000,-2144.3999000,15.6000000,0.0000000,0.0000000,0.0000000); //object(sw_logcover)(2)
	CreateDynamicObject(2315,1693.7000000,-2142.8999000,12.5000000,0.0000000,0.0000000,0.0000000); //object(cj_tv_table4)(1)
	CreateDynamicObject(2315,1693.7000000,-2143.8000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(cj_tv_table4)(2)
	CreateDynamicObject(1768,1693.5000000,-2140.8999000,12.5000000,0.0000000,0.0000000,0.0000000); //object(low_couch_3)(1)
	CreateDynamicObject(1764,1691.8000000,-2145.6001000,12.5000000,0.0000000,0.0000000,120.0000000); //object(low_couch_2)(1)
	CreateDynamicObject(1760,1695.6000000,-2146.2000000,12.5000000,0.0000000,0.0000000,180.0000000); //object(med_couch_2)(1)
	CreateDynamicObject(1729,1697.5000000,-2143.3000000,12.5000000,0.0000000,0.0000000,270.0000000); //object(mrk_seating3b)(1)
	CreateDynamicObject(933,1691.5000000,-2147.8999000,12.5000000,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(933,1687.3000000,-2078.8999000,12.5000000,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(2)
	CreateDynamicObject(910,1709.0000000,-2137.1001000,13.8000000,0.0000000,0.0000000,0.0000000); //object(bust_cabinet_4)(1)
	CreateDynamicObject(3302,1712.2000000,-2136.4321000,14.4000000,90.0000000,0.0000000,0.0000000); //object(cxrf_corpanel)(1)
	CreateDynamicObject(3119,1694.3000000,-2143.5000000,13.2810000,0.0000000,0.0000000,0.0000000); //object(cs_ry_props)(2)
	CreateDynamicObject(3035,1713.9000000,-2140.8999000,13.3000000,0.0000000,0.0000000,0.0000000); //object(tmp_bin)(1)
	CreateDynamicObject(1777,1711.8000000,-2137.0000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(cj_cooker1)(1)
	CreateDynamicObject(1733,1713.0000000,-2137.2000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(cj_washingmac)(1)
	CreateDynamicObject(1449,1713.8000000,-2149.0000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(dyn_crate_2)(2)
	CreateDynamicObject(1448,1715.7000000,-2149.3999000,12.6000000,0.0000000,0.0000000,0.0000000); //object(dyn_crate_1)(2)
	CreateDynamicObject(1441,1718.0000000,-2149.2000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(dyn_box_pile_4)(2)
	CreateDynamicObject(1370,1716.0000000,-2140.8000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(cj_flame_drum)(2)
	CreateDynamicObject(12957,1713.1000000,-2153.7000000,13.4000000,0.0000000,0.0000000,120.0000000); //object(sw_pickupwreck01)(1)
	CreateDynamicObject(1558,1720.1000000,-2149.3000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(cj_cardbrd_pickup)(4)
	CreateDynamicObject(1432,1719.7000000,-2153.0000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(dyn_table_2)(2)
	CreateDynamicObject(1735,1684.0000000,-2084.1001000,12.5000000,0.0000000,0.0000000,240.0000000); //object(cj_easychair1)(1)
	CreateDynamicObject(2319,1680.7000000,-2081.5000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(cj_tv_table5)(1)
	CreateDynamicObject(2319,1680.7000000,-2082.3999000,12.5000000,0.0000000,0.0000000,0.0000000); //object(cj_tv_table5)(2)
	CreateDynamicObject(1761,1680.9000000,-2079.3999000,12.5000000,0.0000000,0.0000000,0.0000000); //object(swank_couch_2)(1)
	CreateDynamicObject(1760,1677.7000000,-2082.2000000,12.5000000,0.0000000,0.0000000,70.0000000); //object(med_couch_2)(2)
	CreateDynamicObject(947,1681.1000000,-2112.8000000,14.7030000,0.0000000,0.0000000,270.0000000); //object(bskballhub_lax01)(3)
	CreateDynamicObject(2115,1680.2000000,-2086.5000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(low_dinning_1)(1)
	CreateDynamicObject(1344,1690.9000000,-2082.3000000,13.4000000,0.0000000,0.0000000,0.0000000); //object(cj_dumpster2)(2)
	CreateDynamicObject(1299,1676.2000000,-2079.6001000,13.0000000,0.0000000,0.0000000,0.0000000); //object(smashboxpile)(1)
	CreateDynamicObject(12954,1868.2000000,-2095.8999000,13.1000000,0.0000000,0.0000000,270.0000000); //object(sw_furnipile01)(1)
	CreateDynamicObject(1236,1865.4000000,-2096.3000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(rcyclbank01)(2)
	CreateDynamicObject(1413,1933.5000000,-2062.6001000,13.8000000,0.0000000,0.0000000,179.9945100); //object(dyn_mesh_3)(2)
	CreateDynamicObject(1413,1928.3000000,-2062.6001000,13.8000000,0.0000000,0.0000000,179.9945100); //object(dyn_mesh_3)(2)
	CreateDynamicObject(1219,1755.4000000,-2125.9399000,14.6000000,90.0000000,0.0000000,0.0000000); //object(palette)(1)
	CreateDynamicObject(2673,1713.1000000,-2150.3000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_5)(2)
	CreateDynamicObject(3593,1919.5000000,-2080.7000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(la_fuckcar2)(1)
	CreateDynamicObject(1710,1759.7000000,-2084.1001000,12.6000000,0.0000000,0.0000000,0.0000000); //object(kb_couch07)(1)
	CreateDynamicObject(1447,1766.7000000,-2080.0000000,13.8000000,0.0000000,0.0000000,130.0000000); //object(dyn_mesh_4)(2)
	CreateDynamicObject(1447,1764.8000000,-2087.2000000,13.8000000,0.0000000,0.0000000,90.0000000); //object(dyn_mesh_4)(3)
	CreateDynamicObject(1446,1835.7000000,-2097.7000000,13.4000000,0.0000000,0.0000000,0.0000000); //object(dyn_f_r_wood_4)(5)
	CreateDynamicObject(1468,1680.5000000,-2156.5000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(dyn_mesh_05)(1)
	CreateDynamicObject(1766,1759.7000000,-2088.2000000,12.6000000,0.0000000,0.0000000,130.0000000); //object(med_couch_1)(1)
	CreateDynamicObject(1768,1764.0000000,-2087.7000000,12.6000000,0.0000000,0.0000000,200.0000000); //object(low_couch_3)(2)
	CreateDynamicObject(2315,1761.0000000,-2086.1001000,12.6000000,0.0000000,0.0000000,0.0000000); //object(cj_tv_table4)(3)
	CreateDynamicObject(850,1754.3000000,-2089.5000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(cj_urb_rub_1)(2)
	CreateDynamicObject(3302,1679.5000000,-2083.3999000,12.6000000,0.0000000,0.0000000,0.0000000); //object(cxrf_corpanel)(2)
	CreateDynamicObject(3035,1758.5000000,-2078.7000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(tmp_bin)(2)
	CreateDynamicObject(1493,1689.7000000,-2081.5000000,12.5000000,0.0000000,0.0000000,90.0000000); //object(gen_doorshop01)(1)

	// police academy
    CreateDynamicObject(8673,812.5999756,1729.0000000,5.6999998,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs)(1)
	CreateDynamicObject(8673,793.5000000,1724.0000000,5.6999998,0.0000000,0.0000000,30.0000000); //object(csrsfence03_lvs)(2)
	CreateDynamicObject(8673,784.6992188,1708.7998047,5.6999998,0.0000000,0.0000000,90.9997559); //object(csrsfence03_lvs)(3)
	CreateDynamicObject(8673,827.4003900,1707.3403000,5.7999997,0.0000000,2.0000000,103.9965800); //object(csrsfence03_lvs)(4)
	CreateDynamicObject(8673,832.2000122,1687.5400391,6.1300001,0.0000000,0.0000000,103.9965820); //object(csrsfence03_lvs)(5)
	CreateDynamicObject(966,823.0000000,1726.5000000,4.0999999,0.0000000,0.0000000,104.0000000); //object(bar_gatebar01)(1)
	CreateDynamicObject(968,823.0000000,1726.5000000,4.7999997,0.0000000,340.0000000,100.0000000); //object(barrierturn)(1)
	CreateDynamicObject(970,815.7999878,1685.3000488,4.8000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(1)
	CreateDynamicObject(970,807.9000244,1685.4000244,4.8000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(2)
	CreateDynamicObject(3077,800.4003900,1677.5000000,4.3000002,0.0000000,0.0000000,329.9963400); //object(nf_blackboard)(1)
	CreateDynamicObject(3077,-2125.3999023,-108.5999985,34.2999992,0.0000000,0.0000000,340.0000000); //object(nf_blackboard)(2)
	CreateDynamicObject(2971,-2113.3000488,-162.1999969,34.2999992,0.0000000,0.0000000,0.0000000); //object(k_smashboxes)(1)
	CreateDynamicObject(2971,-2149.3999023,-203.3000031,34.2999992,0.0000000,0.0000000,0.0000000); //object(k_smashboxes)(2)
	CreateDynamicObject(1449,-2152.3000488,-204.5000000,34.7999992,0.0000000,0.0000000,0.0000000); //object(dyn_crate_2)(1)
	CreateDynamicObject(1372,-2125.5000000,-111.0000000,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_dump2_low)(1)
	CreateDynamicObject(1372,-2126.3999023,-194.6000061,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_dump2_low)(2)
	CreateDynamicObject(1238,-2131.1000977,-245.0000000,34.7000008,0.0000000,0.0000000,0.0000000); //object(trafficcone)(1)
	CreateDynamicObject(1238,-2131.8000488,-243.6000061,34.7000008,0.0000000,0.0000000,0.0000000); //object(trafficcone)(2)
	CreateDynamicObject(1238,-2132.6000977,-242.1999969,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(3)
	CreateDynamicObject(1238,-2133.3000488,-240.6999969,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(4)
	CreateDynamicObject(1238,-2131.3000488,-250.8000031,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(5)
	CreateDynamicObject(1238,-2132.0000000,-252.0000000,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(6)
	CreateDynamicObject(1238,-2132.8000488,-253.1999969,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(7)
	CreateDynamicObject(1238,-2133.6000977,-254.3999939,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(8)
	CreateDynamicObject(1238,-2104.1000977,-235.6000061,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(9)
	CreateDynamicObject(1238,-2103.1999512,-234.3000031,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(10)
	CreateDynamicObject(1238,-2102.1999512,-232.8000031,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(11)
	CreateDynamicObject(1238,-2101.0000000,-231.3999939,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(12)
	CreateDynamicObject(1238,-2099.8999023,-230.0000000,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(13)
	CreateDynamicObject(3594,-2100.8000488,-234.1000061,35.0000000,0.0000000,0.0000000,330.0000000); //object(la_fuckcar1)(1)
	CreateDynamicObject(1238,-2123.8999023,-141.1999969,35.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(14)
	CreateDynamicObject(1238,-2124.8000488,-124.5999985,35.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(15)
	CreateDynamicObject(1238,-2132.1000977,-135.8000031,35.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(16)
	CreateDynamicObject(1238,-2098.8000488,-228.8999939,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(17)
	CreateDynamicObject(1238,-2104.3999023,-272.5000000,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(18)
	CreateDynamicObject(2633,-2130.3000488,-190.1999969,36.9000015,0.0000000,0.0000000,0.0000000); //object(crack_walkway1)(1)
	CreateDynamicObject(2633,-2134.5996094,-190.1992188,36.9000015,0.0000000,0.0000000,0.0000000); //object(crack_walkway1)(2)
	CreateDynamicObject(2633,-2135.5000000,-193.5000000,36.9000015,0.0000000,0.0000000,90.0000000); //object(crack_walkway1)(3)
	CreateDynamicObject(2633,-2135.5000000,-197.8000031,36.9000015,0.0000000,0.0000000,90.0000000); //object(crack_walkway1)(4)
	CreateDynamicObject(2633,-2132.1999512,-198.6999969,36.9000015,0.0000000,0.0000000,180.0000000); //object(crack_walkway1)(5)
	CreateDynamicObject(2633,-2128.0000000,-198.6999969,36.9000015,0.0000000,0.0000000,179.9945068); //object(crack_walkway1)(6)
	CreateDynamicObject(2633,-2123.8000488,-198.6999969,36.9000015,0.0000000,0.0000000,179.9945068); //object(crack_walkway1)(7)
	CreateDynamicObject(2633,-2119.5000000,-198.7002000,36.9000020,0.0000000,0.0000000,179.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,-2115.1999512,-198.6999969,36.9000015,0.0000000,0.0000000,179.9945068); //object(crack_walkway1)(9)
	CreateDynamicObject(2633,-2110.8999023,-198.6999969,36.9000015,0.0000000,0.0000000,179.9945068); //object(crack_walkway1)(10)
	CreateDynamicObject(3361,-2103.7998000,-198.8398400,36.6399990,0.0000000,0.0000000,0.0000000); //object(cxref_woodstair)(1)
	CreateDynamicObject(1654,-2098.3994141,-278.6992188,34.5999985,0.0000000,0.0000000,229.9987793); //object(dynamite)(1)
	CreateDynamicObject(1238,-2097.1999512,-272.3999939,34.7000008,0.0000000,0.0000000,0.0000000); //object(trafficcone)(23)
	CreateDynamicObject(1238,-2098.3000488,-272.5000000,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(24)
	CreateDynamicObject(1238,-2099.5000000,-272.5000000,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(25)
	CreateDynamicObject(1238,-2100.6999512,-272.3999939,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(26)
	CreateDynamicObject(1238,-2101.8999023,-272.3999939,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(27)
	CreateDynamicObject(1238,-2103.1000977,-272.5000000,34.5999985,0.0000000,0.0000000,0.0000000); //object(trafficcone)(28)
	CreateDynamicObject(933,-2142.2998047,-182.2998047,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(16398,385.2000122,2549.8000488,15.5000000,0.0000000,0.0000000,90.0000000); //object(desn2_peckfac1)(1)
	CreateDynamicObject(16398,820.7999878,1691.5000000,4.3000002,0.0000000,0.0000000,0.0000000); //object(desn2_peckfac1)(3)
	CreateDynamicObject(10847,361.8999939,2597.0000000,21.8999996,0.0000000,0.0000000,0.0000000); //object(gen_whouse03_sfse01)(1)
	CreateDynamicObject(3877,507.5000000,2523.0000000,37.7000008,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(1)
	CreateDynamicObject(3877,514.7000122,2516.6000977,37.9000015,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(2)
	CreateDynamicObject(3877,518.2000122,2506.6999512,37.4000015,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(3)
	CreateDynamicObject(3877,512.7000122,2496.6000977,37.7999992,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(4)
	CreateDynamicObject(3877,506.6000061,2491.8000488,37.2000008,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(5)
	CreateDynamicObject(3594,395.2999878,2577.5000000,16.1000004,0.0000000,0.0000000,59.9963379); //object(la_fuckcar1)(2)
	CreateDynamicObject(3594,396.7000122,2582.6999512,16.1000004,0.0000000,0.0000000,309.9957275); //object(la_fuckcar1)(3)
	CreateDynamicObject(3594,400.6000061,2579.8000488,16.2000008,0.0000000,0.0000000,0.0000000); //object(la_fuckcar1)(4)
	CreateDynamicObject(1654,383.5000000,2604.7998000,15.8000000,0.0000000,0.0000000,0.0000000); //object(dynamite)(4)
	CreateDynamicObject(1217,384.6976013,2605.7016602,15.8771524,0.0000000,0.0000000,0.0000000); //object(barrel2)(1)
	CreateDynamicObject(1217,383.7999878,2606.1000977,15.8999996,0.0000000,0.0000000,0.0000000); //object(barrel2)(2)
	CreateDynamicObject(1238,-21.1000004,2335.1000977,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(29)
	CreateDynamicObject(1238,-19.0000000,2334.8000488,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(30)
	CreateDynamicObject(1238,-17.8999996,2332.8999023,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(31)
	CreateDynamicObject(1238,-22.8999996,2334.3999023,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(32)
	CreateDynamicObject(1238,-23.7000008,2332.8999023,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(33)
	CreateDynamicObject(1238,-23.1000004,2330.8999023,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(34)
	CreateDynamicObject(1238,-21.3999996,2330.1000977,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(35)
	CreateDynamicObject(1238,-19.2999992,2330.1000977,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(36)
	CreateDynamicObject(1238,-17.7999992,2331.0000000,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(37)
	CreateDynamicObject(1238,-43.7000008,2350.6000977,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(38)
	CreateDynamicObject(1238,-44.5999985,2349.3999023,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(39)
	CreateDynamicObject(1238,-45.4000015,2348.3000488,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(40)
	CreateDynamicObject(1238,-46.2999992,2347.1999512,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(41)
	CreateDynamicObject(1238,-47.2999992,2345.8999023,23.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(42)
	CreateDynamicObject(933,-2140.6000977,-183.0000000,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(933,-2131.1999512,-144.6999969,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(933,-2124.0000000,-141.1999969,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(933,-2132.0000000,-135.8000031,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(933,-2124.3999023,-132.5000000,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(933,-2132.3999023,-125.5999985,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(933,-2124.8000488,-124.5999985,34.2999992,0.0000000,0.0000000,0.0000000); //object(cj_cableroll)(1)
	CreateDynamicObject(3069,-2165.6000977,-209.5000000,34.2000008,0.0000000,0.0000000,90.0000000); //object(d9_ramp)(1)
	CreateDynamicObject(11103,-2180.3999023,-212.0000000,37.4000015,0.0000000,0.0000000,0.0000000); //object(cfsmashwin1_sfs)(1)
	CreateDynamicObject(11103,-2180.3999023,-207.0000000,37.4000015,0.0000000,0.0000000,0.0000000); //object(cfsmashwin1_sfs)(2)
	CreateDynamicObject(3934,346.7999878,2538.6000977,15.8000002,0.0000000,0.0000000,90.0000000); //object(helipad01)(1)
	CreateDynamicObject(8247,151.7998000,2540.6006000,19.5000000,0.0000000,0.0000000,270.0000000); //object(pltschlhnger69_lvs)(1)
	CreateDynamicObject(1583,-36.2999992,2350.5000000,23.2999992,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(1)
	CreateDynamicObject(1583,-38.2999992,2350.3000488,23.2999992,0.0000000,0.0000000,310.0000000); //object(tar_gun2)(2)
	CreateDynamicObject(3279,348.7998000,2470.5000000,15.5000000,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(1)
	CreateDynamicObject(3279,152.5000000,2470.7998000,15.5000000,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(2)
	CreateDynamicObject(3279,794.7000122,1714.1999512,4.3000002,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(3)
	CreateDynamicObject(8673,784.7998047,1681.3994141,5.6999998,0.0000000,0.0000000,90.9942627); //object(csrsfence03_lvs)(3)
	CreateDynamicObject(970,800.0999756,1685.9000244,4.8000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(2)
	CreateDynamicObject(970,793.5000000,1688.0999756,4.8000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(1)
	CreateDynamicObject(970,793.5000000,1685.0000000,4.8000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(1)
	CreateDynamicObject(970,815.7999878,1687.8000488,4.8000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb)(1)
	CreateDynamicObject(14553,266.0000000,2497.6999512,19.1999989,14.0000000,0.0000000,270.0000000); //object(androm_des_obj)(1)
	CreateDynamicObject(14548,268.9003900,2497.7002000,19.6400010,13.9965820,0.0000000,270.0000000); //object(cargo_test)(1)
	CreateDynamicObject(1327,282.7000122,2494.3999023,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(1)
	CreateDynamicObject(1327,282.6000061,2495.1999512,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(2)
	CreateDynamicObject(1327,282.5000000,2496.0000000,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(3)
	CreateDynamicObject(1327,282.5000000,2500.0000000,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(4)
	CreateDynamicObject(1327,282.6000061,2500.8000488,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(5)
	CreateDynamicObject(1327,282.5000000,2501.5000000,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(6)
	CreateDynamicObject(1327,230.0000000,2498.5000000,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(7)
	CreateDynamicObject(1327,230.0000000,2497.8000488,16.5000000,0.0000000,0.0000000,90.0000000); //object(junk_tyre)(8)
	CreateDynamicObject(2991,289.4003900,2494.7002000,18.6000000,0.0000000,0.0000000,0.0000000); //object(imy_bbox)(1)
	CreateDynamicObject(2974,283.7000122,2495.0000000,17.8999996,0.0000000,0.0000000,0.0000000); //object(k_cargo1)(1)
	CreateDynamicObject(2973,289.5000000,2500.5000000,18.0000000,0.0000000,0.0000000,0.0000000); //object(k_cargo2)(1)
	CreateDynamicObject(2935,348.3999939,2591.3000488,17.2000008,0.0000000,0.0000000,0.0000000); //object(kmb_container_yel)(1)
	CreateDynamicObject(2935,348.4003900,2591.2998000,20.1000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_yel)(2)
	CreateDynamicObject(2912,288.7000122,2494.5000000,19.2000008,0.0000000,0.0000000,0.0000000); //object(temp_crate1)(1)
	CreateDynamicObject(3576,270.2998000,2500.2002000,19.2000010,0.0000000,0.0000000,0.0000000); //object(dockcrates2_la)(1)
	CreateDynamicObject(2973,274.6000061,2497.5000000,17.7000008,0.0000000,0.0000000,0.0000000); //object(k_cargo2)(2)
	CreateDynamicObject(2973,255.3000031,2494.5000000,17.3999996,0.0000000,0.0000000,0.0000000); //object(k_cargo2)(3)
	CreateDynamicObject(2974,253.3999939,2497.0000000,17.3999996,0.0000000,0.0000000,0.0000000); //object(k_cargo1)(2)
	CreateDynamicObject(2991,245.8999939,2500.8000488,17.8999996,0.0000000,0.0000000,0.0000000); //object(imy_bbox)(2)
	CreateDynamicObject(2991,247.8000031,2498.8000488,17.8999996,0.0000000,0.0000000,0.0000000); //object(imy_bbox)(3)
	CreateDynamicObject(1654,243.8999939,2499.8999023,18.2000008,0.0000000,0.0000000,270.0000000); //object(dynamite)(1)
	CreateDynamicObject(1654,282.8999939,2496.3000488,19.8999996,0.0000000,0.0000000,229.9987793); //object(dynamite)(1)
	CreateDynamicObject(1654,252.5996100,2498.2998000,19.6000000,0.0000000,0.0000000,229.9932900); //object(dynamite)(1)
	CreateDynamicObject(1583,253.3999939,2495.3000488,17.3999996,0.0000000,0.0000000,309.9957275); //object(tar_gun2)(3)
	CreateDynamicObject(3819,-2122.8994000,-101.2002000,35.2999990,0.0000000,0.0000000,90.0000000); //object(bleacher_sfsx)(1)
	CreateDynamicObject(14791,408.5000000,2456.1000977,17.5000000,0.0000000,0.0000000,0.0000000); //object(a_vgsgymboxa)(1)
	CreateDynamicObject(2973,390.2998047,2456.6005859,15.5000000,0.0000000,0.0000000,0.0000000); //object(k_cargo2)(4)
	CreateDynamicObject(2934,394.1000061,2454.5000000,17.0000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_red)(1)
	CreateDynamicObject(2932,397.7001953,2454.6015625,16.9101562,0.0000000,0.0000000,0.0000000); //object(kmb_container_blue)(1)
	CreateDynamicObject(18260,402.7001953,2441.7001953,17.1000004,0.0000000,0.0000000,0.0000000); //object(crates01)(1)
	CreateDynamicObject(18257,419.2999878,2465.6000977,15.5000000,0.0000000,0.0000000,0.0000000); //object(crates)(1)
	CreateDynamicObject(931,400.5000000,2457.3000488,16.6000004,0.0000000,0.0000000,0.0000000); //object(rack3)(1)
	CreateDynamicObject(964,400.2000122,2455.3000488,15.5000000,0.0000000,0.0000000,0.0000000); //object(cj_metal_crate)(1)
	CreateDynamicObject(964,400.2000122,2453.8999023,15.5000000,0.0000000,0.0000000,0.0000000); //object(cj_metal_crate)(2)
	CreateDynamicObject(1348,400.2000122,2452.6999512,16.2000008,0.0000000,0.0000000,0.0000000); //object(cj_o2tanks)(1)
	CreateDynamicObject(1348,400.2000122,2451.6000977,16.2000008,0.0000000,0.0000000,0.0000000); //object(cj_o2tanks)(2)
	CreateDynamicObject(2043,809.7999878,1668.0999756,5.3000002,0.0000000,0.0000000,0.0000000); //object(ammo_box_m4)(1)
	CreateDynamicObject(2043,807.0999756,1668.0999756,5.3000002,0.0000000,0.0000000,0.0000000); //object(ammo_box_m4)(2)
	CreateDynamicObject(2358,812.4000244,1674.1999512,4.4000001,0.0000000,0.0000000,0.0000000); //object(ammo_box_c2)(1)
	CreateDynamicObject(2359,814.9000244,1674.3000488,4.5000000,0.0000000,0.0000000,0.0000000); //object(ammo_box_c5)(1)
	CreateDynamicObject(2040,811.7000122,1674.1999512,4.4000001,0.0000000,0.0000000,0.0000000); //object(ammo_box_m1)(1)
	CreateDynamicObject(2040,811.5000000,1674.1999512,4.4000001,0.0000000,0.0000000,0.0000000); //object(ammo_box_m1)(2)
	CreateDynamicObject(2040,806.7999878,1668.1999512,5.3000002,0.0000000,0.0000000,0.0000000); //object(ammo_box_m1)(3)
	CreateDynamicObject(2042,804.4000244,1668.1999512,5.3000002,0.0000000,0.0000000,0.0000000); //object(ammo_box_m3)(1)
	CreateDynamicObject(2043,803.7999878,1668.0999756,5.3000002,0.0000000,0.0000000,0.0000000); //object(ammo_box_m4)(3)
	CreateDynamicObject(2567,820.2002000,1682.5000000,6.1999998,0.0000000,0.0000000,0.0000000); //object(ab_warehouseshelf)(1)
	CreateDynamicObject(3632,794.0000000,1688.5999756,4.8000002,0.0000000,0.0000000,0.0000000); //object(imoildrum_las)(1)
	CreateDynamicObject(3632,793.9000244,1689.3000488,4.8000002,0.0000000,0.0000000,0.0000000); //object(imoildrum_las)(2)
	CreateDynamicObject(3633,792.9000244,1698.9000244,4.8000002,0.0000000,0.0000000,0.0000000); //object(imoildrum4_las)(1)
	CreateDynamicObject(16601,805.2000122,1724.4000244,9.3999996,0.0000000,0.0000000,0.0000000); //object(by_fuel07)(1)
	CreateDynamicObject(17055,823.0999756,1676.9000244,6.5999999,0.0000000,0.0000000,0.0000000); //object(cw_fueldrum03)(1)
	CreateDynamicObject(3819,803.7999878,1683.0999756,5.3000002,0.0000000,0.0000000,86.0000000); //object(bleacher_sfsx)(2)
	CreateDynamicObject(3496,793.9000244,1693.0999756,4.3000002,0.0000000,0.0000000,270.0000000); //object(vgsxrefbballnet)(1)
	CreateDynamicObject(2114,794.9000244,1692.8000488,4.5999999,0.0000000,0.0000000,0.0000000); //object(basketball)(1)
	CreateDynamicObject(1766,788.7999878,1679.5000000,4.3000002,0.0000000,0.0000000,0.0000000); //object(med_couch_1)(1)
	CreateDynamicObject(1766,787.0000000,1676.9000244,4.3000002,0.0000000,0.0000000,70.0000000); //object(med_couch_1)(2)
	CreateDynamicObject(1761,790.5000000,1675.5000000,4.3000002,0.0000000,0.0000000,180.0000000); //object(swank_couch_2)(1)
	CreateDynamicObject(2051,813.5999756,1681.6999512,6.4000001,0.0000000,0.0000000,180.0000000); //object(cj_target4)(1)
	CreateDynamicObject(1614,817.5000000,1690.5999756,7.6999998,0.0000000,0.0000000,0.0000000); //object(nt_alarm1_01)(1)
	CreateDynamicObject(1583,810.7000122,1613.3000488,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(4)
	CreateDynamicObject(1584,804.7000122,1613.5999756,4.5999999,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(1)
	CreateDynamicObject(1585,810.0000000,1613.9000244,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(1)
	CreateDynamicObject(1583,805.4000244,1613.5000000,4.4000001,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(5)
	CreateDynamicObject(1585,805.0000000,1613.5999756,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(2)
	CreateDynamicObject(1585,801.4000244,1614.0000000,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(3)
	CreateDynamicObject(1583,801.0000000,1613.9000244,4.4000001,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(6)
	CreateDynamicObject(1584,800.5000000,1614.0999756,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(2)
	CreateDynamicObject(1584,795.2000122,1614.4000244,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(3)
	CreateDynamicObject(1585,794.5999756,1614.5000000,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(4)
	CreateDynamicObject(1583,794.0000000,1614.5999756,4.3000002,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(7)
	CreateDynamicObject(1997,816.7000122,1690.0000000,4.3000002,0.0000000,0.0000000,0.0000000); //object(hos_trolley)(1)
	CreateDynamicObject(1997,816.6992188,1690.0000000,4.3000002,0.0000000,0.0000000,0.0000000); //object(hos_trolley)(2)
	CreateDynamicObject(1997,816.9000244,1693.0999756,4.3000002,0.0000000,0.0000000,0.0000000); //object(hos_trolley)(3)
	CreateDynamicObject(3819,1038.9000000,1320.2000000,10.8000000,0.0000000,0.0000000,90.0000000); //object(bleacher_sfsx)(1)
	CreateDynamicObject(3077,1031.8000000,1310.2000000,9.8000002,0.0000000,0.0000000,329.9963400); //object(nf_blackboard)(1)
	CreateDynamicObject(4100,1038.3000000,1323.7000000,11.5000000,0.0000000,0.0000000,140.0000000); //object(meshfence1_lan)(1)
	CreateDynamicObject(4100,1052.0000000,1323.7000000,11.5000000,0.0000000,0.0000000,139.9987800); //object(meshfence1_lan)(2)
	CreateDynamicObject(16770,1087.2000000,1251.9000000,11.4000000,0.0000000,0.0000000,270.0000000); //object(des_gunbldg01)(1)
	CreateDynamicObject(3578,1042.6000000,1311.0000000,9.0600004,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(1)
	CreateDynamicObject(3578,1053.4000000,1311.0000000,9.0600004,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(2)
	CreateDynamicObject(3819,1052.5000000,1320.0000000,10.8000000,0.0000000,0.0000000,90.0000000); //object(bleacher_sfsx)(1)
	CreateDynamicObject(984,1080.3000000,1240.7000000,10.5000000,0.0000000,0.0000000,0.0000000); //object(fenceshit2)(1)
	CreateDynamicObject(983,1080.3000000,1231.1000000,10.5000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3)(1)
	CreateDynamicObject(2056,1095.2000000,1224.0000000,12.2000000,0.0000000,0.0000000,180.0000000); //object(cj_target6)(1)
	CreateDynamicObject(2056,1094.0000000,1224.0000000,11.6000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(2)
	CreateDynamicObject(2056,1092.8000000,1224.0000000,12.6000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(3)
	CreateDynamicObject(2056,1091.9000000,1224.0000000,11.2000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(4)
	CreateDynamicObject(2056,1091.0000000,1224.0000000,12.3000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(5)
	CreateDynamicObject(2056,1096.4000000,1224.0000000,11.0000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(6)
	CreateDynamicObject(2056,1089.8000000,1224.0000000,11.1000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(7)
	CreateDynamicObject(2056,1089.1000000,1224.0000000,12.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(8)
	CreateDynamicObject(2056,1093.1000000,1224.0000000,10.8000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(9)
	CreateDynamicObject(2056,1096.6000000,1224.0000000,12.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(10)
	CreateDynamicObject(2056,1090.0000000,1224.0000000,12.0000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(11)
	CreateDynamicObject(2056,1088.4000000,1224.0000000,10.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(12)
	CreateDynamicObject(2056,1088.4000000,1224.0000000,11.8000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(13)
	CreateDynamicObject(2056,1087.5000000,1224.0000000,12.6000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(14)
	CreateDynamicObject(2056,1087.2000000,1224.0000000,11.2000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(15)
	CreateDynamicObject(2056,1086.4000000,1224.0000000,11.8000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(16)
	CreateDynamicObject(2056,1090.2000000,1224.0000000,12.8000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(17)
	CreateDynamicObject(2056,1094.1000000,1224.0000000,13.0000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(18)
	CreateDynamicObject(2056,1085.7000000,1224.0000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(19)
	CreateDynamicObject(2056,1084.8000000,1224.0000000,11.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(20)
	CreateDynamicObject(2056,1095.1000000,1224.0000000,10.8000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(21)
	CreateDynamicObject(2056,1083.9000000,1224.0000000,12.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(22)
	CreateDynamicObject(2056,1083.9000000,1224.0000000,10.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(23)
	CreateDynamicObject(2056,1083.1000000,1224.0000000,11.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(24)
	CreateDynamicObject(2056,1082.6000000,1224.0000000,13.1000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(25)
	CreateDynamicObject(2056,1082.1000000,1224.0000000,10.7000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(26)
	CreateDynamicObject(2056,1082.0000000,1224.0000000,12.0000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(27)
	CreateDynamicObject(1583,1091.8000000,1224.0000000,11.7000000,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(9)
	CreateDynamicObject(1583,1076.0000000,1224.0000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(10)
	CreateDynamicObject(1584,1084.7000000,1224.0000000,12.1000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(5)
	CreateDynamicObject(1585,1086.1000000,1224.0000000,12.3000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(6)
	CreateDynamicObject(1586,1091.0000000,1224.0000000,10.0000000,0.0000000,0.0000000,0.0000000); //object(tar_civ1)(1)
	CreateDynamicObject(1585,1096.0000000,1224.0000000,11.3000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(7)
	CreateDynamicObject(1238,1062.3000000,1258.7000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(19)
	CreateDynamicObject(1238,1061.5000000,1257.1000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(20)
	CreateDynamicObject(1238,1060.8000000,1255.6000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(21)
	CreateDynamicObject(1238,1060.1000000,1254.0000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(22)
	CreateDynamicObject(1238,1062.1000000,1262.3000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(43)
	CreateDynamicObject(1238,1061.3000000,1263.9000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(44)
	CreateDynamicObject(1238,1060.7000000,1265.3000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(45)
	CreateDynamicObject(1238,1060.0000000,1266.6000000,10.1000000,0.0000000,0.0000000,0.0000000); //object(trafficcone)(46)
	CreateDynamicObject(3578,1058.4000000,1273.3000000,10.6000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(3)
	CreateDynamicObject(3578,1057.5000000,1248.6000000,10.6000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(4)
	CreateDynamicObject(3578,1089.9000000,1281.6000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(5)
	CreateDynamicObject(3578,1089.9000000,1291.7000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(6)
	CreateDynamicObject(3578,1090.1000000,1313.3000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(7)
	CreateDynamicObject(3578,1090.1000000,1323.6000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(8)
	CreateDynamicObject(3578,1079.5000000,1323.3000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(9)
	CreateDynamicObject(3578,1079.5000000,1313.0000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(10)
	CreateDynamicObject(3578,1079.6000000,1291.8000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(11)
	CreateDynamicObject(3578,1079.6000000,1281.5000000,9.0600004,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(12)
	CreateDynamicObject(3578,1074.8000000,1297.1000000,9.0600004,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(13)
	CreateDynamicObject(3578,1074.6000000,1307.8000000,9.0600004,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(14)
	CreateDynamicObject(3578,1094.9000000,1308.1000000,9.0600004,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(15)
	CreateDynamicObject(3578,1094.6000000,1297.1000000,9.0600004,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(16)
	CreateDynamicObject(1315,1087.6000000,1308.8000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(trafficlight1)(1)
	CreateDynamicObject(1315,1079.1000000,1305.3000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(trafficlight1)(2)
	CreateDynamicObject(983,1065.7000000,1248.6000000,10.5000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3)(2)
	CreateDynamicObject(983,1072.1000000,1248.6000000,10.5000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3)(3)
	CreateDynamicObject(8674,1075.2000000,1243.9000000,11.3000000,0.0000000,0.0000000,0.0000000); //object(csrsfence02_lvs)(1)
	CreateDynamicObject(3578,1080.2000000,1224.0000000,10.1000000,0.0000000,90.0000000,90.0000000); //object(dockbarr1_la)(17)
	CreateDynamicObject(2987,1079.1000000,1237.5000000,11.0000000,0.0000000,0.0000000,180.0000000); //object(lxr_motel_doorsim)(2)
	CreateDynamicObject(2987,1076.5000000,1237.6000000,11.0000000,0.0000000,0.0000000,179.9945100); //object(lxr_motel_doorsim)(3)
	CreateDynamicObject(2987,1073.9000000,1237.6000000,11.0000000,0.0000000,0.0000000,179.9945100); //object(lxr_motel_doorsim)(4)
	CreateDynamicObject(2987,1071.3000000,1237.6000000,11.0000000,0.0000000,0.0000000,179.9945100); //object(lxr_motel_doorsim)(5)
	CreateDynamicObject(9131,1077.8000000,1237.2000000,10.9000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs)(1)
	CreateDynamicObject(9131,1075.2000000,1237.2000000,10.9000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs)(2)
	CreateDynamicObject(9131,1072.6000000,1237.2000000,10.9000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs)(3)
	CreateDynamicObject(9131,1070.0000000,1237.2000000,10.9000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs)(4)
	CreateDynamicObject(3077,1094.5000000,1359.5000000,9.8999996,0.0000000,0.0000000,100.0000000); //object(nf_blackboard)(1)
	CreateDynamicObject(1585,1079.3000000,1224.0000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(8)
	CreateDynamicObject(1584,1079.4000000,1224.0000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(6)
	CreateDynamicObject(1583,1076.1000000,1224.0000000,10.9000000,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(11)
	CreateDynamicObject(1584,1073.3000000,1224.0000000,10.7000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(7)
	CreateDynamicObject(1583,1073.2000000,1224.0000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(tar_gun2)(12)
	CreateDynamicObject(1584,1070.4000000,1224.0000000,10.6000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(8)
	CreateDynamicObject(1584,1070.4000000,1224.0000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(9)
	CreateDynamicObject(1585,1077.9000000,1224.0000000,11.7000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(9)
	CreateDynamicObject(1585,1074.7000000,1224.0000000,11.8000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(10)
	CreateDynamicObject(1585,1071.7000000,1224.0000000,11.7000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(11)
	CreateDynamicObject(2991,1077.9000000,1231.6000000,10.4000000,0.0000000,0.0000000,0.0000000); //object(imy_bbox)(4)
	CreateDynamicObject(2991,1071.9000000,1231.7000000,10.5000000,0.0000000,0.0000000,0.0000000); //object(imy_bbox)(5)
	CreateDynamicObject(2633,1058.6000000,1226.1000000,12.4000000,0.0000000,0.0000000,270.0000000); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1230.3000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1234.4000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1238.6000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1242.9000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1247.1000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1251.3000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1255.5000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1259.7000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1263.9000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1268.1000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1272.3000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1276.5000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1280.8000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1285.0000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1289.2000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(2633,1058.6000000,1293.4000000,12.4000000,0.0000000,0.0000000,269.9945100); //object(crack_walkway1)(8)
	CreateDynamicObject(3361,1058.6000000,1300.4000000,11.9600000,0.0000000,0.0000000,90.0000000); //object(cxref_woodstair)(1)
	CreateDynamicObject(8674,1059.2000000,1328.9000000,11.3000000,0.0000000,0.0000000,90.0000000); //object(csrsfence02_lvs)(3)
	CreateDynamicObject(869,1059.5000000,1387.7000000,10.3000000,0.0000000,0.0000000,90.0000000); //object(veg_pflowerswee)(1)
	CreateDynamicObject(8230,1088.4000000,1352.7000000,11.8000000,0.0000000,0.0000000,90.0000000); //object(vgsbikeschl01)(1)
	CreateDynamicObject(8231,1088.1801000,1352.6200000,11.6300000,0.0000000,0.0000000,90.0000000); //object(vgsbikeschl05)(1)
	CreateDynamicObject(14604,1094.7000000,1355.9000000,10.9000000,0.0000000,0.0000000,70.0000000); //object(tv_stand_bike)(1)
	CreateDynamicObject(1811,1089.8000000,1360.8000000,10.6000000,0.0000000,0.0000000,180.0000000); //object(med_din_chair_5)(1)
	CreateDynamicObject(1811,1089.8000000,1360.1000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(2)
	CreateDynamicObject(1811,1089.8000000,1359.4000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(3)
	CreateDynamicObject(1811,1089.8000000,1358.7000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(4)
	CreateDynamicObject(1811,1089.8000000,1358.0000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(5)
	CreateDynamicObject(1811,1087.8000000,1360.9000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(6)
	CreateDynamicObject(1811,1087.8000000,1360.2000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(7)
	CreateDynamicObject(1811,1087.8000000,1359.5000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(8)
	CreateDynamicObject(1811,1087.8000000,1358.8000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(9)
	CreateDynamicObject(1811,1087.8000000,1358.1000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(10)
	CreateDynamicObject(1811,1085.9000000,1360.9000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(11)
	CreateDynamicObject(1811,1085.9000000,1360.2000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(12)
	CreateDynamicObject(1811,1085.9000000,1359.5000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(13)
	CreateDynamicObject(1811,1085.9000000,1358.8000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(14)
	CreateDynamicObject(1811,1085.9000000,1358.1000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(15)
	CreateDynamicObject(1811,1083.9000000,1361.0000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(16)
	CreateDynamicObject(1811,1083.9000000,1360.3000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(17)
	CreateDynamicObject(1811,1083.9000000,1359.6000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(18)
	CreateDynamicObject(1811,1083.9000000,1358.9000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(19)
	CreateDynamicObject(1811,1083.9000000,1358.2000000,10.6000000,0.0000000,0.0000000,179.9945100); //object(med_din_chair_5)(20)
	CreateDynamicObject(1808,1091.9000000,1354.5000000,9.8999996,0.0000000,0.0000000,270.0000000); //object(cj_watercooler2)(1)
	CreateDynamicObject(1808,1082.1000000,1361.3000000,9.8999996,0.0000000,0.0000000,0.0000000); //object(cj_watercooler2)(2)
	CreateDynamicObject(1703,1080.2000000,1358.6000000,9.8999996,0.0000000,0.0000000,90.0000000); //object(kb_couch02)(1)
	CreateDynamicObject(1703,1080.2000000,1355.9000000,9.8999996,0.0000000,0.0000000,90.0000000); //object(kb_couch02)(2)
	CreateDynamicObject(1497,1079.6801000,1355.3199000,9.8999996,0.0000000,0.0000000,0.0000000); //object(gen_doorext02)(1)
	CreateDynamicObject(1247,1080.5000000,1355.2999000,11.9000000,0.0000000,0.0000000,0.0000000); //object(bribe)(4)
	CreateDynamicObject(2959,1057.3000000,1259.9000000,9.7100000,0.0000000,0.0000000,0.0000000); //object(rider1_door)(1)
	CreateDynamicObject(2056,1088.6000000,1224.0000000,13.1000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(28)
	CreateDynamicObject(2056,1087.8000000,1224.0000000,10.8000000,0.0000000,0.0000000,179.9945100); //object(cj_target6)(29)
	CreateDynamicObject(7191,1075.1000000,1223.6000000,17.2999990,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b)(1)
	CreateDynamicObject(7191,1097.7000000,1246.0000000,17.2999990,0.0000000,0.0000000,0.0000000); //object(vegasnnewfence2b)(2)
	CreateDynamicObject(7191,1097.8000000,1291.1000000,17.2999990,0.0000000,0.0000000,0.0000000); //object(vegasnnewfence2b)(3)
	CreateDynamicObject(7191,1097.9000000,1336.0000000,17.2999990,0.0000000,0.0000000,0.0000000); //object(vegasnnewfence2b)(4)
	CreateDynamicObject(1215,1061.1000000,1365.5000000,10.4000000,0.0000000,0.0000000,0.0000000); //object(bollardlight)(1)
	CreateDynamicObject(1215,1073.9000000,1365.4000000,10.4000000,0.0000000,0.0000000,0.0000000); //object(bollardlight)(2)
	CreateDynamicObject(1216,1081.2000000,1361.2000000,10.6000000,0.0000000,0.0000000,0.0000000); //object(phonebooth1)(1)
	CreateDynamicObject(1776,1093.3000000,1354.3000000,11.0000000,0.0000000,0.0000000,0.0000000); //object(cj_candyvendor)(1)
	CreateDynamicObject(1775,1094.9000000,1354.3000000,11.0000000,0.0000000,0.0000000,0.0000000); //object(cj_sprunk1)(1)
	CreateDynamicObject(1703,1088.6000000,1350.8000000,9.8999996,0.0000000,0.0000000,90.0000000); //object(kb_couch02)(3)
	CreateDynamicObject(2935,348.3999900,2591.3000000,23.0000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_yel)(2)
	CreateDynamicObject(2935,348.3999900,2597.8999000,17.0000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_yel)(2)
	CreateDynamicObject(2935,348.2999900,2597.8999000,19.9000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_yel)(2)
	CreateDynamicObject(2935,348.3999900,2605.0000000,16.9000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_yel)(2)
	CreateDynamicObject(3077,386.2999900,2544.8999000,15.5000000,0.0000000,0.0000000,329.9963400); //object(nf_blackboard)(1)
	CreateDynamicObject(3108,-71.9000020,2504.0000000,15.5000000,0.0000000,0.0000000,0.0000000); //object(basejump_target)(1)
	CreateDynamicObject(3108,-47.5999980,2520.8999000,15.5000000,0.0000000,0.0000000,0.0000000); //object(basejump_target)(2)
	CreateDynamicObject(3108,-48.0000000,2484.8000000,15.5000000,0.0000000,0.0000000,0.0000000); //object(basejump_target)(3)
	CreateDynamicObject(3279,196.8000000,2536.3000000,15.7000000,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(1)
	CreateDynamicObject(1584,291.2000100,2500.5000000,18.0000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(10)
	CreateDynamicObject(1584,272.6000100,2501.3000000,17.7000010,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(11)
	CreateDynamicObject(1585,239.5000000,2494.5000000,17.1000000,0.0000000,0.0000000,90.0000000); //object(tar_civ2)(12)
	CreateDynamicObject(1583,269.2000100,2499.1001000,19.2000010,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(13)
	CreateDynamicObject(1584,287.7999900,2495.0000000,19.2000010,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(12)
	CreateDynamicObject(1585,249.1000100,2498.8000000,18.5000000,0.0000000,0.0000000,90.0000000); //object(tar_civ2)(13)
	CreateDynamicObject(1583,256.7999900,2495.0000000,17.4000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(14)
	CreateDynamicObject(1583,237.5000000,2497.3999000,17.1000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(15)
	CreateDynamicObject(1584,389.3999900,2606.1001000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(13)
	CreateDynamicObject(1584,398.2000100,2579.8999000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(14)
	CreateDynamicObject(1584,390.5000000,2601.3999000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(15)
	CreateDynamicObject(1585,384.2000100,2608.0000000,15.5000000,0.0000000,0.0000000,0.0000000); //object(tar_civ2)(14)
	CreateDynamicObject(8253,103.4000000,2462.3000000,19.4000000,0.0000000,0.0000000,90.0000000); //object(pltschlhnger01_lvs)(1)
	CreateDynamicObject(2567,94.0999980,2460.0000000,17.4000000,0.0000000,0.0000000,0.0000000); //object(ab_warehouseshelf)(1)
	CreateDynamicObject(2567,93.9000020,2466.6001000,17.4000000,0.0000000,0.0000000,0.0000000); //object(ab_warehouseshelf)(1)
	CreateDynamicObject(2567,113.1000000,2468.1001000,17.4000000,0.0000000,0.0000000,0.0000000); //object(ab_warehouseshelf)(1)
	CreateDynamicObject(2567,112.9000000,2457.3999000,17.4000000,0.0000000,0.0000000,0.0000000); //object(ab_warehouseshelf)(1)
	CreateDynamicObject(2932,101.1000000,2454.3000000,16.9000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_blue)(1)
	CreateDynamicObject(2932,104.8000000,2454.3999000,16.9000000,0.0000000,0.0000000,0.0000000); //object(kmb_container_blue)(1)
	CreateDynamicObject(18260,96.5999980,2472.6001000,17.1000000,0.0000000,0.0000000,0.0000000); //object(crates01)(1)
	CreateDynamicObject(2973,113.7000000,2460.7000000,15.5000000,0.0000000,0.0000000,0.0000000); //object(k_cargo2)(4)
	CreateDynamicObject(1654,110.5000000,2467.0000000,16.7999990,0.0000000,0.0000000,229.9932900); //object(dynamite)(1)
	CreateDynamicObject(1583,93.6999970,2469.1001000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(16)
	CreateDynamicObject(1585,93.9000020,2470.0000000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_civ2)(15)
	CreateDynamicObject(1584,-1446.5000000,1493.9000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(16)
	CreateDynamicObject(1583,-1446.6000000,1492.3000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(17)
	CreateDynamicObject(1583,-1427.5000000,1488.6000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(18)
	CreateDynamicObject(1584,-1408.6000000,1493.6000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(17)
	CreateDynamicObject(1583,-1399.5000000,1486.8000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(19)
	CreateDynamicObject(1584,-1385.8000000,1491.0000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(18)
	CreateDynamicObject(1584,-1385.7000000,1492.2000000,6.0999999,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(19)
	CreateDynamicObject(1584,-1384.9000000,1492.2000000,12.8000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(20)
	CreateDynamicObject(1583,-1384.9000000,1486.8000000,12.8000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(20)
	CreateDynamicObject(1583,-1382.8000000,1489.5000000,15.3000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(21)
	CreateDynamicObject(1584,-1362.7000000,1489.6000000,10.0000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(21)
	CreateDynamicObject(1583,-1375.3000000,1485.7000000,12.8000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(22)
	CreateDynamicObject(1583,-1375.2000000,1493.5000000,12.8000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(23)
	CreateDynamicObject(1583,-1384.6000000,1491.2000000,7.9000001,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(24)
	CreateDynamicObject(1584,-1371.3000000,1486.5000000,2.7000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(22)
	CreateDynamicObject(1584,-1386.1000000,1494.8000000,0.9000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(23)
	CreateDynamicObject(1583,-1393.9000000,1493.2000000,0.9000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(25)
	CreateDynamicObject(1583,-1402.9000000,1497.4000000,0.9000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(26)
	CreateDynamicObject(1584,-1422.5000000,1495.4000000,0.9000000,0.0000000,0.0000000,90.0000000); //object(tar_gun1)(24)
	CreateDynamicObject(1584,-1390.6000000,1480.3000000,3.0000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(25)
	CreateDynamicObject(1584,-1392.6000000,1480.3000000,3.0000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(26)
	CreateDynamicObject(1583,-1396.9000000,1481.9000000,0.9000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(27)
	CreateDynamicObject(1584,-1435.7000000,1480.6000000,0.9000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(27)
	CreateDynamicObject(1583,-1438.6000000,1491.0000000,0.9000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(28)
	CreateDynamicObject(1584,-1452.9000000,1497.4000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(28)
	CreateDynamicObject(1584,-1447.8000000,1498.0000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(29)
	CreateDynamicObject(1583,-1444.6000000,1493.2000000,10.8000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(29)
	CreateDynamicObject(1584,-1452.8000000,1480.6000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(30)
	CreateDynamicObject(1584,-1448.1000000,1481.0000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(31)
	CreateDynamicObject(1584,-1436.6000000,1482.0000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(32)
	CreateDynamicObject(1584,-1427.7000000,1483.0000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(33)
	CreateDynamicObject(1584,-1418.4000000,1482.9000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(34)
	CreateDynamicObject(1584,-1409.6000000,1481.9000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(35)
	CreateDynamicObject(1584,-1400.3000000,1482.1000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(36)
	CreateDynamicObject(1584,-1391.1000000,1482.0000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(37)
	CreateDynamicObject(1584,-1437.5000000,1496.6000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(38)
	CreateDynamicObject(1584,-1428.3000000,1496.6000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(39)
	CreateDynamicObject(1584,-1418.9000000,1496.6000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(40)
	CreateDynamicObject(1584,-1410.0000000,1496.6000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(41)
	CreateDynamicObject(1584,-1400.4000000,1496.2000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(42)
	CreateDynamicObject(1584,-1392.2000000,1496.8000000,10.8000000,0.0000000,0.0000000,0.0000000); //object(tar_gun1)(43)
	CreateDynamicObject(1496,364.1000100,2588.1001000,15.5000000,0.0000000,0.0000000,0.0000000); //object(gen_doorshop02)(1)
	CreateDynamicObject(3279,52.5000000,2534.0000000,15.5000000,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(2)
	CreateDynamicObject(3279,-74.9000020,2473.3999000,15.5000000,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(2)
	CreateDynamicObject(3279,252.7000000,2913.8000000,2.3000000,0.0000000,0.0000000,0.0000000); //object(a51_spottower)(2)
	CreateDynamicObject(9361,119.5000000,2471.3999000,18.1000000,0.0000000,0.0000000,45.0000000); //object(boatoffice_sfn)(1)
	CreateDynamicObject(1998,117.1000000,2473.8000000,15.7000000,0.0000000,0.0000000,0.0000000); //object(officedesk1l)(1)
	CreateDynamicObject(2171,116.9000000,2468.1001000,15.7000000,0.0000000,0.0000000,90.0000000); //object(med_office4_desk_1)(1)
	CreateDynamicObject(2605,119.9000000,2470.3999000,16.1000000,0.0000000,0.0000000,0.0000000); //object(polce_desk1)(1)
	CreateDynamicObject(2606,116.4000000,2471.3999000,17.2000010,0.0000000,0.0000000,90.0000000); //object(cj_police_counter2)(1)
	CreateDynamicObject(2606,116.4000000,2471.3999000,17.7000010,0.0000000,0.0000000,90.0000000); //object(cj_police_counter2)(2)
	CreateDynamicObject(2606,116.4000000,2471.3999000,18.2000010,0.0000000,0.0000000,90.0000000); //object(cj_police_counter2)(3)
	CreateDynamicObject(2608,119.8000000,2475.2000000,16.5000000,0.0000000,0.0000000,0.0000000); //object(polce_shelf)(1)
	CreateDynamicObject(3084,187.3999900,2614.8000000,17.1000000,0.0000000,0.0000000,90.0000000); //object(trdcsgrgdoor_lvs)(1)
	CreateDynamicObject(16770,168.6000100,2612.8999000,17.1000000,0.0000000,0.0000000,0.0000000); //object(des_gunbldg01)(2)
	CreateDynamicObject(1583,187.2000000,2619.8000000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(30)
	CreateDynamicObject(1583,187.2000000,2616.7000000,15.6000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(31)
	CreateDynamicObject(1583,187.2000000,2613.6001000,15.6000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(32)
	CreateDynamicObject(1583,187.2000000,2609.3000000,15.5000000,0.0000000,0.0000000,90.0000000); //object(tar_gun2)(33)
	CreateDynamicObject(3877,-77.4000020,2483.7000000,17.2000010,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(6)
	CreateDynamicObject(3877,-77.8000030,2521.8999000,17.2000010,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(7)
	CreateDynamicObject(3877,-34.2000010,2477.0000000,17.2000010,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(8)
	CreateDynamicObject(3877,-33.7999990,2528.1001000,17.2000010,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(9)
	CreateDynamicObject(10230,296.2999900,3024.3999000,7.3000002,0.0000000,0.0000000,0.0000000); //object(freighter_sfe)(1)
	CreateDynamicObject(10140,311.0199900,3023.3440000,7.4489999,0.0000000,0.0000000,0.0000000); //object(freig2_intsfe)(1)
	CreateDynamicObject(10231,295.3999300,3022.8501000,8.5000248,0.0000000,0.0000000,0.0000000); //object(freightboxes)(1)
	//
    CreateDynamicObject(1569, 649.59998, -1359.19995, 12.5, 0, 0, 90);
	CreateDynamicObject(1569, 649.59998, -1356.30005, 12.5, 0, 0, 270);
	//CreateDynamicObject(2773, 648.59998, -1356.09998, 13.1, 0, 0, 92);
	//CreateDynamicObject(2773, 648.59961, -1359.39941, 13.1, 0, 0, 92);
	CreateDynamicObject(3934, 742.29999, -1370.30005, 24.7, 0, 0, 89.5);
	sanGates[0] = CreateDynamicObject(975, 777.5, -1384.6999511719, 14.199999809265, 0, 0, 180.25);
	sanGates[1] = CreateDynamicObject(975, 777.5, -1330.3000488281, 14.10000038147, 0, 0, 178.75);
	CreateDynamicObject(997, 643.29999, -1355.90002, 12.6, 0, 0, 90);
	CreateDynamicObject(997, 643.29999, -1352.09998, 12.5, 0, 0, 90);
	CreateDynamicObject(997, 643.29999, -1348.40002, 12.6, 0, 0, 90);
	CreateDynamicObject(997, 643.20001, -1362.69995, 12.6, 0, 0, 90);
	CreateDynamicObject(997, 643.20001, -1366.69995, 12.6, 0, 0, 90);
	CreateDynamicObject(997, 643.20001, -1370.5, 12.6, 0, 0, 90);
	CreateDynamicObject(3851, 649.59998, -1355.30005, 14.5, 0, 0, 0);
	CreateDynamicObject(3851, 649.59998, -1366.59998, 14.5, 0, 0, 0);
	CreateDynamicObject(673, 645.29999, -1332.19995, 12.6, 0, 0, 0);
	CreateDynamicObject(673, 645.29999, -1343.69995, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 645.29999, -1371.80005, 12.7, 0, 0, 0);
	CreateDynamicObject(673, 645.09998, -1382, 12.7, 0, 0, 0);
	CreateDynamicObject(640, 649, -1353.30005, 13.3, 0, 0, 0);
	CreateDynamicObject(640, 649, -1362, 13.3, 0, 0, 0);
	CreateDynamicObject(640, 649, -1353.2998, 13.3, 0, 0, 0);
	CreateDynamicObject(1256, 648.20001, -1353, 13.2, 0, 0, 0);
	CreateDynamicObject(1256, 647.90002, -1362.5, 13.3, 0, 0, 0);
	CreateDynamicObject(1215, 643.29999, -1344.90002, 13.1, 0, 0, 0);
	CreateDynamicObject(1215, 643.29999, -1348.69995, 13.1, 0, 0, 0);
	CreateDynamicObject(1215, 643.29999, -1352.40002, 13.1, 0, 0, 0);
	CreateDynamicObject(1215, 643.2998, -1352.39941, 13.1, 0, 0, 0);
	CreateDynamicObject(1215, 643.29999, -1356.09998, 13.1, 0, 0, 0);
	CreateDynamicObject(1215, 643.20001, -1359.30005, 13.1, 0, 0, 0);
	CreateDynamicObject(1215, 643.20001, -1363.09998, 13.2, 0, 0, 0);
	CreateDynamicObject(1215, 643.20001, -1367, 13.2, 0, 0, 0);
	CreateDynamicObject(1215, 643.20001, -1370.80005, 13.2, 0, 0, 0);
	CreateDynamicObject(673, 688.29999, -1387.30005, 12.7, 0, 0, 0);
	CreateDynamicObject(673, 670.90002, -1387.40002, 12.6, 0, 0, 0);
	CreateDynamicObject(673, 727.09998, -1387.40002, 12.7, 0, 0, 0);
	CreateDynamicObject(673, 708.09998, -1387.30005, 12.7, 0, 0, 0);
	CreateDynamicObject(673, 746, -1387.5, 12.7, 0, 0, 0);
	CreateDynamicObject(673, 789.90002, -1358.90002, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 763.19922, -1387.7998, 12.7, 0, 0, 0);
	CreateDynamicObject(673, 789.59961, -1380.5, 12.7, 0, 0, 0);
	CreateDynamicObject(673, 789.90002, -1334.69995, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 762.59998, -1327.30005, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 746.90002, -1327.09998, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 726.90002, -1327.09998, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 708.40002, -1327.40002, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 688.79999, -1327.30005, 12.6, 0, 0, 0);
	CreateDynamicObject(673, 669.90002, -1327.30005, 12.7, 0, 0, 0);
	CreateDynamicObject(1215, 738.90002, -1374.30005, 25.3, 0, 0, 0);
	CreateDynamicObject(1215, 738.90002, -1366.5, 25.3, 0, 0, 0);
	CreateDynamicObject(1215, 745.7998, -1374.2998, 25.3, 0, 0, 0);
	CreateDynamicObject(1215, 745.7998, -1366.59961, 25.3, 0, 0, 0);
	
	// Interior
	
	CreateDynamicObject(14782, 347.22775, 166.46161, 1014.19574,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14401, 347.59454, 161.67229, 1013.50897,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 373.35141, 174.70219, 1013.06812,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2002, 369.78131, 178.41409, 1013.16931,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1817, 370.40631, 173.05470, 1013.17218,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 371.85800, 171.23109, 1013.06812,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2001, 373.34381, 169.60159, 1013.17230,   0.00000, 0.00000, 3.00000);
	CreateDynamicObject(2001, 372.72729, 169.46460, 1013.16309,   0.00000, 0.00000, 65.00000);
	CreateDynamicObject(1569, 368.93756, 161.57544, 1013.16205,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1569, 368.93961, 161.57539, 1015.60461,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2161, 360.26999, 178.96790, 1013.16333,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 361.59900, 178.29311, 1013.16412,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 358.50290, 178.95731, 1013.16333,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2167, 357.58600, 178.96291, 1013.16333,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2173, 359.58810, 176.67979, 1013.17700,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2309, 358.72116, 177.71617, 1013.16711,   0.00000, 0.00000, 200.00000);
	CreateDynamicObject(2190, 359.40271, 176.30020, 1013.96899,   0.00000, 0.00000, 180.00000);
	
	// hash's pad
	CreateDynamicObject(17564, 299.36798, -1610.86279, 33.45430,   0.00000, 0.00000, 260.00000); // front door
	
	CreateDynamicObject(19379,284.0672300,-1617.5609100,95.1590700,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19379,284.0585600,-1607.9372600,95.1590700,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19379,284.0576800,-1598.5821500,95.1590700,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19379,294.4733000,-1607.9637500,95.1590700,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19379,273.6196600,-1605.7635500,95.1590700,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19358,289.3960300,-1601.5440700,96.8804700,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,289.3960000,-1598.3441200,96.8805000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,289.3960000,-1595.3441200,96.8805000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,288.1404400,-1593.8201900,96.8805000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19358,284.9404000,-1593.8201900,96.8805000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19358,281.7403900,-1593.8201900,96.8805000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19358,278.5404100,-1593.8201900,96.8805000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19358,278.8980100,-1596.1248800,96.8805000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,278.8980100,-1599.3249500,96.8805000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,278.8980100,-1593.6248800,96.8805000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,277.3800700,-1600.8627900,96.8805000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19358,274.1801100,-1600.8627900,96.8805000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19358,270.9801000,-1600.8627900,96.8805000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19358,269.9801000,-1600.8627900,96.8805000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19450,294.1279600,-1603.0736100,96.8805000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(18755,301.7648900,-1607.8762200,97.1535300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,298.9881900,-1604.3847700,96.8805000,0.0000000,0.0000000,30.0000000); //
	CreateDynamicObject(19358,299.1578700,-1611.4552000,96.8805000,0.0000000,0.0000000,-30.0000000); //
	CreateDynamicObject(19450,294.1399200,-1612.8806200,96.8805000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1649,287.1005900,-1622.3812300,96.9134000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(1649,282.7005900,-1622.3812300,96.9133000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(19358,280.4264200,-1620.7684300,96.8805000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,280.4263900,-1617.5683600,96.8805000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,280.4264200,-1620.7684300,96.8805000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,280.4263900,-1614.3684100,96.8805000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,280.4263900,-1612.1684600,96.8805000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19450,275.6858500,-1610.6451400,96.8805000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19358,269.3161600,-1610.6466100,96.8805000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19450,268.8891000,-1605.7597700,96.8805000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(19450,289.3892200,-1617.6213400,96.8805000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(19377,294.3962100,-1608.0062300,98.6787800,0.0000000,90.0000000,360.0000000); //
	CreateDynamicObject(19377,284.1987000,-1598.5499300,98.6787800,0.0000000,90.0000000,360.0000000); //
	CreateDynamicObject(19377,284.2213100,-1608.1492900,98.6787800,0.0000000,90.0000000,360.0000000); //
	CreateDynamicObject(19377,273.7037000,-1605.7563500,98.6787800,0.0000000,90.0000000,360.0000000); //
	CreateDynamicObject(19377,285.0499900,-1617.7314500,98.6787800,0.0000000,90.0000000,360.0000000); //
	CreateDynamicObject(2232,289.4469300,-1621.7989500,97.7416400,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2104,289.3373400,-1622.1574700,95.2462000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2232,289.4469000,-1620.8990500,97.7416000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2232,289.4469000,-1619.9990200,97.7416000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2232,289.4469000,-1619.0990000,97.7416000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2232,289.4469000,-1619.0990000,96.4218000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2232,289.4469000,-1619.9990200,96.4218000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2232,289.4469000,-1620.8990500,96.4218000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1726,288.7384000,-1616.4925500,95.1872000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1726,288.7384000,-1614.0926500,95.1872000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1726,286.0673200,-1613.4394500,95.1872000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1726,283.6673000,-1613.4394500,95.1872000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1786,289.2017800,-1615.8769500,97.1285000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(19443,290.4128100,-1615.5877700,97.0395300,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(2101,289.0320100,-1615.0690900,97.1278000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2011,288.7561300,-1613.5332000,95.2400100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14806,271.9402800,-1609.8697500,96.3110000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(14446,271.7114600,-1602.7249800,95.8112800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1961,271.1805400,-1600.9559300,97.2530700,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1962,273.2371200,-1600.9660600,97.0509000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1962,272.4371000,-1600.9660600,97.0509000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1962,271.6370800,-1600.9660600,97.6509000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1962,275.4371000,-1600.9660600,97.6509000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1962,274.2370900,-1600.9660600,97.6509000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1962,273.1370800,-1600.9660600,97.6509000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1962,269.7370900,-1600.9660600,97.6509000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1962,269.7370900,-1600.9660600,96.7509000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1962,271.2370900,-1600.9660600,96.7509000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2026,284.1264600,-1598.4204100,98.5868100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2026,284.5006700,-1608.6257300,98.5868100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2026,294.3348100,-1608.3267800,98.5868100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2026,284.6914400,-1617.0565200,98.5868100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2026,274.3045300,-1606.5615200,98.5868100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2257,289.2778000,-1613.7973600,97.3666800,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1726,281.0443400,-1622.0000000,95.1872000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(1726,281.0443100,-1619.5999800,95.1872000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(1726,281.0443100,-1617.1999500,95.1872000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(1726,281.0443100,-1614.8000500,95.1872000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(3851,278.9711600,-1602.4184600,96.7334100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1726,276.7769200,-1601.7897900,95.1872000,0.0000000,0.0000000,-40.0000000); //
	CreateDynamicObject(2165,278.4447000,-1605.4266400,95.2475000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1714,277.4546200,-1605.8234900,95.2473000,0.0000000,0.0000000,69.0000000); //
	CreateDynamicObject(2027,279.8464400,-1599.7578100,95.7865100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2000,286.5835300,-1593.9101600,96.0493900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2305,288.8073400,-1594.4096700,95.2179300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2139,287.8265400,-1594.4277300,95.2149800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2139,286.9265100,-1594.4277300,95.2150000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2139,286.0264900,-1594.4277300,95.2150000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2136,284.0710800,-1594.4091800,95.2246600,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2135,283.0875500,-1594.4112500,95.2313500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2135,282.0875900,-1594.4112500,95.2314000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2140,281.0910600,-1594.4882800,95.3207000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2140,280.0910900,-1594.4882800,95.3207000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2139,288.7938800,-1595.3686500,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,288.7939100,-1596.2686800,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,288.7939100,-1597.1687000,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,288.7939100,-1598.0687300,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,288.7939100,-1598.9687500,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,288.7939100,-1599.8686500,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,288.7939100,-1600.7686800,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,288.7939100,-1601.6687000,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,288.7939100,-1602.5687300,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,283.9462900,-1598.8774400,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,284.7595500,-1598.9051500,95.2150000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2139,284.7596100,-1599.8051800,95.2150000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2139,284.7596100,-1600.7052000,95.2150000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2139,284.7596100,-1601.6052200,95.2150000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2139,284.7596100,-1602.5052500,95.2150000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2139,283.9462900,-1599.7773400,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,283.9462900,-1600.6773700,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,283.9462900,-1601.5773900,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,283.9462900,-1602.4774200,95.2150000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(16151,293.0805400,-1604.1308600,95.5631100,0.0000000,0.0000000,90.0000000); //
	
	//weapon warehouse - temporary
	CreateDynamicObject(16150,2266.0996094,-1577.0996094,1492.5999756,0.0000000,0.0000000,0.5000000); //object(ufo_barinterior)(1)
	CreateDynamicObject(941,2268.1999512,-1589.8000488,1493.6999512,0.0000000,0.0000000,0.0000000); //object(cj_df_worktop_3)(1)
	CreateDynamicObject(941,2265.8000488,-1589.8000488,1493.6999512,0.0000000,0.0000000,0.0000000); //object(cj_df_worktop_3)(2)
	CreateDynamicObject(941,2263.3999023,-1589.8000488,1493.6999512,0.0000000,0.0000000,0.0000000); //object(cj_df_worktop_3)(3)
	CreateDynamicObject(2035,2269.1000977,-1589.5000000,1494.1999512,0.0000000,0.0000000,0.0000000); //object(cj_m16)(1)
	CreateDynamicObject(2035,2269.1000977,-1590.0999756,1494.1999512,0.0000000,0.0000000,0.0000000); //object(cj_m16)(3)
	CreateDynamicObject(2035,2268.0000000,-1589.5000000,1494.1999512,0.0000000,0.0000000,0.0000000); //object(cj_m16)(4)
	CreateDynamicObject(2035,2268.0000000,-1590.0999756,1494.1999512,0.0000000,0.0000000,0.0000000); //object(cj_m16)(6)
	CreateDynamicObject(2036,2266.1999512,-1589.5000000,1494.1999512,0.0000000,0.0000000,0.0000000); //object(cj_psg1)(1)
	CreateDynamicObject(2036,2266.1999512,-1590.0000000,1494.1999512,0.0000000,0.0000000,0.0000000); //object(cj_psg1)(2)
	CreateDynamicObject(2044,2264.3999023,-1589.5000000,1494.1999512,0.0000000,0.0000000,0.0000000); //object(cj_mp5k)(1)
	CreateDynamicObject(2044,2264.3994141,-1590.0996094,1494.1999512,0.0000000,0.0000000,0.0000000); //object(cj_mp5k)(2)
	CreateDynamicObject(2044,2263.8000488,-1590.0999756,1494.1999512,0.0000000,0.0000000,0.0000000); //object(cj_mp5k)(3)
	CreateDynamicObject(2044,2263.8000488,-1589.5000000,1494.1999512,0.0000000,0.0000000,0.0000000); //object(cj_mp5k)(4)
	CreateDynamicObject(2044,2263.1999512,-1589.5000000,1494.1999512,0.0000000,0.0000000,0.0000000); //object(cj_mp5k)(5)
	CreateDynamicObject(2044,2263.1999512,-1590.0999756,1494.1999512,0.0000000,0.0000000,0.0000000); //object(cj_mp5k)(6)
	CreateDynamicObject(3052,2263.0000000,-1571.9000244,1493.6999512,0.0000000,0.0000000,0.0000000); //object(db_ammo)(1)
	CreateDynamicObject(3052,2263.8999023,-1571.9000244,1493.6999512,0.0000000,0.0000000,0.0000000); //object(db_ammo)(2)
	CreateDynamicObject(2358,2265.3999023,-1571.8000488,1493.6999512,0.0000000,0.0000000,0.0000000); //object(ammo_box_c2)(1)
	CreateDynamicObject(2358,2266.3000488,-1571.8000488,1493.6999512,0.0000000,0.0000000,0.0000000); //object(ammo_box_c2)(2)
	CreateDynamicObject(1431,2271.1000977,-1576.4000244,1493.1999512,0.0000000,0.0000000,0.0000000); //object(dyn_box_pile)(1)
	CreateDynamicObject(1431,2273.3000488,-1576.3000488,1493.1999512,0.0000000,0.0000000,0.0000000); //object(dyn_box_pile)(2)
	CreateDynamicObject(941,2263.3000488,-1571.8000488,1493.0999756,0.0000000,0.0000000,0.0000000); //object(cj_df_worktop_3)(4)
	CreateDynamicObject(941,2265.6999512,-1571.8000488,1493.0999756,0.0000000,0.0000000,0.0000000); //object(cj_df_worktop_3)(5)
	CreateDynamicObject(941,2268.1999512,-1571.8000488,1493.0999756,0.0000000,0.0000000,0.0000000); //object(cj_df_worktop_3)(6)
	CreateDynamicObject(3013,2267.6000977,-1571.9000244,1493.6999512,0.0000000,0.0000000,0.0000000); //object(cr_ammobox)(1)
	CreateDynamicObject(3013,2268.0000000,-1571.9000244,1493.6999512,0.0000000,0.0000000,0.0000000); //object(cr_ammobox)(2)
	CreateDynamicObject(3013,2268.3999023,-1571.9000244,1493.6999512,0.0000000,0.0000000,0.0000000); //object(cr_ammobox)(3)
	CreateDynamicObject(3013,2268.8000488,-1571.9000244,1493.6999512,0.0000000,0.0000000,0.0000000); //object(cr_ammobox)(4)
	CreateDynamicObject(3013,2269.1999512,-1571.9000244,1493.6999512,0.0000000,0.0000000,0.0000000); //object(cr_ammobox)(5)
	CreateDynamicObject(2048,2265.6999512,-1571.3000488,1494.5999756,0.0000000,0.0000000,0.0000000); //object(cj_flag2)(1)
	CreateDynamicObject(2047,2266.3000488,-1590.3000488,1494.9000244,0.0000000,0.0000000,177.0000000); //object(cj_flag1)(1)
	CreateDynamicObject(2619,2269.6999512,-1581.6999512,1494.0999756,0.0000000,0.0000000,0.0000000); //object(mp_ammoambient)(1)
	CreateDynamicObject(2977,2270.6999512,-1583.0000000,1492.5999756,0.0000000,0.0000000,0.0000000); //object(kmilitary_crate)(2)
	CreateDynamicObject(2977,2271.8000488,-1583.0000000,1492.5999756,0.0000000,0.0000000,0.0000000); //object(kmilitary_crate)(3)
	CreateDynamicObject(2977,2272.8999023,-1583.0000000,1492.5999756,0.0000000,0.0000000,0.0000000); //object(kmilitary_crate)(4)
	CreateDynamicObject(2977,2274.0000000,-1583.0000000,1492.5999756,0.0000000,0.0000000,0.0000000); //object(kmilitary_crate)(5)
	CreateDynamicObject(941,2262.8999023,-1575.0000000,1493.0999756,0.0000000,0.0000000,270.2500000); //object(cj_df_worktop_3)(9)
	CreateDynamicObject(941,2262.8999023,-1577.4000244,1493.0999756,0.0000000,0.0000000,270.2471924); //object(cj_df_worktop_3)(10)
	CreateDynamicObject(1575,2263.0000000,-1578.3000488,1493.5999756,0.0000000,0.0000000,0.0000000); //object(drug_white)(3)
	CreateDynamicObject(1575,2263.0000000,-1577.5999756,1493.5999756,0.0000000,0.0000000,0.0000000); //object(drug_white)(4)
	CreateDynamicObject(1575,2263.0000000,-1576.9000244,1493.5999756,0.0000000,0.0000000,0.0000000); //object(drug_white)(5)
	CreateDynamicObject(1578,2263.0000000,-1576.0999756,1493.5999756,0.0000000,0.0000000,0.0000000); //object(drug_green)(2)
	CreateDynamicObject(1578,2263.0000000,-1575.3000488,1493.5999756,0.0000000,0.0000000,0.0000000); //object(drug_green)(3)
	CreateDynamicObject(1578,2263.0000000,-1574.5000000,1493.5999756,0.0000000,0.0000000,0.0000000); //object(drug_green)(4)
	CreateDynamicObject(964,2274.0000000,-1577.9000244,1492.5999756,0.0000000,0.0000000,270.7500000); //object(cj_metal_crate)(1)
	CreateDynamicObject(964,2274.0000000,-1579.3000488,1492.5999756,0.0000000,0.0000000,270.7470703); //object(cj_metal_crate)(2)
	CreateDynamicObject(941,2269.1999512,-1577.6999512,1493.0999756,0.0000000,0.0000000,270.2471924); //object(cj_df_worktop_3)(11)
	CreateDynamicObject(941,2269.1999512,-1575.3000488,1493.0999756,0.0000000,0.0000000,270.2471924); //object(cj_df_worktop_3)(13)
	CreateDynamicObject(2041,2269.1000977,-1574.6999512,1493.8000488,0.0000000,0.0000000,272.0000000); //object(ammo_box_m2)(2)
	CreateDynamicObject(2041,2269.1000977,-1575.1999512,1493.8000488,0.0000000,0.0000000,271.9995117); //object(ammo_box_m2)(7)
	CreateDynamicObject(2041,2269.1000977,-1575.6999512,1493.8000488,0.0000000,0.0000000,271.9995117); //object(ammo_box_m2)(8)
	CreateDynamicObject(2041,2269.1000977,-1576.1999512,1493.8000488,0.0000000,0.0000000,271.9995117); //object(ammo_box_m2)(9)
	CreateDynamicObject(2043,2269.1999512,-1577.3000488,1493.6999512,0.0000000,0.0000000,269.9999695); //object(ammo_box_m4)(1)
	CreateDynamicObject(2043,2269.1999512,-1577.8000488,1493.6999512,0.0000000,0.0000000,269.9945068); //object(ammo_box_m4)(2)
	CreateDynamicObject(2042,2269.0000000,-1578.5999756,1493.6999512,0.0000000,0.0000000,193.9999542); //object(ammo_box_m3)(1)
	CreateDynamicObject(2680,2274.6999512,-1580.5999756,1493.4000244,0.0000000,0.0000000,282.0000000); //object(cj_padlock)(1)
	CreateDynamicObject(2680,2269.6000977,-1573.9000244,1493.4000244,0.0000000,0.0000000,281.9970703); //object(cj_padlock)(2)
	CreateDynamicObject(2680,2269.6000977,-1572.6999512,1493.4000244,0.0000000,0.0000000,281.9970703); //object(cj_padlock)(3)
	CreateDynamicObject(2395,2262.3999023,-1583.5999756,1492.5999756,0.0000000,0.0000000,90.2500000); //object(cj_sports_wall)(1)
	CreateDynamicObject(1508,2262.3999023,-1581.0999756,1494.3000488,0.0000000,0.0000000,0.0000000); //object(dyn_garage_door)(1)
	
	// gates for sf ammo place
	CreateDynamicObject(2957, -2184.38647, 711.47809, 54.49190,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2957, -2178.88037, 711.40082, 54.49190,   0.00000, 0.00000, 0.00000);
	
	// el corona shit
	/*CreateDynamicObject(1457, 1675.70654, -2080.05884, 13.28510,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1479, 1667.37402, -2079.35767, 13.94510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1271, 1670.82251, -2078.29004, 12.88570,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1271, 1671.42395, -2079.03833, 12.88570,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(2628, 1666.84814, -2078.72412, 12.54530,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2629, 1664.89966, -2079.12231, 12.54680,   0.00000, 0.00000, 47.00000);
	CreateDynamicObject(17969, 1678.92468, -2077.87036, 14.69890,   -4.00000, 0.00000, 90.00000);
	CreateDynamicObject(1328, 1673.68494, -2078.14844, 13.04500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2676, 1675.96008, -2082.56763, 12.66240,   0.00000, 0.00000, -14.00000);
	CreateDynamicObject(2670, 1673.26624, -2078.74463, 12.62430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1463, 1676.65710, -2079.39307, 12.54570,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1463, 1675.53467, -2079.34961, 12.54570,   0.00000, 0.00000, 268.00000);
	CreateDynamicObject(18661, 1673.57214, -2095.77002, 14.68830,   -2.00000, 0.00000, 270.00000);
	CreateDynamicObject(365, 1673.81262, -2095.28833, 12.74610,   0.00000, -4.00000, 0.00000);
	CreateDynamicObject(365, 1673.62988, -2095.33521, 12.74610,   0.00000, -4.00000, 33.00000);
	CreateDynamicObject(365, 1673.69238, -2095.32422, 12.55610,   90.00000, -4.00000, 33.00000);
	CreateDynamicObject(1450, 1671.56360, -2095.25366, 13.12710,   0.00000, 0.00000, 184.00000);
	CreateDynamicObject(1219, 1687.53137, -2087.07422, 14.47370,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject(1756, 1680.83240, -2081.13379, 12.54590,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(1756, 1682.47192, -2084.13672, 12.54590,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2319, 1680.94861, -2082.55078, 12.54510,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(933, 1685.58826, -2081.62622, 12.54702,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1429, 1685.09192, -2081.75293, 13.76940,   0.00000, 0.00000, -73.00000);
	CreateDynamicObject(2968, 1685.98511, -2086.43530, 12.84400,   0.00000, 0.00000, -11.00000);
	CreateDynamicObject(2968, 1686.78467, -2085.97925, 12.84400,   0.00000, 0.00000, 105.00000);
	CreateDynamicObject(1349, 1678.56860, -2094.54565, 13.12260,   0.00000, 0.00000, -98.00000);
	CreateDynamicObject(2203, 1683.60486, -2078.89600, 12.72650,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19473, 1683.64136, -2078.86963, 12.83390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2062, 1685.67041, -2079.29810, 13.12570,   0.00000, 0.00000, -207.00000);
	CreateDynamicObject(1481, 1679.11755, -2079.26025, 13.24640,   0.00000, 0.00000, 18.00000);
	CreateDynamicObject(2859, 1679.13965, -2079.30835, 12.91700,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(2880, 1678.94202, -2079.43286, 13.36080,   335.00000, 279.00000, 0.00000);
	CreateDynamicObject(2856, 1681.21777, -2082.29858, 13.04320,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2894, 1682.39380, -2082.71362, 13.04300,   0.00000, 0.00000, -25.00000);
	CreateDynamicObject(335, 1680.54004, -2083.94897, 13.02380,   90.00000, 0.00000, 47.00000);
	CreateDynamicObject(1222, 1686.16504, -2079.97974, 12.98760,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(2060, 1689.16699, -2079.85010, 12.58600,   0.00000, 0.00000, -93.00000);
	CreateDynamicObject(2060, 1688.91174, -2078.98022, 12.58600,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(2060, 1688.76111, -2079.24512, 12.84600,   0.00000, 0.00000, -18.00000);
	CreateDynamicObject(1456, 1679.05347, -2089.69189, 13.29730,   -4.00000, 0.00000, 270.00000);
	CreateDynamicObject(3403, 1683.44836, -2082.41187, 15.58290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(17969, 1753.11987, -2133.11646, 14.56520,   -4.00000, 0.00000, 0.00000);
	CreateDynamicObject(947, 1719.83801, -2152.46729, 14.73990,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(947, 1710.98035, -2152.46729, 14.73990,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1271, 1721.15027, -2153.07153, 12.88850,   0.00000, 0.00000, 47.00000);
	CreateDynamicObject(18929, 1721.20142, -2153.10498, 13.28420,   -10.00000, 270.00000, 0.00000);
	CreateDynamicObject(1810, 1692.52234, -2144.78345, 12.54150,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(1712, 1690.03015, -2146.32446, 12.54090,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject(1810, 1709.99255, -2149.99414, 12.54670,   0.00000, 0.00000, 49.00000);
	CreateDynamicObject(1810, 1710.92810, -2149.59863, 12.54670,   0.00000, 0.00000, 7.00000);
	CreateDynamicObject(1810, 1709.30701, -2150.94116, 12.54670,   0.00000, 0.00000, 79.00000);
	CreateDynamicObject(2315, 1691.35388, -2147.10107, 12.54370,   0.00000, 0.00000, 62.00000);
	CreateDynamicObject(18661, 1692.67932, -2138.10596, 14.63620,   -2.00000, 0.00000, 90.00000);
	CreateDynamicObject(19364, 1694.68628, -2139.66309, 14.26280,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19364, 1694.68823, -2142.86279, 14.26280,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19364, 1696.19995, -2144.38110, 14.26280,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19364, 1699.38330, -2144.38110, 14.26280,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1696.54065, -2142.70068, 12.52190,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19355, 1699.24158, -2142.70728, 12.52100,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19355, 1699.24158, -2139.50781, 12.52100,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19355, 1696.52173, -2139.50781, 12.52190,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(17951, 1700.88660, -2141.22388, 15.90530,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19355, 1702.57800, -2139.51904, 12.39550,   0.00000, 94.10000, 0.00000);
	CreateDynamicObject(19355, 1702.57800, -2142.70190, 12.39550,   0.00000, 94.10000, 0.00000);
	CreateDynamicObject(2886, 1699.62878, -2138.12817, 14.39750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1502, 1697.62524, -2138.11157, 12.60870,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1463, 1695.73645, -2138.94653, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(928, 1696.94482, -2139.41187, 12.88960,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 1696.90686, -2139.49634, 12.79150,   0.00000, -8.00000, -244.00000);
	CreateDynamicObject(365, 1696.89832, -2139.21655, 12.79150,   0.00000, -8.00000, -149.00000);
	CreateDynamicObject(365, 1697.00171, -2139.38599, 12.79150,   0.00000, -8.00000, -215.00000);
	CreateDynamicObject(365, 1697.10168, -2139.46460, 12.79150,   0.00000, -8.00000, -227.00000);
	CreateDynamicObject(365, 1697.00684, -2139.58643, 12.79150,   0.00000, -8.00000, -244.00000);
	CreateDynamicObject(2055, 1699.08862, -2144.26953, 14.46640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19364, 1696.52173, -2142.70728, 16.00880,   0.00000, 90.00000, 180.00000);
	CreateDynamicObject(19364, 1699.24158, -2142.70728, 16.00790,   0.00000, 90.00000, 180.00000);
	CreateDynamicObject(19364, 1696.52173, -2139.50781, 16.00880,   0.00000, 90.00000, 180.00000);
	CreateDynamicObject(19364, 1699.24158, -2139.50781, 16.00790,   0.00000, 90.00000, 180.00000);
	CreateDynamicObject(1437, 1698.36865, -2147.22656, 12.54210,   -28.00000, 0.00000, 0.00000);
	CreateDynamicObject(1224, 1696.48315, -2140.42969, 16.69350,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1224, 1698.13733, -2140.00024, 16.69350,   0.00000, 0.00000, 69.00000);
	CreateDynamicObject(1462, 1694.08826, -2141.04932, 12.54700,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1412, 1719.98364, -2122.78638, 12.54186,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 1709.86499, -2122.78882, 12.54186,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1946, 1717.12854, -2150.33032, 12.74930,   200.00000, 0.00000, -84.00000);
	CreateDynamicObject(3282, 1688.25500, -2137.90723, 12.54484,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1486, 1681.58948, -2082.66577, 13.20090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1486, 1681.94189, -2082.46753, 13.20090,   0.00000, 0.00000, -200.00000);
	CreateDynamicObject(1486, 1690.23962, -2146.97852, 12.70760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2838, 1691.78748, -2145.92407, 13.06870,   0.00000, 0.00000, -69.00000);
	CreateDynamicObject(2860, 1691.24585, -2146.96191, 13.03610,   0.00000, 0.00000, -127.00000);
	CreateDynamicObject(1328, 1691.45117, -2148.83228, 13.06250,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2672, 1691.43835, -2148.90601, 12.82230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1299, 1686.72522, -2152.24219, 13.00460,   0.00000, 0.00000, 25.00000);
	CreateDynamicObject(2654, 1690.14368, -2144.42749, 12.76740,   0.00000, 0.00000, 135.00000);
	CreateDynamicObject(1413, 1710.04907, -2148.71533, 12.56850,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1412, 1708.30725, -2151.18823, 12.56850,   0.00000, 0.00000, 288.00000);
	CreateDynamicObject(1413, 1707.25635, -2156.53394, 12.56850,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1486, 1709.25098, -2150.40942, 12.69010,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1486, 1709.34851, -2150.63696, 12.69010,   0.00000, 0.00000, 200.00000);
	CreateDynamicObject(1230, 1690.46863, -2139.51782, 12.98430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1230, 1689.46167, -2140.26245, 12.98430,   0.00000, 0.00000, 18.00000);
	CreateDynamicObject(1220, 1690.38489, -2140.55811, 12.98430,   0.00000, 0.00000, 55.00000);
	CreateDynamicObject(1221, 1689.48083, -2139.08691, 12.98430,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(337, 1682.77295, -2148.55005, 13.33980,   174.00000, -10.00000, -192.00000);
	CreateDynamicObject(3694, 1675.91577, -2151.27002, 12.91670,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(337, 1675.29041, -2156.23340, 13.33980,   174.00000, -10.00000, -99.00000);
	CreateDynamicObject(336, 1700.07581, -2138.15210, 13.28830,   168.00000, 0.00000, 0.00000);
	CreateDynamicObject(1575, 1668.13220, -2139.53198, 12.54308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1576, 1668.13220, -2139.53198, 12.70310,   0.00000, 0.00000, -76.00000);
	CreateDynamicObject(1575, 1667.61560, -2138.96704, 12.54310,   0.00000, 0.00000, 47.00000);
	CreateDynamicObject(1710, 1667.51929, -2141.53955, 12.54050,   0.00000, 0.00000, 47.00000);
	CreateDynamicObject(850, 1667.52271, -2138.76953, 12.64320,   0.00000, 0.00000, -36.00000);
	CreateDynamicObject(2321, 1670.00708, -2141.17017, 12.54670,   0.00000, 0.00000, 213.00000);
	CreateDynamicObject(17969, 1694.84766, -2141.36304, 14.26990,   -4.00000, 0.00000, 180.00000);
	CreateDynamicObject(3261, 1662.35779, -2146.05322, 12.53880,   0.00000, 0.00000, 1.00000);
	CreateDynamicObject(3261, 1662.35779, -2149.11621, 12.53880,   0.00000, 0.00000, 1.00000);
	CreateDynamicObject(3261, 1662.35779, -2142.98804, 12.53880,   0.00000, 0.00000, 1.00000);
	CreateDynamicObject(19473, 1663.35034, -2148.44067, 12.54510,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19473, 1661.42493, -2148.44067, 12.54510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19473, 1661.42493, -2146.44067, 12.54510,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19473, 1663.35034, -2146.44067, 12.54510,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19473, 1663.35034, -2142.44067, 12.54510,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19473, 1663.35034, -2140.44067, 12.54510,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19473, 1661.42493, -2144.44067, 12.54510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19473, 1661.42493, -2142.44067, 12.54510,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19473, 1661.42493, -2140.44067, 12.54510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(346, 1669.49072, -2141.11499, 12.80920,   90.00000, 0.00000, 80.00000);
	CreateDynamicObject(2901, 1662.03503, -2129.24146, 12.86040,   0.00000, 0.00000, -62.00000);
	CreateDynamicObject(2901, 1662.19446, -2130.44507, 12.86040,   0.00000, 0.00000, -33.00000);
	CreateDynamicObject(2901, 1661.27759, -2129.28027, 12.86040,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(19356, 1661.77014, -2129.53198, 14.20190,   0.00000, -40.00000, -132.00000);
	CreateDynamicObject(2840, 1668.87244, -2141.97900, 13.03840,   0.00000, 0.00000, -120.00000);
	CreateDynamicObject(1486, 1669.30725, -2141.64063, 13.18170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1486, 1669.30579, -2141.94653, 13.18170,   0.00000, 0.00000, 55.00000);
	CreateDynamicObject(3027, 1669.50330, -2141.19702, 13.04270,   90.00000, 0.00000, 62.00000);
	CreateDynamicObject(3027, 1669.59888, -2141.16724, 13.04270,   90.00000, 0.00000, 25.00000);
	CreateDynamicObject(1485, 1669.94141, -2140.69849, 13.04270,   0.00000, 0.00000, -55.00000);
	CreateDynamicObject(1362, 1837.01611, -2099.52661, 13.13870,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 1836.75952, -2099.30273, 12.56350,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1362, 1896.38403, -2103.46021, 13.13870,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2676, 1896.50842, -2103.38916, 12.69170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(17037, 1739.71106, -2152.23999, 15.03480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1481, 1739.49133, -2143.69238, 13.25200,   0.00000, 0.00000, -56.00000);
	CreateDynamicObject(2969, 1740.13123, -2145.19922, 12.67340,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(2840, 1739.39514, -2143.66821, 12.92330,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(2370, 1733.59973, -2145.77905, 12.54899,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2370, 1731.93127, -2146.11597, 12.54900,   0.00000, 0.00000, 9.00000);
	CreateDynamicObject(1711, 1731.42615, -2143.89697, 12.54720,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(1719, 1733.97229, -2145.90527, 12.86720,   0.00000, 0.00000, -11.00000);
	CreateDynamicObject(1518, 1734.34058, -2145.77148, 13.65440,   0.00000, 0.00000, -18.00000);
	CreateDynamicObject(1712, 1734.56494, -2148.15967, 12.54720,   0.00000, 0.00000, 193.00000);
	CreateDynamicObject(1708, 1733.08203, -2143.49072, 12.55400,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1810, 1735.46655, -2144.19482, 12.55310,   0.00000, 0.00000, -47.00000);
	CreateDynamicObject(1810, 1735.52942, -2145.27783, 12.55310,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(1810, 1730.94763, -2146.74121, 12.55310,   0.00000, 0.00000, -236.00000);
	CreateDynamicObject(1810, 1730.75513, -2145.09131, 12.55310,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(1369, 1732.14990, -2100.90674, 13.12360,   0.00000, 0.00000, -18.00000);
	CreateDynamicObject(1463, 1723.69312, -2155.54492, 12.87510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1463, 1723.89282, -2153.76904, 12.87510,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(1463, 1725.60022, -2154.65259, 12.87510,   0.00000, 0.00000, 69.00000);
	CreateDynamicObject(2252, 1732.57898, -2145.59058, 13.67450,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(1338, 1741.42993, -2147.96802, 13.23530,   0.00000, 0.00000, 14.00000);
	CreateDynamicObject(1328, 1728.65662, -2143.20703, 13.04580,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(2674, 1729.20398, -2143.54956, 12.56640,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(2867, 1731.75171, -2145.35669, 13.41450,   0.00000, 0.00000, 30.00000);
	CreateDynamicObject(2837, 1732.03955, -2146.34644, 13.41130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2814, 1733.57007, -2145.02026, 13.39250,   0.00000, 0.00000, -101.00000);
	CreateDynamicObject(2814, 1734.25024, -2145.00464, 13.39250,   0.00000, 0.00000, -135.00000);
	CreateDynamicObject(330, 1733.47510, -2146.04199, 13.39430,   90.00000, 0.00000, -120.00000);
	CreateDynamicObject(3403, 1783.89233, -2151.57690, 15.59510,   0.00000, 0.00000, 8.00000);
	CreateDynamicObject(1437, 1759.85327, -2141.21387, 12.54490,   -28.00000, 0.00000, -90.00000);
	CreateDynamicObject(1219, 1758.35645, -2136.47388, 14.71280,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(1712, 1787.60376, -2153.88330, 12.61830,   0.00000, 0.00000, -156.00000);
	CreateDynamicObject(1712, 1786.42468, -2150.80933, 12.61830,   0.00000, 0.00000, -25.00000);
	CreateDynamicObject(1711, 1784.42749, -2151.70581, 12.61830,   0.00000, 0.00000, 47.00000);
	CreateDynamicObject(1710, 1784.81555, -2154.60498, 12.61830,   0.00000, 0.00000, 171.00000);
	CreateDynamicObject(2315, 1785.31519, -2153.13599, 12.59770,   0.00000, 0.00000, 26.00000);
	CreateDynamicObject(2315, 1782.66785, -2152.80371, 12.59770,   0.00000, 0.00000, -10.00000);
	CreateDynamicObject(1415, 1777.64172, -2139.22729, 12.68780,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18661, 1782.51062, -2156.32397, 14.05310,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(365, 1781.86401, -2155.93018, 12.74780,   0.00000, -6.00000, 0.00000);
	CreateDynamicObject(365, 1781.98254, -2156.07202, 12.74780,   0.00000, -6.00000, 55.00000);
	CreateDynamicObject(365, 1783.30762, -2156.04932, 12.56780,   90.00000, -6.00000, 0.00000);
	CreateDynamicObject(928, 1781.35315, -2155.74341, 12.82680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(926, 1781.04675, -2155.10620, 12.82680,   0.00000, 0.00000, 18.00000);
	CreateDynamicObject(917, 1779.60925, -2140.42407, 12.75000,   0.00000, 0.00000, -56.00000);
	CreateDynamicObject(916, 1779.61438, -2140.44189, 12.68480,   0.00000, 0.00000, -47.00000);
	CreateDynamicObject(2676, 1776.58044, -2140.40625, 12.71400,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2968, 1779.45447, -2139.78247, 12.89250,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2968, 1779.07202, -2139.25000, 12.89250,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(2937, 1780.24133, -2139.21216, 13.85610,   70.00000, 0.00000, 0.00000);
	CreateDynamicObject(2937, 1781.24060, -2139.48096, 12.63770,   0.00000, 0.00000, 68.00000);
	CreateDynamicObject(1370, 1780.33398, -2153.77075, 13.08820,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(1299, 1787.38782, -2140.54468, 13.14920,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(3034, 1784.10034, -2138.81689, 14.91680,   0.00000, 0.00000, -1.00000);
	CreateDynamicObject(933, 1779.30383, -2152.40674, 12.54640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1747, 1779.29956, -2152.70459, 13.52830,   0.00000, 0.00000, 105.00000);
	CreateDynamicObject(1230, 1786.56836, -2139.27368, 13.07850,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(1221, 1786.51294, -2141.39355, 13.07850,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(1220, 1786.33813, -2140.22363, 13.07850,   0.00000, 0.00000, 76.00000);
	CreateDynamicObject(1349, 1779.38672, -2150.99609, 12.89630,   84.00000, 340.00000, -16.00000);
	CreateDynamicObject(2062, 1788.97461, -2146.68945, 13.26780,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2062, 1788.50769, -2145.93506, 13.04780,   90.00000, 0.00000, -55.00000);
	CreateDynamicObject(1464, 1787.81421, -2149.28809, 13.73220,   0.00000, 0.00000, -40.00000);
	CreateDynamicObject(1465, 1784.67542, -2146.93921, 13.75220,   0.00000, 0.00000, -11.00000);
	CreateDynamicObject(1271, 1783.86584, -2146.80688, 12.99620,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1271, 1784.76111, -2146.90186, 12.99620,   0.00000, 0.00000, 18.00000);
	CreateDynamicObject(1271, 1785.71130, -2147.21875, 12.99620,   0.00000, 0.00000, -40.00000);
	CreateDynamicObject(1271, 1785.19678, -2147.07544, 13.65620,   0.00000, 0.00000, -26.00000);
	CreateDynamicObject(1271, 1784.40686, -2146.82056, 13.65620,   0.00000, 0.00000, -12.00000);
	CreateDynamicObject(1271, 1788.73352, -2150.00806, 12.99620,   0.00000, 0.00000, -76.00000);
	CreateDynamicObject(1271, 1787.28345, -2148.66113, 12.99620,   0.00000, 0.00000, -40.00000);
	CreateDynamicObject(1271, 1787.98425, -2149.28638, 12.99620,   0.00000, 0.00000, -52.00000);
	CreateDynamicObject(2203, 1781.11719, -2149.75952, 12.75600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19473, 1781.12488, -2149.74316, 12.86431,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(335, 1786.82324, -2152.22144, 12.65480,   90.00000, 0.00000, -142.00000);
	CreateDynamicObject(19165, 1784.79236, -2153.17456, 13.11100,   0.00000, 0.00000, -11.00000);
	CreateDynamicObject(2838, 1782.72009, -2152.81616, 13.09113,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2857, 1786.33997, -2152.67725, 13.09040,   0.00000, 0.00000, 185.00000);
	CreateDynamicObject(2860, 1783.55750, -2152.78809, 13.09120,   0.00000, 0.00000, -33.00000);
	CreateDynamicObject(18868, 1783.40100, -2153.17163, 13.09174,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2894, 1783.59119, -2153.24902, 13.09200,   0.00000, 0.00000, -28.00000);
	CreateDynamicObject(1328, 1796.97046, -2136.60889, 13.06620,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1221, 1804.42017, -2141.51636, 13.07850,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(1220, 1803.15369, -2141.83887, 13.07850,   0.00000, 0.00000, 76.00000);
	CreateDynamicObject(1230, 1804.77136, -2140.47729, 13.07850,   0.00000, 0.00000, 113.00000);
	CreateDynamicObject(17969, 1802.17651, -2142.50781, 14.73170,   -4.00000, 0.00000, 270.00000);
	CreateDynamicObject(1516, 1799.39514, -2141.67969, 12.72720,   0.00000, 0.00000, 6.00000);
	CreateDynamicObject(1721, 1800.16260, -2141.65308, 12.54760,   0.00000, 0.00000, 94.00000);
	CreateDynamicObject(1721, 1799.54663, -2140.43945, 12.54760,   0.00000, 0.00000, 164.00000);
	CreateDynamicObject(1481, 1800.49243, -2136.51514, 13.24820,   0.00000, 0.00000, -12.00000);
	CreateDynamicObject(2880, 1800.43237, -2136.55127, 13.36080,   335.00000, 279.00000, 0.00000);
	CreateDynamicObject(2880, 1800.57471, -2136.72070, 13.36080,   335.00000, 279.00000, -62.00000);
	CreateDynamicObject(2859, 1800.43726, -2136.58960, 12.91841,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2880, 1799.40186, -2141.38013, 13.26080,   335.00000, 279.00000, 0.00000);
	CreateDynamicObject(2880, 1799.22168, -2141.43555, 13.26080,   335.00000, 279.00000, -360.00000);
	CreateDynamicObject(2856, 1799.44006, -2141.47778, 13.25310,   0.00000, 0.00000, -127.00000);
	CreateDynamicObject(2672, 1797.35852, -2137.69043, 12.82870,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 1795.85474, -2137.96655, 12.56870,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(947, 1753.89075, -2085.07373, 14.73990,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1946, 1754.54456, -2085.57739, 12.74930,   200.00000, 0.00000, -84.00000);
	CreateDynamicObject(17969, 1762.98743, -2089.61475, 14.49730,   -4.00000, 0.00000, 270.00000);
	CreateDynamicObject(1810, 1765.00354, -2080.27466, 12.54870,   0.00000, 0.00000, -69.00000);
	CreateDynamicObject(1810, 1764.56201, -2079.44775, 12.54870,   0.00000, 0.00000, -55.00000);
	CreateDynamicObject(1810, 1765.68323, -2081.79980, 12.54870,   0.00000, 0.00000, -63.00000);
	CreateDynamicObject(1486, 1765.38184, -2080.44116, 12.70690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1486, 1765.23071, -2080.42090, 12.70690,   0.00000, 0.00000, -171.00000);
	CreateDynamicObject(1486, 1765.16492, -2079.58740, 12.70690,   0.00000, 0.00000, -69.00000);
	CreateDynamicObject(18933, 1765.74500, -2081.52271, 13.08860,   0.00000, 270.00000, 0.00000);
	CreateDynamicObject(3497, 1787.98608, -2089.81592, 15.63540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18661, 1787.30676, -2090.12549, 15.13240,   6.00000, 0.00000, 270.00000);
	CreateDynamicObject(1220, 1780.62012, -2087.96777, 12.88600,   0.00000, 0.00000, 142.00000);
	CreateDynamicObject(1221, 1781.71423, -2087.94360, 12.88600,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1230, 1782.50317, -2086.92065, 13.00000,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(1299, 1780.44312, -2086.80713, 13.00070,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 1717.83398, -2086.35156, 12.54590,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1412, 1717.00745, -2080.29077, 12.54590,   0.00000, 0.00000, 72.00000);
	CreateDynamicObject(3496, 1703.47864, -2082.61841, 12.53990,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1946, 1705.55017, -2081.46460, 12.70580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1712, 1715.40295, -2088.04517, 12.54240,   0.00000, 0.00000, -171.00000);
	CreateDynamicObject(1712, 1716.99023, -2085.41064, 12.54240,   0.00000, 0.00000, -105.00000);
	CreateDynamicObject(2315, 1714.48279, -2086.91943, 12.54280,   0.00000, 0.00000, 48.00000);
	CreateDynamicObject(17969, 1703.09521, -2084.78149, 14.29440,   -2.00000, 0.00000, 180.00000);
	CreateDynamicObject(365, 1703.32117, -2084.04492, 12.72780,   0.00000, -4.00000, 0.00000);
	CreateDynamicObject(365, 1703.51538, -2084.13208, 12.72780,   0.00000, -4.00000, 135.00000);
	CreateDynamicObject(1271, 1716.84937, -2078.23730, 12.88510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1271, 1716.61340, -2079.16699, 12.88510,   0.00000, 0.00000, -24.00000);
	CreateDynamicObject(1271, 1716.74133, -2078.53467, 13.56510,   0.00000, 0.00000, -16.00000);
	CreateDynamicObject(1328, 1703.91431, -2088.58447, 13.04740,   0.00000, 0.00000, 156.00000);
	CreateDynamicObject(2670, 1704.39673, -2088.02393, 12.62650,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 1703.57556, -2089.54883, 12.62650,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2857, 1714.43872, -2086.61963, 13.05720,   0.00000, 0.00000, 114.00000);
	CreateDynamicObject(2850, 1715.55127, -2086.01563, 13.03740,   0.00000, 0.00000, 72.00000);
	CreateDynamicObject(1463, 1766.64001, -2088.99536, 12.88330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1463, 1764.57935, -2088.51440, 12.88330,   0.00000, 0.00000, 34.00000);
	CreateDynamicObject(1463, 1766.08911, -2087.14648, 12.88330,   0.00000, 0.00000, 74.00000);
	CreateDynamicObject(3034, 1708.21338, -208.94000, 14.42510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3034, 1710.72046, -2088.94751, 14.76290,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1219, 1711.85718, -2088.98608, 14.83490,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject(1219, 1709.26526, -2088.98608, 14.83490,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject(1299, 1790.75452, -2079.81152, 13.00510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1711, 1757.13623, -2149.68896, 12.54510,   0.00000, 0.00000, -38.00000);
	CreateDynamicObject(1712, 1757.55908, -2151.92310, 12.54510,   0.00000, 0.00000, -120.00000);
	CreateDynamicObject(1710, 1752.81775, -2151.69067, 12.54510,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(2315, 1755.04211, -2151.83374, 12.54390,   0.00000, 0.00000, 32.00000);
	CreateDynamicObject(3261, 1762.45520, -2153.13354, 12.54490,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(3261, 1765.47852, -2153.13354, 12.54490,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(19473, 1759.83765, -2154.12646, 12.54670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19473, 1761.83765, -2154.12646, 12.54670,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19473, 1763.83765, -2154.12646, 12.54670,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19473, 1765.83765, -2154.12646, 12.54670,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3261, 1768.52527, -2153.13354, 12.54490,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(19473, 1767.83765, -2154.12646, 12.54670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19473, 1759.83765, -2152.17114, 12.54670,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19473, 1761.83765, -2152.17114, 12.54670,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19473, 1763.83765, -2152.17114, 12.54670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19473, 1765.83765, -2152.17114, 12.54670,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19473, 1767.83765, -2152.17114, 12.54670,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1221, 1753.70813, -2154.74756, 13.07850,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1221, 1755.22156, -2155.26001, 13.07850,   0.00000, 0.00000, 67.00000);
	CreateDynamicObject(1220, 1754.79114, -2154.05273, 13.07850,   0.00000, 0.00000, 79.00000);
	CreateDynamicObject(2901, 1756.17285, -2154.87866, 12.75060,   0.00000, 0.00000, -40.00000);
	CreateDynamicObject(336, 1756.69031, -2153.60254, 13.19050,   160.00000, 0.00000, -22.00000);
	CreateDynamicObject(2814, 1756.46326, -2150.83911, 13.03780,   0.00000, 0.00000, -120.00000);
	CreateDynamicObject(2838, 1755.03015, -2151.55200, 13.09110,   0.00000, 0.00000, -113.00000);
	CreateDynamicObject(2857, 1752.56238, -2152.72485, 12.55040,   0.00000, 0.00000, 69.00000);
	CreateDynamicObject(19364, 1734.79004, -2079.44165, 14.26590,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19364, 1733.28345, -2084.27173, 14.26590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19364, 1733.27332, -2081.06494, 14.26590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1735.11377, -2084.17456, 12.54760,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19355, 1737.84314, -2084.17456, 12.54670,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19364, 1737.98315, -2079.44165, 14.28590,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1737.84314, -2080.97437, 12.54670,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19355, 1735.11377, -2080.97437, 12.54760,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19355, 1741.32764, -2084.17456, 12.41550,   0.00000, 94.10000, 0.00000);
	CreateDynamicObject(19355, 1741.32764, -2080.97437, 12.41550,   0.00000, 94.10000, 0.00000);
	CreateDynamicObject(17969, 1740.55078, -2093.13159, 14.02580,   -6.00000, 0.00000, 180.00000);
	CreateDynamicObject(19364, 1735.11377, -2080.97437, 16.03090,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19364, 1737.84314, -2080.97437, 16.03000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19364, 1735.11377, -2084.17456, 16.03090,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19364, 1737.84314, -2084.17456, 16.03000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(17951, 1739.31091, -2082.61963, 15.90380,   -0.40000, 90.00000, 180.00000);
	CreateDynamicObject(18661, 1733.42517, -2081.09180, 14.21720,   -6.00000, 0.00000, 180.00000);
	CreateDynamicObject(355, 1736.49646, -2079.69385, 12.93370,   -14.00000, 270.00000, 0.00000);
	CreateDynamicObject(2358, 1733.93701, -2079.84546, 12.77210,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(2359, 1734.17432, -2080.37573, 12.85210,   0.00000, 0.00000, -171.00000);
	CreateDynamicObject(1492, 1736.75562, -2085.76416, 12.63340,   0.00000, 0.00000, 179.00000);
	CreateDynamicObject(1463, 1734.19739, -2081.79980, 12.95170,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1220, 1734.10437, -2085.16138, 12.97300,   0.00000, 0.00000, 16.00000);
	CreateDynamicObject(1221, 1734.17859, -2084.14282, 13.09300,   0.00000, 0.00000, -8.00000);
	CreateDynamicObject(19273, 1738.87158, -2085.75757, 14.29880,   0.00000, 0.00000, 180.00000);*/
	
	// apartment complex # 1 - season
	
	CreateDynamicObject(8661,208.9629100,1714.9223600,600.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8661,208.9629100,1734.8977100,600.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,223.6416000,1706.6268300,601.7500000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19456,214.0352900,1706.6268300,601.7500000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(14877,210.5834000,1708.2026400,599.8757900,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(14877,207.1145000,1711.8039600,601.8493000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19364,210.8197900,1709.7764900,601.7500000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19437,209.4035900,1709.7764900,601.7500000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19456,204.4282100,1706.6268300,601.7500000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19456,205.5296000,1711.5214800,601.7500000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,208.6763000,1714.5103800,601.7500000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,205.5296000,1711.5214800,605.2456100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,208.6763000,1714.5103800,605.2456100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19364,228.3791000,1708.2349900,601.7500000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,223.5986000,1709.8962400,601.7500000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19456,216.4465000,1714.0280800,601.7500000,0.0000000,0.0000000,30.0000000); //
	CreateDynamicObject(19456,208.6763000,1724.1243900,601.7500000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8661,198.6080900,1732.5762900,603.9296900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19456,214.0546000,1722.9809600,601.7500000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,212.5466000,1727.7150900,601.7500000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19456,208.6763000,1724.1243900,605.2456100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,203.7919900,1723.7102100,605.2456100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19456,200.8055000,1716.4123500,605.2456100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19456,203.0000000,7920.0000000,1723.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,203.0000000,7920.0000000,1723.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,201.0000000,9149.0000000,1725.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,199.3611000,1723.3212900,605.2456100,0.0000000,0.0000000,310.0000000); //
	CreateDynamicObject(19456,191.1932100,1716.4123500,605.2456100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19456,192.0866700,1721.1521000,605.2456100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,195.7091100,1725.1080300,605.2456100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,192.0867000,1730.7884500,605.2456100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,194.4623600,1729.9571500,605.2456100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1496,228.2941000,1707.4502000,599.9885900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2924,217.3094900,1712.4489700,601.1998300,0.0000000,0.0000000,120.0000000); //
	CreateDynamicObject(2924,214.8708000,1716.6651600,601.1998300,0.0000000,0.0000000,120.0000000); //
	CreateDynamicObject(2924,208.7336000,1714.8085900,601.1998300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2924,208.7295100,1719.4808300,601.1998300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2924,208.7379000,1724.0741000,601.1998300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2924,211.9400900,1727.6481900,601.1998300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2924,214.0124100,1724.2087400,601.1998300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2924,214.0155900,1719.9846200,601.1998300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19456,214.0352900,1706.6268300,605.2456100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19456,204.4282100,1706.6268300,605.2456100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19364,210.8197900,1709.7764900,605.2456100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19437,209.4035900,1709.7764900,605.2456100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2924,203.6608000,1716.4443400,605.1237800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2924,198.8158000,1716.4438500,605.1237800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2924,194.3634900,1716.4433600,605.1237800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2924,195.6761000,1722.6634500,605.1237800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2924,195.6651000,1727.2041000,605.1237800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2924,195.6761000,1722.6634500,605.1237800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2924,192.1551100,1727.2220500,605.1237800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2924,192.1461000,1722.6422100,605.1237800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2924,194.6213100,1729.8957500,605.1237800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1709,202.5341900,1722.0367400,603.9276100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1711,201.0101900,1721.1745600,603.9293200,0.0000000,0.0000000,80.0000000); //
	CreateDynamicObject(2370,203.4898100,1720.5401600,603.7670300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2370,205.1103100,1720.5401600,603.7670300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1369,209.7532000,1710.6503900,600.6012000,0.0000000,0.0000000,130.0000000); //
	CreateDynamicObject(17969,223.1348000,1709.7784400,601.9265700,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1450,206.3791000,1707.4434800,602.6735200,0.0000000,0.0000000,120.0000000); //
	CreateDynamicObject(1349,207.8208000,1707.1452600,602.5311900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1441,218.4400000,1707.1895800,600.6295800,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(3119,212.4673000,1712.5926500,600.2899800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3119,210.0008200,1725.1866500,600.2899800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(910,197.6974000,1721.1640600,605.1970800,0.0000000,0.0000000,40.0000000); //
	CreateDynamicObject(3119,204.9209000,1720.6254900,604.9155300,0.0000000,0.0000000,10.0000000); //
	CreateDynamicObject(924,208.1715400,1719.3372800,604.1120000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(924,208.1714900,1719.3372800,604.3566900,20.0000000,10.0000000,90.0000000); //
	CreateDynamicObject(2672,201.2117300,1718.5391800,604.2155200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2672,194.3005400,1724.2917500,604.2155200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2674,194.6926300,1718.7989500,603.9494000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2674,207.2563500,1716.7797900,603.9494000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2676,214.9286200,1709.8100600,600.1185300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2676,211.7703200,1717.4720500,600.1185300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8661,201.3877000,1725.6643100,607.0101900,0.0000000,180.0000000,90.0000000); //
	CreateDynamicObject(8661,218.7455000,1729.8562000,603.4520900,0.0000000,180.0000000,90.0000000); //
	CreateDynamicObject(8661,222.4218000,1689.8697500,603.4520900,0.0000000,180.0000000,90.0000000); //
	CreateDynamicObject(19456,212.5255000,1705.9016100,605.2009900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,212.5255000,1705.9016100,608.6555800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8661,221.3704100,1718.3695100,607.0101900,0.0000000,180.0000000,90.0000000); //
	CreateDynamicObject(4227,205.5379900,1715.1523400,605.3726200,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3785,222.1906000,1706.8033400,602.6944000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3785,215.9196000,1706.8033400,602.6944000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3785,216.3173100,1713.9063700,602.6944000,0.0000000,0.0000000,210.0000000); //
	CreateDynamicObject(3785,208.8461000,1716.4321300,602.6944000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3785,208.8461000,1721.2368200,602.6944000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3785,213.8677100,1721.3992900,602.6944000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(3785,207.7081000,1706.8109100,605.1193200,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3785,208.4848000,1718.0014600,606.3252000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(3785,202.7914000,1723.5273400,606.3252000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(3785,200.6015000,1716.5831300,606.3252000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3785,196.0078000,1716.5950900,606.3252000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3785,192.2675000,1724.2067900,606.3252000,0.0000000,0.0000000,1.0000000); //
	CreateDynamicObject(3785,195.5346100,1728.8048100,606.3252000,0.0000000,0.0000000,180.0000000); //
	
	// ghetto house # 1 - xander
	
	CreateDynamicObject(19460, 1045.66003, 1048.53003, 1202.25000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19396, 1045.66003, 1054.94995, 1202.25000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19460, 1050.56006, 1043.63000, 1202.25000, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19460, 1050.56006, 1056.64001, 1202.25000, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19460, 1055.45996, 1054.94995, 1202.25000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19396, 1055.45996, 1048.53003, 1202.25000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19368, 1055.45996, 1045.32007, 1202.25000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19378, 1050.56006, 1048.53003, 1200.41016, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19378, 1050.56006, 1058.16003, 1200.41016, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19368, 1055.64001, 1048.53003, 1202.25000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19368, 1045.47998, 1054.94995, 1202.25000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3034, 1050.56006, 1056.54004, 1202.25000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3034, 1045.75000, 1048.53003, 1202.25000, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1050.56006, 1048.53003, 1204.08997, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 1050.56006, 1058.16003, 1204.08997, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1498, 1045.69995, 1054.20996, 1200.48999, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1498, 1055.44995, 1047.79004, 1200.48999, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(944, 1053.84998, 1044.57996, 1201.39001, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3052, 1051.81006, 1044.31995, 1200.62000, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(3015, 1051.76001, 1044.31006, 1200.84998, 0.00000, 0.00000, 40.00000);
	CreateDynamicObject(925, 1046.93994, 1044.58997, 1201.56995, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1362, 1046.17004, 1045.93005, 1201.08997, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2654, 1054.70996, 1045.92004, 1200.70996, 0.00000, 0.00000, -230.00000);
	CreateDynamicObject(850, 1050.20996, 1046.03003, 1200.58997, 0.00000, 0.00000, 70.00000);
	CreateDynamicObject(3119, 1046.93994, 1044.46008, 1202.94995, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18101, 1051.43005, 1049.77002, 1200.51001, 0.00000, 0.00000, 10.00000);
	CreateDynamicObject(18100, 1051.43005, 1049.77002, 1200.51001, 0.00000, 0.00000, 60.00000);
	CreateDynamicObject(2670, 1051.65002, 1054.21997, 1200.58997, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2672, 1053.03003, 1050.58997, 1200.77002, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 1052.07996, 1047.96997, 1200.51001, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2675, 1048.80005, 1048.80005, 1200.56995, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 1048.43005, 1052.29004, 1200.53003, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2676, 1050.33997, 1050.69995, 1200.60999, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2677, 1047.41003, 1054.43994, 1200.79004, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1429, 1048.97998, 1044.25000, 1200.75000, 0.00000, 0.00000, -200.00000);
	CreateDynamicObject(1794, 1053.95996, 1053.05005, 1200.51501, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2091, 1045.94995, 1051.04004, 1200.48999, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2370, 1050.09998, 1055.32996, 1200.26001, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1670, 1050.41003, 1055.75000, 1201.12000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1810, 1051.96997, 1055.80005, 1200.50000, 0.00000, 0.00000, -20.00000);
	CreateDynamicObject(1810, 1049.37000, 1055.80005, 1200.50000, 0.00000, 0.00000, 30.00000);
 	CreateDynamicObject(2768, 1050.62000, 1055.32996, 1201.16003, 0.00000, 0.00000, 40.00000);
	CreateDynamicObject(2713, 1046.22998, 1056.25000, 1200.65002, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1711, 1048.84998, 1053.87000, 1200.48999, 0.00000, 0.00000, -40.00000);
	CreateDynamicObject(1712, 1049.51001, 1051.53003, 1200.48999, 0.00000, 0.00000, -100.00000);
	
	// house 2 xander
	
	CreateDynamicObject(19379,1050.5600600,1051.7399900,1204.2701400,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19450,1055.4599600,1054.9499500,1206.1099900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19450,1044.9799800,1055.1999500,1206.1099900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19358,1055.6400100,1048.5300300,1206.1099900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19388,1055.4599600,1048.5300300,1206.1099900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19388,1050.3599900,1048.3700000,1206.1099900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19388,1050.5600600,1056.6400100,1206.1099900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19377,1050.5600600,1051.7399900,1207.9400600,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(1569,1055.4499500,1047.8000500,1204.3499800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3034,1055.3700000,1051.7399900,1206.1099900,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2818,1055.0400400,1048.0500500,1204.3499800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19379,1050.5600600,1061.3700000,1204.2701400,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19388,1053.7701400,1056.6400100,1206.1099900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19358,1047.3501000,1056.6400100,1206.1099900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19358,1053.7701400,1056.8199500,1206.1099900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19358,1052.1700400,1058.1600300,1206.1099900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1567,1050.3800000,1047.6201200,1204.3499800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19377,1050.5600600,1061.3700000,1207.9400600,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19450,1048.8700000,1061.5400400,1206.1099900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,1053.6900600,1059.6800500,1206.1099900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19450,1055.3800000,1064.5799600,1206.1099900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19450,1050.5600600,1064.6900600,1206.1099900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1491,1049.7701400,1056.6099900,1204.3499800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1799,1054.8000500,1063.2500000,1204.4100300,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2330,1053.8100600,1063.0899700,1204.3499800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2323,1050.5799600,1059.2500000,1204.3499800,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3034,1048.9599600,1061.5400400,1206.1099900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3964,740.8541900,1394.1130400,1206.1857900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2571,1049.6300000,1063.2600100,1204.3499800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1665,1050.8599900,1063.8700000,1204.8499800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2099,1048.9699700,1057.2500000,1204.3499800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2257,1055.2500000,1062.1499000,1206.1099900,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2268,1052.1500200,1056.0500500,1206.1099900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2255,1053.6899400,1060.2700200,1206.1099900,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2239,1052.6099900,1060.2600100,1204.3299600,0.0000000,0.0000000,-135.0000000); //
	CreateDynamicObject(2296,1046.0400400,1050.6600300,1204.3499800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1703,1050.1800500,1050.4799800,1204.3499800,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2315,1048.4499500,1051.9399400,1204.3499800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19450,1045.6600300,1051.7399900,1206.1099900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19450,1050.5600600,1046.8399700,1206.1099900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19358,1050.1800500,1048.3700000,1206.1099900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1567,1052.9799800,1056.6099900,1204.3499800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2853,1048.7500000,1051.9000200,1204.8499800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2852,1048.7500000,1051.9399400,1204.4100300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1703,1047.5300300,1054.5999800,1204.3499800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19431,1049.7099600,1055.9200400,1206.1099900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19450,1045.6300000,1049.8900100,1206.1099900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(640,1055.0100100,1053.0300300,1205.0500500,0.0000000,0.0000000,0.0000000); //
	
	// apartment complex
	
	CreateDynamicObject(19377,1140.0000000,-1035.0000000,1003.6799900,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,1140.0000000,-1044.6300000,1003.6799900,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,1150.5000000,-1035.0000000,1003.6799900,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19456,1146.1999500,-1030.3700000,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,1155.8299600,-1035.0000000,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19393,1150.9300500,-1035.0999800,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19393,1150.9300500,-1044.5300300,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19456,1155.8299600,-1044.6300000,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,1146.1999500,-1049.2600100,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19364,1150.9300500,-1035.0400400,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19364,1150.9300500,-1044.5899700,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19364,1147.7199700,-1035.0999800,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19364,1154.1400100,-1044.5300300,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19393,1142.8199500,-1044.6300000,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19393,1139.6099900,-1039.8149400,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19437,1139.6099900,-1042.2199700,1001.8400300,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(19364,1154.1400100,-1035.0999800,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19456,1142.8199500,-1028.5799600,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19364,1147.7199700,-1044.5300300,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19364,1144.5100100,-1030.0999800,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19364,1141.3000500,-1043.1099900,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19437,1139.6099900,-1037.4100300,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19393,1142.8199500,-1035.0000000,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19364,1139.5500500,-1039.8149400,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19364,1142.7598900,-1044.6300000,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19364,1142.7598900,-1035.0000000,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19437,1146.1999500,-1039.8149400,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19437,1149.2399900,-1039.8149400,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,1142.8199500,-1051.0500500,1001.8400300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19364,1141.3000500,-1036.5200200,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19377,1150.5000000,-1044.6300000,1003.6799900,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(1498,1142.8399700,-1035.7399900,1000.0800200,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1498,1150.1500200,-1044.5400400,1000.0800200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1498,1150.1500200,-1035.1300000,1000.0800200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1498,1139.6400100,-1040.5600600,1000.0800200,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1498,1142.8399700,-1045.3700000,1000.0800200,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19393,1144.5100100,-1030.1600300,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19364,1144.5100100,-1049.5300300,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1498,1143.7299800,-1049.4699700,1000.0800200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19393,1144.5100100,-1049.4699700,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1498,1143.7299800,-1030.1899400,1000.0800200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19364,1147.7199700,-1039.0948500,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19364,1147.7199700,-1040.5349100,1001.8400300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(18981,1149.3199500,-1039.4300500,999.5800200,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(2911,1155.7700200,-1038.8100600,1000.0999800,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(18101,1147.0200200,-1042.3700000,1000.0999800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(18100,1148.2800300,-1037.3000500,1000.0999800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18099,1147.2832000,-1036.6200000,1000.1500200,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2911,1155.7800300,-1040.8300800,1000.0999800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1441,1147.6601600,-1038.6201200,1000.7299800,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2926,1140.4799800,-1042.3000500,1000.0700100,0.0000000,0.0000000,-45.0000000); //
	CreateDynamicObject(1372,1140.8100600,-1037.1899400,1000.2100200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1370,1142.2500000,-1037.1300000,1000.5999800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2674,1150.5500500,-1041.8499800,1000.0900300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2673,1141.0799600,-1037.9799800,1000.1699800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2670,1141.8900100,-1037.9000200,1000.1699800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2675,1144.5999800,-1047.0899700,1000.1500200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2672,1145.0899700,-1034.0000000,1000.3700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2676,1151.6099900,-1038.3000500,1000.1900000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1712,1147.0200200,-1041.1300000,1000.0700100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1348,1149.7900400,-1039.8149400,1000.7899800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3577,1154.0000000,-1042.7600100,1000.8100000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1750,1153.6600300,-1042.3599900,1001.5499900,0.0000000,0.0000000,-130.0000000); //
	CreateDynamicObject(1517,1154.0699500,-1041.9399400,1001.6200000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(1777,1147.2399900,-1044.0000000,1000.8700000,0.0000000,0.0000000,180.0000000); //

	
}

stock Objects_PayNSpray() {
    CreateObject(13027, -720.70367, 2322.26880, 5000.67383, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16773, -720.72552, 2329.99878, 4999.54248, 0.00000, 0.00000, 0.00000);
}

stock Objects_PrisonInterior()
{
	//=== [showers]
	PrisonShower[0] = CreateDynamicObject(18981, 1979.373779, 1342.178833, 1319.587890, 0.000000, 0.000000, 90.000000);
    SetDynamicObjectMaterial(PrisonShower[0], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[1] = CreateDynamicObject(18981, 1974.505126, 1342.918334, 1327.469116, 0.000000, 90.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[1], 0, 10871, "blacksky_sfse", "ws_blackmarble", 0);
    PrisonShower[2] = CreateDynamicObject(18981, 1986.490722, 1342.918334, 1319.587890, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[2], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[3] = CreateDynamicObject(18981, 1961.542236, 1342.918334, 1319.587890, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[3], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[4] = CreateDynamicObject(18981, 1974.413452, 1330.158569, 1319.587890, 0.000000, 0.000000, 90.000000);
    SetDynamicObjectMaterial(PrisonShower[4], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[5] = CreateDynamicObject(18981, 1974.413452, 1355.499389, 1319.587890, 0.000000, 0.000000, 90.000000);
    SetDynamicObjectMaterial(PrisonShower[5], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[6] = CreateDynamicObject(19454, 1966.921752, 1354.152465, 1319.327514, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[6], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[7] = CreateDynamicObject(19454, 1966.921752, 1350.232666, 1325.317749, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[7], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[8] = CreateDynamicObject(19454, 1966.921752, 1342.242431, 1319.327514, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[8], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[9] = CreateDynamicObject(18981, 1974.505126, 1342.918334, 1319.587890, 0.000000, 90.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[9], 0, 12853, "cunte_gas01", "sw_floor1", -1052688);
    PrisonShower[10] = CreateDynamicObject(19348, 1980.086181, 1341.452758, 1322.411743, -18.200006, 0.000000, 0.000000);
    PrisonShower[11] = CreateDynamicObject(19348, 1981.586181, 1341.452758, 1322.411743, -18.200006, 0.000000, 0.000000);
    PrisonShower[12] = CreateDynamicObject(19348, 1983.086181, 1341.452758, 1322.411743, -18.200006, 0.000000, 0.000000);
    PrisonShower[13] = CreateDynamicObject(19325, 1966.887084, 1351.938476, 1322.997436, 0.000000, 0.000000, 0.000000);
    PrisonShower[14] = CreateDynamicObject(19325, 1966.887084, 1332.388549, 1322.997436, 0.000000, 0.000000, 0.000000);
    PrisonShower[15] = CreateDynamicObject(19325, 1966.887084, 1340.787109, 1322.997436, 0.000000, 0.000000, 0.000000);
    PrisonShower[16] = CreateDynamicObject(19325, 1966.887084, 1343.718261, 1322.997436, 0.000000, 0.000000, 0.000000);
    PrisonShower[17] = CreateDynamicObject(18980, 1966.902954, 1335.210205, 1321.087890, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[17], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[18] = CreateDynamicObject(18980, 1966.902954, 1349.092041, 1321.087890, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[18], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[19] = CreateDynamicObject(18980, 1966.902954, 1346.561523, 1321.087890, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[19], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[20] = CreateDynamicObject(18980, 1966.902954, 1337.910644, 1321.087890, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[20], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[21] = CreateDynamicObject(19454, 1966.921752, 1330.892333, 1319.327514, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[21], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[22] = CreateDynamicObject(19454, 1966.921752, 1330.982421, 1325.317749, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[22], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[23] = CreateDynamicObject(19454, 1966.921752, 1340.602416, 1325.317749, 0.000000, 0.000000, 0.000000);
    SetDynamicObjectMaterial(PrisonShower[23], 0, 10926, "shops_sfse", "bathtile01_int", -1052688);
    PrisonShower[24] = CreateDynamicObject(19348, 1978.586181, 1341.452758, 1322.411743, -18.200006, 0.000000, 0.000000);
    PrisonShower[25] = CreateDynamicObject(19348, 1977.086181, 1341.452758, 1322.411743, -18.200006, 0.000000, 0.000000);
    PrisonShower[26] = CreateDynamicObject(19348, 1975.586181, 1341.452758, 1322.411743, -18.200006, 0.000000, 0.000000);
    PrisonShower[27] = CreateDynamicObject(19348, 1974.086181, 1341.452758, 1322.411743, -18.200006, 0.000000, 0.000000);
    PrisonShower[28] = CreateDynamicObject(19348, 1972.586181, 1341.452758, 1322.411743, -18.200006, 0.000000, 0.000000);
    PrisonShower[29] = CreateDynamicObject(19348, 1971.086181, 1341.452758, 1322.411743, -18.200006, 0.000000, 0.000000);
    PrisonShower[30] = CreateDynamicObject(19348, 1969.586181, 1341.452758, 1322.411743, -18.200006, 0.000000, 0.000000);
    PrisonShower[31] = CreateDynamicObject(19348, 1984.586181, 1341.452758, 1322.411743, -18.200006, 0.000000, 0.000000);
    PrisonShower[32] = CreateDynamicObject(19348, 1969.603759, 1342.789428, 1322.568725, 12.500001, -0.299999, 0.000000);
    PrisonShower[33] = CreateDynamicObject(19348, 1971.103759, 1342.789428, 1322.568725, 12.500001, -0.299999, 0.000000);
    PrisonShower[34] = CreateDynamicObject(19348, 1972.603759, 1342.789428, 1322.568725, 12.500001, -0.299999, 0.000000);
    PrisonShower[35] = CreateDynamicObject(19348, 1974.103759, 1342.789428, 1322.568725, 12.500001, -0.299999, 0.000000);
    PrisonShower[36] = CreateDynamicObject(19348, 1977.103759, 1342.789428, 1322.568725, 12.500001, -0.299999, 0.000000);
    PrisonShower[37] = CreateDynamicObject(19348, 1975.603759, 1342.789428, 1322.568725, 12.500001, -0.299999, 0.000000);
    PrisonShower[38] = CreateDynamicObject(19348, 1978.603759, 1342.789428, 1322.568725, 12.500001, -0.299999, 0.000000);
    PrisonShower[39] = CreateDynamicObject(19348, 1980.103759, 1342.789428, 1322.568725, 12.500001, -0.299999, 0.000000);
    PrisonShower[40] = CreateDynamicObject(19348, 1981.603759, 1342.789428, 1322.568725, 12.500001, -0.299999, 0.000000);
    PrisonShower[41] = CreateDynamicObject(19348, 1983.103759, 1342.789428, 1322.568725, 12.500001, -0.299999, 0.000000);
    PrisonShower[42] = CreateDynamicObject(19348, 1984.603759, 1342.789428, 1322.568725, 12.500001, -0.299999, 0.000000);
    PrisonShower[43] = CreateDynamicObject(19348, 1984.668090, 1354.746459, 1322.339843, -20.900007, 0.000000, 0.000000);
    PrisonShower[44] = CreateDynamicObject(19348, 1983.168090, 1354.746459, 1322.339843, -20.900007, 0.000000, 0.000000);
    PrisonShower[45] = CreateDynamicObject(19348, 1980.168090, 1354.746459, 1322.339843, -20.900007, 0.000000, 0.000000);
    PrisonShower[46] = CreateDynamicObject(19348, 1977.168090, 1354.746459, 1322.339843, -20.900007, 0.000000, 0.000000);
    PrisonShower[47] = CreateDynamicObject(19348, 1974.168090, 1354.746459, 1322.339843, -20.900007, 0.000000, 0.000000);
    PrisonShower[48] = CreateDynamicObject(19348, 1971.168090, 1354.746459, 1322.339843, -20.900007, 0.000000, 0.000000);
    PrisonShower[49] = CreateDynamicObject(19348, 1981.668090, 1354.746459, 1322.339843, -20.900007, 0.000000, 0.000000);
    PrisonShower[50] = CreateDynamicObject(19348, 1978.668090, 1354.746459, 1322.339843, -20.900007, 0.000000, 0.000000);
    PrisonShower[51] = CreateDynamicObject(19348, 1975.668090, 1354.746459, 1322.339843, -20.900007, 0.000000, 0.000000);
    PrisonShower[52] = CreateDynamicObject(19348, 1972.668090, 1354.746459, 1322.339843, -20.900007, 0.000000, 0.000000);
    PrisonShower[53] = CreateDynamicObject(19348, 1969.668090, 1354.746459, 1322.339843, -20.900007, 0.000000, 0.000000);
    PrisonShower[54] = CreateDynamicObject(19348, 1984.686157, 1330.896484, 1322.519042, 25.000005, 0.000000, 0.000000);
    PrisonShower[55] = CreateDynamicObject(19348, 1983.186157, 1330.896484, 1322.519042, 25.000005, 0.000000, 0.000000);
    PrisonShower[56] = CreateDynamicObject(19348, 1980.186157, 1330.896484, 1322.519042, 25.000005, 0.000000, 0.000000);
    PrisonShower[57] = CreateDynamicObject(19348, 1977.186157, 1330.896484, 1322.519042, 25.000005, 0.000000, 0.000000);
    PrisonShower[58] = CreateDynamicObject(19348, 1974.186157, 1330.896484, 1322.519042, 25.000005, 0.000000, 0.000000);
    PrisonShower[59] = CreateDynamicObject(19348, 1971.186157, 1330.896484, 1322.519042, 25.000005, 0.000000, 0.000000);
    PrisonShower[60] = CreateDynamicObject(19348, 1969.686157, 1330.896484, 1322.519042, 25.000005, 0.000000, 0.000000);
    PrisonShower[61] = CreateDynamicObject(19348, 1972.686157, 1330.896484, 1322.519042, 25.000005, 0.000000, 0.000000);
    PrisonShower[62] = CreateDynamicObject(19348, 1975.686157, 1330.896484, 1322.519042, 25.000005, 0.000000, 0.000000);
    PrisonShower[63] = CreateDynamicObject(19348, 1978.686157, 1330.896484, 1322.519042, 25.000005, 0.000000, 0.000000);
    PrisonShower[64] = CreateDynamicObject(19348, 1981.686157, 1330.896484, 1322.519042, 25.000005, 0.000000, 0.000000);
    PrisonShower[65] = CreateDynamicObject(14401, 1979.712036, 1348.130371, 1320.367187, 0.000000, 0.000000, 270.000000);
    SetDynamicObjectMaterial(PrisonShower[65], 0, 16150, "ufo_bar", "GEwhite1_64", 0);
    PrisonShower[66] = CreateDynamicObject(14401, 1973.501586, 1336.259765, 1320.367187, 0.000000, 0.000000, 90.000000);
    SetDynamicObjectMaterial(PrisonShower[66], 0, 16150, "ufo_bar", "GEwhite1_64", 0);
    PrisonShower[67] = CreateDynamicObject(14401, 1979.712036, 1334.927734, 1320.367187, 0.000000, 0.000000, 270.000000);
    SetDynamicObjectMaterial(PrisonShower[67], 0, 16150, "ufo_bar", "GEwhite1_64", 0);
    PrisonShower[68] = CreateDynamicObject(14401, 1973.501586, 1349.440307, 1320.367187, 0.000000, 0.000000, 90.000000);
    SetDynamicObjectMaterial(PrisonShower[68], 0, 16150, "ufo_bar", "GEwhite1_64", 0);
    PrisonShower[69] = CreateDynamicObject(2524, 1985.505493, 1334.141357, 1320.067016, 0.000000, 0.000000, 270.000000);
    PrisonShower[70] = CreateDynamicObject(2524, 1985.505493, 1338.131347, 1320.067016, 0.000000, 0.000000, 270.000000);
    PrisonShower[71] = CreateDynamicObject(2524, 1985.479980, 1350.691406, 1320.077270, 0.000000, 0.000000, 270.000000);
    PrisonShower[72] = CreateDynamicObject(2524, 1985.479980, 1347.670776, 1320.077270, 0.000000, 0.000000, 270.000000);
    PrisonShower[73] = CreateDynamicObject(2371, 1972.845825, 1348.744506, 1320.657470, 0.000000, 0.000000, 90.000000);
    PrisonShower[74] = CreateDynamicObject(2371, 1972.786865, 1335.563476, 1320.657470, 0.000000, 0.000000, 90.000000);
    PrisonShower[75] = CreateDynamicObject(2371, 1975.377319, 1335.563476, 1320.657470, 0.000000, 0.000000, 90.000000);
    PrisonShower[76] = CreateDynamicObject(2371, 1979.067138, 1335.563476, 1320.657470, 0.000000, 0.000000, 90.000000);
    PrisonShower[77] = CreateDynamicObject(2371, 1981.587890, 1335.563476, 1320.657470, 0.000000, 0.000000, 90.000000);
    PrisonShower[78] = CreateDynamicObject(2371, 1981.587890, 1348.744506, 1320.657470, 0.000000, 0.000000, 90.000000);
    PrisonShower[79] = CreateDynamicObject(2371, 1979.056884, 1348.744506, 1320.657470, 0.000000, 0.000000, 90.000000);
    PrisonShower[80] = CreateDynamicObject(2371, 1975.316284, 1348.744506, 1320.657470, 0.000000, 0.000000, 90.000000);
    PrisonShower[81] = CreateDynamicObject(1533, 1962.088012, 1340.824340, 1320.027221, 0.000000, 0.000000, 90.300010);
    PrisonShower[82] = CreateDynamicObject(1533, 1962.059326, 1342.323242, 1320.027221, 0.000000, 0.000000, 89.599983);
    PrisonShower[83] = CreateDynamicObject(1778, 1967.779296, 1349.077148, 1320.087280, -0.400000, 0.000000, -87.900024);
    PrisonShower[84] = CreateDynamicObject(1778, 1967.305297, 1338.040405, 1320.067138, 0.000000, 0.000000, 90.100006);
    PrisonShower[85] = CreateDynamicObject(638, 1964.605346, 1330.975708, 1320.767944, 0.000000, 0.000000, 90.100028);
    PrisonShower[86] = CreateDynamicObject(638, 1964.501953, 1354.638427, 1320.787841, 0.000000, 0.000000, 90.099975);
    PrisonShower[87] = CreateDynamicObject(2815, 1969.048095, 1340.687500, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[88] = CreateDynamicObject(2815, 1971.018554, 1340.687500, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[89] = CreateDynamicObject(2815, 1972.978393, 1340.687500, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[90] = CreateDynamicObject(2815, 1974.948242, 1340.687500, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[91] = CreateDynamicObject(2815, 1976.918457, 1340.687500, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[92] = CreateDynamicObject(2815, 1978.888427, 1340.687500, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[93] = CreateDynamicObject(2815, 1980.858764, 1340.687500, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[94] = CreateDynamicObject(2815, 1982.818969, 1340.687500, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[95] = CreateDynamicObject(2815, 1984.788696, 1340.687500, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[96] = CreateDynamicObject(2815, 1968.822265, 1342.646850, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[97] = CreateDynamicObject(2815, 1970.792724, 1342.646850, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[98] = CreateDynamicObject(2815, 1972.752929, 1342.646850, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[99] = CreateDynamicObject(2815, 1974.723022, 1342.646850, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[100] = CreateDynamicObject(2815, 1976.682495, 1342.646850, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[101] = CreateDynamicObject(2815, 1978.653076, 1342.646850, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[102] = CreateDynamicObject(2815, 1980.623535, 1342.646850, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[103] = CreateDynamicObject(2815, 1982.593261, 1342.646850, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[104] = CreateDynamicObject(2815, 1984.553466, 1342.646850, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[105] = CreateDynamicObject(2815, 1984.553466, 1354.017944, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[106] = CreateDynamicObject(2815, 1982.592895, 1354.017944, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[107] = CreateDynamicObject(2815, 1980.622680, 1354.017944, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[108] = CreateDynamicObject(2815, 1978.661987, 1354.017944, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[109] = CreateDynamicObject(2815, 1976.701782, 1354.017944, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[110] = CreateDynamicObject(2815, 1974.731079, 1354.017944, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[111] = CreateDynamicObject(2815, 1972.780517, 1354.017944, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[112] = CreateDynamicObject(2815, 1970.810302, 1354.017944, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[113] = CreateDynamicObject(2815, 1968.839965, 1354.017944, 1320.086914, 0.000000, 0.000000, 0.000000);
    PrisonShower[114] = CreateDynamicObject(2815, 1969.048095, 1330.626342, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[115] = CreateDynamicObject(2815, 1971.018188, 1330.626342, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[116] = CreateDynamicObject(2815, 1972.988403, 1330.626342, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[117] = CreateDynamicObject(2815, 1974.958251, 1330.626342, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[118] = CreateDynamicObject(2815, 1976.908325, 1330.626342, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[119] = CreateDynamicObject(2815, 1978.878173, 1330.626342, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[120] = CreateDynamicObject(2815, 1980.838134, 1330.626342, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[121] = CreateDynamicObject(2815, 1982.808593, 1330.626342, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[122] = CreateDynamicObject(2815, 1984.768554, 1330.626342, 1320.087524, 0.000000, 0.000000, 0.000000);
    PrisonShower[123] = CreateDynamicObject(638, 1962.415405, 1352.115722, 1320.787841, 0.000000, 0.000000, -179.900070);
    PrisonShower[124] = CreateDynamicObject(638, 1962.425659, 1346.285644, 1320.787841, 0.000000, 0.000000, -179.900070);
    PrisonShower[125] = CreateDynamicObject(638, 1962.448852, 1332.916259, 1320.787841, 0.000000, 0.000000, -179.900070);
    PrisonShower[126] = CreateDynamicObject(638, 1962.439086, 1338.585693, 1320.787841, 0.000000, 0.000000, -179.900070);
	//=== [guard lounge]
	Prisonlounge[0] = CreateDynamicObject(18981, 647.124511, -1580.074707, 120.922485, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[0], 0, 5772, "stationtunnel", "mp_apt1_bathfloor1", 0);
	Prisonlounge[1] = CreateDynamicObject(19454, 659.609741, -1587.832519, 120.612525, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[1], 0, 8645, "vegashsetx", "badhousewalld06_128", 0);
	Prisonlounge[2] = CreateDynamicObject(19454, 659.609741, -1587.800415, 127.482513, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[2], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[3] = CreateDynamicObject(19454, 659.609741, -1578.180419, 127.502525, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[3], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[4] = CreateDynamicObject(19454, 659.609741, -1568.591186, 127.512496, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[4], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[5] = CreateDynamicObject(19404, 659.625244, -1572.376098, 124.072471, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[5], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[6] = CreateDynamicObject(19355, 659.625427, -1591.016723, 123.992492, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[6], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[7] = CreateDynamicObject(19404, 659.625244, -1587.826782, 124.012458, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[7], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[8] = CreateDynamicObject(19355, 659.625427, -1569.166259, 124.092460, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[8], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[9] = CreateDynamicObject(19404, 659.625244, -1584.637817, 124.002471, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[9], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[10] = CreateDynamicObject(19404, 659.625244, -1575.575073, 124.082473, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[10], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[11] = CreateDynamicObject(19355, 659.625427, -1581.426269, 124.012474, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[11], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[12] = CreateDynamicObject(19355, 659.625427, -1578.775756, 124.052482, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[12], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[13] = CreateDynamicObject(1566, 659.515808, -1578.514648, 122.912498, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[14] = CreateDynamicObject(1566, 659.515808, -1581.684814, 122.912498, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[15] = CreateDynamicObject(19377, 634.609252, -1587.777099, 123.102485, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[15], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[16] = CreateDynamicObject(19377, 654.259765, -1587.770263, 122.282478, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[16], 0, 12911, "sw_farm1", "sw_walltile", 0);
	Prisonlounge[17] = CreateDynamicObject(19377, 659.606140, -1594.163208, 123.102485, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[17], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[18] = CreateDynamicObject(19377, 647.739318, -1592.487548, 123.102485, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[18], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[19] = CreateDynamicObject(19377, 654.808776, -1567.556762, 123.102485, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[19], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[20] = CreateDynamicObject(19377, 645.189208, -1567.556762, 123.102485, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[20], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[21] = CreateDynamicObject(19377, 635.569519, -1567.556762, 123.102485, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[21], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[22] = CreateDynamicObject(19377, 634.609252, -1568.547119, 123.102485, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[22], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[23] = CreateDynamicObject(19377, 634.609252, -1578.166870, 123.102485, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[23], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[24] = CreateDynamicObject(19325, 659.678894, -1586.846069, 122.992485, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[25] = CreateDynamicObject(19325, 659.659118, -1573.886230, 123.262489, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[26] = CreateDynamicObject(19454, 659.609741, -1568.591186, 120.612525, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[26], 0, 8645, "vegashsetx", "badhousewalld06_128", 0);
	Prisonlounge[27] = CreateDynamicObject(19454, 659.609741, -1578.212280, 120.612525, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[27], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[28] = CreateDynamicObject(14411, 657.568847, -1581.108154, 119.142478, 0.000000, 0.000000, 180.000000, 1, -1, -1, 400.0);
	Prisonlounge[29] = CreateDynamicObject(14411, 657.568847, -1579.108154, 119.142478, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[30] = CreateDynamicObject(19377, 640.270019, -1578.160888, 122.282478, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[30], 0, 12911, "sw_farm1", "sw_walltile", 0);
	Prisonlounge[31] = CreateDynamicObject(19377, 633.290649, -1572.410522, 122.284477, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[31], 0, 12911, "sw_farm1", "sw_walltile", 0);
	Prisonlounge[32] = CreateDynamicObject(19377, 643.769470, -1587.770263, 122.282478, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[32], 0, 12911, "sw_farm1", "sw_walltile", 0);
	Prisonlounge[33] = CreateDynamicObject(19377, 633.289611, -1587.770263, 122.282478, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[33], 0, 12911, "sw_farm1", "sw_walltile", 0);
	Prisonlounge[34] = CreateDynamicObject(19377, 650.769775, -1578.160888, 122.282478, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[34], 0, 12911, "sw_farm1", "sw_walltile", 0);
	Prisonlounge[35] = CreateDynamicObject(19377, 629.780456, -1578.160888, 122.282478, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[35], 0, 12911, "sw_farm1", "sw_walltile", 0);
	Prisonlounge[36] = CreateDynamicObject(19377, 654.259765, -1597.361083, 122.282478, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[36], 0, 12911, "sw_farm1", "sw_walltile", 0);
	Prisonlounge[37] = CreateDynamicObject(19377, 654.259765, -1572.410522, 122.284477, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[37], 0, 12911, "sw_farm1", "sw_walltile", 0);
	Prisonlounge[38] = CreateDynamicObject(19377, 643.770263, -1572.410522, 122.284477, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[38], 0, 12911, "sw_farm1", "sw_walltile", 0);
	Prisonlounge[39] = CreateDynamicObject(19454, 655.940307, -1580.466430, 120.602455, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[39], 0, 18202, "w_towncs_t", "hatwall256hi", 0);
	Prisonlounge[40] = CreateDynamicObject(8572, 645.215087, -1570.566894, 124.564361, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[41] = CreateDynamicObject(1723, 650.341491, -1571.622436, 122.360458, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[42] = CreateDynamicObject(1723, 655.722167, -1568.372436, 122.360458, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[43] = CreateDynamicObject(1723, 651.371704, -1568.372436, 122.360458, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[44] = CreateDynamicObject(1723, 658.841857, -1569.472412, 122.360458, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[45] = CreateDynamicObject(2311, 655.621582, -1570.259033, 122.330421, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[46] = CreateDynamicObject(2311, 651.921142, -1570.259033, 122.330421, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[47] = CreateDynamicObject(955, 654.553955, -1568.064086, 122.790435, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[48] = CreateDynamicObject(628, 650.232971, -1568.317260, 124.350433, 0.000000, 0.000000, 180.000000, 1, -1, -1, 400.0);
	Prisonlounge[49] = CreateDynamicObject(628, 658.843444, -1568.317260, 124.350433, 0.000000, 0.000000, 180.000000, 1, -1, -1, 400.0);
	Prisonlounge[50] = CreateDynamicObject(19454, 641.981628, -1567.526489, 128.298583, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[50], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[51] = CreateDynamicObject(19454, 632.352050, -1567.526489, 128.298583, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[51], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[52] = CreateDynamicObject(19454, 634.562011, -1577.787841, 128.298583, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[52], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[53] = CreateDynamicObject(19454, 634.562011, -1568.178222, 128.298583, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[53], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[54] = CreateDynamicObject(19384, 644.232238, -1578.572265, 124.058410, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[54], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[55] = CreateDynamicObject(19446, 634.729736, -1565.836791, 124.058441, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[55], 0, 8399, "vgs_shops", "vgsclubwall05_128", -4112);
	Prisonlounge[56] = CreateDynamicObject(19377, 639.479431, -1575.143432, 125.788421, 0.000000, 90.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[56], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Prisonlounge[57] = CreateDynamicObject(19377, 639.479431, -1564.663330, 125.788421, 0.000000, 90.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[57], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Prisonlounge[58] = CreateDynamicObject(19446, 639.490417, -1567.597045, 124.058441, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[58], 0, 8399, "vgs_shops", "vgsclubwall05_128", -4112);
	Prisonlounge[59] = CreateDynamicObject(19428, 644.223083, -1578.668090, 126.314346, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[59], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[60] = CreateDynamicObject(19446, 644.230163, -1572.406494, 124.058441, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[60], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[61] = CreateDynamicObject(19446, 634.729736, -1575.456665, 124.058441, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[61], 0, 8399, "vgs_shops", "vgsclubwall05_128", -4112);
	Prisonlounge[62] = CreateDynamicObject(18981, 634.517211, -1595.207397, 128.824478, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[62], 0, 3897, "libertyhi", "indtendark64", 0);
	Prisonlounge[63] = CreateDynamicObject(19428, 634.574523, -1582.624389, 129.234283, 90.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[63], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[64] = CreateDynamicObject(19428, 646.823669, -1569.305664, 129.234283, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[64], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[65] = CreateDynamicObject(19428, 646.823669, -1572.805053, 129.234283, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[65], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[66] = CreateDynamicObject(19428, 646.823669, -1576.304687, 129.234283, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[66], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[67] = CreateDynamicObject(19428, 646.823669, -1583.293701, 129.234283, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[67], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[68] = CreateDynamicObject(19428, 646.823669, -1579.804321, 129.234283, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[68], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[69] = CreateDynamicObject(19428, 645.024047, -1582.624389, 129.234283, 90.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[69], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[70] = CreateDynamicObject(19428, 641.544128, -1582.624389, 129.234283, 90.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[70], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[71] = CreateDynamicObject(19428, 638.054382, -1582.624389, 129.234283, 90.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[71], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[72] = CreateDynamicObject(19446, 639.490417, -1580.327026, 121.908447, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[72], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[73] = CreateDynamicObject(19446, 639.490417, -1580.327026, 125.388420, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[73], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[74] = CreateDynamicObject(19428, 642.613220, -1580.328002, 129.104370, 90.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[74], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[75] = CreateDynamicObject(19428, 639.123229, -1580.328002, 129.104370, 90.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[75], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[76] = CreateDynamicObject(19428, 635.643310, -1580.328002, 129.104370, 90.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[76], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[77] = CreateDynamicObject(19428, 644.313171, -1578.568115, 129.104370, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[77], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[78] = CreateDynamicObject(18981, 659.246704, -1569.377197, 128.854461, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[78], 0, 3897, "libertyhi", "indtendark64", 0);
	Prisonlounge[79] = CreateDynamicObject(18981, 647.206909, -1605.036865, 126.024497, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[79], 0, 3897, "libertyhi", "indtendark64", 0);
	Prisonlounge[80] = CreateDynamicObject(19377, 631.159729, -1572.298461, 129.974288, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[80], 0, 1649, "wglass", "carshowwin2", 0);
	Prisonlounge[81] = CreateDynamicObject(19377, 641.659362, -1572.317749, 129.974288, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[81], 0, 1649, "wglass", "carshowwin2", 0);
	Prisonlounge[82] = CreateDynamicObject(19377, 641.659362, -1581.937866, 129.974288, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[82], 0, 1649, "wglass", "carshowwin2", 0);
	Prisonlounge[83] = CreateDynamicObject(19377, 631.159729, -1581.937866, 129.974288, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[83], 0, 1649, "wglass", "carshowwin2", 0);
	Prisonlounge[84] = CreateDynamicObject(19454, 655.943542, -1578.953247, 126.098426, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[84], 0, 8399, "vgs_shops", "vgsclubwall05_128", -4112);
	Prisonlounge[85] = CreateDynamicObject(19454, 655.945556, -1581.241577, 126.098426, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[85], 0, 8399, "vgs_shops", "vgsclubwall05_128", -4112);
	Prisonlounge[86] = CreateDynamicObject(14782, 638.846252, -1567.998291, 126.854377, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[87] = CreateDynamicObject(14782, 635.045837, -1570.028320, 126.854377, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[88] = CreateDynamicObject(14782, 635.045837, -1576.699584, 126.854377, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[89] = CreateDynamicObject(14401, 639.550415, -1573.549072, 126.154380, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[89], 0, 16150, "ufo_bar", "GEwhite1_64", 0);
	Prisonlounge[90] = CreateDynamicObject(19428, 644.313171, -1575.088134, 129.104370, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[90], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[91] = CreateDynamicObject(19428, 644.313171, -1571.628173, 129.104370, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[91], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[92] = CreateDynamicObject(19428, 644.223083, -1571.708618, 126.314346, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[92], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[93] = CreateDynamicObject(19428, 644.223083, -1575.178466, 126.314346, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[93], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[94] = CreateDynamicObject(18762, 643.817443, -1570.150634, 127.394432, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[94], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[95] = CreateDynamicObject(18762, 643.817443, -1579.812500, 122.464447, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[95], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[96] = CreateDynamicObject(18762, 643.787414, -1579.812500, 127.394432, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[96], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[97] = CreateDynamicObject(19325, 633.393493, -1580.254638, 126.874359, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[98] = CreateDynamicObject(19325, 640.033142, -1580.254638, 126.874359, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[99] = CreateDynamicObject(19325, 644.242065, -1576.997192, 127.724380, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[100] = CreateDynamicObject(19325, 644.242065, -1571.727294, 125.204360, 90.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[101] = CreateDynamicObject(2181, 643.496887, -1572.528564, 122.420410, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[102] = CreateDynamicObject(2181, 636.366638, -1568.198730, 122.420410, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[103] = CreateDynamicObject(2173, 638.968200, -1568.231567, 122.360397, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[104] = CreateDynamicObject(2181, 635.295837, -1573.848999, 122.420410, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[105] = CreateDynamicObject(2181, 641.386413, -1568.198730, 122.420410, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[106] = CreateDynamicObject(2181, 643.496887, -1569.698852, 122.420410, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[107] = CreateDynamicObject(2181, 635.295837, -1570.748657, 122.420410, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[108] = CreateDynamicObject(632, 643.967285, -1568.000366, 122.760391, 0.000000, 0.000000, 45.000000, 1, -1, -1, 400.0);
	Prisonlounge[109] = CreateDynamicObject(632, 634.887573, -1567.915405, 122.760391, 0.000000, 0.000000, 135.000000, 1, -1, -1, 400.0);
	Prisonlounge[110] = CreateDynamicObject(1235, 638.160095, -1568.165283, 122.898574, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[111] = CreateDynamicObject(1235, 643.519348, -1571.692749, 122.880409, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[112] = CreateDynamicObject(1235, 635.366333, -1571.751342, 122.870040, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[113] = CreateDynamicObject(1806, 642.848449, -1570.292602, 122.350418, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[114] = CreateDynamicObject(1806, 639.507995, -1568.853271, 122.350418, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[115] = CreateDynamicObject(1806, 641.938110, -1568.853271, 122.350418, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[116] = CreateDynamicObject(1806, 636.837829, -1568.853271, 122.350418, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[117] = CreateDynamicObject(1806, 635.967834, -1570.263061, 122.350418, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[118] = CreateDynamicObject(1806, 635.967834, -1573.293334, 122.350418, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[119] = CreateDynamicObject(1806, 642.848449, -1573.033203, 122.350418, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[120] = CreateDynamicObject(2173, 638.852844, -1570.463012, 122.350425, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[121] = CreateDynamicObject(2173, 639.842468, -1571.473999, 122.350425, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[122] = CreateDynamicObject(2173, 639.842468, -1573.384155, 122.350425, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[123] = CreateDynamicObject(2173, 639.842468, -1575.333496, 122.350425, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[124] = CreateDynamicObject(2173, 638.852844, -1574.313110, 122.350425, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[125] = CreateDynamicObject(2173, 638.852844, -1572.363037, 122.350425, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[126] = CreateDynamicObject(1714, 640.454895, -1574.830810, 122.340408, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[127] = CreateDynamicObject(1714, 638.224853, -1574.822631, 122.340408, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[128] = CreateDynamicObject(1714, 638.224853, -1572.821899, 122.340408, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[129] = CreateDynamicObject(1714, 638.224853, -1570.961425, 122.340408, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[130] = CreateDynamicObject(1714, 640.454895, -1570.961425, 122.340408, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[131] = CreateDynamicObject(1714, 640.454895, -1572.901000, 122.340408, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[132] = CreateDynamicObject(2193, 636.376220, -1579.693237, 122.340393, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[133] = CreateDynamicObject(2172, 638.292724, -1579.709594, 122.320426, 0.000000, 0.000000, 180.000000, 1, -1, -1, 400.0);
	Prisonlounge[134] = CreateDynamicObject(2172, 635.352783, -1577.769531, 122.320426, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[135] = CreateDynamicObject(1714, 636.135620, -1577.184692, 122.318420, 0.000000, 0.000000, -87.700012);
	Prisonlounge[136] = CreateDynamicObject(1714, 637.901428, -1578.832763, 122.318420, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[137] = CreateDynamicObject(1714, 636.201477, -1578.832763, 122.318420, 0.000000, 0.000000, -46.000000, 1, -1, -1, 400.0);
	Prisonlounge[138] = CreateDynamicObject(19377, 639.045532, -1585.110595, 126.788398, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[138], 0, 1649, "wglass", "carshowwin2", 0);
	Prisonlounge[139] = CreateDynamicObject(19377, 639.510559, -1589.863403, 123.428421, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[139], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[140] = CreateDynamicObject(19395, 644.254638, -1588.286376, 124.098411, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[140], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[141] = CreateDynamicObject(19355, 644.253662, -1581.880249, 124.118392, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[141], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[142] = CreateDynamicObject(19355, 644.253662, -1585.079589, 124.118392, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[142], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[143] = CreateDynamicObject(19454, 644.278991, -1585.138427, 128.328399, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[143], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[144] = CreateDynamicObject(19454, 644.281005, -1585.138427, 127.548416, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[144], 0, 8399, "vgs_shops", "vgsclubwall05_128", -1052688);
	Prisonlounge[145] = CreateDynamicObject(19377, 635.658508, -1592.487548, 123.102485, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[145], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[146] = CreateDynamicObject(19377, 645.278625, -1592.487548, 123.102485, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[146], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[147] = CreateDynamicObject(16151, 655.314270, -1593.718383, 122.668426, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[148] = CreateDynamicObject(1518, 639.682189, -1580.628662, 123.368415, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[149] = CreateDynamicObject(1518, 639.682189, -1580.628662, 123.918418, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[150] = CreateDynamicObject(1518, 639.682189, -1580.628662, 124.468414, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[151] = CreateDynamicObject(1518, 640.292175, -1580.628662, 124.468414, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[152] = CreateDynamicObject(1518, 640.292175, -1580.628662, 123.918418, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[153] = CreateDynamicObject(1518, 640.292175, -1580.628662, 123.368415, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[154] = CreateDynamicObject(1518, 640.902160, -1580.628662, 123.368415, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[155] = CreateDynamicObject(1518, 640.902160, -1580.628662, 123.918418, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[156] = CreateDynamicObject(1518, 640.902160, -1580.628662, 124.468414, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[157] = CreateDynamicObject(1518, 639.072204, -1580.628662, 124.468414, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[158] = CreateDynamicObject(1518, 638.462219, -1580.628662, 124.468414, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[159] = CreateDynamicObject(1518, 637.852172, -1580.628662, 124.468414, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[160] = CreateDynamicObject(1518, 637.852172, -1580.628662, 123.918418, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[161] = CreateDynamicObject(1518, 637.852172, -1580.628662, 123.918418, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[162] = CreateDynamicObject(19377, 655.135620, -1594.683715, 123.102485, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[162], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[163] = CreateDynamicObject(1518, 638.462219, -1580.628662, 123.918418, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[164] = CreateDynamicObject(1518, 639.072204, -1580.628662, 123.918418, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[165] = CreateDynamicObject(1518, 639.072204, -1580.628662, 123.368415, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[166] = CreateDynamicObject(1518, 638.462219, -1580.628662, 123.368415, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[167] = CreateDynamicObject(1518, 637.852172, -1580.628662, 123.368415, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[168] = CreateDynamicObject(2185, 635.198608, -1584.226074, 122.358436, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[169] = CreateDynamicObject(2185, 635.198608, -1586.185668, 122.358436, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[170] = CreateDynamicObject(2185, 635.198608, -1584.226074, 122.358436, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[171] = CreateDynamicObject(2700, 634.648925, -1586.563354, 123.368415, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[172] = CreateDynamicObject(2700, 634.648925, -1582.733154, 123.368415, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[173] = CreateDynamicObject(2700, 634.648925, -1584.673583, 123.368415, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[174] = CreateDynamicObject(1714, 635.925781, -1583.204833, 122.348426, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[175] = CreateDynamicObject(1714, 635.925781, -1586.924926, 122.348426, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[176] = CreateDynamicObject(1714, 635.925781, -1585.164794, 122.348426, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[177] = CreateDynamicObject(1715, 640.043090, -1582.598144, 122.308471, 0.000000, 0.000000, 180.000000, 1, -1, -1, 400.0);
	Prisonlounge[178] = CreateDynamicObject(1715, 638.703125, -1582.598144, 122.308471, 0.000000, 0.000000, 180.000000, 1, -1, -1, 400.0);
	Prisonlounge[179] = CreateDynamicObject(19377, 652.485778, -1597.254394, 123.102485, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[179], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[180] = CreateDynamicObject(19377, 655.315979, -1592.523681, 130.762557, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[180], 0, 8399, "vgs_shops", "vgsclubwall05_128", -16);
	Prisonlounge[181] = CreateDynamicObject(18981, 647.426757, -1594.376708, 128.844467, 0.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[181], 0, 3897, "libertyhi", "indtendark64", 0);
	Prisonlounge[182] = CreateDynamicObject(1537, 634.731811, -1590.408691, 122.338401, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[183] = CreateDynamicObject(19172, 640.822814, -1580.222045, 124.110443, 0.000000, 0.000000, 180.000000, 1, -1, -1, 400.0);
	Prisonlounge[184] = CreateDynamicObject(632, 643.345520, -1578.908447, 122.838417, 0.000000, 0.000000, 45.000000, 1, -1, -1, 400.0);
	Prisonlounge[185] = CreateDynamicObject(19173, 639.422973, -1567.689331, 124.820411, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[186] = CreateDynamicObject(19174, 640.108032, -1589.733154, 124.588409, 0.000000, 0.000000, 180.000000, 1, -1, -1, 400.0);
	Prisonlounge[187] = CreateDynamicObject(638, 640.035095, -1589.381835, 123.028396, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[188] = CreateDynamicObject(646, 635.453186, -1588.775146, 123.678413, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[189] = CreateDynamicObject(19174, 644.149597, -1584.205932, 124.488418, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[190] = CreateDynamicObject(1491, 644.282531, -1579.325805, 122.348403, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[191] = CreateDynamicObject(1491, 644.248718, -1589.030273, 122.308418, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	Prisonlounge[192] = CreateDynamicObject(2002, 643.655639, -1576.177856, 122.360420, 0.000000, 0.000000, 270.000000, 1, -1, -1, 400.0);
	Prisonlounge[193] = CreateDynamicObject(1886, 655.957275, -1577.291992, 125.743164, 45.000000, 270.000000, 45.000000, 1, -1, -1, 400.0);
	Prisonlounge[194] = CreateDynamicObject(1886, 643.311950, -1579.747802, 129.419860, 135.000000, 90.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[195] = CreateDynamicObject(19428, 654.371520, -1580.109375, 122.602416, 0.000000, 90.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[195], 0, 3947, "rczero_track", "waterclear256", 0);
	Prisonlounge[196] = CreateDynamicObject(19428, 655.191894, -1581.180908, 122.608413, 0.000000, 90.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[196], 0, 3947, "rczero_track", "waterclear256", 0);
	Prisonlounge[197] = CreateDynamicObject(19428, 653.179565, -1578.500732, 122.000442, 90.000000, 0.000000, 315.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[197], 0, 13734, "hillcliff_lahills", "des_ranchwall1", 0);
	Prisonlounge[198] = CreateDynamicObject(19428, 655.191894, -1579.019287, 122.610412, 0.000000, 90.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[198], 0, 3947, "rczero_track", "waterclear256", 0);
	Prisonlounge[199] = CreateDynamicObject(19428, 653.720581, -1579.146240, 122.606414, 0.000000, 90.000000, 45.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[199], 0, 3947, "rczero_track", "waterclear256", 0);
	Prisonlounge[200] = CreateDynamicObject(19428, 653.756530, -1581.120239, 122.606414, 0.000000, 90.000000, 315.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[200], 0, 3947, "rczero_track", "waterclear256", 0);
	Prisonlounge[201] = CreateDynamicObject(19428, 655.117431, -1577.297729, 121.060432, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[201], 0, 13734, "hillcliff_lahills", "des_ranchwall1", 0);
	Prisonlounge[202] = CreateDynamicObject(19428, 655.117431, -1582.899291, 121.070434, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[202], 0, 13734, "hillcliff_lahills", "des_ranchwall1", 0);
	Prisonlounge[203] = CreateDynamicObject(19428, 653.137451, -1581.697021, 122.000442, 90.000000, 0.000000, 45.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[203], 0, 13734, "hillcliff_lahills", "des_ranchwall1", 0);
	Prisonlounge[204] = CreateDynamicObject(18762, 652.200988, -1580.102172, 120.308425, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	SetDynamicObjectMaterial(Prisonlounge[204], 0, 13734, "hillcliff_lahills", "des_ranchwall1", 0);
	Prisonlounge[205] = CreateDynamicObject(14562, 654.813354, -1564.289794, 123.888427, 0.000000, 0.000000, 180.000000, 1, -1, -1, 400.0);
	Prisonlounge[206] = CreateDynamicObject(1679, 654.068359, -1586.660766, 122.838401, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[207] = CreateDynamicObject(1679, 657.678344, -1588.551391, 122.838401, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[208] = CreateDynamicObject(1679, 652.028137, -1589.372192, 122.838401, 0.000000, 0.000000, 0.000000, 1, -1, -1, 400.0);
	Prisonlounge[209] = CreateDynamicObject(2745, 644.908935, -1583.737182, 123.508407, 0.000000, 0.000000, 90.000000, 1, -1, -1, 400.0);
	//=== [process room]
	CreateDynamicObject(8419,1796.7988300,-1548.1718800,5687.7021500,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(8419,1796.7988300,-1548.1718800,5687.7021500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3944,1814.1884800,-1538.8988000,5698.9262700,0.0000000,0.0000000,270.2471900); //
	CreateDynamicObject(3944,1799.6953100,-1548.6562500,5698.9340800,0.0000000,0.0000000,0.4889000); //
	CreateDynamicObject(3944,1817.4093000,-1544.9561800,5698.9086900,0.0000000,0.0000000,180.2417000); //
	CreateDynamicObject(8661,1817.0859400,-1542.7177700,5702.6064500,0.0000000,179.9835200,0.3625500); //
	CreateDynamicObject(8661,1812.4698500,-1542.7684300,5702.9174800,0.0000000,359.9835200,0.2879900); //
	CreateDynamicObject(1886,1802.3994100,-1523.6992200,5702.7998000,20.9234600,359.2199700,135.7305900); //
	CreateDynamicObject(8661,1795.2675800,-1536.1630900,5699.4287100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8661,1815.8916000,-1523.4785200,5702.6127900,0.0000000,179.9835200,0.3570600); //
	CreateDynamicObject(3944,1799.7385300,-1536.4445800,5698.9340800,0.0000000,0.0000000,0.4888900); //
	CreateDynamicObject(3944,1799.6726100,-1546.6495400,5698.9340800,0.0000000,0.0000000,0.4889000); //
	CreateDynamicObject(3944,1799.6539300,-1544.6783400,5698.9340800,0.0000000,0.0000000,0.4888900); //
	CreateDynamicObject(3944,1799.7236300,-1532.6943400,5698.9477500,0.0000000,0.0000000,180.2417000); //
	CreateDynamicObject(3944,1814.1884800,-1520.8242200,5698.9262700,0.0000000,0.0000000,270.2471900); //
	CreateDynamicObject(3944,1806.0629900,-1527.0323500,5698.9340800,0.0000000,0.0000000,0.4888900); //
	CreateDynamicObject(8661,1795.6796900,-1516.1787100,5699.4287100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3944,1781.6352500,-1532.7768600,5698.9477500,0.0000000,0.0000000,180.2417000); //
	CreateDynamicObject(8661,1776.0546900,-1523.7089800,5702.5961900,0.0000000,179.9835200,0.3625500); //
	CreateDynamicObject(3944,1791.4150400,-1526.2539100,5698.9262700,0.0000000,0.0000000,90.4669200); //
	CreateDynamicObject(3944,1797.7714800,-1537.7002000,5698.9262700,0.0000000,0.0000000,270.2471900); //
	CreateDynamicObject(3944,1806.0449200,-1523.3252000,5698.9477500,0.0000000,0.0000000,180.4336500); //
	CreateDynamicObject(3944,1791.4388400,-1508.1812700,5698.9277300,0.0000000,0.0000000,89.3573000); //
	CreateDynamicObject(3944,1795.8520500,-1514.7252200,5698.9340800,0.0000000,0.0000000,0.4888900); //
	CreateDynamicObject(3944,1813.9448200,-1514.5676300,5698.9340800,0.0000000,0.0000000,0.4888900); //
	CreateDynamicObject(2774,1809.0000000,-1518.6999500,5711.8999000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2165,1808.1915300,-1540.0402800,5699.4287100,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(2166,1807.1845700,-1537.8828100,5699.4287100,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(2774,1810.4707000,-1529.6572300,5711.8960000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2165,1803.9414100,-1540.1416000,5699.4287100,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1715,1806.7002000,-1540.5800800,5699.4287100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1715,1802.5166000,-1540.8088400,5699.4287100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2186,1803.0293000,-1536.0380900,5699.4287100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1893,1802.1555200,-1537.9414100,5702.8964800,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1806.4974400,-1537.8236100,5702.8964800,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1811.8181200,-1541.8753700,5702.8964800,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1811.5732400,-1533.7783200,5702.8964800,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1813.6269500,-1524.5703100,5702.8964800,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1805.0000000,-1531.4000200,5702.8999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1794.4482400,-1529.8302000,5702.8964800,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1744,1806.0864300,-1535.5532200,5700.9853500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2007,1805.7793000,-1536.0410200,5699.4287100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2007,1806.7666000,-1536.0332000,5699.4287100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2606,1800.9668000,-1538.1201200,5701.2358400,0.0000000,0.0000000,90.4724100); //
	CreateDynamicObject(2606,1800.9668000,-1538.1201200,5702.1010700,0.0000000,0.0000000,90.4724100); //
	CreateDynamicObject(2606,1800.9668000,-1538.1201200,5701.6669900,0.0000000,0.0000000,90.4779100); //
	CreateDynamicObject(2737,1805.5682400,-1541.7053200,5701.0942400,0.0000000,0.0000000,180.2879800); //
	CreateDynamicObject(2608,1800.9052700,-1538.1579600,5700.0288100,0.0000000,0.0000000,90.4000200); //
	CreateDynamicObject(2922,1813.0137900,-1545.8217800,5700.7377900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3944,1784.9960900,-1527.2099600,5698.9340800,0.0000000,0.0000000,0.4888900); //
	CreateDynamicObject(3944,1784.9892600,-1523.4827900,5698.9477500,0.0000000,0.0000000,180.4284700); //
	CreateDynamicObject(3944,1803.0341800,-1523.3457000,5701.4350600,0.0000000,0.0000000,180.4284700); //
	CreateDynamicObject(3944,1802.7767300,-1527.0567600,5701.4238300,0.0000000,0.0000000,0.4888900); //
	CreateDynamicObject(2922,1794.3203100,-1525.1530800,5701.0214800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2922,1796.6497800,-1525.3448500,5701.0214800,0.0000000,0.0000000,181.0242000); //
	CreateDynamicObject(18070,1799.4423800,-1520.6132800,5699.9111300,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(18070,1799.3687700,-1511.4989000,5699.9111300,0.0000000,0.0000000,90.4943800); //
	CreateDynamicObject(1892,1801.5595700,-1515.5136700,5699.4287100,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(2422,1799.8714600,-1517.9378700,5700.4213900,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2422,1798.6731000,-1517.9572800,5700.4213900,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(18070,1799.4423800,-1520.6132800,5702.1245100,0.0000000,179.9835200,90.4943800); //
	CreateDynamicObject(18070,1799.3681600,-1511.4980500,5702.1318400,0.0000000,179.8880000,90.4943800); //
	CreateDynamicObject(16101,1801.4990200,-1524.1397700,5702.7373000,0.0000000,179.9945100,0.0000000); //
	CreateDynamicObject(16101,1801.5000000,-1517.3000500,5702.7002000,0.0000000,179.9945100,0.0000000); //
	CreateDynamicObject(3857,1801.5068400,-1520.9599600,5703.3032200,0.0000000,0.0000000,135.1318400); //
	CreateDynamicObject(16101,1801.6378200,-1514.8872100,5708.9873000,0.0000000,179.9945100,0.0000000); //
	CreateDynamicObject(16101,1797.3172600,-1514.9075900,5708.9873000,0.0000000,179.9945100,0.0000000); //
	CreateDynamicObject(16101,1797.3273900,-1517.2951700,5708.9873000,0.0000000,179.9945100,0.0000000); //
	CreateDynamicObject(16101,1797.3557100,-1524.0314900,5708.9873000,0.0000000,179.9945100,0.0000000); //
	CreateDynamicObject(1533,1809.0999800,-1513.8000500,5699.3999000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1533,1810.5999800,-1513.8000500,5699.3999000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1722,1810.5000000,-1524.0999800,5699.4199200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1722,1811.1999500,-1524.0999800,5699.4199200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1722,1811.9000200,-1524.0999800,5699.4199200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1722,1812.5999800,-1524.0999800,5699.4199200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2239,1814.6999500,-1523.8000500,5699.3999000,0.0000000,0.0000000,200.0000000); //
	CreateDynamicObject(1815,1813.5000000,-1523.6999500,5699.4199200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1722,1815.0000000,-1521.9000200,5699.4199200,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1722,1815.0000000,-1521.1999500,5699.4199200,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1722,1815.0000000,-1520.5000000,5699.4199200,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1722,1815.0000000,-1519.8000500,5699.4199200,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2852,1814.0000000,-1523.1999500,5699.9199200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2190,1801.1999500,-1520.0999800,5700.3999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(2190,1801.1999500,-1521.8000500,5700.2700200,0.0000000,0.0000000,248.0000000); //
	CreateDynamicObject(2190,1801.1999500,-1521.8000500,5700.5698200,0.0000000,180.0000000,275.0000000); //
	CreateDynamicObject(1715,1799.0000000,-1521.9000200,5699.3999000,0.0000000,0.0000000,130.0000000); //
	CreateDynamicObject(1715,1799.0000000,-1519.5999800,5699.3999000,0.0000000,0.0000000,91.9957300); //
	CreateDynamicObject(1808,1814.8000500,-1516.8000500,5699.3999000,0.0000000,0.0000000,268.2500000); //
	CreateDynamicObject(1808,1790.6999500,-1519.0000000,5699.3999000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3578,1802.7998000,-1519.0000000,5698.6298800,29.9981700,0.0000000,90.0000000); //
	CreateDynamicObject(1886,1791.0999800,-1523.8000500,5702.7998000,20.9234600,359.2199700,135.7305900); //
	CreateDynamicObject(1886,1814.4000200,-1514.0999800,5702.7998000,20.9234600,359.2199700,283.7305600); //
	CreateDynamicObject(1892,1810.9000200,-1514.4000200,5699.5000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1892,1809.3000500,-1514.4000200,5699.5000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2165,1795.5000000,-1533.0000000,5699.3999000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(970,1790.0999800,-1528.0000000,5699.7002000,90.0000000,180.0000000,270.0000000); //
	CreateDynamicObject(970,1790.0999800,-1528.0000000,5700.0000000,90.0000000,180.0000000,270.0000000); //
	CreateDynamicObject(970,1790.0999800,-1528.0000000,5700.2998000,90.0000000,179.9945100,270.4998800); //
	CreateDynamicObject(970,1790.0999800,-1528.0000000,5700.6001000,90.0000000,180.0000000,270.0000000); //
	CreateDynamicObject(970,1790.0999800,-1528.0000000,5700.8999000,90.0000000,180.0000000,270.0000000); //
	CreateDynamicObject(970,1790.0999800,-1528.0000000,5701.2002000,90.0000000,180.0000000,270.0000000); //
	CreateDynamicObject(970,1790.0999800,-1532.0999800,5699.7002000,90.0000000,179.9945100,270.0000000); //
	CreateDynamicObject(970,1790.0999800,-1532.0999800,5700.0000000,90.0000000,179.9945100,270.0000000); //
	CreateDynamicObject(970,1790.0999800,-1532.0999800,5700.2998000,90.0000000,179.9945100,270.0000000); //
	CreateDynamicObject(970,1790.0999800,-1532.0999800,5700.6001000,90.0000000,179.9945100,270.0000000); //
	CreateDynamicObject(970,1790.0999800,-1532.0999800,5700.8999000,90.0000000,179.9945100,270.0000000); //
	CreateDynamicObject(970,1790.0999800,-1532.0999800,5701.2002000,90.0000000,179.9945100,270.0000000); //
	CreateDynamicObject(970,1790.0999800,-1528.0000000,5701.5000000,90.0000000,179.9945100,270.0000000); //
	CreateDynamicObject(970,1790.0999800,-1532.0999800,5701.5000000,90.0000000,179.9945100,270.0000000); //
	CreateDynamicObject(3578,1791.8000500,-1531.1999500,5698.6298800,29.9981700,0.0000000,90.0000000); //
	CreateDynamicObject(2166,1795.5999800,-1530.0999800,5699.3999000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1715,1796.8000500,-1532.6999500,5699.3999000,0.0000000,0.0000000,262.0000000); //
	CreateDynamicObject(2186,1798.0999800,-1530.3000500,5699.3999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1886,1798.6999500,-1530.1999500,5701.7998000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1886,1791.5999800,-1526.1999500,5701.5000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1886,1791.5999800,-1533.6999500,5701.5000000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(3944,1801.4439700,-1537.7066700,5698.8999000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2007,1802.0999800,-1533.0000000,5699.3999000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2007,1801.0999800,-1533.0000000,5699.3999000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1805.0999800,-1533.0000000,5699.3999000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1804.0999800,-1533.0000000,5699.3999000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1803.0999800,-1533.0000000,5699.3999000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1805.0999800,-1533.0000000,5700.7998000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1804.0999800,-1533.0000000,5700.7998000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1803.0999800,-1533.0000000,5700.7998000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1802.0999800,-1533.0000000,5700.7998000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1801.0999800,-1533.0000000,5700.7998000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1801.0999800,-1529.5999800,5699.3999000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1802.0999800,-1529.5999800,5699.3999000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1803.0999800,-1529.5999800,5699.3999000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1804.0999800,-1529.5999800,5699.3999000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1805.0999800,-1529.5999800,5699.3999000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1805.0999800,-1529.5999800,5700.7998000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1804.0999800,-1529.5999800,5700.7998000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1803.0999800,-1529.5999800,5700.7998000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1802.0999800,-1529.5999800,5700.7998000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2007,1801.0999800,-1529.5999800,5700.7998000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(9339,1804.9000200,-1530.1999500,5689.2002000,90.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(1893,1802.1999500,-1531.3000500,5702.8999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(2007,1805.0870400,-1530.8000500,5699.3999000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2007,1805.0870400,-1530.8000500,5700.7998000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2007,1804.0999800,-1530.8000500,5700.7998000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2007,1803.0999800,-1530.8000500,5700.7998000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2007,1802.0999800,-1530.8000500,5700.7998000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2007,1801.0999800,-1530.8000500,5700.7998000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2007,1801.0999800,-1530.8000500,5699.3999000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2007,1802.0999800,-1530.8000500,5699.3999000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2007,1803.0999800,-1530.8000500,5699.3999000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2007,1804.0999800,-1530.8000500,5699.3999000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1893,1827.0999800,-1541.6999500,5702.8999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1802.5000000,-1527.4000200,5702.8999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1807.8000500,-1527.4000200,5702.8999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1798.3000500,-1520.0999800,5702.8999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1794.0000000,-1520.0999800,5702.8999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1805.0000000,-1520.0999800,5702.8999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1812.0000000,-1520.0999800,5702.8999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1812.0000000,-1515.0999800,5702.8999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1893,1805.0000000,-1515.0999800,5702.8999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(2844,1801.3000500,-1532.0999800,5699.3999000,0.0000000,0.0000000,66.0000000); //
	CreateDynamicObject(2845,1802.5999800,-1532.0999800,5699.3999000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(2303,1806.3000500,-1533.0000000,5699.3999000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2303,1807.5999800,-1533.0000000,5699.3999000,0.0000000,0.0000000,179.9945100); //
	CreateDynamicObject(2741,1808.3000500,-1533.4000200,5701.0000000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(1808,1804.8000500,-1535.6999500,5699.3999000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2596,1800.5999800,-1522.5999800,5702.1001000,0.0000000,0.0000000,240.0000000); //
	CreateDynamicObject(2813,1807.3000500,-1537.6999500,5700.2002000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2817,1804.1999500,-1539.1999500,5699.4238300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2828,1806.5999800,-1535.9000200,5701.2998000,0.0000000,0.0000000,164.5000000); //
	CreateDynamicObject(2894,1799.8000500,-1523.0999800,5700.4101600,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2286,1806.0000000,-1513.8000500,5701.3999000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2279,1806.6999500,-1523.6899400,5701.2998000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2275,1811.5999800,-1523.5999800,5701.1001000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2261,1814.5000000,-1520.3000500,5701.0000000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(3944,1799.6462400,-1540.9202900,5698.9086900,0.0000000,0.0000000,180.2417000); //
	CreateDynamicObject(19396,1799.2611100,-1527.4864500,5701.1835900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2922,1799.1657700,-1528.4068600,5701.0214800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2922,1799.3457000,-1526.4658200,5701.0214800,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(19396,1795.5124500,-1525.2501200,5701.1635700,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2924,1812.5658000,-1545.8657200,5700.6303700,0.0000000,0.0000000,0.0000000); //
    //=== [cellblock] ===
 	new prison[15];
 	prison[0] = CreateDynamicObject(978, 1264.47217, 1676.77148, 1004.81158,   0.00000, 0.00000, -90.00000);
	prison[1] = CreateDynamicObject(978, 1261.15710, 1676.89990, 1004.81158,   0.00000, 0.00000, 90.00000);
	prison[2] = CreateDynamicObject(978, 1264.47217, 1686.15747, 1004.81158,   0.00000, 0.00000, -90.00000);
	prison[3] = CreateDynamicObject(978, 1264.47217, 1695.54150, 1004.81158,   0.00000, 0.00000, -90.00000);
	prison[4] = CreateDynamicObject(978, 1264.47021, 1704.92554, 1004.81158,   0.00000, 0.00000, -90.00000);
	prison[5] = CreateDynamicObject(978, 1264.47278, 1714.30908, 1004.81158,   0.00000, 0.00000, -90.00000);
	prison[6] = CreateDynamicObject(978, 1264.47278, 1723.69507, 1004.81158,   0.00000, 0.00000, -90.00000);
	prison[7] = CreateDynamicObject(978, 1264.47217, 1733.05725, 1004.81158,   0.00000, 0.00000, -90.00000);
	prison[8] = CreateDynamicObject(978, 1261.15710, 1686.25989, 1004.81158,   0.00000, 0.00000, 90.00000);
	prison[9] = CreateDynamicObject(978, 1261.15710, 1695.64392, 1004.81158,   0.00000, 0.00000, 90.00000);
	prison[10] = CreateDynamicObject(978, 1261.15710, 1705.01587, 1004.81158,   0.00000, 0.00000, 90.00000);
	prison[11] = CreateDynamicObject(978, 1261.15710, 1714.39355, 1004.81158,   0.00000, 0.00000, 90.00000);
	prison[12] = CreateDynamicObject(978, 1261.15588, 1723.77844, 1004.81158,   0.00000, 0.00000, 90.00000);
	prison[13] = CreateDynamicObject(978, 1261.15710, 1733.16394, 1004.81158,   0.00000, 0.00000, 90.00000);
	for(new i=0; i < 13; i++)
    {
    	SetDynamicObjectMaterial(prison[i], 0, 19304, "pd_jail_door_top01", "pd_jail_door_top01" , 0);
    }
    //===
    new cityhalltexture = CreateDynamicObject(18753, 1260.20508, 1683.83276, 1000.00000,   0.00000, 0.00000, 0.00000);
 	SetDynamicObjectMaterial(cityhalltexture, 0, 10377, "cityhall_sfs", "ws_stationfloor", 0);
	//===
 	new prisonshit1 = CreateDynamicObject(19459, 1256.36755, 1685.00256, 1002.22595,   0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(prisonshit1, 0, 3278, "des_breakwin1", "des_warewin", 0);
	new prisonshit2 = CreateDynamicObject(19459, 1269.19885, 1684.99988, 1002.20197,   0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(prisonshit2, 0, 3278, "des_breakwin1", "des_warewin", 0);
	//===
	new prisonshit3 = CreateDynamicObject(18753, 1260.20508, 1683.83276, 1007.84888,   0.00000, 0.00000, 0.00000);
 	SetDynamicObjectMaterial(prisonshit3, 0, 3759, "venchouse_lax", "Heliconcrete", 0);
	new prisonshit4 = CreateDynamicObject(18753, 1335.27856, 1686.80811, 1004.43896,   0.00000, 0.00000, 0.00000);
 	SetDynamicObjectMaterial(prisonshit4, 0, 3759, "venchouse_lax", "Heliconcrete", 0);
	new prisonshit5 = CreateDynamicObject(18753, 1190.37988, 1680.04932, 1004.47333,   0.00000, 0.00000, 0.00000);
 	SetDynamicObjectMaterial(prisonshit5, 0, 3759, "venchouse_lax", "Heliconcrete", 0);
	//===
	new prisonshit6 = CreateDynamicObject(2509, 1253.06104, 1677.47144, 1001.89032,   0.00000, 90.00000, 90.00000);
 	SetDynamicObjectMaterial(prisonshit6, 0, 8536, "tikisign", "tikisign01_128", 0);
 	//===
	CreateDynamicObject(19459, 1269.47168, 1734.76575, 1002.23700,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19395, 1272.82935, 1729.76282, 1002.23798,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1272.82886, 1727.35461, 1002.24072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1272.82971, 1724.94568, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1272.82898, 1722.53577, 1002.24072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1272.82971, 1720.13171, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1272.82898, 1717.72375, 1002.24072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1272.82971, 1715.31665, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1272.82898, 1712.90881, 1002.24072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1272.82971, 1710.51672, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1272.82959, 1708.10901, 1002.24072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1272.82971, 1705.70276, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1272.82959, 1703.29395, 1002.24072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1272.82825, 1700.90466, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1272.82959, 1698.49988, 1002.24072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1272.82971, 1696.10278, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1272.82959, 1693.69995, 1002.24072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1272.82996, 1691.29199, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1272.82886, 1688.88269, 1002.24072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1272.82837, 1686.47766, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1263.02234, 1736.45898, 1002.23700,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1256.32935, 1734.59888, 1002.23700,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19395, 1252.95081, 1729.63586, 1002.23798,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1252.95068, 1727.22986, 1002.23871,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1252.95093, 1724.82727, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1252.95068, 1722.42993, 1002.23871,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1252.95093, 1720.02734, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1252.95068, 1717.62988, 1002.23871,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1252.95093, 1715.22729, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1252.95068, 1712.82996, 1002.23871,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1252.95093, 1710.42725, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1252.95068, 1708.03003, 1002.23871,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1252.95093, 1705.62720, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1252.95068, 1703.22998, 1002.23871,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1252.95093, 1700.82715, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1252.95068, 1698.53003, 1002.23871,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1252.95093, 1696.12708, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1252.95068, 1693.72998, 1002.23871,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1252.95093, 1691.32715, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19440, 1252.95068, 1688.93005, 1002.23871,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1252.95093, 1686.52710, 1002.23999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1256.36755, 1685.00256, 999.93555,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1269.19885, 1684.99988, 999.93549,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19395, 1262.79114, 1685.00134, 1002.21399,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1263.02234, 1736.45898, 1005.72400,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1272.82886, 1680.05420, 1002.23700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1256.32935, 1734.59888, 1005.72198,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19459, 1269.47168, 1734.76575, 1005.72095,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19459, 1272.82837, 1670.42639, 1002.23700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1264.91064, 1672.17358, 1002.18622,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1260.47803, 1672.17200, 1002.18622,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1257.86816, 1669.12378, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1252.95020, 1680.10461, 1002.23901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1252.94885, 1670.46997, 1002.23901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1277.13513, 1669.12378, 1002.23260,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1267.50195, 1669.12366, 1002.23340,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1267.50195, 1669.12366, 1005.72906,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1257.86816, 1669.12585, 1005.73102,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1277.13513, 1669.12378, 1005.72638,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1272.82837, 1670.42639, 1005.72937,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1272.82886, 1680.05420, 1005.72968,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1248.23572, 1669.12378, 1002.23413,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1248.23572, 1669.12378, 1005.72894,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1252.94885, 1670.46997, 1005.72821,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1252.95020, 1680.10461, 1005.72534,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1269.22278, 1684.87964, 999.93549,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1256.36914, 1684.89319, 999.93549,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1256.37012, 1685.10889, 999.93555,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19395, 1262.79248, 1685.13269, 1002.21399,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19395, 1262.78967, 1685.01526, 1002.21399,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19395, 1262.79175, 1684.89392, 1002.21399,   0.00000, 0.00000, 90.00000);
 	CreateDynamicObject(19459, 1269.21362, 1685.12988, 999.93549,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19449, 1262.81909, 1731.56641, 1003.88324,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 1262.81946, 1721.93225, 1003.88318,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 1262.81946, 1712.33228, 1003.88318,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 1262.81946, 1702.73230, 1003.88318,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 1262.81946, 1693.13232, 1003.88318,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 1262.81946, 1683.53235, 1003.88318,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(14877, 1259.40747, 1670.59778, 1001.85760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19449, 1262.81921, 1673.90881, 1003.88318,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(14877, 1266.06470, 1670.59863, 1001.85925,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3440, 1262.69885, 1696.38586, 1001.44159,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3440, 1262.64771, 1706.39819, 1001.44159,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3440, 1262.64954, 1716.34131, 1001.44159,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3440, 1262.62537, 1726.38660, 1001.44159,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19304, 1262.84436, 1669.26660, 1004.55676,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1269.20361, 1685.06226, 1005.71552,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1269.21484, 1684.99988, 999.93549,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1256.37195, 1685.05798, 1005.71582,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1272.83008, 1689.81543, 1005.72968,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1272.83008, 1699.44543, 1005.72968,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1272.83008, 1709.07544, 1005.72968,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1272.83008, 1718.70544, 1005.72968,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1272.83008, 1728.33545, 1005.72968,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 1262.79248, 1685.05872, 1005.71472,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1252.95264, 1689.95117, 1005.72528,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1252.95264, 1699.58325, 1005.72528,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1252.95264, 1709.21924, 1005.72528,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1252.95264, 1718.85315, 1005.72528,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1252.95056, 1728.48523, 1005.72528,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1248.19958, 1685.16992, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1247.66821, 1690.02991, 1002.23901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1247.66443, 1699.66235, 1002.23901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1247.66370, 1709.29504, 1002.23901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1247.66138, 1718.92700, 1002.23901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1247.66504, 1728.55835, 1002.23901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1248.07813, 1731.27832, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1277.64026, 1685.30676, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1277.63086, 1690.07104, 1002.23901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1277.63354, 1699.70654, 1002.23901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1277.63318, 1709.33643, 1002.23901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1277.63562, 1718.97046, 1002.23901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1277.63831, 1728.60364, 1002.23901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 1277.68433, 1731.42395, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1248.07300, 1726.37268, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1248.11084, 1721.47290, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1248.06580, 1716.80127, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1248.21851, 1712.00598, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1248.10852, 1707.21729, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1248.20874, 1702.49475, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1248.04504, 1697.67578, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1248.08032, 1692.87439, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1248.16956, 1688.68579, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1277.79529, 1726.95557, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1277.50818, 1722.35303, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1277.72534, 1717.95544, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1277.65308, 1713.44873, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1277.55896, 1708.97314, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1277.63171, 1704.05579, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1277.57520, 1699.31836, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1277.61987, 1694.47998, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 1277.70264, 1689.70166, 1002.23419,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1249.04309, 1685.91406, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1249.06335, 1689.47485, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1249.06348, 1693.65479, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1249.06348, 1698.45483, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1249.06348, 1703.25476, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1249.06348, 1708.05481, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1249.06348, 1712.85486, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1249.06348, 1717.65479, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1249.06348, 1722.30481, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1249.06348, 1727.25476, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1276.16553, 1686.10205, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1276.16553, 1690.45215, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1276.16553, 1695.25208, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1276.16553, 1700.20215, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1276.16553, 1704.85205, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1276.16553, 1709.80212, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1276.16553, 1714.15210, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1276.16260, 1718.71204, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1276.16260, 1723.06201, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1276.16260, 1727.71204, 1000.91553,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(9819, 1257.07703, 1683.55408, 1001.06879,   0.00000, 0.00000, 89.75999);
	CreateDynamicObject(1714, 1254.94714, 1683.10107, 1000.48590,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1714, 1258.23267, 1683.10974, 1000.48590,   0.00000, 0.00000, 187.67998);
	CreateDynamicObject(9818, 1271.49146, 1674.65259, 1002.10919,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14782, 1266.26587, 1672.62561, 1001.55322,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2502, 1261.84314, 1672.36072, 1000.46790,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2502, 1260.48169, 1672.35852, 1000.46790,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2502, 1259.11963, 1672.36108, 1000.46790,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2502, 1257.75671, 1672.35999, 1000.46790,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(18637, 1261.68958, 1672.59644, 1001.96796,   60.12002, -3.36000, -175.85995);
	CreateDynamicObject(18637, 1260.90588, 1672.56396, 1001.96796,   60.12002, -3.36000, -175.85995);
	CreateDynamicObject(18637, 1260.06396, 1672.55542, 1001.96796,   60.12002, -3.36000, -175.8599);
	CreateDynamicObject(19142, 1259.22253, 1672.46240, 1001.77917,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19142, 1258.73926, 1672.45642, 1001.77917,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19142, 1258.23584, 1672.48462, 1001.77917,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19141, 1257.88733, 1672.40210, 1002.12402,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19141, 1257.56702, 1672.40698, 1002.12402,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19141, 1257.24670, 1672.39282, 1002.12402,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(349, 1257.30200, 1672.34766, 1001.48560,   40.00000, 0.00000, 12.05999);
	CreateDynamicObject(349, 1257.29651, 1672.49329, 1001.48560,   40.00000, 0.00000, 12.05999);
	CreateDynamicObject(349, 1257.27124, 1672.64380, 1001.48560,   40.00000, 0.00000, 12.05999);
	CreateDynamicObject(358, 1256.91406, 1672.56958, 1001.68292,   -6.48000, -60.36000, -81.35999);
	CreateDynamicObject(19459, 1252.88696, 1679.99011, 1002.23413,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1703, 1257.11572, 1678.48425, 1000.51282,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1704, 1255.72498, 1675.53162, 1000.49432,   0.00000, 0.00000, -161.75998);
	CreateDynamicObject(1704, 1254.89270, 1679.35168, 1000.49432,   0.00000, 0.00000, -378.06015);
	CreateDynamicObject(2001, 1256.64539, 1679.13831, 1000.57526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 1256.48364, 1675.60730, 1000.57526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1822, 1254.54224, 1676.91138, 1000.50586,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2602, 1248.11768, 1688.04321, 1001.11157,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 1248.11768, 1692.24316, 1001.11157,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 1248.11768, 1697.04321, 1001.11157,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 1248.11768, 1701.84314, 1001.11157,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 1248.11768, 1706.54321, 1001.11157,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 1248.11768, 1711.34314, 1001.11157,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 1248.11768, 1715.94324, 1001.11157,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 1248.11768, 1720.74316, 1001.11157,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 1248.11768, 1725.54321, 1001.11157,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 1248.11768, 1730.54321, 1001.11157,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, 1277.18250, 1730.76001, 1001.11157,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 1277.18250, 1725.95996, 1001.11157,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 1277.18250, 1721.35999, 1001.11157,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 1277.18250, 1717.16003, 1001.11157,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 1277.18250, 1712.56006, 1001.11157,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 1277.18250, 1707.95996, 1001.11157,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 1277.18250, 1703.16003, 1001.11157,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 1277.18250, 1698.35999, 1001.11157,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 1277.18250, 1693.56006, 1001.11157,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2602, 1277.18250, 1688.76001, 1001.11157,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1491, 1262.01501, 1685.07690, 1003.96722,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1495, 1262.02051, 1684.87659, 1000.48352,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19303, 1252.96667, 1686.61829, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1252.99243, 1691.44055, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1252.94165, 1696.22180, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1252.95007, 1700.94287, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1253.00623, 1705.74329, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1252.94275, 1710.56421, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1252.97986, 1715.34583, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1252.99268, 1720.14026, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1252.99365, 1724.93127, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1252.96021, 1729.74646, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1272.80518, 1729.85645, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1272.77258, 1725.03638, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1272.80139, 1720.23547, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1272.81213, 1715.46326, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1272.77673, 1710.63623, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1272.78394, 1705.81555, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1272.77173, 1700.99561, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1272.80005, 1696.23413, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1272.78687, 1691.39905, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19303, 1272.79675, 1686.60339, 1001.73492,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1968, 1262.56189, 1698.83875, 1001.01532,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1968, 1262.58228, 1703.17542, 1001.01532,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1968, 1262.54944, 1718.97595, 1001.01532,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1968, 1262.65552, 1723.43640, 1001.01532,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1616, 1272.34705, 1685.60962, 1004.88586,   0.00000, 0.00000, -22.62000);
	CreateDynamicObject(1616, 1253.18250, 1685.47852, 1004.88586,   0.00000, 0.00000, -103.80003);
	CreateDynamicObject(1620, 1253.03564, 1712.88989, 1002.99060,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1620, 1272.72705, 1712.44666, 1003.08630,   0.00000, 0.00000, 0.00000);
}

stock Objects_Prison()
{

    CreateDynamicObject(1278, 229.90096, 1368.96594, 23.32740,   0.00000, 0.00000, 220.00000);
	CreateDynamicObject(1278, 200.74687, 1368.64319, 23.32740,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1278, 165.18126, 1376.34033, 23.32740,   0.00000, 0.00000, 150.00000);
	CreateDynamicObject(1278, 177.82100, 1440.04126, 23.32740,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1278, 224.96089, 1439.91064, 23.32740,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1278, 274.66998, 1421.92847, 23.32740,   0.00000, 0.00000, 300.00000);
	CreateDynamicObject(1278, 122.27402, 1401.62268, 23.32740,   0.00000, 0.00000, 120.00000);
	CreateDynamicObject(1278, 121.71516, 1440.38428, 23.32740,   0.00000, 0.00000, 40.00000);

	//Helipad
	CreateDynamicObject(3934, 263.38199, 1382.63379, 23.58800,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3109, 250.77750, 1383.13220, 24.77640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19124, 274.09549, 1371.32324, 24.19493,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 253.04935, 1371.26794, 24.19493,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 252.99965, 1392.70959, 24.19493,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 274.11551, 1392.69324, 24.19493,   0.00000, 0.00000, 0.00000);

	CreateDynamicObject(3636, 401.63470, 1430.83179, 13.91010,   -2.44900, 0.79400, 0.00000);
	CreateDynamicObject(2774, 288.42181, 1420.14966, 8.99200,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19313, 280.73251, 1420.65112, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 273.66440, 1427.60815, 8.86000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 273.66440, 1441.59253, 8.86000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 232.71010, 1439.51099, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 218.71750, 1439.51099, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 184.82860, 1439.51099, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 170.84010, 1439.51099, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 136.91161, 1439.51099, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 127.59380, 1439.50647, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 120.60090, 1432.50391, 8.86000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 120.61320, 1418.53784, 8.86000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 120.61320, 1404.55750, 8.86000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 120.61320, 1390.57666, 8.86000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 120.61320, 1376.60352, 8.86000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 120.61320, 1362.59875, 8.86000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2774, 288.42181, 1400.35864, 8.99200,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(2774, 273.68338, 1413.10034, 8.40500,   44.32500, 90.00000, 90.00000);
	CreateDynamicObject(19313, 273.66440, 1413.58960, 8.86000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 273.66241, 1399.62964, 8.86000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3998, 250.5902, 1383.93469, 15.86240,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 231.12820, 1348.60974, 11.45120,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 231.12820, 1373.50317, 11.45119,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 266.45618, 1392.07166, 12.91330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 264.77591, 1392.09949, 12.91330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 120.61320, 1362.59875, 15.43390,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 120.61320, 1376.60352, 15.43390,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 120.61320, 1390.57666, 15.43390,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 120.61320, 1404.55750, 15.43390,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 120.61320, 1418.53784, 15.43390,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 120.60090, 1432.50391, 15.43390,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 127.59380, 1439.50647, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 136.91161, 1439.51099, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 170.84010, 1439.51099, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 184.82860, 1439.51099, 0.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 184.82860, 1439.51099, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 218.71750, 1439.51099, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 232.71010, 1439.51099, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 273.66440, 1441.59253, 15.43390,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 273.66440, 1427.60815, 15.43390,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 273.66440, 1413.58960, 15.43390,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 273.66241, 1399.62964, 15.43390,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 280.73251, 1420.65112, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 127.63920, 1402.47144, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 141.68280, 1402.47485, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 127.63920, 1402.47144, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 141.68280, 1402.47485, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 152.80748, 1402.46436, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 152.80750, 1402.46436, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 224.08275, 1341.65161, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 210.08070, 1341.64966, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 196.03830, 1341.64966, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 189.04291, 1348.67053, 8.86000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 181.95216, 1369.68909, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 167.93201, 1369.68713, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 167.93201, 1369.68713, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 181.95219, 1369.68909, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 189.04289, 1348.67053, 15.43390,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 196.03830, 1341.64966, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 210.08070, 1341.64966, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 224.08270, 1341.65161, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 266.65228, 1448.68750, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 266.65231, 1448.68750, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 253.24706, 1448.69482, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 253.24710, 1448.69482, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 166.33110, 1369.70410, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 166.33110, 1369.70410, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 231.15221, 1378.30518, 11.45120,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 231.12820, 1348.60974, 18.01870,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 231.18027, 1362.62976, 18.01870,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 231.12820, 1376.63184, 18.01870,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 231.15221, 1378.30518, 18.01870,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 249.09987, 1395.66016, 10.81643,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 144.01550, 1433.23865, 7.84330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 144.01550, 1423.60559, 7.84330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 144.01550, 1413.97095, 7.84330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 144.01550, 1407.29395, 7.84530,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(946, 133.94099, 1405.53662, 11.74820,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(946, 133.94099, 1436.98035, 11.75420,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(946, 192.15331, 1394.54370, 11.75420,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(946, 192.15327, 1415.97351, 11.75420,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(16101, 124.67510, 1430.52795, 2.66450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 121.50750, 1430.53333, 2.04530,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 124.69012, 1411.44495, 2.66450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 121.52267, 1411.42480, 2.01386,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 124.80370, 1422.46643, 2.66450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 124.80370, 1425.06714, 2.66450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 124.80370, 1417.00623, 2.66450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 124.80370, 1419.72461, 2.66450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 124.80369, 1414.12524, 2.66450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 124.80370, 1427.62610, 2.66450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1368, 121.81980, 1429.13477, 10.24290,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 121.81980, 1426.59399, 10.24290,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 121.81980, 1424.05383, 10.24290,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 121.81980, 1421.51306, 10.24290,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 121.81980, 1418.97241, 10.24290,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 121.81980, 1416.43298, 10.24290,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 121.81980, 1413.89294, 10.24290,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 121.81980, 1412.79272, 10.24090,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3819, 148.02538, 1430.57410, 10.56690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3819, 148.02541, 1412.24792, 10.56690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 133.75110, 1421.10522, 7.84730,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 256.09412, 1416.68701, 10.81640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 256.09021, 1402.67493, 10.81640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 259.53851, 1416.68701, 10.81640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 259.53851, 1402.67493, 10.81640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 259.53851, 1388.71472, 10.81640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 259.53134, 1385.30688, 10.81640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19304, 257.82379, 1423.68518, 12.65040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19303, 258.70190, 1423.68518, 10.82450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 256.96381, 1423.68518, 10.82450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19304, 257.82181, 1423.68604, 13.45540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19087, 243.86713, 1409.75989, 11.82390,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(16101, 241.42200, 1409.74902, 1.03310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 243.83760, 1409.74902, 1.55447,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19087, 241.42929, 1412.25928, 11.51171,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(16101, 241.41301, 1412.28894, 0.71990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 238.44328, 1409.49829, 4.53515,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 233.55949, 1409.49829, 4.53520,   0.00000, 0.00000, -0.12000);
	CreateDynamicObject(19087, 238.47841, 1409.50061, 15.41054,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19087, 236.02180, 1409.49976, 15.41050,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19087, 235.13200, 1409.49976, 15.41050,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19088, 235.13200, 1409.49976, 12.56050,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19087, 235.13300, 1409.49988, 14.97250,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19087, 236.88100, 1409.49976, 15.41050,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19087, 236.88200, 1409.49988, 14.97250,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19088, 236.88100, 1409.49976, 12.56050,   0.00000, 0.00000, 100.00000);
	CreateDynamicObject(2629, 232.45370, 1396.74707, 9.56030,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2629, 235.83270, 1396.74707, 9.56030,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2628, 239.51656, 1396.91650, 9.56030,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2628, 242.37840, 1396.91650, 9.56030,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2628, 246.40311, 1396.91650, 9.56030,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19087, 243.85231, 1409.78259, 12.43094,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(16101, 243.83659, 1407.32373, 1.55450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14791, 221.89018, 1409.56616, 10.71730,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3819, 222.00067, 1416.85522, 10.56690,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3819, 222.00070, 1401.17529, 10.56690,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(14401, 158.21140, 1389.36743, 9.85860,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(14401, 158.21140, 1382.26062, 9.85860,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(14401, 199.27879, 1451.74060, 9.85860,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19313, 196.08022, 1369.65076, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 210.08054, 1369.65601, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 224.14120, 1369.71680, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 196.08020, 1369.65076, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 210.08051, 1369.65601, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 224.14120, 1369.71680, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 259.54727, 1430.67126, 10.81640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 259.54489, 1444.65137, 10.81640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 259.52869, 1444.99170, 10.81640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3279, 225.11710, 1453.37585, 9.57495,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3279, 177.97411, 1453.37585, 9.57490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3279, 131.18930, 1453.37585, 9.57490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3279, 196.86661, 1362.67029, 9.57490,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3819, 192.97433, 1384.39124, 10.56690,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3279, 277.74667, 1462.05188, 9.57495,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3881, 290.71954, 1403.95178, 7.91466,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3881, 290.71951, 1403.95178, 11.62820,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(966, 287.82001, 1406.73767, 9.38020,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(995, 288.36459, 1414.8303, 10.02890,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19357, 230.36552, 1344.86133, 7.83630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 227.24139, 1344.86133, 7.83630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 224.30040, 1344.86133, 7.83630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 221.12010, 1344.86133, 7.83630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 217.97820, 1344.86133, 7.83630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 214.87869, 1344.86133, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 211.89880, 1344.86133, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 208.79820, 1344.86133, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 205.73801, 1344.86133, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 202.65770, 1344.86133, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 199.62410, 1344.86133, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19445, 205.85971, 1365.02515, 7.84330,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(19445, 210.96640, 1365.02515, 7.84330,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(19445, 216.35660, 1365.02515, 7.84330,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(19445, 194.27516, 1355.55566, 7.84330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 194.25998, 1351.51111, 7.84330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 182.06242, 1355.64258, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 168.05917, 1355.65137, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 166.29829, 1355.63013, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 182.06239, 1355.64258, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 168.05920, 1355.65137, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 166.29829, 1355.63013, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 209.59576, 1416.09485, 2.11692,   0.00000, 0.00000, -0.12000);
	CreateDynamicObject(16101, 206.47256, 1416.10486, 2.63112,   0.00000, 0.00000, -0.12000);
	CreateDynamicObject(16101, 206.48151, 1396.98914, 2.63112,   0.00000, 0.00000, -0.12000);
	CreateDynamicObject(16101, 209.60202, 1396.99182, 2.02408,   0.00000, 0.00000, -0.12000);
	CreateDynamicObject(16101, 206.36301, 1400.21082, 2.63110,   0.00000, 0.00000, -0.12000);
	CreateDynamicObject(16101, 206.36301, 1403.31189, 2.63110,   0.00000, 0.00000, -0.12000);
	CreateDynamicObject(16101, 206.36301, 1406.55176, 2.63110,   0.00000, 0.00000, -0.12000);
	CreateDynamicObject(16101, 206.36298, 1409.67273, 2.63112,   0.00000, 0.00000, -0.12000);
	CreateDynamicObject(16101, 206.36301, 1412.97266, 2.63110,   0.00000, 0.00000, -0.12000);
	CreateDynamicObject(1368, 209.32401, 1414.75415, 10.22490,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1368, 209.32401, 1412.21338, 10.22490,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1368, 209.32401, 1409.67358, 10.22490,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1368, 209.32401, 1407.13293, 10.22490,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1368, 209.32401, 1404.59229, 10.22490,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1368, 209.32401, 1402.05164, 10.22490,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1368, 209.32401, 1399.51184, 10.22490,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1368, 209.32600, 1398.23071, 10.22290,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1344, 144.56853, 1379.93787, 10.38110,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1344, 144.56850, 1382.72021, 10.38110,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1344, 144.57619, 1385.46326, 10.38110,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1448, 143.55380, 1376.95752, 9.65270,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1448, 143.55380, 1376.95752, 9.79170,   0.00000, 0.00000, 342.68130);
	CreateDynamicObject(1448, 143.55380, 1376.95752, 9.93170,   0.00000, 0.00000, 14.36257);
	CreateDynamicObject(1438, 143.05623, 1386.77234, 9.58368,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 152.35753, 1402.46692, 8.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 152.35750, 1402.46692, 15.43390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 249.71919, 1368.81921, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 246.57690, 1368.81921, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 243.57091, 1368.81921, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 240.60989, 1368.81921, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 237.58971, 1368.81921, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 255.62720, 1368.81921, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 258.84741, 1368.81921, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 261.94739, 1368.81921, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 265.06699, 1368.81921, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 268.22720, 1368.81921, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19357, 271.58710, 1368.81921, 7.83630,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(19445, 231.60339, 1348.26526, 8.14430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19381, 236.77890, 1348.25146, 9.81440,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19445, 236.50990, 1352.99475, 8.14430,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 246.13570, 1352.99475, 8.14430,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19381, 247.27850, 1348.25146, 9.81440,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19445, 236.33180, 1343.50916, 8.14330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 245.96671, 1343.50916, 8.14330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19381, 257.77829, 1348.25146, 9.81440,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 268.27979, 1348.25146, 9.81440,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19445, 255.60130, 1343.50916, 8.14330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 265.23401, 1343.50916, 8.14330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 268.72629, 1343.51025, 8.14430,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 273.45529, 1348.26318, 8.14330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 255.76910, 1352.99475, 8.14430,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 265.40240, 1352.99475, 8.14430,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 268.60251, 1352.99585, 8.14530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 174.64439, 1397.55090, 7.84830,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 174.64540, 1391.74231, 7.84730,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 179.55141, 1387.01550, 7.84730,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 189.18491, 1387.01550, 7.84730,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 198.81950, 1387.01550, 7.84730,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 203.72580, 1391.74316, 7.84730,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 203.72580, 1401.37756, 7.84730,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 203.72580, 1411.01184, 7.84930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 203.72580, 1414.61157, 7.84330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 200.05220, 1414.51978, 7.84330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 200.05220, 1404.88550, 7.84330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 200.05220, 1395.25098, 7.84330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 195.14500, 1390.67908, 7.84330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 185.51089, 1390.67908, 7.84330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 183.03030, 1390.67810, 7.84230,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 178.32050, 1395.58594, 7.84230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 178.32150, 1397.62573, 7.84130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(617, 240.74400, 1347.65723, 9.58400,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(615, 267.28683, 1347.63049, 9.58400,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8623, 237.49951, 1348.04504, 10.50238,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8623, 248.02049, 1348.10803, 10.50238,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8623, 258.78787, 1347.87732, 10.50238,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8623, 267.66467, 1348.14111, 10.50238,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8990, 265.79184, 1347.00977, 10.40348,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8990, 253.82431, 1346.98291, 10.40348,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8990, 239.91698, 1346.90771, 10.40348,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8990, 239.52455, 1348.38513, 10.40348,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8990, 252.48409, 1348.48730, 10.40348,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8990, 265.10614, 1348.68286, 10.40348,   0.00000, 0.00000, 0.72000);

 new siena = CreateObject(19463, 1351.72949, -627.25787, 109.6063,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(siena, 0, 3605, "bevmans01_la", "hottop5d_law", 0);
	 siena = CreateObject(19463, 1342.67224, -630.36151, 109.6063,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(siena, 0, 3605, "bevmans01_la", "hottop5d_law", 0);
	 siena = CreateObject(19463, 1333.57605, -633.48090, 109.6063,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(siena, 0, 3605, "bevmans01_la", "hottop5d_law", 0);
	 siena = CreateObject(19463, 1324.47632, -636.59711, 109.6063,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(siena, 0, 3605, "bevmans01_la", "hottop5d_law", 0);
	 siena = CreateObject(19463, 1357.78955, -630.36041, 109.6063,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(siena, 0, 3605, "bevmans01_la", "hottop5d_law", 0);
	 siena = CreateObject(19371, 1357.94043, -635.49573, 109.6063,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(siena, 0, 3605, "bevmans01_la", "hottop5d_law", 0);
	 siena = CreateObject(19371, 1354.91016, -636.53638, 109.6063,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(siena, 0, 3605, "bevmans01_la", "hottop5d_law", 0);
	 siena = CreateObject(19444, 1352.96082, -637.20093, 109.6063,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(siena, 0, 3605, "bevmans01_la", "hottop5d_law", 0);
	 siena = CreateObject(19463, 1350.57581, -632.83002, 109.6063,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(siena, 0, 3605, "bevmans01_la", "hottop5d_law", 0);
	 siena = CreateObject(19463, 1321.52783, -642.61133, 109.6063,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(siena, 0, 3605, "bevmans01_la", "hottop5d_law", 0);


	new langas =  CreateObject(19463, 1327.57324, -645.53510, 109.6063,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(langas, 0, 1649, "wglass", "carshowwin2", 0);
	 langas = CreateObject(19463, 1336.68726, -642.41779, 109.6063,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(langas, 0, 1649, "wglass", "carshowwin2", 0);
	 langas = CreateObject(19463, 1342.70703, -645.40979, 109.6063,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(langas, 0, 1649, "wglass", "carshowwin2", 0);
	 langas = CreateObject(19463, 1345.82568, -654.50812, 109.6063,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(langas, 0, 1649, "wglass", "carshowwin2", 0);
	 langas = CreateObject(19463, 1348.93884, -663.61133, 109.6063,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(langas, 0, 1649, "wglass", "carshowwin2", 0);
	 langas = CreateObject(19463, 1354.94360, -666.54651, 109.6063,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(langas, 0, 1649, "wglass", "carshowwin2", 0);
	 langas = CreateObject(19463, 1353.70215, -641.95660, 109.6063,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(langas, 0, 1649, "wglass", "carshowwin2", 0);
	 langas = CreateObject(19463, 1356.80896, -651.02759, 109.6063,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(langas, 0, 1649, "wglass", "carshowwin2", 0);
	 langas = CreateObject(19463, 1359.79980, -659.76788, 109.6063,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(langas, 0, 1649, "wglass", "carshowwin2", 0);
	 langas = CreateObject(19463, 1356.89648, -665.89380, 109.60630,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(langas, 0, 1649, "wglass", "carshowwin2", 0);


	CreateObject(19362, 1343.11816, -641.93103, 107.76770,   0.00000, 90.00000, 108.91000);
	CreateObject(19377, 1344.08386, -634.42499, 107.76970,   0.00000, 90.00000, 108.91000);
	CreateObject(19377, 1349.29919, -643.69196, 107.76970,   0.00000, 90.00000, 108.91000);
	CreateObject(19377, 1352.69666, -653.60760, 107.76800,   0.00000, 90.00000, 108.91000);
	CreateObject(19377, 1355.21826, -661.01208, 107.76970,   0.00000, 90.00000, 108.91000);
	CreateObject(19377, 1334.98193, -637.54279, 107.76970,   0.00000, 90.00000, 108.91000);
	CreateObject(19377, 1325.87903, -640.65997, 107.76970,   0.00000, 90.00000, 108.91000);
	CreateObject(19377, 1353.17627, -631.31342, 107.76970,   0.00000, 90.00000, 108.91000);

	new grindys = CreateObject(9339, 1346.87866, -655.59729, 107.70920,   0.00000, 90.00000, 198.84000);
	SetObjectMaterial(grindys, 0, 19377, "all_walls", "la_carp3", 0);
	 grindys = CreateObject(9339, 1348.18018, -655.16180, 107.70920,   0.00000, 90.00000, 198.84000);
	SetObjectMaterial(grindys, 0, 19377, "all_walls", "la_carp3", 0);
	 grindys = CreateObject(9339, 1356.58179, -652.22491, 107.73000,   0.00000, 90.00000, 198.84000);
	SetObjectMaterial(grindys, 0, 19377, "all_walls", "la_carp3", 0);
	 grindys = CreateObject(9339, 1355.33728, -652.64612, 107.72900,   0.00000, 90.00000, 198.84000);
	SetObjectMaterial(grindys, 0, 19377, "all_walls", "la_carp3", 0);

	CreateObject(2957, 1353.67993, -626.53503, 109.51650,   0.00000, 0.00000, 18.91000); // garazas
	new langai = CreateObject(3034, 1344.42456, -629.6680, 109.76450,   0.00000, 0.00000, -161.08009);
	SetObjectMaterial(langai, 0, 13816, "lahills_safe1", "sw_mansionwin", 0);
	 langai = CreateObject(3034, 1324.60486, -636.4600, 109.76450,   0.00000, 0.00000, -161.08009);
	SetObjectMaterial(langai, 0, 13816, "lahills_safe1", "sw_mansionwin", 0);

	CreateObject(19380, 1353.51648, -640.88464, 102.90112,   0.00000, 0.00000, 18.91000);
	CreateObject(19380, 1356.52808, -649.70923, 102.66208,   3.00000, 0.00000, 18.91000);
	CreateObject(19380, 1359.75525, -648.66266, 103.80364,   3.00000, -40.00000, 18.91000);
	CreateObject(19380, 1357.05615, -639.74811, 104.37506,   0.00000, -45.00000, 18.91000);


	new zeme = CreateObject(19454, 1325.43091, -652.71588, 107.76850,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19454, 1328.53613, -661.81567, 107.76900,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19454, 1335.71228, -662.59485, 107.76900,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19454, 1328.01514, -647.32159, 107.76900,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19454, 1337.11621, -644.20313, 107.76900,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19454, 1342.15161, -649.39398, 107.76900,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19454, 1345.27112, -658.48041, 107.76900,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19454, 1318.69263, -640.41241, 107.76850,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19454, 1319.82581, -643.72467, 107.76850,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19454, 1320.95679, -647.03571, 107.76850,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19435, 1323.10449, -648.85083, 107.76694,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19362, 1347.35278, -664.54962, 107.76900,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19362, 1348.40417, -667.55786, 107.76900,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19435, 1360.07324, -665.72076, 107.76900,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19435, 1356.77710, -666.84277, 107.76900,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19435, 1353.46875, -667.97272, 107.76900,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19435, 1350.17102, -669.10291, 107.7686,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19435, 1349.06946, -669.49060, 107.7682,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19454, 1334.59192, -659.28137, 107.76900,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19454, 1343.73755, -659.84052, 107.76000,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19454, 1342.64478, -656.52338, 107.76000,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);


	new baseinas1 = CreateObject(19454, 1340.96875, -651.07190, 106.08510,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(baseinas1, 0, 3741, "cehillhse14", "swimpoolside1_128", 0);
	 baseinas1 = CreateObject(19454, 1338.11658, -645.62561, 106.08510,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(baseinas1, 0, 3741, "cehillhse14", "swimpoolside1_128", 0);
	 baseinas1 = CreateObject(19454, 1327.02783, -652.16162, 106.08510,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(baseinas1, 0, 3741, "cehillhse14", "swimpoolside1_128", 0);
	 baseinas1 = CreateObject(19454, 1329.12012, -648.70813, 106.08510,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(baseinas1, 0, 3741, "cehillhse14", "swimpoolside1_128", 0);
	 baseinas1 = CreateObject(19454, 1330.12488, -661.16699, 106.08510,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(baseinas1, 0, 3741, "cehillhse14", "swimpoolside1_128", 0);
	 baseinas1 = CreateObject(19454, 1333.45056, -657.88391, 106.08510,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(baseinas1, 0, 3741, "cehillhse14", "swimpoolside1_128", 0);
	 baseinas1 = CreateObject(19454, 1342.51184, -654.80786, 106.08511,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(baseinas1, 0, 3741, "cehillhse14", "swimpoolside1_128", 0);
	 baseinas1 = CreateObject(19454, 1338.28162, -643.23834, 106.08510,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(baseinas1, 0, 3741, "cehillhse14", "swimpoolside1_128", 0);

	new baseinas = CreateObject(19377, 1331.82495, -653.05011, 106.53000,   6.00000, 90.00000, 108.91000);
	SetObjectMaterial(baseinas, 0, 5886, "garag3_lawn", "bluestucco1", 0);
	 baseinas = CreateObject(19377, 1340.97009, -650.12524, 106.03224,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(baseinas, 0, 5886, "garag3_lawn", "bluestucco1", 0);


	CreateObject(3440, 1314.28650, -640.83667, 109.2044,   0.00000, 0.00000, 0.00000);
	CreateObject(3440, 1317.25610, -649.29834, 109.2044,   0.00000, 0.00000, 0.00000);
	CreateObject(3440, 1321.43091, -647.92926, 109.2044,   0.00000, 0.00000, 0.00000);
	CreateObject(985, 1315.29785, -643.86572, 103.53806,   0.00000, 0.00000, 108.91000);
	CreateObject(985, 1316.10437, -646.22632, 103.53806,   0.00000, 0.00000, 108.91000);

	CreateObject(3440, 1348.34668, -668.79193, 105.35404,   0.00000, 0.00000, 0.00000);
	CreateObject(3440, 1348.34668, -668.79193, 100.61307,   0.00000, 0.00000, 0.00000);
	CreateObject(3440, 1360.04358, -664.78571, 105.35400,   0.00000, 0.00000, 0.00000);
	CreateObject(3440, 1360.04358, -664.78571, 100.60738,   0.00000, 0.00000, 0.00000);
	CreateObject(3440, 1360.04358, -664.78571, 95.85506,   0.00000, 0.00000, 0.00000);

	CreateObject(1688, 1326.51428, -642.44318, 113.34540,   0.00000, 0.00000, 108.91000);
	CreateObject(1688, 1330.82959, -640.92072, 113.34540,   0.00000, 0.00000, 108.91000);
	CreateObject(1691, 1349.84387, -652.02814, 112.78610,   0.00000, 0.00000, 108.91000);
	CreateObject(1691, 1353.43335, -661.45190, 112.78610,   0.00000, 0.00000, 108.91000);
	CreateObject(1688, 1347.06140, -644.09058, 113.34540,   0.00000, 0.00000, 18.91000);
	CreateObject(1690, 1344.20984, -636.40399, 113.02720,   0.00000, 0.00000, 108.91000);
	//roof bits

	//inside
	//doors
	CreateObject(1536, 1330.96497, -634.46136, 107.86320,   0.00000, 0.00000, 18.91000);
	CreateObject(1536, 1333.80615, -633.44873, 107.86320,   0.00000, 0.00000, 198.91000);
	//bed
	CreateObject(2566, 1325.03491, -644.87598, 108.27074,   0.00000, 0.00000, 108.91100);
	//some walls
	new vidus = CreateObject(19362, 1330.73950, -639.56750, 109.60400,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(vidus, 0, 9132, "triadcasino", "imperial03_128", 0);
	 vidus = CreateObject(19362, 1329.71228, -636.54718, 109.60400,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(vidus, 0, 9132, "triadcasino", "imperial03_128", 0);
	 vidus = CreateObject(19389, 1331.74255, -642.48480, 109.60400,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(vidus, 0, 9132, "triadcasino", "imperial03_128", 0);
	 vidus = CreateObject(19362, 1322.75354, -641.06305, 109.60400,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(vidus, 0, 9132, "triadcasino", "imperial03_128", 0);
	 vidus = CreateObject(19362, 1325.79004, -640.02502, 109.60400,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(vidus, 0, 9132, "triadcasino", "imperial03_128", 0);
	 vidus = CreateObject(19389, 1328.77173, -639.00299, 109.60400,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(vidus, 0, 9132, "triadcasino", "imperial03_128", 0);
	 vidus = CreateObject(19435, 1331.08044, -635.25842, 109.60400,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(vidus, 0, 9132, "triadcasino", "imperial03_128", 0);
	 vidus = CreateObject(19435, 1332.15356, -638.40747, 109.60400,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(vidus, 0, 9132, "triadcasino", "imperial03_128", 0);
	 vidus = CreateObject(19435, 1331.56653, -639.36224, 109.60400,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(vidus, 0, 9132, "triadcasino", "imperial03_128", 0);


	//bathroom
	CreateDynamicObject(2522,1321.1213400,-639.7324800,107.8131900,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2517,1322.4443400,-640.5053700,107.8234000,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2521,1324.6980000,-637.0836200,107.8241300,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2524,1325.2138700,-639.4334100,107.8081000,0.0000000,0.0000000,198.9100000); //
	CreateDynamicObject(2141,1325.3067600,-639.7308300,106.1472000,0.0000000,0.0000000,198.9100000); //
	CreateDynamicObject(2141,1324.3689000,-640.0503500,106.1472000,0.0000000,0.0000000,198.9100000); //
	CreateDynamicObject(18001,1325.2274200,-640.0988200,106.2781000,0.0000000,90.0000000,198.9100000); //
	CreateDynamicObject(18001,1324.6805400,-640.2821000,106.2781000,0.0000000,90.0000000,198.9100000); //
	CreateDynamicObject(2141,1323.8048100,-637.4132100,106.1472000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2141,1322.8780500,-637.7299800,106.1472000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(1620,1328.2386500,-635.3864100,110.8739500,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2140,1326.5249000,-636.4762000,107.8105000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2140,1327.3501000,-636.1868900,107.8105000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(14455,1326.6486800,-639.9109500,109.4681200,0.0000000,0.0000000,198.9100000); //
	CreateDynamicObject(2140,1330.1522200,-639.3720700,107.8347000,0.0000000,0.0000000,288.9100000); //
	CreateDynamicObject(2140,1330.4477500,-640.2606200,107.8347000,0.0000000,0.0000000,288.9100000); //
	CreateDynamicObject(2140,1330.7500000,-641.1530200,107.8347000,0.0000000,0.0000000,288.9100000); //
	CreateDynamicObject(1491,1328.0212400,-639.2725200,107.8484000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(1491,1332.0022000,-643.1879900,107.8484000,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2475,1330.6881100,-639.0615200,108.3619700,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2475,1330.1713900,-637.5459000,108.3619700,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2397,1329.8817100,-636.0646400,109.1785800,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2397,1329.6477100,-635.4598400,109.1785800,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2357,1342.1928700,-635.3010900,108.1760000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2123,1341.3986800,-637.1852400,108.4824100,0.0000000,0.0000000,280.8699600); //
	CreateDynamicObject(2123,1343.5031700,-636.3326400,108.4824100,0.0000000,0.0000000,291.0699200); //
	CreateDynamicObject(2123,1342.5435800,-633.4598400,108.4824100,0.0000000,0.0000000,464.7700500); //
	CreateDynamicObject(2123,1340.6234100,-634.1818200,108.4824100,0.0000000,0.0000000,474.9100000); //
	CreateDynamicObject(2123,1339.1760300,-636.3208600,108.4824100,0.0000000,0.0000000,558.1900600); //
	CreateDynamicObject(2123,1345.1228000,-634.2735000,108.4824100,0.0000000,0.0000000,735.4301800); //
	CreateDynamicObject(19435,1318.4914600,-639.3419800,107.7116700,25.0000000,90.0000000,18.9100000); //
	CreateDynamicObject(19435,1315.8260500,-640.2654400,107.7116700,25.0000000,90.0000000,18.9100000); //
	CreateDynamicObject(1598,1338.2307100,-648.8516800,106.4404400,0.0000000,90.0000000,97.2600000); //
	CreateDynamicObject(1641,1340.6326900,-657.2460300,107.8649700,0.0000000,0.0000000,-148.7399900); //
	CreateDynamicObject(1255,1332.6229200,-660.8518700,108.3734400,0.0000000,0.0000000,104.7600100); //
	CreateDynamicObject(1255,1337.4014900,-659.2391400,108.3734400,0.0000000,0.0000000,111.3600000); //
	CreateDynamicObject(1255,1335.2131300,-660.1214600,108.3734400,0.0000000,0.0000000,110.7600300); //
	CreateDynamicObject(1744,1339.2611100,-631.4304800,109.4322500,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2305,1348.6336700,-628.8897700,107.8467300,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2138,1347.7211900,-629.2138100,107.8467000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2138,1346.7933300,-629.5286900,107.8467000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2137,1345.8656000,-629.8435100,107.8467000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2140,1344.9401900,-630.1620500,107.8467000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2140,1344.0773900,-630.4572100,107.8467000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2137,1348.9375000,-629.7728300,107.8467000,0.0000000,0.0000000,288.9100000); //
	CreateDynamicObject(2135,1349.2603800,-630.7085000,107.8467000,0.0000000,0.0000000,288.9100000); //
	CreateDynamicObject(2137,1349.5686000,-631.6289700,107.8467000,0.0000000,0.0000000,288.9100000); //
	CreateDynamicObject(2136,1349.9018600,-632.5551100,107.8467000,0.0000000,0.0000000,288.9100000); //
	CreateDynamicObject(2303,1350.5400400,-634.4279800,107.8467000,0.0000000,0.0000000,288.9100000); //
	CreateDynamicObject(19325,1335.2994400,-636.4297500,109.4213000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(19461,1334.8023700,-635.0468800,106.2197000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(19172,1336.6807900,-632.5622600,109.8162000,2.5000000,0.0000000,18.9100000); //
	CreateDynamicObject(2710,1323.0501700,-645.4138200,108.4147600,0.0000000,0.0000000,120.4799900); //
	CreateDynamicObject(2332,1329.8533900,-635.6741900,108.0708000,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2315,1353.1568600,-664.1619900,107.8357000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2315,1355.4466600,-663.3787200,107.8357000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(1703,1351.0813000,-661.1032100,107.8246000,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(1703,1350.8027300,-658.3519300,107.8246000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(1703,1353.1433100,-657.5428500,107.8246000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(1823,1352.3095700,-660.2913200,107.8221800,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2010,1350.7833300,-667.3423500,107.8536900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2010,1360.6318400,-664.0534700,107.8536900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2253,1340.5101300,-631.3577900,110.0374800,0.0000000,0.0000000,18.9599800); //
	CreateDynamicObject(2253,1339.2783200,-631.7626300,110.0374800,0.0000000,0.0000000,18.9599800); //
	CreateDynamicObject(1792,1355.2196000,-663.5583500,108.3176000,0.0000000,0.0000000,-158.7600100); //
	CreateDynamicObject(2344,1352.2471900,-659.4465300,107.8936200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2404,1323.1839600,-646.7097200,109.0507000,-10.0000000,0.0000000,110.0000000); //
	CreateDynamicObject(2384,1330.5765400,-638.3190300,109.2735500,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2384,1330.7457300,-638.7998000,109.2735500,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2389,1329.8817100,-636.0645800,110.2429000,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2389,1329.7193600,-635.5401000,110.2429000,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2384,1330.5465100,-638.3082900,109.9632000,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2384,1330.0604200,-636.7861900,109.9632000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2384,1330.5465100,-638.3082900,110.1687900,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2384,1330.2779500,-637.6591200,110.6485000,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2663,1345.7450000,-629.7014800,109.1273800,0.0000000,0.0000000,44.3400000); //
	CreateDynamicObject(2750,1324.0151400,-640.1858500,108.6852700,90.0000000,90.0000000,-21.4200000); //
	CreateDynamicObject(2822,1350.0920400,-632.7642200,108.9022500,0.0000000,0.0000000,42.5400000); //
	CreateDynamicObject(2707,1347.5959500,-628.9273700,109.4181100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2707,1346.6469700,-629.2903400,109.4181100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2707,1349.8535200,-631.5919200,109.4181100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2230,1357.5239300,-662.6881700,107.7851900,0.0000000,0.0000000,210.7198900); //
	CreateDynamicObject(2230,1351.9931600,-664.5988800,107.7851900,0.0000000,0.0000000,191.2798500); //
	CreateDynamicObject(2099,1351.9226100,-640.6734600,107.8778800,0.0000000,0.0000000,-53.7000200); //
	CreateDynamicObject(14455,1349.6807900,-649.2225300,109.5271000,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(14455,1348.6182900,-644.9944500,109.5271000,0.0000000,0.0000000,288.9100000); //
	CreateDynamicObject(1703,1354.3803700,-647.1076000,107.8525300,0.0000000,0.0000000,-85.0200000); //
	CreateDynamicObject(1703,1352.5302700,-642.7548800,107.8525300,0.0000000,0.0000000,-66.8399800); //
	CreateDynamicObject(1823,1353.2777100,-646.4355500,107.8359000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2894,1353.5620100,-645.8220800,108.3303100,0.0000000,0.0000000,-18.8400000); //
	CreateDynamicObject(1734,1359.7148400,-663.5993700,111.3707000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(1734,1351.3064000,-666.3900800,111.3707000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(1734,1350.3807400,-650.7456700,111.3707000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(1734,1348.0483400,-644.0332600,111.3707000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(1734,1342.1157200,-635.2935800,111.3707000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(1734,1333.3742700,-637.0482800,111.3707000,0.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(19466,1332.1763900,-638.2119800,110.3167700,90.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(19466,1332.1763900,-638.2119800,108.0778000,90.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(19466,1331.1960400,-635.4383500,108.0778000,90.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(19466,1331.1960400,-635.4383500,110.3167700,90.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(2108,1331.8118900,-640.4061900,107.8375200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2108,1321.9550800,-641.9414100,107.8375200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2108,1325.6893300,-636.7134400,107.8375200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2251,1334.9956100,-637.3278200,108.6941200,0.0000000,0.0000000,-49.5000000); //
	CreateDynamicObject(2245,1342.0614000,-635.3695100,108.8749200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2251,1328.6728500,-635.7584800,108.7042200,0.0000000,0.0000000,45.1799900); //
	CreateDynamicObject(19463,1348.8170200,-646.0606100,106.4133100,90.0000000,90.0000000,108.9100000); //
	CreateDynamicObject(19463,1349.5127000,-648.1521000,106.4133100,90.0000000,90.0000000,108.9100000); //


	new stogas2 = CreateObject(3095, 1327.15515, -639.55048, 111.35400,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1318.64441, -642.47223, 111.35400,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1335.66162, -636.64050, 111.35400,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1344.14258, -633.73492, 111.35400,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1352.64575, -630.81830, 111.35440,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1353.45789, -630.54327, 111.35450,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1354.11560, -632.48218, 111.35400,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1348.79919, -640.88092, 111.35450,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1351.70728, -649.38599, 111.35400,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1354.62036, -657.87708, 111.35400,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1356.54126, -663.48499, 111.35460,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1351.84106, -665.08832, 111.35440,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1348.93994, -656.62952, 111.35440,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1346.04565, -648.16962, 111.35440,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1343.13416, -639.67462, 111.35440,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1334.05713, -640.90973, 111.35440,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1325.55176, -643.82758, 111.35460,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1319.79016, -645.80078, 111.35440,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);

	new stogas1 = CreateObject(3095, 1320.52893, -643.71973, 111.85020,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas1, 0, 1649, "lahills_safe1", "black16", 0);
	SetObjectMaterial(stogas1, 1, 1649, "lahills_safe1", "black16", 0);
	 stogas1 = CreateObject(3095, 1329.00940, -640.81458, 111.85020,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas1, 0, 1649, "lahills_safe1", "black16", 0);
	SetObjectMaterial(stogas1, 1, 1649, "lahills_safe1", "black16", 0);
	 stogas1 = CreateObject(3095, 1337.49438, -637.90509, 111.85020,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas1, 0, 1649, "lahills_safe1", "black16", 0);
	SetObjectMaterial(stogas1, 1, 1649, "lahills_safe1", "black16", 0);
	 stogas1 = CreateObject(3095, 1346.00415, -634.99109, 111.85020,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas1, 0, 1649, "lahills_safe1", "black16", 0);
	SetObjectMaterial(stogas1, 1, 1649, "lahills_safe1", "black16", 0);
	 stogas1 = CreateObject(3095, 1353.98779, -632.25958, 111.84970,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas1, 0, 1649, "lahills_safe1", "black16", 0);
	SetObjectMaterial(stogas1, 1, 1649, "lahills_safe1", "black16", 0);
	 stogas1 = CreateObject(3095, 1347.01416, -644.15277, 111.85020,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas1, 0, 1649, "lahills_safe1", "black16", 0);
	SetObjectMaterial(stogas1, 1, 1649, "lahills_safe1", "black16", 0);
	 stogas1 = CreateObject(3095, 1349.90710, -652.65710, 111.85020,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas1, 0, 1649, "lahills_safe1", "black16", 0);
	SetObjectMaterial(stogas1, 1, 1649, "lahills_safe1", "black16", 0);
	 stogas1 = CreateObject(3095, 1352.84229, -661.16467, 111.85020,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas1, 0, 1649, "lahills_safe1", "black16", 0);
	SetObjectMaterial(stogas1, 1, 1649, "lahills_safe1", "black16", 0);

	 stogas2 = CreateObject(3095, 1356.29504, -663.12512, 107.29700,   0.00000, 0.00000, 108.85000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1350.44141, -665.13629, 107.29730,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1353.43579, -654.64453, 107.29700,   0.00000, 0.00000, 108.85000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);
	 stogas2 = CreateObject(3095, 1347.54895, -656.63202, 107.29400,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(stogas2, 0, 1649, "lahills_safe1", "gry_roof", 0);
	SetObjectMaterial(stogas2, 1, 1649, "lahills_safe1", "gry_roof", 0);

	new asfaltas = CreateObject(19377, 1342.98975, -624.74341, 108.04065,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(asfaltas, 0, 13673, "mullho03a_lahills", "crazypave", 0);
	 asfaltas = CreateObject(19377, 1333.85059, -627.77753, 108.04060,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(asfaltas, 0, 13673, "mullho03a_lahills", "crazypave", 0);
	 asfaltas = CreateObject(19377, 1324.74109, -630.90271, 108.04065,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(asfaltas, 0, 13673, "mullho03a_lahills", "crazypave", 0);
	 asfaltas = CreateObject(19377, 1316.80383, -633.65991, 108.04000,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(asfaltas, 0, 13673, "mullho03a_lahills", "crazypave", 0);
	 asfaltas = CreateObject(19435, 1312.71753, -638.74036, 107.70667,   -25.00000, 90.00000, 108.91000);
	SetObjectMaterial(asfaltas, 0, 13673, "mullho03a_lahills", "crazypave", 0);
	 asfaltas = CreateObject(19435, 1311.58850, -635.44299, 107.70667,   -25.00000, 90.00000, 108.91000);
	SetObjectMaterial(asfaltas, 0, 13673, "mullho03a_lahills", "crazypave", 0);
	 asfaltas = CreateObject(19435, 1310.46191, -632.15686, 107.70952,   -25.00000, 90.00000, 108.91000);
	SetObjectMaterial(asfaltas, 0, 13673, "mullho03a_lahills", "crazypave", 0);
	 asfaltas = CreateObject(19435, 1309.70801, -628.91449, 107.86024,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(asfaltas, 0, 13673, "mullho03a_lahills", "crazypave", 0);
	 asfaltas = CreateObject(19435, 1310.03406, -632.04309, 107.86024,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(asfaltas, 0, 13673, "mullho03a_lahills", "crazypave", 0);
	 asfaltas = CreateObject(19435, 1310.88513, -634.46466, 107.72129,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(asfaltas, 0, 13673, "mullho03a_lahills", "crazypave", 0);
	 asfaltas = CreateObject(19435, 1308.84070, -629.63879, 107.82546,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(asfaltas, 0, 13673, "mullho03a_lahills", "crazypave", 0);
	 asfaltas = CreateObject(19435, 1312.79590, -638.70819, 107.57568,   -25.00000, 90.00000, 108.91000);
	SetObjectMaterial(asfaltas, 0, 13673, "mullho03a_lahills", "crazypave", 0);

	CreateDynamicObject(812,1335.2611100,-611.3142700,109.0788800,0.0000000,0.0000000,60.4200000); //
	CreateDynamicObject(869,1331.2642800,-613.9875500,107.8150500,-1.5000000,-2.7000000,0.0000000); //
	CreateDynamicObject(870,1326.7783200,-616.5172700,108.0459000,-3.9000000,-1.2600000,0.0000000); //
	CreateDynamicObject(812,1327.9000200,-614.6857300,108.0119000,0.0000000,0.0000000,8.3400000); //
	CreateDynamicObject(813,1322.6129200,-617.8250700,109.5110500,11.1600100,-24.9000100,-97.4399800); //
	CreateDynamicObject(620,1333.4643600,-615.0120800,107.3345100,0.0000000,0.0000000,67.3200100); //
	CreateDynamicObject(620,1314.4217500,-623.4388400,107.3345100,0.0000000,0.0000000,-1.1399900); //
	CreateDynamicObject(620,1294.2995600,-631.7595800,104.1806300,0.0000000,0.0000000,-1.1399900); //
	CreateDynamicObject(620,1270.4353000,-625.5445600,103.2799500,0.0000000,0.0000000,114.0000000); //
	CreateDynamicObject(620,1268.6104700,-655.4753400,102.2963600,0.0000000,0.0000000,61.6800100); //
	CreateDynamicObject(656,1269.6212200,-671.3184800,101.0807100,356.8584000,0.0000000,3.1415900); //
	CreateDynamicObject(656,1267.7253400,-639.8880000,102.7857600,356.8584000,0.0000000,-99.1584200); //
	CreateDynamicObject(813,1309.6942100,-625.2416400,109.5110500,11.1600100,-24.9000100,-97.4399800); //
	CreateDynamicObject(813,1306.0996100,-635.5332000,109.7535400,11.1600100,-24.9000100,-127.6200000); //
	CreateDynamicObject(812,1309.4112500,-639.8723100,109.2572800,0.0000000,0.0000000,33.6000000); //
	CreateDynamicObject(1428,1338.3985600,-645.6947600,106.6050700,15.0000000,0.0000000,18.9100000); //
	CreateDynamicObject(1428,1338.1849400,-645.0335100,106.7377900,40.0000000,0.0000000,18.9100000); //

	 zeme = CreateObject(19435, 1338.91553, -651.78986, 107.76690,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19435, 1337.94226, -656.79816, 107.76690,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19435, 1336.82336, -653.51654, 107.76690,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);
	 zeme = CreateObject(19435, 1342.22375, -650.65326, 107.76690,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(zeme, 0, 13816, "lahills_safe1", "la_tilered", 0);


	 baseinas1 = CreateObject(19454, 1337.14355, -656.63263, 106.08510,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(baseinas1, 0, 3741, "cehillhse14", "swimpoolside1_128", 0);
	 baseinas1 = CreateObject(19454, 1340.10510, -650.62891, 106.08510,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(baseinas1, 0, 3741, "cehillhse14", "swimpoolside1_128", 0);
	 baseinas1 = CreateObject(19454, 1340.97351, -651.84637, 106.08510,   0.00000, 0.00000, 108.91000);
	SetObjectMaterial(baseinas1, 0, 3741, "cehillhse14", "swimpoolside1_128", 0);
	 baseinas1 = CreateObject(19454, 1338.73340, -656.81757, 106.08510,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(baseinas1, 0, 3741, "cehillhse14", "swimpoolside1_128", 0);

	 baseinas = CreateObject(19454, 1341.26001, -653.53516, 106.84497,   0.00000, 90.00000, 108.91000);
	SetObjectMaterial(baseinas, 0, 5886, "garag3_lawn", "bluestucco1", 0);
	 baseinas = CreateObject(19435, 1328.77002, -654.09363, 108.28758,   0.00000, 90.00000, 18.91000);
	SetObjectMaterial(baseinas, 0, 5886, "garag3_lawn", "bluestucco1", 0);
	 baseinas = CreateObject(19435, 1327.16382, -654.63507, 106.62153,   0.00000, 0.00000, 18.91000);
	SetObjectMaterial(baseinas, 0, 5886, "garag3_lawn", "bluestucco1", 0);

	CreateDynamicObject(19435,1339.4465300,-652.0833100,107.2106900,0.0000000,90.0000000,18.9100000); //
	CreateDynamicObject(19435,1337.7205800,-654.8761600,107.2107000,0.0000000,90.0000000,108.9100000); //
	CreateDynamicObject(3803,1320.9743700,-637.6300000,110.7220000,0.0000000,0.0000000,108.9100000); //
	CreateDynamicObject(2707,1348.5369900,-629.0255700,109.4181100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(870,1306.0692100,-629.7204000,107.7208600,-2.8200000,-11.6400100,0.0000000); //
	CreateDynamicObject(812,1308.2271700,-629.3277000,108.5577300,0.0000000,0.0000000,128.7000000); //


	//Cell blocks & Public building
    new cblock = CreateObject(5738, 250.59111, 1457.35632, 13.04880,   0.00000, 0.00000, 90.65300, 600);
    SetObjectMaterial(cblock, 4, 4079, "civic04_lan", "twintWin1_LAn"); //Windows
	SetObjectMaterial(cblock, 3, 4079, "civic04_lan", "twintWall2_LAn"); //Roof corner
	cblock = CreateObject(5738, 202.69530, 1457.38159, 13.04880,   0.00000, 0.00000, 90.65300, 600);
	SetObjectMaterial(cblock, 4, 4079, "civic04_lan", "twintWin1_LAn" ); //Windows
	SetObjectMaterial(cblock, 3, 4079, "civic04_lan", "twintWall2_LAn"); //Roof corner
	cblock = CreateObject(5738, 154.79713, 1457.36853, 13.04880,   0.00000, 0.00000, 90.65300, 600);
	SetObjectMaterial(cblock, 4, 4079, "civic04_lan", "twintWin1_LAn" ); //Windows
	SetObjectMaterial(cblock, 3, 4079, "civic04_lan", "twintWall2_LAn"); //Roof corner
	cblock = CreateObject(5738, 153.92700, 1364.09631, 13.04880,   0.00000, 0.00000, 0.65300, 600);
	SetObjectMaterial(cblock, 4, 3998, "civic04_lan", "twintWin2_LAn" ); //Windows
	SetObjectMaterial(cblock, 3, 3998, "civic04_lan", "twintconc_LAn"); //Roof corner
	cblock = CreateObject(5738, 156.25397, 1383.78210, 5.84841,   0.00000, 0.00000, 90.65300, 600);
	SetObjectMaterial(cblock, 4, 4079, "civic04_lan", "twintWin1_LAn" ); //Windows
	SetObjectMaterial(cblock, 3, 4079, "civic04_lan", "twintWall2_LAn"); //Roof corner

	new grass = CreateDynamicObject(8661, 239.54919, 1429.49438, 9.58680,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(grass, 0, 17877, "landhub", "dirtKB_64HV");
	grass = CreateDynamicObject(8661, 199.54930, 1429.49438, 9.58680,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(grass, 0, 17877, "landhub", "dirtKB_64HV");
	grass = CreateDynamicObject(8661, 163.92641, 1429.49438, 9.58880,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(grass, 0, 17877, "landhub", "dirtKB_64HV");
	grass = CreateDynamicObject(8661, 163.92641, 1412.45239, 9.59080,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(grass, 0, 17877, "landhub", "dirtKB_64HV");
	grass = CreateDynamicObject(8661, 246.07111, 1419.51489, -10.39270,   -0.09000, 90.00000, 270.00000);
	SetDynamicObjectMaterial(grass, 0, 17877, "landhub", "dirtKB_64HV");
	grass = CreateDynamicObject(19381, 225.75252, 1378.60693, 9.81440,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(grass, 0, 17877, "landhub", "dirtKB_64HV");
	grass = CreateDynamicObject(19381, 225.75369, 1388.24182, 9.81440,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(grass, 0, 17877, "landhub", "dirtKB_64HV");
	grass = CreateDynamicObject(19381, 215.25240, 1388.24182, 9.81440,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(grass, 0, 17877, "landhub", "dirtKB_64HV");
	grass = CreateDynamicObject(19381, 215.25240, 1378.60693, 9.81440,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(grass, 0, 17877, "landhub", "dirtKB_64HV");

	//Roads
	new road = CreateDynamicObject(19447, 153.82552, 1433.24878, 9.50910,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 153.82550, 1423.61450, 9.50910,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 153.82550, 1413.98083, 9.50910,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 153.82550, 1404.34619, 9.50910,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 201.88910, 1433.24878, 9.50910,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 249.70700, 1433.24475, 9.50310,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 160.39301, 1426.67969, 9.50910,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 170.02370, 1426.67969, 9.50910,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 179.65800, 1426.67969, 9.50910,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 189.29311, 1426.67969, 9.50910,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 198.92720, 1426.67969, 9.50910,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 208.56310, 1426.67969, 9.50910,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 218.19791, 1426.67969, 9.50910,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 227.83200, 1426.67969, 9.50910,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 237.46550, 1426.67969, 9.50910,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 246.64120, 1426.67773, 9.50710,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 257.82697, 1396.96594, 9.50910,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 257.82700, 1406.60217, 9.50910,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 257.82700, 1416.23669, 9.50910,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 251.65305, 1422.43433, 9.40710,   0.00000, 90.00000, 51.63934);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 254.75819, 1426.67773, 9.50510,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 257.82700, 1422.33044, 9.50710,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 206.90739, 1436.32495, 9.50710,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 160.39191, 1404.88257, 9.50910,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 249.70700, 1424.24158, 9.50510,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 201.88910, 1424.30957, 9.50710,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 148.91389, 1421.23462, 9.50710,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 201.88910, 1414.67603, 9.50710,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 201.88910, 1405.04333, 9.50710,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 201.88910, 1395.40613, 9.50710,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 198.82060, 1388.83875, 9.50710,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 189.18770, 1388.83875, 9.50710,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 179.55310, 1388.83875, 9.50710,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 176.48511, 1395.40625, 9.50710,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 170.02319, 1404.88257, 9.50910,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");
	road = CreateDynamicObject(19447, 176.48309, 1401.81384, 9.50810,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(road, 0, 4079, "civic04_lan", "plaintarmac1");

	CreateDynamicObject(19445, 170.10970, 1402.45764, 7.84630,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 179.25240, 1402.45764, 7.84530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 183.98109, 1407.36255, 7.84530,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 183.97910, 1414.69836, 7.84330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 188.88429, 1419.42615, 7.84330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 198.51880, 1419.42615, 7.84330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 208.15269, 1419.42615, 7.84330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 217.78529, 1419.42615, 7.84330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 227.41811, 1419.42615, 7.84330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 237.05209, 1419.42615, 7.84330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 246.68600, 1419.42615, 7.84330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 251.54640, 1419.42712, 7.84130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2913, 235.35320, 1396.20483, 10.53980,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2913, 231.97060, 1396.22119, 10.53980,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2915, 234.32182, 1400.07874, 9.70230,   0.00000, 0.00000, 5.00000);
	CreateDynamicObject(2916, 237.37637, 1399.65674, 9.70230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2915, 236.32271, 1400.50977, 9.70230,   0.00000, 0.00000, 10.00000);
	CreateDynamicObject(19445, 259.48611, 1433.24548, 7.84330,   0.00000, 0.00000, 0.00000);

	//Pit
    new pit = CreateDynamicObject(19447, 121.50720, 1416.17822, 11.00700,   0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "twintWall2_LAn");
	pit = CreateDynamicObject(19447, 121.50717, 1425.81262, 11.00700,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "twintWall2_LAn");
	pit = CreateDynamicObject(19447, 123.18810, 1425.81262, 13.31820,   0.00000, -100.00000, 0.00000); //Roof
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "plaintarmac1");
	pit = CreateDynamicObject(19447, 123.18810, 1416.17822, 13.31820,   0.00000, -100.00000, 0.00000); //Roof
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "plaintarmac1");
	pit = CreateDynamicObject(19447, 257.81140, 1418.93103, 14.04940,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "twintWall2_LAn");
	pit = CreateDynamicObject(19447, 257.81140, 1409.29639, 14.04940,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "twintWall2_LAn");
	pit = CreateDynamicObject(19447, 257.81140, 1399.66150, 14.04940,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "twintWall2_LAn");
	pit = CreateDynamicObject(19447, 257.81140, 1390.02795, 14.04940,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "twintWall2_LAn");
	pit = CreateDynamicObject(19447, 254.31754, 1390.86194, 14.04940,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "twintWall2_LAn");
	pit = CreateDynamicObject(19447, 209.63820, 1411.35950, 11.00700,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "twintWall2_LAn");
	pit = CreateDynamicObject(19447, 209.63820, 1401.72534, 11.00700,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "twintWall2_LAn");
	pit = CreateDynamicObject(19447, 208.03281, 1401.72534, 13.27660,   0.00000, 100.00000, 0.00000); //Roof
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "plaintarmac1");
	pit = CreateDynamicObject(19447, 208.03191, 1411.35950, 13.27660,   0.00000, 100.00000, 0.00000); //Roof
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "plaintarmac1");
	pit = CreateDynamicObject(19355, 123.20170, 1411.45129, 11.00700,   0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "twintWall2_LAn");
	pit = CreateDynamicObject(19355, 123.20320, 1430.54175, 11.00700,   0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "twintWall2_LAn");
	pit = CreateDynamicObject(19355, 207.94400, 1416.08618, 11.00700,   0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "twintWall2_LAn");
	pit = CreateDynamicObject(19355, 207.94400, 1396.99658, 11.00700,   0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(pit, 0, 4079, "civic04_lan", "twintWall2_LAn");

	//Sign
	new sign = CreateDynamicObject(19447, 288.09763, 1415.01477, 19.62394,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(sign, 0, 2774, "airp_prop", "cj_white_wall2");
	sign = CreateDynamicObject(19447, 288.09830, 1405.38281, 19.62390,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(sign, 0, 2774, "airp_prop", "cj_white_wall2");
	sign = CreateDynamicObject(19447, 287.9496, 1415.01477, 19.62394,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(sign, 0, 2774, "airp_prop", "cj_white_wall2");
	sign = CreateDynamicObject(19447, 287.9496, 1405.38281, 19.62390,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(sign, 0, 2774, "airp_prop", "cj_white_wall2");

	//Gates
	prisonGate1 = CreateDynamicObject(988, 231.21869, 1358.35840, 10.61700,   0.00000, 0.00000, 90.00000);
	prisonGate2 = CreateDynamicObject(988, 231.21870, 1363.84888, 10.61700,   0.00000, 0.00000, 90.00000);
	prisonBarrier = CreateDynamicObject(968, 287.81442, 1406.71497, 10.1428,   0.00000, 90.00000, 90.00000); //Barrier

	//Doors
	CreateDynamicObject(3109, 154.61871, 1438.06323, 10.77020,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3109, 202.56454, 1438.04517, 10.77020,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3109, 250.45157, 1438.03906, 10.77020,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3109, 153.9786, 1403.04712, 10.77020,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3109, 173.22977, 1366.2065, 10.77020,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3109, 139.8456, 1374.94885, 10.77020,   0.00000, 0.00000, 270.00000);

	//Grass area
	CreateDynamicObject(19445, 216.55380, 1373.85425, 8.14430,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 214.81371, 1373.85315, 8.14530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 210.06380, 1378.58154, 8.14630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 210.06380, 1388.20105, 8.14630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 214.79179, 1393.00476, 8.14530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 224.42570, 1393.00476, 8.14530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 234.05949, 1393.00476, 8.14530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3694, 226.09680, 1382.20959, 10.23200,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(617, 211.71286, 1383.07922, 9.58400,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(337, 221.29813, 1387.08557, 10.63570,   180.00000, -20.00000, 180.00000);
	CreateDynamicObject(337, 218.26199, 1386.34912, 9.98550,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(617, 226.17700, 1383.07922, 9.58400,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19445, 226.18690, 1373.85425, 8.14430,   0.00000, 0.00000, 90.00000);

	new SAHFP = CreateDynamicObject(10184, 288.0661, 1410.3990, 19.4953, 0.0000, 0.0000, 179.9874);
	SetDynamicObjectMaterialText(SAHFP, 0, "CALIFORNIA HIGH FACILITY PRISON", 120, "Times New Roman", 31, 1, -8092540, 0, 1);
}

stock Objects_PrivateGarages() {
	CreateDynamicObject(8948, 1698.90, -2088.78, 13.86,   0.00, 0.00, 90.00);
	CreateDynamicObject(11313, 2505.47, -1690.98, 14.27,   0.00, 0.00, 90.00);
	CreateDynamicObject(11313, 322.39, -1769.04, 4.95,   0.00, 0.00, 90.00);
	CreateDynamicObject(13028, 1353.49, -626.67, 109.57,   0.00, 0.00, 109.00);
	CreateDynamicObject(5856, -2454.64, -127.25, 26.97,   0.00, 0.00, 0.00);
	CreateDynamicObject(5856, -2454.64, -123.04, 26.97,   0.00, 0.00, 0.40);
	CreateDynamicObject(5856, -2454.64, -118.86, 26.97,   0.00, 0.00, 0.50);
	CreateDynamicObject(3037, -2026.85, 129.49, 30.05,   0.00, 0.00, 90.00);
	CreateDynamicObject(11102, -2038.64, 178.77, 29.89,   0.00, 0.00, 180.00);
	CreateDynamicObject(11102, -2038.64, 170.24, 29.89,   0.00, 0.00, 180.00);
	CreateDynamicObject(11102, -2052.67, 150.43, 29.89,   0.00, 0.00, 90.00);
	CreateDynamicObject(9093, -2105.24, 897.08, 77.44,   0.00, 0.00, -90.00);
	CreateDynamicObject(11359, 2449.58, 697.60, 10.91,   0.00, 0.00, 90.00);
	CreateDynamicObject(5856, 2006.06, 2303.34, 10.84,   0.00, 0.00, 90.22);
	CreateDynamicObject(11327, 1278.86, 2529.88, 11.22,   0.00, 0.00, 180.00);
	CreateDynamicObject(11359, 1408.66, 1902.12, 10.91,   0.00, 0.00, 90.00);
	CreateDynamicObject(11359, -360.72, 1194.22, 20.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(3294, 429.98, 2546.54, 17.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(8948, 2231.26, 168.74, 27.34,   0.00, 0.00, 90.00);
	CreateDynamicObject(11360, 785.96, -492.84, 16.87,   0.00, 0.00, 90.00);
}

stock Objects_Transfender() {
    CreateDynamicObject(11389,10.0766001,-12.9689999,1054.1950684,0.0000000,0.0000000,0.0000000); //object(hubinterior_sfs) (1)
	CreateObject(11387,19.4414062,-28.9687500,1054.4160156,0.0000000,0.0000000,0.0000000); //object(oldgarage_sfs) (2)
	CreateDynamicObject(11390,10.0195312,-12.9130859,1055.4722900,0.0000000,0.0000000,0.0000000); //object(hubgirders_sfse) (1)
	CreateDynamicObject(11392,11.7257004,-12.2384005,1051.0566406,0.0000000,0.0000000,0.0000000); //object(hubfloorstains_sfse) (1)
	CreateDynamicObject(11393,14.6992188,-18.3593750,1052.5816650,0.0000000,0.0000000,0.0000000); //object(hubprops1_sfs) (1)
	CreateDynamicObject(11391,1.9700000,-21.0750008,1052.3100586,0.0000000,0.0000000,0.0000000); //object(hubprops6_sfse) (2)
	CreateDynamicObject(11102,18.9780006,-0.8000000,1053.2310791,0.0000000,0.0000000,0.0000000); //object(burgalrydoor_sfs) (1)
	CreateDynamicObject(11102,18.9775391,-9.3193359,1053.2310791,0.0000000,0.0000000,0.0000000); //object(burgalrydoor_sfs) (2)
	CreateDynamicObject(11102,5.5000000,-29.0559998,1053.2299805,0.0000000,0.0000000,270.0000000); //object(burgalrydoor_sfs) (3)
	CreateDynamicObject(11388,10.0100002,-12.9684000,1057.8399658,0.0000000,0.0000000,0.0000000); //object(hubintroof_sfse) (1)

	CreateDynamicPickup(1239, 23, 1041.3319, -1027.6871, 32.1016); // Modding Garage @ Temple
    CreateDynamic3DTextLabel("[改装店]", COLOR_DARKYELLOW, 1041.3319, -1027.6871, 32.1016 + 0.6, 15, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1); // Modding Garage @ Temple
}

stock Objects_HospitalInterior() {
	CreateDynamicObject(1999,1503.7299805,-1546.1999512,1969.9200439,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(1523,1512.0478516,-1536.0292969,1969.8399658,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1523,1499.2460938,-1536.0292969,1969.8399658,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1523,1505.6474609,-1536.0292969,1969.8399658,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1523,1513.6464844,-1556.3349609,1969.8399658,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1499.6999512,-1531.9000244,1970.4000244,0.0000000,0.0000000,209.9981689);
    CreateDynamicObject(1811,1500.0999756,-1553.6999512,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1500.0999756,-1554.5000000,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1500.0999756,-1555.3000488,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1500.0999756,-1556.0999756,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1500.0999756,-1558.8000488,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1500.0999756,-1559.5999756,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1500.0999756,-1560.4000244,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1500.0999756,-1561.1999512,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1500.0999756,-1562.0000000,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1499.3000488,-1562.0000000,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1499.3000488,-1561.1999512,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1499.3000488,-1560.4000244,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1499.3000488,-1559.5999756,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1499.3000488,-1558.8000488,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1499.3000488,-1556.0999756,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1499.3000488,-1555.3000488,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1499.3000488,-1554.5000000,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1499.3000488,-1553.6999512,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1499.3000488,-1552.9000244,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1503.0000000,-1562.0000000,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1503.0000000,-1561.1999512,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1503.0000000,-1560.4000244,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1503.0000000,-1559.5999756,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1503.0000000,-1558.8000488,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1503.0000000,-1556.1999512,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1503.0000000,-1555.4000244,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1503.0000000,-1554.5999756,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1503.0000000,-1553.8000488,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1503.0000000,-1553.0000000,1970.4000244,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1811,1503.8000488,-1553.0000000,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1503.8000488,-1553.8000488,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1503.8000488,-1554.5999756,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1503.8000488,-1555.4000244,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1503.8000488,-1556.1999512,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1503.8000488,-1558.8000488,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1503.8000488,-1559.5999756,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1503.8000488,-1560.4000244,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1503.8000488,-1561.1999512,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(1811,1503.8000488,-1562.0000000,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(2315,1498.9000244,-1552.0000000,1969.8000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2315,1499.0000000,-1563.0999756,1969.8000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2315,1502.6999512,-1563.0999756,1969.8000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2315,1502.5999756,-1552.0000000,1969.8000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2855,1499.4000244,-1552.0000000,1970.3000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2854,1500.1999512,-1552.1999512,1970.3000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2853,1503.3000488,-1552.0000000,1970.3000488,0.0000000,0.0000000,120.0000000);
    CreateDynamicObject(2852,1500.5000000,-1563.0999756,1970.2869873,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(14518,1490.4000244,-1564.0000000,1971.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(14518,1498.6999512,-1564.0000000,1971.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(14518,1492.3000488,-1537.1999512,1971.0999756,0.0000000,0.0000000,312.0000000);
    CreateDynamicObject(1999,1503.7299805,-1548.3000488,1969.9200439,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2253,1504.0000, -1552.0000, 1970.5601,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2253,1502.9000, -1563.2000, 1970.5580,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2205,1503.7010498,-1544.6999512,1969.4000244,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2205,1503.7020264,-1547.0000000,1969.4000244,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2205,1503.6999512,-1549.1800537,1969.4000244,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2205,1503.6999512,-1546.9002686,1969.8000488,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2205,1503.7020264,-1544.6999512,1969.8010254,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2205,1503.7020264,-1549.1800537,1969.8010254,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2205,1503.8010254,-1543.9000244,1969.5300293,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2205,1503.8000488,-1546.0999756,1969.5310059,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2205,1503.7989502,-1548.3000488,1969.5300293,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2315,1497.4000244,-1537.9000244,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(14518,1492.3000488,-1536.0999756,1971.0999756,0.0000000,0.0000000,311.9952393);
    CreateDynamicObject(14518,1492.2998047,-1532.0000000,1971.0999756,0.0000000,0.0000000,311.9952393);
    CreateDynamicObject(2205,1500.1992188,-1530.5996094,1969.8000488,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(14518,1499.4000244,-1519.4000244,1971.0999756,0.0000000,0.0000000,79.9914551);
    CreateDynamicObject(14518,1494.4000244,-1519.4000244,1971.0999756,0.0000000,0.0000000,79.9914551);
    CreateDynamicObject(1811,1500.0996094,-1552.8994141,1970.4000244,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(2190,1500.0000000,-1529.4799805,1969.8000488,0.0000000,90.0000000,90.0000000);
    CreateDynamicObject(2074,1500.0999756,-1529.9000244,1970.9699707,0.0000000,180.0000000,0.0000000);
    CreateDynamicObject(18608,1507.0000000,-1538.5000000,1973.9480,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(18608,1521.8000488,-1543.8000488,1973.9480,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(18608,1521.8000488,-1554.5000000,1973.9480,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(18608,1493.9000244,-1559.9000244,1973.9480,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(18608,1501.8000488,-1554.9000244,1973.9480,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(18608,1492.5999756,-1530.6999512,1973.9480,0.0000000,0.0000000,270.0000000);
    //CreateDynamicObject(18608,1513.9000244,-1530.4000244,1973.9480,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2253,1503.5000000,-1548.5000000,1971.0000000,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1671,1501.5999756,-1530.0000000,1970.3000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2163,1500.3000488,-1526.5000000,1969.8000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2164,1498.5000000,-1526.5000000,1969.8000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2611,1502.7740479,-1530.4000244,1971.5999756,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(14518,1492.3000488,-1530.9000244,1971.0999756,0.0000000,0.0000000,311.9952393);
    CreateDynamicObject(3394,1508.0000000,-1527.0999756,1969.8000488,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(3395,1503.5999756,-1530.5999756,1969.8000488,0.0000000,0.0000000,180.0000000);
    CreateDynamicObject(3396,1504.8299561,-1527.1040039,1969.7989502,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(3397,1509.0999756,-1530.6999512,1969.8000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(3397,1516.0999756,-1530.6999512,1969.8000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(3395,1510.5000000,-1530.5999756,1969.8000488,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(3394,1515.0000000,-1527.0999756,1969.8000488,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(3396,1511.8199463,-1527.0999756,1969.7989502,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(16101,1512.7998047,-1530.0000000,1961.0000000,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(16101,1505.9000244,-1530.0000000,1961.0000000,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1009,1505.9599609,-1529.9899902,1971.5999756,0.0000000,270.0000000,180.0000000);
    CreateDynamicObject(1009,1509.3699951,-1562.2939453,1971.3000488,0.0000000,270.0000000,0.0000000);
    CreateDynamicObject(2994,1506.5000000,-1529.1999512,1970.3000488,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2994,1513.4000244,-1529.1999512,1970.3000488,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2007,1516.1999512,-1533.0999756,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2007,1516.1999512,-1534.0999756,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2007,1516.1999512,-1535.0999756,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2007,1516.1999512,-1535.0999756,1971.1999512,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2007,1516.1999512,-1534.0999756,1971.1999512,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2007,1516.1999512,-1533.0999756,1971.1999512,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2007,1509.1999512,-1533.0999756,1971.1999512,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2007,1509.1999512,-1533.0999756,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2007,1509.1999512,-1534.0999756,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2007,1509.1999512,-1535.0999756,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2007,1509.1999512,-1535.0999756,1971.1999512,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2007,1509.1992188,-1534.0996094,1971.1999512,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(1523,1511.8100586,-1557.1479492,1969.8399658,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(19466,1511.8000488,-1560.5999756,1971.8000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19466,1511.8000488,-1562.8409424,1971.8000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(11237,1527.6999512,-1561.6999512,1993.7321,0.0000000,180.0000000,0.0000000);
    CreateDynamicObject(18608,1521.9000244,-1560.0999756,1973.9480,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(3053,1508.9000244,-1561.6999512,1972.960000,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(3056,1508.9000244,-1561.6999512,1972.9680,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(3396,1513.6999512,-1563.0000000,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(3395,1516.0999756,-1560.5999756,1969.8000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(16101,1509.4000244,-1562.3000488,1960.6999512,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1009,1512.8593750,-1529.9892578,1971.5999756,0.0000000,269.9890137,179.9945068);
    CreateDynamicObject(3394,1508.5999756,-1557.0000000,1969.8000488,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2951,1511.8399658,-1561.5999756,1972.0999756,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2253,1499.8994141,-1529.0000000,1971.0000000,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2253,1503.5000000,-1544.0999756,1971.0000000,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1671,1511.0000000,-1543.9000244,1970.3000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1671,1510.8000488,-1542.9000244,1970.3000488,0.0000000,0.0000000,179.9975586);
    CreateDynamicObject(1671,1509.0000000,-1544.6999512,1970.3000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1671,1509.1999512,-1542.8000488,1970.3000488,0.0000000,0.0000000,190.0000000);
    CreateDynamicObject(1671,1507.0000000,-1542.9000244,1970.3000488,0.0000000,0.0000000,165.9975586);
    CreateDynamicObject(1671,1507.5000000,-1549.0999756,1970.3000488,0.0000000,0.0000000,279.9924316);
    CreateDynamicObject(1671,1507.5000000,-1551.0000000,1970.3000488,0.0000000,0.0000000,265.9920654);
    CreateDynamicObject(1671,1507.5000000,-1553.0000000,1970.3000488,0.0000000,0.0000000,269.9899902);
    CreateDynamicObject(1671,1506.8000488,-1554.8000488,1970.3000488,0.0000000,0.0000000,285.9890137);
    CreateDynamicObject(1671,1510.5000000,-1554.8000488,1970.3000488,0.0000000,0.0000000,91.9851074);
    CreateDynamicObject(1671,1510.5000000,-1552.9000244,1970.3000488,0.0000000,0.0000000,81.9830322);
    CreateDynamicObject(1671,1510.5000000,-1551.0996094,1970.3000488,0.0000000,0.0000000,91.9775391);
    CreateDynamicObject(2186,1509.5000000,-1555.6999512,1969.8000488,0.0000000,0.0000000,180.0000000);
    CreateDynamicObject(948,1511.5999756,-1549.5999756,1969.8000488,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1671,1510.8000488,-1546.8000488,1970.3000488,0.0000000,0.0000000,175.9775391);
    CreateDynamicObject(1671,1509.0000000,-1546.8000488,1970.3000488,0.0000000,0.0000000,191.9734955);
    CreateDynamicObject(1811,1505.0999756,-1540.6999512,1970.4000244,0.0000000,0.0000000,269.9945068);
    CreateDynamicObject(1811,1506.0000000,-1540.6999512,1970.4000244,0.0000000,0.0000000,269.9890137);
    CreateDynamicObject(1811,1506.9000244,-1540.6999512,1970.4000244,0.0000000,0.0000000,269.9890137);
    CreateDynamicObject(1811,1507.8000488,-1540.6999512,1970.4000244,0.0000000,0.0000000,269.9890137);
    CreateDynamicObject(1811,1508.6999512,-1540.6999512,1970.4000244,0.0000000,0.0000000,269.9890137);
    CreateDynamicObject(1811,1504.0999756,-1536.6999512,1970.4000244,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(1811,1503.1999512,-1536.6999512,1970.4000244,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(1811,1502.1999512,-1536.6999512,1970.4000244,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2111,1517.6999512,-1546.0000000,1970.1999512,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1823,1521.3000488,-1545.9000244,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(1823,1524.3000488,-1545.9000244,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(1823,1524.3000488,-1539.5000000,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(1823,1521.3000488,-1539.5000000,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(1823,1520.0999756,-1539.5000000,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(1823,1517.0999756,-1539.5000000,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(1752,1517.5999756,-1546.0999756,1970.5999756,0.0000000,0.0000000,132.0000000);
    CreateDynamicObject(2576,1525.3000488,-1541.5999756,1969.8000488,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(2253,1521.7998, -1546.5000, 1970.5580,0.0000000,0.0000000,30.0000000);
    CreateDynamicObject(2253,1524.7000, -1540.2000, 1970.5580,0.0000000,0.0000000,29.9981689);
    CreateDynamicObject(2105,1524.8000488,-1546.5000000,1970.6999512,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2105,1517.5000000,-1539.8994141,1970.6999512,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2105,1521.7998047,-1539.8994141,1970.6999512,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(16101,1524.1999512,-1539.5999756,1960.6999512,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(16101,1520.0000000,-1539.5999756,1960.6999512,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(16101,1522.4000244,-1546.8000488,1960.6999512,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(1009,1522.4499512,-1546.7900391,1971.3000488,0.0000000,269.9890137,179.9945068);
    CreateDynamicObject(1009,1524.1800537,-1539.5899658,1971.3000488,0.0000000,269.9890137,0.0000000);
    CreateDynamicObject(1009,1519.9799805,-1539.5899658,1971.3000488,0.0000000,269.9890137,0.0000000);
    CreateDynamicObject(1671,1513.5000000,-1561.5000000,1970.3000488,0.0000000,0.0000000,357.9775391);
    CreateDynamicObject(1502,1516.8199463,-1544.6839600,1969.8299561,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2267,1496.8100586,-1538.6999512,1971.5000000,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2007,1497.3000488,-1533.3000488,1969.8000488,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2007,1497.3000488,-1532.3000488,1969.8000488,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2007,1497.3000488,-1531.3000488,1969.8000488,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2162,1496.9000244,-1529.8000488,1969.8000488,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2270,1501.6999512,-1563.2199707,1971.5000000,0.0000000,0.0000000,180.0000000);
    CreateDynamicObject(2271,1499.0000000,-1563.2197266,1971.5145264,0.0000000,0.0000000,179.9945068);
    CreateDynamicObject(2268,1504.0000000,-1563.2197266,1971.3437500,0.0000000,0.0000000,179.9945068);

    CreateDynamicObject(18756, 1521.20, -1550.92, 1971.78,   0.00, 0.00, 90.00);
    CreateDynamicObject(18757, 1521.21, -1550.92, 1971.78,   0.00, 0.00, 90.00);
    CreateDynamicObject(1569, 1496.75, -1547.80, 1969.78,   0.00, 0.00, 90.00);
    CreateDynamicObject(1569, 1525.86, -1549.33, 1969.80,   0.00, 0.00, 270.00);
    CreateDynamicObject(1569, 1496.74, -1544.80, 1969.78,   0.00, 0.00, 270.00);
    CreateDynamicObject(1569, 1525.86, -1552.33, 1969.80,   0.00, 0.00, 90.00);

    //Floor
    new floor = CreateObject(19378,1501.9000244,-1559.0000000,1969.6999512,0.0000000,90.0000000,0.0000000);
    new floor1 = CreateObject(19378,1501.9000244,-1549.4000244,1969.7010498,0.0000000,90.0000000,0.0000000);
    new floor2 = CreateObject(19378,1501.9000244,-1539.8000488,1969.6999512,0.0000000,90.0000000,0.0000000);
    new floor3 = CreateObject(19378,1512.4000244,-1539.8000488,1969.6999512,0.0000000,90.0000000,0.0000000);
    new floor4 = CreateObject(19378,1512.4000244,-1549.4000244,1969.6989746,0.0000000,90.0000000,0.0000000);
    new floor5 = CreateObject(19378,1512.4000244,-1559.0000000,1969.6999512,0.0000000,90.0000000,0.0000000);
    new floor6 = CreateObject(19378,1522.9000244,-1549.4000244,1969.6999512,0.0000000,90.0000000,0.0000000);

    SetObjectMaterial(floor, 0, 18030, "gap", "mp_furn_floor");
    SetObjectMaterial(floor1, 0, 18030, "gap", "mp_furn_floor");
    SetObjectMaterial(floor2, 0, 18030, "gap", "mp_furn_floor");
    SetObjectMaterial(floor3, 0, 18030, "gap", "mp_furn_floor");
    SetObjectMaterial(floor4, 0, 18030, "gap", "mp_furn_floor");
    SetObjectMaterial(floor5, 0, 18030, "gap", "mp_furn_floor");
    SetObjectMaterial(floor6, 0, 18030, "gap", "mp_furn_floor");

    //Ceiling
    new ceiling = CreateDynamicObject(19380,1501.9000244,-1559.0000000,1972.8830,0.0000000,90.0000000,0.0000000);
    new ceiling1 = CreateDynamicObject(19380,1501.9000244,-1549.4000244,1972.8840,0.0000000,90.0000000,0.0000000);
    new ceiling2 = CreateDynamicObject(19380,1501.9000244,-1539.8000488,1972.8830,0.0000000,90.0000000,0.0000000);
    new ceiling3 = CreateDynamicObject(19380,1501.9000244,-1530.1999512,1972.8840,0.0000000,90.0000000,0.0000000);
    new ceiling4 = CreateDynamicObject(19380,1512.4000244,-1530.1999512,1972.8830,0.0000000,90.0000000,0.0000000);
    new ceiling5 = CreateDynamicObject(19380,1512.4000244,-1539.8000488,1972.8840,0.0000000,90.0000000,0.0000000);
    new ceiling6 = CreateDynamicObject(19380,1512.4000244,-1549.4000244,1972.8830,0.0000000,90.0000000,0.0000000);
    new ceiling7 = CreateDynamicObject(19380,1512.4000244,-1559.0000000,1972.8840,0.0000000,90.0000000,0.0000000);
    new ceiling8 = CreateDynamicObject(19380,1522.9000244,-1549.4000244,1972.8830,0.0000000,90.0000000,0.0000000);
    new ceiling9 = CreateDynamicObject(19380,1522.9000244,-1539.8000488,1972.8830,0.0000000,90.0000000,0.0000000);

    SetDynamicObjectMaterial(ceiling, 0, 18026, "scummy", "ceiling_256");
    SetDynamicObjectMaterial(ceiling1, 0, 18026, "scummy", "ceiling_256");
    SetDynamicObjectMaterial(ceiling2, 0, 18026, "scummy", "ceiling_256");
    SetDynamicObjectMaterial(ceiling3, 0, 18026, "scummy", "ceiling_256");
    SetDynamicObjectMaterial(ceiling4, 0, 18026, "scummy", "ceiling_256");
    SetDynamicObjectMaterial(ceiling5, 0, 18026, "scummy", "ceiling_256");
    SetDynamicObjectMaterial(ceiling6, 0, 18026, "scummy", "ceiling_256");
    SetDynamicObjectMaterial(ceiling7, 0, 18026, "scummy", "ceiling_256");
    SetDynamicObjectMaterial(ceiling8, 0, 18026, "scummy", "ceiling_256");
    SetDynamicObjectMaterial(ceiling9, 0, 18026, "scummy", "ceiling_256");

    //Walls
    new wall = CreateDynamicObject(19461,1505.8994141,-1555.8994141,1971.5999756,0.0000000,0.0000000,0.0000000);
    new wall1 = CreateDynamicObject(19461,1505.8994141,-1565.5000000,1971.5999756,0.0000000,0.0000000,0.0000000);
    new wall2 = CreateDynamicObject(19461,1502.8994141,-1531.1992188,1971.5999756,0.0000000,0.0000000,0.0000000);
    new wall3 = CreateDynamicObject(19369,1504.5450439,-1548.9699707,1971.5999756,0.0000000,0.0000000,300.0000000);
    new wall4 = CreateDynamicObject(19369,1504.5460205,-1543.6290283,1971.5999756,0.0000000,0.0000000,60.0000000);
    new wall5 = CreateDynamicObject(19442,1503.1999512,-1542.0999756,1971.5999756,0.0000000,0.0000000,0.0000000);
    new wall6 = CreateDynamicObject(19369,1505.9000244,-1543.0999756,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall7 = CreateDynamicObject(19397,1505.9000244,-1546.3000488,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall8 = CreateDynamicObject(19369,1505.8994141,-1549.5000000,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall9 = CreateDynamicObject(19442,1503.1999512,-1550.5000000,1971.5999756,0.0000000,0.0000000,0.0000000);
    new wall10 = CreateDynamicObject(19461,1501.5000000,-1526.4000244,1971.5999756,0.0000000,0.0000000,90.0000000);
    new wall11 = CreateDynamicObject(19461,1511.0999756,-1526.4000244,1971.5999756,0.0000000,0.0000000,90.0000000);
    new wall12 = CreateDynamicObject(19461,1520.6999512,-1526.4000244,1971.5999756,0.0000000,0.0000000,90.0000000);
    new wall13 = CreateDynamicObject(19461,1509.7998047,-1531.1992188,1971.5999756,0.0000000,0.0000000,0.0000000);
    new wall14 = CreateDynamicObject(19461,1516.8000488,-1531.3000488,1971.5999756,0.0000000,0.0000000,0.0000000);
    new wall15 = CreateDynamicObject(19461,1516.8000488,-1559.9000244,1971.5999756,0.0000000,0.0000000,0.0000000);
    new wall16 = CreateDynamicObject(19461,1507.2998047,-1541.2998047,1971.5999756,0.0000000,0.0000000,90.0000000);
    new wall17 = CreateDynamicObject(19461,1521.5999756,-1547.0999756,1971.5999756,0.0000000,0.0000000,90.0000000);
    new wall18 = CreateDynamicObject(19461,1525.9000244,-1542.3000488,1971.5999756,0.0000000,0.0000000,0.2500000);
    new wall19 = CreateDynamicObject(19461,1521.6999512,-1539.3000488,1971.5999756,0.0000000,0.0000000,90.0000000);
    new wall20 = CreateDynamicObject(19461,1521.5999756,-1552.8000488,1971.5999756,0.0000000,0.0000000,90.0000000);
    new wall21 = CreateDynamicObject(19461,1525.9000244,-1552.0000000,1971.5999756,0.0000000,0.0000000,0.0000000);
    new wall22 = CreateDynamicObject(19461,1521.5999756,-1548.8000488,1971.5999756,0.0000000,0.0000000,90.0000000);
    new wall23 = CreateDynamicObject(19369,1509.5996094,-1536.0000000,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall24 = CreateDynamicObject(19369,1503.1999512,-1536.0000000,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall25 = CreateDynamicObject(19369,1496.8994141,-1536.0000000,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall26 = CreateDynamicObject(19369,1516.0000000,-1536.0000000,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall27 = CreateDynamicObject(19369,1512.0999756,-1551.5000000,1971.5999756,0.0000000,0.0000000,180.0000000);
    new wall28 = CreateDynamicObject(19369,1512.0996094,-1554.6992188,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall29 = CreateDynamicObject(19369,1512.0996094,-1542.8154297,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall30 = CreateDynamicObject(19369,1512.1009521,-1545.5000000,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall31 = CreateDynamicObject(19369,1504.1999512,-1551.3010254,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall32 = CreateDynamicObject(19369,1508.0000000,-1556.2998047,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall33 = CreateDynamicObject(19369,1511.1992188,-1556.2998047,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall34 = CreateDynamicObject(19369,1517.5999756,-1556.3000488,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall35 = CreateDynamicObject(19369,1498.2998047,-1541.2998047,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall36 = CreateDynamicObject(19369,1507.4199219,-1556.3007812,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall37 = CreateDynamicObject(19369,1505.9010010,-1542.9000244,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall38 = CreateDynamicObject(19369,1516.8000488,-1537.6999512,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall39 = CreateDynamicObject(19369,1516.8000488,-1540.9000244,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall40 = CreateDynamicObject(19369,1516.8000488,-1547.0999756,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall41 = CreateDynamicObject(19369,1516.8000488,-1553.5000000,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall42 = CreateDynamicObject(19442,1502.3100586,-1535.4100342,1971.5999756,0.0000000,0.0000000,315.0000000);
    new wall43 = CreateDynamicObject(19461,1496.6999512,-1559.0000000,1971.5999756,0.0000000,0.0000000,0.0000000);
    new wall44 = CreateDynamicObject(19461,1496.6992188,-1549.3994141,1971.5999756,0.0000000,0.0000000,0.0000000);
    new wall45 = CreateDynamicObject(19461,1496.6992188,-1539.7998047,1971.5999756,0.0000000,0.0000000,0.0000000);
    new wall46 = CreateDynamicObject(19461,1496.6992188,-1530.1992188,1971.5999756,0.0000000,0.0000000,0.0000000);
    new wall47 = CreateDynamicObject(19461,1501.5000000,-1563.8000488,1971.5999756,0.0000000,0.0000000,90.0000000);
    new wall48 = CreateDynamicObject(19461,1511.0999756,-1563.8000488,1971.5999756,0.0000000,0.0000000,90.0000000);
    new wall49 = CreateDynamicObject(19461,1520.6999512,-1563.8000488,1971.5999756,0.0000000,0.0000000,90.0000000);
    new wall50 = CreateDynamicObject(19397,1512.8000488,-1536.0000000,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall51 = CreateDynamicObject(19397,1506.3994141,-1536.0000000,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall52 = CreateDynamicObject(19397,1500.0000000,-1536.0009766,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall53 = CreateDynamicObject(19397,1512.0996094,-1548.2998047,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall54 = CreateDynamicObject(19397,1514.3994141,-1556.2998047,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall55 = CreateDynamicObject(19397,1501.5000000,-1541.3007812,1971.5999756,0.0000000,0.0000000,270.0000000);
    new wall56 = CreateDynamicObject(19397,1511.9000244,-1557.9000244,1971.5999756,0.0000000,0.0000000,180.0000000); //Radiohraphy
    new wall57 = CreateDynamicObject(19397,1511.8000488,-1557.9000244,1971.5999756,0.0000000,0.0000000,179.9945068); //Radiohraphy
    new wall58 = CreateDynamicObject(19397,1511.8990479,-1565.1989746,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall59 = CreateDynamicObject(19397,1511.8010254,-1565.1999512,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall60 = CreateDynamicObject(19397,1516.8000488,-1543.9000244,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall61 = CreateDynamicObject(19397,1516.8000488,-1550.3000488,1971.5999756,0.0000000,0.0000000,179.9945068);
    new wall62 = CreateDynamicObject(19461,1511.9000244,-1564.2989502,1974.0009766,0.0000000,0.0000000,0.0000000); //Radiohraphy
    new wall63 = CreateDynamicObject(19461,1511.8990479,-1564.3000488,1969.1009521,0.0000000,180.0000000,0.0000000); //Radiohraphy
    new wall64 = CreateDynamicObject(19461,1511.8010254,-1564.3000488,1969.0999756,0.0000000,179.9945068,0.0000000); //Radiohraphy
    new wall65 = CreateDynamicObject(19461,1511.8000488,-1564.3010254,1974.0000000,0.0000000,0.0000000,0.0000000); //Radiohraphy


    SetDynamicObjectMaterial(wall, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall1, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall2, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall3, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall4, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall5, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall6, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall7, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall8, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall9, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall10, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall11, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall12, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall13, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall14, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall15, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall16, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall17, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall18, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall19, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall20, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall21, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall22, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall23, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall24, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall25, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall26, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall27, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall28, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall29, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall30, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall31, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall32, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall33, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall34, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall35, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall36, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall37, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall38, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall39, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall40, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall41, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall42, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall43, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall44, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall45, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall46, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall47, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall48, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall49, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall50, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall51, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall52, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall53, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall54, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall55, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall56, 0, 14675, "civic02cj", "ab_hosWallUpr"); //Radiohraphy
    SetDynamicObjectMaterial(wall57, 0, 14675, "civic02cj", "ab_hosWallUpr"); //Radiohraphy
    SetDynamicObjectMaterial(wall58, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall59, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall60, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");
    SetDynamicObjectMaterial(wall61, 0, 18020, "genintintfastb2", "CJ_BURG_WALL");

    SetDynamicObjectMaterial(wall62, 0, 14675, "civic02cj", "ab_hosWallUpr"); //Radiohraphy
    SetDynamicObjectMaterial(wall63, 0, 14675, "civic02cj", "ab_hosWallUpr"); //Radiohraphy
    SetDynamicObjectMaterial(wall64, 0, 14675, "civic02cj", "ab_hosWallUpr"); //Radiohraphy
    SetDynamicObjectMaterial(wall65, 0, 14675, "civic02cj", "ab_hosWallUpr"); //Radiohraphy

    //Lists
    CreateDynamicObject(19442,1503.1999512,-1542.0999756,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19442,1503.1999512,-1550.5000000,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19442,1502.3100586,-1535.4100342,1968.0999756,0.0000000,0.0000000,315.0000000);
    CreateDynamicObject(19461,1496.6999512,-1559.0000000,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1496.6992188,-1549.3994141,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1496.6999512,-1539.8000488,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1496.6992188,-1530.1992188,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1501.5000000,-1563.8000488,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1511.0999756,-1563.8000488,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1520.6999512,-1563.8000488,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1516.8000488,-1560.0999756,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1516.8000488,-1550.5000000,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1516.7998047,-1540.8994141,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1516.8000488,-1531.0999756,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1512.0000000,-1526.4000244,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1502.4000244,-1526.4000244,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1492.8000488,-1526.4000244,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1512.7998047,-1536.0000000,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1505.9000244,-1546.1999512,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1507.2998047,-1541.2998047,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1502.8994141,-1531.0996094,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1509.8000488,-1531.0999756,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1503.3000488,-1546.5000000,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1504.1999512,-1546.5000000,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1511.9000244,-1561.1999512,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1512.0999756,-1546.0279541,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1512.1010000,-1551.5000000,1968.1019521,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1497.6999512,-1541.3000488,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1503.1999512,-1536.0000000,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1493.5999756,-1536.0000000,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1505.9000244,-1555.8000488,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1505.9000244,-1565.4000244,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1511.8000488,-1561.1999512,1968.1009521,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1521.5999756,-1547.0999756,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1521.6999512,-1539.3000488,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1525.9000244,-1542.3000488,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1525.9000244,-1551.9000244,1968.0999756,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19461,1531.3000488,-1539.3000488,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19461,1521.5999756,-1552.8000488,1968.0999756,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(19369,1504.1999512,-1551.3010254,1968.0999756,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(19369,1508.0000000,-1556.2998047,1968.0999756,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(19369,1511.1999512,-1556.3000488,1968.0999756,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(19369,1515.1999512,-1556.3000488,1968.0999756,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(19369,1512.0620117,-1556.3010254,1968.0999756,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(19369,1507.4200439,-1556.3010254,1968.0999756,0.0000000,0.0000000,270.0000000);
    CreateDynamicObject(19369,1504.5460205,-1543.6290283,1968.0999756,0.0000000,0.0000000,59.9963379);
    CreateDynamicObject(19369,1504.5450439,-1548.9709473,1968.0999756,0.0000000,0.0000000,299.9981689);
    CreateDynamicObject(19461,1521.5999756,-1548.8000488,1968.0999756,0.0000000,0.0000000,90.0000000);

    //Grey floor
    new greyfloor = CreateObject(19377,1511.1999512,-1561.0999756,1969.7199707,0.0000000,90.0000000,0.0000000);
    new greyfloor1 = CreateObject(19377,1521.6999512,-1561.0999756,1969.7199707,0.0000000,90.0000000,0.0000000);
    new greyfloor2 = CreateObject(19377,1508.0996094,-1531.1992188,1969.7299805,0.0000000,90.0000000,0.0000000);
    new greyfloor3 = CreateObject(19377,1518.5996094,-1531.1992188,1969.7299805,0.0000000,90.0000000,0.0000000);

    SetObjectMaterial(greyfloor, 0, 14388, "dr_gsnew", "ws_stationfloor");
    SetObjectMaterial(greyfloor1, 0, 14388, "dr_gsnew", "ws_stationfloor");
    SetObjectMaterial(greyfloor2, 0, 14388, "dr_gsnew", "ws_stationfloor");
    SetObjectMaterial(greyfloor3, 0, 14388, "dr_gsnew", "ws_stationfloor");

    //Carpets
    new carpet = CreateDynamicObject(19373,1501.5996094,-1554.1992188,1969.7299805,0.0000000,90.0000000,0.0000000);
    new carpet1 = CreateDynamicObject(19373,1501.5996094,-1557.5000000,1969.7299805,0.0000000,90.0000000,0.0000000);
    new carpet2 = CreateDynamicObject(19373,1520.9000244,-1543.1999512,1969.7299805,0.0000000,90.0000000,0.0000000);
    new carpet3 = CreateDynamicObject(19373,1500.5000000,-1546.2998047,1969.7299805,0.0000000,90.0000000,0.0000000);
    new carpet4 = CreateDynamicObject(19373,1508.8994141,-1552.2998047,1969.7299805,0.0000000,90.0000000,0.0000000);
    new carpet5 = CreateDynamicObject(19373,1508.8994141,-1548.1992188,1969.7299805,0.0000000,90.0000000,0.0000000);
    new carpet6 = CreateDynamicObject(19373,1508.8994141,-1544.0000000,1969.7299805,0.0000000,90.0000000,0.0000000);
    new carpet7 = CreateDynamicObject(19373,1501.5996094,-1560.7998047,1969.7299805,0.0000000,90.0000000,0.0000000);

    SetDynamicObjectMaterial(carpet, 0, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(carpet1, 0, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(carpet2, 0, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(carpet3, 0, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(carpet4, 0, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(carpet5, 0, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(carpet6, 0, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(carpet7, 0, 3781, "LSOffice1floors", "carpet13-256x256");

    //Wooden floor
    new woodenfloor = CreateObject(19379,1497.6992188,-1531.1992188,1969.7299805,0.0000000,90.0000000,0.0000000);
	new woodenfloor1 = CreateObject(19379,1522.0999756,-1542.1999512,1969.7199707,0.0000000,90.0000000,0.0000000);

    SetObjectMaterial(woodenfloor, 0, 18030, "gap", "mp_furn_floor");
    SetObjectMaterial(woodenfloor1, 0, 18030, "gap", "mp_furn_floor");

    //Computer
    new pcmid = CreateDynamicObject(2268,1499.6199951,-1529.5660400,1971.0999756,0.0000000,90.0000000,270.0000000);
    new pcfront = CreateDynamicObject(2268,1500.6230469,-1530.2294922,1971.0999756,0.0000000,90.0000000,90.0000000);
    new pcback = CreateDynamicObject(2268,1499.5739746,-1529.5660400,1971.0999756,0.0000000,90.0000000,270.0000000);
    new key = CreateDynamicObject(1547,1500.3994141,-1529.8994141,1970.7399902,0.0000000,0.0000000,90.0000000); //Keyboard


    SetDynamicObjectMaterial(pcmid, 0, 3781, "LSOffice1floors", "carpet13-256x256", 0xFF333333);
    SetDynamicObjectMaterial(pcfront, 1, 2268, "picture_frame", "CJ_PAINTING7", 0xFF000000);
    SetDynamicObjectMaterial(pcfront, 0, 3781, "LSOffice1floors", "carpet13-256x256", 0xFF333333);
    SetDynamicObjectMaterial(pcback, 0, 3781, "LSOffice1floors", "carpet13-256x256", 0xFF333333);
    SetDynamicObjectMaterial(pcback, 1, 3781, "LSOffice1floors", "carpet13-256x256", 0xFF333333);
    SetDynamicObjectMaterial(key, 0, 2172, "cj_office", "of_key_256");

	//Office desks
    new desk = CreateDynamicObject(2172,1511.5000000,-1550.5999756,1969.8000488,0.0000000,0.0000000,270.0000000);
    new desk1 = CreateDynamicObject(2172,1511.5000000,-1552.5000000,1969.8000488,0.0000000,0.0000000,270.0000000);
    new desk2 = CreateDynamicObject(2172,1511.5000000,-1554.4000244,1969.8000488,0.0000000,0.0000000,270.0000000);
    new desk3 = CreateDynamicObject(2172,1506.5000000,-1555.3000488,1969.8000488,0.0000000,0.0000000,90.0000000);
    new desk4 = CreateDynamicObject(2172,1506.5000000,-1553.4000244,1969.8000488,0.0000000,0.0000000,90.0000000);
    new desk5 = CreateDynamicObject(2172,1506.5000000,-1551.5000000,1969.8000488,0.0000000,0.0000000,90.0000000);
    new desk6 = CreateDynamicObject(2172,1506.5000000,-1549.5999756,1969.8000488,0.0000000,0.0000000,90.0000000);
    new desk7 = CreateDynamicObject(2172,1506.5999756,-1541.9000244,1969.8000488,0.0000000,0.0000000,0.0000000);
    new desk8 = CreateDynamicObject(2172,1508.5000000,-1541.9000244,1969.8000488,0.0000000,0.0000000,0.0000000);
    new desk9 = CreateDynamicObject(2172,1510.4000244,-1541.9000244,1969.8000488,0.0000000,0.0000000,0.0000000);
    new desk10 = CreateDynamicObject(2172,1511.4000244,-1544.9000244,1969.8000488,0.0000000,0.0000000,180.0000000);
    new desk11 = CreateDynamicObject(2172,1509.5000000,-1544.9000244,1969.8000488,0.0000000,0.0000000,179.9945068);
    new desk12 = CreateDynamicObject(2172,1508.4919434,-1545.8000488,1969.8000488,0.0000000,0.0000000,0.0000000);
    new desk13 = CreateDynamicObject(2172,1510.4110107,-1545.8000488,1969.8000488,0.0000000,0.0000000,0.0000000);

    new noteboard = CreateDynamicObject(2737,1506.0300293,-1543.9000244,1971.4000244,0.0000000,0.0000000,90.0000000);

    SetDynamicObjectMaterial(desk, 6, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(desk1, 6, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(desk2, 6, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(desk3, 6, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(desk4, 6, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(desk5, 6, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(desk6, 6, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(desk7, 6, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(desk8, 6, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(desk9, 6, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(desk10, 6, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(desk11, 6, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(desk12, 6, 3781, "LSOffice1floors", "carpet13-256x256");
    SetDynamicObjectMaterial(desk13, 6, 3781, "LSOffice1floors", "carpet13-256x256");

    SetDynamicObjectMaterial(desk, 8, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(desk1, 8, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(desk2, 8, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(desk3, 8, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(desk4, 8, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(desk5, 8, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(desk6, 8, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(desk7, 8, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(desk8, 8, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(desk9, 8, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(desk10, 8, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(desk11, 8, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(desk12, 8, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(desk13, 8, 2205, "cj_office", "CJ_WOOD5");

    SetDynamicObjectMaterial(noteboard, 0, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(noteboard, 1, 2162, "cj_office", "white32");

    //Stretchers
    new stretcher = CreateDynamicObject(2146,1502.0999756,-1533.4000244,1970.2900391,0.0000000,0.0000000,0.0000000);
    new stretcher1 = CreateDynamicObject(2146,1506.5000000,-1530.8000488,1970.3000488,0.0000000,0.0000000,180.0000000);
    new stretcher2 = CreateDynamicObject(2146,1513.4000244,-1530.8000488,1970.3000488,0.0000000,0.0000000,179.9945068);
    new stretcher3 = CreateDynamicObject(2146,1516.0999756,-1538.5999756,1970.3000488,0.0000000,0.0000000,179.9945068);
    new stretcher4 = CreateDynamicObject(2146,1516.0999756,-1546.6999512,1970.3000488,0.0000000,0.0000000,179.9945068);
    new stretcher5 = CreateDynamicObject(2146,1516.0999756,-1553.0000000,1970.3000488,0.0000000,0.0000000,179.9945068);
    new stretcher6 = CreateDynamicObject(2146,1508.9000244,-1561.3000488,1970.3000488,0.0000000,0.0000000,179.9945068);

    SetDynamicObjectMaterial(stretcher, 0, 1798, "cj_s_beds", "CJ_MATRESS3");
    SetDynamicObjectMaterial(stretcher1, 0, 1798, "cj_s_beds", "CJ_MATRESS3");
    SetDynamicObjectMaterial(stretcher2, 0, 1798, "cj_s_beds", "CJ_MATRESS3");
    SetDynamicObjectMaterial(stretcher3, 0, 1798, "cj_s_beds", "CJ_MATRESS3");
    SetDynamicObjectMaterial(stretcher4, 0, 1798, "cj_s_beds", "CJ_MATRESS3");
    SetDynamicObjectMaterial(stretcher5, 0, 1798, "cj_s_beds", "CJ_MATRESS3");
    SetDynamicObjectMaterial(stretcher6, 0, 1798, "cj_s_beds", "CJ_MATRESS3");

    SetDynamicObjectMaterial(stretcher, 1, 1811, "cj_tables", "CJ_CHROME2");
    SetDynamicObjectMaterial(stretcher1, 1, 1811, "cj_tables", "CJ_CHROME2");
    SetDynamicObjectMaterial(stretcher2, 1, 1811, "cj_tables", "CJ_CHROME2");
    SetDynamicObjectMaterial(stretcher3, 1, 1811, "cj_tables", "CJ_CHROME2");
    SetDynamicObjectMaterial(stretcher4, 1, 1811, "cj_tables", "CJ_CHROME2");
    SetDynamicObjectMaterial(stretcher5, 1, 1811, "cj_tables", "CJ_CHROME2");
    SetDynamicObjectMaterial(stretcher6, 1, 1811, "cj_tables", "CJ_CHROME2");

    SetDynamicObjectMaterial(stretcher, 2, 1811, "cj_tables", "CJ_CHROME2");
    SetDynamicObjectMaterial(stretcher1, 2, 1811, "cj_tables", "CJ_CHROME2");
    SetDynamicObjectMaterial(stretcher2, 2, 1811, "cj_tables", "CJ_CHROME2");
    SetDynamicObjectMaterial(stretcher3, 2, 1811, "cj_tables", "CJ_CHROME2");
    SetDynamicObjectMaterial(stretcher4, 2, 1811, "cj_tables", "CJ_CHROME2");
    SetDynamicObjectMaterial(stretcher5, 2, 1811, "cj_tables", "CJ_CHROME2");
    SetDynamicObjectMaterial(stretcher6, 2, 1811, "cj_tables", "CJ_CHROME2");

    CreateDynamicObject(1808, 1502.90, -1550.80, 1969.80,   0.00, 0.00, 270.00);
    CreateDynamicObject(1808, 1497.00, -1557.50, 1969.80,   0.00, 0.00, 90.00);
    CreateDynamicObject(1808, 1502.00, -1535.30, 1969.80,   0.00, 0.00, 226.00);
    CreateDynamicObject(2894, 1503.93, -1545.92, 1970.73,   0.00, 0.00, 90.00);
 	CreateDynamicObject(1808, 1504.88, -1535.70, 1969.80,   0.00, 0.00, 180.00);
    CreateDynamicObject(1808, 1511.28, -1535.70, 1969.80,   0.00, 0.00, 179.99);
    CreateDynamicObject(2596, 1497.09, -1555.27, 1971.87,   0.00, 0.00, 90.00);

    //Beds
    new bed = CreateDynamicObject(1798,1518.5999756,-1542.9000244,1969.8000488,0.0000000,0.0000000,0.0000000);
    new bed1 = CreateDynamicObject(1798,1522.8000488,-1542.9000244,1969.8000488,0.0000000,0.0000000,0.0000000);
    new bed2 = CreateDynamicObject(1798,1523.8000488,-1543.5000000,1969.8000488,0.0000000,0.0000000,180.0000000);

    SetDynamicObjectMaterial(bed, 2, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(bed1, 2, 2205, "cj_office", "CJ_WOOD5");
    SetDynamicObjectMaterial(bed2, 2, 2205, "cj_office", "CJ_WOOD5");
    HospitalDoor1 = CreateDynamicObject(1567,1500.7516, -1541.3116, 1969.8427,0.0000000,0.0000000,0.0000000); //Doors
    HospitalDoor2 = CreateDynamicObject(1567,1505.8879, -1545.5511, 1969.8398,0.0000000,0.0000000,270.0000000); //Doors

    new Reception = CreateDynamicObject(1547, 1503.2116, -1546.2935, 1970.5238, 90.2000, -4.0999, -85.8697);
    SetDynamicObjectMaterialText(Reception, 0, "RECEPTION", 50, "Times New Roman", 24, 1, -9868951, 0, 1);

    new AllSaints = CreateDynamicObject(19353, 1505.8795, -1556.1978, 1971.5361, 0.0000, 0.0000, 180);
    SetDynamicObjectMaterialText(AllSaints, 0, "All Saints", 140, "Times New Roman", 60, 1, -8092540, 0, 1);

    new GH = CreateDynamicObject(19353, 1505.8692, -1558.1240, 1971.5261, 0.0000, 0.0000, 180);
    SetDynamicObjectMaterialText(GH, 0, "General Hospital", 140, "Times New Roman", 60, 1, -8092540, 0, 1);

	HospitalPickupFront = CreateDynamicPickup(1239, 23, 1513.1852, -1569.4840, 14.6543);
	HospitalPickupBack = CreateDynamicPickup(1239, 23, 1507.8983, -1540.5138, 13.5474);
}

stock Objects_PawnShop() {
	CreateDynamicObject(1518, 293.18, -110.81, 1001.00,   0.00, 0.00, 198.00);
	CreateDynamicObject(1518, 292.04, -110.86, 1001.00,   0.00, 0.00, 120.00);
	CreateDynamicObject(18871, 292.12, -105.37, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18874, 291.51, -105.06, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18873, 291.71, -105.06, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18872, 291.92, -105.06, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18871, 292.12, -105.06, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18870, 292.32, -105.06, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18869, 292.52, -105.06, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18865, 293.33, -105.67, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18871, 292.12, -105.67, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18872, 291.92, -105.67, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18873, 291.72, -105.67, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18874, 291.52, -105.67, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18874, 291.52, -105.37, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18873, 291.72, -105.37, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18872, 291.92, -105.37, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18869, 292.52, -105.38, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18868, 292.72, -105.36, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18867, 292.92, -105.36, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18866, 293.12, -105.36, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18865, 293.33, -105.36, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18865, 293.33, -105.06, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18866, 293.12, -105.06, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18867, 292.92, -105.06, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18868, 292.72, -105.06, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18870, 292.32, -105.67, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18869, 292.52, -105.67, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18868, 292.72, -105.67, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18867, 292.93, -105.67, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18866, 293.13, -105.67, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(330, 293.56, -105.67, 1001.19,   90.00, 0.00, 180.00);
	CreateDynamicObject(18870, 292.32, -105.36, 1001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(330, 293.57, -105.18, 1001.19,   90.00, 0.00, 180.00);
	CreateDynamicObject(1719, 290.25, -105.42, 1001.29,   0.00, 0.00, 0.00);
	CreateDynamicObject(1718, 290.94, -105.40, 1001.29,   0.00, 0.00, 54.00);
	CreateDynamicObject(1787, 289.55, -105.34, 1001.29,   0.00, 0.00, 5.00);
	CreateDynamicObject(2332, 284.80, -102.90, 1000.91,   0.00, 0.00, 0.00);
	CreateDynamicObject(2065, 284.07, -103.09, 1000.51,   0.00, 0.00, 0.00);
	CreateDynamicObject(2229, 294.68, -102.69, 1000.51,   0.00, 0.00, 0.00);
	CreateDynamicObject(2229, 292.06, -102.64, 1000.51,   0.00, 0.00, 0.00);
	CreateDynamicObject(2227, 294.06, -102.55, 1000.51,   0.00, 0.00, 0.00);
	CreateDynamicObject(2227, 292.54, -102.57, 1000.51,   0.00, 0.00, 0.00);
	CreateDynamicObject(2331, 292.99, -102.88, 1000.73,   0.00, 0.00, 0.00);
	CreateDynamicObject(19422, 292.82, -103.02, 1001.16,   0.00, 0.00, 21.00);
	CreateDynamicObject(19424, 293.20, -102.91, 1001.16,   0.00, 0.00, 76.00);
	CreateDynamicObject(1210, 290.39, -110.58, 1001.48,   -90.00, 0.00, 87.00);
	CreateDynamicObject(1210, 290.91, -110.65, 1001.60,   90.00, 0.00, 124.00);
	CreateDynamicObject(2484, 286.23, -105.97, 1002.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(2237, 298.54, -103.24, 1002.95,   -1.00, 34.00, 90.00);
	CreateDynamicObject(2710, 298.23, -105.80, 1001.53,   0.00, 0.00, -90.00);
	CreateDynamicObject(2710, 298.22, -105.19, 1001.53,   0.00, 0.00, -90.00);
	CreateDynamicObject(2710, 298.23, -105.50, 1001.53,   0.00, 0.00, -90.00);
	CreateDynamicObject(1244, 297.84, -107.79, 1001.29,   0.00, 0.00, 0.00);
	CreateDynamicObject(2512, 291.23, -107.82, 1003.81,   0.00, 8.00, 56.00);
	CreateDynamicObject(19087, 291.92, -108.27, 1006.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(1806, 285.04, -110.47, 1000.51,   0.00, 0.00, -47.00);
	CreateDynamicObject(1514, 286.30, -110.46, 1001.60,   0.00, 0.00, 90.00);
	CreateDynamicObject(2226, 287.56, -110.46, 1001.23,   0.00, 0.00, 180.00);
	CreateDynamicObject(2226, 288.59, -110.90, 1001.23,   0.00, 0.00, 0.00);
	CreateDynamicObject(2402, 287.40, -105.23, 1000.74,   0.00, 0.00, 0.00);
	CreateDynamicObject(2344, 286.63, -102.87, 1001.44,   0.00, 0.00, 0.00);
	CreateDynamicObject(2344, 286.43, -102.87, 1001.44,   0.00, 0.00, 0.00);
	CreateDynamicObject(2344, 286.43, -103.08, 1001.44,   0.00, 0.00, 0.00);
	CreateDynamicObject(2344, 286.63, -103.07, 1001.44,   0.00, 0.00, 0.00);
	CreateDynamicObject(2344, 286.83, -103.07, 1001.44,   0.00, 0.00, 0.00);
	CreateDynamicObject(2344, 287.04, -103.07, 1001.44,   0.00, 0.00, 0.00);
	CreateDynamicObject(2344, 287.03, -102.87, 1001.44,   0.00, 0.00, 0.00);
	CreateDynamicObject(2344, 286.83, -102.87, 1001.44,   0.00, 0.00, 0.00);
	CreateDynamicObject(1787, 285.72, -102.84, 1001.49,   0.00, 0.00, 0.00);
	CreateDynamicObject(1787, 285.72, -102.94, 1001.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(1787, 285.72, -102.94, 1000.81,   0.00, 0.00, 0.00);
	CreateDynamicObject(1790, 288.87, -103.00, 1001.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(1790, 288.87, -103.00, 1001.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(1785, 287.72, -102.99, 1001.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(2690, 289.84, -102.73, 1002.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(2709, 290.55, -102.77, 1001.80,   0.00, 0.00, 0.00);
	CreateDynamicObject(2709, 290.56, -103.11, 1001.80,   0.00, 0.00, 0.00);
	CreateDynamicObject(2709, 290.56, -103.11, 1001.80,   0.00, 0.00, 0.00);
	CreateDynamicObject(2709, 290.77, -102.95, 1001.80,   0.00, 0.00, 0.00);
	CreateDynamicObject(2709, 290.98, -102.81, 1001.80,   0.00, 0.00, 0.00);
	CreateDynamicObject(2709, 290.96, -103.09, 1001.80,   0.00, 0.00, 0.00);
	CreateDynamicObject(0, 298.51, -104.38, 1002.62,   0.00, 0.00, 0.00);
	CreateDynamicObject(2228, 298.50, -105.26, 1002.65,   -1.00, 34.00, 90.00);
	CreateDynamicObject(2228, 298.50, -104.39, 1002.65,   -1.00, 34.00, 90.00);
	CreateDynamicObject(2237, 298.92, -106.62, 1002.95,   -1.00, 34.00, 90.00);
	CreateDynamicObject(2237, 298.50, -105.71, 1002.95,   -1.00, 34.00, 90.00);
}

stock Objects_Interiors() {
	/* --- Bar --- */
	
    CreateDynamicObject(2311, 1097.92, -1.20, 1019.33,   270.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1097.89, -1.20, 1019.31,   0.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1097.92, 1.22, 1019.33,   270.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1097.92, 3.64, 1019.33,   270.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1097.89, 1.22, 1019.31,   0.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1097.89, 3.64, 1019.31,   0.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1098.33, -1.20, 1018.88,   0.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1098.33, 1.22, 1018.88,   0.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1098.33, 3.64, 1018.88,   0.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1100.75, -1.25, 1019.33,   270.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1100.75, 1.17, 1019.33,   270.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1100.75, 3.59, 1019.33,   270.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1100.72, -1.25, 1019.31,   0.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1100.72, 1.17, 1019.31,   0.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1100.72, 3.59, 1019.31,   0.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1100.71, 0.26, 1021.17,   0.00, 180.00, 90.00);
	CreateDynamicObject(2311, 1100.71, 2.68, 1021.17,   0.00, 180.00, 90.00);
	CreateDynamicObject(2311, 1100.71, 5.10, 1021.17,   0.00, 180.00, 90.00);
	CreateDynamicObject(2311, 1100.72, -1.26, 1021.17,   270.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1100.72, 1.16, 1021.17,   270.00, 0.00, 90.00);
	CreateDynamicObject(2311, 1100.72, 3.58, 1021.17,   270.00, 0.00, 90.00);
	CreateDynamicObject(1510, 1097.67, -0.35, 1019.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1510, 1097.73, 1.55, 1019.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1510, 1097.73, 3.45, 1019.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1541, 1101.13, 0.44, 1020.34,   0.00, 0.00, 90.00);
	CreateDynamicObject(1541, 1101.13, 2.93, 1020.34,   0.00, 0.00, 90.00);
	CreateDynamicObject(1732, 1101.44, 2.93, 1020.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(1732, 1101.44, 0.47, 1020.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(1486, 1098.51, -0.81, 1019.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(1486, 1098.66, 0.96, 1019.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(1486, 1098.66, 3.31, 1019.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(1520, 1098.54, 3.20, 1019.49,   0.00, 0.00, 0.00);
	CreateDynamicObject(1520, 1098.62, 1.21, 1019.49,   0.00, 0.00, 0.00);
	CreateDynamicObject(1544, 1098.62, 3.03, 1019.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(1544, 1098.63, -0.42, 1019.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(1520, 1101.03, 1.13, 1019.87,   0.00, 0.00, 50.00);
	CreateDynamicObject(1520, 1101.02, 1.43, 1019.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(1520, 1100.96, 1.57, 1019.87,   0.00, 0.00, 10.00);
	CreateDynamicObject(1520, 1100.92, 1.29, 1019.87,   0.00, 0.00, 120.00);
	CreateDynamicObject(1668, 1100.87, 2.07, 1019.98,   0.00, 0.00, 0.00);
	CreateDynamicObject(1668, 1100.89, 1.93, 1019.98,   0.00, 0.00, 60.00);
	CreateDynamicObject(1668, 1100.87, 2.07, 1019.98,   0.00, 0.00, 0.00);
	CreateDynamicObject(1668, 1100.74, 2.04, 1019.98,   0.00, 0.00, 20.00);
	CreateDynamicObject(2311, 1092.80, 2.36, 1018.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(1726, 1092.61, 3.94, 1018.58,   0.00, 0.00, 0.00);
	CreateDynamicObject(1726, 1094.66, 0.75, 1018.58,   0.00, 0.00, 180.00);
	CreateDynamicObject(2311, 1092.80, -2.65, 1018.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(1726, 1092.61, -1.09, 1018.58,   0.00, 0.00, 0.00);
	CreateDynamicObject(1726, 1094.66, -4.18, 1018.58,   0.00, 0.00, 180.00);
	CreateDynamicObject(2106, 1092.51, -2.56, 1019.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(2106, 1092.57, 2.17, 1019.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(2229, 1097.42, 4.60, 1018.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(2229, 1101.17, -2.34, 1018.46,   0.00, 0.00, 270.00);
	CreateDynamicObject(1809, 1100.76, -1.21, 1019.81,   0.00, 0.00, 270.00);
	CreateDynamicObject(1533, 1101.14, -2.60, 1018.45,   0.00, 0.00, 270.00);
	//CreateDynamicObject(2350, 1096.72, 2.97, 1018.83,   0.00, 0.00, 20.00);
	CreateDynamicObject(2350, 1096.73, 1.61, 1018.83,   0.00, 0.00, 80.00);
	CreateDynamicObject(2350, 1096.75, 0.23, 1018.83,   0.00, 0.00, 100.00);
	CreateDynamicObject(2350, 1096.79, -1.13, 1018.83,   0.00, 0.00, 90.00);
	CreateDynamicObject(948, 1098.20, -2.13, 1018.44,   0.00, 0.00, 0.00);
	CreateDynamicObject(1726, 1092.61, -5.82, 1018.58,   0.00, 0.00, 0.00);
	CreateDynamicObject(1726, 1094.66, -8.91, 1018.58,   0.00, 0.00, 180.00);
	CreateDynamicObject(2311, 1092.80, -7.36, 1018.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2106, 1092.63, -7.08, 1019.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(2373, 1103.41, -11.41, 1018.38,   0.00, 0.00, 180.00);
	CreateDynamicObject(2373, 1102.83, -11.42, 1018.38,   0.00, 0.00, 180.00);
	CreateDynamicObject(3004, 1100.71, -11.13, 1020.02,   270.00, 0.00, 0.00);
	CreateDynamicObject(3004, 1100.77, -11.13, 1020.02,   273.00, 0.00, 0.00);
	CreateDynamicObject(3004, 1101.17, -10.99, 1019.98,   280.00, 0.00, 90.00);
	CreateDynamicObject(2350, 1100.89, -5.62, 1018.83,   0.00, 0.00, 90.00);
	CreateDynamicObject(2350, 1100.88, -6.20, 1018.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(2229, 1092.09, -10.56, 1018.61,   0.00, 0.00, 90.00);
	CreateDynamicObject(9127, 1087.96, 18.72, 1018.85,   0.00, 0.00, 27.00);
	CreateDynamicObject(9127, 1090.68, 18.80, 1018.85,   0.00, 0.00, 27.00);

   	//Floor
	new floor = CreateObject(19378, 1096.13, -0.05, 1018.38,   0.00, 90.00, 0.00);
   	new floor1 = CreateObject(19378, 1103.01, 3.03, 1018.44,   0.00, 90.00, 0.00);
   	new floor2 = CreateObject(19378, 1103.01, 3.21, 1018.50,   0.00, 90.00, 0.00);
   	new floor3 = CreateObject(19378, 1089.87, -0.05, 1018.44,   0.00, 90.00, 0.00);
   	new floor4 = CreateObject(19378, 1089.72, -0.05, 1018.53,   0.00, 90.00, 0.00);
   	new floor5 = CreateObject(19378, 1096.13, -9.68, 1018.38,   0.00, 90.00, 0.00);
   	new floor6 = CreateObject(19378, 1089.87, -9.68, 1018.44,   0.00, 90.00, 0.00);
   	new floor7 = CreateObject(19378, 1089.72, -9.69, 1018.53,   0.00, 90.00, 0.00);

    SetObjectMaterial(floor, 0, 14789, "ab_sfgymmain", "gym_floor6");
    SetObjectMaterial(floor1, 0, 14789, "ab_sfgymmain", "gym_floor6");
    SetObjectMaterial(floor2, 0, 14789, "ab_sfgymmain", "gym_floor6");
    SetObjectMaterial(floor3, 0, 14789, "ab_sfgymmain", "gym_floor6");
    SetObjectMaterial(floor4, 0, 14789, "ab_sfgymmain", "gym_floor6");
    SetObjectMaterial(floor5, 0, 14789, "ab_sfgymmain", "gym_floor6");
    SetObjectMaterial(floor6, 0, 14789, "ab_sfgymmain", "gym_floor6");
    SetObjectMaterial(floor7, 0, 14789, "ab_sfgymmain", "gym_floor6");

    //Ceiling
    new ceiling = CreateObject(19377, 1096.55, -0.15, 1022.0500,   0.00, 90.00, 0.00);
    new ceiling0 = CreateObject(19377, 1097.09, -9.78, 1022.0500,   0.00, 90.00, 0.00);

    SetObjectMaterial(ceiling, 0, 14838, "lee_stripclub", "Strip_ceiling");
    SetObjectMaterial(ceiling0, 0, 14838, "lee_stripclub", "Strip_ceiling");

    //Wall
    new wall = CreateObject(19448, 1101.27, -0.08, 1020.21,   0.00, 0.00, 0.00);
    new wall0 = CreateObject(19448, 1096.49, 4.70, 1020.21,   0.00, 0.00, 90.00);
    new wall1 = CreateObject(19448, 1092.01, -0.09, 1020.21,   0.00, 0.00, 0.00);
    new wall2 = CreateObject(19448, 1092.01, -9.72, 1020.21,   0.00, 0.00, 0.00);
    new wall3 = CreateObject(19448, 1101.27, -9.71, 1020.21,   0.00, 0.00, 0.00);
    new wall4 = CreateObject(19448, 1096.55, -11.22, 1020.21,   0.00, 0.00, 90.00);
    new wall5 = CreateObject(19429, 1098.20, -1.70, 1020.21,   0.00, 0.00, 90.00);
    new wall6 = CreateObject(19429, 1101.00, -1.70, 1020.21,   0.00, 0.00, 90.00);

    SetObjectMaterial(wall, 0, 14789, "ab_sfgymmain", "ab_wood02");
    SetObjectMaterial(wall0, 0, 14789, "ab_sfgymmain", "ab_wood02");
    SetObjectMaterial(wall1, 0, 14789, "ab_sfgymmain", "ab_wood02");
    SetObjectMaterial(wall2, 0, 14789, "ab_sfgymmain", "ab_wood02");
    SetObjectMaterial(wall3, 0, 14789, "ab_sfgymmain", "ab_wood02");
    SetObjectMaterial(wall4, 0, 14789, "ab_sfgymmain", "ab_wood02");
    SetObjectMaterial(wall5, 0, 14789, "ab_sfgymmain", "ab_wood02");
    SetObjectMaterial(wall6, 0, 14789, "ab_sfgymmain", "ab_wood02");

    //Black metal
    new bwall = CreateObject(19450, 1098.27, 3.18, 1018.03,   0.00, 0.00, 0.00);
    new bwall1 = CreateObject(19450, 1098.70, 3.26, 1017.61,   0.00, 0.00, 0.00);
    new bwall2 = CreateObject(19450, 1097.73, 3.16, 1017.41,   0.00, 180.00, 0.00);
    new bwall3 = CreateObject(19450, 1100.44, 3.14, 1017.41,   0.00, 180.00, 0.00);

    SetObjectMaterial(bwall, 0, 2232, "cj_hi_fi2", "CJ_Black_metal");
    SetObjectMaterial(bwall1, 0, 2232, "cj_hi_fi2", "CJ_Black_metal");
    SetObjectMaterial(bwall2, 0, 2232, "cj_hi_fi2", "CJ_Black_metal");
    SetObjectMaterial(bwall3, 0, 2232, "cj_hi_fi2", "CJ_Black_metal");

    new poolt = CreateObject(2964, 1098.60, -8.59, 1018.44,   0.00, 0.00, 90.00);
    SetObjectMaterial(poolt, 4, 2311, "cj_tv_stand", "CJ_WOOD_DARK");
}

stock Objects_FixesForExterior() {
	/* --- Denise Robinson's House Door Fix --- */

    CreateDynamicObject(1566, 2401.69995, -1714.59998, 14.4, 0, 0, 0);

    /* --- Idlewood Projects Bug Fix --- */

    CreateDynamicObject(5340, 1997.40002, -1593.40002, 16.2, 0, 90, 45);
	CreateDynamicObject(5340, 1992.5, -1588.5, 16.2, 0, 90, 44.994);
	CreateDynamicObject(5340, 1991.80005, -1587.90002, 16.2, 0, 90, 44.995);
	CreateDynamicObject(5340, 2006.5, -1593.59998, 16.2, 0, 90, 44.994);
	CreateDynamicObject(5340, 2017.30005, -1593.5, 16.2, 0, 90, 44.995);
}

stock Objects_FixesForInteriors() {
	/* --- Fixes House Interiors --- */

    CreateDynamicObject(19377,-0.8139800,-1.9055400,998.3317300,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,-0.8154600,7.7245200,998.3317300,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,-2.0740000,-1.4812400,996.2180800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19377,-2.0799300,8.1347900,996.2180800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19377,-1.0301700,10.5818400,996.2180800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19377,2.5629900,2.9117400,996.2180800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19377,2.6324900,-6.7102400,996.2180800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19377,1.4146300,-6.4027700,996.2180800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19377,-1.8906700,7.6504300,996.2180800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1498,1520.0999756,-48.7000008,1001.0999756,0.0000000,0.0000000,90.0000000); //object(gen_doorext03)(1)
	CreateDynamicObject(1498,1528.0999756,-47.2000008,1001.0999756,0.0000000,0.0000000,270.0000000); //object(gen_doorext03)(2)
	CreateDynamicObject(16775,1528.1999512,-46.0000000,1005.0999756,0.0000000,0.0000000,270.0000000); //object(door_savhangr2)(1)
	CreateDynamicObject(16775,1522.9000244,-41.0999985,1005.0999756,0.0000000,0.0000000,180.0000000); //object(door_savhangr2)(2)
	CreateDynamicObject(16775,1523.9000244,-45.2999992,1005.2999878,90.0000000,0.0000000,269.9945068); //object(door_savhangr2)(3)
	CreateDynamicObject(16775,1526.1999512,-51.4000015,1005.0999756,0.0000000,0.0000000,178.5000000); //object(door_savhangr2)(4)
	CreateDynamicObject(16775,1520.0000000,-45.2998047,1005.0999756,0.0000000,0.0000000,269.9890137); //object(door_savhangr2)(5)
	CreateDynamicObject(16775,522.7999878,-15.8999996,1004.5999756,0.0000000,0.0000000,0.0000000); //object(door_savhangr2)(1)
	CreateDynamicObject(16775,521.7000122,-10.5000000,1004.5999756,0.0000000,0.0000000,90.0000000); //object(door_savhangr2)(2)
	CreateDynamicObject(16775,514.9000244,-6.5999999,1004.5999756,0.0000000,0.0000000,179.7500000); //object(door_savhangr2)(3)
	CreateDynamicObject(16775,510.2999878,-13.3999996,1004.5999756,0.0000000,0.0000000,269.9973145); //object(door_savhangr2)(4)
	CreateDynamicObject(16775,510.2000122,-19.7000008,1004.5999756,0.0000000,0.0000000,330.7445068); //object(door_savhangr2)(5)
	CreateDynamicObject(16775,510.2000122,-20.6000004,1004.5999756,0.0000000,0.0000000,0.7434082); //object(door_savhangr2)(6)
	CreateDynamicObject(16775,510.1000061,-21.6000004,1004.5999756,0.0000000,0.0000000,18.4915771); //object(door_savhangr2)(7)
	CreateDynamicObject(16775,515.4000244,-23.2000008,1004.5999756,0.0000000,0.0000000,88.4899902); //object(door_savhangr2)(8)
	CreateDynamicObject(3440,514.5000000,-20.0000000,1001.7999878,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(1)
	CreateDynamicObject(3440,514.2000122,-20.2000008,1001.7999878,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(2)
	CreateDynamicObject(3440,513.7000122,-16.2999992,998.9500122,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(3)
	CreateDynamicObject(3440,513.0999756,-16.2999992,998.9500122,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(4)
	CreateDynamicObject(3440,512.4000244,-16.2999992,998.9500122,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(5)
	CreateDynamicObject(3440,512.4000244,-16.6000004,998.9500122,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(6)
	CreateDynamicObject(3440,513.7999878,-16.6000004,998.9500122,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(7)
	CreateDynamicObject(3440,513.0999756,-16.6000004,998.9500122,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(8)
	CreateDynamicObject(19426,2531.6999512,-1681.0000000,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(1)
	CreateDynamicObject(19426,2531.6999512,-1681.0999756,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(2)
	CreateDynamicObject(19426,2532.6000977,-1681.0000000,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(5)
	CreateDynamicObject(19426,2528.3000488,-1680.9998779,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(6)
	CreateDynamicObject(19426,2527.3999023,-1681.0000000,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(7)
	CreateDynamicObject(19426,2528.3000488,-1681.0999756,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(8)
	CreateDynamicObject(19426,2528.0000000,-1685.9000244,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(9)
	CreateDynamicObject(19426,2525.6000977,-1681.0999756,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(10)
	CreateDynamicObject(19426,2524.0000000,-1681.0000000,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(11)
	CreateDynamicObject(19426,2523.6000977,-1681.0000000,1016.2000122,0.0000000,0.0000000,0.0000000); //object(cs_landbit_20_a)(12)
	CreateDynamicObject(19426,2523.6000977,-1679.4000244,1016.2000122,0.0000000,0.0000000,0.0000000); //object(cs_landbit_20_a)(13)
	CreateDynamicObject(19426,2523.6000977,-1677.8000488,1016.2000122,0.0000000,0.0000000,0.0000000); //object(cs_landbit_20_a)(14)
	CreateDynamicObject(19426,2525.7998047,-1681.0996094,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(15)
	CreateDynamicObject(19426,2529.3000488,-1686.0999756,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(16)
	CreateDynamicObject(19426,2530.3999023,-1686.0999756,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(17)
	CreateDynamicObject(19426,2532.3999023,-1685.9000244,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(18)
	CreateDynamicObject(19426,2532.0000000,-1685.9000244,1016.2000122,0.0000000,0.0000000,90.0000000); //object(cs_landbit_20_a)(19)
	CreateDynamicObject(19426,2533.3000488,-1682.4000244,1016.2000122,0.0000000,0.0000000,180.0000000); //object(cs_landbit_20_a)(20)
	CreateDynamicObject(19426,2533.3000488,-1684.0000000,1016.2000122,0.0000000,0.0000000,179.9945068); //object(cs_landbit_20_a)(21)
	CreateDynamicObject(19426,2533.3000488,-1685.5000000,1016.2000122,0.0000000,0.0000000,179.9945068); //object(cs_landbit_20_a)(22)
	CreateDynamicObject(19426,2527.6999512,-1685.0999756,1016.2000122,0.0000000,0.0000000,0.0000000); //object(cs_landbit_20_a)(23)
	CreateDynamicObject(19426,2527.6999512,-1683.5000000,1016.2000122,0.0000000,0.0000000,0.0000000); //object(cs_landbit_20_a)(24)
	CreateDynamicObject(19426,2527.6999512,-1682.0000000,1016.2000122,0.0000000,0.0000000,0.0000000); //object(cs_landbit_20_a)(25)
	CreateDynamicObject(3440,2530.8000488,-1683.1999512,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(2)
	CreateDynamicObject(3440,2531.1999512,-1683.1999512,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(3)
	CreateDynamicObject(3440,2531.5000000,-1683.1999512,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(4)
	CreateDynamicObject(3440,2530.8999023,-1683.1999512,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(5)
	CreateDynamicObject(3440,2532.3999023,-1683.1999512,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(6)
	CreateDynamicObject(3440,2532.8999023,-1683.1999512,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(7)
	CreateDynamicObject(3440,2532.8999023,-1683.5000000,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(8)
	CreateDynamicObject(3440,2532.3000488,-1683.9000244,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(9)
	CreateDynamicObject(3440,2531.6000977,-1683.9000244,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(10)
	CreateDynamicObject(3440,2531.0000000,-1683.9000244,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(11)
	CreateDynamicObject(3440,2530.8999023,-1683.9000244,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(12)
	CreateDynamicObject(3440,2532.8000488,-1683.9000244,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(13)
	CreateDynamicObject(3440,2532.8000488,-1684.1999512,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(14)
	CreateDynamicObject(3440,2532.5000000,-1684.1999512,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(15)
	CreateDynamicObject(3440,2532.1999512,-1684.1999512,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(16)
	CreateDynamicObject(3440,2531.8000488,-1684.1999512,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(17)
	CreateDynamicObject(3440,2531.3999023,-1684.1999512,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(18)
	CreateDynamicObject(3440,2530.8000488,-1684.1999512,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(19)
	CreateDynamicObject(3440,2532.3000488,-1683.6999512,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(20)
	CreateDynamicObject(3440,2531.8999023,-1683.3000488,1012.5999756,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs)(21)
	CreateDynamicObject(19426,1.6000000,7.6100001,1000.2000122,0.0000000,0.0000000,270.0000000); //object(cs_landbit_20_a)(1)
	CreateDynamicObject(1535,218.1000061,1250.4000244,1081.0999756,0.0000000,0.0000000,90.0000000); //object(gen_doorext14)(2)
	CreateDynamicObject(17564,2255.5000000,-1139.8000488,1050.5999756,0.0000000,0.0000000,90.0000000); //object(tempdoor_lae2)(1)
	CreateDynamicObject(3294,2530.6001000,-1682.6999500,1014.4000200,0.0000000,90.0000000,90.7490000); //

	/* --- Rosenberg's Office in Caligulas --- */

	// Fix:

    CreateObject(16773,2189.0695801,1626.4240723,1042.3079834,90.0000000,180.0000000,270.0000000); //object(door_savhangr1) (1)
	CreateObject(16773,2181.0852051,1626.3874512,1042.3079834,90.0000000,0.0000000,90.0000000); //object(door_savhangr1) (2)
	CreateDynamicObject(16773,2177.5229492,1626.3874512,1046.0000000,0.0000000,0.0000000,90.0000000); //object(door_savhangr1) (3)
	CreateDynamicObject(16773,2191.6289062,1626.3874512,1046.0000000,0.0000000,0.0000000,90.0000000); //object(door_savhangr1) (4)
	CreateDynamicObject(16773,2184.5000000,1633.6500244,1046.0000000,0.0000000,0.0000000,0.0000000); //object(door_savhangr1) (5)
	CreateDynamicObject(16773,2184.2561035,1619.3929443,1046.0000000,0.0000000,0.0000000,0.0000000); //object(door_savhangr1) (6)
	CreateDynamicObject(16773,2171.1831055,1624.3896484,1046.0000000,0.0000000,0.0000000,0.0000000); //object(door_savhangr1) (9)
	CreateDynamicObject(7657,2177.5170898,1624.5200195,1047.5069580,0.0000000,0.0000000,0.0000000); //object(plasticsgate1) (2)
	CreateDynamicObject(985,2187.4399414,1623.3599854,1043.0000000,0.0000000,0.0000000,90.0000000); //object(gate_autor) (1)
	CreateDynamicObject(985,2187.4399414,1632.7679443,1042.4104004,0.0000000,0.0000000,90.0000000); //object(gate_autor) (2)
	CreateDynamicObject(985,2188.3903809,1620.2249756,1042.4104004,0.0000000,0.0000000,0.0000000); //object(gate_autor) (3)
	CreateDynamicObject(985,2184.5000000,1616.3890381,1042.6700439,0.0000000,0.0000000,90.0000000); //object(gate_autor) (5)
	CreateDynamicObject(985,2187.4399414,1629.2065430,1047.1259766,0.0000000,0.0000000,90.0000000); //object(gate_autor) (6)
	CreateDynamicObject(985,2180.4099121,1616.3850098,1042.6700439,0.0000000,0.0000000,90.0000000); //object(gate_autor) (7)
	CreateDynamicObject(985,2176.5092773,1620.2249756,1042.4104004,0.0000000,0.0000000,0.0000000); //object(gate_autor) (8)
	CreateDynamicObject(968,2179.0000000,1619.5959473,1043.2460938,90.0000000,0.0000000,90.0000000); //object(barrierturn) (1)
	CreateDynamicObject(968,2186.7397461,1624.3879395,1042.4104004,0.0000000,0.0000000,90.0000000); //object(barrierturn) (2)
	CreateDynamicObject(968,2186.4299316,1624.4179688,1046.2944336,180.0000000,0.0000000,90.0000000); //object(barrierturn) (3)
	//CreateDynamicObject(2395,2181.1000977,1630.1999512,1043.0400391,90.0000000,0.0000000,0.0000000); //object(cj_sports_wall) (1)
	//CreateDynamicObject(2395,2181.1999512,1627.5999756,1043.0400391,90.0000000,0.0000000,90.0000000); //object(cj_sports_wall) (4)
	//CreateDynamicObject(1210,2182.5500488,1631.0999756,1043.1760254,90.0000000,0.0000000,0.0000000); //object(briefcase) (3)
	//CreateDynamicObject(1210,2180.2099609,1628.8299561,1043.1760254,90.0000000,0.0000000,90.0000000); //object(briefcase) (4)
	//CreateDynamicObject(1210,2182.5200195,1626.5500488,1043.1760254,90.0000000,0.0000000,0.0000000); //object(briefcase) (5)
	//CreateDynamicObject(1210,2184.7900391,1628.8199463,1043.1760254,90.0000000,0.0000000,90.0000000); //object(briefcase) (6)

	// Additional:

	CreateDynamicObject(1557, 2187.95996, 1620.31653, 1042.41907,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1557, 2190.94971, 1620.31653, 1042.41907,   0.00000, 0.00000, 180.00000);

	/* --- Secret Valley Diner --- */

	// Fix:

	CreateDynamicObject(19464,438.6300000,-66.1300000,1000.7300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,441.0800000,-69.2200000,1000.7300000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19464,441.2100000,-66.2200000,998.5500000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19464,441.1700000,-60.2800000,998.5500000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19464,446.2500000,-66.2400000,998.5500000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19464,441.1700000,-54.4400000,998.5500000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19464,441.2500000,-51.5900000,998.5500000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19464,438.6300000,-60.2200000,1000.7300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,438.6300000,-54.2700000,1000.7300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,438.6300000,-52.3100000,1000.7300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,436.6800000,-49.6600000,1000.7300000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19464,436.6800000,-49.4200000,1000.7300000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19464,440.2600000,-49.0200000,1000.7300000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19464,446.1900000,-49.0200000,1000.7300000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19464,449.2200000,-51.0500000,1000.7300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,452.0600000,-53.8900000,1000.7300000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19464,452.0000000,-60.2200000,1000.7300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,452.0000000,-54.2700000,1000.7300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,452.0000000,-66.1300000,1000.7300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,449.5000000,-69.2200000,1000.7300000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19464,448.3800000,-66.0000000,997.2100000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,446.6800000,-51.5600000,998.5500000,0.0000000,90.0000000,90.0000000); //
	CreateDynamicObject(19464,449.2200000,-56.5100000,998.5500000,0.0000000,90.0000000,90.0000000); //
	CreateDynamicObject(19464,445.5900000,-61.9200000,998.5500000,0.0000000,90.0000000,90.0000000); //
	CreateDynamicObject(19464,446.2100000,-66.5600000,998.5500000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19464,451.0100000,-66.5200000,998.5500000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19464,446.3600000,-59.0400000,996.1300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,446.0700000,-62.1200000,996.1300000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19464,443.5900000,-59.0400000,996.1300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,444.6200000,-61.1100000,995.7500000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19464,449.2400000,-61.6000000,998.5500000,0.0000000,90.0000000,90.0000000); //
	CreateDynamicObject(19464,446.5100000,-69.2200000,1000.7300000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19464,449.1000000,-66.1000000,997.2100000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,453.8700000,-58.9200000,997.2100000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19464,448.4000000,-60.7900000,997.2100000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,449.0800000,-60.8400000,997.2100000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,451.0000000,-61.7700000,997.2100000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,451.0100000,-64.9300000,997.2100000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19464,453.8500000,-61.3500000,999.6300000,0.0000000,90.0000000,90.0000000); //
	CreateDynamicObject(19464,453.8500000,-65.3400000,999.6300000,0.0000000,90.0000000,90.0000000); //
	new obj = CreateDynamicObject(19396, 445.04, -59.23, 997.92,   0.00, 0.00, 90.00);
	SetDynamicObjectMaterial(obj, 0, 18029, "genintintsmallrest", "GB_restaursmll09");

	obj = CreateDynamicObject(19396, 446.56, -57.54, 997.92,   0.00, 0.00, 0.00);
	SetDynamicObjectMaterial(obj, 0, 18029, "genintintsmallrest", "GB_restaursmll09");

	obj = CreateDynamicObject(19396, 445.00, -59.23, 994.42,   180.00, 0.00, 90.00);
	SetDynamicObjectMaterial(obj, 0, 18029, "genintintsmallrest", "GB_restaursmll09");

	// Additional:

	CreateDynamicObject(14438, 454.32, -55.17, 1004.93,   0.00, 0.00, 0.00);
	CreateDynamicObject(14438, 454.31, -65.16, 1004.93,   0.00, 0.00, 0.00);

	/* --- Brothel --- */

	// Fix:

	CreateDynamicObject(8661, 968.58, -1.30, 1000.16,   0.00, 0.00, 0.00);
	CreateDynamicObject(8661, 938.72, 1.05, 999.94,   0.00, 0.00, 90.00);
	CreateDynamicObject(19453, 957.39, 0.29, 1000.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(19453, 960.10, 4.12, 1000.61,   0.00, 0.00, 90.00);
	CreateDynamicObject(19453, 964.44, 0.33, 1000.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(19439, 945.33, -14.72, 1000.31,   90.00, 90.00, 90.00);
	CreateDynamicObject(19439, 946.28, -14.09, 1000.31,   90.00, 90.00, 90.00);
	CreateDynamicObject(19439, 945.33, -14.10, 1000.31,   90.00, 90.00, 90.00);
	CreateDynamicObject(19439, 946.28, -14.73, 1000.31,   90.00, 90.00, 90.00);
	CreateDynamicObject(2206, 945.90, -13.28, 1000.66,   0.00, 90.00, 90.00);
	CreateDynamicObject(2206, 945.85, -14.68, 1000.22,   0.00, 0.00, 90.00);
	CreateDynamicObject(2206, 945.86, -15.99, 1000.24,   0.00, 0.00, 90.00);
	CreateDynamicObject(2206, 945.86, -15.54, 1000.58,   0.00, 90.00, -90.00);
	CreateDynamicObject(8661, 937.30, 1.37, 1004.06,   0.00, 180.00, 90.00);
	CreateDynamicObject(8661, 968.58, -1.30, 1003.98,   0.00, 180.00, 0.00);
	CreateDynamicObject(19464, 959.28, 1.68, 1002.46,   0.00, 90.00, 90.00);
	CreateDynamicObject(19464, 959.25, -1.84, 1002.46,   0.00, 90.00, 90.00);
	CreateDynamicObject(19464, 961.77, -1.89, 1002.46,   0.00, 90.00, 90.00);
	CreateDynamicObject(19464, 962.38, 1.83, 1002.46,   0.00, 90.00, 90.00);
	CreateDynamicObject(2308, 945.44, 5.34, 1000.44,   -90.00, 180.00, 90.00);
	CreateDynamicObject(19458, 941.38, 5.18, 999.28,   0.00, 0.00, 90.00);
	CreateDynamicObject(19458, 941.33, 5.70, 999.28,   0.00, 0.00, 90.00);
	CreateDynamicObject(19458, 936.61, 9.91, 999.28,   0.00, 0.00, 0.00);
	CreateDynamicObject(19458, 937.36, 10.59, 999.28,   0.00, 0.00, 0.00);
	CreateDynamicObject(19370, 942.12, -2.93, 1000.92,   0.00, 90.00, 0.00);
	CreateDynamicObject(19370, 938.62, -2.93, 1000.92,   0.00, 90.00, 0.00);
	CreateDynamicObject(3440, 937.21, -4.20, 998.62,   0.00, 0.00, 0.00);
	CreateDynamicObject(3440, 937.21, -1.71, 998.62,   0.00, 0.00, 0.00);
	CreateDynamicObject(3440, 943.53, -1.71, 998.62,   0.00, 0.00, 0.00);
	CreateDynamicObject(3440, 943.53, -4.20, 998.62,   0.00, 0.00, 0.00);
	CreateDynamicObject(1753, 939.48, -6.00, 999.94,   0.00, 0.00, 180.00);
	CreateDynamicObject(1753, 943.16, -6.00, 999.94,   0.00, 0.00, 180.00);
	CreateDynamicObject(1753, 945.42, -1.96, 999.94,   0.00, 0.00, -90.00);
	CreateDynamicObject(1753, 941.10, 0.06, 999.94,   0.00, 0.00, 0.00);
	CreateDynamicObject(1753, 937.48, 0.06, 999.94,   0.00, 0.00, 0.00);
	CreateDynamicObject(1753, 936.61, -10.57, 999.93,   0.00, 0.00, 180.00);
	CreateDynamicObject(1753, 934.60, -10.63, 999.94,   0.00, 0.00, 90.00);
	CreateDynamicObject(912, 945.41, 5.41, 1000.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(912, 945.41, 5.41, 1000.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(912, 944.01, 5.41, 1000.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(912, 942.59, 5.41, 1000.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(912, 941.19, 5.41, 1000.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(912, 939.79, 5.41, 1000.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(912, 938.43, 5.41, 1000.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(912, 937.21, 5.41, 1000.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(912, 937.00, 6.47, 1000.46,   0.00, 0.00, 90.00);
	CreateDynamicObject(912, 937.00, 7.87, 1000.46,   0.00, 0.00, 90.00);
	CreateDynamicObject(912, 940.68, 8.50, 1000.26,   0.00, -90.00, 90.00);
	CreateDynamicObject(912, 939.58, 8.50, 1000.26,   0.00, -90.00, 90.00);
	CreateDynamicObject(912, 941.73, 8.50, 1000.26,   0.00, -90.00, 90.00);
	CreateDynamicObject(912, 945.28, 8.50, 1000.26,   0.00, -90.00, 90.00);
	CreateDynamicObject(912, 944.18, 8.50, 1000.26,   0.00, -90.00, 90.00);
	CreateDynamicObject(19368, 947.49, 8.22, 1000.40,   0.00, 0.00, 90.00);
	CreateDynamicObject(8661, 946.02, 28.06, 1002.74,   0.00, 180.00, 90.00);
	CreateDynamicObject(912, 936.98, 9.01, 1000.46,   0.00, 0.00, 90.00);
	CreateDynamicObject(1234, 941.95, -3.08, 1003.31,   0.00, 0.00, 0.00);
	CreateDynamicObject(3335, 938.75, 10.66, 1000.90,   -90.00, 0.00, 180.00);
	CreateDynamicObject(3335, 938.71, 10.65, 1000.92,   -90.00, 0.00, 180.00);
	CreateDynamicObject(3335, 943.78, 10.65, 1000.90,   -90.00, 0.00, 180.00);
	CreateDynamicObject(3335, 944.49, 10.65, 1000.90,   -90.00, 0.00, 180.00);
	CreateDynamicObject(3335, 941.26, 10.65, 1000.90,   -90.00, 0.00, 180.00);
	CreateDynamicObject(19439, 938.27, 7.89, 998.50,   0.00, 0.00, 90.00);
	CreateDynamicObject(19439, 938.29, 9.55, 1000.86,   0.00, 90.00, 90.00);
	CreateDynamicObject(1649, 938.22, 7.95, 998.69,   0.00, 90.00, 0.00);
	CreateDynamicObject(19439, 943.01, 8.57, 999.12,   0.00, 0.00, 90.00);
	CreateDynamicObject(19439, 937.49, 8.75, 999.08,   0.00, 0.00, 0.00);
	CreateDynamicObject(19439, 939.03, 8.75, 999.08,   0.00, 0.00, 0.00);
	CreateDynamicObject(19430, 942.80, 9.66, 1000.16,   0.00, 90.00, 90.00);
	CreateDynamicObject(1234, 938.77, -3.07, 1003.31,   0.00, 0.00, 0.00);
	CreateDynamicObject(1234, 932.97, 0.26, 1003.31,   0.00, 0.00, 0.00);
	CreateDynamicObject(1234, 932.99, -4.75, 1003.31,   0.00, 0.00, 0.00);
	CreateDynamicObject(19439, 942.91, 7.92, 998.50,   0.00, 0.00, 90.00);
	CreateDynamicObject(1649, 942.95, 7.92, 998.69,   0.00, 90.00, 0.00);
	CreateDynamicObject(19439, 942.94, 9.57, 1000.86,   0.00, 90.00, 90.00);
	CreateDynamicObject(19439, 938.29, 8.57, 999.12,   0.00, 0.00, 90.00);
	CreateDynamicObject(19439, 942.18, 8.80, 999.12,   0.00, 0.00, 0.00);
	CreateDynamicObject(19439, 943.72, 8.78, 999.12,   0.00, 0.00, 0.00);
	CreateDynamicObject(19430, 938.23, 9.64, 1000.16,   0.00, 90.00, 90.00);
	CreateDynamicObject(1543, 938.86, 8.10, 1000.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(1486, 937.65, 8.11, 1000.37,   0.00, 0.00, 90.00);
	CreateDynamicObject(1486, 937.75, 8.11, 1000.37,   0.00, 0.00, 90.00);
	CreateDynamicObject(1486, 937.85, 8.11, 1000.37,   0.00, 0.00, 90.00);
	CreateDynamicObject(1486, 937.96, 8.11, 1000.37,   0.00, 0.00, 90.00);
	CreateDynamicObject(1486, 937.65, 8.29, 1000.37,   0.00, 0.00, 90.00);
	CreateDynamicObject(1486, 937.75, 8.29, 1000.37,   0.00, 0.00, 90.00);
	CreateDynamicObject(1486, 937.85, 8.29, 1000.37,   0.00, 0.00, 90.00);
	CreateDynamicObject(1486, 937.96, 8.29, 1000.37,   0.00, 0.00, 90.00);
	CreateDynamicObject(1486, 938.06, 8.29, 1000.37,   0.00, 0.00, 90.00);
	CreateDynamicObject(1486, 938.06, 8.11, 1000.37,   0.00, 0.00, 90.00);
	CreateDynamicObject(1543, 938.36, 8.10, 1000.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(1543, 938.46, 8.10, 1000.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(1543, 938.56, 8.10, 1000.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(1543, 938.66, 8.10, 1000.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(1543, 938.76, 8.10, 1000.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(1543, 938.36, 8.29, 1000.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(1543, 938.46, 8.29, 1000.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(1543, 938.56, 8.29, 1000.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(1543, 938.66, 8.29, 1000.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(1543, 938.76, 8.29, 1000.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(1543, 938.86, 8.29, 1000.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(1951, 943.42, 8.14, 1000.43,   0.00, 0.00, -90.00);
	CreateDynamicObject(1951, 942.41, 8.15, 1000.43,   0.00, 0.00, -90.00);
	CreateDynamicObject(1951, 942.61, 8.15, 1000.43,   0.00, 0.00, -90.00);
	CreateDynamicObject(1951, 942.82, 8.15, 1000.43,   0.00, 0.00, -90.00);
	CreateDynamicObject(1951, 943.02, 8.14, 1000.43,   0.00, 0.00, -90.00);
	CreateDynamicObject(1951, 943.22, 8.14, 1000.43,   0.00, 0.00, -90.00);
	CreateDynamicObject(1951, 943.42, 8.48, 1000.43,   0.00, 0.00, -90.00);
	CreateDynamicObject(1951, 943.22, 8.48, 1000.43,   0.00, 0.00, -90.00);
	CreateDynamicObject(1951, 943.02, 8.48, 1000.43,   0.00, 0.00, -90.00);
	CreateDynamicObject(1951, 942.82, 8.48, 1000.43,   0.00, 0.00, -90.00);
	CreateDynamicObject(1951, 942.61, 8.48, 1000.43,   0.00, 0.00, -90.00);
	CreateDynamicObject(1951, 942.41, 8.48, 1000.43,   0.00, 0.00, -90.00);

	/* --- Blastin' Fools Records --- */

	// Fix:

	CreateObject(19464, 1042.02, 9.30, 1000.13, 0.00, 90.00, 0.00);
	CreateObject(19464, 1037.09, 9.22, 1000.14, 0.00, 90.00, 0.00);
	CreateObject(19464, 1037.77, 3.41, 1000.14, 0.00, 90.00, 0.00);
	CreateObject(19464, 1037.80, -2.50, 1000.14, 0.00, 90.00, 0.00);
	CreateObject(19464, 1044.60, 9.98, 1001.40, 0.00, 0.00, 0.00);
	CreateObject(19464, 1040.34, 5.45, 1001.40, 0.00, 0.00, 0.00);
	CreateObject(19464, 1040.34, -0.36, 1001.40, 0.00, 0.00, 0.00);
	CreateObject(19464, 1040.34, -5.32, 1001.40, 0.00, 0.00, 0.00);
	CreateObject(19464, 1035.88, 9.26, 1001.40, 0.00, 0.00, 0.00);
	CreateObject(19464, 1035.90, 3.66, 1001.40, 0.00, 0.00, 0.00);
	CreateObject(19464, 1035.90, -1.98, 1001.40, 0.00, 0.00, 0.00);
	CreateObject(19464, 1038.22, -4.88, 1001.40, 0.00, 0.00, 90.00);
	CreateObject(19464, 1038.74, 12.19, 1001.40, 0.00, 0.00, 90.00);
	CreateObject(19464, 1043.70, 12.20, 1001.40, 0.00, 0.00, 90.00);
	CreateObject(19464, 1043.39, 8.32, 1001.40, 0.00, 0.00, 90.00);
	CreateObject(19464, 1037.09, 9.22, 1003.86, 0.00, 90.00, 0.00);
	CreateObject(19464, 1037.77, 3.41, 1003.86, 0.00, 90.00, 0.00);
	CreateObject(19464, 1037.80, -2.50, 1003.86, 0.00, 90.00, 0.00);
	CreateObject(19464, 1042.02, 9.30, 1003.86, 0.00, 90.00, 0.00);
	CreateDynamicObject(1703, 1036.18, 11.48, 1000.26, 0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 1036.52, 9.70, 1000.27, 0.00, 0.00, 90.00);
	CreateDynamicObject(1703, 1036.52, 7.17, 1000.27, 0.00, 0.00, 90.00);
	CreateDynamicObject(1703, 1038.70, 11.48, 1000.26, 0.00, 0.00, 0.00);
	CreateDynamicObject(2209, 1036.59, 1.79, 1000.26, 0.00, 0.00, 90.00);
	CreateDynamicObject(2852, 1036.44, 2.62, 1001.08, 0.00, 0.00, 0.00);
	CreateDynamicObject(1808, 1036.26, -0.19, 1000.28, 0.00, 0.00, 90.00);
	CreateDynamicObject(2437, 1036.53, 0.68, 1000.28, 0.00, 0.00, 0.00);

	/* --- The Welcome Pump --- */

	// Fix:

	CreateDynamicObject(8661, 682.77, -454.84, -26.62,   0.00, 0.00, 90.00);
	CreateObject(19464, 682.72, -447.83, -24.10,   0.00, 0.00, 0.00);
	CreateObject(19464, 680.30, -447.84, -24.10,   0.00, 0.00, 0.00);
	CreateObject(19464, 682.72, -441.99, -24.10,   0.00, 0.00, 0.00);
	CreateObject(19464, 680.30, -441.97, -24.10,   0.00, 0.00, 0.00);
	CreateObject(19465, 681.50, -444.09, -24.10,   0.00, 0.00, 90.00);
	CreateDynamicObject(1501, 680.73, -444.16, -26.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(1501, 682.23, -444.16, -26.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2836, 681.00, -445.16, -26.61,   0.00, 0.00, 0.00);
	CreateObject(19464, 682.09, -443.97, -26.22,   0.00, 0.00, 90.00);

	/* --- Diner 1 --- */

	// Fix:

	CreateObject(19464, 461.12, -105.82, 1000.63,   0.00, 0.00, 0.00);
	CreateObject(19403, 461.12, -109.53, 1000.25,   0.00, 0.00, 0.00);
	CreateObject(19464, 461.12, -113.52, 1000.63,   0.00, 0.00, 0.00);
	CreateObject(19464, 458.21, -103.45, 1000.63,   0.00, 0.00, 90.00);
	CreateObject(19464, 452.45, -103.45, 1000.63,   0.00, 0.00, 90.00);
	CreateObject(19464, 441.85, -111.12, 1000.63,   0.00, 0.00, 0.00);
	CreateObject(19464, 446.77, -103.35, 1000.63,   0.00, 0.00, 90.00);
	CreateObject(19464, 441.74, -106.44, 1000.63,   0.00, 0.00, 0.00);
	CreateObject(19464, 441.73, -103.36, 1000.63,   0.00, 0.00, 90.00);
	CreateObject(19464, 441.73, -111.83, 1000.63,   0.00, 0.00, 90.00);
	CreateObject(19464, 446.77, -111.83, 1000.63,   0.00, 0.00, 90.00);
	CreateObject(19464, 452.45, -111.83, 1000.63,   0.00, 0.00, 90.00);
	CreateObject(19464, 458.21, -111.83, 1000.63,   0.00, 0.00, 90.00);
	CreateObject(19464, 458.77, -105.68, 998.42,   0.00, 90.00, 0.00);
	CreateObject(19464, 458.71, -109.14, 998.42,   0.00, 90.00, 0.00);
	CreateObject(19464, 453.94, -109.64, 998.42,   0.00, 90.00, 0.00);
	CreateObject(19464, 453.81, -105.44, 998.42,   0.00, 90.00, 0.00);
	CreateObject(19464, 448.85, -105.29, 998.42,   0.00, 90.00, 0.00);
	CreateObject(19464, 448.96, -109.97, 998.42,   0.00, 90.00, 0.00);
	CreateObject(19464, 444.05, -110.06, 998.42,   0.00, 90.00, 0.00);
	CreateObject(19464, 444.10, -104.86, 998.42,   0.00, 90.00, 0.00);
	CreateObject(19464, 444.86, -109.41, 1002.63,   0.00, 81.00, 90.00);
	CreateObject(19464, 450.62, -109.39, 1002.63,   0.00, 81.00, 90.00);
	CreateObject(19464, 456.58, -109.40, 1002.63,   0.00, 81.00, 90.00);
	CreateObject(19464, 460.50, -109.41, 1002.63,   0.00, 81.00, 90.00);
	CreateObject(19464, 444.81, -104.61, 1002.63,   0.00, -81.00, 90.00);
	CreateObject(19464, 450.84, -104.45, 1002.63,   0.00, -81.00, 90.00);
	CreateObject(19464, 456.76, -104.49, 1002.63,   0.00, -81.00, 90.00);
	CreateObject(19464, 461.47, -104.43, 1002.63,   0.00, -81.00, 90.00);
	CreateObject(19462, 456.36, -106.45, 997.85,   0.00, 0.00, 90.00);
	CreateObject(19462, 456.36, -106.68, 996.97,   0.00, 0.00, 90.00);
	CreateObject(19462, 456.36, -106.87, 996.97,   0.00, 0.00, 90.00);
	CreateObject(19462, 449.82, -106.01, 997.85,   0.00, 0.00, 90.00);
	CreateObject(19462, 449.81, -106.68, 996.97,   0.00, 0.00, 90.00);
	CreateObject(19462, 449.81, -106.87, 996.97,   0.00, 0.00, 90.00);
	CreateObject(19462, 449.81, -106.45, 997.85,   0.00, 0.00, 90.00);
	CreateObject(19462, 459.09, -106.01, 997.85,   0.00, 0.00, 90.00);
	CreateDynamicObject(2094, 445.49, -107.41, 998.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2094, 447.39, -107.41, 998.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2094, 449.35, -107.41, 998.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2094, 451.27, -107.41, 998.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2094, 453.17, -107.41, 998.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2094, 455.11, -107.41, 998.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2094, 457.03, -107.41, 998.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2094, 458.93, -107.41, 998.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2094, 460.40, -107.41, 998.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2342, 456.56, -109.75, 999.43,   0.00, 0.00, 90.00);
	CreateDynamicObject(2222, 451.19, -106.32, 999.69,   0.00, 0.00, 0.00);
	CreateDynamicObject(2222, 452.43, -109.56, 999.39,   0.00, 0.00, 180.00);
	CreateDynamicObject(2222, 446.22, -110.81, 999.39,   0.00, 0.00, 180.00);
	CreateDynamicObject(2221, 446.19, -109.65, 999.39,   0.00, 0.00, 180.00);
	CreateDynamicObject(2342, 447.16, -110.05, 999.43,   0.00, 0.00, 90.00);
	CreateDynamicObject(2221, 450.19, -110.73, 999.39,   0.00, 0.00, 180.00);
	CreateDynamicObject(2223, 449.29, -109.82, 999.35,   0.00, 0.00, 0.00);
	CreateDynamicObject(1514, 449.60, -106.24, 999.73,   0.00, 0.00, 0.00);
	CreateDynamicObject(1514, 447.62, -106.24, 999.73,   0.00, 0.00, 0.00);
	CreateDynamicObject(1514, 451.76, -106.24, 999.73,   0.00, 0.00, 0.00);
	CreateDynamicObject(1502, 445.03, -105.73, 999.35,   180.00, 0.00, 90.00);
	CreateObject(19386, 445.07, -104.94, 997.85,   180.00, 0.00, 0.00);
	CreateDynamicObject(1513, 452.36, -106.35, 999.89,   0.00, 0.00, 0.00);
	CreateDynamicObject(2500, 456.45, -106.19, 999.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2500, 455.92, -106.19, 999.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2429, 448.49, -103.30, 999.91,   0.00, 0.00, 0.00);
	CreateDynamicObject(2437, 447.98, -103.83, 1000.97,   0.00, 180.00, 133.00);
	CreateDynamicObject(2437, 448.24, -103.83, 1000.97,   0.00, 180.00, 133.00);
	CreateDynamicObject(2429, 450.00, -103.30, 999.91,   0.00, 0.00, 0.00);
	CreateDynamicObject(2437, 449.49, -103.83, 1000.97,   0.00, 180.00, 133.00);
	CreateDynamicObject(2437, 449.75, -103.83, 1000.97,   0.00, 180.00, 133.00);
	CreateDynamicObject(2429, 451.70, -103.30, 999.91,   0.00, 0.00, 0.00);
	CreateDynamicObject(2437, 451.19, -103.83, 1000.97,   0.00, 180.00, 133.00);
	CreateDynamicObject(2437, 451.45, -103.83, 1000.97,   0.00, 180.00, 133.00);
	CreateDynamicObject(2415, 452.55, -104.23, 998.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(2416, 454.40, -104.08, 998.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(2417, 453.42, -104.04, 998.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(2418, 456.29, -104.07, 998.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(2419, 458.18, -104.07, 998.55,   0.00, 0.00, 0.00);

	/* --- Brothel 2 --- */

	CreateDynamicObject(19446, 964.89, -53.39, 1000.11,   90.00, 0.00, 0.00);
	CreateDynamicObject(1569, 964.86, -54.01, 1000.07,   0.00, 0.00, 90.00);
	CreateDynamicObject(2024, 960.25, -58.06, 1000.12,   356.86, 0.00, 3.14);
}

stock Objects_AdminJail() {
    CreateObject(8419, 945.09997559, -1255.09997559, 768.50000000, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(19464,919.40002441,-1283.09997559,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,919.40002441,-1277.19995117,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,919.40002441,-1271.30004883,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,919.40002441,-1265.40002441,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,919.40002441,-1259.50000000,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,919.40002441,-1253.59997559,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,919.40002441,-1247.69995117,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,919.40002441,-1241.80004883,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,919.40002441,-1235.90002441,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,922.40002441,-1233.00000000,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19464,928.29998779,-1233.00000000,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19464,934.20001221,-1233.00000000,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19464,940.09997559,-1233.00000000,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19464,946.00000000,-1233.00000000,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19464,951.90002441,-1233.00000000,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19464,957.79998779,-1233.00000000,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19464,960.70001221,-1235.90002441,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,960.70001221,-1241.80004883,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,960.70001221,-1247.69995117,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,960.70001221,-1253.59997559,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,960.70001221,-1259.50000000,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,960.70001221,-1265.40002441,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,960.70001221,-1271.30004883,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,960.70001221,-1277.19995117,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,960.70001221,-1283.09997559,782.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19464,957.70001221,-1286.09997559,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19464,951.79998779,-1286.09997559,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19464,945.90002441,-1286.09997559,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19464,940.00000000,-1286.09997559,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19464,934.09997559,-1286.09997559,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19464,928.20001221,-1286.09997559,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19464,922.29998779,-1286.09997559,782.79998779,0.00000000,0.00000000,90.00000000);
	CreateObject(8419, 945.09997559, -1255.09997559, 797.00000000, 0.00000000, 180.00000000, 0.00000000);
}

stock Objects_BikerAreaCommerce() {
	CreateDynamicObject(13015, 1638.41, -1511.34, 15.34,   0.00, 0.00, 180.00);
	CreateDynamicObject(17864, 1650.40, -1525.95, 12.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19460, 1645.88, -1518.10, 12.48,   0.00, 90.00, 0.00);
	CreateDynamicObject(19460, 1645.88, -1515.90, 12.48,   0.00, 90.00, 0.00);
	CreateDynamicObject(1440, 1646.48, -1512.99, 13.04,   0.00, 0.00, 90.00);
	CreateDynamicObject(1438, 1646.44, -1519.96, 12.53,   0.00, 0.00, 96.00);
	CreateDynamicObject(775, 1650.73, -1497.40, 12.44,   0.00, 0.00, 90.00);
	CreateDynamicObject(1688, 1631.00, -1490.51, 18.31,   0.00, 0.00, 0.00);
	CreateDynamicObject(1688, 1629.66, -1493.12, 18.31,   0.00, 0.00, 0.00);
	CreateDynamicObject(1440, 1625.27, -1487.83, 13.03,   0.00, 0.00, -90.00);
	CreateDynamicObject(1438, 1624.51, -1535.05, 12.58,   0.00, 0.00, 0.00);
	CreateDynamicObject(1294, 1624.64, -1501.34, 13.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(17064, 1634.90, -1462.34, 12.44,   0.00, 0.00, 90.00);
	CreateDynamicObject(8659, 1632.38, -1451.09, 12.84,   0.00, 0.00, 0.00);
	CreateDynamicObject(8659, 1614.03, -1451.09, 12.84,   0.00, 0.00, 0.00);
	CreateDynamicObject(1372, 1639.47, -1463.30, 12.60,   0.00, 0.00, 90.00);
	CreateDynamicObject(1372, 1645.84, -1515.71, 12.60,   0.00, 0.00, 90.00);
	CreateDynamicObject(1372, 1645.81, -1515.71, 12.60,   0.00, 0.00, 90.00);
	CreateDynamicObject(1372, 1645.81, -1517.55, 12.60,   0.00, 0.00, 90.00);
	CreateDynamicObject(775, 1650.84, -1518.89, 12.44,   0.00, 0.00, 95.08);
	CreateDynamicObject(10183, 1626.48, -1477.28, 12.55,   0.00, 0.00, 45.54);
	CreateDynamicObject(1410, 1641.10, -1473.14, 13.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1410, 1645.55, -1473.14, 13.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1418, 1640.37, -1485.99, 13.15,   0.00, 0.00, -90.00);
	CreateDynamicObject(1418, 1638.14, -1485.99, 13.15,   0.00, 0.00, -90.00);
	CreateDynamicObject(1216, 1641.21, -1485.75, 13.24,   0.00, 0.00, 180.00);
	CreateDynamicObject(1483, 1640.81, -1469.61, 14.31,   0.00, 0.00, 180.00);
	CreateDynamicObject(7922, 1646.97, -1452.05, 12.45,   0.00, 0.00, -90.00);
}

stock LoadDrugHouse()
{
	//house fix
	CreateDynamicObject(3651,2395.2578100,-1310.6608900,26.8803000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(3651,2395.2578100,-1295.6608900,27.1203000,0.0000000,0.0000000,180.0000000); //
	//
	CreateDynamicObject(19378,2192.1300000,-1243.1500000,1528.0200000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19378,2202.6300000,-1243.1500000,1528.0200000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19378,2192.1300000,-1252.7800000,1528.0200000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19365,2189.0400000,-1243.5000000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19394,2192.2500000,-1243.5000000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19394,2194.9300000,-1244.6100000,1529.8700000,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(19378,2202.6300000,-1252.7800000,1528.0200000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19365,2187.5400000,-1246.2000000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19394,2190.7500000,-1246.2000000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19438,2192.8600000,-1246.7400000,1529.8700000,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(19394,2193.4000000,-1248.8500000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19365,2193.4000000,-1252.0500000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19394,2193.4000000,-1255.2400000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19365,2187.3700000,-1244.6300000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19365,2196.0400000,-1247.2900000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19459,2193.8000000,-1238.6400000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,2188.6200000,-1253.6500000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19395,2190.7400000,-1246.2100000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19367,2187.5400000,-1246.2100000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19440,2192.8500000,-1246.7500000,1529.8700000,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(19395,2193.3900000,-1248.8400000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19367,2193.3900000,-1252.0500000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19459,2187.2100000,-1248.8700000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(17969,2190.3000000,-1253.5300000,1530.1200000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1502,2189.9700000,-1246.2300000,1528.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1502,2193.3800000,-1248.0700000,1528.1000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1502,2194.3600000,-1244.0700000,1528.1000000,0.0000000,0.0000000,-45.0000000); //
	CreateDynamicObject(1502,2191.4600000,-1243.5200000,1528.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2236,2190.1500000,-1251.2100000,1528.1000000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1756,2187.8600000,-1251.4500000,1528.1100000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1711,2189.1400000,-1248.5900000,1528.1000000,0.0000000,0.0000000,7.0000000); //
	CreateDynamicObject(1712,2191.4300000,-1249.8100000,1528.1000000,0.0000000,0.0000000,-94.0000000); //
	CreateDynamicObject(2313,2190.1400000,-1253.2200000,1528.1000000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2648,2189.1300000,-1253.2400000,1528.8600000,0.0000000,0.0000000,176.0000000); //
	CreateDynamicObject(1719,2189.8500000,-1253.1800000,1528.6200000,0.0000000,0.0000000,183.0000000); //
	CreateDynamicObject(1510,2189.8500000,-1251.0600000,1528.6200000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2959,2193.4600000,-1255.9800000,1528.1100000,0.0000000,0.0000000,80.0000000); //
	CreateDynamicObject(2104,2188.7900000,-1246.2200000,1528.0800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2229,2189.7800000,-1246.3000000,1528.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2229,2187.9800000,-1246.3000000,1528.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14840,2189.7400000,-1243.5900000,1529.7600000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(18661,2195.9400000,-1247.1000000,1530.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19365,2194.8100000,-1256.7700000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19365,2196.0400000,-1256.9100000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19394,2196.0400000,-1250.5000000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19354,2197.7300000,-1249.4000000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19354,2197.7300000,-1251.5400000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19384,2200.9400000,-1249.4000000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19354,2200.9400000,-1251.5400000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19354,2204.1500000,-1251.5400000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19354,2204.1500000,-1249.4000000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19354,2204.2700000,-1250.2700000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19384,2196.0500000,-1250.5100000,1529.8600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19365,2197.5600000,-1245.6700000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19457,2198.6600000,-1238.4100000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19397,2200.9300000,-1249.3900000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19369,2197.7300000,-1249.3900000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19369,2204.1400000,-1249.3900000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19369,2196.0600000,-1247.7000000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19369,2197.7300000,-1246.0100000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19369,2199.2500000,-1244.4900000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19461,2203.9900000,-1242.8900000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19461,2204.2600000,-1244.5200000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1502,2200.1400000,-1249.4200000,1528.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19459,2187.4000000,-1238.6400000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,2189.0500000,-1238.3900000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(4227,2198.1200000,-1251.5400000,1529.8600000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(18663,2193.5000000,-1250.9100000,1529.7600000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(19393,2193.3900000,-1255.2300000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,2188.6200000,-1256.7600000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19364,2187.2100000,-1255.3000000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19457,2199.0600000,-1240.9100000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19457,2193.8100000,-1238.6400000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19367,2189.0300000,-1243.4900000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19395,2192.2400000,-1243.4900000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(4227,2201.6100000,-1238.3900000,1529.8600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14880,2197.6800000,-1244.1000000,1528.5000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14556,2197.7600000,-1239.5300000,1529.6200000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2394,2197.9400000,-1238.9200000,1529.4900000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2372,2198.6000000,-1239.1200000,1530.9900000,0.0000000,180.0000000,90.0000000); //
	CreateDynamicObject(2323,2194.8600000,-1239.9900000,1528.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2835,2195.8200000,-1242.0100000,1528.1000000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2845,2197.7600000,-1242.0800000,1528.1100000,0.0000000,0.0000000,20.0000000); //
	CreateDynamicObject(2659,2198.9800000,-1243.7100000,1530.0800000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2693,2197.2000000,-1245.7600000,1530.2900000,10.0000000,4.0000000,180.0000000); //
	CreateDynamicObject(2695,2193.9200000,-1241.0900000,1530.2000000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1529,2193.9000000,-1240.3400000,1530.1200000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2691,2193.3200000,-1251.4800000,1529.9000000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2270,2192.4600000,-1247.1800000,1530.3900000,0.0000000,0.0000000,-45.0000000); //
	CreateDynamicObject(2069,2192.7600000,-1253.0100000,1528.1400000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3034,2187.3000000,-1249.9100000,1530.1200000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3034,2187.4900000,-1240.7600000,1530.1200000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3034,2196.9300000,-1238.5000000,1530.1200000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19394,2196.0400000,-1253.7100000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19459,2200.9100000,-1255.6000000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19367,2196.0500000,-1256.9000000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19395,2196.0500000,-1253.7000000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19459,2200.9100000,-1252.0300000,1529.8700000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19459,2200.3800000,-1256.5900000,1529.8700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19377,2201.3000000,-1256.8000000,1528.0300000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(1502,2196.0200000,-1252.9200000,1528.1000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3034,2198.1600000,-1255.5100000,1530.1200000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2525,2196.8400000,-1254.9700000,1528.1200000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2526,2199.8800000,-1255.0500000,1528.1100000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2518,2198.3500000,-1252.6300000,1528.2300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2836,2198.7200000,-1254.4500000,1528.1100000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2846,2197.4200000,-1254.2100000,1528.1300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2414,2196.6100000,-1252.4300000,1528.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2306,2199.7400000,-1253.6200000,1528.1200000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14840,2199.4000000,-1257.0700000,1530.1800000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2135,2201.7000000,-1243.4800000,1528.0900000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2138,2202.6900000,-1243.4900000,1528.0900000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2303,2200.7000000,-1243.4800000,1528.0900000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2305,2203.6700000,-1243.4900000,1528.0900000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2305,2199.7500000,-1243.4900000,1528.0900000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2136,2199.7500000,-1245.4800000,1528.0900000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2138,2203.6700000,-1244.4600000,1528.0900000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2138,2203.6700000,-1245.4400000,1528.0900000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(5375,1993.9100000,-2064.3500000,18.5300000,356.8600000,0.0000000,3.1400000); //
	CreateDynamicObject(5375,2121.3200000,-1272.8200000,1534.8700000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1575,2187.6000000,-1253.9500000,1528.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1575,2188.1500000,-1253.9500000,1528.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1575,2187.5000000,-1254.4000000,1528.1000000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1575,2187.5000000,-1254.9400000,1528.1000000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1575,2188.6900000,-1253.9500000,1528.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1575,2187.9100000,-1253.9500000,1528.2400000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1575,2188.4700000,-1253.9500000,1528.2400000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1575,2187.5000000,-1254.1600000,1528.2400000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1575,2187.5000000,-1254.7200000,1528.2400000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1575,2187.9500000,-1254.8000000,1528.1000000,0.0000000,0.0000000,50.0000000); //
	CreateDynamicObject(1575,2188.0800000,-1254.3500000,1528.1000000,0.0000000,0.0000000,5.0000000); //
	CreateDynamicObject(1829,2190.1300000,-1256.1300000,1528.5800000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2332,2189.3100000,-1256.4400000,1528.5900000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(355,2188.7100000,-1256.3800000,1528.3400000,10.0000000,-90.0000000,90.0000000); //
	CreateDynamicObject(372,2189.1800000,-1256.3800000,1529.0500000,90.0000000,0.0000000,-20.0000000); //
	CreateDynamicObject(2836,2190.9900000,-1247.7800000,1528.1100000,0.0000000,0.0000000,-42.0000000); //
	CreateDynamicObject(2109,2198.3100000,-1247.6600000,1528.4900000,0.0000000,0.0000000,40.0000000); //
	CreateDynamicObject(2121,2199.2200000,-1246.6500000,1528.6100000,0.0000000,0.0000000,-30.0000000); //
	CreateDynamicObject(2121,2199.5300000,-1248.4300000,1528.6100000,0.0000000,0.0000000,-120.0000000); //
	CreateDynamicObject(2121,2197.6000000,-1248.8200000,1528.6100000,0.0000000,0.0000000,1230.0000000); //
	CreateDynamicObject(2121,2196.7800000,-1247.8700000,1528.6100000,0.0000000,0.0000000,94.0000000); //
	CreateDynamicObject(2121,2196.9800000,-1246.6000000,1528.6100000,0.0000000,0.0000000,50.0000000); //
	CreateDynamicObject(2103,2203.9400000,-1245.3600000,1529.1400000,0.0000000,0.0000000,-86.0000000); //
	CreateDynamicObject(2829,2199.7500000,-1243.6700000,1529.1400000,0.0000000,0.0000000,80.0000000); //
	CreateDynamicObject(2830,2199.6300000,-1245.5300000,1529.1500000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2831,2203.7200000,-1243.4700000,1529.1500000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2254,2196.1600000,-1247.8000000,1530.3100000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(18665,2198.4200000,-1249.2900000,1529.9600000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2189,2198.3100000,-1247.6600000,1528.9300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1510,2199.0400000,-1247.5600000,1528.9300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1510,2197.6200000,-1248.1100000,1528.9300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1510,2197.6100000,-1247.2500000,1528.9300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1485,2199.0800000,-1247.3800000,1529.0200000,0.0000000,30.0000000,-90.0000000); //
	CreateDynamicObject(3027,2199.0800000,-1247.6100000,1528.9800000,0.0000000,120.0000000,120.0000000); //
	CreateDynamicObject(3034,2204.1700000,-1247.6000000,1530.1200000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2131,2203.7000000,-1248.8000000,1528.1000000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2627,2189.2300000,-1239.8400000,1528.0800000,0.0000000,0.0000000,-120.0000000); //
	CreateDynamicObject(2628,2189.4300000,-1242.0600000,1528.1000000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1985,2192.4300000,-1240.3000000,1531.2400000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19377,2202.6300000,-1252.7800000,1531.4800000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,2202.6300000,-1243.1500000,1531.4800000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,2192.1300000,-1243.1500000,1531.4800000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,2192.1300000,-1252.7800000,1531.4800000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(1485,2190.0300000,-1251.0500000,1528.7000000,0.0000000,30.0000000,180.0000000); //
	CreateDynamicObject(1486,2189.8700000,-1250.4100000,1528.7500000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1486,2189.4000000,-1250.8700000,1528.7500000,0.0000000,0.0000000,134.0000000); //
	CreateDynamicObject(1543,2189.3900000,-1250.3600000,1528.6000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1543,2189.5400000,-1250.2200000,1528.6000000,0.0000000,0.0000000,40.0000000); //
	CreateDynamicObject(1544,2189.8400000,-1250.7900000,1528.6000000,0.0000000,0.0000000,30.0000000); //
	CreateDynamicObject(1544,2189.7800000,-1250.1800000,1528.6000000,0.0000000,0.0000000,30.0000000); //
	CreateDynamicObject(2074,2189.5900000,-1250.6200000,1531.1600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2074,2190.1300000,-1244.9200000,1531.1600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2074,2194.6700000,-1250.4800000,1531.1600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2074,2200.6100000,-1250.4800000,1531.1600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2074,2201.7000000,-1244.8500000,1531.1600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2073,2198.2500000,-1247.6600000,1530.6900000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2074,2190.8500000,-1240.8600000,1531.1600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2074,2198.1200000,-1253.7500000,1531.1600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2074,2196.3600000,-1242.7200000,1531.1600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1498,2187.4200000,-1245.6100000,1528.0200000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1498,2204.2400000,-1251.2400000,1528.0200000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1502,2196.0200000,-1249.7200000,1528.1000000,0.0000000,0.0000000,-90.0000000); //
	return 1;
}

stock Objects_Center()
{
	// houses ganton- season
	CreateDynamicObject(3648,2364.2807600,-1707.4335900,15.2684000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19430,2362.9699700,-1721.4936500,12.4778000,0.0000000,90.0000000,90.0000000); //
	CreateDynamicObject(19430,2362.9699700,-1718.0162400,12.4778000,0.0000000,90.0000000,90.0000000); //
	CreateDynamicObject(19430,2363.4055200,-1714.6911600,12.5578000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19430,2362.9699700,-1714.5658000,12.4778000,0.0000000,90.0000000,90.0000000); //
	CreateDynamicObject(19449,2372.1486800,-1718.3293500,12.4877000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(1418,2368.4292000,-1723.1429400,13.3047000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1418,2366.6731000,-1723.1429400,13.3047000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1418,2359.4084500,-1723.1429400,13.3047000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1418,2355.9448200,-1723.1429400,13.3047000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1418,2354.1716300,-1723.1429400,13.3047000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1418,2352.4765600,-1721.4327400,13.3047000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1418,2352.4765600,-1717.9688700,13.3047000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1418,2352.4765600,-1714.4984100,13.3047000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1418,2352.4765600,-1711.0074500,13.3047000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1418,2352.4765600,-1707.5184300,13.3047000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1418,2352.4765600,-1704.0634800,13.3047000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1418,2352.4765600,-1700.5399200,13.3047000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3407,2364.3335000,-1722.9488500,12.5443000,0.0000000,0.0000000,0.0000000); //
	// sewer fix
	/*CreateDynamicObject(994, 1580.56091, -1750.49292, 13.30400,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(994, 1580.56091, -1757.88867, 13.30400,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(996, 1359.38318, -1685.18237, 13.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(996, 1359.51514, -1722.71643, 13.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(996, 1358.79785, -1619.32886, 13.36000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(996, 1362.69019, -1592.68469, 13.50000,   0.00000, 0.00000, 344.00000);
	CreateDynamicObject(996, 1401.87341, -1450.77844, 13.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(996, 1367.82214, -1574.09912, 13.50000,   0.00000, 0.00000, 344.00000);
	CreateDynamicObject(978, 1402.59998, -1411.40002, 13.40000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(978, 1402.59998, -1420.69995, 13.40000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(978, 1402.59998, -1430.00000, 13.40000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(978, 1402.59961, -1411.39941, 13.40000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(978, 1415.19995, -1411.09998, 13.50000,   0.00000, 0.00000, 270.24701);
	CreateDynamicObject(978, 1413.01978, -1440.73401, 13.52000,   0.00000, 0.00000, -181.00000);
	CreateDynamicObject(996, 1405.72705, -1401.36572, 13.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(978, 1415.19995, -1420.40002, 13.50000,   0.00000, 0.00000, 269.74701);
	CreateDynamicObject(978, 1415.19995, -1429.69995, 13.50000,   0.00000, 0.00000, 270.24701);
	CreateDynamicObject(1215, 1412.30005, -1401.30005, 13.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1400.18396, -1401.24255, 13.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1419.83606, -1440.24768, 13.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1415.30005, -1406.19995, 13.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1415.09998, -1434.80005, 13.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1402.50000, -1406.40002, 13.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1402.59998, -1435.00000, 13.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1406.28540, -1440.00940, 13.30000,   0.00000, 0.00000, 0.00000);*/
	// market trees
	CreateDynamicObject(3509,1350.1663800,-1127.7542700,22.6970000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,1350.9918200,-1114.5167200,22.6970000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,1353.1489300,-1099.9156500,22.6970000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,1356.2965100,-1084.3867200,22.6970000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,1359.5573700,-1068.3929400,22.6970000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,1360.8356900,-1053.7370600,22.6970000,0.0000000,0.0000000,0.0000000); //
	// gas station irport
	CreateDynamicObject(8661,1590.4038100,-2174.8081100,12.5684000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8661,1630.3992900,-2174.8081100,12.5684000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8661,1590.4036900,-2154.8383800,12.5684000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8661,1630.3992900,-2154.8383800,12.5684000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(9171,1610.9683800,-2164.7800300,15.5495000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1676,1613.0450400,-2157.4885300,14.1175000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1676,1613.0450400,-2162.5622600,14.1175000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1676,1613.0450400,-2167.6582000,14.1175000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1676,1602.2199700,-2167.6582000,14.1175000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1676,1602.2199700,-2162.5622600,14.1175000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1676,1602.2199700,-2157.4885300,14.1175000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(9193,1652.4023400,-2183.1626000,17.3148000,0.0000000,0.0000000,0.4060000); //
	CreateDynamicObject(19371,1652.4689900,-2183.1394000,12.5075000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(3660,1580.9150400,-2146.1623500,14.2384000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3660,1600.5373500,-2146.1623500,14.2384000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3660,1620.1782200,-2146.1623500,14.2384000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3660,1639.7923600,-2146.1623500,14.2384000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3520,1631.7179000,-2183.6701700,12.8647000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3520,1626.9133300,-2183.6701700,12.8647000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3520,1622.1506300,-2183.6701700,12.8647000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3520,1617.3668200,-2183.6701700,12.8647000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3520,1612.6065700,-2183.6550300,12.8647000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3520,1607.7030000,-2183.6701700,12.8647000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3520,1602.8690200,-2183.6701700,12.8647000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3520,1597.9918200,-2183.6701700,12.8647000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3520,1593.4654500,-2183.6701700,12.8647000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3520,1588.8095700,-2183.6701700,12.8647000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3520,1583.8544900,-2183.6701700,12.8647000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3520,1579.1120600,-2183.6701700,12.8647000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3520,1574.7652600,-2183.6701700,12.8647000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3578,1590.7536600,-2167.3898900,11.7896000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3578,1590.7669700,-2157.0957000,11.7896000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1215,1602.1772500,-2169.1889600,13.1847000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1215,1612.9986600,-2169.1889600,13.1847000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1215,1612.9986600,-2155.9614300,13.1847000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1215,1602.1578400,-2155.9614300,13.1847000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1256,1584.3293500,-2160.4606900,13.4570000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(19329,1583.9405500,-2165.0839800,15.4828000,0.0000000,0.0000000,90.0000000); //
	// library
	CreateDynamicObject(12959,1241.0306400,-1254.3815900,12.6417000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8661,1282.3770800,-1260.6076700,12.5365000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8661,1282.3770800,-1240.6413600,12.5365000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8661,1242.3908700,-1239.6062000,12.5365000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8661,1266.9952400,-1230.8562000,2.6790000,90.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3660,1226.9392100,-1261.0410200,15.1938000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3660,1226.9392100,-1241.4126000,15.1938000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3660,1226.9392100,-1242.4726600,16.3938000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3532,1233.4455600,-1261.4471400,13.4837000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(3532,1239.4406700,-1261.4471400,13.4837000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(3532,1245.2237500,-1261.4471400,13.4837000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(16021,1271.1197500,-1226.9770500,12.1993000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3660,1263.7525600,-1261.0296600,15.1938000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3660,1255.0385700,-1244.7628200,15.1938000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3660,1245.9493400,-1234.2203400,15.1938000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(640,1283.1726100,-1235.6250000,13.2340000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(640,1283.1726100,-1240.9981700,13.2340000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(640,1283.1726100,-1246.3735400,13.2340000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(640,1283.1726100,-1251.7275400,13.2340000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(19126,1282.9647200,-1233.1536900,13.4706000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19126,1282.9647200,-1238.3638900,13.4706000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19126,1282.9647200,-1243.7080100,13.4706000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19126,1282.9647200,-1249.0931400,13.4706000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19126,1282.9647200,-1254.1982400,13.4706000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3578,1282.9339600,-1240.0819100,11.7430000,30.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(3578,1282.9210200,-1250.3635300,11.7360000,30.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(3578,1272.3770800,-1234.0517600,11.7430000,30.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3578,1248.0201400,-1238.6536900,11.7430000,30.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1319,1264.1860400,-1249.7414600,13.0600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1319,1264.1860400,-1247.8837900,13.0600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,1288.9198000,-1233.0136700,13.8465000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,1283.7673300,-1238.1827400,13.8465000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,1283.7673300,-1248.5040300,13.8465000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,1283.7673300,-1258.8465600,13.8465000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,1252.3006600,-1216.8393600,14.7646000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,1262.6335400,-1216.8393600,14.7646000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,1267.7379200,-1216.8393600,14.7646000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,1283.6116900,-1229.2534200,13.3978700,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,1281.8028600,-1225.1022900,13.3978700,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,1286.8388700,-1226.8142100,13.3978700,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,1289.1168200,-1224.0344200,13.3978700,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,1284.9112500,-1223.8333700,13.3978700,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1232,1291.8524200,-1221.6749300,11.8630000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1232,1292.0124500,-1224.6893300,11.8630000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1232,1282.1656500,-1232.8426500,11.8630000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1232,1277.7004400,-1232.8426500,11.8630000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1232,1251.3642600,-1232.8426500,11.8630000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1232,1263.5554200,-1232.8426500,11.8630000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19457,1285.0096400,-1221.6677200,12.3319000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1232,1280.4431200,-1221.6401400,11.8630000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(630,1276.3875700,-1228.8817100,14.4103000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(630,1278.4907200,-1227.2746600,14.4103000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(10183,1278.9770500,-1248.4394500,12.5526000,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(3660,1284.8425300,-1269.3857400,15.1938000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(640,1275.2551300,-1233.3305700,13.2340000,0.0000000,0.0000000,270.0000000); //
	// interior store
    CreateDynamicObject(18030,2802.1090000,2620.9330000,12.1930000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18070,2782.4330000,2619.9590000,10.3250000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1514,2784.2050000,2618.5060000,11.1010000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2579,2813.8640000,2619.0960000,10.9530000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2578,2813.8640000,2620.4040000,10.9460000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2698,2794.6420000,2624.0520000,10.7710000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18092,2813.7600000,2623.8970000,10.3250000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2752,2813.3650000,2626.2090000,10.8260000,0.0000000,0.0000000,-56.2500000); //
	CreateDynamicObject(2752,2813.3550000,2625.7630000,10.8010000,0.0000000,0.0000000,-23.5910000); //
	CreateDynamicObject(2751,2813.4350000,2625.2620000,10.8720000,0.0000000,0.0000000,-67.5000000); //
	CreateDynamicObject(2750,2813.2750000,2624.9150000,10.8120000,-79.0680000,0.0000000,-112.5000000); //
	CreateDynamicObject(2750,2813.2520000,2624.3690000,10.8120000,-79.0680000,0.0000000,-112.5000000); //
	CreateDynamicObject(2749,2813.5430000,2623.5580000,10.8260000,0.0000000,0.0000000,-225.0000000); //
	CreateDynamicObject(2624,2782.4080000,2632.2530000,11.5010000,0.0000000,0.0000000,89.2180000); //
	CreateDynamicObject(2381,2789.2930000,2634.4780000,10.5140000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2372,2788.6680000,2634.3090000,9.8020000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2372,2791.2980000,2634.3050000,9.8340000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2382,2791.4540000,2634.4880000,10.5280000,0.0000000,0.0000000,-87.3440000); //
	CreateDynamicObject(2382,2792.4360000,2634.4350000,10.5560000,0.0000000,0.0000000,-87.3440000); //
	CreateDynamicObject(2389,2798.3510000,2634.6870000,11.4240000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2389,2797.7600000,2634.7050000,11.4530000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2383,2797.0610000,2634.6870000,11.4550000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2374,2796.2290000,2634.7610000,11.4670000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2394,2801.0870000,2634.5000000,10.5580000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2372,2800.4990000,2634.3440000,9.8270000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2054,2813.3800000,2621.7930000,10.8390000,0.0000000,0.0000000,-135.0000000); //
	CreateDynamicObject(2053,2813.4220000,2622.3250000,10.8850000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2500,2780.6320000,2622.8950000,10.8330000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(18092,2813.7310000,2611.3340000,10.2830000,0.0000000,0.0000000,90.9630000); //
	CreateDynamicObject(2486,2813.4430000,2613.4820000,10.7990000,0.0000000,0.0000000,-78.7500000); //
	CreateDynamicObject(2484,2813.4260000,2609.9060000,11.4680000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2485,2813.4270000,2611.0030000,10.8290000,0.0000000,0.0000000,-101.2500000); //
	CreateDynamicObject(2460,2796.3720000,2616.6170000,9.6200000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2460,2796.5270000,2625.9630000,9.8200000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2496,2795.1110000,2616.1160000,11.8860000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2494,2799.0850000,2616.1030000,11.7810000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2507,2813.8380000,2611.7350000,11.5650000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1852,2796.3990000,2616.5290000,10.8920000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1853,2797.1760000,2616.5500000,10.7350000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1859,2797.7780000,2616.5920000,10.7130000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18092,2780.4740000,2611.1000000,10.3250000,0.0000000,0.0000000,270.5850000); //
	CreateDynamicObject(18553,2796.9820000,2607.3540000,11.1180000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1518,2780.7530000,2609.1610000,11.0810000,0.0000000,0.0000000,112.5000000); //
	CreateDynamicObject(1719,2780.7620000,2609.9680000,10.8800000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(1782,2780.7490000,2610.7670000,10.9090000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1786,2780.3730000,2611.8820000,10.8180000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1840,2782.0790000,2607.6230000,10.8230000,0.0000000,0.0000000,-128.6750000); //
	CreateDynamicObject(18092,2784.3070000,2607.7110000,10.3250000,0.0000000,0.0000000,0.8260000); //
	CreateDynamicObject(1839,2782.7920000,2607.7330000,10.8230000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2028,2783.5870000,2607.9490000,10.9090000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(2101,2780.7170000,2613.0900000,10.8290000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(2226,2784.4210000,2607.9810000,10.8240000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(2232,2787.4070000,2608.7140000,10.4230000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(2628,2808.0640000,2633.2550000,9.8200000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2627,2809.8840000,2633.2940000,9.8260000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2630,2811.2490000,2633.4070000,9.8200000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2718,2818.4700000,2617.5950000,12.1990000,0.0000000,0.0000000,-93.6790000); //
	CreateDynamicObject(2826,2784.3240000,2622.7090000,10.8360000,0.0000000,0.0000000,-213.7500000); //
	CreateDynamicObject(2824,2784.3940000,2621.6420000,10.8350000,0.0000000,0.0000000,78.7500000); //
	CreateDynamicObject(2855,2783.7160000,2623.1640000,10.8360000,0.0000000,0.0000000,168.7500000); //
	CreateDynamicObject(1778,2818.3480000,2612.0630000,10.0430000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2192,2813.1000000,2623.0470000,10.7750000,0.0000000,0.0000000,-247.5000000); //
	CreateDynamicObject(1433,2816.8330000,2620.1500000,10.1740000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1663,2817.9000000,2620.2580000,10.5050000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1491,2816.2930000,2618.4670000,9.9150000,0.0000000,0.0000000,0.0000000); //
	// interior iprivate
	CreateDynamicObject(19367, 10994.93945, -2076.96948, 2665.93506,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 5614.93604, -491.90851, 507.68115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 5614.93604, -501.07391, 507.68121,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19367, 5613.30420, -487.19885, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 5611.73242, -484.83652, 507.68115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19367, 5610.18457, -489.56693, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 5607.27002, -489.57050, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 5604.30615, -489.60544, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 5602.83398, -494.35831, 507.68115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19367, 5606.70215, -499.09698, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19395, 5608.23682, -500.69916, 507.68701,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 5604.34277, -499.09702, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 5613.41309, -505.76691, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 5610.35010, -505.74622, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 5611.71094, -489.76486, 507.68115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19395, 5611.69531, -495.32507, 507.68701,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19367, 5609.86914, -505.76691, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 5608.84033, -499.09698, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 5610.04102, -499.09698, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 5611.71729, -497.61664, 507.68701,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19459, 5602.81299, -503.76715, 507.68121,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19367, 5608.23682, -503.57950, 507.68701,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19367, 5608.23682, -506.61581, 507.68701,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19367, 5608.23682, -509.47681, 507.68701,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19367, 5604.19482, -508.45471, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 5606.87598, -508.45471, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19452, 5609.73438, -501.96927, 505.88242,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 5613.13525, -501.54749, 505.88242,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 5613.32471, -492.03860, 505.88242,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 5609.81592, -492.48956, 505.88242,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 5606.48340, -492.43558, 505.88242,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 5603.00928, -492.40936, 505.88242,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 5606.27051, -501.96384, 505.88242,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 5602.82324, -501.94308, 505.88242,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 5602.93359, -511.48294, 505.88242,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19452, 5606.42480, -511.48401, 505.88242,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1491, 5608.25586, -501.45059, 505.95990,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1491, 5611.76221, -496.00995, 505.95990,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1491, 5603.57715, -499.05130, 505.95990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 5604.48145, -503.67838, 509.35321,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 5607.93701, -503.57285, 509.35321,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 5611.41260, -501.29398, 509.35321,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 5614.82227, -501.25259, 509.35321,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 5613.47119, -491.82260, 509.35321,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 5610.24170, -491.77719, 509.35321,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 5607.94043, -493.96613, 509.35321,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 5604.44336, -494.34146, 509.35321,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1506, 5612.62061, -487.27240, 505.97000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2296, 5606.27979, -489.84714, 505.96921,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2100, 5603.10693, -495.67569, 505.96521,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1703, 5609.62402, -491.17902, 505.90991,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1703, 5604.90967, -493.41025, 505.90991,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1703, 5608.31641, -494.29657, 505.90991,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1822, 5606.81885, -492.37854, 505.96933,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19367, 5609.92041, -501.51529, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19395, 5612.62842, -501.51529, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 5615.21680, -501.51529, 507.68701,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1491, 5611.84424, -501.52451, 505.95990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2339, 5610.94189, -498.15753, 505.96759,   0.00000, 0.00000, 220.00000);
	CreateDynamicObject(2132, 5609.97217, -498.52490, 505.96759,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2339, 5608.02588, -498.52530, 505.96759,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2339, 5607.08252, -498.52490, 505.96759,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2339, 5606.14160, -498.52490, 505.96759,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2141, 5611.20508, -496.67200, 505.96960,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2339, 5610.94385, -498.52490, 505.96759,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(2339, 5611.22412, -498.52463, 505.96759,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(2339, 5611.15869, -498.46710, 505.96759,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(2339, 5611.28809, -497.78290, 505.96759,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2339, 5611.23047, -497.44250, 505.96759,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(14480, 5612.77148, -503.88120, 506.57690,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2298, 5607.06787, -504.40161, 505.96881,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2253, 5604.31787, -508.14609, 506.60754,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2253, 5607.06592, -508.16086, 506.60754,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2315, 5604.86279, -503.23669, 505.96970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1791, 5605.80322, -503.04123, 506.46317,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14867, 5603.00391, -504.40649, 507.36377,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2108, 5614.45264, -487.82910, 505.96667,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2108, 5612.21045, -487.77100, 505.96667,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2108, 5614.53711, -501.06787, 505.96667,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2108, 5608.80762, -499.58273, 505.96667,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2257, 5611.81250, -497.81021, 507.91129,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2280, 5614.34131, -490.96902, 507.74011,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2280, 5614.34766, -497.50098, 507.74011,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2281, 5612.28516, -491.72678, 507.58789,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2254, 5614.83936, -494.31448, 508.00150,   0.00000, 0.00000, -90.00000);
	// cocaine and ecstasy
	CreateDynamicObject(14476,2457.6999512,-1770.9000244,1025.8000488,0.0000000,0.0000000,358.5071411); //object(carlscrap)(1)
	CreateDynamicObject(1498,2458.8000488,-1763.4000244,1025.8000488,0.0000000,0.0000000,0.0000000); //object(gen_doorext03)(1)
	CreateDynamicObject(1502,2455.3000488,-1777.5999756,1029.4000244,0.0000000,0.0000000,0.0000000); //object(gen_doorint04)(1)
	CreateDynamicObject(1501,2455.3000488,-1780.5999756,1029.4000244,0.0000000,0.0000000,0.0000000); //object(gen_doorext04)(1)
	CreateDynamicObject(1712,2455.6000977,-1773.5999756,1025.8000488,0.0000000,0.0000000,0.0000000); //object(kb_couch05)(1)
	CreateDynamicObject(1766,2454.6999512,-1768.0000000,1025.8000488,0.0000000,0.0000000,89.5715332); //object(med_couch_1)(1)
	CreateDynamicObject(1712,2454.6999512,-1772.3000488,1029.4000244,0.0000000,0.0000000,0.0000000); //object(kb_couch05)(2)
	CreateDynamicObject(2185,2460.0000000,-1777.3000488,1029.4000244,0.0000000,0.0000000,88.0786743); //object(med_office6_desk_1)(1)
	CreateDynamicObject(2313,2456.8000488,-1776.0999756,1025.8000488,0.0000000,0.0000000,180.8572388); //object(cj_tv_table1)(1)
	CreateDynamicObject(1741,2456.8999023,-1772.8000488,1029.4000244,0.0000000,0.0000000,0.0000000); //object(low_cabinet_1)(1)
	CreateDynamicObject(1744,2455.0000000,-1771.4000244,1031.5000000,0.0000000,0.0000000,0.0000000); //object(med_shelf)(1)
	CreateDynamicObject(2964,2457.0000000,-1767.5000000,1025.8000488,0.0000000,0.0000000,0.0000000); //object(k_pooltablesm)(1)
	CreateDynamicObject(2965,2457.3000488,-1767.4000244,1026.6999512,0.0000000,0.0000000,0.0000000); //object(k_pooltriangle01)(1)
	CreateDynamicObject(2997,2456.3999023,-1767.0999756,1026.6999512,0.0000000,0.0000000,0.0000000); //object(k_poolballstp03)(1)
	CreateDynamicObject(2998,2456.3999023,-1767.1999512,1026.6999512,0.0000000,0.0000000,0.0000000); //object(k_poolballstp04)(1)
	CreateDynamicObject(2999,2456.3999023,-1767.3000488,1026.6999512,0.0000000,0.0000000,0.0000000); //object(k_poolballstp05)(1)
	CreateDynamicObject(3000,2456.8999023,-1767.6999512,1026.6999512,0.0000000,0.0000000,0.0000000); //object(k_poolballstp06)(1)
	CreateDynamicObject(3001,2456.8999023,-1767.0999756,1026.6999512,0.0000000,0.0000000,0.0000000); //object(k_poolballstp07)(1)
	CreateDynamicObject(3004,2456.8999023,-1768.0000000,1026.6999512,0.0000000,0.0000000,288.3428955); //object(k_poolq2)(1)
	CreateDynamicObject(15028,2457.0000000,-1775.0999756,1029.5999756,0.0000000,0.0000000,0.0000000); //object(genmotel2sh_sv)(1)
	CreateDynamicObject(1518,2456.1999512,-1775.9000244,1026.5999756,0.0000000,0.0000000,183.8428955); //object(dyn_tv_2)(1)
	CreateDynamicObject(1795,2458.6999512,-1775.0000000,1029.4000244,0.0000000,0.0000000,0.0000000); //object(swank_bed_2)(1)
	CreateDynamicObject(1828,2457.1000977,-1775.5000000,1029.4000244,0.0000000,0.0000000,0.0000000); //object(man_sdr_rug)(1)
	CreateDynamicObject(1829,2454.8999023,-1776.8000488,1029.9000244,0.0000000,0.0000000,116.4429932); //object(man_safenew)(1)
	CreateDynamicObject(2102,2455.3000488,-1771.6999512,1031.8000488,0.0000000,0.0000000,0.0000000); //object(low_hi_fi_2)(1)
	CreateDynamicObject(2670,2459.6999512,-1766.6999512,1025.9000244,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_1)(1)
	CreateDynamicObject(2670,2456.5000000,-1774.9000244,1025.9000244,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_1)(2)
	CreateDynamicObject(1528,2462.1000977,-1766.9000244,1027.5000000,0.0000000,0.0000000,0.0000000); //object(tag_seville)(1)
	CreateDynamicObject(1525,2462.1000977,-1769.3000488,1028.4000244,0.0000000,0.0000000,0.0000000); //object(tag_kilo)(1)
	CreateDynamicObject(1490,2454.1999512,-1769.6999512,1026.8000488,0.0000000,0.0000000,176.1573486); //object(tag_01)(1)
	CreateDynamicObject(17969,2460.0000000,-1774.6999512,1031.5000000,0.0000000,0.0000000,0.0000000); //object(hub_graffitti)(1)
	CreateDynamicObject(2670,2457.1999512,-1770.3000488,1025.9000244,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_1)(3)
	CreateDynamicObject(2957,2459.3000488,-1776.8000488,1027.4000244,0.0000000,0.0000000,0.0000000); //object(chinatgaragedoor)(1)
	CreateDynamicObject(1490,2459.6000977,-1776.5999756,1027.0999756,0.0000000,0.0000000,267.2143555); //object(tag_01)(3)
	// gang projects
	CreateDynamicObject(3501,2244.9626500,-1785.0738500,15.7276000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3501,2280.7241200,-1785.4273700,15.7069000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3501,2318.2661100,-1785.5422400,15.7063000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3501,2389.0371100,-1784.8988000,15.5663000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(617,2347.5644500,-1766.2272900,12.5364800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(617,2357.5788600,-1766.2272900,12.5365000,0.0000000,0.0000000,297.5640900); //
	CreateDynamicObject(8661,2354.5651900,-1789.4538600,12.5596000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3496,2354.8449700,-1770.9438500,12.7070000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(3496,2354.8449700,-1808.2407200,12.7070000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1946,2355.8432600,-1806.3035900,12.7671000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1946,2353.5478500,-1772.6623500,12.7671000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2359.3715800,-1809.4256600,13.9994000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2349.7275400,-1809.4256600,13.9994000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2344.5654300,-1804.2486600,13.9994000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,2344.5654300,-1789.8049300,13.9994000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,2344.5654300,-1774.6138900,13.9994000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,2349.7309600,-1769.4482400,13.9994000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2359.3735400,-1769.4482400,13.9994000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2364.5239300,-1774.6163300,13.9994000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,2364.5532200,-1789.8049300,13.9994000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,2364.5339400,-1804.2486600,13.9994000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(669,2245.3027300,-1824.7628200,12.8152000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(669,2280.0942400,-1820.3553500,12.8152000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(669,2318.1308600,-1818.1986100,12.8152000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(669,2353.8584000,-1815.4783900,12.8152000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(669,2389.2817400,-1815.8689000,12.8152000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2383.0471200,-1760.0617700,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2393.3466800,-1760.0617700,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2398.4751000,-1760.0617700,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2403.6545400,-1765.2309600,15.0220000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,2403.6545400,-1775.5224600,15.0220000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,2403.6545400,-1785.8111600,15.0220000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,2403.6545400,-1818.2946800,15.0220000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,2403.6545400,-1807.9836400,15.0220000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,2403.6545400,-1805.4169900,15.0220000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(8674,2398.4909700,-1823.4704600,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2388.1970200,-1823.4704600,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2377.9047900,-1823.4704600,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2367.6252400,-1823.4704600,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2357.3310500,-1823.4704600,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2347.0778800,-1824.0981400,15.0220000,0.0000000,0.0000000,7.0000000); //
	CreateDynamicObject(8674,2336.8820800,-1825.3452100,15.0220000,0.0000000,0.0000000,7.0000000); //
	CreateDynamicObject(8674,2326.6962900,-1826.6090100,15.0220000,0.0000000,0.0000000,7.0000000); //
	CreateDynamicObject(8674,2316.4958500,-1827.9433600,15.0220000,0.0000000,0.0000000,8.0000000); //
	CreateDynamicObject(8674,2306.3186000,-1829.3700000,15.0220000,0.0000000,0.0000000,8.0000000); //
	CreateDynamicObject(8674,2296.1113300,-1830.8038300,15.0220000,0.0000000,0.0000000,8.0000000); //
	CreateDynamicObject(8674,2285.9104000,-1832.1313500,15.0220000,0.0000000,0.0000000,7.0000000); //
	CreateDynamicObject(8674,2275.6713900,-1833.3774400,15.0220000,0.0000000,0.0000000,7.0000000); //
	CreateDynamicObject(8674,2265.4492200,-1834.6143800,15.0220000,0.0000000,0.0000000,7.0000000); //
	CreateDynamicObject(8674,2255.2421900,-1835.9752200,15.0220000,0.0000000,0.0000000,8.0000000); //
	CreateDynamicObject(8674,2245.0478500,-1837.3892800,15.0220000,0.0000000,0.0000000,8.0000000); //
	CreateDynamicObject(8674,2234.0627400,-1838.8397200,15.0220000,0.0000000,0.0000000,7.0000000); //
	CreateDynamicObject(8674,2244.2614700,-1837.5134300,15.0220000,0.0000000,0.0000000,8.0000000); //
	CreateDynamicObject(8674,2228.6608900,-1834.3192100,15.0220000,0.0000000,0.0000000,93.0000000); //
	CreateDynamicObject(8674,2227.9279800,-1824.0340600,15.0220000,0.0000000,0.0000000,95.0000000); //
	CreateDynamicObject(8674,2227.5234400,-1819.1756600,15.0220000,0.0000000,0.0000000,95.0000000); //
	CreateDynamicObject(1408,2232.2607400,-1810.4743700,13.1426000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1408,2229.6071800,-1807.7185100,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2229.6071800,-1802.2591600,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2229.6071800,-1796.8126200,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2229.6071800,-1791.3588900,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2229.6071800,-1780.0561500,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2229.6071800,-1774.5914300,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2229.6071800,-1769.1440400,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2229.6071800,-1763.6657700,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(870,2227.8476600,-1763.4659400,12.7908000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(870,2227.6980000,-1766.7616000,12.7908000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(870,2227.7639200,-1770.2303500,12.7908000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(870,2227.8273900,-1773.5640900,12.7908000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(870,2227.7941900,-1776.6289100,12.7908000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(870,2227.6474600,-1779.7464600,12.7908000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(870,2227.5017100,-1791.1206100,12.7908000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(870,2227.6445300,-1794.1950700,12.7908000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(870,2227.6865200,-1797.2135000,12.7908000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(870,2227.5610400,-1800.1916500,12.7908000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(870,2227.5617700,-1803.2319300,12.7908000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(870,2227.5688500,-1806.4688700,12.7908000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(870,2227.6953100,-1809.5837400,12.7908000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2355.7639200,-1759.6041300,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2346.6647900,-1759.6041300,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2327.4865700,-1759.6041300,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2317.1850600,-1759.6041300,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2310.5295400,-1759.6041300,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2289.2258300,-1759.6041300,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2278.9255400,-1759.6041300,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2272.9169900,-1759.6041300,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2251.8308100,-1759.6041300,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2241.5510300,-1759.6041300,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2236.7890600,-1759.6041300,15.0220000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1408,2265.4360400,-1763.6657700,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2265.4360400,-1769.1318400,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2265.4360400,-1779.7429200,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2265.4360400,-1790.8211700,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2265.4360400,-1802.4178500,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2265.4360400,-1807.8952600,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2260.4033200,-1807.8952600,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2260.4033200,-1802.4178500,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2260.4033200,-1790.8211700,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2260.4033200,-1779.7429200,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2260.4033200,-1769.1318400,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2260.4033200,-1763.6657700,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2302.2163100,-1763.6657700,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2302.2163100,-1769.1160900,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2302.2163100,-1779.5507800,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2302.2163100,-1791.6937300,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2302.2163100,-1802.4660600,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2302.2163100,-1807.9626500,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2296.0515100,-1763.6657700,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2296.0515100,-1769.1160900,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2296.0515100,-1779.5507800,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2296.0515100,-1791.6937300,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2296.0515100,-1802.4660600,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2296.0515100,-1807.9626500,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2333.5900900,-1807.9626500,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2333.5900900,-1802.4660600,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2333.5900900,-1791.6937300,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2333.5900900,-1779.5507800,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2333.5900900,-1769.1160900,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2333.5900900,-1763.6657700,13.1426000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1408,2374.5322300,-1763.6657700,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2374.5322300,-1769.1160900,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2374.5322300,-1779.5507800,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2374.5322300,-1791.6937300,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2374.5322300,-1802.4660600,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1408,2374.5322300,-1807.9626500,13.1426000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(763,2263.5297900,-1828.1423300,12.8348400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(763,2300.4939000,-1825.6109600,12.8348400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(763,2340.2658700,-1822.0559100,12.8348400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(763,2373.5607900,-1819.7081300,12.8348400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(805,2343.3791500,-1763.1440400,13.3897000,0.0000000,0.0000000,278.0257000); //
	CreateDynamicObject(805,2352.4914600,-1763.3255600,13.3897000,0.0000000,0.0000000,278.0257000); //
	CreateDynamicObject(805,2341.9487300,-1804.9272500,13.3897000,0.0000000,0.0000000,278.0257000); //
	CreateDynamicObject(805,2345.2004400,-1813.5481000,13.3897000,0.0000000,0.0000000,278.0257000); //
	CreateDynamicObject(805,2359.7072800,-1813.7613500,13.3897000,0.0000000,0.0000000,278.0257000); //
	CreateDynamicObject(3532,2259.3005400,-1763.4056400,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2259.3005400,-1769.0584700,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2259.3005400,-1779.6171900,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2259.3005400,-1790.7442600,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2259.3005400,-1802.2650100,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2259.3005400,-1807.6668700,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2266.3664600,-1807.6668700,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2266.3464400,-1802.4436000,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2266.3464400,-1790.9930400,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2266.3464400,-1779.7189900,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2266.3464400,-1768.9260300,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2266.3464400,-1763.5346700,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2295.0031700,-1763.5346700,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2295.0031700,-1769.0998500,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2295.0031700,-1779.3519300,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2295.0031700,-1791.5462600,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2295.0031700,-1802.3831800,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2303.3549800,-1807.8549800,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2295.0031700,-1807.9824200,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2303.3549800,-1802.4339600,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2303.3549800,-1791.6523400,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2303.3549800,-1779.5152600,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2303.3549800,-1769.0437000,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2303.3549800,-1763.5306400,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2332.6030300,-1763.4088100,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2332.6030300,-1768.6191400,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2332.6030300,-1779.5194100,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2332.6030300,-1791.2976100,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2332.6030300,-1802.0391800,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2332.6030300,-1807.9368900,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2375.4899900,-1763.4088100,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2375.4899900,-1768.9923100,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2375.4899900,-1779.3315400,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2375.4899900,-1791.6325700,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2375.4899900,-1802.2232700,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3532,2375.4899900,-1807.7280300,13.2285000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14400,2328.3144500,-1818.8095700,13.2621000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14400,2315.7824700,-1813.9669200,13.2621000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14400,2312.0329600,-1822.8073700,13.2621000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14468,2239.5639600,-1818.3979500,13.2781000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14468,2238.3012700,-1830.1420900,13.2781000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14468,2254.2863800,-1823.7485400,13.2781000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(808,2271.9382300,-1826.1951900,14.2737000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(808,2277.6306200,-1815.6750500,14.2737000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(808,2284.6792000,-1825.2545200,14.2737000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(808,2292.3066400,-1816.2138700,14.2737000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,2354.5668900,-1789.8599900,13.9994000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3496,2354.8449700,-1789.2756300,12.7070000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3496,2354.8449700,-1790.5329600,12.7070000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(1368,2344.9902300,-1791.1395300,13.2527000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1368,2344.9902300,-1788.5158700,13.2527000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1368,2364.0896000,-1788.5158700,13.2527000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1368,2364.0896000,-1791.1090100,13.2527000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1300,2344.9782700,-1786.4576400,12.9381000,0.0000000,0.0000000,89.0000000); //
	CreateDynamicObject(1300,2364.1428200,-1786.4576400,12.9381000,0.0000000,0.0000000,270.0000000); //
	//==== [ insurance co int] ===
	CreateDynamicObject(19439,1122.6804200,-1409.3891600,2000.0000000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1122.6804200,-1410.9552000,2000.0000000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1122.6804200,-1407.7880900,2000.0000000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1122.6804200,-1406.2021500,2000.0000000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1122.6804200,-1412.5511500,2000.0000000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1126.1715100,-1406.2005600,2000.0000000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1126.1606400,-1409.3750000,2000.0000000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1126.1763900,-1410.9641100,2000.0000000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1126.1804200,-1412.5400400,2000.0000000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19358,1128.0174600,-1406.9858400,2001.7530500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,1128.0174600,-1410.1967800,2001.7530500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,1128.0174600,-1411.8007800,2001.7530500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,1126.4995100,-1413.4968300,2001.7530500,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(19358,1123.2905300,-1413.4947500,2001.7530500,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(19358,1122.5324700,-1413.4947500,2001.7530500,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(19358,1120.8814700,-1411.9768100,2001.7520800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,1120.8808600,-1408.7868700,2001.7520800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,1120.8808600,-1406.9848600,2001.7520800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19358,1126.4995100,-1405.3367900,2001.7530500,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(19358,1123.2905300,-1405.3348400,2001.7530500,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(19358,1122.3985600,-1405.3348400,2001.7530500,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(19439,1126.1804200,-1412.6040000,2003.5880100,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1126.1804200,-1410.9990200,2003.5880100,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1122.6804200,-1412.6040000,2003.5880100,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1126.1804200,-1409.3929400,2003.5880100,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1126.1804200,-1407.7908900,2003.5880100,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1126.1804200,-1406.1849400,2003.5880100,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1122.6804200,-1411.0000000,2003.5880100,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1122.6804200,-1409.3960000,2003.5880100,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1122.6804200,-1407.7939500,2003.5880100,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1122.6804200,-1406.1899400,2003.5880100,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(2008,1126.8995400,-1407.4047900,2000.0881300,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(1806,1125.9814500,-1406.5290500,2000.0888700,0.0000000,0.0000000,-181.0000000); //
	CreateDynamicObject(2008,1123.1335400,-1407.4047900,2000.0881300,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(1806,1122.1594200,-1406.5290500,2000.0888700,0.0000000,0.0000000,-181.0000000); //
	CreateDynamicObject(2162,1122.3051800,-1405.4388400,2000.0875200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2162,1126.0451700,-1405.4388400,2000.0875200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2161,1124.3690200,-1405.4497100,2000.0878900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19173,1124.5249000,-1405.4254200,2002.2332800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1721,1127.7208300,-1412.3193400,2000.0870400,0.0000000,0.0000000,91.0000000); //
	CreateDynamicObject(948,1127.4991500,-1413.0179400,2000.0870400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1721,1127.7208300,-1411.5972900,2000.0870400,0.0000000,0.0000000,91.0000000); //
	CreateDynamicObject(1721,1127.7208300,-1410.8372800,2000.0870400,0.0000000,0.0000000,91.0000000); //
	CreateDynamicObject(1721,1127.7208300,-1410.0772700,2000.0870400,0.0000000,0.0000000,91.0000000); //
	CreateDynamicObject(1721,1121.2948000,-1412.3193400,2000.0870400,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(948,1121.4471400,-1413.0179400,2000.0870400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1721,1121.2788100,-1411.5180700,2000.0870400,0.0000000,0.0000000,-91.0000000); //
	CreateDynamicObject(1721,1121.2988300,-1410.7263200,2000.0870400,0.0000000,0.0000000,-91.0000000); //
	CreateDynamicObject(1721,1121.2988300,-1409.9272500,2000.0870400,0.0000000,0.0000000,-91.0000000); //
	CreateDynamicObject(1536,1123.7071500,-1413.4383500,2000.0820300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19439,1126.1783400,-1407.8020000,2000.0000000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1126.1804200,-1412.7790500,2000.0000000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19439,1122.6804200,-1412.6171900,2000.0000000,0.0000000,90.0000000,0.0000000); //
	//=== [Sprunk] ===
    CreateDynamicObject(8615,1335.0122100,281.8729900,18.5486000,0.0000000,0.0000000,156.0000000); //
	CreateDynamicObject(1498,1331.1341600,282.6651900,20.2721000,0.0000000,0.0000000,335.8685000); //
	//=== [Furniture shop] ===
	CreateDynamicObject(12946,1922.0000000,717.0000000,-1873.0000000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(12946,1909.6325700,-1866.3525400,12.5596000,0.0000000,0.0000000,180.0000000);
	CreateDynamicObject(8674,1946.6936000,-1858.2039800,13.9087000,0.0000000,0.0000000,346.2239100);
	CreateDynamicObject(8674,1936.6574700,-1855.6717500,13.9087000,0.0000000,0.0000000,345.4118000);
	CreateDynamicObject(8674,1926.6759000,-1853.2779500,13.9087000,0.0000000,0.0000000,347.5853900);
	CreateDynamicObject(8674,1916.6235400,-1850.9510500,13.9087000,0.0000000,0.0000000,346.2239100);
	CreateDynamicObject(8674,1906.6079100,-1848.4866900,13.9087000,0.0000000,0.0000000,346.2239100);
	CreateDynamicObject(8674,1951.7082500,-1864.5994900,13.9087000,0.0000000,0.0000000,90.0000000);
	CreateDynamicObject(8674,1946.5140400,-1879.5488300,13.9087000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(8674,1936.1989700,-1879.5488300,13.9087000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(8674,1925.8736600,-1879.5488300,13.9087000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(8674,1915.5280800,-1879.5488300,13.9087000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(8674,1906.9150400,-1879.5488300,13.9087000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(1597,1918.2850300,-1873.3649900,15.1479000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(1597,1918.2850300,-1858.9340800,15.1479000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(19445,1924.1693100,-1856.1759000,10.8190000,0.0000000,0.0000000,35.0000000);
	CreateDynamicObject(19445,1929.2705100,-1857.2526900,10.8190000,0.0000000,0.0000000,35.0000000);
	CreateDynamicObject(19445,1934.2558600,-1858.3376500,10.8190000,0.0000000,0.0000000,35.0000000);
	CreateDynamicObject(19445,1939.7043500,-1859.7298600,10.8190000,0.0000000,0.0000000,35.0000000);
	CreateDynamicObject(19445,1945.2236300,-1861.1124300,10.8190000,0.0000000,0.0000000,35.0000000);
	CreateDynamicObject(19445,1921.2741700,-1874.6936000,10.8190000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(19445,1925.5377200,-1874.6936000,10.8190000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(19445,1929.6503900,-1874.6936000,10.8190000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(19445,1933.9605700,-1874.6936000,10.8190000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(19445,1938.3143300,-1874.6936000,10.8190000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(19445,1942.3588900,-1874.6936000,10.8190000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(1299,1902.9696000,-1874.6589400,12.5423000,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(1299,1902.9696000,-1871.8806200,12.5422800,0.0000000,0.0000000,0.0000000);
	CreateDynamicObject(1344,1904.0579800,-1876.6025400,13.3094000,0.0000000,0.0000000,270.0000000);

	//city hall new
	/*CreateDynamicObject(10377, 1481.2290000, -1801.9587400, 30.6505000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(6965, 1528.5653100, -1770.6617400, 16.1660000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(6965, 1434.7939500, -1770.6617400, 16.1660000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(6964, 1434.7558600, -1770.7424300, 12.0266000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(6964, 1528.5695800, -1770.6236600, 12.0266000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(713, 1553.2417000, -1748.9998800, 13.0937500, 0.0000000, 0.0000000, 300.6595500);
	CreateDynamicObject(700, 1531.8662100, -1747.6958000, 13.0278500, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(713, 1555.0572500, -1823.1655300, 13.0937500, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(700, 1552.8186000, -1765.5388200, 13.0278500, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(869, 1514.6739500, -1748.2648900, 13.4660000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(869, 1527.0118400, -1747.9976800, 13.4660000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(869, 1519.8925800, -1747.9965800, 13.4660000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(869, 1542.4689900, -1748.3341100, 13.4660000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(869, 1553.4320100, -1754.5052500, 13.4660000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(869, 1553.6662600, -1760.9532500, 13.4660000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(14468, 1548.5203900, -1748.1059600, 13.4437400, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(14468, 1553.8265400, -1757.6363500, 13.4437400, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(14468, 1536.8109100, -1748.5186800, 13.4437400, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(870, 1555.4058800, -1746.7597700, 13.2879000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1515.7738000, -1742.2602500, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1519.9487300, -1742.2602500, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1524.1224400, -1742.2602500, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1528.2823500, -1742.2602500, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1532.4483600, -1742.2602500, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1536.6171900, -1742.2602500, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1540.7808800, -1742.2602500, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1544.9306600, -1742.2602500, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1549.1020500, -1742.2602500, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1553.2724600, -1742.2602500, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1557.4503200, -1742.2602500, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1511.6095000, -1742.2602500, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1509.5363800, -1744.3553500, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1507.4366500, -1746.4377400, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1503.2717300, -1746.4377400, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1499.0958300, -1746.4377400, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1492.7601300, -1746.4377400, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1488.5886200, -1746.4377400, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1484.4414100, -1746.4377400, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1478.5966800, -1746.4377400, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1459.4793700, -1746.4377400, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1401.2064200, -1742.2893100, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1405.3793900, -1742.2893100, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1409.5401600, -1742.2893100, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1413.7019000, -1742.2893100, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1417.8446000, -1742.2893100, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1422.0047600, -1742.2893100, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1426.1738300, -1742.2893100, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1430.3426500, -1742.2893100, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1434.5179400, -1742.2893100, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1438.6762700, -1742.2893100, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1442.8354500, -1742.2893100, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1447.0052500, -1742.2893100, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1451.1617400, -1742.2893100, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1453.2513400, -1744.3608400, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1455.3360600, -1746.4377400, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1466.1269500, -1746.4377400, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1470.2843000, -1746.4377400, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1474.4356700, -1746.4377400, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(1232, 1509.3674300, -1746.1657700, 15.1665000, 0.0000000, 0.0000000, 300.0000000);
	CreateDynamicObject(1232, 1453.3924600, -1746.1283000, 15.1665000, 0.0000000, 0.0000000, 240.2473000);
	CreateDynamicObject(1280, 1502.7954100, -1745.9647200, 12.9446000, 0.0000000, 0.0000000, 270.0000000);
	CreateDynamicObject(1280, 1457.2390100, -1745.9647200, 12.9446000, 0.0000000, 0.0000000, 270.0000000);
	CreateDynamicObject(1280, 1488.2977300, -1745.9647200, 12.9446000, 0.0000000, 0.0000000, 270.0000000);
	CreateDynamicObject(1280, 1472.5927700, -1745.9647200, 12.9446000, 0.0000000, 0.0000000, 270.0000000);
	CreateDynamicObject(1232, 1485.8457000, -1746.1657700, 15.1665000, 0.0000000, 0.0000000, 329.3680100);
	CreateDynamicObject(1232, 1470.1384300, -1746.1657700, 15.1665000, 0.0000000, 0.0000000, 329.3680100);
	CreateDynamicObject(970, 1399.1285400, -1744.3684100, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1748.5426000, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1752.7093500, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1756.8713400, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1761.0418700, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1765.2164300, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1769.3786600, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1833.6136500, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1401.2179000, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1399.1285400, -1829.4399400, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1825.2734400, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1821.1108400, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1816.9449500, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1812.7806400, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1808.6147500, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1405.3837900, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1409.5572500, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1413.7257100, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1417.8767100, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1422.0428500, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1426.1908000, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1430.3580300, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1434.5116000, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1438.6759000, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1442.8361800, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1446.9942600, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1451.1413600, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1455.3050500, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1459.4461700, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1463.5981400, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1467.7598900, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1471.9206500, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1476.0836200, -1835.6992200, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1557.4847400, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1553.3096900, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1549.1484400, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1544.9834000, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1540.8082300, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1536.6467300, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1532.4868200, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1528.3232400, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1524.1568600, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1519.9959700, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1515.8365500, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1511.6656500, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1507.5003700, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1503.3332500, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1499.1608900, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1495.0042700, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1490.8316700, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1486.6722400, -1835.6992200, 13.0550000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(1360, 1481.2923600, -1835.4375000, 13.2641000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1744.3337400, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1748.4952400, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1752.6555200, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1756.8212900, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1760.9986600, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1765.1746800, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1769.3310500, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1833.6048600, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1829.4458000, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1825.2785600, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1821.1074200, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1816.9408000, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1812.7744100, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(19454, 1554.7320600, -1810.6082800, 11.8808000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(19454, 1554.7381600, -1779.8519300, 11.8808000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1773.5028100, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1559.5482200, -1777.6806600, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(19454, 1549.8260500, -1805.8790300, 11.8808000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(19454, 1549.8310500, -1784.5799600, 11.8808000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(19454, 1549.8310500, -1795.2210700, 11.8808000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(1231, 1549.4213900, -1806.2326700, 15.2753000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(1231, 1549.4213900, -1795.4445800, 15.2753000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(1231, 1549.4213900, -1784.3710900, 15.2753000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(3660, 1513.1474600, -1789.4147900, 15.1502000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(3660, 1493.5244100, -1789.4147900, 15.1502000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(3660, 1449.2502400, -1789.4147900, 15.1502000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(3660, 1468.8817100, -1789.4147900, 15.1502000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(3660, 1536.5197800, -1812.1470900, 15.1502000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(3660, 1425.2630600, -1812.1020500, 15.1502000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1520.8946500, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1516.7309600, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1512.5611600, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1508.4047900, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1504.2346200, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1500.0843500, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1495.9278600, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1491.7624500, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1468.1555200, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1463.9897500, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1459.8254400, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1455.6530800, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1451.4886500, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1447.3233600, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1443.1667500, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1439.0067100, -1788.6762700, 13.0750000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(970, 1424.5177000, -1805.4708300, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1424.5177000, -1809.6330600, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1537.8051800, -1809.3714600, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1537.8051800, -1805.2099600, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(19454, 1403.9204100, -1779.8519300, 11.8808000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1773.5404100, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(970, 1399.1285400, -1777.6962900, 13.0750000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(19454, 1403.9267600, -1806.4364000, 11.8808000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(19454, 1408.8330100, -1801.7099600, 11.8808000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(19454, 1408.8270300, -1784.5799600, 11.8808000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(19362, 1408.8330100, -1793.2484100, 11.8808000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(1231, 1409.3209200, -1784.2922400, 15.2439000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(1231, 1409.3209200, -1801.0777600, 15.2439000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(638, 1408.3675500, -1782.5390600, 13.2278000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(638, 1408.3675500, -1787.5679900, 13.2278000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(638, 1408.3675500, -1793.2952900, 13.2278000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(638, 1408.3675500, -1798.8667000, 13.2278000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(638, 1408.3675500, -1803.4582500, 13.2278000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(638, 1550.2840600, -1808.8239700, 13.2301000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(638, 1550.2840600, -1803.6743200, 13.2301000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(638, 1550.2840600, -1797.6733400, 13.2301000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(638, 1550.2840600, -1793.3037100, 13.2301000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(638, 1550.2840600, -1787.3275100, 13.2301000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(638, 1550.2840600, -1782.3713400, 13.2301000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(2631, 1481.2896700, -1783.2193600, 14.4034000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(1361, 1484.5825200, -1782.3736600, 15.1402000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(1361, 1477.9173600, -1782.3736600, 15.1402000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(7091, 1487.7323000, -1784.2321800, 31.0428000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(7091, 1481.2137500, -1784.2321800, 31.0428000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(7091, 1474.5105000, -1784.2321800, 31.0428000, 0.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(1215, 1491.1346400, -1781.6446500, 14.9381000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(1215, 1471.3841600, -1781.6446500, 14.9381000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(19373, 1492.1044900, -1762.3096900, 12.6324000, 0.0000000, 90.0000000, 0.0000);
	CreateDynamicObject(19373, 1488.6292700, -1762.3096900, 12.6324000, 0.0000000, 90.0000000, 0.0000);
	CreateDynamicObject(19373, 1485.1392800, -1762.3096900, 12.6324000, 0.0000000, 90.0000000, 0.0000);
	CreateDynamicObject(19373, 1473.4814500, -1762.3096900, 12.6324000, 0.0000000, 90.0000000, 0.0000);
	CreateDynamicObject(19373, 1476.9746100, -1762.3096900, 12.6324000, 0.0000000, 90.0000000, 0.0000);
	CreateDynamicObject(19373, 1469.9816900, -1762.3096900, 12.6324000, 0.0000000, 90.0000000, 0.0000);
	CreateDynamicObject(19355, 1485.1256100, -1760.6200000, 11.1307000, 90.0000000, 0.0000000, 90.0000000);
	CreateDynamicObject(19355, 1483.4639900, -1762.3149400, 10.9907000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(19355, 1485.1256100, -1763.9984100, 11.1307000, 90.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(19355, 1488.6164600, -1763.9984100, 11.1307000, 90.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(19355, 1492.1070600, -1763.9984100, 11.1307000, 90.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(19355, 1488.6269500, -1760.6200000, 11.1307000, 90.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(19355, 1492.1130400, -1760.6200000, 11.1307000, 90.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(19355, 1493.7750200, -1762.3149400, 10.9907000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(19355, 1478.6369600, -1762.3094500, 10.9907000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(19355, 1476.9731400, -1763.9908400, 11.1307000, 90.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(19355, 1473.4757100, -1763.9908400, 11.1307000, 90.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(19355, 1469.9799800, -1763.9908400, 11.1307000, 90.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(19355, 1476.9731400, -1760.6190200, 11.1307000, 90.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(19355, 1473.4731400, -1760.6190200, 11.1307000, 90.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(19355, 1469.9832800, -1760.6190200, 11.1307000, 90.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(19355, 1468.3197000, -1762.3094500, 10.9907000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(3532, 1475.9040500, -1762.3335000, 13.3088000, 0.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(3532, 1471.0423600, -1762.3335000, 13.3088000, 0.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(3532, 1486.1958000, -1762.3335000, 13.3088000, 0.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(3532, 1491.0836200, -1762.3335000, 13.3088000, 0.0000000, 0.0000000, 90.0000);
	CreateDynamicObject(1359, 1474.8158000, -1745.8990500, 13.2013000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(1359, 1490.2154500, -1745.8990500, 13.2013000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(1215, 1466.4836400, -1776.7374300, 13.0925000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(1215, 1477.7319300, -1776.7374300, 13.0925000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(1215, 1484.5058600, -1776.7374300, 13.0925000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(1215, 1496.0908200, -1776.7374300, 13.0925000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(673, 1463.9140600, -1762.1688200, 12.5339000, 0.0000000, 0.0000000, 0.0000);
	CreateDynamicObject(673, 1453.8188500, -1762.1688200, 12.5339000, 0.0000000, 0.0000000, 0.0000);*/
	// interior by season
	CreateDynamicObject(19377,325.8530000,-571.6956800,-20.9738000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,325.8548000,-562.0875900,-20.9738000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,336.2819200,-566.0457800,-20.9738000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,341.7738600,-575.6000400,-20.9738000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19379,325.8408200,-561.8603500,-20.9723000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19379,325.8441800,-571.4903000,-20.9723000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19379,336.2962000,-566.0551800,-20.9723000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19379,341.7558300,-575.4776600,-20.9723000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19460,320.6767600,-561.8784200,-19.1881000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19460,320.6830100,-571.3484500,-19.1881000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19460,325.4508400,-576.1270100,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19460,331.7542100,-576.1449600,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19460,336.5576500,-575.6145600,-19.1881000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19460,341.2633400,-580.3833600,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19460,350.8291600,-580.3891600,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19460,346.8901400,-575.5832500,-19.1881000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19460,346.3948400,-570.7045300,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19460,341.6158400,-565.9849200,-19.1881000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19460,336.8869300,-561.1413000,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19460,335.8096600,-561.1567400,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19460,331.0653100,-556.4119300,-19.1881000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19460,325.3923000,-557.1201800,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19460,334.9709500,-557.1118200,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19460,331.0972600,-575.6237800,-19.1881000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19396,334.0647600,-570.7297400,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19441,331.7806700,-570.7491500,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19441,335.8327600,-570.7173500,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2526,334.7851900,-575.5683000,-20.9308000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2136,331.7348000,-575.5620100,-20.9274000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2528,332.1780100,-571.3684100,-20.8903000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1491,333.2941900,-570.7177700,-20.9048000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19460,321.0201700,-557.5195900,-19.1881000,0.0000000,0.0000000,40.0000000); //
	CreateDynamicObject(19460,330.3486000,-557.5402200,-19.1881000,0.0000000,0.0000000,-40.0000000); //
	CreateDynamicObject(19368,325.6798100,-561.1848800,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1566,324.1828600,-561.2636100,-19.4184000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1566,327.2965100,-561.2628800,-19.4184000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(19460,331.0429700,-560.1948200,-19.1881000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19460,331.0103800,-572.9549600,-19.1881000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19396,331.0354000,-566.5814200,-19.1881000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1491,331.0400100,-567.3270300,-20.9048000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19460,328.2544900,-570.7381600,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19396,322.1933000,-570.7406000,-19.1881000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1491,321.4119900,-570.7548200,-20.9048000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2566,328.3572100,-572.2066000,-20.3656000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2853,330.5132100,-575.2075200,-20.3062000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2853,330.4869100,-572.2534200,-20.3062000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2818,329.3913900,-575.7702000,-20.8840000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2818,329.4288000,-572.7470700,-20.8840000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2818,325.2128600,-562.5134900,-20.8840000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2330,327.7272900,-572.2874100,-20.9520000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2330,324.7242100,-572.2797900,-20.9520000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1742,326.2083100,-576.1417800,-20.8966000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(1742,323.7604100,-576.1096200,-20.8766000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2296,321.0152900,-574.6666900,-20.9251000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2069,321.4957000,-575.4990200,-20.8392000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2069,324.5473000,-575.8237900,-20.8392000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(640,321.1752000,-565.3682900,-20.2460000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(640,330.5199900,-562.5106200,-20.2460000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2010,324.2493000,-561.9892000,-20.8801000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2010,327.1684900,-561.9343900,-20.8801000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2296,341.1629900,-564.1539900,-20.9251000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1723,336.8614800,-564.9075300,-20.9533000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(640,333.9845000,-561.7407800,-20.2460000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(640,339.3116100,-561.7504900,-20.2460000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1723,336.8486900,-568.7154500,-20.9533000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2069,336.7840300,-565.8549200,-20.8392000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1742,332.4761000,-570.7797200,-20.8766000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2305,346.2849100,-579.7578100,-20.9274000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2139,343.1803000,-576.0720200,-20.9250000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2139,342.2093500,-576.0705600,-20.9250000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2139,341.2439900,-576.0584700,-20.9250000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2139,341.2811600,-575.0461400,-20.9250000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2139,342.2711500,-575.0471200,-20.9250000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2139,343.2120400,-575.0444300,-20.9250000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2135,345.3267800,-579.7642200,-20.9274000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2137,344.3388700,-579.7235700,-20.9274000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2138,343.3809200,-579.7238200,-20.9274000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2140,340.4799800,-579.7126500,-20.9274000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2136,342.4384800,-579.7202100,-20.9274000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2822,343.2604100,-575.5728100,-19.8857000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2863,342.1325400,-575.6666900,-19.8874000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1811,344.3797300,-575.5337500,-20.3216000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1811,343.0022900,-574.0434600,-20.3216000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1811,341.4133300,-574.0576800,-20.3216000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1811,339.9151000,-575.5575600,-20.3216000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(1811,341.4261200,-577.2644700,-20.3216000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1811,343.0248100,-577.2501800,-20.3216000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(19377,325.8950500,-561.9072300,-17.4985000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,325.8988300,-571.4221800,-17.4985000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,336.3598300,-565.9019800,-17.4985000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,336.3373100,-575.5045200,-17.4985000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19377,346.7562000,-575.4779100,-17.4985000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19173,346.7912000,-575.5222800,-18.9304000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19448,334.7672100,-575.1588100,-20.9834000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19448,331.2763100,-575.4912700,-20.9834000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(1823,325.8537000,-570.6622900,-20.9051000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1770,331.6413900,-564.1126100,-20.8854000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1208,336.1637900,-572.4489700,-20.8964000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1704,325.3790000,-570.1503300,-20.8850000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(1704,328.2027000,-570.1503300,-20.8850000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2251,326.2298000,-570.1602800,-19.5633000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2100,346.2171900,-570.9713100,-20.8868000,0.0000000,0.0000000,319.3341100); //
	CreateDynamicObject(19174,343.6913100,-570.7938200,-18.6867000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19172,337.4002100,-561.2490800,-18.7300000,0.0000000,0.0000000,0.0000000); //
	// water in pools
	CreateObject(10444, 1339.55957, -650.36328, 107.64650,   0.00000, 0.00000, 110.00000);
	CreateObject(10444, 881.52557, -683.94800, 112.61460,   0.00000, 0.00000, 145.00000);
	CreateObject(10444, 714.78162, -1054.18042, 45.20150,   0.00000, 0.00000, 150.10519);

	// new shit
	CreateDynamicObject(3061,2173.1225600,-988.9716800,64.6430000,0.0000000,0.0000000,79.6967000); //
	CreateDynamicObject(3061,2206.3122600,-996.9937100,64.1030000,0.0000000,0.0000000,67.5831000); //
	CreateDynamicObject(1536,1974.5544400,-1922.3291000,12.5274000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1536,1977.5720200,-1922.2890600,12.5274000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(19455,1982.3798800,-1922.2398700,13.9625000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19455,1992.0074500,-1922.2398700,13.9625000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19455,1995.5603000,-1911.5804400,13.9625000,0.0000000,0.0000000,44.2100000); //
	CreateDynamicObject(19455,1988.8520500,-1904.6944600,13.9625000,0.0000000,0.0000000,44.2100000); //
	CreateDynamicObject(19455,1982.1452600,-1897.8071300,13.9625000,0.0000000,0.0000000,44.2100000); //
	CreateDynamicObject(19455,1971.7266800,-1917.4814500,13.9625000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19455,1971.7266800,-1907.8621800,13.9625000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19455,1971.7266800,-1898.9206500,13.9625000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19363,1973.2525600,-1922.2364500,14.0122100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19363,1976.2067900,-1922.2564700,14.0122000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19436,1997.6113300,-1922.2398700,13.9625000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19436,1998.1313500,-1922.2598900,13.9625000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19363,1998.8719500,-1920.7231400,13.9625000,0.0000000,0.0000000,359.5939000); //
	CreateDynamicObject(19363,1998.8949000,-1917.5689700,13.9625000,0.0000000,0.0000000,359.5939000); //
	CreateDynamicObject(19363,1998.9051500,-1916.5593300,13.9625000,0.0000000,0.0000000,359.5939000); //
	CreateDynamicObject(19363,1977.0904500,-1894.2154500,13.9625000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19363,1973.8779300,-1894.1937300,13.9625000,0.0000000,0.0000000,89.6970000); //
	CreateDynamicObject(19436,1972.4652100,-1894.1790800,13.9625000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19436,1979.1881100,-1894.7735600,13.9625000,0.0000000,0.0000000,44.2100000); //
	CreateDynamicObject(8408,1973.5263700,-1920.4346900,17.5170900,0.0000000,0.0000000,333.9946900); //
	CreateDynamicObject(2714,1976.0389400,-1922.3676800,15.3615000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(638,1973.2270500,-1922.6949500,13.1659000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(638,1978.9185800,-1922.6949500,13.1659000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1432,1978.9910900,-1924.5885000,12.5441000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,1973.2368200,-1924.5885000,12.5440600,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3034,1981.8072500,-1922.3420400,14.3581000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3034,1989.0950900,-1922.3420400,14.3581000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3034,1996.6146200,-1922.3420400,14.3581000,0.0000000,0.0000000,359.6969600); //
	CreateDynamicObject(3034,1971.6285400,-1919.6163300,14.3581000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(3034,1971.6285400,-1910.4304200,14.3581000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(3034,1971.6285400,-1900.5826400,14.3581000,0.0000000,0.0000000,270.0000000); //

	//impound
	CreateDynamicObject(4100,1611.0291700,-1848.8615700,14.1685000,0.0000000,0.0000000,320.0000000); //
	CreateDynamicObject(4100,1611.0291700,-1848.8615700,17.0292000,0.0000000,0.0000000,320.0000000); //
	CreateDynamicObject(19456,1621.9262700,-1783.9293200,13.9302000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,1616.1228000,-1783.9293200,13.9302000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19456,1617.7828400,-1783.9293200,15.6767000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19456,1620.2600100,-1783.9293200,15.6591000,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(19364,1620.3953900,-1788.6387900,13.9210000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19364,1617.6514900,-1788.6402600,13.9210000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1496,1618.3992900,-1788.7584200,12.4540000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(4100,1599.0477300,-1774.7684300,16.5657000,0.0000000,0.0000000,305.1517900); //
	CreateDynamicObject(4100,1612.3115200,-1778.3016400,16.5657000,0.0000000,0.0000000,305.1517900); //
	CreateDynamicObject(4100,1625.5593300,-1781.8504600,16.5657000,0.0000000,0.0000000,305.1517900); //
	CreateDynamicObject(4100,1638.7960200,-1785.3939200,16.5657000,0.0000000,0.0000000,305.1517900); //
	CreateDynamicObject(4100,1652.0542000,-1788.9271200,16.5657000,0.0000000,0.0000000,305.1517900); //
	CreateDynamicObject(4100,1665.3116500,-1792.4857200,16.5657000,0.0000000,0.0000000,305.1517900); //
}

stock Objects_DMV()
{
    CreateDynamicObject(1533, 1292.94214, -1197.77637, 64.39080,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3934, 1308.57593, -1194.82727, 64.40400,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1215, 1304.72144, -1190.63892, 64.58580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1304.74670, -1199.21545, 64.58580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1312.59692, -1199.29333, 64.58580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1312.57776, -1190.63977, 64.58585,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1533, 1292.95166, -1196.29370, 64.39070,   0.00000, 0.00000, 90.00000);
}

stock Objects_RentalCenterExterior() {
	CreateDynamicObject(12846, 1605.90, -1884.20, 18.35,   0.00, 0.00, 45.96);
	CreateDynamicObject(1688, 1617.21, -1899.72, 19.34,   0.00, 0.00, 0.00);
	CreateDynamicObject(1688, 1613.46, -1901.16, 19.34,   0.00, 0.00, -90.00);
	CreateDynamicObject(1440, 1618.76, -1896.58, 13.06,   0.00, 0.00, 162.30);
	CreateDynamicObject(1216, 1614.25, -1897.40, 13.17,   0.00, 0.00, 180.00);
	CreateDynamicObject(638, 1607.39, -1881.90, 13.25,   0.00, 0.00, 90.00);
	CreateDynamicObject(638, 1604.30, -1881.90, 13.25,   0.00, 0.00, 90.00);
	CreateDynamicObject(638, 1601.34, -1881.90, 13.25,   0.00, 0.00, 90.00);
	CreateDynamicObject(10183, 1628.13, -1902.83, 12.58,   0.00, 0.00, -135.90);
	CreateDynamicObject(1438, 1631.02, -1910.41, 12.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(638, 1645.77, -1907.70, 13.25,   0.00, 0.00, 88.44);
	CreateDynamicObject(638, 1640.46, -1907.53, 13.25,   0.00, 0.00, 88.44);
	CreateDynamicObject(638, 1635.53, -1907.38, 13.25,   0.00, 0.00, 88.44);
	CreateDynamicObject(638, 1630.63, -1907.25, 13.25,   0.00, 0.00, 88.44);
	CreateDynamicObject(1215, 1643.06, -1907.63, 13.09,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1638.02, -1907.46, 13.09,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1633.05, -1907.32, 13.09,   0.00, 0.00, 0.00);
	CreateDynamicObject(7273, 1609.80, -1896.97, 17.04,   0.00, 0.00, -89.94);
	CreateDynamicObject(18608, 1619.23, -1896.39, 18.52,   0.00, 0.00, 90.00);
	CreateDynamicObject(1257, 1637.41, -1879.12, 13.78,   0.00, 0.00, -90.00);
	CreateDynamicObject(1229, 1640.28, -1878.99, 13.99,   0.00, 0.00, 165.60);
	CreateDynamicObject(910, 1621.92, -1896.62, 13.72,   0.00, 0.00, -164.88);
	CreateDynamicObject(1361, 1641.20, -1879.06, 13.29,   0.00, 0.00, 0.00);
	CreateDynamicObject(1653, 1673.76, -1886.29, 13.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1653, 1642.67, -1882.19, 13.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(1653, 1633.07, -1882.19, 13.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1626.02, -1882.51, 13.09,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1662.17, -1882.19, 13.09,   0.00, 0.00, 0.00);
	CreateDynamicObject(1653, 1655.43, -1882.19, 13.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1673.76, -1879.47, 13.09,   0.00, 0.00, 0.00);
	CreateDynamicObject(3262, 1662.68, -1882.17, 12.37,   0.00, 0.00, -181.56);
	CreateDynamicObject(1361, 1633.35, -1879.82, 13.29,   0.00, 0.00, 0.00);
	CreateDynamicObject(983, 1649.98, -1908.75, 13.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(983, 1649.98, -1902.34, 13.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(983, 1649.98, -1902.38, 13.21,   0.00, 0.00, 180.00);
	CreateDynamicObject(983, 1649.98, -1908.75, 13.21,   0.00, 0.00, 180.00);
	CreateDynamicObject(1653, 1642.67, -1882.19, 13.18,   0.00, 0.00, 180.00);
	CreateDynamicObject(1653, 1633.07, -1882.19, 13.18,   0.00, 0.00, 180.00);
	CreateDynamicObject(1653, 1655.43, -1882.19, 13.18,   0.00, 0.00, 180.00);
	CreateDynamicObject(1653, 1673.76, -1886.29, 13.18,   0.00, 0.00, -90.00);
	CreateDynamicObject(1215, 1626.14, -1897.20, 13.09,   0.00, 0.00, 0.00);
	CreateDynamicObject(1653, 1625.92, -1889.70, 13.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1653, 1625.92, -1889.70, 13.18,   0.00, 0.00, -90.00);
	CreateDynamicObject(3262, 1626.38, -1882.32, 12.37,   0.00, 0.00, -139.20);
	CreateDynamicObject(2714, 1618.35, -1897.85, 14.75,   0.00, 0.00, 180.00);
	CreateDynamicObject(1234, 1613.69, -1897.49, 13.94,   0.00, 0.00, -123.42);
}

stock Objects_GasStation() {
	CreateDynamicObject(2395,1914.86242676,-1786.47863770,11.50106239,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,1914.86230469,-1786.47851562,14.23307228,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (2)
	CreateDynamicObject(2395,1918.58984375,-1786.47875977,11.50106239,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (3)
	CreateDynamicObject(2395,1918.58984375,-1786.47851562,14.23425102,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (4)
	CreateDynamicObject(2395,1922.31860352,-1786.47363281,11.50106239,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (5)
	CreateDynamicObject(2395,1922.31835938,-1786.47363281,14.23425102,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (6)
	CreateDynamicObject(2395,1924.98034668,-1786.47387695,11.50106239,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (7)
	CreateDynamicObject(2395,1924.97973633,-1786.48535156,14.23366165,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (8)
	CreateDynamicObject(3034,1923.87036133,-1786.44042969,14.68867016,0.00000000,0.00000000,0.00000000); //object(bd_window) (4)
	CreateDynamicObject(2395,1928.27368164,-1785.93859863,11.50106239,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (9)
	CreateDynamicObject(2395,1928.27343750,-1785.93847656,14.23425102,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (10)
	CreateDynamicObject(2395,1928.27441406,-1782.23425293,11.50106239,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (12)
	CreateDynamicObject(2395,1928.27441406,-1782.23339844,14.23425102,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (13)
	CreateDynamicObject(2395,1928.27734375,-1778.50097656,11.50106239,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (15)
	CreateDynamicObject(2395,1928.29199219,-1774.77441406,11.50106239,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (16)
	CreateDynamicObject(2395,1928.29199219,-1771.04199219,11.50106239,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (17)
	CreateDynamicObject(2395,1928.28613281,-1769.46582031,11.50106239,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (18)
	CreateDynamicObject(2395,1928.27734375,-1778.50097656,14.23307228,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (19)
	CreateDynamicObject(2395,1928.29199219,-1774.77441406,14.23366165,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (20)
	CreateDynamicObject(2395,1928.29199219,-1771.04199219,14.23366165,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (21)
	CreateDynamicObject(2395,1928.28613281,-1769.46582031,14.23366165,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (22)
	CreateDynamicObject(3034,1928.22912598,-1784.28930664,14.68867016,0.00000000,0.00000000,90.00000000); //object(bd_window) (8)
	CreateDynamicObject(3034,1928.23413086,-1779.40441895,14.68867016,0.00000000,0.00000000,90.00000000); //object(bd_window) (9)
	CreateDynamicObject(1522,1928.17236328,-1773.75537109,12.50047302,0.00000000,0.00000000,270.25000000); //object(gen_doorshop3) (1)
	CreateDynamicObject(1522,1928.18066406,-1775.25488281,12.50047302,0.00000000,0.00000000,270.25000000); //object(gen_doorshop3) (3)
	CreateDynamicObject(3034,1928.24853516,-1769.11462402,14.68867016,0.00000000,0.00000000,90.00000000); //object(bd_window) (11)
	CreateDynamicObject(3034,1918.40905762,-1786.44226074,14.68867016,0.00000000,0.00000000,0.00000000); //object(bd_window) (15)
	CreateDynamicObject(2395,1927.74853516,-1766.16650391,11.50106239,0.00000000,0.00000000,180.00000000); //object(cj_sports_wall) (23)
	CreateDynamicObject(2395,1927.74804688,-1766.16601562,14.23484039,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall) (24)
	CreateDynamicObject(2395,1924.01965332,-1766.16760254,11.50106239,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall) (25)
	CreateDynamicObject(2395,1920.29052734,-1766.17150879,11.50106239,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall) (26)
	CreateDynamicObject(2395,1917.62438965,-1766.16052246,11.50106239,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall) (27)
	CreateDynamicObject(2395,1924.01953125,-1766.16699219,14.23366165,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall) (28)
	CreateDynamicObject(2395,1920.29003906,-1766.17089844,14.23366165,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall) (29)
	CreateDynamicObject(2395,1917.62402344,-1766.16015625,14.22786140,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall) (30)
	CreateDynamicObject(2395,1914.32763672,-1766.69799805,11.50106239,0.00000000,0.00000000,269.99450684); //object(cj_sports_wall) (31)
	CreateDynamicObject(2395,1914.32714844,-1766.69726562,14.22727203,0.00000000,0.00000000,269.98901367); //object(cj_sports_wall) (32)
	CreateDynamicObject(2395,1914.32446289,-1770.41992188,14.22727203,0.00000000,0.00000000,269.98901367); //object(cj_sports_wall) (33)
	CreateDynamicObject(2395,1914.32470703,-1770.42736816,11.50047302,0.00000000,0.00000000,269.98901367); //object(cj_sports_wall) (34)
	CreateDynamicObject(3034,1923.89978027,-1766.20544434,14.68867016,0.00000000,0.00000000,180.00000000); //object(bd_window) (16)
	CreateDynamicObject(3034,1917.98327637,-1766.20666504,14.68867016,0.00000000,0.00000000,179.75000000); //object(bd_window) (17)
	CreateDynamicObject(2395,1914.31555176,-1781.20471191,14.22727203,0.00000000,0.00000000,269.98901367); //object(cj_sports_wall) (37)
	CreateDynamicObject(2395,1914.31542969,-1781.20410156,11.48887253,0.00000000,0.00000000,269.98901367); //object(cj_sports_wall) (38)
	CreateDynamicObject(2395,1914.31994629,-1783.18249512,11.48887253,0.00000000,0.00000000,269.98901367); //object(cj_sports_wall) (39)
	CreateDynamicObject(2395,1914.31933594,-1783.18164062,14.22668266,0.00000000,0.00000000,269.98901367); //object(cj_sports_wall) (40)
	CreateDynamicObject(1233,1931.38903809,-1787.21911621,13.94249249,0.00000000,0.00000000,90.00000000); //object(noparkingsign1) (1)
	CreateDynamicObject(2714,1928.25708008,-1778.20739746,15.16425514,0.00000000,0.00000000,90.00000000); //object(cj_open_sign_2) (1)
	CreateDynamicObject(9314,1941.70898438,-1765.32226562,20.28519821,0.00000000,0.00000000,90.00000000); //object(advert01_sfn) (1)
	CreateDynamicObject(1280,1928.63085938,-1783.79956055,12.94823074,0.00000000,0.00000000,180.00000000); //object(parkbench1) (1)
	CreateDynamicObject(1549,1928.72985840,-1781.95336914,12.54687500,0.00000000,0.00000000,100.00000000); //object(cj_ashtray_b) (1)
	CreateDynamicObject(3465,1941.61657715,-1775.03942871,13.95613480,0.00000000,0.00000000,0.00000000); //object(vegspetrolpump) (1)
	CreateDynamicObject(3465,1941.65563965,-1777.74157715,13.95613480,0.00000000,0.00000000,0.00000000); //object(vegspetrolpump) (3)
	CreateDynamicObject(3465,1941.71386719,-1770.53662109,13.95613480,0.00000000,0.00000000,0.00000000); //object(vegspetrolpump) (4)
	CreateDynamicObject(3465,1941.74072266,-1768.12097168,13.95613480,0.00000000,0.00000000,0.00000000); //object(vegspetrolpump) (5)
	CreateDynamicObject(4100,1944.89746094,-1797.50390625,14.24074173,0.00000000,0.00000000,320.24597168); //object(meshfence1_lan) (1)
	CreateDynamicObject(4100,1951.55700684,-1804.09375000,14.24074173,0.00000000,0.00000000,50.24597168); //object(meshfence1_lan) (5)
	CreateDynamicObject(4100,1951.59545898,-1817.82360840,14.24074173,0.00000000,0.00000000,50.24597168); //object(meshfence1_lan) (6)
	CreateDynamicObject(4100,1931.17773438,-1797.54492188,14.21174049,0.00000000,0.00000000,320.24047852); //object(meshfence1_lan) (7)
	CreateDynamicObject(4100,1917.46289062,-1797.58300781,14.21174049,0.00000000,0.00000000,320.24047852); //object(meshfence1_lan) (8)
	CreateDynamicObject(4100,1910.61523438,-1797.60742188,14.21174049,0.00000000,0.00000000,320.24047852); //object(meshfence1_lan) (9)
	CreateDynamicObject(4100,1903.44543457,-1790.46838379,14.24074173,0.00000000,0.00000000,50.24597168); //object(meshfence1_lan) (10)
	CreateDynamicObject(4100,1903.40759277,-1776.75109863,14.24074173,0.00000000,0.00000000,50.24597168); //object(meshfence1_lan) (11)
	CreateDynamicObject(4100,1903.38391113,-1769.90075684,14.24074173,0.00000000,0.00000000,50.24597168); //object(meshfence1_lan) (12)
	CreateDynamicObject(4100,1896.78051758,-1763.37158203,14.21174049,0.00000000,0.00000000,320.24597168); //object(meshfence1_lan) (13)
	CreateDynamicObject(4100,1894.32702637,-1763.38867188,14.21174049,0.00000000,0.00000000,320.24597168); //object(meshfence1_lan) (14)
	CreateDynamicObject(1256,1955.11425781,-1771.61157227,13.20633125,0.00000000,0.00000000,180.00000000); //object(stonebench1) (2)
	CreateDynamicObject(1229,1954.81347656,-1773.57104492,14.10655499,0.00000000,0.00000000,92.00000000); //object(bussign1) (1)
	CreateDynamicObject(1215,1931.12915039,-1786.96936035,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1913.99914551,-1787.01684570,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,1931.11791992,-1762.90539551,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,1941.61242676,-1764.98083496,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,1941.69970703,-1780.82629395,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(1215,1955.17773438,-1769.87390137,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
	CreateDynamicObject(1215,1914.78674316,-1762.17980957,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
	CreateDynamicObject(1215,1908.23999023,-1762.13952637,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(8661,1931.64355469,-1767.32421875,12.38446808,0.00000000,0.00000000,0.00000000); //object(gnhtelgrnd_lvs) (2)
	CreateDynamicObject(8661,1891.64843750,-1767.32617188,12.38446808,0.00000000,0.00000000,0.00000000); //object(gnhtelgrnd_lvs) (3)
	CreateDynamicObject(8661,1936.65917969,-1787.31542969,12.38446808,0.00000000,0.00000000,0.00000000); //object(gnhtelgrnd_lvs) (4)
	CreateDynamicObject(8661,1896.73889160,-1787.30529785,12.38446808,0.00000000,0.00000000,0.00000000); //object(gnhtelgrnd_lvs) (5)
	CreateDynamicObject(8843,1944.61718750,-1772.66113281,12.39441299,0.00000000,0.00000000,0.00000000); //object(arrows01_lvs) (1)
	CreateDynamicObject(8843,1938.44726562,-1772.58789062,12.40021324,0.00000000,0.00000000,179.74731445); //object(arrows01_lvs) (2)
	CreateDynamicObject(18232,1921.25683594,-1771.32031250,12.96496201,0.00000000,0.00000000,90.00000000); //object(cuntw_ngassta) (1)
	CreateDynamicObject(3578,1922.54919434,-1793.29919434,11.57608700,18.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (3)
	CreateDynamicObject(3578,1935.62573242,-1773.44287109,11.57608700,13.24951172,0.00000000,89.48913574); //object(dockbarr1_la) (7)
	CreateDynamicObject(3578,1935.55065918,-1781.29553223,11.57608700,13.24951172,0.00000000,89.48913574); //object(dockbarr1_la) (9)
	CreateDynamicObject(1691,1919.87561035,-1770.42321777,17.19487572,0.00000000,0.00000000,90.00000000); //object(gen_roofbit5) (1)
	CreateDynamicObject(1966,1911.61132812,-1780.68420410,13.39640045,0.00000000,0.00000000,0.00000000); //object(imcompmovedr1_las) (1)
	CreateDynamicObject(1966,1912.02197266,-1772.09936523,13.39640045,0.00000000,0.00000000,0.00000000); //object(imcompmovedr1_las) (2)
	CreateDynamicObject(8843,1911.48901367,-1781.51025391,12.39441299,0.00000000,0.00000000,0.00000000); //object(arrows01_lvs) (1)
	CreateDynamicObject(8843,1911.59545898,-1769.29699707,12.39441299,0.00000000,0.00000000,0.00000000); //object(arrows01_lvs) (1)
}

stock Objects_BarriersAndBankExterior() {
	CreateDynamicObject(994,581.79980469,-1244.69921875,16.70000076,0.00000000,357.99499512,279.49768066); //object(lhouse_barrier2) (1)
    CreateDynamicObject(997,594.29998779,-1239.00000000,17.00000000,0.00000000,0.00000000,200.00000000); //object(lhouse_barrier3) (1)
    CreateDynamicObject(1215,583.20001221,-1253.19995117,17.60000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
    CreateDynamicObject(1215,582.79980469,-1251.09960938,17.50000000,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
    CreateDynamicObject(1215,581.70001221,-1244.19995117,17.29999924,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
    CreateDynamicObject(996,582.59997559,-1243.80004883,17.39999962,0.00000000,359.00000000,22.75000000); //object(lhouse_barrier1) (1)
    CreateDynamicObject(996,596.70001221,-1238.00000000,17.79999924,0.00000000,359.00000000,21.49475098); //object(lhouse_barrier1) (2)
    CreateDynamicObject(997,583.19921875,-1253.39941406,17.00000000,0.00000000,357.99499512,281.74987793); //object(lhouse_barrier3) (2)
    CreateDynamicObject(1215,589.70001221,-1240.90002441,17.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
    CreateDynamicObject(1215,591.09997559,-1240.30004883,17.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
    CreateDynamicObject(1215,594.40002441,-1238.90002441,17.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
    CreateDynamicObject(1215,595.90002441,-1238.30004883,17.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
    CreateDynamicObject(996,604.09997559,-1236.09997559,17.89999962,0.00000000,358.99475098,290.24719238); //object(lhouse_barrier1) (3)
    CreateDynamicObject(997,606.90002441,-1243.69995117,17.39999962,0.00000000,357.99499512,290.74987793); //object(lhouse_barrier3) (3)
    CreateDynamicObject(1215,603.70001221,-1235.09997559,17.70000076,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
    CreateDynamicObject(1215,606.79998779,-1243.40002441,18.00000000,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
    CreateDynamicObject(4697,580.29998779,-1284.50000000,14.39999962,3.29998779,0.00000000,13.25000000); //object(crprkblok1_lan2) (1)
    CreateDynamicObject(966,1695.59997559,417.39999390,29.70000076,0.00000000,0.00000000,340.74938965); //object(bar_gatebar01) (2)
    CreateDynamicObject(997,-78.59999847,-905.70001221,16.10000038,0.00000000,0.00000000,332.00000000); //object(lhouse_barrier3) (4)
    CreateDynamicObject(994,1715.79980469,418.89941406,29.79999924,0.00000000,358.49487305,341.99890137); //object(lhouse_barrier2) (2)
    CreateDynamicObject(1215,1715.40002441,418.20001221,30.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
    CreateDynamicObject(1215,1721.40002441,416.50000000,30.70000076,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
    CreateDynamicObject(1215,1702.19995117,415.10000610,30.20000076,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
    CreateDynamicObject(966,1709.00000000,421.19921875,29.79999924,0.00000000,0.00000000,161.99890137); //object(bar_gatebar01) (4)
    CreateDynamicObject(994,46.50000000,-1530.80004883,4.19999981,0.00000000,0.99426270,352.49084473); //object(lhouse_barrier2) (4)
    CreateDynamicObject(1215,1704.80004883,422.70001221,30.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
    CreateDynamicObject(1215,1683.59997559,422.50000000,30.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
    CreateDynamicObject(1215,1689.39941406,420.29980469,30.29999924,0.00000000,0.00000000,0.00000000); //object(bollardlight) (19)
    CreateDynamicObject(966,612.29998779,354.10000610,17.89999962,0.00000000,0.00000000,31.49230957); //object(bar_gatebar01) (5)
    CreateDynamicObject(966,-963.50000000,-284.39999390,35.50000000,0.00000000,0.00000000,168.24523926); //object(bar_gatebar01) (6)
    CreateDynamicObject(966,600.19921875,346.29980469,17.89999962,0.00000000,0.00000000,214.24438477); //object(bar_gatebar01) (7)
    CreateDynamicObject(966,-183.89999390,278.50000000,11.30000019,0.00000000,0.00000000,343.99267578); //object(bar_gatebar01) (8)
    CreateDynamicObject(966,-197.79980469,282.39941406,11.30000019,0.00000000,0.00000000,164.99267578); //object(bar_gatebar01) (9)
    CreateDynamicObject(966,-949.50000000,-287.50000000,35.50000000,0.00000000,0.00000000,346.74462891); //object(bar_gatebar01) (10)
    CreateDynamicObject(997,-948.90002441,-287.60000610,35.79999924,0.00000000,0.00000000,345.99743652); //object(lhouse_barrier3) (12)
    CreateDynamicObject(966,-78.80000305,-906.20001221,16.20000076,0.00000000,0.00000000,332.73950195); //object(bar_gatebar01) (12)
    CreateDynamicObject(997,-967.29980469,-283.69921875,35.79999924,0.00000000,0.00000000,347.99743652); //object(lhouse_barrier3) (13)
    CreateDynamicObject(997,-87.90000153,-901.00000000,16.10000038,0.00000000,0.00000000,331.99035645); //object(lhouse_barrier3) (14)
    CreateDynamicObject(966,67.00000000,-1537.80004883,4.00000000,0.00000000,0.00000000,85.73205566); //object(bar_gatebar01) (13)
    CreateDynamicObject(3881,1706.00000000,418.50000000,31.60000038,358.50000000,0.00000000,161.50000000); //object(airsecbooth_sfse) (1)
    CreateDynamicObject(3881,41.89941406,-1529.59960938,6.19999981,0.00000000,0.00000000,259.99694824); //object(airsecbooth_sfse) (2)
    CreateDynamicObject(966,38.39941406,-1525.59960938,4.19999981,0.00000000,0.00000000,264.72656250); //object(bar_gatebar01) (13)
    CreateDynamicObject(994,1683.00000000,421.69921875,29.89999962,0.00000000,1.99951172,341.99340820); //object(lhouse_barrier2) (4)
    CreateDynamicObject(994,601.29998779,-1204.40002441,17.29999924,0.00000000,0.98876953,20.48535156); //object(lhouse_barrier2) (4)
    CreateDynamicObject(3881,64.69999695,-1533.69995117,6.00000000,0.00000000,0.00000000,82.24365234); //object(airsecbooth_sfse) (3)
    CreateDynamicObject(3881,1698.69995117,420.10000610,31.60000038,0.99487305,359.75000000,341.25329590); //object(airsecbooth_sfse) (6)
    CreateDynamicObject(994,1698.40002441,417.20001221,30.20000076,0.00000000,358.49487305,338.99890137); //object(lhouse_barrier2) (2)
    CreateDynamicObject(1215,1700.00000000,416.00000000,30.29999924,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
    CreateDynamicObject(1215,1702.59997559,423.50000000,30.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
    CreateDynamicObject(966,628.50000000,-1193.80004883,17.10000038,0.00000000,0.00000000,202.72656250); //object(bar_gatebar01) (13)
    CreateDynamicObject(994,53.50000000,-1531.69921875,4.09999990,0.00000000,0.98876953,352.48535156); //object(lhouse_barrier2) (4)
    CreateDynamicObject(994,622.50000000,-1197.30004883,17.39999962,0.00000000,0.98876953,27.23535156); //object(lhouse_barrier2) (4)
    CreateDynamicObject(966,607.59960938,-1201.89941406,17.10000038,0.00000000,0.00000000,196.72119141); //object(bar_gatebar01) (13)
    CreateDynamicObject(994,614.50000000,-1199.79980469,17.20000076,0.00000000,0.98327637,20.48400879); //object(lhouse_barrier2) (4)
    CreateDynamicObject(994,635.29998779,-1191.30004883,17.39999962,0.00000000,0.98327637,25.48510742); //object(lhouse_barrier2) (4)

	/* --- Barrier Objects --- */

    Barrier[0] = CreateDynamicObject(968,-78.79980469,-906.19921875,17.10000038,0.00000000,89.74182129,152.97363281); //object(barrierturn) (26)
    Barrier[2] = CreateDynamicObject(968,1695.59997559,417.39999390,30.60000038,359.98901367,88.99475098,160.49670410); //object(barrierturn) (6)
    Barrier[3] = CreateDynamicObject(968,1709.00000000,421.20001221,30.70000076,0.00000000,89.74731445,341.99340820); //object(barrierturn) (7)
    Barrier[4] = CreateDynamicObject(968,600.20001221,346.29998779,18.79999924,0.00000000,89.74731445,33.99719238); //object(barrierturn) (9)
    Barrier[5] = CreateDynamicObject(968,-183.89941406,278.50000000,12.19999981,0.00000000,89.74182129,163.98193359); //object(barrierturn) (17)
    Barrier[6] = CreateDynamicObject(968,-197.80000305,282.39999390,12.19999981,0.00000000,89.74182129,344.72912598); //object(barrierturn) (18)
    Barrier[7] = CreateDynamicObject(968,607.59997559,-1201.90002441,18.00000000,0.00000000,89.74182129,16.47131348); //object(barrierturn) (26)
    Barrier[8] = CreateDynamicObject(968,67.00000000,-1537.80004883,4.90000010,0.00000000,89.74182129,265.72082520); //object(barrierturn) (26)
	Barrier[9] = CreateDynamicObject(968,38.39941406,-1525.69921875,5.09999990,0.00000000,89.74182129,84.72106934); //object(barrierturn) (26)
    Barrier[10] = CreateDynamicObject(968,612.29998779,354.10000610,18.79999924,0.00000000,89.74731445,211.49218750); //object(barrierturn) (12)
    Barrier[11] = CreateDynamicObject(968,-963.50000000,-284.39941406,36.40000153,0.00000000,89.74182129,348.22265625); //object(barrierturn) (25)
    Barrier[12] = CreateDynamicObject(968,-949.50000000,-287.50000000,36.40000153,0.00000000,89.74182129,166.72302246); //object(barrierturn) (21)
	Barrier[13] = CreateDynamicObject(968,628.50000000,-1193.80004883,18.00000000,0.00000000,89.74182129,22.71850586); //object(barrierturn) (26)

	/* --- Barrier Checkpoints --- */

    BarrierCP[0] = CreateDynamicCP(-82.7363, -907.1985, 17.2780, 3, -1, -1, -1, 20.0);
    BarrierCP[1] = CreateDynamicCP(-80.5027, -901.5977, 16.7660, 3, -1, -1, -1, 20.0);
    BarrierCP[2] = CreateDynamicCP(1693.5045, 422.2212, 30.7774, 3, -1, -1, -1, 20.0);
    BarrierCP[3] = CreateDynamicCP(1711.4302, 416.3034, 30.7783, 3, -1, -1, -1, 20.0);
    BarrierCP[4] = CreateDynamicCP(600.7905, 351.3488, 18.9297, 3, -1, -1, -1, 20.0);
    BarrierCP[5] = CreateDynamicCP(-188.2443, 276.3735, 12.0781, 3, -1, -1, -1, 20.0);
    BarrierCP[6] = CreateDynamicCP(-193.6546, 284.6499, 12.0781, 3, -1, -1, -1, 20.0);
    BarrierCP[7] = CreateDynamicCP(608.6578, -1197.2133, 18.6295, 3, -1, -1, -1, 20.0);
    BarrierCP[8] = CreateDynamicCP(63.8536, -1541.2255, 5.0561, 3, -1, -1, -1, 20.0);
	BarrierCP[9] = CreateDynamicCP(42.7211, -1522.6234, 5.1627, 3, -1, -1, -1, 20.0);
    BarrierCP[10] = CreateDynamicCP(611.7004, 348.6368, 18.9297, 3, -1, -1, -1, 20.0);
    BarrierCP[11] = CreateDynamicCP(-959.2037, -281.8335, 36.4890, 3, -1, -1, -1, 20.0);
    BarrierCP[12] = CreateDynamicCP(-953.6569, -290.6796, 36.4427, 3, -1, -1, -1, 20.0);
    BarrierCP[13] = CreateDynamicCP(633.6965, -1195.6578, 18.1094, 3, -1, -1, -1, 20.0);
}

stock Objects_Club() {

	Nightclub[0] = CreateDynamicObject(19377, 2000.675415, 1332.860961, 104.217247, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[0], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[1] = CreateDynamicObject(19377, 1981.397094, 1357.450805, 104.215248, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[1], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[2] = CreateDynamicObject(14411, 1986.749877, 1350.339721, 101.095222, 0.000000, 0.000000, 0.000000);
	Nightclub[3] = CreateDynamicObject(19377, 1998.283569, 1354.954589, 104.212249, 0.000000, 90.000000, 45.000000);
	SetDynamicObjectMaterial(Nightclub[3], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[4] = CreateDynamicObject(19377, 1983.958984, 1354.859252, 107.642227, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[4], 0, 3897, "libertyhi", "indtendark64", 0);
	Nightclub[5] = CreateDynamicObject(19355, 1992.848999, 1351.874511, 101.958381, 35.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[5], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[6] = CreateDynamicObject(19377, 1967.264282, 1354.470825, 105.955322, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[6], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[7] = CreateDynamicObject(14411, 1994.005981, 1343.188476, 101.105285, 0.000000, 0.000000, 270.000000);
	Nightclub[8] = CreateDynamicObject(14411, 1994.005981, 1347.188354, 101.105285, 0.000000, 0.000000, 270.000000);
	Nightclub[9] = CreateDynamicObject(19355, 1994.787597, 1351.132080, 102.545257, 0.000000, 0.000000, 45.000000);
	SetDynamicObjectMaterial(Nightclub[9], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[10] = CreateDynamicObject(19355, 1982.872680, 1339.217163, 102.545257, 0.000000, 0.000000, 45.000000);
	SetDynamicObjectMaterial(Nightclub[10], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[11] = CreateDynamicObject(19454, 1988.867797, 1352.272827, 102.545295, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[11], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[12] = CreateDynamicObject(19355, 1994.838012, 1339.217895, 102.545257, 0.000000, 0.000000, 315.000000);
	SetDynamicObjectMaterial(Nightclub[12], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[13] = CreateDynamicObject(19454, 1995.938232, 1345.163085, 102.545295, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[13], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[14] = CreateDynamicObject(14411, 1990.749633, 1350.339721, 101.095222, 0.000000, 0.000000, 0.000000);
	Nightclub[15] = CreateDynamicObject(19377, 1983.478027, 1332.891479, 104.215248, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[15], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[16] = CreateDynamicObject(19377, 1976.985961, 1336.513305, 104.218246, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[16], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[17] = CreateDynamicObject(14411, 1986.897094, 1340.012817, 101.105278, 0.000000, 0.000000, 180.000000);
	Nightclub[18] = CreateDynamicObject(14411, 1990.887084, 1340.012817, 101.105278, 0.000000, 0.000000, 180.000000);
	Nightclub[19] = CreateDynamicObject(14411, 1983.712768, 1347.170654, 101.105270, 0.000000, 0.000000, 90.000000);
	Nightclub[20] = CreateDynamicObject(14411, 1983.712768, 1343.170532, 101.105270, 0.000000, 0.000000, 90.000000);
	Nightclub[21] = CreateDynamicObject(19355, 1982.908691, 1351.147216, 102.545257, 0.000000, 0.000000, 315.000000);
	SetDynamicObjectMaterial(Nightclub[21], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[22] = CreateDynamicObject(19355, 1984.808959, 1351.874511, 101.958381, 35.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[22], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[23] = CreateDynamicObject(19355, 1982.130371, 1349.157714, 101.998168, 325.000000, 0.000000, 270.000000);
	SetDynamicObjectMaterial(Nightclub[23], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[24] = CreateDynamicObject(19355, 1992.877197, 1338.476318, 101.969039, 325.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[24], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[25] = CreateDynamicObject(19355, 1984.856567, 1338.476318, 101.969039, 325.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[25], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[26] = CreateDynamicObject(19355, 1982.130371, 1341.196411, 101.998168, 325.000000, 0.000000, 270.000000);
	SetDynamicObjectMaterial(Nightclub[26], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[27] = CreateDynamicObject(19355, 1995.528442, 1349.119506, 101.975830, 325.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[27], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[28] = CreateDynamicObject(19355, 1995.528442, 1341.148315, 101.975830, 325.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[28], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[29] = CreateDynamicObject(19454, 1981.768920, 1345.163085, 102.545295, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[29], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[30] = CreateDynamicObject(19377, 1979.596923, 1354.553833, 104.212249, 0.000000, 90.000000, 45.000000);
	SetDynamicObjectMaterial(Nightclub[30], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[31] = CreateDynamicObject(19377, 1979.051757, 1335.722778, 104.212249, 0.000000, 90.000000, 45.000000);
	SetDynamicObjectMaterial(Nightclub[31], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[32] = CreateDynamicObject(19377, 1998.235351, 1335.915405, 104.212249, 0.000000, 90.000000, 45.000000);
	SetDynamicObjectMaterial(Nightclub[32], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[33] = CreateDynamicObject(19454, 1988.867797, 1338.071899, 102.545295, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[33], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[34] = CreateDynamicObject(19377, 1993.097656, 1332.891479, 104.215248, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[34], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[35] = CreateDynamicObject(19377, 2010.295410, 1344.930664, 104.215248, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[35], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[36] = CreateDynamicObject(19377, 1991.006835, 1357.450805, 104.215248, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[36], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[37] = CreateDynamicObject(19377, 1976.985961, 1357.511230, 104.217247, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[37], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[38] = CreateDynamicObject(19377, 1976.985961, 1347.011596, 104.215248, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[38], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[39] = CreateDynamicObject(19377, 2000.675415, 1353.830078, 104.215248, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[39], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[40] = CreateDynamicObject(19377, 2000.675415, 1364.299682, 104.215248, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[40], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[41] = CreateDynamicObject(19454, 1979.486328, 1331.220092, 105.975357, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[41], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[42] = CreateDynamicObject(19454, 1989.095581, 1331.220092, 105.975357, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[42], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[43] = CreateDynamicObject(19454, 1998.715209, 1331.220092, 105.975357, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[43], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[44] = CreateDynamicObject(19454, 2014.102539, 1337.014038, 109.485336, 0.000000, 0.000000, 315.000000);
	SetDynamicObjectMaterial(Nightclub[44], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[45] = CreateDynamicObject(19454, 1999.453735, 1359.231689, 105.955322, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[45], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[46] = CreateDynamicObject(19454, 1989.834106, 1359.231689, 105.955322, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[46], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[47] = CreateDynamicObject(19454, 2002.813598, 1336.088867, 105.995353, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[47], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[48] = CreateDynamicObject(19377, 2000.675415, 1343.350097, 104.215248, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[48], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[49] = CreateDynamicObject(14411, 2009.715576, 1339.339965, 103.291183, 0.000000, 0.000000, 225.000000);
	Nightclub[50] = CreateDynamicObject(14411, 2004.810791, 1350.619140, 103.281181, 0.000000, 0.000000, 0.000000);
	Nightclub[51] = CreateDynamicObject(14411, 2012.788085, 1350.619140, 103.281181, 0.000000, 0.000000, 0.000000);
	Nightclub[52] = CreateDynamicObject(14411, 2004.920532, 1339.867919, 103.281181, 0.000000, 0.000000, 180.000000);
	Nightclub[53] = CreateDynamicObject(14411, 2012.889892, 1339.867919, 103.281181, 0.000000, 0.000000, 180.000000);
	Nightclub[54] = CreateDynamicObject(14411, 2011.830200, 1338.958007, 103.281181, 0.000000, 0.000000, 270.000000);
	Nightclub[55] = CreateDynamicObject(14411, 2011.830200, 1346.926391, 103.281181, 0.000000, 0.000000, 270.000000);
	Nightclub[56] = CreateDynamicObject(14411, 2011.830200, 1350.915771, 103.281181, 0.000000, 0.000000, 270.000000);
	Nightclub[57] = CreateDynamicObject(14411, 2012.572265, 1348.375610, 103.291183, 0.000000, 0.000000, 315.000000);
	Nightclub[58] = CreateDynamicObject(14411, 2009.743896, 1351.203979, 103.291183, 0.000000, 0.000000, 315.000000);
	Nightclub[59] = CreateDynamicObject(14411, 2012.536987, 1342.161376, 103.291183, 0.000000, 0.000000, 225.000000);
	Nightclub[60] = CreateDynamicObject(19454, 2013.626831, 1338.160644, 106.402473, 0.000000, 90.000000, 315.000000);
	SetDynamicObjectMaterial(Nightclub[60], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[61] = CreateDynamicObject(14411, 2008.810424, 1350.619140, 103.281181, 0.000000, 0.000000, 0.000000);
	Nightclub[62] = CreateDynamicObject(19454, 2007.643310, 1354.217895, 106.397476, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[62], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[63] = CreateDynamicObject(14411, 2008.909912, 1339.867919, 103.281181, 0.000000, 0.000000, 180.000000);
	Nightclub[64] = CreateDynamicObject(19454, 2007.643310, 1336.267822, 106.397476, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[64], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[65] = CreateDynamicObject(14411, 2011.830200, 1342.947143, 103.281181, 0.000000, 0.000000, 270.000000);
	Nightclub[66] = CreateDynamicObject(19454, 2015.424072, 1345.178588, 106.397476, 0.000000, 90.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[66], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[67] = CreateDynamicObject(19454, 2013.712036, 1352.330810, 106.402473, 0.000000, 90.000000, 45.000000);
	SetDynamicObjectMaterial(Nightclub[67], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[68] = CreateDynamicObject(19454, 2016.366333, 1350.647583, 107.490570, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[68], 0, 12962, "sw_apartflat", "sw_door16", 0);
	Nightclub[69] = CreateDynamicObject(19454, 2007.709838, 1335.574584, 107.490570, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[69], 0, 12962, "sw_apartflat", "sw_door16", 0);
	Nightclub[70] = CreateDynamicObject(19454, 2007.709838, 1354.666137, 107.490570, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[70], 0, 12962, "sw_apartflat", "sw_door16", 0);
	Nightclub[71] = CreateDynamicObject(19454, 2014.355712, 1352.870849, 107.490570, 0.000000, 0.000000, 45.000000);
	SetDynamicObjectMaterial(Nightclub[71], 0, 12962, "sw_apartflat", "sw_door16", 0);
	Nightclub[72] = CreateDynamicObject(19454, 2014.427001, 1337.398193, 107.490570, 0.000000, 0.000000, 315.000000);
	SetDynamicObjectMaterial(Nightclub[72], 0, 12962, "sw_apartflat", "sw_door16", 0);
	Nightclub[73] = CreateDynamicObject(19454, 2016.366333, 1341.027832, 107.490570, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[73], 0, 12962, "sw_apartflat", "sw_door16", 0);
	Nightclub[74] = CreateDynamicObject(19454, 2002.813598, 1354.390991, 105.995353, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[74], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[75] = CreateDynamicObject(19454, 2002.813598, 1354.390991, 109.485336, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[75], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[76] = CreateDynamicObject(19377, 1978.705810, 1335.650268, 107.767204, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[76], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[77] = CreateDynamicObject(19454, 2016.473999, 1349.650390, 109.485336, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[77], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[78] = CreateDynamicObject(19454, 2016.473999, 1340.061279, 109.485336, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[78], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[79] = CreateDynamicObject(19454, 2007.664306, 1335.510742, 109.485336, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[79], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[80] = CreateDynamicObject(19454, 2017.284179, 1335.510742, 109.485336, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[80], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[81] = CreateDynamicObject(19454, 2007.654541, 1354.692016, 109.485336, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[81], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[82] = CreateDynamicObject(19454, 2014.654785, 1352.584106, 109.485336, 0.000000, 0.000000, 45.000000);
	SetDynamicObjectMaterial(Nightclub[82], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[83] = CreateDynamicObject(19454, 1999.752563, 1354.410888, 109.485336, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[83], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[84] = CreateDynamicObject(19377, 1997.945800, 1335.650268, 107.647224, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[84], 0, 3897, "libertyhi", "indtendark64", 0);
	Nightclub[85] = CreateDynamicObject(19377, 1988.317016, 1335.650268, 107.647224, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[85], 0, 3897, "libertyhi", "indtendark64", 0);
	Nightclub[86] = CreateDynamicObject(19377, 1978.677734, 1335.650268, 107.647224, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[86], 0, 3897, "libertyhi", "indtendark64", 0);
	Nightclub[87] = CreateDynamicObject(19377, 1969.058105, 1344.440063, 107.647224, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[87], 0, 3897, "libertyhi", "indtendark64", 0);
	Nightclub[88] = CreateDynamicObject(18981, 1979.131958, 1347.810302, 111.513381, 0.000000, 90.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[88], 0, 3897, "libertyhi", "indtendark64", 0);
	Nightclub[89] = CreateDynamicObject(18981, 1987.428100, 1343.942138, 102.925094, 0.000000, 90.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[89], 0, 17946, "carter_mainmap", "mp_carter_carpet", -1052688);
	Nightclub[90] = CreateDynamicObject(19377, 1978.677734, 1356.619384, 107.647224, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[90], 0, 3897, "libertyhi", "indtendark64", 0);
	Nightclub[91] = CreateDynamicObject(19377, 1997.999145, 1354.859252, 107.647224, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[91], 0, 3897, "libertyhi", "indtendark64", 0);
	Nightclub[92] = CreateDynamicObject(19377, 1988.369140, 1354.859252, 107.647224, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[92], 0, 3897, "libertyhi", "indtendark64", 0);
	Nightclub[93] = CreateDynamicObject(19454, 1980.244384, 1359.231689, 105.955322, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[93], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[94] = CreateDynamicObject(19454, 1975.493530, 1357.292358, 105.955322, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[94], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[95] = CreateDynamicObject(16151, 1974.445434, 1345.223510, 104.601165, 0.000000, 0.000000, 180.000000);
	Nightclub[96] = CreateDynamicObject(19454, 1973.353881, 1344.899169, 105.955322, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[96], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[97] = CreateDynamicObject(19454, 1970.734008, 1340.801025, 105.955322, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[97], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[98] = CreateDynamicObject(19454, 1975.503173, 1336.070556, 105.955322, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[98], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[99] = CreateDynamicObject(19377, 1997.945800, 1335.650268, 107.767204, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[99], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[100] = CreateDynamicObject(19377, 1988.335815, 1335.650268, 107.767204, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[100], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[101] = CreateDynamicObject(19377, 1988.308593, 1354.868408, 107.767242, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[101], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[102] = CreateDynamicObject(19377, 1978.677734, 1346.129882, 107.767242, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[102], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[103] = CreateDynamicObject(2746, 1975.657592, 1358.333129, 104.891166, 0.000000, 0.000000, 90.000000);
	Nightclub[104] = CreateDynamicObject(2746, 1979.157592, 1358.333129, 104.891166, 0.000000, 0.000000, 90.000000);
	Nightclub[105] = CreateDynamicObject(2746, 1982.657592, 1358.333129, 104.891166, 0.000000, 0.000000, 90.000000);
	Nightclub[106] = CreateDynamicObject(2747, 1977.353027, 1358.205078, 104.713188, 0.000000, 0.000000, 90.000000);
	Nightclub[107] = CreateDynamicObject(2746, 1986.157592, 1358.333129, 104.891166, 0.000000, 0.000000, 90.000000);
	Nightclub[108] = CreateDynamicObject(2746, 1989.657592, 1358.333129, 104.891166, 0.000000, 0.000000, 90.000000);
	Nightclub[109] = CreateDynamicObject(2746, 1993.157592, 1358.333129, 104.891166, 0.000000, 0.000000, 90.000000);
	Nightclub[110] = CreateDynamicObject(2746, 1996.657592, 1358.333129, 104.891166, 0.000000, 0.000000, 90.000000);
	Nightclub[111] = CreateDynamicObject(2746, 2000.157592, 1358.333129, 104.891166, 0.000000, 0.000000, 90.000000);
	Nightclub[112] = CreateDynamicObject(2747, 1980.853027, 1358.205078, 104.713188, 0.000000, 0.000000, 90.000000);
	Nightclub[113] = CreateDynamicObject(2747, 1984.353027, 1358.205078, 104.713188, 0.000000, 0.000000, 90.000000);
	Nightclub[114] = CreateDynamicObject(2747, 1987.853027, 1358.205078, 104.713188, 0.000000, 0.000000, 90.000000);
	Nightclub[115] = CreateDynamicObject(2747, 1991.353027, 1358.205078, 104.713188, 0.000000, 0.000000, 90.000000);
	Nightclub[116] = CreateDynamicObject(2747, 1994.853027, 1358.205078, 104.713188, 0.000000, 0.000000, 90.000000);
	Nightclub[117] = CreateDynamicObject(2747, 1998.353027, 1358.205078, 104.713188, 0.000000, 0.000000, 90.000000);
	Nightclub[118] = CreateDynamicObject(2747, 2001.482666, 1358.205078, 104.713188, 0.000000, 0.000000, 90.000000);
	Nightclub[119] = CreateDynamicObject(2746, 2002.877807, 1358.333129, 104.891166, 0.000000, 0.000000, 90.000000);
	Nightclub[120] = CreateDynamicObject(2748, 1976.374267, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[121] = CreateDynamicObject(2748, 1977.974243, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[122] = CreateDynamicObject(2748, 1979.574218, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[123] = CreateDynamicObject(2748, 1981.174194, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[124] = CreateDynamicObject(2748, 1982.774169, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[125] = CreateDynamicObject(2748, 1984.374145, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[126] = CreateDynamicObject(2748, 1985.974121, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[127] = CreateDynamicObject(2748, 1987.574096, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[128] = CreateDynamicObject(2748, 1989.174072, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[129] = CreateDynamicObject(2748, 1990.774047, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[130] = CreateDynamicObject(2748, 1992.374023, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[131] = CreateDynamicObject(2748, 1993.973999, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[132] = CreateDynamicObject(2748, 1995.573974, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[133] = CreateDynamicObject(2748, 1997.173950, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[134] = CreateDynamicObject(2748, 1998.773925, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[135] = CreateDynamicObject(2748, 2000.373901, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[136] = CreateDynamicObject(2748, 2001.973876, 1331.871948, 104.894126, 0.000000, 0.000000, 180.000000);
	Nightclub[137] = CreateDynamicObject(2748, 2001.973876, 1334.673217, 104.894126, 0.000000, 0.000000, 0.000000);
	Nightclub[138] = CreateDynamicObject(2747, 2001.176025, 1333.311767, 104.693199, 0.000000, 0.000000, 0.000000);
	Nightclub[139] = CreateDynamicObject(2748, 2000.373901, 1334.673217, 104.894126, 0.000000, 0.000000, 0.000000);
	Nightclub[140] = CreateDynamicObject(2747, 1996.375976, 1333.311767, 104.693199, 0.000000, 0.000000, 0.000000);
	Nightclub[141] = CreateDynamicObject(2748, 1997.173950, 1334.673217, 104.894126, 0.000000, 0.000000, 0.000000);
	Nightclub[142] = CreateDynamicObject(2748, 1995.573974, 1334.673217, 104.894126, 0.000000, 0.000000, 0.000000);
	Nightclub[143] = CreateDynamicObject(2747, 1991.575927, 1333.311767, 104.693199, 0.000000, 0.000000, 0.000000);
	Nightclub[144] = CreateDynamicObject(2748, 1992.374023, 1334.673217, 104.894126, 0.000000, 0.000000, 0.000000);
	Nightclub[145] = CreateDynamicObject(2748, 1990.774047, 1334.673217, 104.894126, 0.000000, 0.000000, 0.000000);
	Nightclub[146] = CreateDynamicObject(2747, 1986.775878, 1333.311767, 104.693199, 0.000000, 0.000000, 0.000000);
	Nightclub[147] = CreateDynamicObject(2748, 1987.574096, 1334.673217, 104.894126, 0.000000, 0.000000, 0.000000);
	Nightclub[148] = CreateDynamicObject(2748, 1985.974121, 1334.673217, 104.894126, 0.000000, 0.000000, 0.000000);
	Nightclub[149] = CreateDynamicObject(2747, 1981.975830, 1333.311767, 104.693199, 0.000000, 0.000000, 0.000000);
	Nightclub[150] = CreateDynamicObject(2748, 1982.774169, 1334.673217, 104.894126, 0.000000, 0.000000, 0.000000);
	Nightclub[151] = CreateDynamicObject(2748, 1981.174194, 1334.673217, 104.894126, 0.000000, 0.000000, 0.000000);
	Nightclub[152] = CreateDynamicObject(2747, 1977.175781, 1333.311767, 104.693199, 0.000000, 0.000000, 0.000000);
	Nightclub[153] = CreateDynamicObject(2748, 1977.974243, 1334.673217, 104.894126, 0.000000, 0.000000, 0.000000);
	Nightclub[154] = CreateDynamicObject(2748, 1976.374267, 1334.673217, 104.894126, 0.000000, 0.000000, 0.000000);
	Nightclub[155] = CreateDynamicObject(3471, 2001.656494, 1350.166748, 105.511184, 0.000000, 0.000000, 180.000000);
	Nightclub[156] = CreateDynamicObject(3471, 2001.656494, 1340.306884, 105.511184, 0.000000, 0.000000, 180.000000);
	Nightclub[157] = CreateDynamicObject(19377, 1978.677734, 1356.629394, 107.767242, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[157], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[158] = CreateDynamicObject(19377, 1997.937988, 1354.868408, 107.767242, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[158], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[159] = CreateDynamicObject(19377, 1978.677734, 1346.129882, 107.647224, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[159], 0, 3897, "libertyhi", "indtendark64", 0);
	Nightclub[160] = CreateDynamicObject(14411, 1973.325683, 1351.673095, 102.843147, 0.000000, 0.000000, 90.000000);
	Nightclub[161] = CreateDynamicObject(14411, 1972.024902, 1354.581787, 104.653144, 0.000000, 0.000000, 270.000000);
	Nightclub[162] = CreateDynamicObject(19377, 1966.665405, 1354.831054, 105.955238, 0.000000, 90.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[162], 0, 17946, "carter_mainmap", "mp_carter_carpet", 0);
	Nightclub[163] = CreateDynamicObject(19377, 1970.734008, 1349.782104, 105.955322, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[163], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[164] = CreateDynamicObject(19355, 1973.956420, 1352.583984, 102.637374, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[164], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[165] = CreateDynamicObject(19355, 1972.845336, 1352.582031, 106.095329, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[165], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[166] = CreateDynamicObject(19355, 1973.956420, 1352.583984, 106.097328, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[166], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[167] = CreateDynamicObject(19395, 1975.484741, 1354.330322, 109.591194, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[167], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[168] = CreateDynamicObject(19377, 1970.734008, 1355.791870, 105.955322, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[168], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[169] = CreateDynamicObject(19395, 1975.484741, 1351.310546, 105.831230, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[169], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[170] = CreateDynamicObject(19355, 1973.933593, 1351.060302, 109.321174, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[170], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[171] = CreateDynamicObject(19428, 1974.726684, 1352.603637, 109.583160, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[171], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[172] = CreateDynamicObject(19355, 1975.484741, 1351.130371, 109.591194, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[172], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[173] = CreateDynamicObject(19454, 1975.482299, 1335.078002, 109.603172, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[173], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[174] = CreateDynamicObject(19454, 1980.339355, 1355.991821, 109.603172, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[174], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[175] = CreateDynamicObject(19454, 1989.959716, 1355.991821, 109.603172, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[175], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[176] = CreateDynamicObject(19454, 1997.960937, 1355.996826, 109.603172, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[176], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[177] = CreateDynamicObject(19454, 1997.960937, 1335.296142, 109.603172, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[177], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[178] = CreateDynamicObject(19454, 1988.341430, 1335.296142, 109.603172, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[178], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[179] = CreateDynamicObject(19454, 1978.721923, 1335.296142, 109.603172, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[179], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[180] = CreateDynamicObject(19454, 1975.482299, 1344.708007, 109.603172, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[180], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[181] = CreateDynamicObject(19454, 2002.813598, 1336.080444, 109.485336, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[181], 0, 12923, "sw_block05", "sw_wallbrick_06", 0);
	Nightclub[182] = CreateDynamicObject(19454, 1999.732421, 1336.060424, 109.485336, 0.000000, 0.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[182], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[183] = CreateDynamicObject(19355, 2001.273193, 1340.814575, 109.453163, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[183], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[184] = CreateDynamicObject(970, 1985.621337, 1349.660766, 108.403175, 0.000000, 0.000000, 0.000000);
	Nightclub[185] = CreateDynamicObject(970, 1989.771240, 1349.660766, 108.403175, 0.000000, 0.000000, 0.000000);
	Nightclub[186] = CreateDynamicObject(970, 1993.942138, 1349.660766, 108.403175, 0.000000, 0.000000, 0.000000);
	Nightclub[187] = CreateDynamicObject(970, 1998.111938, 1349.660766, 108.403175, 0.000000, 0.000000, 0.000000);
	Nightclub[188] = CreateDynamicObject(19355, 2001.273193, 1349.685180, 109.453163, 0.000000, 0.000000, 90.000000);
	SetDynamicObjectMaterial(Nightclub[188], 0, 11631, "mp_ranchcut", "mpCJ_DarkWood", 0);
	Nightclub[189] = CreateDynamicObject(970, 1998.091674, 1340.859497, 108.363105, 0.000000, 0.000000, 0.000000);
	Nightclub[190] = CreateDynamicObject(970, 1985.581298, 1340.859497, 108.363105, 0.000000, 0.000000, 0.000000);
	Nightclub[191] = CreateDynamicObject(970, 1989.752075, 1340.859497, 108.363105, 0.000000, 0.000000, 0.000000);
	Nightclub[192] = CreateDynamicObject(970, 1993.921875, 1340.859497, 108.363105, 0.000000, 0.000000, 0.000000);
	Nightclub[193] = CreateDynamicObject(18981, 2004.132690, 1347.810302, 111.513381, 0.000000, 90.000000, 0.000000);
	SetDynamicObjectMaterial(Nightclub[193], 0, 3897, "libertyhi", "indtendark64", 0);
	Nightclub[194] = CreateDynamicObject(970, 1983.453857, 1347.573608, 108.393119, 0.000000, 0.000000, 90.000000);
	Nightclub[195] = CreateDynamicObject(970, 1983.453857, 1342.941528, 108.393119, 0.000000, 0.000000, 90.000000);
	Nightclub[196] = CreateDynamicObject(3498, 1994.492187, 1350.760375, 103.105270, 0.000000, 0.000000, 0.000000);
	Nightclub[197] = CreateDynamicObject(3498, 1991.913330, 1348.460815, 113.015258, 0.000000, 180.000000, 0.000000);
	Nightclub[198] = CreateDynamicObject(3498, 1983.291381, 1339.600585, 103.105270, 0.000000, 0.000000, 0.000000);
	Nightclub[199] = CreateDynamicObject(3498, 1983.291381, 1350.760375, 103.105270, 0.000000, 0.000000, 0.000000);
	Nightclub[200] = CreateDynamicObject(3440, 1983.175292, 1345.270141, 110.073181, 0.000000, 0.000000, 0.000000);
	Nightclub[201] = CreateDynamicObject(2235, 1997.750732, 1353.240722, 107.793113, 0.000000, 0.000000, 0.000000);
	Nightclub[202] = CreateDynamicObject(1726, 1999.376220, 1352.303833, 107.803115, 0.000000, 0.000000, 180.000000);
	Nightclub[203] = CreateDynamicObject(14537, 1974.204589, 1344.151977, 109.573158, 0.000000, 0.000000, 0.000000);
	Nightclub[204] = CreateDynamicObject(1726, 1994.305908, 1336.003417, 107.803115, 0.000000, 0.000000, 180.000000);
	Nightclub[205] = CreateDynamicObject(1726, 1989.305908, 1336.003417, 107.803115, 0.000000, 0.000000, 180.000000);
	Nightclub[206] = CreateDynamicObject(1726, 1984.305908, 1336.003417, 107.803115, 0.000000, 0.000000, 180.000000);
	Nightclub[207] = CreateDynamicObject(2235, 1992.750732, 1336.870727, 107.793113, 0.000000, 0.000000, 0.000000);
	Nightclub[208] = CreateDynamicObject(2235, 1987.750732, 1336.870727, 107.793113, 0.000000, 0.000000, 0.000000);
	Nightclub[209] = CreateDynamicObject(2235, 1982.750732, 1336.870727, 107.793113, 0.000000, 0.000000, 0.000000);
	Nightclub[210] = CreateDynamicObject(1726, 1999.305908, 1336.003417, 107.803115, 0.000000, 0.000000, 180.000000);
	Nightclub[211] = CreateDynamicObject(1726, 1992.335571, 1338.723754, 107.803115, 0.000000, 0.000000, 0.000000);
	Nightclub[212] = CreateDynamicObject(18654, 1983.346679, 1350.679321, 104.079040, 0.000000, -2.699999, 135.000000);
	Nightclub[213] = CreateDynamicObject(18653, 1994.444702, 1350.743774, 104.131866, 0.000000, -4.099998, 45.000000);
	Nightclub[214] = CreateDynamicObject(18655, 1994.651611, 1339.558349, 104.162887, 0.000000, -5.900001, 315.000000);
	Nightclub[215] = CreateDynamicObject(18653, 1983.327270, 1339.685058, 104.108413, 0.000000, -3.799998, 225.000000);
	Nightclub[216] = CreateDynamicObject(18652, 1989.237792, 1346.270263, 79.441253, 270.000000, 0.000000, 0.000000);
	Nightclub[217] = CreateDynamicObject(18648, 2016.319213, 1344.704345, 109.538825, 0.000000, 0.000000, 0.000000);
	Nightclub[218] = CreateDynamicObject(18646, 1988.836303, 1345.135864, 93.471267, 0.000000, 0.000000, 0.000000);
	Nightclub[219] = CreateDynamicObject(18102, 1990.610717, 1341.657348, 108.851165, 0.000000, 0.000000, 315.000000);
	Nightclub[220] = CreateDynamicObject(18102, 1993.537231, 1346.874633, 108.851165, 0.000000, 0.000000, 45.000000);
	Nightclub[221] = CreateDynamicObject(3498, 1994.613281, 1339.600585, 103.105270, 0.000000, 0.000000, 0.000000);
	Nightclub[222] = CreateDynamicObject(3498, 1992.192016, 1343.290649, 113.015258, 0.000000, 180.000000, 0.000000);
	Nightclub[223] = CreateDynamicObject(3498, 1986.222778, 1342.740600, 113.015258, 0.000000, 180.000000, 0.000000);
	Nightclub[224] = CreateDynamicObject(3498, 1986.412963, 1349.010742, 113.015258, 0.000000, 180.000000, 0.000000);
	Nightclub[225] = CreateDynamicObject(19128, 1986.940063, 1343.127685, 103.371208, 0.000000, 0.000000, 0.000000);
	Nightclub[226] = CreateDynamicObject(19128, 1986.940063, 1347.088012, 103.371208, 0.000000, 0.000000, 0.000000);
	Nightclub[227] = CreateDynamicObject(19128, 1990.920532, 1347.088012, 103.371208, 0.000000, 0.000000, 0.000000);
	Nightclub[228] = CreateDynamicObject(19128, 1990.920532, 1343.098388, 103.371208, 0.000000, 0.000000, 0.000000);
	Nightclub[229] = CreateDynamicObject(1726, 1987.335571, 1338.723754, 107.803115, 0.000000, 0.000000, 0.000000);
	Nightclub[230] = CreateDynamicObject(1726, 1982.335571, 1338.723754, 107.803115, 0.000000, 0.000000, 0.000000);
	Nightclub[231] = CreateDynamicObject(1726, 1997.335571, 1338.723754, 107.803115, 0.000000, 0.000000, 0.000000);
	Nightclub[232] = CreateDynamicObject(1726, 1982.335571, 1355.294189, 107.803115, 0.000000, 0.000000, 0.000000);
	Nightclub[233] = CreateDynamicObject(1726, 1987.335571, 1355.294189, 107.803115, 0.000000, 0.000000, 0.000000);
	Nightclub[234] = CreateDynamicObject(1726, 1992.335571, 1355.294189, 107.803115, 0.000000, 0.000000, 0.000000);
	Nightclub[235] = CreateDynamicObject(2235, 1997.750732, 1336.870727, 107.793113, 0.000000, 0.000000, 0.000000);
	Nightclub[236] = CreateDynamicObject(2235, 1992.750732, 1353.240722, 107.793113, 0.000000, 0.000000, 0.000000);
	Nightclub[237] = CreateDynamicObject(2235, 1987.750732, 1353.240722, 107.793113, 0.000000, 0.000000, 0.000000);
	Nightclub[238] = CreateDynamicObject(2235, 1982.750732, 1353.240722, 107.793113, 0.000000, 0.000000, 0.000000);
	Nightclub[239] = CreateDynamicObject(1726, 1997.335571, 1355.294189, 107.803115, 0.000000, 0.000000, 0.000000);
	Nightclub[240] = CreateDynamicObject(1726, 1994.376220, 1352.303833, 107.803115, 0.000000, 0.000000, 180.000000);
	Nightclub[241] = CreateDynamicObject(1726, 1989.376220, 1352.303833, 107.803115, 0.000000, 0.000000, 180.000000);
	Nightclub[242] = CreateDynamicObject(1726, 1984.376220, 1352.303833, 107.803115, 0.000000, 0.000000, 180.000000);
	Nightclub[243] = CreateDynamicObject(632, 1995.922851, 1336.773925, 108.293106, 0.000000, 0.000000, 90.000000);
	Nightclub[244] = CreateDynamicObject(632, 1990.922851, 1336.773925, 108.293106, 0.000000, 0.000000, 90.000000);
	Nightclub[245] = CreateDynamicObject(632, 1985.922851, 1336.773925, 108.293106, 0.000000, 0.000000, 90.000000);
	Nightclub[246] = CreateDynamicObject(632, 1995.922851, 1356.094726, 108.293106, 0.000000, 0.000000, 90.000000);
	Nightclub[247] = CreateDynamicObject(632, 1985.922851, 1356.094726, 108.293106, 0.000000, 0.000000, 90.000000);
	Nightclub[248] = CreateDynamicObject(632, 1990.922851, 1356.094726, 108.293106, 0.000000, 0.000000, 90.000000);
	Nightclub[249] = CreateDynamicObject(2785, 1977.807250, 1335.885009, 108.633094, 0.000000, 0.000000, 180.000000);
	Nightclub[250] = CreateDynamicObject(632, 1980.922851, 1336.773925, 108.293106, 0.000000, 0.000000, 90.000000);
	Nightclub[251] = CreateDynamicObject(632, 1980.922851, 1356.094726, 108.293106, 0.000000, 0.000000, 90.000000);
	Nightclub[252] = CreateDynamicObject(19174, 1999.637451, 1337.551635, 109.863151, 0.000000, 0.000000, 270.000000);
	Nightclub[253] = CreateDynamicObject(19172, 1999.657104, 1353.595581, 109.803169, 0.000000, 0.000000, 270.000000);

}

stock Objects_Bank() {
	CreateObject(19379,589.00000000,-1265.59960938,2233.60009766,0.00000000,90.00000000,0.00000000); //object(sfw_boxwest12) (1)
	CreateObject(19379,589.00000000,-1275.19995117,2233.60009766,0.00000000,90.00000000,0.00000000); //object(sfw_boxwest12) (2)
    CreateDynamicObject(19464,586.70001221,-1278.30004883,2236.19995117,0.00000000,0.00000000,270.00000000); //object(lib_street13) (1)
    CreateDynamicObject(19464,592.59997559,-1278.30004883,2236.19995117,0.00000000,0.00000000,270.00000000); //object(lib_street13) (2)
    CreateObject(19379,599.50000000,-1275.19995117,2233.60009766,0.00000000,90.00000000,0.00000000); //object(sfw_boxwest12) (3)
    CreateObject(19379,599.50000000,-1265.59997559,2233.60009766,0.00000000,90.00000000,0.00000000); //object(sfw_boxwest12) (4)
    CreateDynamicObject(19464,598.50000000,-1278.30004883,2236.19995117,0.00000000,0.00000000,270.00000000); //object(lib_street13) (3)
    CreateDynamicObject(19464,592.59997559,-1260.80004883,2236.19995117,0.00000000,0.00000000,270.00000000); //object(lib_street13) (5)
    CreateDynamicObject(19464,598.09997559,-1263.80004883,2236.19995117,0.00000000,0.00000000,180.00000000); //object(lib_street13) (6)
    CreateDynamicObject(19464,598.50000000,-1260.79980469,2236.19995117,0.00000000,0.00000000,270.00000000); //object(lib_street13) (7)
    CreateDynamicObject(19464,598.09997559,-1269.69995117,2236.19995117,0.00000000,0.00000000,179.99450684); //object(lib_street13) (8)
    CreateDynamicObject(19464,598.09997559,-1275.59997559,2236.19995117,0.00000000,0.00000000,179.99450684); //object(lib_street13) (9)
    CreateDynamicObject(19464,583.79998779,-1275.50000000,2236.19995117,0.00000000,0.00000000,179.99450684); //object(lib_street13) (13)
    CreateDynamicObject(19464,583.79998779,-1281.40002441,2236.19995117,0.00000000,0.00000000,179.99450684); //object(lib_street13) (14)
    CreateDynamicObject(19377,599.50000000,-1275.19995117,2237.19995117,0.00000000,90.00000000,0.00000000); //object(freight_interiorsfw) (1)
    CreateDynamicObject(19377,589.00000000,-1275.19995117,2237.19995117,0.00000000,90.00000000,0.00000000); //object(freight_interiorsfw) (2)
    CreateDynamicObject(19377,589.00000000,-1265.59997559,2237.19995117,0.00000000,90.00000000,0.00000000); //object(freight_interiorsfw) (3)
    CreateDynamicObject(19377,599.50000000,-1265.59997559,2237.19995117,0.00000000,90.00000000,0.00000000); //object(freight_interiorsfw) (4)
    CreateDynamicObject(1569,598.00000000,-1265.19995117,2233.69995117,0.00000000,0.00000000,270.00000000); //object(adam_v_door) (1)
    CreateDynamicObject(1569,598.00000000,-1268.19995117,2233.69995117,0.00000000,0.00000000,89.80001831); //object(adam_v_door) (2)
    CreateDynamicObject(1569,598.00000000,-1274.19995117,2233.69995117,0.00000000,0.00000000,89.80001831); //object(adam_v_door) (3)
    CreateDynamicObject(1569,598.00000000,-1271.19995117,2233.69995117,0.00000000,0.00000000,270.00000000); //object(adam_v_door) (4)
    CreateDynamicObject(2942,595.40002441,-1277.80004883,2234.30004883,0.00000000,0.00000000,180.00000000); //object(kmb_atm1) (1)
    CreateDynamicObject(2942,597.20001221,-1277.80004883,2234.30004883,0.00000000,0.00000000,179.99450684); //object(kmb_atm1) (2)
    CreateDynamicObject(2435,592.09997559,-1273.19995117,2233.69995117,0.00000000,0.00000000,90.00000000); //object(cj_ff_conter_2) (1)
    CreateDynamicObject(19465,589.55999756,-1272.59997559,2236.19995117,0.00000000,0.00000000,270.00000000); //object(trackshad05) (1)
    CreateDynamicObject(19464,592.40002441,-1269.69995117,2236.19995117,0.00000000,0.00000000,179.99450684); //object(lib_street13) (18)
    CreateDynamicObject(19465,592.39941406,-1263.79980469,2236.19995117,0.00000000,0.00000000,0.00000000); //object(trackshad05) (2)
    CreateDynamicObject(19464,583.63000488,-1272.59997559,2236.19995117,0.00000000,0.00000000,270.00000000); //object(lib_street13) (20)
    CreateDynamicObject(2435,592.09997559,-1274.09997559,2233.69995117,0.00000000,0.00000000,90.00000000); //object(cj_ff_conter_2) (2)
    CreateDynamicObject(2435,592.09997559,-1275.00000000,2233.69995117,0.00000000,0.00000000,90.00000000); //object(cj_ff_conter_2) (3)
    CreateDynamicObject(2435,592.09997559,-1275.90002441,2233.69995117,0.00000000,0.00000000,90.00000000); //object(cj_ff_conter_2) (4)
    CreateDynamicObject(2435,592.09997559,-1276.80004883,2233.69995117,0.00000000,0.00000000,90.00000000); //object(cj_ff_conter_2) (5)
    CreateDynamicObject(2435,592.09997559,-1277.69995117,2233.69995117,0.00000000,0.00000000,90.00000000); //object(cj_ff_conter_2) (6)
    CreateDynamicObject(3089,590.30297852,-1272.68005371,2235.00000000,0.00000000,0.00000000,180.00000000); //object(ab_casdorlok) (1)
    CreateDynamicObject(3089,592.39941406,-1263.05957031,2235.00000000,0.00000000,0.00000000,270.00000000); //object(ab_casdorlok) (2)
    CreateDynamicObject(2310,593.00000000,-1271.09997559,2234.19995117,0.00000000,0.00000000,180.00000000); //object(mike_din_chair) (1)
    CreateDynamicObject(2310,593.00000000,-1270.40002441,2234.19995117,0.00000000,0.00000000,179.99450684); //object(mike_din_chair) (2)
    CreateDynamicObject(2310,593.00000000,-1269.69995117,2234.19995117,0.00000000,0.00000000,179.99450684); //object(mike_din_chair) (3)
    CreateDynamicObject(2310,593.00000000,-1269.00000000,2234.19995117,0.00000000,0.00000000,179.99450684); //object(mike_din_chair) (4)
    CreateDynamicObject(2165,589.90002441,-1276.59997559,2233.69995117,0.00000000,0.00000000,270.00000000); //object(med_office_desk_1) (1)
    CreateDynamicObject(2165,586.29998779,-1276.59997559,2233.69995117,0.00000000,0.00000000,270.00000000); //object(med_office_desk_1) (2)
    CreateDynamicObject(2165,586.20001221,-1273.30004883,2233.69995117,0.00000000,0.00000000,270.00000000); //object(med_office_desk_1) (3)
    CreateDynamicObject(1715,546.20001221,-1234.19995117,2154.10009766,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair2) (1)
    CreateDynamicObject(1715,585.00000000,-1273.80004883,2233.69995117,0.00000000,0.00000000,90.00000000); //object(kb_swivelchair2) (2)
    CreateDynamicObject(1715,585.09997559,-1277.00000000,2233.69995117,0.00000000,0.00000000,90.00000000); //object(kb_swivelchair2) (3)
    CreateDynamicObject(1715,588.70001221,-1277.09997559,2233.69995117,0.00000000,0.00000000,90.00000000); //object(kb_swivelchair2) (4)
    CreateDynamicObject(3857,592.09997559,-1276.30004883,2238.00000000,0.00000000,0.00000000,314.75000000); //object(ottosmash3) (1)
    CreateDynamicObject(19464,592.09997559,-1281.00000000,2236.19995117,0.00000000,0.00000000,179.99450684); //object(lib_street13) (21)
    CreateDynamicObject(19464,592.09997559,-1275.09997559,2239.50000000,0.00000000,0.00000000,179.99450684); //object(lib_street13) (22)
    CreateDynamicObject(19464,592.09997559,-1269.90002441,2236.19995117,0.00000000,0.00000000,179.99450684); //object(lib_street13) (23)
    CreateDynamicObject(2186,587.40002441,-1273.30004883,2233.69995117,0.00000000,0.00000000,0.00000000); //object(photocopier_1) (1)
    CreateDynamicObject(18608,595.59997559,-1269.69995117,2238.10009766,0.00000000,0.00000000,0.00000000); //object(counts_lights01) (1)
    CreateDynamicObject(18608,587.90002441,-1267.90002441,2238.10009766,0.00000000,0.00000000,0.00000000); //object(counts_lights01) (2)
    CreateDynamicObject(2954,592.34301758,-1263.30004883,2234.19995117,0.00000000,0.00000000,0.00000000); //object(kmb_ot) (1)
    CreateDynamicObject(2954,589.00000000,-1272.59997559,2234.00000000,0.00000000,0.00000000,90.00000000); //object(kmb_ot) (2)

    /* --- Bank Pickups --- */

    BankPickup = CreateDynamicPickup(1239, 23, 593.2187, -1249.9857-1, 18.2146);

    /* --- Bank Checkpoints --- */

    BankCP[1] = CreateDynamicCP(1399.9944, -1030.5449, 3422.6860, 1.5, -1, -1, -1, 5.0);
    BankCP[2] = CreateDynamicCP(1399.8768, -1034.8494, 3422.6860, 1.5, -1, -1, -1, 5.0);
    BankCP[3] = CreateDynamicCP(1400.0503, -1018.3500, 3422.6860, 1.5, -1, -1, -1, 5.0);
    BankCP[4] = CreateDynamicCP(1399.9866, -1013.9082, 3422.6860, 1.5, -1, -1, -1, 5.0);
}
stock Objects_PoliceAGC()
{
    CreateDynamicObject(19462, 2218.00024, 1674.15576, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2221.47290, 1674.64124, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2224.84155, 1675.10059, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2228.24902, 1675.65662, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2231.60474, 1676.28442, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2235.00146, 1676.57996, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2238.45068, 1677.01245, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2241.92578, 1677.51550, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2245.35425, 1677.98657, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2248.74780, 1678.45105, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2252.20532, 1678.89539, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2237.15015, 1686.51392, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2240.61011, 1686.88513, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2244.06128, 1687.46655, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2233.69849, 1685.99475, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2230.24219, 1685.56189, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2226.77197, 1685.17334, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2247.54468, 1688.01477, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2251.00049, 1688.40955, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2255.68579, 1679.33521, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2254.43115, 1688.90332, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2223.35742, 1684.60608, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2219.87329, 1684.18335, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2216.45020, 1683.65112, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2242.83887, 1697.02661, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2246.16772, 1697.42908, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2239.45776, 1696.34204, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2236.04565, 1695.91650, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2232.57446, 1695.45654, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2229.10742, 1694.97729, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2225.75806, 1694.46985, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2222.29883, 1694.19104, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2218.94824, 1693.64697, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2242.93628, 1668.00854, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2239.46460, 1667.54114, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2236.07373, 1667.24609, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2232.62793, 1666.69482, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2229.30176, 1666.21643, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2225.95801, 1665.61328, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2222.67017, 1665.21448, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2219.24731, 1664.63611, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2246.37842, 1668.43274, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2249.77563, 1669.06812, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2253.18848, 1669.38379, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2256.46606, 1669.82410, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2227.27808, 1656.24426, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2244.08765, 1658.56165, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2247.56372, 1659.20215, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2250.41797, 1659.61133, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2218.10376, 1664.15332, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19446, 2245.83569, 1661.29431, 1008.83008,   0.00000, 0.00000, 127.00000);
	CreateDynamicObject(19446, 2252.22119, 1668.04614, 1008.83008,   0.00000, 0.00000, -33.00000);
	CreateDynamicObject(19446, 2254.87012, 1676.83362, 1008.83008,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19446, 2252.24536, 1685.62720, 1008.83008,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(19446, 2247.01514, 1693.70081, 1008.83008,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(19446, 2252.22119, 1668.04614, 1012.29999,   0.00000, 0.00000, -33.00000);
	CreateDynamicObject(19446, 2245.83569, 1661.29431, 1012.30103,   0.00000, 0.00000, 127.00000);
	CreateDynamicObject(19446, 2254.87012, 1676.83362, 1012.29999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19446, 2252.24536, 1685.62720, 1012.29999,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(19446, 2247.03149, 1693.68921, 1012.29999,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(19446, 2239.82178, 1696.90356, 1008.83008,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(19446, 2230.46802, 1695.60645, 1008.83008,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(19446, 2222.79663, 1691.14124, 1008.83008,   0.00000, 0.00000, 142.00000);
	CreateDynamicObject(19446, 2218.55713, 1682.85791, 1008.83008,   0.00000, 0.00000, 164.00000);
	CreateDynamicObject(19446, 2218.24927, 1673.70569, 1008.83008,   0.00000, 0.00000, 193.00000);
	CreateDynamicObject(19446, 2221.42847, 1667.10571, 1008.83008,   0.00000, 0.00000, 229.00000);
	CreateDynamicObject(19446, 2228.20239, 1661.82019, 1008.83008,   0.00000, 0.00000, 236.00000);
	CreateDynamicObject(19446, 2230.47021, 1695.58655, 1012.29999,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(19446, 2239.74316, 1696.89783, 1012.29999,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(19446, 2222.79443, 1691.16113, 1012.29999,   0.00000, 0.00000, 142.00000);
	CreateDynamicObject(19446, 2218.55713, 1682.85791, 1012.29999,   0.00000, 0.00000, 164.00000);
	CreateDynamicObject(19446, 2218.24927, 1673.70569, 1012.29999,   0.00000, 0.00000, 193.00000);
	CreateDynamicObject(19446, 2221.43628, 1667.08728, 1012.29999,   0.00000, 0.00000, 229.00000);
	CreateDynamicObject(19446, 2228.20239, 1661.82019, 1012.29999,   0.00000, 0.00000, 236.00000);
	CreateDynamicObject(19384, 2236.02905, 1657.58704, 1008.87640,   0.00000, 0.00000, 270.81244);
	CreateDynamicObject(19446, 2243.28491, 1658.80066, 1008.83008,   0.00000, 0.00000, 105.74671);
	CreateDynamicObject(19446, 2239.60229, 1658.14197, 1012.29999,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(19446, 2228.22046, 1661.84204, 1008.83008,   0.00000, 0.00000, 236.00000);
	CreateDynamicObject(19446, 2230.90454, 1659.99487, 1008.83008,   0.00000, 0.00000, 240.48294);
	CreateDynamicObject(19446, 2231.41016, 1659.94531, 1012.29999,   0.00000, 0.00000, 240.48289);
	CreateDynamicObject(19446, 2230.38135, 1657.18555, 1008.83008,   0.00000, 0.00000, 90.89588);
	CreateDynamicObject(19446, 2230.96387, 1656.96606, 1012.07013,   0.00000, 0.00000, 95.11380);
	CreateDynamicObject(1557, 2217.60522, 1676.63599, 1007.42279,   360.23999, 0.00000, 90.17589);
	CreateDynamicObject(1557, 2217.72974, 1679.66455, 1007.42279,   0.00000, 0.00000, 264.51141);
	CreateDynamicObject(19462, 2240.83398, 1657.98157, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2237.34521, 1657.75256, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2233.90039, 1657.15454, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19462, 2230.49731, 1656.65503, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19458, 2238.41602, 1652.31604, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2234.92505, 1652.31860, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19462, 2241.74951, 1652.12073, 1007.31561,   0.00000, -90.00000, 8.25638);
	CreateDynamicObject(19446, 2242.35107, 1657.23596, 1008.83008,   0.00000, 0.00000, 90.13902);
	CreateDynamicObject(19458, 2241.90552, 1652.32019, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2231.47144, 1652.38086, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2231.18262, 1642.73779, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2234.68652, 1642.67798, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2238.18359, 1642.68457, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2241.68262, 1642.69763, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19446, 2240.43359, 1657.50793, 1012.07013,   0.00000, 0.00000, 91.90089);
	CreateDynamicObject(19384, 2235.90112, 1657.22998, 1008.87640,   0.00000, 0.00000, 269.58499);
	CreateDynamicObject(19384, 2235.98267, 1657.38135, 1008.87640,   0.00000, 0.00000, 269.58499);
	CreateDynamicObject(19458, 2226.80347, 1633.11890, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2230.24902, 1633.12268, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2233.74219, 1632.99866, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2237.22144, 1632.97595, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2240.72437, 1632.98743, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2244.18311, 1632.98010, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2247.70337, 1633.00012, 1007.35260,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19460, 2235.98047, 1640.75903, 1006.71637,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19458, 2239.07227, 1635.97412, 1008.43262,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2235.57202, 1635.96155, 1008.43262,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19458, 2233.01953, 1636.00513, 1008.43262,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19460, 2231.28516, 1636.00037, 1006.71637,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19460, 2240.79395, 1636.01453, 1006.71637,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1714, 2236.26245, 1638.60352, 1008.51727,   0.00000, 0.00000, 185.00000);
	CreateDynamicObject(1714, 2237.54541, 1638.58618, 1008.51727,   0.00000, 0.00000, 185.00000);
	CreateDynamicObject(1714, 2234.84033, 1638.62903, 1008.51727,   0.00000, 0.00000, 179.19537);
	CreateDynamicObject(2808, 2240.20166, 1644.77991, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2238.04126, 1644.76440, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2231.61450, 1644.77722, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2233.79712, 1644.75403, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2240.19897, 1647.08044, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2238.03857, 1647.06482, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2233.75806, 1647.01379, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2231.69629, 1647.02087, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2240.23389, 1649.46301, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2238.05420, 1649.44641, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2233.83276, 1649.41797, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2231.73169, 1649.42432, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2240.22754, 1651.40918, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2238.14014, 1651.41199, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2233.71387, 1651.53528, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2231.60498, 1651.55530, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2231.53516, 1653.77698, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2233.72070, 1653.80225, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2238.21802, 1653.78503, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2240.32764, 1653.76465, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2240.04541, 1656.61963, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2808, 2232.53516, 1656.76855, 1008.15930,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2048, 2237.36792, 1631.58215, 1010.36853,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2048, 2236.28271, 1632.83594, 1011.39838,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1808, 2239.65698, 1634.85046, 1008.51422,   0.00000, 0.00000, 220.26791);
	CreateDynamicObject(2010, 2240.10815, 1640.27637, 1008.51801,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, 2231.62695, 1640.32715, 1008.51801,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2208, 2234.86792, 1639.70239, 1008.52032,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19453, 2232.21021, 1632.69946, 1010.31622,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19460, 2232.17969, 1632.75085, 1007.07642,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 2241.81689, 1632.75171, 1010.31622,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19460, 2241.62671, 1632.75549, 1007.07642,   0.00000, 0.00000, 90.20100);
	CreateDynamicObject(19460, 2222.58960, 1632.78479, 1007.07642,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 2222.58643, 1632.72668, 1010.31622,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 2232.24976, 1632.69360, 1013.79999,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 2241.81689, 1632.75171, 1013.79999,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 2222.59204, 1632.73865, 1013.79999,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14407, 2229.03076, 1633.33008, 1005.27972,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19460, 2234.29736, 1635.28882, 1006.71637,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19446, 2242.26440, 1657.52917, 1008.83008,   0.00000, 0.00000, 90.13902);
	CreateDynamicObject(2894, 2236.38379, 1639.73108, 1009.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1963, 2218.93408, 1676.88684, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2218.95288, 1679.42822, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2218.93335, 1678.14795, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2221.49512, 1676.87048, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2221.50024, 1678.13013, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2221.52588, 1679.40918, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2224.07520, 1676.83984, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2224.06006, 1678.09973, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2224.10596, 1679.37927, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2226.63550, 1676.83960, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2226.62646, 1678.08020, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2226.67676, 1679.34143, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2229.19556, 1676.84436, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2229.20532, 1678.06384, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(1963, 2229.25220, 1679.32458, 1007.04059,   0.00000, 0.00000, 359.71176);
	CreateDynamicObject(2208, 2233.44507, 1676.99292, 1007.40112,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2208, 2235.40259, 1674.99182, 1007.40112,   0.00000, 0.00000, 134.22496);
	CreateDynamicObject(2208, 2233.47095, 1679.65564, 1007.40112,   0.00000, 0.00000, 47.00000);
	CreateDynamicObject(2240, 2232.66602, 1675.68591, 1007.83008,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2240, 2232.81836, 1680.68250, 1007.83008,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2240, 2223.39624, 1680.63733, 1007.83008,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2240, 2224.08276, 1675.25073, 1007.83008,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2240, 2224.07642, 1675.26965, 1007.83008,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1715, 2235.93286, 1676.22070, 1007.40253,   0.00000, 0.00000, 306.98352);
	CreateDynamicObject(1715, 2235.67969, 1679.84094, 1007.40253,   0.00000, 0.00000, 229.00000);
	CreateDynamicObject(1715, 2235.06421, 1678.20020, 1007.40253,   0.00000, 0.00000, 270.47107);
	CreateDynamicObject(2190, 2233.24512, 1678.59180, 1008.26410,   0.00000, 0.00000, 69.00000);
	CreateDynamicObject(2190, 2234.70410, 1681.18372, 1008.26410,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(2190, 2234.46655, 1675.64380, 1008.26410,   0.00000, 0.00000, 105.00000);
	CreateDynamicObject(2240, 2229.58276, 1685.74268, 1007.83008,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2240, 2235.75781, 1687.44226, 1007.83008,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1723, 2225.40234, 1681.77502, 1007.39948,   0.00000, 0.00000, 55.00000);
	CreateDynamicObject(1723, 2227.23242, 1684.24866, 1007.39948,   0.00000, 0.00000, 47.00000);
	CreateDynamicObject(1723, 2230.25537, 1686.85010, 1007.39948,   0.00000, 0.00000, 18.00000);
	CreateDynamicObject(1723, 2233.22314, 1687.72742, 1007.39948,   0.00000, 0.00000, 11.00000);
	CreateDynamicObject(1723, 2226.40308, 1670.94885, 1007.39948,   0.00000, 0.00000, 127.00000);
	CreateDynamicObject(1723, 2228.30200, 1668.56128, 1007.39948,   0.00000, 0.00000, 127.00000);
	CreateDynamicObject(1723, 2234.79224, 1665.79797, 1007.39948,   0.00000, 0.00000, 164.00000);
	CreateDynamicObject(1723, 2231.83032, 1666.75940, 1007.39948,   0.00000, 0.00000, 156.00000);
	CreateDynamicObject(2240, 2229.53809, 1668.79419, 1007.83008,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2240, 2229.53809, 1668.79419, 1007.83008,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14623, 2235.89575, 1677.02515, 1012.90625,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14624, 2253.42188, 1597.92188, 1011.19531,   0.00000, 0.00000, 0.00000);
}
stock Objects_NEW_IDLEWOOD()
{
    CreateDynamicObject(3580, 2060.28516, -1730.49243, 16.87960,   0.00000, 0.00000, 267.25449);
	CreateDynamicObject(1407, 2071.66504, -1734.20215, 13.25440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1407, 2071.50293, -1727.55957, 13.25440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3556, 2063.32861, -1716.84192, 15.04990,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(673, 2070.33301, -1720.81750, 12.54390,   0.00000, 0.00000, -1.30900);
	CreateDynamicObject(17699, 2061.92944, -1702.87854, 16.92051,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1506, 2066.80029, -1703.06140, 131999.00000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2924, 2066.86084, -1701.68762, 14.48710,   0.00000, 0.00000, 89.08147);
	CreateDynamicObject(3556, 2145.65796, -1728.91650, 14.72210,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3655, 2125.55591, -1733.58997, 15.03368,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3655, 2165.09570, -1733.58997, 15.03370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3275, 2131.04248, -1742.23621, 13.16637,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3275, 2114.09790, -1742.21057, 13.16640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3275, 2108.36108, -1735.14490, 13.16640,   0.00000, 0.00000, 78.31923);
	CreateDynamicObject(3275, 2158.07153, -1742.23621, 13.16640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3275, 2167.72583, -1742.23621, 13.16640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3275, 2175.03003, -1733.77368, 13.16640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1334, 2132.24536, -1734.20764, 13.58900,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3593, 2154.16504, -1726.07349, 13.03752,   0.00000, 0.00000, 30.67370);
	CreateDynamicObject(849, 2152.95288, -1729.46912, 12.94474,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(852, 2152.43530, -1727.83789, 12.58607,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(851, 2153.71875, -1728.06470, 12.84523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2670, 2135.64648, -1734.41858, 12.66881,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 2137.92920, -1738.67188, 12.64589,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2677, 2142.65112, -1738.46033, 12.84178,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 2150.30469, -1738.00000, 12.53560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2676, 2133.46069, -1738.06567, 12.74065,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2676, 2135.48730, -1731.09900, 12.84576,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(12938, 2155.67822, -1666.86426, 17.27076,   0.00000, 0.00000, 73.07993);
	CreateDynamicObject(12940, 2145.44336, -1699.58899, 17.27080,   0.00000, 0.00000, 71.65450);
	CreateDynamicObject(13450, 2151.46680, -1683.80127, 15.76850,   0.00000, 0.00000, 72.36643);
	CreateDynamicObject(3594, 8470.10840, 3347.07837, -6423.34229,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3594, 9480.85156, 3232.82300, -5606.08008,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9305, 2165.27100, -1667.62390, 14.01003,   0.00000, 0.00000, 204.40996);
	CreateDynamicObject(9305, 2161.89941, -1669.79919, 14.07949,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9305, 2163.99292, -1670.29626, 14.07696,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(672, 2164.98877, -1713.30042, 14.92171,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(669, 2127.15698, -1711.74927, 13.94308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(672, 2131.54736, -1663.46948, 14.07195,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(669, 2150.64600, -1645.26184, 13.86445,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(672, 2175.58936, -1657.96826, 14.06903,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3584, 2071.92407, -1571.21924, 16.19301,   0.00000, 0.00000, 359.06314);

}
stock Objects_UnemploymentCenter() {
 	CreateDynamicObject(2774,1254.00000000,-1801.09960938,1475.40002441+40,0.00000000,0.00000000,0.00000000); //object(cj_airp_pillars) (1)
	CreateDynamicObject(8661,1251.00000000,-1796.29980469,1466.69995117+40,0.00000000,179.99450684,90.00000000); //object(gnhtelgrnd_lvs) (6)
	CreateDynamicObject(1671,1253.40002441,-1786.30004883,1463.90002441+40,0.00000000,0.00000000,302.00000000); //object(swivelchair_a) (1)
	CreateDynamicObject(2165,1252.50000000,-1786.90002441,1463.50000000+40,0.00000000,0.00000000,90.00000000); //object(med_office_desk_1) (1)
	CreateDynamicObject(2166,1253.50000000,-1788.90002441,1463.50000000+40,0.00000000,0.00000000,90.00000000); //object(med_office_desk_2) (1)
	CreateDynamicObject(2165,1255.90002441,-1786.90002441,1463.50000000+40,0.00000000,0.00000000,90.00000000); //object(med_office_desk_1) (2)
	CreateDynamicObject(2166,1256.90002441,-1788.90002441,1463.50000000+40,0.00000000,0.00000000,90.00000000); //object(med_office_desk_2) (2)
	CreateDynamicObject(1671,1256.80004883,-1786.19995117,1463.90002441+40,0.00000000,0.00000000,273.99353027); //object(swivelchair_a) (2)
	CreateDynamicObject(2165,1258.00000000,-1782.90002441,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(med_office_desk_1) (3)
	CreateDynamicObject(1671,1258.80004883,-1783.90002441,1463.90002441+40,0.00000000,0.00000000,181.98852539); //object(swivelchair_a) (3)
	CreateDynamicObject(2165,1252.19995117,-1780.69995117,1463.50000000+40,0.00000000,0.00000000,90.00000000); //object(med_office_desk_1) (4)
	CreateDynamicObject(2165,1252.19921875,-1777.79980469,1463.50000000+40,0.00000000,0.00000000,90.00000000); //object(med_office_desk_1) (5)
	CreateDynamicObject(2165,1255.90002441,-1780.69995117,1463.50000000+40,0.00000000,0.00000000,90.00000000); //object(med_office_desk_1) (6)
	CreateDynamicObject(2165,1255.89941406,-1777.89941406,1463.50000000+40,0.00000000,0.00000000,90.00000000); //object(med_office_desk_1) (7)
	CreateDynamicObject(1671,1256.69995117,-1780.09997559,1464.00000000+40,0.00000000,0.00000000,273.99353027); //object(swivelchair_a) (4)
	CreateDynamicObject(1671,1256.90002441,-1777.40002441,1464.00000000+40,0.00000000,0.00000000,261.99353027); //object(swivelchair_a) (5)
	CreateDynamicObject(1671,1253.30004883,-1777.40002441,1464.00000000+40,0.00000000,0.00000000,261.99096680); //object(swivelchair_a) (6)
	CreateDynamicObject(1671,1253.30004883,-1780.00000000,1464.00000000+40,0.00000000,0.00000000,289.99096680); //object(swivelchair_a) (7)
	CreateDynamicObject(2186,1259.09960938,-1780.19921875,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(photocopier_1) (1)
	CreateDynamicObject(2171,1259.00000000,-1777.79980469,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(med_office4_desk_1) (1)
	CreateDynamicObject(2816,1259.09997559,-1778.19995117,1464.30004883+40,0.00000000,0.00000000,91.99951172); //object(gb_bedmags01) (1)
	CreateDynamicObject(1811,1255.40002441,-1792.90002441,1464.09997559+40,0.00000000,0.00000000,270.00000000); //object(med_din_chair_5) (1)
	CreateDynamicObject(2165,1256.40002441,-1804.40002441,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(med_office_desk_1) (11)
	CreateDynamicObject(2166,1255.40002441,-1802.40002441,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(med_office_desk_2) (9)
	CreateDynamicObject(2435,1249.30004883,-1787.50000000,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (1)
	CreateDynamicObject(1886,1241.40002441,-1782.69995117,1466.80004883+40,19.99511719,0.00000000,19.99511719); //object(shop_sec_cam) (1)
	CreateDynamicObject(16101,1253.96496582,-1805.69995117,1456.00000000+40,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (1)
	CreateDynamicObject(16101,1253.96496582,-1809.00000000,1456.00000000+40,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (1)
	CreateDynamicObject(16101,1253.96496582,-1813.00000000,1456.00000000+40,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (1)
	CreateDynamicObject(1671,1255.30004883,-1804.80004883,1463.90002441+40,0.00000000,0.00000000,73.99353027); //object(swivelchair_a) (2)
	CreateDynamicObject(2435,1248.40002441,-1787.50000000,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (2)
	CreateDynamicObject(2435,1247.50000000,-1787.50000000,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (3)
	CreateDynamicObject(2435,1246.59997559,-1787.50000000,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (4)
	CreateDynamicObject(1811,1254.59997559,-1792.90002441,1464.09997559+40,0.00000000,0.00000000,270.00000000); //object(med_din_chair_5) (1)
	CreateDynamicObject(1811,1253.80004883,-1792.90002441,1464.09997559+40,0.00000000,0.00000000,270.00000000); //object(med_din_chair_5) (1)
	CreateDynamicObject(1811,1253.00000000,-1792.90002441,1464.09997559+40,0.00000000,0.00000000,270.00000000); //object(med_din_chair_5) (1)
	CreateDynamicObject(1811,1252.19995117,-1792.90002441,1464.09997559+40,0.00000000,0.00000000,270.00000000); //object(med_din_chair_5) (1)
	CreateDynamicObject(1811,1251.40002441,-1792.90002441,1464.09997559+40,0.00000000,0.00000000,270.00000000); //object(med_din_chair_5) (1)
	CreateDynamicObject(2008,1247.50000000,-1787.30004883,1463.73999023+40,0.00000000,0.00000000,180.00000000); //object(officedesk1) (1)
	CreateDynamicObject(2435,1246.59997559,-1787.30004883,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (8)
	CreateDynamicObject(2435,1247.50000000,-1787.30004883,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (9)
	CreateDynamicObject(2435,1248.40002441,-1787.30004883,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (10)
	CreateDynamicObject(2435,1249.30004883,-1787.30004883,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (11)
	CreateDynamicObject(2435,1245.69995117,-1787.30004883,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (12)
	CreateDynamicObject(2435,1244.80004883,-1787.30004883,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (13)
	CreateDynamicObject(2435,1244.80004883,-1787.50000000,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (14)
	CreateDynamicObject(2435,1245.69995117,-1787.50000000,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (15)
	CreateDynamicObject(2894,1247.19824219,-1787.19921875,1464.54602051+40,0.00000000,0.00000000,0.00000000); //object(kmb_rhymesbook) (1)
	CreateDynamicObject(2105,1249.00000000,-1787.39941406,1465.00000000+40,0.00000000,0.00000000,0.00000000); //object(cj_mlight14) (1)
	CreateDynamicObject(2164,1245.09997559,-1782.19995117,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(med_office_unit_5) (1)
	CreateDynamicObject(2163,1243.30004883,-1782.19995117,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(med_office_unit_2) (1)
	CreateDynamicObject(2611,1254.00000000,-1789.63000488,1465.50000000+40,0.00000000,0.00000000,0.00000000); //object(police_nb1) (1)
	CreateDynamicObject(2412,1245.30004883,-1792.50000000,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_detector) (2)
	CreateDynamicObject(2412,1248.59997559,-1792.50000000,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_detector) (3)
	CreateDynamicObject(2828,1245.19921875,-1787.19921875,1464.55004883+40,0.00000000,0.00000000,326.99157715); //object(gb_ornament02) (1)
	CreateDynamicObject(2827,1250.00000000,-1792.00000000,1464.29003906+40,0.00000000,0.00000000,339.99938965); //object(gb_novels05) (1)
	CreateDynamicObject(2111,1249.90002441,-1792.40002441,1463.90002441+40,0.00000000,0.00000000,0.00000000); //object(low_dinning_5) (1)
	CreateDynamicObject(2816,1249.59997559,-1792.40002441,1464.31994629+40,0.00000000,0.00000000,123.99172974); //object(gb_bedmags01) (2)
	CreateDynamicObject(2435,1243.90002441,-1787.50000000,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (14)
	CreateDynamicObject(2435,1243.90002441,-1787.30004883,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (13)
	CreateDynamicObject(2435,1241.50000000,-1787.29980469,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (13)
	CreateDynamicObject(2435,1241.50000000,-1787.50000000,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (13)
	CreateDynamicObject(2010,1241.59997559,-1792.90002441,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (1)
	CreateDynamicObject(2010,1250.80004883,-1794.09997559,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (2)
	CreateDynamicObject(2010,1250.69921875,-1799.50000000,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (3)
	CreateDynamicObject(638,1250.69995117,-1796.69995117,1464.19995117+40,0.00000000,0.00000000,179.99450684); //object(kb_planter_bush) (1)
	CreateDynamicObject(2270,1250.80004883,-1797.59997559,1465.09997559+40,0.00000000,0.00000000,90.00000000); //object(frame_wood_6) (1)
	CreateDynamicObject(2271,1250.80004883,-1796.00000000,1465.09997559+40,0.00000000,0.00000000,90.00000000); //object(frame_wood_1) (1)
	CreateDynamicObject(2737,1254.59997559,-1776.43005371,1465.30004883+40,0.00000000,0.00000000,0.00000000); //object(police_nb_car) (1)
	CreateDynamicObject(2610,1252.59997559,-1794.00000000,1464.30004883+40,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing2) (1)
	CreateDynamicObject(2610,1253.09997559,-1794.00000000,1464.30004883+40,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing2) (2)
	CreateDynamicObject(2610,1253.59997559,-1794.00000000,1464.30004883+40,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing2) (3)
	CreateDynamicObject(2610,1254.09997559,-1794.00000000,1464.30004883+40,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing2) (4)
	CreateDynamicObject(2610,1254.59997559,-1794.00000000,1464.30004883+40,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing2) (5)
	CreateDynamicObject(2010,1241.50000000,-1782.50000000,1463.50000000+40,0.00000000,0.00000000,37.99621582); //object(nu_plant3_ofc) (4)
	CreateDynamicObject(2010,1250.89941406,-1776.69921875,1463.50000000+40,0.00000000,0.00000000,37.99072266); //object(nu_plant3_ofc) (5)
	CreateDynamicObject(2161,1246.90002441,-1782.19995117,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(med_office_unit_4) (2)
	CreateDynamicObject(2010,1248.19995117,-1815.90002441,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (6)
	CreateDynamicObject(2010,1259.19995117,-1815.69995117,1463.50000000+40,0.00000000,0.00000000,132.00000000); //object(nu_plant3_ofc) (7)
	CreateDynamicObject(2186,1259.00000000,-1797.59997559,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(photocopier_1) (1)
	CreateDynamicObject(2283,1259.48999023,-1796.00000000,1465.43994141+40,0.00000000,0.00000000,270.00000000); //object(frame_thick_3) (1)
	CreateDynamicObject(2282,1259.04003906,-1791.59997559,1465.00000000+40,0.00000000,0.00000000,270.00000000); //object(frame_thick_4) (1)
	CreateDynamicObject(2281,1259.03002930,-1800.01000977,1465.19995117+40,0.00000000,0.00000000,270.00000000); //object(frame_thick_5) (1)
	CreateDynamicObject(19358,1241.00000000,-1790.59997559,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (1)
	CreateDynamicObject(19358,1241.00000000,-1787.40002441,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (2)
	CreateDynamicObject(19358,1241.00000000,-1784.30004883,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (3)
	CreateDynamicObject(19358,1241.00000000,-1781.09997559,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (4)
	CreateDynamicObject(19358,1242.59997559,-1782.09997559,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (5)
	CreateDynamicObject(19358,1245.80004883,-1782.09997559,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (6)
	CreateDynamicObject(19358,1248.80004883,-1782.09997559,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (7)
	CreateDynamicObject(19358,1250.40002441,-1780.58496094,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (8)
	CreateDynamicObject(19358,1250.40002441,-1777.59997559,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (9)
	CreateDynamicObject(19358,1252.09997559,-1776.30004883,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (10)
	CreateDynamicObject(19358,1255.30004883,-1776.30004883,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (11)
	CreateDynamicObject(19358,1258.50000000,-1776.29980469,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (12)
	CreateDynamicObject(19358,1259.59997559,-1778.00000000,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (13)
	CreateDynamicObject(19358,1259.59997559,-1781.19995117,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (14)
	CreateDynamicObject(19358,1259.59997559,-1784.40002441,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (15)
	CreateDynamicObject(19358,1259.59997559,-1787.59997559,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (16)
	CreateDynamicObject(19358,1259.59997559,-1790.80004883,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (18)
	CreateDynamicObject(19358,1259.59997559,-1794.00000000,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (19)
	CreateDynamicObject(19358,1259.59997559,-1797.19995117,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (20)
	CreateDynamicObject(19358,1259.59960938,-1800.39941406,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (21)
	CreateDynamicObject(19358,1259.59960938,-1803.59960938,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (22)
	CreateDynamicObject(19358,1259.59960938,-1806.79980469,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (23)
	CreateDynamicObject(19358,1259.59960938,-1810.00000000,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (24)
	CreateDynamicObject(19358,1259.59960938,-1813.19921875,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (25)
	CreateDynamicObject(19358,1259.59997559,-1816.40002441,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (26)
	CreateDynamicObject(19358,1257.89941406,-1816.29980469,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (27)
	CreateDynamicObject(19358,1254.69995117,-1816.30004883,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (28)
	CreateDynamicObject(19358,1251.50000000,-1816.30004883,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (29)
	CreateDynamicObject(19358,1248.30004883,-1816.30004883,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (30)
	CreateDynamicObject(19358,1247.69995117,-1814.59997559,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (31)
	CreateDynamicObject(19358,1247.69995117,-1811.40002441,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (32)
	CreateDynamicObject(19358,1247.69995117,-1808.19995117,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (33)
	CreateDynamicObject(19358,1247.69995117,-1805.00000000,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (34)
	CreateDynamicObject(19358,1247.69995117,-1801.80004883,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (35)
	CreateDynamicObject(19358,1247.69995117,-1798.59997559,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (36)
	CreateDynamicObject(19358,1248.59997559,-1799.80004883,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (37)
	CreateDynamicObject(19358,1250.19995117,-1798.28503418,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (38)
	CreateDynamicObject(19358,1250.19995117,-1795.09997559,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (39)
	CreateDynamicObject(19358,1251.19921875,-1793.50000000,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (41)
	CreateDynamicObject(19388,1257.59997559,-1793.50000000,1465.19995117+40,0.00000000,0.00000000,270.00000000); //object(wall036) (15) (2)
	CreateDynamicObject(19358,1254.40002441,-1793.50000000,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (42)
	CreateDynamicObject(19358,1260.80004883,-1793.50000000,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (43)
	CreateDynamicObject(19358,1248.00000000,-1793.50000000,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (44)
	CreateDynamicObject(19358,1244.80004883,-1793.50000000,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (45)
	CreateDynamicObject(19358,1241.59997559,-1793.50000000,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (46)
	CreateDynamicObject(19358,1241.00000000,-1793.80004883,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (47)
	CreateDynamicObject(1502,1256.84960938,-1793.54980469,1463.43395996+40,0.00000000,0.00000000,0.00000000); //object(gen_doorint04) (1)
	CreateObject(19379,1245.19995117,-1787.00000000,1463.40002441+40,0.00000000,90.00000000,0.00000000); //object(wall027) (1)
	CreateObject(19379,1245.19921875,-1796.59960938,1463.40002441+40,0.00000000,90.00000000,0.00000000); //object(wall027) (2)
	CreateObject(19379,1255.69995117,-1787.00000000,1463.40002441+40,0.00000000,90.00000000,0.00000000); //object(wall027) (3)
	CreateObject(19379,1255.69995117,-1777.40002441,1463.40002441+40,0.00000000,90.00000000,0.00000000); //object(wall027) (4)
	CreateObject(19379,1255.69921875,-1796.59960938,1463.40002441+40,0.00000000,90.00000000,0.00000000); //object(wall027) (5)
	CreateObject(19379,1255.69921875,-1806.19921875,1463.40002441+40,0.00000000,90.00000000,0.00000000); //object(wall027) (6)
	CreateObject(19379,1255.69921875,-1815.79980469,1463.40002441+40,0.00000000,90.00000000,0.00000000); //object(wall027) (7)
	CreateObject(19379,1245.19995117,-1806.19995117,1463.40002441+40,0.00000000,90.00000000,0.00000000); //object(wall027) (8)
	CreateObject(19379,1245.19995117,-1815.80004883,1463.40002441+40,0.00000000,90.00000000,0.00000000); //object(wall027) (9)
	CreateDynamicObject(19358,1251.31604004,-1789.50000000,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (49)
	CreateDynamicObject(19358,1254.50000000,-1789.50000000,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (50)
	CreateDynamicObject(19358,1257.69995117,-1789.50000000,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (51)
	CreateDynamicObject(19388,1249.80004883,-1784.69995117,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall036) (3)
	CreateDynamicObject(19358,1249.80004883,-1781.50000000,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (53)
	CreateDynamicObject(19358,1249.80004883,-1787.90002441,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (54)
	CreateDynamicObject(19358,1260.90002441,-1789.50000000,1465.19995117+40,0.00000000,0.00000000,90.00000000); //object(wall006) (55)
	CreateDynamicObject(2435,1241.90002441,-1787.50000000,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (13)
	CreateDynamicObject(2435,1241.90002441,-1787.30004883,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(cj_ff_conter_2) (13)
	CreateDynamicObject(2166,1256.00000000,-1783.90002441,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(med_office_desk_2) (2)
	CreateDynamicObject(2010,1259.00000000,-1788.80004883,1463.50000000+40,0.00000000,0.00000000,37.99072266); //object(nu_plant3_ofc) (5)
	CreateDynamicObject(2010,1250.30004883,-1789.00000000,1463.50000000+40,0.00000000,0.00000000,37.99072266); //object(nu_plant3_ofc) (5)
	CreateDynamicObject(2010,1259.19995117,-1790.00000000,1463.50000000+40,0.00000000,0.00000000,37.99621582); //object(nu_plant3_ofc) (4)
	CreateDynamicObject(2774,1253.40002441,-1783.19995117,1475.40002441+40,0.00000000,0.00000000,0.00000000); //object(cj_airp_pillars) (1)
	CreateDynamicObject(1569,1245.09997559,-1793.46997070,1463.50000000+40,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (1)
	CreateDynamicObject(1569,1248.09997559,-1793.45996094,1463.50000000+40,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (2)
	CreateDynamicObject(19358,1254.69995117,-1803.40002441,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (21)
	CreateDynamicObject(19358,1254.69995117,-1806.59997559,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (21)
	CreateDynamicObject(19358,1254.69995117,-1809.80004883,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (21)
	CreateDynamicObject(19358,1254.69995117,-1813.00000000,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (21)
	CreateDynamicObject(19358,1254.69995117,-1816.19995117,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (21)
	CreateDynamicObject(19358,1253.30004883,-1803.50000000,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (21)
	CreateDynamicObject(19358,1253.30004883,-1806.69995117,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (21)
	CreateDynamicObject(19358,1253.30004883,-1809.90002441,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (21)
	CreateDynamicObject(19358,1253.30004883,-1813.09997559,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (21)
	CreateDynamicObject(19358,1253.30004883,-1816.30004883,1465.19995117+40,0.00000000,0.00000000,0.00000000); //object(wall006) (21)
	CreateDynamicObject(1502,1249.82495117,-1785.44995117,1463.43005371+40,0.00000000,0.00000000,90.00000000); //object(gen_doorint04) (1)
	CreateDynamicObject(2276,1256.40002441,-1788.92297363,1465.09997559+40,0.00000000,0.00000000,180.00000000); //object(frame_fab_3) (1)
	CreateDynamicObject(2272,1252.69995117,-1788.92504883,1464.90002441+40,0.00000000,0.00000000,180.00000000); //object(frame_fab_5) (1)
	CreateDynamicObject(2616,1259.47705078,-1786.19995117,1465.40002441+40,0.00000000,0.00000000,270.00000000); //object(police_nb04) (1)
	CreateDynamicObject(2166,1255.40002441,-1807.19995117,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(med_office_desk_2) (9)
	CreateDynamicObject(2165,1256.40002441,-1809.19995117,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(med_office_desk_1) (11)
	CreateDynamicObject(1671,1255.30004883,-1809.80004883,1463.90002441+40,0.00000000,0.00000000,87.99291992); //object(swivelchair_a) (2)
	CreateDynamicObject(2166,1255.40002441,-1812.00000000,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(med_office_desk_2) (9)
	CreateDynamicObject(2165,1256.40002441,-1814.00000000,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(med_office_desk_1) (11)
	CreateDynamicObject(1671,1255.19995117,-1814.69995117,1463.90002441+40,0.00000000,0.00000000,101.98950195); //object(swivelchair_a) (2)
	CreateDynamicObject(2187,1256.09997559,-1812.09997559,1464.30004883+40,0.00000000,0.00000000,270.00000000); //object(partition2) (7)
	CreateDynamicObject(2187,1256.09997559,-1807.30004883,1464.30004883+40,0.00000000,0.00000000,270.00000000); //object(partition2) (8)
	CreateDynamicObject(2187,1256.09997559,-1802.50000000,1464.30004883+40,0.00000000,0.00000000,270.00000000); //object(partition2) (9)
	CreateDynamicObject(1811,1257.50000000,-1803.50000000,1464.09997559+40,0.00000000,0.00000000,19.98962402); //object(med_din_chair_5) (1)
	CreateDynamicObject(1811,1257.40002441,-1808.09997559,1464.09997559+40,0.00000000,0.00000000,37.98962402); //object(med_din_chair_5) (1)
	CreateDynamicObject(1811,1257.50000000,-1812.59997559,1464.09997559+40,0.00000000,0.00000000,37.98522949); //object(med_din_chair_5) (1)
	CreateDynamicObject(2166,1248.40002441,-1802.30004883,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(med_office_desk_2) (9)
	CreateDynamicObject(2165,1249.40002441,-1804.30004883,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(med_office_desk_1) (11)
	CreateDynamicObject(2166,1248.50000000,-1807.19995117,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(med_office_desk_2) (9)
	CreateDynamicObject(2165,1249.50000000,-1809.19995117,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(med_office_desk_1) (11)
	CreateDynamicObject(2166,1248.50000000,-1812.00000000,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(med_office_desk_2) (9)
	CreateDynamicObject(2165,1249.50000000,-1814.00000000,1463.50000000+40,0.00000000,0.00000000,270.00000000); //object(med_office_desk_1) (11)
	CreateDynamicObject(1671,1248.30004883,-1804.59997559,1463.90002441+40,0.00000000,0.00000000,85.99291992); //object(swivelchair_a) (2)
	CreateDynamicObject(1671,1248.40002441,-1809.59997559,1463.90002441+40,0.00000000,0.00000000,105.98999023); //object(swivelchair_a) (2)
	CreateDynamicObject(1671,1248.50000000,-1814.30004883,1463.90002441+40,0.00000000,0.00000000,133.98510742); //object(swivelchair_a) (2)
	CreateDynamicObject(1811,1250.50000000,-1803.30004883,1464.09997559+40,0.00000000,0.00000000,41.98962402); //object(med_din_chair_5) (1)
	CreateDynamicObject(1811,1250.69995117,-1808.50000000,1464.09997559+40,0.00000000,0.00000000,11.98425293); //object(med_din_chair_5) (1)
	CreateDynamicObject(1811,1250.80004883,-1813.00000000,1464.09997559+40,0.00000000,0.00000000,359.98059082); //object(med_din_chair_5) (1)
	CreateDynamicObject(2168,1249.09997559,-1802.40002441,1464.30004883+40,0.00000000,0.00000000,270.00000000); //object(partition) (7)
	CreateDynamicObject(2168,1249.19995117,-1807.30004883,1464.30004883+40,0.00000000,0.00000000,270.00000000); //object(partition) (8)
	CreateDynamicObject(2168,1249.19995117,-1812.09997559,1464.30004883+40,0.00000000,0.00000000,270.00000000); //object(partition) (9)
	CreateDynamicObject(18608,1246.19995117,-1791.30004883,1467.90002441+40,0.00000000,0.00000000,0.00000000); //object(counts_lights01) (1)
	CreateDynamicObject(18608,1257.09997559,-1791.19995117,1467.90002441+40,0.00000000,0.00000000,0.00000000); //object(counts_lights01) (2)
	CreateDynamicObject(18608,1256.40002441,-1771.50000000,1467.90002441+40,0.00000000,0.00000000,0.00000000); //object(counts_lights01) (3)
	CreateDynamicObject(18608,1257.00000000,-1813.59997559,1467.90002441+40,0.00000000,0.00000000,0.00000000); //object(counts_lights01) (4)
	CreateDynamicObject(18608,1250.50000000,-1814.09997559,1467.90002441+40,0.00000000,0.00000000,0.00000000); //object(counts_lights01) (5)

	/* --- Unemployment Pickups --- */

	EmploymentPickup = CreateDynamicPickup(1239, 23, 1310.0868,-1367.3768,13.5310);

	/* --- Employment Center Checkpoints --- */

	EmploymentCP = CreateDynamicCP(1246.3854, -1788.8436, 1503.4860, 1.5, -1, -1, -1, 5.0);
	
	/* ---- Weapon Factory Checkpoints --- */
	
	TraphouseCP = CreateDynamicCP(2189.7007,-1255.6732,1529.1060, 1.5, -1, -1, -1, 5.0);
	ConvertCP = CreateDynamicCP(2201.7168,-1244.0497,1529.1060, 1.5, -1, -1, -1, 5.0);
	WarehouseCP = CreateDynamicCP(2266.0027,-1588.8291,1494.1938, 1.5, -1, -1, -1, 5.0);
	AmmoCP = CreateDynamicCP(-2182.2158,715.5961,53.8923, 1.5, -1, -1, -1, 5.0);
	MilitaryCP = CreateDynamicCP(-1328.6182,494.4556,11.1953, 1.5, -1, -1, -1, 5.0);
	HeavyCP = CreateDynamicCP(-945.1159,1416.8143,11.8831, 1.5, -1, -1, -1, 5.0);
	CocaineCP = CreateDynamicCP(2454.2231,-1771.4247,1026.8079-1, 1.5, -1, -1, -1, 5.0);
	InsuranceCP = CreateDynamicCP(1122.9395,-1408.2628,2001.0859, 1.5, -1, -1, -1, 5.0);
	HardwareCP = CreateDynamicCP(2785.2637,2620.4177,10.8258, 1.5, -1, -1, -1, 5.0);
	BuylockCP = CreateDynamicCP(1125.9438,-1408.4655,2001.0859, 1.5, -1, -1, -1, 5.0);
	SerialCP = CreateDynamicCP(229.0282,110.0620,1003.2188, 1.5, -1, -1, -1, 5.0);
	//Lotterystand[0] = CreateDynamicCP(1808.8169,-1812.0222,13.5487, 1.5, -1, -1, -1, 5.0);
	//Lotterystand[1] = CreateDynamicCP(1778.2074,-1814.1509,13.5536, 1.5, -1, -1, -1, 5.0);
	AmmunationCP[0] = CreateDynamicCP(307.9738,-140.5426,999.6016, 1.5, -1, -1, -1, 15.0); // Ammunation
	AmmunationCP[1] = CreateDynamicCP(294.5882,-37.5372,1001.5156, 1.5, -1, -1, -1, 15.0); // Ammu-nation vers 2
	AmmunationCP[2] = CreateDynamicCP(295.6302,-80.2290,1001.5156, 1.5, -1, -1, -1, 15.0); // Ammu-nation vers 3
	AmmunationCP[3] = CreateDynamicCP(290.4817,-108.6707,1001.5156, 1.5, -1, -1, -1, 15.0); // Ammu-nation vers 4

}

stock Objects_RentalCenter()
{
	// hash
	CreateDynamicObject(19379,-941.5781300,1425.4296900,10.7781000,0.0000000,-90.0000000,0.0000000); //
	CreateDynamicObject(19379,-941.5949700,1415.8321500,10.7781000,0.0000000,-90.0000000,0.0000000); //
	CreateDynamicObject(19376,-947.5656700,1425.4541000,10.8251000,0.0000000,-90.0000000,0.0000000); //
	CreateDynamicObject(19386,-942.3751800,1422.2219200,12.5541000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19448,-942.3745700,1428.5349100,12.5541000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19450,-937.5849600,1430.2304700,12.5541000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19450,-936.3150600,1425.4716800,12.5541000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19450,-936.3126200,1415.9108900,12.5541000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19450,-941.0679900,1411.1727300,12.5541000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19450,-945.7823500,1415.9597200,12.5541000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19356,-942.3879400,1419.0568800,12.5541000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19451,-949.3107900,1417.5307600,12.5541000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19450,-946.0300300,1417.5391800,12.5541000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19388,-939.9498300,1417.5406500,12.5541000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19450,-933.9160200,1417.5333300,12.5541000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19390,-942.4384200,1422.2337600,12.5541000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19453,-942.4376200,1428.5699500,12.5541000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19453,-947.2991300,1429.7938200,12.5541000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19453,-947.1312900,1420.7290000,12.5541000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(19453,-946.7807600,1425.4715600,12.5541000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19377,-941.5781300,1425.4296900,14.2156000,0.0000000,-90.0000000,0.0000000); //
	CreateDynamicObject(19377,-941.5715900,1415.9770500,14.2156000,0.0000000,-90.0000000,0.0000000); //
	CreateDynamicObject(2524,-946.2051400,1425.8750000,10.9062000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2525,-946.2551300,1429.1147500,10.9062000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2522,-946.2069700,1421.2872300,10.9062000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2520,-943.1288500,1428.2149700,10.9062000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2631,-943.3410000,1429.9514200,10.9062000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2631,-946.7245500,1427.8017600,10.9062000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2631,-945.8655400,1422.7319300,10.9062000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2132,-941.7800300,1428.6372100,10.8502000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2135,-941.7849700,1427.6298800,10.8502000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2147,-941.8375900,1426.6502700,10.8502000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2131,-941.8300200,1424.6097400,10.8502000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2131,-936.9201000,1426.7047100,10.8502000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2133,-936.9201700,1429.6560100,10.8502000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2132,-936.9243800,1428.6696800,10.8502000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1516,-936.6129200,1424.6835900,11.0182000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1720,-937.5042100,1424.6890900,10.8222000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1337,-938.9542200,1424.7506100,10.8222000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2817,-938.7344400,1427.1713900,10.8724000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2818,-937.2382800,1419.7620800,10.8724000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1723,-936.9350600,1421.3538800,10.8724000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1724,-936.9396400,1418.7507300,10.8444000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1506,-936.4110700,1424.0529800,10.8502000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(2010,-936.7777700,1422.2168000,10.8724000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(18084,-939.0542000,1428.5194100,-12.6118900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(18084,-939.4113800,1431.0206300,12.4001500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18084,-939.4113800,1431.0206300,13.0187000,0.0000000,-180.0000000,0.0000000); //
	CreateDynamicObject(1786,-942.6848800,1419.5134300,12.3151000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1744,-942.5657300,1419.1129200,11.9931000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1744,-942.5657300,1419.1129200,11.4593800,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1744,-942.2296800,1419.1129200,11.4594000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1744,-942.5656700,1419.1129200,11.1234000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2229,-942.6222500,1421.0645800,12.0809600,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2229,-942.5929600,1418.7473100,12.0809600,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1337,-942.5656700,1419.1129200,11.4594000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2816,-942.0351600,1419.5593300,11.7954000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(18765,-941.1340900,1412.5316200,8.3831000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2299,-944.3258700,1414.7174100,10.8314000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(2632,-944.7938200,1412.6862800,10.8314000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2091,-941.2771000,1411.4060100,10.8594000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(2964,-939.2846700,1413.2303500,10.8034000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(1998,-937.8624300,1417.0015900,10.8594000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(1671,-937.8604700,1415.8945300,11.2794000,0.0000000,0.0000000,127.0000000); //
	CreateDynamicObject(2395,-936.4611200,1413.3343500,11.2504000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(338,-936.3684100,1413.4443400,12.3034000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(338,-936.3684100,1412.8482700,12.3034000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(2332,-945.0937500,1417.5809300,12.3037600,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1502,-940.7329700,1417.5012200,10.8324000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1502,-942.3503400,1421.4627700,10.8324000,0.0000000,0.0000000,90.0000000); //
	// rental
	CreateDynamicObject(2948,1255.69995117,-1812.86596680,1463.50000000,0.00000000,0.00000000,270.00000000); //object(cr_door_02) (3)
	CreateDynamicObject(2948,1253.80004883,-1812.87402344,1463.50000000,0.00000000,0.00000000,90.00000000); //object(cr_door_02) (4)
	CreateDynamicObject(2948,1253.80004883,-1812.85998535,1463.50000000,0.00000000,0.00000000,270.00000000); //object(cr_door_02) (5)
	CreateDynamicObject(2948,1251.90002441,-1812.86999512,1463.50000000,0.00000000,0.00000000,90.00000000); //object(cr_door_02) (6)
	CreateDynamicObject(2942,1250.69995117,-1810.09997559,1464.09997559,0.00000000,0.00000000,90.00000000); //object(kmb_atm1) (1)
	CreateDynamicObject(2942,1250.69995117,-1811.30004883,1464.09997559,0.00000000,0.00000000,90.00000000); //object(kmb_atm1) (2)
	CreateDynamicObject(18608,1254.30004883,-1809.30004883,1468.50000000,0.00000000,0.00000000,0.00000000); //object(counts_lights01) (1)
	CreateDynamicObject(1514,1249.59960938,-1804.39941406,1464.64001465,0.00000000,0.00000000,90.00000000); //object(dyn_ff_till) (1)
	CreateDynamicObject(18070,1247.80004883,-1805.59997559,1463.90002441,0.00000000,0.00000000,90.00000000); //object(gap_counter) (1)
	CreateDynamicObject(1514,1249.59997559,-1806.19995117,1464.64001465,0.00000000,0.00000000,90.00000000); //object(dyn_ff_till) (2)
	CreateDynamicObject(2197,1243.69995117,-1805.30004883,1463.50000000,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (1)
	CreateDynamicObject(2197,1243.69995117,-1806.00000000,1463.50000000,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (2)
	CreateDynamicObject(2197,1243.69995117,-1806.69995117,1463.50000000,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (3)
	CreateDynamicObject(2197,1243.69995117,-1804.59997559,1463.50000000,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (4)
	CreateDynamicObject(2197,1243.69995117,-1807.40002441,1463.50000000,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (11)
	CreateDynamicObject(2197,1243.69995117,-1808.09997559,1463.50000000,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (12)
	CreateDynamicObject(2197,1243.69995117,-1808.80004883,1463.50000000,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (13)
	CreateDynamicObject(2202,1242.90002441,-1803.00000000,1463.50000000,0.00000000,0.00000000,90.00000000); //object(photocopier_2) (1)
	CreateDynamicObject(1210,1242.59997559,-1804.09997559,1463.69995117,19.98962402,0.00000000,0.00000000); //object(briefcase) (1)
	CreateDynamicObject(2010,1242.80004883,-1800.50000000,1463.50000000,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (1)
	CreateDynamicObject(2010,1250.80004883,-1812.50000000,1463.50000000,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (3)
	CreateDynamicObject(2010,1256.69921875,-1800.39941406,1463.50000000,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (4)
	CreateDynamicObject(2010,1251.19995117,-1800.30004883,1463.50000000,0.00000000,0.00000000,35.99670410); //object(nu_plant3_ofc) (5)
	CreateDynamicObject(18014,1253.90002441,-1800.40002441,1463.90002441,0.00000000,0.00000000,270.00000000); //object(int_rest_veg03) (1)
	CreateDynamicObject(2261,1252.39941406,-1800.28002930,1465.00000000,0.00000000,0.00000000,0.00000000); //object(frame_slim_2) (1)
	CreateDynamicObject(2262,1255.50000000,-1800.27001953,1465.09997559,0.00000000,0.00000000,0.00000000); //object(frame_slim_3) (1)
	CreateDynamicObject(2260,1254.00000000,-1800.26000977,1465.00000000,0.00000000,0.00000000,0.00000000); //object(frame_slim_1) (1)
	CreateDynamicObject(2855,1255.09997559,-1805.69995117,1464.00000000,0.00000000,0.00000000,223.99804688); //object(gb_bedmags05) (1)
	CreateDynamicObject(2852,1254.59997559,-1806.19995117,1464.00000000,0.00000000,0.00000000,63.99877930); //object(gb_bedmags02) (1)
	CreateDynamicObject(2008,1247.50000000,-1802.79980469,1463.58996582,0.00000000,0.00000000,0.00000000); //object(officedesk1) (1)
	CreateDynamicObject(1671,1247.80004883,-1803.80004883,1463.90002441,0.00000000,0.00000000,159.99938965); //object(swivelchair_a) (1)
	CreateDynamicObject(1671,1247.69995117,-1806.80004883,1463.90002441,0.00000000,0.00000000,3.99902344); //object(swivelchair_a) (2)
	CreateDynamicObject(2008,1248.59997559,-1808.00000000,1463.57995605,0.00000000,0.00000000,179.99450684); //object(officedesk1) (2)
	CreateDynamicObject(2817,1247.59960938,-1804.79980469,1463.50000000,0.00000000,0.00000000,270.00000000); //object(gb_bedrug01) (1)
	CreateDynamicObject(1828,1254.90002441,-1805.59997559,1463.50000000,0.00000000,0.00000000,90.00000000); //object(man_sdr_rug) (1)
	CreateDynamicObject(2818,1244.69995117,-1806.00000000,1463.50000000,0.00000000,0.00000000,90.00000000); //object(gb_bedrug02) (2)
	CreateDynamicObject(2828,1246.79980469,-1807.79980469,1464.40002441,0.00000000,0.00000000,309.99572754); //object(gb_ornament02) (1)
	CreateDynamicObject(2251,1242.59997559,-1803.80004883,1464.40002441,0.00000000,0.00000000,0.00000000); //object(plant_pot_20) (1)
	CreateDynamicObject(2278,1256.72998047,-1803.80004883,1465.40002441,0.00000000,0.00000000,270.00000000); //object(frame_thick_2) (1)
	CreateDynamicObject(2267,1257.19396973,-1807.69995117,1465.69995117,0.00000000,0.00000000,270.00000000); //object(frame_wood_3) (1)
	CreateDynamicObject(2258,1245.59997559,-1809.19995117,1465.69995117,0.00000000,0.00000000,180.00000000); //object(frame_clip_5) (1)
	CreateDynamicObject(19377,1257.30004883,-1802.00000000,1468.69995117,0.00000000,0.00000000,0.00000000); //object(wall025) (1)
	CreateDynamicObject(19377,1257.30004883,-1811.59997559,1468.69995117,0.00000000,0.00000000,0.00000000); //object(wall025) (2)
	CreateDynamicObject(19377,1253.69921875,-1813.00000000,1468.69995117,0.00000000,0.00000000,90.00000000); //object(wall025) (3)
	CreateDynamicObject(19377,1245.40002441,-1809.30004883,1468.69995117,0.00000000,0.00000000,90.00000000); //object(wall025) (5)
	CreateDynamicObject(19377,1242.00000000,-1804.50000000,1468.69995117,0.00000000,0.00000000,0.00000000); //object(wall025) (6)
	CreateObject(19379,1254.89941406,-1810.89941406,1463.40002441,0.00000000,90.00000000,90.00000000); //object(wall027) (1)
	CreateObject(19379,1254.90002441,-1800.40002441,1463.40002441,0.00000000,90.00000000,90.00000000); //object(wall027) (2)
	CreateObject(19379,1245.30004883,-1800.40002441,1463.40002441,0.00000000,90.00000000,90.00000000); //object(wall027) (3)
	CreateObject(19379,1245.29980469,-1810.89941406,1463.40002441,0.00000000,90.00000000,90.00000000); //object(wall027) (4)
	CreateDynamicObject(19377,1255.09960938,-1799.69921875,1468.69995117,0.00000000,0.00000000,90.00000000); //object(wall025) (7)
	CreateDynamicObject(19377,1250.19995117,-1794.90002441,1468.69995117,0.00000000,0.00000000,0.00000000); //object(wall025) (8)
	CreateDynamicObject(19377,1245.47204590,-1799.69897461,1468.69995117,0.00000000,0.00000000,90.00000000); //object(wall025) (9)
	CreateObject(19379,1257.19995117,-1811.40002441,1458.40002441,0.00000000,0.00000000,0.00000000); //object(wall027) (9)
	CreateObject(19379,1257.19995117,-1801.80004883,1458.40002441,0.00000000,0.00000000,0.00000000); //object(wall027) (10)
	CreateObject(19379,1250.30004883,-1806.76000977,1458.40002441,0.00000000,0.00000000,0.00000000); //object(wall027) (11)
	CreateObject(19379,1255.19995117,-1812.90002441,1458.40002441,0.00000000,0.00000000,90.00000000); //object(wall027) (12)
	CreateObject(19379,1255.19995117,-1799.80004883,1458.40002441,0.00000000,0.00000000,90.00000000); //object(wall027) (13)
	CreateObject(19379,1245.50000000,-1809.19995117,1458.40002441,0.00000000,0.00000000,90.00000000); //object(wall027) (14)
	CreateDynamicObject(19377,1235.90002441,-1799.69995117,1468.69995117,0.00000000,0.00000000,90.00000000); //object(wall025) (10)
	CreateObject(19379,1245.59997559,-1799.80004883,1458.40002441,0.00000000,0.00000000,90.00000000); //object(wall027) (15)
	CreateObject(19379,1242.09997559,-1804.59997559,1458.40002441,0.00000000,0.00000000,0.00000000); //object(wall027) (17)
	CreateObject(19379,1250.29980469,-1814.00000000,1472.50000000,0.00000000,0.00000000,0.00000000); //object(wall027) (18)
	CreateObject(19379,1255.00000000,-1812.90002441,1472.50000000,0.00000000,0.00000000,90.00000000); //object(wall027) (19)
	CreateObject(19379,1257.19921875,-1809.69921875,1472.50000000,0.00000000,0.00000000,0.00000000); //object(wall027) (20)
	CreateObject(19379,1257.19995117,-1800.09997559,1472.50000000,0.00000000,0.00000000,0.00000000); //object(wall027) (21)
	CreateObject(19379,1255.19995117,-1799.80004883,1472.50000000,0.00000000,0.00000000,90.00000000); //object(wall027) (22)
	CreateObject(19379,1250.30004883,-1795.00000000,1472.50000000,0.00000000,0.00000000,0.00000000); //object(wall027) (23)
	CreateObject(19379,1245.59997559,-1799.80004883,1472.50000000,0.00000000,0.00000000,90.00000000); //object(wall027) (24)
	CreateObject(19379,1242.09997559,-1804.59997559,1472.50000000,0.00000000,0.00000000,0.00000000); //object(wall027) (25)
	CreateObject(19379,1245.50000000,-1809.19995117,1472.50000000,0.00000000,0.00000000,90.00000000); //object(wall027) (26)
	CreateDynamicObject(2257,1245.80004883,-1799.80004883,1465.69995117,0.00000000,0.00000000,0.00000000); //object(frame_clip_4) (2)
	CreateObject(19379,1254.90002441,-1800.40002441,1467.50000000,0.00000000,90.00000000,90.00000000); //object(wall027) (28)
	CreateObject(19379,1254.89941406,-1810.89941406,1467.50000000,0.00000000,90.00000000,90.00000000); //object(wall027) (29)
	CreateObject(19379,1245.30004883,-1800.40002441,1467.50000000,0.00000000,90.00000000,90.00000000); //object(wall027) (30)
	CreateObject(19379,1245.30004883,-1810.90002441,1467.50000000,0.00000000,90.00000000,90.00000000); //object(wall027) (31)
	CreateDynamicObject(2010,1256.80004883,-1812.50000000,1463.50000000,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (3)
	CreateDynamicObject(2197,1243.70996094,-1808.80004883,1465.09997559,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (13)
	CreateDynamicObject(2197,1243.70996094,-1808.09997559,1465.09997559,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (13)
	CreateDynamicObject(2197,1243.70996094,-1807.40002441,1465.09997559,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (13)
	CreateDynamicObject(2197,1243.70996094,-1806.69995117,1465.09997559,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (13)
	CreateDynamicObject(2197,1243.71105957,-1806.00000000,1465.09997559,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (13)
	CreateDynamicObject(2197,1243.70996094,-1805.30004883,1465.09997559,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (13)
	CreateDynamicObject(2197,1243.70996094,-1804.59997559,1465.09997559,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (13)
	CreateDynamicObject(18608,1245.59997559,-1812.19995117,1468.50000000,0.00000000,0.00000000,0.00000000); //object(counts_lights01) (1)
	CreateDynamicObject(1703,1256.59997559,-1805.00000000,1463.50000000,0.00000000,0.00000000,270.00000000); //object(kb_couch02) (1)
	CreateDynamicObject(1703,1255.80004883,-1808.00000000,1463.50000000,0.00000000,0.00000000,180.00000000); //object(kb_couch02) (2)
	CreateDynamicObject(1703,1253.79980469,-1804.00000000,1463.50000000,0.00000000,0.00000000,0.00000000); //object(kb_couch02) (3)
	CreateDynamicObject(1818,1254.30004883,-1806.50000000,1463.50000000,0.00000000,0.00000000,0.00000000); //object(coffee_swank_2) (1)
	CreateDynamicObject(19377,1250.19995117,-1807.59997559,1459.19995117,0.00000000,0.00000000,0.00000000); //object(wall025) (4)
	CreateDynamicObject(19391,1250.19921875,-1801.19921875,1465.19995117,0.00000000,0.00000000,0.00000000); //object(wall039) (1)
	CreateDynamicObject(19377,1250.19995117,-1795.90002441,1472.19995117,0.00000000,0.00000000,0.00000000); //object(wall025) (4)
	CreateDynamicObject(19377,1250.19995117,-1814.00000000,1469.69995117,0.00000000,0.00000000,0.00000000); //object(wall025) (4)
	CreateObject(19379,1250.30004883,-1816.30004883,1458.40002441,0.00000000,0.00000000,0.00000000); //object(wall027) (11)
	CreateDynamicObject(19377,1250.19995117,-1817.19995117,1459.19995117,0.00000000,0.00000000,0.00000000); //object(wall025) (4)
	CreateObject(19379,1250.30004883,-1795.59997559,1458.40002441,0.00000000,0.00000000,0.00000000); //object(wall027) (11)
	CreateObject(19379,1250.09997559,-1795.59997559,1458.40002441,0.00000000,0.00000000,0.00000000); //object(wall027) (11)
	CreateDynamicObject(19377,1250.19995117,-1805.50000000,1472.19995117,0.00000000,0.00000000,0.00000000); //object(wall025) (4)
	CreateDynamicObject(3858,1250.19995117,-1810.00000000,1467.80004883,0.00000000,0.00000000,314.75000000); //object(ottosmash1) (1)
	CreateDynamicObject(1502,1250.19995117,-1800.41394043,1463.47998047,0.00000000,0.00000000,270.00000000); //object(gen_doorint04) (1)
	CreateDynamicObject(3858,1250.19995117,-1810.00000000,1467.80004883,0.00000000,0.00000000,314.74731445); //object(ottosmash1) (2)
	CreateObject(19379,1250.30004883,-1804.40002441,1472.50000000,0.00000000,0.00000000,0.00000000); //object(wall027) (18)
	CreateObject(19379,1250.09997559,-1804.40002441,1472.50000000,0.00000000,0.00000000,0.00000000); //object(sfw_boxwest12) (18)
	CreateDynamicObject(1776,1256.69995117,-1809.30004883,1464.59997559,0.00000000,0.00000000,270.00000000); //object(cj_candyvendor) (1)
	CreateDynamicObject(1209,1256.80004883,-1810.90002441,1463.50000000,0.00000000,0.00000000,270.00000000); //object(vendmach) (1)
	CreateDynamicObject(7313, 1250.4000, -1806, 1466.40, 0.0, 0.0, 90.0); //object (vgsN_scrollsgn01)

	/* --- Rental Pickups --- */

	RentalPickup = CreateDynamicPickup(1239, 23, 1616.0786, -1896.3529, 13.5489);

	/* --- Rental Checkpoints --- */

	RentalCP = CreateDynamicCP(1251.3829, -1806.0356, 1463.4860, 1.5, -1, -1, -1, 5.0);
}

stock Objects_LAPD() {
	/* --- Academy Interior --- */
	
	/*CreateDynamicObject(19362, 1646.40, -981.41, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1642.90, -981.41, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1639.40, -981.41, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1635.90, -981.41, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1632.40, -984.62, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1628.90, -981.41, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1625.40, -981.41, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1621.90, -981.41, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1618.40, -981.41, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1614.90, -981.41, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1646.40, -984.62, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1642.90, -984.62, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1639.40, -984.62, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1635.90, 1663.90, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1632.40, -981.41, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1628.90, -984.62, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1625.40, -984.62, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1621.90, -984.62, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1618.40, -984.62, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1614.90, -984.62, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1646.40, -987.83, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1642.90, -987.83, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1639.40, -991.04, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1635.90, -984.62, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1632.40, -987.83, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1628.90, -987.83, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1625.40, -987.83, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1621.90, -987.83, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1618.40, -987.83, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1614.90, -987.83, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1642.90, -991.04, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1646.40, -994.25, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1639.40, -987.83, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1635.90, 1663.90, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1632.40, -991.04, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1628.90, -991.04, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1625.40, -991.04, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1621.90, -991.04, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1618.40, -991.04, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1614.90, -991.04, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1635.90, -987.83, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1635.90, -991.04, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1646.40, -991.04, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1642.90, -994.25, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1639.40, -994.25, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1635.90, -994.25, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1632.40, -994.25, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1628.90, -994.25, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1625.40, -994.25, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1621.90, -994.25, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1618.40, -994.25, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1614.90, -994.25, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1660.40, -1000.67, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1656.90, -1000.67, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1646.40, -997.46, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1642.90, -997.46, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1639.40, -997.46, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1635.90, -997.46, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1632.40, -997.46, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1628.90, -997.46, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1614.90, -997.46, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1653.40, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1649.90, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1646.40, -1000.67, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1642.90, -1000.70, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1639.40, -1000.68, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1635.90, -1000.67, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1632.40, -1000.67, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1628.90, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1614.90, -1000.67, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1660.40, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1656.90, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1649.90, -1000.67, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1653.40, -1000.67, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1646.40, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1642.90, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1639.40, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1635.90, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1632.40, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1628.90, -1000.67, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1625.40, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1621.90, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1618.40, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1614.90, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1660.40, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1656.90, -1013.50, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1653.40, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1649.90, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1646.40, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1642.90, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1639.40, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1635.90, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1632.40, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1628.90, -1003.88, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1625.40, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1621.90, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1618.40, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1614.90, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1656.90, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1649.90, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1646.40, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1639.40, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1642.90, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1635.90, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1632.40, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1628.90, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1625.40, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1621.90, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1618.40, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1614.90, -1007.09, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1653.40, -1013.50, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19365, 1633.45, -989.81, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1637.69, -980.35, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1624.10, -992.95, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1632.89, -988.29, 1041.66, 0.00, 0.00, 269.99);
	CreateDynamicObject(19365, 1631.81, -1010.59, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(19457, 1616.22, -1001.91, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1628.64, -997.73, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(19457, 1623.26, -988.29, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(19457, 1628.71, -1006.71, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(19366, 1653.40, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1656.90, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19457, 1624.07, -1010.01, 1041.66, 0.00, 0.00, 269.99);
	CreateDynamicObject(19394, 1633.45, -993.02, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(14455, 1636.31, -982.18, 1041.52, 0.00, 0.00, 179.99);
	CreateDynamicObject(14455, 1625.41, -982.93, 1041.52, 0.00, 0.00, 270.00);
	CreateDynamicObject(1432, 1627.84, -985.13, 1040.00, 0.00, 0.00, 0.00);
	CreateDynamicObject(19362, 1621.90, -997.46, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1618.40, -997.46, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1621.90, -1000.67, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1618.40, -1000.67, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1625.40, -1000.67, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1625.40, -997.46, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1660.40, -1010.30, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1660.40, -1013.50, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1649.90, -1013.50, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1646.40, -1013.50, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1642.90, -1013.50, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1639.40, -1013.50, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1635.90, -1013.50, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1628.90, -1013.50, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19362, 1632.40, -1013.50, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(18036, 1658.80, -988.43, 1041.91, 0.00, 0.00, 180.00);
	CreateDynamicObject(19457, 1642.44, -980.00, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(19394, 1647.29, -982.46, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19394, 1647.29, -979.25, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1645.56, -988.83, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19394, 1642.35, -999.16, 1041.64, 0.00, 0.00, 90.00);
	CreateDynamicObject(19438, 1646.45, -984.10, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(14794, 1649.81, -1009.95, 1042.30, 0.00, 0.00, 180.00);
	CreateDynamicObject(19366, 1660.40, -1016.71, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1656.90, -1016.71, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1653.40, -1016.71, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1649.90, -1016.71, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1642.90, -1016.71, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1646.40, -1016.71, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1639.40, -1016.71, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1660.40, -1019.92, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1656.90, -1019.92, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1653.40, -1019.92, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1649.90, -1019.92, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1646.40, -1019.92, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1639.41, -1019.94, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 1642.90, -1019.92, 1039.82, 0.00, 90.00, 0.00);
	CreateDynamicObject(19365, 1645.56, -995.25, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19365, 1643.76, -997.60, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19365, 1645.35, -996.09, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(19394, 1637.69, -986.77, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1625.35, -983.44, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(14455, 1630.57, -982.18, 1041.52, 0.00, 0.00, 179.99);
	CreateDynamicObject(14455, 1630.41, -988.15, 1041.52, 0.00, 0.00, 0.00);
	CreateDynamicObject(14455, 1624.66, -988.15, 1042.30, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1632.89, -982.14, 1041.66, 0.00, 0.00, 269.99);
	CreateDynamicObject(19457, 1623.26, -982.14, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(1432, 1630.84, -985.14, 1040.00, 0.00, 0.00, 55.00);
	CreateDynamicObject(1432, 1634.09, -985.10, 1040.00, 0.00, 0.00, -146.00);
	CreateDynamicObject(2894, 1627.88, -984.86, 1040.62, 0.00, 0.00, 0.00);
	CreateDynamicObject(2894, 1634.27, -984.88, 1040.62, 0.00, 0.00, -25.00);
	CreateDynamicObject(19365, 1633.45, -996.23, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19365, 1639.15, -999.16, 1041.64, 0.00, 0.00, 90.00);
	CreateDynamicObject(19457, 1637.63, -1003.89, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19394, 1633.45, -999.44, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1633.45, -1005.86, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1624.04, -1001.91, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1637.63, -1013.52, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1632.85, -1014.72, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(19379, 1622.74, -1014.89, 1039.84, 0.00, 90.00, 0.00);
	CreateDynamicObject(19365, 1629.65, -1010.61, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(19379, 1612.25, -1014.89, 1039.84, 0.00, 90.00, 0.00);
	CreateDynamicObject(19394, 1628.07, -1012.68, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1628.07, -1019.10, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19365, 1628.07, -1009.47, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19394, 1617.67, -1010.01, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(19365, 1623.69, -1008.32, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1623.69, -1001.91, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1623.69, -992.28, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19365, 1616.22, -1008.32, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1616.22, -992.28, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1619.11, -989.85, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(19457, 1611.25, -1010.01, 1041.66, 0.00, 0.00, 269.99);
	CreateDynamicObject(19457, 1609.02, -1014.63, 1041.66, 0.00, 0.00, 0.00);
	CreateDynamicObject(19457, 1613.69, -1019.10, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(19457, 1623.32, -1019.10, 1041.66, 0.00, 0.00, 90.00);
	CreateDynamicObject(18040, 1653.47, -990.64, 1041.13, 0.00, 0.00, 0.00);
	CreateDynamicObject(18050, 1652.16, -990.17, 1041.19, 0.00, 0.00, 180.00);
	CreateDynamicObject(3025, 1665.73, -985.08, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3025, 1666.98, -987.41, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3025, 1666.08, -990.12, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3025, 1666.12, -992.15, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3025, 1666.12, -994.64, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3018, 1666.10, -990.05, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3019, 1666.08, -990.04, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3020, 1666.07, -990.04, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3021, 1666.10, -990.05, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3023, 1666.10, -990.03, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3024, 1666.10, -990.05, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3022, 1666.10, -990.07, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3024, 1666.10, -992.07, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3023, 1666.10, -992.06, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3022, 1666.10, -992.07, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3021, 1666.10, -992.07, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3020, 1666.10, -992.05, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3018, 1666.10, -992.09, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3019, 1666.08, -992.07, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3023, 1666.10, -994.66, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3024, 1666.10, -994.66, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3022, 1666.10, -994.67, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3020, 1666.10, -994.67, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3021, 1666.10, -994.67, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3018, 1666.10, -994.67, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3019, 1666.08, -994.66, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3024, 1666.93, -987.43, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3022, 1666.93, -987.43, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3023, 1666.93, -987.43, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3020, 1666.93, -987.38, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3021, 1666.93, -987.44, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3018, 1666.93, -987.43, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(3019, 1666.93, -987.38, 1043.98, 0.00, 0.00, -90.00);
	CreateDynamicObject(14787, 1650.91, -1016.25, 1039.32, 0.00, 0.00, 180.00);
	CreateDynamicObject(2627, 1659.15, -1000.50, 1039.84, 0.00, 0.00, 0.00);
	CreateDynamicObject(2627, 1657.12, -1000.50, 1039.84, 0.00, 0.00, 0.00);
	CreateDynamicObject(2627, 1655.12, -1000.50, 1039.84, 0.00, 0.00, 0.00);
	CreateDynamicObject(2627, 1653.03, -1000.50, 1039.84, 0.00, 0.00, 0.00);
	CreateDynamicObject(2627, 1651.12, -1000.50, 1039.84, 0.00, 0.00, 0.00);
	CreateDynamicObject(2627, 1648.84, -1000.50, 1039.84, 0.00, 0.00, 0.00);
	CreateDynamicObject(2627, 1646.64, -1000.50, 1039.84, 0.00, 0.00, 0.00);
	CreateDynamicObject(2628, 1640.40, -1003.75, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(2628, 1640.40, -1001.76, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(2628, 1640.40, -1005.81, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(2630, 1640.71, -1009.28, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(2630, 1642.77, -1009.28, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(2630, 1640.71, -1011.99, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(2630, 1642.77, -1011.99, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(2630, 1640.71, -1014.52, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(2630, 1642.77, -1014.52, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(2629, 1658.24, -1018.93, 1039.91, 0.00, 0.00, -90.00);
	CreateDynamicObject(2629, 1656.29, -1020.02, 1040.10, 0.00, 0.00, 180.00);
	CreateDynamicObject(2629, 1653.81, -1020.02, 1040.10, 0.00, 0.00, 180.00);
	CreateDynamicObject(2629, 1651.15, -1020.02, 1040.10, 0.00, 0.00, 180.00);
	CreateDynamicObject(2629, 1648.27, -1020.02, 1040.10, 0.00, 0.00, 180.00);
	CreateDynamicObject(2913, 1655.82, -1020.52, 1041.07, 0.00, 90.00, 0.00);
	CreateDynamicObject(2913, 1653.34, -1020.55, 1041.07, 0.00, 90.00, 0.00);
	CreateDynamicObject(2913, 1650.69, -1020.55, 1041.07, 0.00, 90.00, 0.00);
	CreateDynamicObject(2913, 1647.80, -1020.54, 1041.07, 0.00, 90.00, 0.00);
	CreateDynamicObject(2913, 1658.80, -1019.40, 1041.07, 0.00, 90.00, 90.00);
	CreateDynamicObject(3072, 1658.98, -1006.08, 1040.10, 0.00, 90.00, 0.00);
	CreateDynamicObject(2777, 1659.07, -1005.34, 1040.40, 0.00, 0.00, -90.00);
	CreateDynamicObject(3072, 1658.87, -1004.76, 1040.10, 0.00, 90.00, 0.00);
	CreateDynamicObject(2777, 1659.13, -1006.96, 1040.40, 0.00, 0.00, -90.00);
	CreateDynamicObject(3072, 1658.56, -1007.06, 1040.10, 0.00, 90.00, 0.00);
	CreateDynamicObject(3072, 1658.50, -1006.72, 1040.10, 0.00, 90.00, 0.00);
	CreateDynamicObject(2777, 1659.07, -1008.38, 1040.40, 0.00, 0.00, -90.00);
	CreateDynamicObject(3072, 1658.90, -1008.38, 1040.10, 0.00, 90.00, 0.00);
	CreateDynamicObject(2629, 1645.17, -1021.49, 1042.21, -90.00, 0.00, 0.00);
	CreateDynamicObject(2913, 1644.74, -1020.41, 1041.71, 0.00, 90.00, 0.00);
	CreateDynamicObject(2629, 1641.84, -1021.44, 1042.21, -90.00, 0.00, 0.00);
	CreateDynamicObject(2913, 1641.41, -1020.40, 1041.71, 0.00, 90.00, 0.00);
	CreateDynamicObject(2631, 1641.46, -1019.96, 1039.94, 0.00, 0.00, 0.00);
	CreateDynamicObject(2631, 1645.40, -1019.95, 1039.94, 0.00, 0.00, 0.00);
	CreateDynamicObject(2185, 1626.42, -996.09, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(2185, 1629.64, -996.09, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(2185, 1632.66, -996.09, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(2185, 1629.64, -993.81, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(2185, 1626.42, -993.81, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(2185, 1632.66, -991.50, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(2185, 1629.64, -991.50, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(2185, 1626.42, -991.50, 1039.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(3077, 1628.53, -988.74, 1039.88, 0.00, 0.00, 0.00);
	CreateDynamicObject(3085, 1628.65, -988.72, 1039.76, 0.00, 0.00, 180.00);
	CreateDynamicObject(2491, 1626.78, -990.38, 1039.71, 0.00, 10.00, 90.00);
	CreateDynamicObject(1721, 1625.49, -992.80, 1039.90, 0.00, 0.00, 0.00);
	CreateDynamicObject(1721, 1625.54, -994.96, 1039.90, 0.00, 0.00, 0.00);
	CreateDynamicObject(1721, 1628.90, -992.69, 1039.90, 0.00, 0.00, 0.00);
	CreateDynamicObject(1721, 1631.95, -992.80, 1039.90, 0.00, 0.00, 0.00);
	CreateDynamicObject(1721, 1628.87, -994.96, 1039.90, 0.00, 0.00, 0.00);
	CreateDynamicObject(1721, 1631.80, -997.33, 1039.90, 0.00, 0.00, 0.00);
	CreateDynamicObject(1721, 1628.75, -997.40, 1039.90, 0.00, 0.00, 0.00);
	CreateDynamicObject(1721, 1625.45, -997.38, 1039.90, 0.00, 0.00, 0.00);
	CreateDynamicObject(2894, 1625.80, -991.75, 1040.73, 0.00, 0.00, 0.00);
	CreateDynamicObject(2894, 1629.21, -991.47, 1040.73, 0.00, 0.00, 0.00);
	CreateDynamicObject(2894, 1631.89, -991.79, 1040.73, 0.00, 0.00, 0.00);
	CreateDynamicObject(2894, 1625.75, -993.89, 1040.73, 0.00, 0.00, 0.00);
	CreateDynamicObject(2894, 1629.01, -993.93, 1040.73, 0.00, 0.00, 0.00);
	CreateDynamicObject(2894, 1628.91, -996.31, 1040.73, 0.00, 0.00, 0.00);
	CreateDynamicObject(2894, 1626.11, -996.20, 1040.73, 0.00, 0.00, 0.00);
	CreateDynamicObject(2894, 1632.03, -996.22, 1040.73, 0.00, 0.00, 0.00);
	CreateDynamicObject(3077, 1625.32, -999.50, 1039.88, 0.00, 0.00, 45.00);
	CreateDynamicObject(1721, 1630.96, -1005.52, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(2185, 1629.76, -1004.65, 1039.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(2185, 1629.76, -1001.45, 1039.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(2185, 1631.82, -1004.65, 1039.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(2185, 1631.82, -1001.45, 1039.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(2185, 1629.76, -998.22, 1039.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(1721, 1630.89, -1002.48, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(1721, 1633.04, -1005.54, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(1721, 1630.99, -999.23, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(2185, 1627.64, -1004.65, 1039.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(2185, 1627.64, -1001.45, 1039.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(2185, 1627.64, -998.22, 1039.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(2491, 1625.05, -1002.47, 1039.71, 0.00, 10.00, 180.00);
	CreateDynamicObject(1721, 1633.02, -1002.32, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(1721, 1628.81, -998.90, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(1721, 1628.87, -1002.17, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(1721, 1628.75, -1005.25, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(14604, 1625.18, -1004.76, 1040.83, 0.00, 0.00, -90.00);
	CreateDynamicObject(14604, 1631.20, -988.79, 1040.83, 0.00, 0.00, 180.00);
	CreateDynamicObject(14782, 1620.03, -990.28, 1040.90, 0.00, 0.00, 0.00);
	CreateDynamicObject(14782, 1616.67, -991.11, 1040.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(14782, 1616.67, -997.47, 1040.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(14782, 1616.67, -1003.78, 1040.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(14782, 1623.25, -993.80, 1040.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(14782, 1623.25, -1000.20, 1040.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(14782, 1623.25, -1006.39, 1040.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(14782, 1624.20, -1009.60, 1040.90, 0.00, 0.00, 180.00);
	CreateDynamicObject(14401, 1620.71, -1005.96, 1040.20, 0.00, 0.00, 0.00);
	CreateDynamicObject(14401, 1620.71, -994.21, 1040.20, 0.00, 0.00, 0.00);
	CreateDynamicObject(14401, 1620.71, -1000.12, 1040.20, 0.00, 0.00, 0.00);
	CreateDynamicObject(1569, 1609.06, -1015.72, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(1569, 1609.05, -1012.72, 1039.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(2604, 1613.33, -1011.97, 1041.26, 0.00, 0.00, 90.00);
	CreateDynamicObject(1806, 1614.45, -1012.35, 1040.48, 0.00, 0.00, 150.00);
	CreateDynamicObject(1502, 1616.89, -1010.05, 1039.90, 0.00, 0.00, 0.00);
	CreateDynamicObject(1502, 1628.03, -1011.90, 1039.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(1502, 1633.49, -1000.19, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(1502, 1633.49, -993.77, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(1502, 1637.73, -987.52, 1039.90, 0.00, 0.00, 90.00);
	CreateDynamicObject(1502, 1647.25, -981.67, 1039.90, 0.00, 0.00, -90.00);
	CreateDynamicObject(8411, 1615.67, -986.36, 1108.28, 0.00, 180.00, 0.00);
	CreateDynamicObject(8411, 1606.13, -1011.82, 1108.28, 0.00, 180.00, 0.00);
	CreateDynamicObject(1502, 1641.57, -999.17, 1039.88, 0.00, 0.00, 0.00);*/

	/* --- Academy Field --- */
	
	CreateDynamicObject(3776, -612.51, -542.13, 33.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(7020, -511.84, -532.19, 28.10,   0.00, 0.00, 90.00);
	CreateDynamicObject(3776, -610.27, -488.33, 33.58,   0.00, 0.00, -90.00);
	CreateDynamicObject(3998, -480.61, -514.17, 30.84,   0.00, 0.00, 0.00);
	CreateDynamicObject(982, -551.41, -505.41, 25.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(982, -551.41, -537.45, 25.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(983, -551.41, -521.44, 25.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(982, -564.22, -550.26, 25.16,   0.00, 0.00, 90.00);
	CreateDynamicObject(982, -586.29, 25.16, 25.16,   0.00, 0.00, 90.00);
	CreateDynamicObject(966, -481.40, -562.43, 24.51,   0.00, 0.00, 0.00);
	CreateDynamicObject(966, -497.64, -562.44, 24.51,   0.00, 0.00, 180.00);
	CreateDynamicObject(967, -489.55, -561.73, 24.51,   0.00, 0.00, -90.00);
	CreateDynamicObject(1806, -489.63, -561.54, 24.52,   0.00, 0.00, -141.00);
	CreateDynamicObject(2314, -489.64, -562.48, 24.77,   0.00, 90.00, 90.00);
	CreateDynamicObject(984, -586.99, -550.26, 25.16,   0.00, 0.00, 90.00);
	CreateDynamicObject(2914, -557.81, -511.72, 24.47,   0.00, 0.00, 0.00);
	CreateDynamicObject(19357, -559.00, 5060.00, -500.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(19357, -552.00, 6038.00, -540.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(19357, -553.00, 3833.00, -543.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(19357, -561.00, 4124.00, -542.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(19357, -558.00, 6771.00, -501.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(19381, -556.67, -497.43, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19357, -562.00, 1898.00, -486.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(1423, -591.74, -501.08, 25.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(1327, -583.20, -548.21, 24.52,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -556.67, -507.06, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -556.67, -516.69, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -556.67, -526.32, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -556.67, -535.95, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -556.67, -545.45, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -567.17, -497.43, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -577.67, -497.43, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -588.17, -497.43, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -567.17, -507.06, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, -577.67, -507.06, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -588.17, -507.06, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -567.15, -516.69, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, -577.67, -516.69, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -588.17, -516.69, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -567.17, -526.32, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, -577.67, -526.32, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -588.17, -526.32, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -567.17, -535.95, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -577.67, -535.95, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -588.17, -535.95, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -567.17, -545.45, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -577.67, -545.45, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(19381, -588.17, -545.45, 24.44,   0.00, 90.00, 0.00);
	CreateDynamicObject(982, -593.42, -505.41, 25.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(982, -593.42, -537.45, 25.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(983, -593.42, -521.44, 25.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(984, -557.84, -492.62, 25.16,   0.00, 0.00, 90.00);
	CreateDynamicObject(982, -580.61, -492.62, 25.16,   0.00, 0.00, 90.00);
	CreateDynamicObject(19449, -593.32, -497.44, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -590.23, -499.99, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -590.25, -519.25, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -590.25, -528.88, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -590.25, -538.51, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -593.32, -507.07, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -593.32, -516.70, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -593.32, -526.34, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -593.32, -535.97, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -593.32, -545.42, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -590.25, -543.07, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -556.41, -550.15, 22.78,   0.00, 0.00, 90.00);
	CreateDynamicObject(19449, -551.50, -545.43, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -551.50, -535.97, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -551.50, -526.34, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -551.50, -516.70, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -551.50, -507.07, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -551.50, -497.44, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -559.60, -546.88, 22.78,   0.00, 0.00, 90.00);
	CreateDynamicObject(19449, -554.69, -542.15, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -554.69, -538.51, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -554.69, -528.88, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -554.69, -519.25, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -554.69, -509.61, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -554.69, -499.98, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -569.22, -546.88, 22.78,   0.00, 0.00, 90.00);
	CreateDynamicObject(19449, -578.85, -546.88, 22.78,   0.00, 0.00, 90.00);
	CreateDynamicObject(19449, -566.04, -550.15, 22.78,   0.00, 0.00, 90.00);
	CreateDynamicObject(19449, -575.68, -550.15, 22.78,   0.00, 0.00, 90.00);
	CreateDynamicObject(1327, -586.82, -549.27, 24.52,   0.00, 90.00, 0.00);
	CreateDynamicObject(1327, -590.08, -547.65, 24.52,   0.00, 90.00, 0.00);
	CreateDynamicObject(1228, -575.20, -548.44, 24.94,   0.00, 0.00, 0.00);
	CreateDynamicObject(3927, -592.24, -504.77, 25.28,   0.00, 0.00, 0.00);
	CreateDynamicObject(3927, -592.23, -508.79, 25.28,   0.00, 0.00, 0.00);
	CreateDynamicObject(3927, -590.59, -514.23, 25.28,   0.00, 0.00, 0.00);
	CreateDynamicObject(3927, -590.40, -506.62, 25.28,   0.00, 0.00, 0.00);
	CreateDynamicObject(3927, -590.80, -510.37, 25.28,   0.00, 0.00, 0.00);
	CreateDynamicObject(3927, -592.25, -512.28, 25.28,   0.00, 0.00, 0.00);
	CreateDynamicObject(19134, -592.47, -512.20, 26.19,   90.00, 90.00, 0.00);
	CreateDynamicObject(19134, -592.47, -512.20, 26.19,   90.00, 90.00, 0.00);
	CreateDynamicObject(19134, -592.47, -504.67, 26.19,   90.00, 90.00, 0.00);
	CreateDynamicObject(19134, -590.62, -506.57, 26.19,   90.00, 90.00, 180.00);
	CreateDynamicObject(19134, -592.46, -508.77, 26.19,   90.00, 90.00, 0.00);
	CreateDynamicObject(19134, -590.77, -514.16, 26.19,   90.00, 90.00, 180.00);
	CreateDynamicObject(19134, -591.02, -510.27, 26.19,   90.00, 90.00, 180.00);
	CreateDynamicObject(19437, -591.77, -520.82, 24.70,   0.00, 0.00, 90.00);
	CreateDynamicObject(19393, -591.80, -526.67, 25.85,   0.00, 0.00, 90.00);
	CreateDynamicObject(19449, -585.43, -546.88, 22.78,   0.00, 0.00, 90.00);
	CreateDynamicObject(1228, -559.26, -548.52, 24.94,   0.00, 0.00, 0.00);
	CreateDynamicObject(1238, -569.43, -547.33, 24.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1238, -568.29, -548.48, 24.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1238, -568.30, -549.08, 24.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1238, -568.21, -549.70, 24.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1238, -566.48, -549.10, 24.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1238, -566.49, -548.50, 24.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1238, -566.52, -547.30, 24.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1238, -566.49, -547.92, 24.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1238, -565.11, -549.75, 24.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1238, -565.12, -549.16, 24.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1238, -565.16, -547.32, 24.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1238, -565.15, -547.88, 24.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(3264, -551.98, -548.34, 24.53,   0.00, 0.00, -90.00);
	CreateDynamicObject(3262, -554.68, -531.78, 24.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(2914, -554.75, -511.72, 24.47,   0.00, 0.00, 180.00);
	CreateDynamicObject(1516, -558.80, -493.23, 24.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(1808, -558.53, -493.57, 25.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(2437, -558.84, -493.19, 25.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(14781, -562.26, -540.51, 25.59,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -557.81, -497.44, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -557.81, -507.06, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(14877, -553.08, -529.09, 23.66,   0.00, 0.00, 90.00);
	CreateDynamicObject(14877, -553.08, -516.05, 23.66,   0.00, 0.00, -90.00);
	CreateDynamicObject(19461, -554.52, -525.42, 23.99,   0.00, 0.00, 0.00);
	CreateDynamicObject(19461, -554.52, -519.42, 23.99,   0.00, 0.00, 0.00);
	CreateDynamicObject(19461, -551.52, -525.42, 23.99,   0.00, 0.00, 0.00);
	CreateDynamicObject(19461, -551.51, -519.42, 23.99,   0.00, 0.00, 0.00);
	CreateDynamicObject(19461, -553.06, -522.09, 23.99,   0.00, 0.00, 0.00);
	CreateDynamicObject(19442, -552.38, -520.94, 23.99,   0.00, 0.00, 90.00);
	CreateDynamicObject(19442, -553.78, -520.95, 23.99,   0.00, 0.00, 90.00);
	CreateDynamicObject(19442, -552.25, -524.21, 23.99,   0.00, 0.00, 90.00);
	CreateDynamicObject(19442, -553.65, -524.21, 23.99,   0.00, 0.00, 90.00);
	CreateDynamicObject(3578, -577.69, -510.34, 23.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(3578, -577.69, -523.42, 23.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(982, -571.22, -519.72, 25.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, -590.23, -509.61, 22.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(2632, -568.35, -527.82, 24.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(2632, -568.35, -525.88, 24.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(2632, -568.35, -523.94, 24.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(2632, -568.35, -522.00, 24.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(2632, -568.35, -520.06, 24.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(2632, -568.35, -518.12, 24.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(2632, -568.35, -516.18, 24.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(2632, -568.35, -514.28, 24.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(983, -571.22, -503.72, 25.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(984, -577.63, -532.55, 25.15,   0.00, 0.00, 90.00);
	CreateDynamicObject(982, -584.03, -519.72, 25.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(983, -584.03, -503.72, 25.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(983, -580.83, -500.52, 25.19,   0.00, 0.00, 90.00);
	CreateDynamicObject(3928, -482.90, -527.45, 38.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(1569, -489.13, -514.38, 38.58,   0.00, 0.00, 0.00);
	CreateDynamicObject(1569, -486.13, -514.38, 38.58,   0.00, 0.00, 180.00);
	CreateDynamicObject(19449, -585.31, -550.15, 22.78,   0.00, 0.00, 90.00);
	CreateDynamicObject(19357, -591.74, -550.15, 22.78,   0.00, 0.00, 90.00);
	CreateDynamicObject(19357, -556.29, -492.71, 22.78,   0.00, 0.00, 90.00);
	CreateDynamicObject(19357, -553.08, -492.71, 22.78,   0.00, 0.00, 90.00);
	CreateDynamicObject(13648, -553.12, -508.43, 20.90,   0.00, 0.00, 180.00);
	CreateDynamicObject(4574, -481.22, -507.90, 38.56,   0.00, 0.00, 0.00);
	CreateDynamicObject(3666, -485.85, -514.57, 39.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(3666, -489.33, -514.57, 39.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(3666, -478.15, -521.99, 39.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(3666, -478.15, -532.80, 39.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(3666, -487.68, -532.80, 39.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(3666, -487.68, -521.99, 39.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(8843, -502.66, -532.09, 24.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(8843, -502.58, -504.87, 24.53,   0.00, 0.00, 0.00);

	/* --- Impound Lot Parking Lots --- */
	
	CreateDynamicObject(10183, 1562.19922, -1606.7998, 12.4, 0, 0, 45.247);
	CreateDynamicObject(10183, 1604.09998, -1622.80005, 12.6, 0.247, 359.747, 315.5);
	CreateDynamicObject(10183, 1562.19995, -1606.80005, 12.3, 0, 0.5, 45.242);
	CreateDynamicObject(10183, 1572.30005, -1606.90002, 12.4, 0, 359.497, 44.495);

	/* --- Locker Room --- */

	//CreateDynamicObject(14782, 267.30814, 120.40351, 1004.60663,   0.00000, 0.00000, 0.00000);

    /*CreateDynamicObject(1500, 213.631744, 121.106468, 997.995605, 0.000000, 0.000000, -90.000000);
	CreateDynamicObject(1500, 213.631866, 122.608413, 997.995483, 0.000000, 0.000000, -90.000000);*/

    LAPDCP = CreateDynamicCP(241.4782, 112.9119, 1003.2188, 1.5, -1, -1, -1, 20.0);
    LAPDLockerPickup = CreateDynamicPickup(1239, 23, 267.1146, 118.1507, 1004.6172, 0, 10);

    /*CreateDynamicObject(19443,239.60000610,116.00000000,1003.90002441,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19443,239.60000610,119.09999847,1003.90002441,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19443,253.19999695,110.59999847,1003.90002441,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19443,253.19999695,107.50000000,1003.90002441,0.00000000,0.00000000,0.00000000);
	LAPDDoor1 = CreateDynamicObject(1495,239.59960938,116.79980469,1002.20001221,0.00000000,0.00000000,90.00000000);
	LAPDDoor2 = CreateDynamicObject(1495,253.19999695,108.30000305,1002.20001221,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19466,239.60000610,112.80000305,1004.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19443,239.60000610,114.69999695,1003.90002441,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19443,239.60000610,110.93000031,1003.90002441,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19443,253.10000610,119.30000305,1003.90002441,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19443,253.10000610,115.50000000,1003.90002441,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19466,253.10000610,117.40000153,1004.79998779,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(4100,246.2,119.4,1005.1,0.00000000,180,40);*/
	
	CreateDynamicObject(8661,1569.25000000,-1674.00000000,4.90000010,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3465,1583.90002441,-1677.50000000,6.19999981,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(3465,1584.00000000,-1672.09997559,6.19999981,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(3465,1584.00000000,-1666.80004883,6.19999981,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(3578,1584.09997559,-1677.50000000,4.19999981,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3578,1584.09997559,-1672.09997559,4.19999981,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3578,1584.09997559,-1666.80004883,4.19999981,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(997,1585.30004883,-1677.50000000,5.00000000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(997,1585.30004883,-1672.09997559,5.00000000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(997,1585.30004883,-1666.80004883,5.00000000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1214,1589.00000000,-1677.50000000,5.00000000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1214,1589.00000000,-1672.09997559,5.00000000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1214,1589.00000000,-1666.80004883,5.00000000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1214,1581.50000000,-1677.50000000,5.00000000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1214,1581.59997559,-1672.09997559,5.00000000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1214,1581.59997559,-1666.80004883,5.00000000,0.00000000,0.00000000,0.00000000);

    CreateDynamicObject(2204, 225.04205, 124.74001, 1009.21112,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2204, 225.04131, 121.80190, 1009.21112,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2205, 230.05428, 125.77050, 1009.19360,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(948, 230.84000, 125.47120, 1009.19440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(948, 227.90610, 125.51040, 1009.19440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2197, 227.76939, 121.10970, 1009.18182,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2197, 229.11494, 121.10967, 1009.18182,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2197, 228.44820, 121.10970, 1009.18182,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2894, 229.32719, 125.82050, 1010.12848,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1714, 229.41251, 127.19960, 1009.19531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2120, 229.97279, 123.95730, 1009.85211,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2120, 228.89909, 123.97030, 1009.85211,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2029, 222.77216, 125.06845, 1009.21088,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2029, 222.77214, 123.08794, 1009.21088,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2001, 221.05568, 128.24741, 1009.21405,   0.00000, 0.00000, 332.46750);
	CreateDynamicObject(2001, 224.46344, 128.26903, 1009.21405,   0.00000, 0.00000, 291.53113);
	CreateDynamicObject(1722, 221.37697, 126.19759, 1009.19427,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 224.10684, 123.08563, 1009.19427,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(1722, 221.39108, 124.16729, 1009.19427,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 221.38342, 125.25774, 1009.19427,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 221.41930, 123.15170, 1009.19427,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 224.14468, 124.13402, 1009.19427,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1722, 224.18507, 125.22388, 1009.19427,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1722, 224.19991, 126.14208, 1009.19427,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2165, 252.97134, 122.45963, 1009.21393,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2202, 252.91830, 120.69890, 1009.21088,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2165, 248.83038, 122.44714, 1009.21393,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2202, 244.76370, 120.71080, 1009.21088,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2202, 248.75020, 120.70510, 1009.21088,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2165, 244.84546, 122.39282, 1009.21393,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2202, 240.77119, 120.70724, 1009.21088,   356.85840, 0.00000, 270.00000);
	CreateDynamicObject(2165, 240.81053, 122.39342, 1009.21393,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2197, 251.96957, 123.31001, 1009.18182,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2197, 247.81548, 123.33246, 1009.18182,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2197, 243.84413, 123.30438, 1009.18182,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2197, 239.81989, 123.31178, 1009.18182,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2164, 249.46451, 121.22858, 1009.21332,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 245.46127, 121.22027, 1009.21332,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 241.45607, 121.23775, 1009.21332,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 237.44279, 121.31667, 1009.21332,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1715, 251.45522, 121.73154, 1009.21350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1715, 247.47881, 121.69119, 1009.21350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1715, 243.41782, 121.70820, 1009.21350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1715, 239.40199, 121.67140, 1009.21350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 222.96272, 107.08346, 1009.21289,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2164, 236.50853, 113.09618, 1009.21289,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1722, 260.14648, 108.16805, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 262.00952, 108.19611, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2166, 218.13432, 111.35154, 1009.21576,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2165, 237.02260, 109.26937, 1009.21448,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2166, 222.03008, 111.34241, 1009.21576,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2165, 220.08974, 112.33175, 1009.21448,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(950, 227.41991, 112.27010, 1009.75000,   0.00000, 0.00000, 140.00000);
	CreateDynamicObject(950, 228.53294, 111.34964, 1009.75000,   0.00000, 0.00000, 140.00000);
	CreateDynamicObject(2164, 234.75560, 113.10120, 1009.21289,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 224.72510, 107.08218, 1009.21289,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1715, 219.22220, 110.96661, 1009.21472,   0.00000, 0.00000, 224.82205);
	CreateDynamicObject(1715, 220.77551, 110.93127, 1009.21472,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1715, 224.66924, 110.91186, 1009.21472,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1715, 223.20547, 110.94861, 1009.21472,   0.00000, 0.00000, 224.82205);
	CreateDynamicObject(2165, 223.98471, 112.33057, 1009.21448,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2120, 235.32941, 110.27870, 1009.82452,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2120, 235.32941, 109.22560, 1009.82452,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1714, 238.39804, 109.82719, 1009.19568,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2163, 239.31274, 110.31545, 1010.29572,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(948, 239.01291, 107.33283, 1009.18872,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 238.91045, 112.63969, 1009.18488,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2002, 233.52930, 111.27920, 1009.21448,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 243.21790, 119.69490, 1004.90381,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 240.97740, 119.69490, 1006.84009,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 240.97740, 119.69490, 1004.90381,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 45.57680, 119.72790, 1007.08008,   0.00000, 0.00000, 88.73180);
	CreateDynamicObject(19466, 243.21790, 119.69490, 1006.84009,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 249.93500, 119.69440, 1004.90381,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 245.45900, 119.69490, 1006.84009,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 239.79520, 112.77277, 1004.69629,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19466, 252.99318, 117.49270, 1004.69629,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19466, 239.79082, 112.91269, 1004.69629,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19466, 252.99501, 117.33273, 1004.69629,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, 242.45641, 107.43300, 1002.89722,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(638, 250.35468, 107.42303, 1002.89722,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2002, 252.47620, 110.90710, 1002.21411,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 252.52890, 111.96930, 1002.21088,   3.14160, 0.00000, 90.00000);
	CreateDynamicObject(1722, 252.53191, 112.62920, 1002.21088,   3.14160, 0.00000, 89.00000);
	CreateDynamicObject(950, 240.08148, 115.26189, 1002.75818,   0.00000, 0.00000, 90.00000);
	LAPDDoor1 = CreateDynamicObject(1569, 239.75999, 116.82080, 1002.07599,   0.00000, 0.00000, 90.00000);
	LAPDDoor2 = CreateDynamicObject(1569, 253.03819, 108.33510, 1002.07300,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2165, 248.73924, 123.39702, 1002.21472,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2165, 245.45081, 123.39700, 1002.21472,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2164, 244.95561, 127.08663, 1002.18457,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 246.72284, 127.08867, 1002.18457,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(948, 248.32114, 126.82922, 1002.17450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(948, 244.15749, 126.82614, 1002.17450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2165, 253.92270, 116.69010, 1002.21088,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1722, 260.13992, 107.45264, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 262.01273, 107.48093, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 260.10941, 112.41739, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 260.12979, 108.87914, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 260.13248, 109.58938, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 260.11636, 110.29146, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 260.11395, 110.99345, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 262.00272, 108.93246, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 261.99744, 109.62955, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 261.97192, 110.33043, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 261.98645, 111.03181, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 261.98026, 111.71342, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 260.10834, 111.69604, 1007.81470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1806, 277.53128, 107.41421, 1007.81500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 271.52722, 109.85271, 1007.81500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 273.51639, 109.89244, 1007.81500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 275.51315, 109.86824, 1007.81500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 277.40408, 109.84534, 1007.81500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 271.44611, 107.33369, 1007.81500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 275.40576, 107.40037, 1007.81500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 273.57770, 107.38873, 1007.81500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14782, 266.81277, 120.44257, 1004.60968,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2390, 269.62991, 120.74290, 1004.82941,   0.00000, 0.00000, 9.00000);
	CreateDynamicObject(2846, 267.82382, 119.06840, 1003.63519,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19397, 272.05771, 107.83510, 1005.37042,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1722, 274.54800, 109.84900, 1003.61511,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1722, 277.83691, 109.82900, 1003.61511,   0.00000, 0.00000, 90.00000);
	LAPDDoor3 = CreateDynamicObject(1569, 272.03580, 107.10400, 1003.61499,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 273.64001, 112.70000, 1003.61572,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2001, 268.96774, 107.44315, 1003.61511,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 268.92523, 111.96922, 1003.61511,   -0.06000, 0.00000, 0.00000);
	CreateDynamicObject(2165, 265.05676, 107.62388, 1003.61493,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2197, 262.51529, 108.60910, 1003.59241,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2165, 267.72412, 107.56816, 1003.61493,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2197, 265.91672, 108.55244, 1003.59241,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2164, 260.47534, 109.13064, 1003.61493,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1715, 264.45456, 109.18729, 1003.61578,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1715, 267.04086, 109.20022, 1003.61578,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(948, 260.81177, 112.02712, 1003.59521,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(948, 267.48380, 112.00094, 1003.59521,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 260.95404, 107.49007, 1003.61493,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2197, 263.20621, 108.60909, 1003.59241,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1569, 275.76505, 121.34831, 1003.61499,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1575, 275.08008, 120.50806, 1004.25970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1578, 275.06592, 120.12545, 1004.28149,   0.00000, 0.06000, 0.00000);
	CreateDynamicObject(1575, 274.10162, 120.51783, 1004.25970,   0.06000, 0.00000, 0.00000);
	CreateDynamicObject(1578, 274.10458, 120.14169, 1004.28149,   0.00000, 0.06000, 0.00000);
	CreateDynamicObject(1577, 275.04724, 119.74558, 1004.28168,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1577, 274.10153, 119.76682, 1004.28168,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2385, 270.68561, 117.81380, 1004.41467,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2043, 272.79370, 120.43217, 1004.38159,   0.00000, 0.00000, 26.34482);
	CreateDynamicObject(2043, 272.46930, 120.11798, 1004.38159,   0.00000, 0.00000, 337.64639);
	CreateDynamicObject(2059, 272.96234, 119.74727, 1004.28156,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(331, 270.87540, 117.68500, 1004.47681,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(347, 270.85471, 117.51503, 1004.90637,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(348, 270.87799, 119.02300, 1004.90198,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(346, 270.93781, 118.28670, 1005.32581,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(349, 273.19379, 116.21630, 1004.09747,   94.74010, 58.68000, 0.00000);
	CreateDynamicObject(351, 272.42892, 116.17670, 1004.14648,   90.00002, 59.34000, 0.00000);
	CreateDynamicObject(356, 271.79800, 116.37870, 1004.10577,   97.86000, 54.42000, 0.00000);
	CreateDynamicObject(2314, 271.98840, 116.32350, 1003.59558,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1715, 248.00066, 124.86447, 1002.21552,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1715, 244.75592, 124.85282, 1002.21552,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2197, 233.40300, 121.85230, 1003.88391,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2197, 234.32179, 121.80540, 1002.21088,   -0.12000, -0.18000, 270.00000);
	CreateDynamicObject(2197, 234.32480, 121.80740, 1003.86591,   0.00000, -0.30000, 270.00000);
	CreateDynamicObject(2197, 233.40401, 121.85030, 1002.21088,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2197, 233.40199, 122.52690, 1002.21088,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2197, 233.37421, 123.24200, 1002.21088,   0.06000, 0.00000, 90.00000);
	CreateDynamicObject(2197, 233.40199, 123.93050, 1002.21088,   0.06000, 0.00000, 90.00000);
	CreateDynamicObject(2197, 234.32280, 122.49480, 1003.86591,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2197, 234.32179, 123.15380, 1002.21088,   0.00000, 0.18000, 270.00000);
	CreateDynamicObject(2197, 234.32381, 123.83020, 1002.21088,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2197, 234.32381, 122.49280, 1002.21088,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2197, 234.32480, 123.15580, 1003.86591,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2197, 234.32280, 123.83220, 1003.86591,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2197, 233.40500, 122.52690, 1003.88391,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2197, 233.40300, 123.24200, 1003.88391,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2197, 233.40500, 123.93050, 1003.88391,   0.06000, 0.00000, 90.00000);
	CreateDynamicObject(2165, 233.44763, 126.63187, 1002.21527,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 234.08664, 125.53242, 1002.21533,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(948, 235.05478, 120.86789, 1002.21497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(948, 232.64209, 120.87827, 1002.21497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(335, 270.90521, 118.51950, 1004.43500,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(2370, 272.71799, 119.64232, 1003.41602,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2370, 274.33734, 119.64316, 1003.41602,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2041, 273.34238, 120.29033, 1004.46143,   0.00000, 0.00000, 298.99139);
	CreateDynamicObject(2038, 273.57990, 119.95830, 1004.32147,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2372, 269.55881, 117.19971, 1003.61505,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2394, 269.34750, 117.81602, 1004.32458,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2819, 268.06711, 118.00108, 1003.62183,   0.00000, 0.00000, 269.86911);
	CreateDynamicObject(2165, 274.37009, 117.04120, 1007.81482,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2610, 276.10770, 117.15000, 1008.63489,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2610, 268.71021, 117.15000, 1008.63489,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2165, 269.43805, 117.04121, 1007.81482,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2610, 271.15881, 117.15000, 1008.63489,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2165, 271.89581, 117.04120, 1007.81482,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2610, 273.62051, 117.15000, 1008.63489,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 275.85303, 112.94501, 1007.81488,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2164, 274.08871, 112.94500, 1007.81488,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2164, 272.31799, 112.94500, 1007.81488,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2002, 278.38675, 114.88094, 1007.81451,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2001, 278.50998, 113.32065, 1007.81482,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(948, 270.68866, 113.19363, 1007.81409,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 272.45859, 115.78663, 1007.81531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 270.02588, 115.78145, 1007.81531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 275.06058, 115.81635, 1007.81531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2608, 264.87061, 114.44410, 1009.32953,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2608, 264.87064, 116.32504, 1009.32953,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2164, 263.03082, 113.09812, 1007.81482,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1742, 260.38776, 115.30190, 1007.81622,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2001, 260.94119, 113.45239, 1007.81488,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1216, 215.96434, 116.11146, 998.67480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1216, 214.39351, 116.11577, 998.67480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 222.63313, 116.39443, 999.09961,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 226.63628, 116.39217, 999.09961,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2602, 222.63980, 107.47260, 998.51740,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2602, 226.73650, 107.47260, 998.51740,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2602, 218.88609, 107.47260, 998.51740,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2602, 214.80409, 107.47260, 998.51740,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2165, 226.30388, 117.13428, 998.01477,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2165, 223.36676, 117.17332, 998.01477,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1715, 225.55318, 118.43127, 998.01471,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1715, 222.66685, 118.42667, 998.01471,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 222.96312, 124.77679, 998.01526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 224.71410, 124.77680, 998.01532,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2608, 227.41666, 121.85677, 999.69342,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2608, 227.41670, 119.97150, 999.69342,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2001, 227.33261, 124.45094, 998.01355,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 220.35620, 124.52682, 998.01355,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19466, 245.45799, 119.69440, 1004.90381,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 247.69501, 119.69440, 1006.84009,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 247.69501, 119.69440, 1004.90381,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 252.17599, 119.69440, 1004.90381,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 249.93500, 119.69440, 1006.84009,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 252.17599, 119.69440, 1006.84009,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19369, 272.05750, 111.04600, 1003.17358,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19442, 272.05750, 110.92400, 1006.78278,   270.00000, 0.00000, 0.00000);
	CreateDynamicObject(2230, 272.17981, 109.54960, 1007.27820,   180.00000, 0.00000, 90.00000);
	CreateDynamicObject(1785, 276.34381, 110.65520, 1004.48242,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1886, 278.40591, 112.12330, 1007.11371,   40.00000, 0.00000, 300.00000);
	CreateDynamicObject(2197, 254.87144, 118.55761, 1001.69092,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2165, 238.86630, 113.22220, 1002.21088,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2164, 232.23370, 109.12360, 1002.21460,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 260.20050, 119.00330, 1002.21460,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2001, 232.68327, 107.39443, 1002.21466,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 232.70151, 115.19176, 1002.21307,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 232.23366, 110.88795, 1002.21460,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 232.23370, 112.65170, 1002.21460,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 260.20053, 120.75433, 1002.21460,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2001, 259.95837, 122.69061, 1002.21399,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 259.88071, 116.23766, 1002.21399,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2161, 239.32648, 122.83831, 1002.21088,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2161, 239.28419, 109.24360, 1002.21088,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2161, 239.28419, 107.91760, 1002.21088,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2197, 237.85965, 111.41302, 1001.69092,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(948, 238.86063, 114.24969, 1002.21478,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2161, 253.43449, 120.74240, 1002.21088,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2161, 253.43448, 119.41571, 1002.21088,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2161, 253.43449, 122.07040, 1002.21088,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19396, 253.06650, 109.05700, 1003.83490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19396, 239.73412, 117.55270, 1003.83490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1744, 235.67332, 120.99426, 1002.21472,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1744, 259.59924, 121.96462, 1005.15179,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1744, 235.67329, 122.93000, 1002.21472,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(948, 236.14920, 119.84040, 1002.21460,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(948, 236.14297, 126.68153, 1002.21460,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2161, 239.28419, 110.55890, 1002.21088,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2161, 239.32651, 121.51550, 1002.21088,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1569, 258.57111, 117.68680, 1007.81659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(950, 218.04533, 122.00991, 1002.75781,   3.14159, 0.00000, 0.00000);
	CreateDynamicObject(1722, 219.00060, 121.80640, 1002.21088,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 219.66260, 121.81990, 1002.21088,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 220.31210, 121.81710, 1002.21088,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 220.97000, 121.79210, 1002.21088,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 221.62360, 121.79120, 1002.21088,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 222.31560, 121.79610, 1002.21088,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2164, 231.82310, 114.44534, 1002.21417,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2164, 231.82310, 112.67340, 1002.21417,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2164, 231.82310, 110.91730, 1002.21417,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2164, 231.82310, 109.15810, 1002.21417,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2608, 224.43324, 110.19000, 1003.73798,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2608, 224.43320, 112.06430, 1003.73798,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2608, 224.43320, 113.93700, 1003.73798,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2165, 229.71732, 112.12283, 1002.21478,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2165, 226.89760, 112.12280, 1002.21478,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2165, 226.99361, 109.06640, 1002.21478,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2165, 229.81354, 109.06636, 1002.21478,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1715, 229.00888, 113.70995, 1002.21588,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1715, 226.37781, 110.79234, 1002.21588,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1715, 226.21790, 113.71000, 1002.21588,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1715, 229.06400, 110.79230, 1002.21588,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2131, 214.11533, 115.30870, 1002.21362,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2132, 216.12500, 115.30870, 1002.21472,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2133, 218.11349, 115.30870, 1002.21527,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2134, 219.11810, 115.30870, 1002.21521,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2141, 220.10840, 115.30870, 1002.21478,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2500, 219.55827, 115.69894, 1003.26697,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2313, 223.37497, 110.00766, 1002.21490,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1786, 223.74088, 109.41669, 1002.71167,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2231, 223.79800, 110.48670, 1002.19470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2231, 223.93770, 107.66110, 1002.19470,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2028, 222.51250, 109.78510, 1002.21552,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2028, 222.50493, 108.92898, 1002.21552,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1703, 220.51123, 108.30201, 1002.21582,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2104, 218.28529, 107.01563, 1002.21411,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2229, 218.13950, 106.99770, 1003.56378,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2120, 216.01019, 109.21610, 1002.81769,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2115, 216.05150, 110.65500, 1002.21570,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2120, 216.01019, 113.20690, 1002.81769,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2120, 214.33701, 110.65020, 1002.81769,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2120, 214.31870, 111.56610, 1002.81769,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2120, 217.59109, 111.56610, 1002.81769,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2120, 217.59540, 110.65020, 1002.81769,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2867, 218.11684, 115.46116, 1003.26672,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1744, 235.67329, 124.85800, 1002.21472,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1744, 263.60129, 116.69060, 1003.74261,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1744, 263.60129, 118.62430, 1003.74261,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1714, 222.80659, 127.56940, 1009.19177,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 221.84520, 112.86870, 1012.59998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 215.20200, 112.86870, 1012.59998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 232.89661, 125.11900, 1010.85358,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1722, 273.60001, 126.67400, 1007.81262,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 275.60001, 126.67400, 1007.81262,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 276.60001, 126.67400, 1007.81262,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 277.60001, 126.67400, 1007.81262,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2195, 278.39999, 126.67400, 1008.46088,   3.14160, 0.00000, 0.00000);
	CreateDynamicObject(2195, 272.79999, 126.67400, 1008.46088,   3.14160, 0.00000, 0.00000);
	CreateDynamicObject(19325, 272.04999, 110.67000, 1004.47998,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(16101, 272.04999, 112.65000, 1003.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 268.48511, 109.21900, 1003.61572,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2230, 272.09979, 109.30960, 1007.27820,   180.00000, 0.00000, -90.00000);
	CreateDynamicObject(1963, 276.20139, 109.78570, 1004.02130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1533, 213.65700, 121.00000, 998.00000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1533, 213.65500, 122.47000, 998.00000,   0.00000, 0.00000, 90.00000);

	/* --- LAPD Exterior --- */

	CreateDynamicObject(995, 1544.69995, -1622.59998, 13.3, 90, 180, 270);
	CreateDynamicObject(995, 1544.69995, -1637.30005, 13.3, 90, 179.995, 269.995);
	CreateDynamicObject(1566, 1582.59961, -1637.79980, 13.60000,   0.00000, 0.00000, 358.74799);
	LAPDGate2 = CreateDynamicObject(3055, 1588.40002, -1638.20203, 13.70000,   0.00000, 0.00000, 359.99701);
	SwatGate = CreateDynamicObject(980,1067.5072000,1357.5863000,12.6536900,0.0000000,0.0000000,0.0000000); //
	AirportGate = CreateDynamicObject(980, 1961.58606, -2189.85620, 15.33290,   0.00000, 0.00000, 0.00000);
	LAPDGate = CreateDynamicObject(3055, 1588.59998, -1638.19995, 13.70000,   0.00000, 0.00000, 359.99500);
	LAPDBarrier = CreateDynamicObject(968, 1544.69, -1630.81, 13.10, 0.00, 90.00, 90.00);
	ImpoundGate = CreateDynamicObject(980, 1620.67859, -1850.96118, 15.32280,   0.00000, 0.00000, 0.00000);
	
	SFGate = CreateDynamicObject(980, -2127.59668, -80.85620, 37.07020,   0.00000, 0.00000, 0.00000);
	HsuiGate = CreateDynamicObject(980, 1643.58838, -1715.30823, 16.00450,   0.00000, 0.00000, 90.00000);
	FBIGate = CreateDynamicObject(980, 1535.53259, -1451.25793, 14.61490,   0.00000, 0.00000, 0.00000);
 	//CreateDynamicObject(983, 1546.49, -1635.29, 13.04, 0.00, 0.00, 41.88);
	//CreateDynamicObject(983, 1544.66, -1619.67, 13.30, 0.00, 0.00, 0.00);
	//CreateDynamicObject(1335, 1544.64, -1616.71, 13.46, 0.00, 0.00, 0.00);

	/* --- LAPD Pickups --- */

	LAPDEntrance = CreateDynamicPickup(1239, 23, 1554.5900, -1675.5699, 16.1953);
	LAPDArmoury = CreateDynamicPickup(1239, 23, 1525.2760, -1677.8524, 5.8906);
	LAPDCells = CreateDynamicPickup(1239, 23, 221.6334, 114.6567, 999.0156);
	LAPDArmouryCP = CreateDynamicCP(312.2024, -165.1533, 999.6010, 1.5);
	PrisonCP = CreateDynamicCP(1259.5686,1673.2255,1001.5000, 1.5);
	AcademyCP = CreateDynamicCP(1096.3987,1351.4846,10.9269, 1.5);
	AcademyCP1 = CreateDynamicCP(390.1056,2544.5876,16.5424, 1.5);
	AcademyCP2 = CreateDynamicCP(815.2819,1686.5509,5.2813, 1.5);
}

stock Objects_LosSantos()
{
	CreateDynamicObject(2200, 1790.20740, -1304.30725, 119.26230,   0.00000, 0.00000, 89.19064);
	CreateDynamicObject(2204, 1796.39368, -1295.12329, 119.26970,   0.00000, 0.00000, 3.15002);
	CreateDynamicObject(2205, 1805.72485, -1303.13025, 119.22207,   0.00000, 0.00000, 270.66467);
	CreateDynamicObject(3462, 1781.58923, -1303.51416, 121.91831,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1775, 1787.65186, -1306.42908, 120.32459,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 1809.88916, -1306.43982, 119.26117,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2257, 1809.34094, -1312.20984, 121.78725,   0.00000, 0.00000, 180.29051);
	CreateDynamicObject(1703, 1796.87427, -1308.31628, 119.26305,   0.00000, 0.00000, 340.19278);
	CreateDynamicObject(1703, 1792.64429, -1308.65442, 119.26495,   0.00000, 0.00000, 11.92126);
	CreateDynamicObject(2099, 1795.56042, -1312.11023, 119.25381,   0.00000, 0.00000, 179.61938);
	CreateDynamicObject(14867, 1824.56763, -1306.47925, 120.78947,   0.00000, 0.00000, 269.32843);
	CreateDynamicObject(2681, 1824.66528, -1299.52991, 119.29756,   0.00000, 0.00000, 92.50208);
	CreateDynamicObject(1797, 1831.00171, -1313.14587, 119.37357,   0.00000, 0.00000, 235.16031);
	CreateDynamicObject(1824, 1830.08789, -1305.34497, 119.79852,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1726, 1827.93665, -1286.06628, 119.20108,   0.00000, 0.00000, 310.23361);
	CreateDynamicObject(2297, 1824.33875, -1290.26172, 119.21842,   0.00000, 0.00000, 48.41969);
	CreateDynamicObject(1726, 1829.59290, -1288.82495, 119.24940,   0.00000, 0.00000, 258.45880);
	// life destroyer offices
	CreateObject(630, 1789.52490, -1300.47498, 22.23700,   0.00000, 0.00000, 0.00000);
	CreateObject(630, 1784.22876, -1300.47498, 22.23700,   0.00000, 0.00000, 0.00000);
	CreateObject(2164, 1824.21497, -1308.90381, 21.20030,   0.00000, 0.00000, 90.00000);
	CreateObject(2164, 1824.21497, -1307.13245, 21.20030,   0.00000, 0.00000, 90.00000);
	CreateObject(2164, 1824.21497, -1300.93176, 21.20030,   0.00000, 0.00000, 90.00000);
	CreateObject(2164, 1824.21497, -1299.16675, 21.20030,   0.00000, 0.00000, 90.00000);
	CreateObject(2164, 1824.21497, -1292.90295, 21.20030,   0.00000, 0.00000, 90.00000);
	CreateObject(2164, 1824.21497, -1291.14685, 21.20030,   0.00000, 0.00000, 90.00000);
	CreateObject(2008, 1832.48792, -1310.42004, 21.20150,   0.00000, 0.00000, 0.00000);
	CreateObject(2008, 1829.05701, -1310.42004, 21.20146,   0.00000, 0.00000, 0.00000);
	CreateObject(2008, 1832.48792, -1306.69092, 21.20150,   0.00000, 0.00000, 0.00000);
	CreateObject(2008, 1829.05701, -1306.61975, 21.20150,   0.00000, 0.00000, 0.00000);
	CreateObject(2008, 1832.48792, -1302.60657, 21.20150,   0.00000, 0.00000, 0.00000);
	CreateObject(2008, 1829.05701, -1302.71460, 21.20150,   0.00000, 0.00000, 0.00000);
	CreateObject(2008, 1832.48792, -1298.48267, 21.20150,   0.00000, 0.00000, 0.00000);
	CreateObject(2008, 1829.05701, -1298.61157, 21.20150,   0.00000, 0.00000, 0.00000);
	CreateObject(2008, 1829.05701, -1290.48083, 21.20150,   0.00000, 0.00000, 0.00000);
	CreateObject(2008, 1832.48792, -1290.48083, 21.20150,   0.00000, 0.00000, 0.00000);
	CreateObject(2008, 1832.43176, -1286.33789, 21.20150,   0.00000, 0.00000, 0.00000);
	CreateObject(2008, 1828.99097, -1286.33789, 21.20150,   0.00000, 0.00000, 0.00000);
	CreateObject(2008, 1829.04663, -1282.16455, 21.20150,   0.00000, 0.00000, 0.00000);
	CreateObject(2008, 1832.47693, -1282.16455, 21.20150,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1829.90149, -1283.31885, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1833.26282, -1283.31885, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1829.76807, -1291.84595, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1833.26282, -1287.58215, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1833.01062, -1291.84595, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1829.88135, -1287.58215, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1833.26282, -1299.87756, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1833.26282, -1303.93616, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1833.26282, -1311.66125, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1833.26282, -1307.95435, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1829.97314, -1299.87756, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1829.76807, -1303.93616, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1829.76917, -1311.66125, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1806, 1829.76807, -1307.95435, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1703, 1821.90088, -1271.36328, 21.20195,   0.00000, 0.00000, 0.00000);
	CreateObject(1703, 1825.34595, -1271.36328, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(1703, 1828.69128, -1271.36328, 21.20200,   0.00000, 0.00000, 0.00000);
	CreateObject(630, 1820.99341, -1271.35535, 22.23700,   0.00000, 0.00000, 0.00000);
	CreateObject(630, 1831.82043, -1271.31921, 22.23700,   0.00000, 0.00000, 0.00000);
	CreateObject(1775, 1817.99207, -1290.83704, 22.30200,   0.00000, 0.00000, 270.00000);
	CreateObject(1775, 1817.99207, -1292.04004, 22.30200,   0.00000, 0.00000, 270.00000);
	CreateObject(1808, 1818.29309, -1294.35974, 21.20290,   0.00000, 0.00000, 270.00000);
	CreateObject(1808, 1818.29309, -1295.60803, 21.20290,   0.00000, 0.00000, 270.00000);
	CreateObject(1753, 1817.95691, -1298.14502, 21.20240,   0.00000, 0.00000, 270.00000);
	CreateObject(1753, 1817.07690, -1301.07996, 21.20240,   0.00000, 0.00000, 180.00000);
	CreateObject(630, 1818.04846, -1301.01477, 22.23700,   0.00000, 0.00000, 0.00000);
	CreateObject(19397, 1778.83362, -1303.01807, 22.82100,   0.00000, 0.00000, 0.00000);
	CreateObject(19369, 1778.83362, -1299.85876, 22.82100,   0.00000, 0.00000, 0.00000);
	CreateObject(19369, 1778.83362, -1296.66125, 22.82100,   0.00000, 0.00000, 0.00000);
	CreateObject(19369, 1778.83362, -1306.21936, 22.82100,   0.00000, 0.00000, 0.00000);
	CreateObject(19369, 1778.83362, -1309.41846, 22.82100,   0.00000, 0.00000, 0.00000);
	CreateObject(19369, 1778.83362, -1309.41846, 26.32520,   0.00000, 0.00000, 0.00000);
	CreateObject(19369, 1778.83362, -1306.21936, 26.32520,   0.00000, 0.00000, 0.00000);
	CreateObject(19369, 1778.83362, -1303.03882, 26.32520,   0.00000, 0.00000, 0.00000);
	CreateObject(19369, 1778.83362, -1299.85876, 26.32520,   0.00000, 0.00000, 0.00000);
	CreateObject(19369, 1778.83362, -1296.66125, 26.32520,   0.00000, 0.00000, 0.00000);
	CreateObject(1502, 1778.87659, -1303.76575, 21.06390,   0.00000, 0.00000, 90.00000);
	CreateObject(2200, 1772.71960, -1298.14160, 21.18980,   0.00000, 0.00000, 24.00000);
	CreateObject(2164, 1774.77466, -1297.24683, 21.20490,   0.00000, 0.00000, 24.00000);
	CreateObject(2166, 1774.23352, -1303.01453, 21.20420,   0.00000, 0.00000, 180.00000);
	CreateObject(2165, 1774.22241, -1301.05396, 21.20330,   0.00000, 0.00000, 270.00000);
	CreateObject(1714, 1772.80750, -1302.16785, 21.18450,   0.00000, 0.00000, 90.00000);
	CreateObject(1721, 1775.95642, -1302.58948, 21.20410,   0.00000, 0.00000, 90.00000);
	CreateObject(640, 1798.31348, -1303.11523, 21.90300,   0.00000, 0.00000, 90.00000);
	CreateObject(640, 1779.29956, -1298.21472, 21.90300,   0.00000, 0.00000, 0.00000);
	CreateObject(640, 1779.29956, -1307.67468, 21.90300,   0.00000, 0.00000, 0.00000);
	CreateObject(1361, 1794.78320, -1303.16882, 21.94740,   0.00000, 0.00000, 0.00000);
	CreateObject(1361, 1801.86377, -1303.16882, 21.94740,   0.00000, 0.00000, 0.00000);
	CreateObject(19461, 1793.20251, -1295.98364, 14.11220,   0.00000, 0.00000, 90.00000);
	CreateObject(19397, 1792.00000, 3748.00000, -1294.00000,   0.00000, 0.00000, 0.00000);
	CreateObject(19397, 1786.78064, -1295.98364, 14.11220,   0.00000, 0.00000, 90.00000);
	CreateObject(19369, 1783.58447, -1295.98364, 14.11220,   0.00000, 0.00000, 90.00000);
	CreateObject(19369, 1780.39343, -1295.98364, 14.11220,   0.00000, 0.00000, 90.00000);
	CreateObject(19461, 1793.20251, -1295.98364, 17.62130,   0.00000, 0.00000, 90.00000);
	CreateObject(19369, 1786.78479, -1295.98364, 17.62130,   0.00000, 0.00000, 90.00000);
	CreateObject(19369, 1783.58447, -1295.98364, 17.62130,   0.00000, 0.00000, 90.00000);
	CreateObject(19369, 1780.39343, -1295.98364, 17.62130,   0.00000, 0.00000, 90.00000);
	CreateObject(19461, 1795.47192, -1301.20398, 14.11220,   0.00000, 0.00000, 270.00000);
	CreateObject(19461, 1796.66907, -1300.88281, 14.11220,   0.00000, 0.00000, 0.00000);
	CreateObject(19461, 1796.66907, -1300.88281, 17.62130,   0.00000, 0.00000, 0.00000);
	CreateObject(19461, 1795.47192, -1301.20398, 17.62130,   0.00000, 0.00000, 270.00000);
	CreateObject(19461, 1779.90234, -1301.21997, 14.11220,   0.00000, 0.00000, 270.00000);
	CreateObject(19461, 1781.15820, -1300.86768, 14.11220,   0.00000, 0.00000, 0.00000);
	CreateObject(19461, 1779.90234, -1301.21997, 17.62130,   0.00000, 0.00000, 270.00000);
	CreateObject(19461, 1781.15820, -1300.86768, 17.62130,   0.00000, 0.00000, 0.00000);
	CreateObject(1491, 1786.00195, -1295.99475, 12.36570,   0.00000, 0.00000, 0.00000);
	CreateObject(1256, 1795.13184, -1295.26367, 13.08830,   0.00000, 0.00000, 270.00000);
	CreateObject(1256, 1791.46973, -1295.26367, 13.08830,   0.00000, 0.00000, 270.00000);
	CreateObject(644, 1788.70422, -1295.23315, 12.75230,   0.00000, 0.00000, 50.00000);
	CreateObject(644, 1784.98376, -1295.23315, 12.75230,   0.00000, 0.00000, 50.00000);
	CreateObject(638, 1781.57300, -1297.42236, 12.99860,   0.00000, 0.00000, 0.00000);
	CreateObject(638, 1796.22632, -1297.41016, 12.99860,   0.00000, 0.00000, 0.00000);
	CreateObject(1702, 1795.38477, -1299.31934, 12.42530,   0.00000, 0.00000, 220.00000);
	CreateObject(1216, 1782.58740, -1295.27063, 13.05400,   0.00000, 0.00000, 180.00000);
	CreateObject(1216, 1781.13550, -1295.27063, 13.05400,   0.00000, 0.00000, 180.00000);
	CreateObject(1215, 1787.86987, -1295.52625, 12.97220,   0.00000, 0.00000, 0.00000);
	CreateObject(1215, 1785.70850, -1295.46826, 12.97220,   0.00000, 0.00000, 0.00000);
	CreateObject(3660, 1794.73059, -1311.53674, 22.87850,   0.00000, 0.00000, 0.00000);
	CreateObject(3660, 1822.50745, -1317.56116, 22.87850,   0.00000, 0.00000, 0.00000);
	// ld office end
	// projects
	CreateObject(19394, 1007.58002, -992.32001, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19457, 1007.67999, -987.41998, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(2948, 1003.83002, -987.45001, 1000.48999, 0.00000, 0.00000, -90.00000);
	CreateObject(2948, 1001.90997, -987.46002, 1000.48999, 0.00000, 0.00000, 90.00000);
	CreateObject(19457, 998.04999, -987.41998, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(19394, 998.15002, -992.32001, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19378, 997.62000, -992.32001, 1000.40997, 0.00000, 90.00000, 0.00000);
	CreateObject(19378, 1008.12000, -992.32001, 1000.40997, 0.00000, 90.00000, 0.00000);
	CreateObject(19378, 1008.10883, -1001.95001, 1000.40997, 0.00000, 90.00000, 0.00000);
	CreateObject(19378, 997.62000, -1001.95001, 1000.40997, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1008.12000, -992.32001, 1004.09003, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 997.62000, -992.32001, 1004.09003, 0.00000, 90.00000, 0.00000);
	CreateObject(19457, 993.41998, -997.04999, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(19365, 1009.09998, -993.84003, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(19365, 998.09003, -992.32001, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19365, 1007.64001, -992.32001, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19394, 1010.78998, -995.53003, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19365, 998.15002, -995.53003, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19365, 1007.58002, -989.10999, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19365, 998.15002, -989.10999, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19394, 998.04999, -1000.42999, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(19394, 1007.67999, -1000.42999, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(19365, 1001.26001, -1000.42999, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(19365, 1004.46997, -1003.64001, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(19365, 1010.89001, -1000.42999, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(19365, 996.53003, -1001.95001, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19365, 994.84003, -1003.64001, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(19365, 993.15002, -1001.95001, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19394, 993.15002, -998.73999, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 997.62000, -1001.95001, 1004.09003, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1008.12000, -1001.95001, 1004.09003, 0.00000, 90.00000, 0.00000);
	CreateObject(19365, 1002.86499, -997.04999, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(19365, 1001.34003, -995.53003, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19365, 1004.39001, -995.53003, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19365, 1002.86499, -994.01001, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(1498, 998.17999, -993.06000, 1000.48999, 0.00000, 0.00000, 90.00000);
	CreateObject(1498, 1006.90002, -1000.42999, 1000.48999, 0.00000, 0.00000, 0.00000);
	CreateObject(19394, 1012.58002, -998.73999, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19365, 1012.64001, -998.73999, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19365, 1007.67999, -1000.48999, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(19365, 998.04999, -1000.48999, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(19365, 993.09003, -998.73999, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(1498, 1007.58002, -993.06000, 1000.48999, 0.00000, 0.00000, 90.00000);
	CreateObject(1498, 993.17999, -999.47998, 1000.48999, 0.00000, 0.00000, 90.00000);
	CreateObject(1498, 1010.78998, -996.27002, 1000.48999, 0.00000, 0.00000, 90.00000);
	CreateObject(1498, 997.27002, -1000.42999, 1000.48999, 0.00000, 0.00000, 0.00000);
	CreateObject(1372, 994.84003, -1003.09998, 1000.59998, 0.00000, 0.00000, 180.00000);
	CreateObject(2673, 994.09003, -1001.92999, 1000.59003, 0.00000, 0.00000, 0.00000);
	CreateObject(2672, 994.65002, -1002.16998, 1000.77002, 0.00000, 0.00000, 0.00000);
	CreateObject(2671, 995.45001, -1002.31000, 1000.50000, 0.00000, 0.00000, 0.00000);
	CreateObject(924, 996.00000, -1003.09003, 1000.69000, 0.00000, 0.00000, 0.00000);
	CreateObject(926, 993.56000, -1003.26001, 1000.75000, 0.00000, 0.00000, 0.00000);
	CreateObject(19365, 1012.31000, -997.04999, 1002.25000, 0.00000, 0.00000, 90.00000);
	CreateObject(19365, 1010.84998, -995.53003, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(1498, 1012.58002, -999.47998, 1000.48999, 0.00000, 0.00000, 90.00000);
	CreateObject(19365, 1006.15997, -1001.95001, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(19365, 1002.78003, -1001.95001, 1002.25000, 0.00000, 0.00000, 0.00000);
	CreateObject(1712, 1004.82001, -1002.97998, 1000.48999, 0.00000, 0.00000, 180.00000);
	CreateObject(1712, 1005.56000, -1000.58002, 1000.48999, 0.00000, 0.00000, -90.00000);
	CreateObject(1516, 1003.92999, -1001.28003, 1000.69000, 0.00000, 0.00000, 0.00000);
	CreateObject(1670, 1003.92999, -1001.23999, 1001.22998, 0.00000, 0.00000, 0.00000);
	CreateObject(2671, 1001.76990, -990.58990, 1000.51001, 0.00000, 0.00000, 0.00000);
	CreateObject(2673, 1004.20001, -1001.77002, 1000.59998, 0.00000, 0.00000, 90.00000);
	CreateObject(3785, 1004.59003, -995.53003, 1003.53998, 0.00000, 0.00000, 0.00000);
	CreateObject(3785, 1002.86499, -993.81000, 1003.53998, 0.00000, 0.00000, 90.00000);
	CreateObject(3785, 1001.14001, -995.53003, 1003.53998, 0.00000, 0.00000, 180.00000);
	CreateObject(3785, 1002.86499, -997.25000, 1003.53998, 0.00000, 0.00000, -90.00000);
	CreateObject(1338, 995.53998, -1000.84003, 1001.17999, 0.00000, 0.00000, 20.00000);
	CreateObject(3785, 1004.46997, -1003.44000, 1003.53998, 0.00000, 0.00000, 90.00000);
	CreateObject(3785, 994.84003, -1003.44000, 1003.53998, 0.00000, 0.00000, 90.00000);
	CreateObject(3785, 1002.86499, -987.62000, 1003.53998, 0.00000, 0.00000, -90.00000);
	CreateObject(1440, 1002.85999, -993.12000, 1001.01001, 0.00000, 0.00000, 180.00000);
	CreateObject(1582, 1003.96002, -992.79999, 1000.48999, 0.00000, 0.00000, 0.00000);
	CreateObject(2676, 1005.85999, -998.42999, 1000.60999, 0.00000, 0.00000, 0.00000);
	CreateObject(2670, 1006.03998, -993.42999, 1000.59003, 0.00000, 0.00000, 0.00000);
	CreateObject(2677, 1005.84003, -988.88000, 1000.77002, 0.00000, 0.00000, 0.00000);
	CreateObject(18101, 998.39502, -999.40161, 1000.50000, 0.00000, 0.00000, 90.00000);
	CreateObject(18100, 1007.33002, -997.46002, 1000.50000, 0.00000, 0.00000, 0.00000);
	CreateObject(2674, 1003.85999, -1001.07001, 1000.51001, 0.00000, 0.00000, 0.00000);
	CreateObject(1527, 1004.47998, -995.66998, 1002.04999, 20.00000, 0.00000, 180.00000);
	// projects
	CreateDynamicObject(14602,1417.50000000,-1024.50000000,3428.00000000,0.00000000,0.00000000,0.00000000); //object(paperchase01) (1)
	CreateDynamicObject(19450,1414.00000000,-1024.90002441,3424.30004883,0.00000000,0.00000000,0.00000000); //object(cs_detrok10) (1)
	CreateDynamicObject(19450,1413.62902832,-1028.80004883,3424.30004883,0.00000000,0.00000000,270.00000000); //object(cs_detrok10) (7)
	CreateDynamicObject(19450,1413.62902832,-1020.79998779,3424.30004883,0.00000000,0.00000000,270.00000000); //object(cs_detrok10) (8)
	CreateDynamicObject(19450,1408.90002441,-1033.59997559,3424.30004883,0.00000000,0.00000000,0.00000000); //object(cs_detrok10) (9)
	CreateDynamicObject(19450,1404.30004883,-1038.40002441,3424.30004883,0.00000000,0.00000000,270.00000000); //object(cs_detrok10) (10)
    CreateDynamicObject(19450,1394.69995117,-1038.40002441,3424.30004883,0.00000000,0.00000000,270.00000000); //object(cs_detrok10) (11)
    CreateDynamicObject(19450,1408.90002441,-1016.00000000,3424.30004883,0.00000000,0.00000000,0.00000000); //object(cs_detrok10) (12)
    CreateDynamicObject(19450,1404.19995117,-1010.59997559,3424.30004883,0.00000000,0.00000000,270.00000000); //object(cs_detrok10) (13)
    CreateDynamicObject(19450,1394.59997559,-1010.59997559,3424.30004883,0.00000000,0.00000000,270.00000000); //object(cs_detrok10) (14)
    CreateDynamicObject(19450,1394.69995117,-1033.59997559,3424.30004883,0.00000000,0.00000000,0.00000000); //object(cs_detrok10) (15)
    CreateDynamicObject(19450,1394.69995117,-1024.00000000,3424.30004883,0.00000000,0.00000000,0.00000000); //object(cs_detrok10) (16)
    CreateDynamicObject(19450,1394.69995117,-1014.40002441,3424.30004883,0.00000000,0.00000000,0.00000000); //object(cs_detrok10) (17)
    CreateDynamicObject(19379,1416.40002441,-1024.30004883,3422.60009766,0.00000000,90.00000000,0.00000000); //object(sfw_boxwest12) (2)
    CreateDynamicObject(19379,1405.90002441,-1024.30004883,3422.60009766,0.00000000,90.00000000,0.00000000); //object(sfw_boxwest12) (3)
    CreateDynamicObject(19379,1405.90002441,-1014.70001221,3422.60009766,0.00000000,90.00000000,0.00000000); //object(sfw_boxwest12) (4)
    CreateDynamicObject(19379,1395.40002441,-1014.70001221,3422.60009766,0.00000000,90.00000000,0.00000000); //object(sfw_boxwest12) (5)
    CreateDynamicObject(19379,1395.39941406,-1024.29980469,3422.60009766,0.00000000,90.00000000,0.00000000); //object(sfw_boxwest12) (6)
    CreateDynamicObject(19379,1395.39941406,-1033.89941406,3422.60009766,0.00000000,90.00000000,0.00000000); //object(sfw_boxwest12) (7)
    CreateDynamicObject(19379,1405.90002441,-1033.90002441,3422.60009766,0.00000000,90.00000000,0.00000000); //object(sfw_boxwest12) (8)
    CreateDynamicObject(19377,1416.19995117,-1024.40002441,3425.80004883,0.00000000,90.00000000,0.00000000); //object(freight_interiorsfw) (3)
    CreateDynamicObject(19377,1405.69995117,-1024.40002441,3425.80004883,0.00000000,90.00000000,0.00000000); //object(freight_interiorsfw) (4)
    CreateDynamicObject(19377,1405.69995117,-1014.79998779,3425.80004883,0.00000000,90.00000000,0.00000000); //object(freight_interiorsfw) (5)
    CreateDynamicObject(19377,1395.19995117,-1014.79998779,3425.80004883,0.00000000,90.00000000,0.00000000); //object(freight_interiorsfw) (6)
    CreateDynamicObject(19377,1395.19995117,-1024.40002441,3425.80004883,0.00000000,90.00000000,0.00000000); //object(freight_interiorsfw) (7)
    CreateDynamicObject(19377,1395.19995117,-1034.00000000,3425.80004883,0.00000000,90.00000000,0.00000000); //object(freight_interiorsfw) (8)
    CreateDynamicObject(19377,1405.69995117,-1034.00000000,3425.80004883,0.00000000,90.00000000,0.00000000); //object(freight_interiorsfw) (9)
    CreateDynamicObject(14602,1417.59960938,-1024.79980469,3420.39990234,0.00000000,179.99450684,179.99450684); //object(paperchase01) (2)
    CreateDynamicObject(19450,1408.90002441,-1006.40002441,3424.30004883,0.00000000,0.00000000,0.00000000); //object(cs_detrok10) (19)
    CreateDynamicObject(19431,1405.50000000,-1027.79980469,3424.30004883,0.00000000,0.00000000,270.00000000); //object(cs_landbit_48_a) (1)
    CreateDynamicObject(19431,1406.21398926,-1028.59997559,3424.30004883,0.00000000,0.00000000,0.00000000); //object(cs_landbit_48_a) (2)
    CreateDynamicObject(19431,1404.78601074,-1028.59997559,3424.30004883,0.00000000,0.00000000,0.00000000); //object(cs_landbit_48_a) (3)
    CreateDynamicObject(19431,1405.50000000,-1021.71289062,3424.30004883,0.00000000,0.00000000,270.00000000); //object(cs_landbit_48_a) (4)
    CreateDynamicObject(19431,1406.21386719,-1021.00000000,3424.30004883,0.00000000,0.00000000,0.00000000); //object(cs_landbit_48_a) (5)
    CreateDynamicObject(19431,1404.78515625,-1021.00000000,3424.30004883,0.00000000,0.00000000,0.00000000); //object(cs_landbit_48_a) (6)
    CreateDynamicObject(19431,1405.50000000,-1029.39941406,3424.30004883,0.00000000,0.00000000,270.00000000); //object(cs_landbit_48_a) (7)
    CreateDynamicObject(19431,1405.50000000,-1020.20001221,3424.30004883,0.00000000,0.00000000,270.00000000); //object(cs_landbit_48_a) (8)
    CreateDynamicObject(1569,1413.90002441,-1021.29998779,3422.69995117,0.00000000,0.00000000,270.00000000); //object(adam_v_door) (1)
    CreateDynamicObject(1569,1413.90002441,-1025.30004883,3422.69995117,0.00000000,0.00000000,270.00000000); //object(adam_v_door) (4)
    CreateDynamicObject(1569,1413.90600586,-1028.30004883,3422.69995117,0.00000000,0.00000000,90.00000000); //object(adam_v_door) (5)
    CreateDynamicObject(1569,1413.90600586,-1024.30004883,3422.69995117,0.00000000,0.00000000,90.00000000); //object(adam_v_door) (6)
    CreateDynamicObject(18608,1396.19921875,-1024.00000000,3426.69995117,0.00000000,0.00000000,0.00000000); //object(counts_lights01) (1)
    CreateDynamicObject(18608,1405.59997559,-1024.09997559,3426.69995117,0.00000000,0.00000000,0.00000000); //object(counts_lights01) (2)
    CreateDynamicObject(18608,1412.50000000,-1024.19995117,3426.69995117,0.00000000,0.00000000,0.00000000); //object(counts_lights01) (3)
    CreateDynamicObject(19466,1398.50000000,-1037.19995117,3424.50000000,0.00000000,0.00000000,180.00000000); //object(lod_liberty06) (1)
    CreateDynamicObject(19466,1398.50000000,-1035.00000000,3425.00000000,0.00000000,0.00000000,180.49450684); //object(lod_liberty06) (2)
    CreateDynamicObject(19466,1398.50000000,-1032.80004883,3424.50000000,0.00000000,0.00000000,179.99450684); //object(lod_liberty06) (3)
    CreateDynamicObject(19466,1398.50000000,-1030.59997559,3425.00000000,0.00000000,0.00000000,179.99450684); //object(lod_liberty06) (4)
    CreateDynamicObject(19466,1398.50000000,-1028.39941406,3424.50000000,0.00000000,0.00000000,179.99450684); //object(lod_liberty06) (5)
    CreateDynamicObject(19466,1398.50000000,-1011.79998779,3424.50000000,0.00000000,0.00000000,179.99450684); //object(lod_liberty06) (6)
    CreateDynamicObject(19466,1398.50000000,-1014.00000000,3425.00000000,0.00000000,0.00000000,179.99450684); //object(lod_liberty06) (7)
    CreateDynamicObject(19466,1398.50000000,-1016.20001221,3424.50000000,0.00000000,0.00000000,179.99450684); //object(lod_liberty06) (8)
    CreateDynamicObject(19466,1398.50000000,-1018.40002441,3425.00000000,0.00000000,0.00000000,179.99450684); //object(lod_liberty06) (9)
    CreateDynamicObject(19466,1398.50000000,-1020.59960938,3424.50000000,0.00000000,0.00000000,179.99450684); //object(lod_liberty06) (10)
    CreateDynamicObject(16101,1398.50000000,-1033.90002441,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (1)
    CreateDynamicObject(16101,1398.50000000,-1036.09960938,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (2)
    CreateDynamicObject(16101,1398.50000000,-1038.30004883,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (3)
    CreateDynamicObject(16101,1398.50000000,-1031.69995117,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (4)
    CreateDynamicObject(16101,1398.50000000,-1029.50000000,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (5)
    CreateDynamicObject(16101,1398.50000000,-1027.30004883,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (6)
    CreateDynamicObject(16101,1398.50000000,-1021.69921875,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (7)
    CreateDynamicObject(16101,1398.50000000,-1019.50000000,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (8)
    CreateDynamicObject(16101,1398.50000000,-1017.29998779,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (9)
    CreateDynamicObject(16101,1398.50000000,-1015.09997559,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (10)
    CreateDynamicObject(16101,1398.50000000,-1012.90002441,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (11)
    CreateDynamicObject(16101,1398.50000000,-1010.70001221,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (12)
    CreateDynamicObject(2369,1397.80004883,-1013.79998779,3423.55004883,0.00000000,0.00000000,90.00000000); //object(cj_till) (1)
    CreateDynamicObject(2369,1397.80004883,-1018.20001221,3423.55004883,0.00000000,0.00000000,90.00000000); //object(cj_till) (2)
    CreateDynamicObject(2369,1397.80004883,-1030.30004883,3423.55004883,0.00000000,0.00000000,90.00000000); //object(cj_till) (3)
    CreateDynamicObject(2369,1397.80004883,-1034.69995117,3423.55004883,0.00000000,0.00000000,90.00000000); //object(cj_till) (4)
    CreateDynamicObject(1892,1413.40002441,-1024.30004883,3422.69995117,0.00000000,0.00000000,270.00000000); //object(security_gatsh) (1)
    CreateDynamicObject(1892,1413.40002441,-1028.69995117,3422.69995117,0.00000000,0.00000000,270.00000000); //object(security_gatsh) (2)
    CreateDynamicObject(1892,1413.30004883,-1019.90002441,3422.69995117,0.00000000,0.00000000,270.00000000); //object(security_gatsh) (3)
    CreateDynamicObject(2942,1408.40002441,-1033.09997559,3423.30004883,0.00000000,0.00000000,270.00000000); //object(kmb_atm1) (1)
    CreateDynamicObject(2942,1408.40002441,-1035.59997559,3423.30004883,0.00000000,0.00000000,270.00000000); //object(kmb_atm1) (2)
    CreateDynamicObject(1671,1400.40002441,-1024.59997559,3423.10009766,0.00000000,0.00000000,90.00000000); //object(swivelchair_a) (1)
    CreateDynamicObject(2165,1395.30004883,-1025.50000000,3422.69995117,0.00000000,0.00000000,90.00000000); //object(med_office_desk_1) (1)
    CreateDynamicObject(2165,1400.50000000,-1026.80004883,3422.56689453,0.00000000,0.00000000,208.99804688); //object(med_office_desk_1) (2)
    CreateDynamicObject(2165,1399.50000000,-1022.09997559,3422.56689453,0.00000000,0.00000000,341.74291992); //object(med_office_desk_1) (3)
    CreateDynamicObject(1671,1399.50000000,-1026.09997559,3423.10009766,0.00000000,0.00000000,30.00000000); //object(swivelchair_a) (2)
    CreateDynamicObject(1671,1396.19995117,-1024.90002441,3423.10009766,0.00000000,0.00000000,271.99816895); //object(swivelchair_a) (3)
    CreateDynamicObject(16101,1401.00000000,-1023.00000000,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (7)
    CreateDynamicObject(16101,1401.09997559,-1026.09997559,3417.00000000,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (7)
    CreateDynamicObject(1811,1408.30004883,-1019.29998779,3423.30004883,0.00000000,0.00000000,0.00000000); //object(med_din_chair_5) (1)
    CreateDynamicObject(1811,1408.30004883,-1018.50000000,3423.30004883,0.00000000,0.00000000,0.00000000); //object(med_din_chair_5) (2)
    CreateDynamicObject(1811,1408.30004883,-1017.70001221,3423.30004883,0.00000000,0.00000000,0.00000000); //object(med_din_chair_5) (3)
    CreateDynamicObject(1811,1408.30004883,-1016.90002441,3423.30004883,0.00000000,0.00000000,0.00000000); //object(med_din_chair_5) (4)
    CreateDynamicObject(1811,1408.30004883,-1014.70001221,3423.30004883,0.00000000,0.00000000,0.00000000); //object(med_din_chair_5) (5)
    CreateDynamicObject(1811,1408.30004883,-1013.90002441,3423.30004883,0.00000000,0.00000000,0.00000000); //object(med_din_chair_5) (6)
    CreateDynamicObject(1811,1408.30004883,-1013.09997559,3423.30004883,0.00000000,0.00000000,0.00000000); //object(med_din_chair_5) (7)
    CreateDynamicObject(1811,1408.30004883,-1012.29998779,3423.30004883,0.00000000,0.00000000,0.00000000); //object(med_din_chair_5) (8)
    CreateDynamicObject(16101,1399.50000000,-1034.19995117,3412.69995117,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (7)
    CreateDynamicObject(16101,1399.50000000,-1035.59997559,3412.69995117,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (7)
    CreateDynamicObject(16101,1399.50000000,-1031.30004883,3412.69995117,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (7)
    CreateDynamicObject(16101,1399.50000000,-1029.90002441,3412.69995117,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (7)
    CreateDynamicObject(16101,1399.59997559,-1017.70001221,3412.69995117,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (7)
    CreateDynamicObject(16101,1399.59997559,-1019.09997559,3412.69995117,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (7)
    CreateDynamicObject(16101,1399.59997559,-1014.59997559,3412.69995117,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (7)
    CreateDynamicObject(16101,1399.59997559,-1013.29998779,3412.69995117,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (7)
    CreateDynamicObject(963,1405.59997559,-1021.79998779,3423.69995117,90.00000000,0.00000000,0.00000000); //object(cj_t_ticket) (1)
    CreateDynamicObject(1811,1402.69995117,-1037.80004883,3423.30004883,0.00000000,0.00000000,270.00000000); //object(med_din_chair_5) (9)
    CreateDynamicObject(1811,1403.50000000,-1037.80004883,3423.30004883,0.00000000,0.00000000,270.00000000); //object(med_din_chair_5) (10)
    CreateDynamicObject(1811,1404.40002441,-1037.80004883,3423.30004883,0.00000000,0.00000000,270.00000000); //object(med_din_chair_5) (11)
    CreateDynamicObject(1811,1405.19995117,-1037.80004883,3423.30004883,0.00000000,0.00000000,270.00000000); //object(med_din_chair_5) (12)
    CreateDynamicObject(19431,1408.30004883,-1031.80004883,3424.30004883,0.00000000,0.00000000,270.00000000); //object(cs_landbit_48_a) (1)
    CreateDynamicObject(19431,1408.30004883,-1034.40002441,3424.30004883,0.00000000,0.00000000,270.00000000); //object(cs_landbit_48_a) (1)
    CreateDynamicObject(19431,1408.30004883,-1036.90002441,3424.30004883,0.00000000,0.00000000,270.00000000); //object(cs_landbit_48_a) (1)
    CreateDynamicObject(2811,1401.59997559,-1037.69995117,3422.69995117,0.00000000,0.00000000,320.00000000); //object(gb_romanpot01) (1)
    CreateDynamicObject(2811,1413.30004883,-1024.80004883,3422.69995117,0.00000000,0.00000000,259.99877930); //object(gb_romanpot01) (2)
    CreateDynamicObject(2811,1408.19995117,-1020.20001221,3422.69995117,0.00000000,0.00000000,259.99694824); //object(gb_romanpot01) (3)
    CreateDynamicObject(2811,1408.30004883,-1011.20001221,3422.69995117,0.00000000,0.00000000,259.99694824); //object(gb_romanpot01) (4)
    CreateDynamicObject(2811,1408.30004883,-1031.30004883,3422.69995117,0.00000000,0.00000000,55.99877930); //object(gb_romanpot01) (5)
    CreateDynamicObject(2811,1408.00000000,-1037.59997559,3422.69995117,0.00000000,0.00000000,249.99877930); //object(gb_romanpot01) (6)
    CreateDynamicObject(14632,1404.19995117,-1019.29998779,3422.60009766,0.00000000,0.00000000,0.00000000); //object(paperchase_bits2b) (1)
    CreateDynamicObject(14632,1404.20104980,-1019.30102539,3424.00097656,0.00000000,0.00000000,0.00000000); //object(paperchase_bits2b) (2)
    CreateDynamicObject(14632,1404.20104980,-1024.80102539,3424.00097656,0.00000000,0.00000000,0.00000000); //object(paperchase_bits2b) (3)
    CreateDynamicObject(14632,1404.19995117,-1024.80004883,3422.60009766,0.00000000,0.00000000,0.00000000); //object(paperchase_bits2b) (4)
    CreateDynamicObject(2634,1396.19995117,-1038.40002441,3424.19995117,0.00000000,0.00000000,0.00000000); //object(ab_vaultdoor) (1)
    CreateDynamicObject(2007,1395.30004883,-1028.69995117,3422.69995117,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (1)
    CreateDynamicObject(2007,1395.30004883,-1029.69995117,3422.69995117,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (2)
    CreateDynamicObject(2007,1395.30004883,-1030.69995117,3422.69995117,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (3)
    CreateDynamicObject(2007,1395.30004883,-1031.69995117,3422.69995117,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (4)
    CreateDynamicObject(2007,1395.30004883,-1032.69995117,3422.69995117,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (5)
    CreateDynamicObject(2007,1395.30004883,-1033.69995117,3422.69995117,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (6)
    CreateDynamicObject(2007,1395.30004883,-1033.69995117,3424.10009766,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (7)
    CreateDynamicObject(2007,1395.30004883,-1032.69995117,3424.10009766,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (8)
    CreateDynamicObject(2007,1395.30004883,-1031.69995117,3424.10009766,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (9)
    CreateDynamicObject(2007,1395.30004883,-1030.69995117,3424.10009766,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (10)
    CreateDynamicObject(2007,1395.30004883,-1029.69995117,3424.10009766,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (11)
    CreateDynamicObject(2007,1395.30004883,-1028.69995117,3424.10009766,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (12)
    CreateDynamicObject(2007,1395.3,-1027.7, 3422.7,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (12)
    CreateDynamicObject(2007,1395.3,-1027.7, 3424.1,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (12)
    CreateDynamicObject(2165,1401.39941406,-1024.00000000,3422.56689453,0.00000000,0.00000000,277.99804688); //object(med_office_desk_1) (4)
    CreateDynamicObject(1671,1399.50000000,-1023.29980469,3423.10009766,0.00000000,0.00000000,155.99487305); //object(swivelchair_a) (4)

	/* --- East Los Angeles (Donated) --- */
	
    //Ground
    new bground = CreateDynamicObject(8661, 2518.53516, -1506.96326, 22.35360,   -5.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(bground, 0, 17862, "compomark_lae2", "Upt_Conc floorClean");
    bground = CreateDynamicObject(8661, 2518.56445, -1526.90918, 23.22360,   0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(bground, 0, 17862, "compomark_lae2", "Upt_Conc floorClean");
    bground = CreateDynamicObject(8661, 2518.56445, -1542.84631, 23.22460,   0.00000, 0.00000, -0.11800);
    SetDynamicObjectMaterial(bground, 0, 17862, "compomark_lae2", "Upt_Conc floorClean");

    //Walls
    new bwall = CreateDynamicObject(18981, 2511.03052, -1553.25122, 12.71953,   0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(bwall, 0, 17862, "compomark_lae2", "Upt_Conc floorClean");
    bwall = CreateDynamicObject(18981, 2526.10840, -1553.25220, 12.71850,   0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(bwall, 0, 17862, "compomark_lae2", "Upt_Conc floorClean");
    bwall = CreateDynamicObject(18981, 2538.10767, -1541.25330, 12.71950,   0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(bwall, 0, 17862, "compomark_lae2", "Upt_Conc floorClean");
    bwall = CreateDynamicObject(18981, 2538.10669, -1526.80713, 12.71850,   0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(bwall, 0, 17862, "compomark_lae2", "Upt_Conc floorClean");
    bwall = CreateDynamicObject(18981, 2499.03149, -1541.23486, 12.71850,   0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(bwall, 0, 17862, "compomark_lae2", "Upt_Conc floorClean");
    bwall = CreateDynamicObject(18981, 2499.03247, -1526.80713, 12.71950,   0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(bwall, 0, 17862, "compomark_lae2", "Upt_Conc floorClean");

    //Grass
    new bgrass = CreateDynamicObject(19373, 2500.98730, -1521.42590, 23.32940,   0.00000, 90.00000, 0.00000);
    SetDynamicObjectMaterial(bgrass, 0, 17862, "compomark_lae2", "grasstype7");
    bgrass = CreateDynamicObject(19373, 2500.98730, -1524.63574, 23.32940,   0.00000, 90.00000, 0.00000);
    SetDynamicObjectMaterial(bgrass, 0, 17862, "compomark_lae2", "grasstype7");
    bgrass = CreateDynamicObject(19373, 2500.98730, -1527.84583, 23.32940,   0.00000, 90.00000, 0.00000);
    SetDynamicObjectMaterial(bgrass, 0, 17862, "compomark_lae2", "grasstype7");
    bgrass = CreateDynamicObject(19373, 2500.98730, -1546.84583, 23.32940,   0.00000, 90.00000, 0.00000);
    SetDynamicObjectMaterial(bgrass, 0, 17862, "compomark_lae2", "grasstype7");
    bgrass = CreateDynamicObject(19373, 2500.98730, -1543.63574, 23.32940,   0.00000, 90.00000, 0.00000);
    SetDynamicObjectMaterial(bgrass, 0, 17862, "compomark_lae2", "grasstype7");
    bgrass = CreateDynamicObject(19373, 2500.98730, -1540.42590, 23.32940,   0.00000, 90.00000, 0.00000);
    SetDynamicObjectMaterial(bgrass, 0, 17862, "compomark_lae2", "grasstype7");
    bgrass = CreateDynamicObject(19373, 2513.16846, -1551.53101, 23.32940,   0.00000, 90.00000, 90.00000);
    SetDynamicObjectMaterial(bgrass, 0, 17862, "compomark_lae2", "grasstype7");
    bgrass = CreateDynamicObject(19373, 2516.38062, -1551.53101, 23.32940,   0.00000, 90.00000, 90.00000);
    SetDynamicObjectMaterial(bgrass, 0, 17862, "compomark_lae2", "grasstype7");
    bgrass = CreateDynamicObject(19373, 2519.56641, -1551.53101, 23.32840,   0.00000, 90.00000, 90.00000);
    SetDynamicObjectMaterial(bgrass, 0, 17862, "compomark_lae2", "grasstype7");

	CreateDynamicObject(19357, 2501.13892, -1519.90234, 21.66139,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19449, 2502.65454, -1524.63403, 21.66240,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19357, 2501.13892, -1529.37097, 21.66140,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19357, 2501.13892, -1548.37097, 21.66140,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19449, 2502.65454, -1543.63403, 21.66240,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19357, 2501.13892, -1538.90234, 21.66140,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19357, 2511.63892, -1551.37097, 21.66140,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19449, 2516.36768, -1549.85571, 21.66240,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19357, 2521.09692, -1551.37097, 21.66140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(12982, 2529.23218, -1535.03442, 27.52230,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(673, 2516.12622, -1551.47974, 22.86719,   356.85840, 0.00000, -2.27765);
	CreateDynamicObject(760, 2500.82104, -1526.10596, 23.33594,   3.14159, 0.00000, 0.66323);
	CreateDynamicObject(760, 2501.18677, -1521.89758, 23.33594,   3.14159, 0.00000, 0.66323);
	CreateDynamicObject(760, 2501.17456, -1541.10181, 23.33594,   3.14159, 0.00000, 0.66323);
	CreateDynamicObject(760, 2501.16724, -1546.57739, 23.33594,   3.14159, 0.00000, 0.66323);
	CreateDynamicObject(760, 2515.11401, -1551.57117, 23.33594,   3.14159, 0.00000, 0.66323);
	CreateDynamicObject(760, 2518.88867, -1551.53394, 23.33594,   3.14159, 0.00000, 0.66323);
	CreateDynamicObject(983, 2502.68677, -1524.59607, 24.09200,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(983, 2502.69946, -1543.58716, 24.09200,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(983, 2516.48071, -1549.82300, 24.09200,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19357, 2511.41333, -1530.50159, 21.48640,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2510.04028, -1529.70911, 21.48740,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2514.28296, -1530.50195, 21.48640,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19357, 2515.62744, -1529.72534, 21.48740,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19449, 2512.84814, -1529.04224, 21.48740,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 2511.41333, -1534.00159, 21.48640,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2510.04028, -1533.20911, 21.48740,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2514.28296, -1534.00195, 21.48740,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19357, 2515.62744, -1533.22534, 21.48640,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19357, 2514.28296, -1537.50195, 21.48740,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19357, 2514.28296, -1541.00195, 21.48740,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19357, 2515.62744, -1536.72534, 21.48640,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19357, 2515.62744, -1540.22534, 21.48640,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19357, 2511.41333, -1537.50159, 21.48640,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2511.41333, -1541.00159, 21.48640,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2510.04028, -1536.70911, 21.48740,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2510.04028, -1540.20911, 21.48740,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2511.41333, -1527.00159, 21.48640,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2514.28296, -1527.00195, 21.48640,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19357, 2510.04028, -1526.20911, 21.48740,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2515.62744, -1526.22534, 21.48740,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19357, 2510.04028, -1522.70911, 21.48740,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2511.41333, -1523.50159, 21.48640,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2514.28296, -1523.50195, 21.48640,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19357, 2515.62744, -1522.72534, 21.48740,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19449, 2512.84912, -1538.56421, 21.48840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 2511.41333, -1544.50159, 21.48640,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2510.04028, -1543.70911, 21.48740,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(19357, 2514.28296, -1544.50195, 21.48740,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19357, 2515.62744, -1543.72534, 21.48640,   0.00000, 0.00000, -60.00000);
	CreateDynamicObject(19449, 2512.84912, -1540.56421, 21.48940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 2512.86694, -1524.31738, 29.21165,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 2512.66919, -1545.21558, 29.21165,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1344, 2529.60791, -1521.74243, 24.02220,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1344, 2527.11304, -1521.69055, 24.02220,   0.00000, 0.00000, 180.00000);

	/* --- Hajaj Warehouses --- */
	
	CreateDynamicObject(2921, 2145.5, -2286.69995, 22.1, 0, 0, 0);
	CreateDynamicObject(2921, 2175.1001, -2257.1001, 18.1, 0, 0, 0);
	CreateDynamicObject(2190, 2129, -2275.3999, 20.5, 0, 0, 0);
	CreateDynamicObject(2921, 2239.1001, -2220.69995, 16, 0, 0, 0);
	CreateDynamicObject(2921, 2209.30005, -2286, 19.5, 0, 0, 0);
	CreateDynamicObject(2921, 2272.69995, -2265.5, 19.7, 0, 0, 0);
	CreateDynamicObject(2921, 2134.8999, -2280.80005, 23.1, 0, 0, 0);
	CreateDynamicObject(16779, 2122.6001, -2273.19995, 23.9, 0, 0, 0);
	CreateDynamicObject(16779, 2127.30005, -2277.80005, 23.9, 0, 0, 0);
	CreateDynamicObject(2921, 2182, -2251.80005, 17.7, 0, 0, 93);

	/* --- Tony's Liquor --- */
	
	CreateDynamicObject(1432, 2089.79980, -1911.09961, 12.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1432, 2089.80005, -1914.50000, 12.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1432, 2091.80005, -1902.09998, 12.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1432, 2095.39941, -1901.69922, 12.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(738, 2088.7998000, -1903.0000000, 12.6000000, 0.0000000, 0.0000000, 0.0000000); //object(aw_streettree2) (1)

	/* --- Missing Doors --- */
	
	CreateDynamicObject(1569, 967.5, -846.5, 94.4, 0, 0, 24.994);
	CreateDynamicObject(1569, 562.20001, -1115.80005, 61.8, 0, 0, 29.749);
	CreateDynamicObject(1569, 854.69922, -830.89941, 88.5, 0, 0, 24.999);
	CreateDynamicObject(1569, 826.09998, -925.09998, 54.2, 0, 0, 332.744);

	/* --- Highway --- */
	
	CreateDynamicObject(996, 1968.40002, -1475.80005, 13.3, 0, 0, 0);
	CreateDynamicObject(996, 1958.80005, -1475.80005, 13.3, 0, 0, 0);
	CreateDynamicObject(994, 1861.80005, -1483.19995, 12.5, 0, 0, 90);
	CreateDynamicObject(994, 1751.90002, -1488.80005, 13.8, 0, 10.25, 352.5);

	/* --- Market Street --- */

	CreateDynamicObject(983, 1306.69995, -1835.5, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1701.09998, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1707.5, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1713.90002, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1720.30005, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1726.69995, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1733.09998, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1739.5, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1745.90002, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1752.30005, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1758.69995, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1765.09998, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1771.5, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1777.90002, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1784.30005, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1790.69995, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1797.09998, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1803.5, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1809.90002, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1816.30005, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1822.69995, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1829.09998, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19922, -1835.5, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19922, -1694.69922, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1694.69922, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1701.09961, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1707.5, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1713.89941, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1720.2998, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1726.69922, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1733.09961, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1739.5, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1745.89941, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1752.2998, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1758.69922, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1765.09961, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1771.5, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1777.89941, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1784.2998, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1790.69922, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1797.09961, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1803.5, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1809.89941, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1816.2998, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1822.69922, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1829.09961, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1303.19995, -1688.30005, 13.2, 0, 0, 0);
	CreateDynamicObject(983, 1306.69922, -1688.2998, 13.2, 0, 0, 0);
	CreateDynamicObject(973, 1308.40002, -1549.5, 13.4, 0, 0, 262);
	CreateDynamicObject(973, 1309.19995, -1544.09998, 13.4, 0, 0, 261.246);
	CreateDynamicObject(973, 1308.39941, -1549.5, 13.4, 0, 0, 261.996);
	CreateDynamicObject(973, 1311.80005, -1534.59998, 13.4, 0, 0, 248.494);
	CreateDynamicObject(973, 1315.19995, -1526, 13.4, 0, 0, 248.489);
	CreateDynamicObject(973, 1320.59998, -1515.5, 13.4, 0, 0, 235.739);
	CreateDynamicObject(973, 1315.80005, -1524.5, 13.4, 0, 0, 248.489);
	CreateDynamicObject(973, 1325.80005, -1507.90002, 13.4, 0, 0, 235.734);
	CreateDynamicObject(973, 1328.5, -1504, 13.4, 0, 0, 235.234);
	CreateDynamicObject(973, 1333.80005, -1495.09998, 13.4, 0, 0, 242.728);
	CreateDynamicObject(973, 1338, -1487, 13.4, 0, 0, 242.476);
	CreateDynamicObject(973, 1340.59998, -1482, 13.4, 0, 0, 242.226);
	CreateDynamicObject(973, 1344.19995, -1472.09998, 13.4, 0, 0, 256.971);
	CreateDynamicObject(973, 1346.19995, -1463.30005, 13.4, 0, 0, 257.47);
	CreateDynamicObject(973, 1348.19995, -1454.40002, 13.4, 0, 0, 257.22);
	CreateDynamicObject(973, 1349.90002, -1443.59998, 13.4, 0, 0, 265.967);
	CreateDynamicObject(973, 1350.5, -1434.40002, 13.4, 0, 0, 266.463);
	CreateDynamicObject(973, 1351.09998, -1425.19995, 13.4, 0, 0, 265.963);
	CreateDynamicObject(973, 1351.40002, -1421.09998, 13.4, 0, 0, 265.963);
	CreateDynamicObject(973, 1305.09998, -1549.09998, 13.4, 0, 0, 82.25);
	CreateDynamicObject(973, 1305.80005, -1543.80005, 13.4, 0, 0, 82.249);
	CreateDynamicObject(973, 1308.59998, -1533.80005, 13.4, 0, 0, 68.989);
	CreateDynamicObject(973, 1311.69995, -1525.59998, 13.4, 0, 0, 69.489);
	CreateDynamicObject(973, 1312.69995, -1523, 13.4, 0, 0, 69.489);
	CreateDynamicObject(973, 1317.69995, -1513.80005, 13.4, 0, 0, 55.734);
	CreateDynamicObject(973, 1322.80005, -1506.30005, 13.4, 0, 0, 55.734);
	CreateDynamicObject(973, 1325.5, -1502.30005, 13.4, 0, 0, 56.234);
	CreateDynamicObject(973, 1330.80005, -1493.5, 13.4, 0, 0, 63.476);
	CreateDynamicObject(973, 1335, -1485.19995, 13.4, 0, 0, 62.974);
	CreateDynamicObject(973, 1337.19995, -1480.80005, 13.4, 0, 0, 63.468);
	CreateDynamicObject(973, 1340.80005, -1471.40002, 13.4, 0, 0, 77.47);
	CreateDynamicObject(973, 1342.69995, -1462.80005, 13.4, 0, 0, 77.47);
	CreateDynamicObject(973, 1344.69995, -1453.90002, 13.4, 0, 0, 77.47);
	CreateDynamicObject(973, 1346.5, -1443.09998, 13.4, 0, 0, 86.462);
	CreateDynamicObject(973, 1347.09998, -1434.19995, 13.4, 0, 0, 85.957);
	CreateDynamicObject(973, 1347.69995, -1425.59998, 13.4, 0, 0, 85.957);
	CreateDynamicObject(973, 1348, -1420.90002, 13.4, 0, 0, 86.457);
	CreateDynamicObject(618, 1350, -1419.59998, 12.4, 0, 0, 0);
	CreateDynamicObject(3522, 1350.5, -1419.40002, 12.6, 0, 0, 356.75);
	CreateDynamicObject(3522, 1349.09998, -1419.30005, 12.6, 0, 0, 176.75);
	CreateDynamicObject(759, 1349.69995, -1418, 12.7, 0, 0, 0);
	CreateDynamicObject(759, 1349.80005, -1421.40002, 12.7, 0, 0, 0);
	CreateDynamicObject(3522, 1305.5, -1839.19995, 12.6, 0, 0, 359.25);
	CreateDynamicObject(3522, 1304.09998, -1839.19995, 12.6, 0, 0, 179.5);
	CreateDynamicObject(759, 1304.69995, -1838, 12.7, 0, 0, 0);
	CreateDynamicObject(717, 1348.69995, -1436.5, 12.6, 0, 0, 355.75);
	CreateDynamicObject(717, 1344.69995, -1461.80005, 12.6, 0, 0, 347.498);
	CreateDynamicObject(717, 1335.69995, -1487.90002, 12.6, 0, 0, 332.498);
	CreateDynamicObject(717, 1323, -1508.59998, 12.6, 0, 0, 322.496);
	CreateDynamicObject(717, 1312.90002, -1527.59998, 12.6, 0, 0, 336.493);
	CreateDynamicObject(717, 1306.80005, -1547.59998, 12.6, 0, 0, 351.989);

	/* --- Skate park --- */

	CreateDynamicObject(4100, 1861.90002, -1381.80005, 14.2, 0, 0, 49.999);
	CreateDynamicObject(4100, 1885.69995, -1350.90002, 14.2, 0, 0, 139.999);
	CreateDynamicObject(4100, 1887.80005, -1350.90002, 14.2, 0, 0, 139.999);
	CreateDynamicObject(4100, 1861.90002, -1379.5, 14.2, 0, 0, 49.999);
	CreateDynamicObject(982, 1851.69995, -1056.69995, 23.8, 0, 0, 0);
	CreateDynamicObject(984, 1851.69995, -1037.5, 23.7, 0, 0, 0);
	CreateDynamicObject(982, 1851.69995, -1056.69995, 25.1, 0, 0, 0);
	CreateDynamicObject(982, 1851.69995, -1056.69995, 26.4, 0, 0, 0);
	CreateDynamicObject(984, 1851.69995, -1037.5, 25, 0, 0, 0);
	CreateDynamicObject(984, 1851.69995, -1037.5, 26.3, 0, 0, 0);
	CreateDynamicObject(983, 1957.5, -1450.90002, 13, 90, 180, 270);
	CreateDynamicObject(983, 1958.69995, -1450.90002, 13, 90, 179.995, 269.995);
	CreateDynamicObject(983, 1959.90002, -1450.90002, 13, 90, 180.005, 269.978);

	/* --- Santa Maria Pier --- */

	CreateDynamicObject(6976, 845.29999, -2069.80005, 3.2, 0, 0, 179.995);
	CreateDynamicObject(3406, 849.70001, -2069.19995, -1.5, 0, 0, 90);
	CreateDynamicObject(3406, 844.90002, -2073.1001, -1.5, 0, 0, 0);
	CreateDynamicObject(3406, 836.09998, -2073.1001, -1.5, 0, 0, 0);
	CreateDynamicObject(3406, 827.29999, -2073.1001, -1.5, 0, 0, 0);
	CreateDynamicObject(994, 820, -2067.8999, 12, 0, 0, 0);
	CreateDynamicObject(3406, 818.5, -2073.1001, -1.5, 0, 0, 0);
	CreateDynamicObject(994, 845.59998, -2067.69995, 12, 0, 0, 0);
	CreateDynamicObject(994, 829.19922, -2067.69922, 12, 0, 0, 0);
	CreateDynamicObject(994, 837.29999, -2067.69995, 12, 0, 0, 0);
	CreateDynamicObject(1215, 844.70001, -2067.69995, 12.5, 0, 0, 0);
	CreateDynamicObject(1215, 836.40002, -2067.69995, 12.5, 0, 0, 0);

	/* --- Blocks near gravyard --- */

	CreateDynamicObject(2669, 748.90002, -1131.69995, 24.7, 358.003, 356.748, 139.386);
	CreateDynamicObject(2991, 749.79999, -1125.59998, 24.3, 0, 0, 56);
	CreateDynamicObject(923, 753, -1122.80005, 24.6, 0, 0, 0);
	CreateDynamicObject(3632, 752.5, -1131, 23.8, 0, 0, 0);
	CreateDynamicObject(2679, 750, -1129.09998, 24.7, 2, 0, 262);
	CreateDynamicObject(2678, 751.29999, -1130.09998, 24.6, 0, 6, 0);
	CreateDynamicObject(1431, 748, -1132.5, 24, 0, 2.25, 2);

	/* --- Pizza Deliverer --- */
	
	CreateDynamicObject(1652, 2096.51, -1775.53, 13.23,   0.00, 0.00, 75.12);
	CreateDynamicObject(1652, 2096.51, -1775.53, 13.23,   0.00, 0.00, 180 + 75.12);
	CreateDynamicObject(1498, 2108.62, -1791.10, 12.30,   0.00, 0.00, 0.00);
	pizzaPickup = CreateDynamicPickup(1582, 23, 2109.2849, -1789.4512, 13.5608);

	/* --- Basketball Courts East Los Angeles --- */
	
	CreateDynamicObject(946, 2349.14185, -1257.94666, 28.96750,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(946, 2324.64185, -1257.94666, 28.96750,   0.00000, 0.00000, 268.00000);
	CreateDynamicObject(2114, 2349.76660, -1258.40369, 27.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2323.90015, -1254.50354, 28.20000,   0.00000, 0.00000, 89.50000);
	CreateDynamicObject(1412, 2323.92627, -1257.98218, 28.20000,   0.00000, 0.00000, 89.50000);
	CreateDynamicObject(1412, 2324.01221, -1260.58826, 28.20000,   0.00000, 0.00000, 89.50000);
	CreateDynamicObject(1412, 2326.58203, -1263.26062, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2331.79639, -1263.21643, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2342.81299, -1263.26038, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2350.41577, -1231.73364, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2350.67041, -1260.67773, 28.20000,   0.00000, 0.00000, 89.50000);
	CreateDynamicObject(1412, 2350.73389, -1254.46863, 28.20000,   0.00000, 0.00000, 89.50000);
	CreateDynamicObject(1412, 2350.61548, -1257.27307, 28.20000,   0.00000, 0.00000, 89.50000);
	CreateDynamicObject(1412, 2348.13159, -1251.91455, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2342.91284, -1251.94788, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2326.56543, -1251.83923, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2331.82568, -1251.86475, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1710, 2345.60718, -1266.02100, 26.97030,   0.00000, 0.00000, 180.50000);
	CreateDynamicObject(1710, 2341.18164, -1249.33167, 26.96969,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1710, 2332.27783, -1249.57275, 26.96969,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1710, 2327.04761, -1265.97754, 26.97030,   0.00000, 0.00000, 178.50000);
	CreateDynamicObject(1412, 2353.15942, -1229.10400, 28.20000,   0.00000, 0.00000, 89.50000);
	CreateDynamicObject(1412, 2353.19702, -1224.10010, 28.20000,   0.00000, 0.00000, 89.50000);
	CreateDynamicObject(1412, 2348.06982, -1263.35327, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2345.21411, -1231.77612, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2350.64282, -1221.49451, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2345.39136, -1221.47571, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2323.90161, -1229.02722, 28.20000,   0.00000, 0.00000, 89.50000);
	CreateDynamicObject(1412, 2323.93750, -1224.09448, 28.20000,   0.00000, 0.00000, 89.50000);
	CreateDynamicObject(1412, 2326.35352, -1231.81128, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2331.51782, -1231.82263, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2339.96069, -1231.80884, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2340.15967, -1221.48572, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2331.92944, -1221.49573, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, 2326.55664, -1221.41357, 28.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1368, 2344.23364, -1221.93420, 27.65000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1368, 2349.70947, -1221.86743, 27.65000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1368, 2344.23657, -1231.40002, 27.65000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1368, 2349.67041, -1231.33569, 27.65000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1712, 2352.75073, -1226.04199, 26.96780,   0.00000, 0.00000, 268.50000);
	CreateDynamicObject(1440, 2352.34985, -1223.74707, 27.47030,   0.00000, 0.00000, 269.50000);
	CreateDynamicObject(1440, 2352.36157, -1229.61511, 27.47030,   0.00000, 0.00000, 269.50000);
	CreateDynamicObject(1543, 2352.00000, -1228.01953, 26.97005,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1484, 2351.78174, -1228.23083, 27.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(946, 2324.66040, -1225.96790, 28.96980,   0.00000, 0.00000, 269.50000);
	CreateDynamicObject(2114, 2324.07227, -1225.55078, 27.05000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1810, 2351.82642, -1225.57129, 26.97190,   0.00000, 0.00000, -50.00000);

	/* --- Decoration Ganton --- */

	CreateDynamicObject(18014, 2270.69922, -1742.39941, 13, 0, 0, 90);
	CreateDynamicObject(18014, 2288.1001, -1742.30005, 13, 0, 0, 90);
	CreateDynamicObject(18014, 2339.5, -1742.39941, 13, 0, 0, 90);
	CreateDynamicObject(18014, 2357.80005, -1742.40002, 13, 0, 0, 90);
	CreateDynamicObject(1359, 2378.69995, -1742.30005, 13.2, 0, 0, 0);
	CreateDynamicObject(1359, 2247.80005, -1742.30005, 13.2, 0, 0, 0);
	CreateDynamicObject(673, 2389.1001, -1742.30005, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 2369.1001, -1742.30005, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 2348.69995, -1742.30005, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 2323.80005, -1742.19995, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 2303.69922, -1742.19922, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 2278.8999, -1742.19995, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 2258.19995, -1742.30005, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 2239, -1742.30005, 12.6, 0, 0, 0);
	CreateDynamicObject(673, 2226.1001, -1742.30005, 12.6, 0, 0, 0);
	CreateDynamicObject(1368, 2382.5, -1741.59998, 13.3, 0, 0, 180);
	CreateDynamicObject(1368, 2252.19995, -1743.09998, 13.2, 0, 0, 0);
	CreateDynamicObject(1368, 2374.5, -1742.90002, 13.3, 0, 0, 0);
	CreateDynamicObject(1368, 2374.5, -1741.59998, 13.3, 0, 0, 179.995);
	CreateDynamicObject(1368, 2252.19995, -1741.59998, 13.2, 0, 0, 179.995);
	CreateDynamicObject(1368, 2382.5, -1742.89941, 13.3, 0, 0, 0);
	CreateDynamicObject(1368, 2243.69995, -1741.59998, 13.2, 0, 0, 179.995);
	CreateDynamicObject(1368, 2243.69995, -1743.09998, 13.2, 0, 0, 0);
	CreateDynamicObject(18014, 2396.1001, -1742.30005, 13, 0, 0, 90);
	CreateDynamicObject(18014, 2232.5, -1742.30005, 13, 0, 0, 90);
	CreateDynamicObject(673, 2403.80005, -1742.40002, 12.5, 0, 0, 0);

	/* --- Decoration infront of Alhambra --- */

    CreateDynamicObject(9345, 1797.19995, -1633.09998, 12.4, 0, 0, 89.75);
    CreateDynamicObject(9345, 1787, -1625, 12.4, 0, 0, 0);
    CreateDynamicObject(9345, 1797.19995, -1637.69995, 12.4, 0, 0, 90.247);
    CreateDynamicObject(3532, 1799.40002, -1641.80005, 13.3, 0, 0, 2);
    CreateDynamicObject(3532, 1799.5, -1641.80005, 13.3, 0, 0, 180);
    CreateDynamicObject(3532, 1799.30005, -1637.19995, 13.3, 0, 0, 179.995);
    CreateDynamicObject(3532, 1799.19995, -1632.90002, 13.3, 0, 0, 179.995);
    CreateDynamicObject(3532, 1799.30005, -1629, 13.3, 0, 0, 179.995);
    CreateDynamicObject(3532, 1799.30005, -1627, 13.3, 0, 0, 179.995);
    CreateDynamicObject(3532, 1796.40002, -1625.40002, 13.2, 0, 0, 88);
    CreateDynamicObject(3532, 1794, -1625.59998, 13.2, 0, 0, 87.995);
    CreateDynamicObject(3532, 1789.69922, -1625.5, 13.2, 0, 0, 87.99);
    CreateDynamicObject(3532, 1787, -1625.5, 13.2, 0, 0, 87.995);
    CreateDynamicObject(3532, 1787, -1624.19995, 13.2, 0, 0, 87.995);
    CreateDynamicObject(3532, 1786.80005, -1622.80005, 13.2, 0, 0, 78.495);
    CreateDynamicObject(3532, 1790.69995, -1624.40002, 13.2, 0, 0, 78.492);
    CreateDynamicObject(3532, 1790.90002, -1623.90002, 13.2, 0, 0, 78.492);
    CreateDynamicObject(3532, 1793.59998, -1624.5, 13.2, 0, 0, 78.492);
    CreateDynamicObject(1359, 1810.69995, -1642.19995, 13.2, 0, 0, 0);
    CreateDynamicObject(1359, 1810.69995, -1672.19995, 13.2, 0, 0, 0);
    CreateDynamicObject(1359, 1810.69995, -1657.19995, 13.2, 0, 0, 0);
    CreateDynamicObject(3532, 1793.19995, -1623.90002, 13.2, 0, 0, 87.99);
    CreateDynamicObject(3532, 1791, -1623.09998, 13.2, 0, 0, 87.99);
    CreateDynamicObject(3532, 1788.09998, -1622.30005, 13.2, 0, 0, 87.99);
    CreateDynamicObject(3532, 1787.19995, -1622, 13.2, 0, 0, 77.99);
    CreateDynamicObject(3532, 1790.80005, -1622.90002, 13.2, 0, 0, 77.986);
    CreateDynamicObject(3532, 1792.90002, -1623.5, 13.2, 0, 0, 77.986);
    CreateDynamicObject(1368, 1810.80005, -1638.40002, 13.2, 0, 0, 90);
    CreateDynamicObject(1368, 1810.69995, -1645.80005, 13.2, 0, 0, 90);
    CreateDynamicObject(1368, 1810.69995, -1653.40002, 13.2, 0, 0, 90);
    CreateDynamicObject(1368, 1810.69995, -1660.90002, 13.2, 0, 0, 90);
    CreateDynamicObject(1368, 1810.69995, -1668.40002, 13.2, 0, 0, 90);
    CreateDynamicObject(1368, 1810.69995, -1675.80005, 13.2, 0, 0, 90);
    CreateDynamicObject(673, 1811, -1664.59998, 12.5, 0, 0, 0);
    CreateDynamicObject(673, 1811.09961, -1679.59961, 12.6, 0, 0, 0);
    CreateDynamicObject(673, 1811.09998, -1649.59998, 12.5, 0, 0, 0);
    CreateDynamicObject(673, 1811, -1634.59998, 12.5, 0, 0, 0);
    
    /* --- Barriers & Roadblocks --- */
    
    /*CreateDynamicObject(994, 1580.19995, -1753.59998, 12.8, 0, 0, 90);
	CreateDynamicObject(994, 1580.19995, -1761.19995, 12.8, 0, 0, 90);
	CreateDynamicObject(996, 1356, -1684.19995, 13.6, 0, 0, 0);
	CreateDynamicObject(996, 1355.89941, -1721.89941, 13.5, 0, 0, 0);
	CreateDynamicObject(996, 1355.80005, -1618.80005, 13.5, 0, 0, 0);
	CreateDynamicObject(996, 1359.80005, -1591.5, 13.5, 0, 0, 344);
	CreateDynamicObject(996, 1398.40002, -1450.80005, 13.6, 0, 0, 0);
	CreateDynamicObject(996, 1364.59961, -1572.7998, 13.5, 0, 0, 343.998);
	CreateDynamicObject(978, 1402.59998, -1411.40002, 13.4, 0, 0, 90);
	CreateDynamicObject(978, 1402.59998, -1420.69995, 13.4, 0, 0, 90);
	CreateDynamicObject(978, 1402.59998, -1430, 13.4, 0, 0, 90);
	CreateDynamicObject(978, 1402.59961, -1411.39941, 13.4, 0, 0, 90);
	CreateDynamicObject(978, 1415.19995, -1411.09998, 13.5, 0, 0, 270.247);
	CreateDynamicObject(996, 1407.90002, -1440.5, 13.5, 0, 0, 0);
	CreateDynamicObject(996, 1404.40002, -1401.19995, 13.5, 0, 0, 0);
	CreateDynamicObject(978, 1415.19995, -1420.40002, 13.5, 0, 0, 269.747);
	CreateDynamicObject(978, 1415.19995, -1429.69995, 13.5, 0, 0, 270.247);
	CreateDynamicObject(1215, 1412.30005, -1401.30005, 13.3, 0, 0, 0);
	CreateDynamicObject(1215, 1403.40002, -1401.19995, 13.3, 0, 0, 0);
	CreateDynamicObject(1215, 1415.69995, -1440.5, 13.3, 0, 0, 0);
	CreateDynamicObject(1215, 1415.30005, -1406.19995, 13.3, 0, 0, 0);
	CreateDynamicObject(1215, 1415.09998, -1434.80005, 13.3, 0, 0, 0);
	CreateDynamicObject(1215, 1402.5, -1406.40002, 13.3, 0, 0, 0);
	CreateDynamicObject(1215, 1402.59998, -1435, 13.3, 0, 0, 0);
	CreateDynamicObject(1215, 1406.90002, -1440.5, 13.3, 0, 0, 0);*/

	/* --- Decoration --- */

    CreateDynamicObject(3465,1008.29998779,-936.20001221,42.59999847,0.00000000,0.00000000,97.00000000); //object(vegspetrolpump) (1)
    CreateDynamicObject(3465,1006.20001221,-936.50000000,42.59999847,0.00000000,0.00000000,97.99829102); //object(vegspetrolpump) (2)
    CreateDynamicObject(3465,1001.40002441,-937.09997559,42.59999847,0.00000000,0.00000000,97.49804688); //object(vegspetrolpump) (3)
    CreateDynamicObject(3465,999.20001221,-937.40002441,42.59999847,0.00000000,0.00000000,98.24267578); //object(vegspetrolpump) (4)
    CreateDynamicObject(996,386.79998779,-2050.39990234,7.50000000,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier1) (1)
    CreateDynamicObject(994,378.29998779,-2050.39990234,6.80000019,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (2)
    CreateDynamicObject(4697,404.00000000,-2038.09997559,7.00000000,0.00000000,359.25000000,0.00000000); //object(crprkblok1_lan2) (1)
    CreateDynamicObject(994,374.60000610,-2046.69995117,6.80000019,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (3)
    CreateDynamicObject(8041,376.00000000,-2030.50000000,12.60000038,0.00000000,0.00000000,180.00000000); //object(apbarriergate06_lvs) (1)
    CreateDynamicObject(994,374.70001221,-2020.40002441,6.80000019,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (5)
    CreateDynamicObject(997,374.70001221,-2013.80004883,6.80000019,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier3) (1)
    CreateDynamicObject(997,376.70001221,-2010.40002441,6.80000019,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier3) (2)
    CreateDynamicObject(1215,376.50000000,-2010.40002441,7.40000010,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
    CreateDynamicObject(1215,374.70001221,-2010.40002441,7.40000010,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
    CreateDynamicObject(1215,374.70001221,-2021.80004883,7.40000010,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
    CreateDynamicObject(1215,375.00000000,-2029.50000000,7.40000010,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
    CreateDynamicObject(1215,374.89999390,-2031.59997559,7.40000010,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
    CreateDynamicObject(1215,374.79998779,-2039.19995117,7.40000010,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
    CreateDynamicObject(1215,384.39999390,-2050.19995117,7.40000010,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
    CreateDynamicObject(1215,386.20001221,-2050.19995117,7.40000010,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
    CreateDynamicObject(994,360.39999390,-2038.40002441,6.80000019,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (7)
    CreateDynamicObject(994,360.39999390,-2029.90002441,6.80000019,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (8)
    CreateDynamicObject(994,387.20001221,-1784.80004883,4.50000000,0.00000000,0.00000000,180.00000000); //object(lhouse_barrier2) (9)
    CreateDynamicObject(994,380.69921875,-1784.69921875,4.59999990,0.00000000,0.00000000,270.00000000); //object(lhouse_barrier2) (10)
    CreateDynamicObject(994,393.70001221,-1784.80004883,4.50000000,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier2) (11)
    CreateDynamicObject(994,400.10000610,-1784.80004883,4.50000000,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier2) (12)
    CreateDynamicObject(994,406.50000000,-1784.80004883,4.50000000,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier2) (13)
    CreateDynamicObject(994,412.89999390,-1784.80004883,4.50000000,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier2) (14)
    CreateDynamicObject(994,419.29998779,-1784.80004883,4.50000000,0.00000000,0.00000000,180.00000000); //object(lhouse_barrier2) (15)
    CreateDynamicObject(994,420.79998779,-1791.09997559,4.69999981,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (17)
    CreateDynamicObject(994,420.79998779,-1798.90002441,4.69999981,0.00000000,0.00000000,89.99450684); //object(lhouse_barrier2) (18)
    CreateDynamicObject(994,420.89999390,-1806.80004883,4.69999981,0.00000000,0.00000000,89.99450684); //object(lhouse_barrier2) (19)
    CreateDynamicObject(994,420.70001221,-1807.19995117,4.69999981,0.00000000,0.00000000,179.99450684); //object(lhouse_barrier2) (21)
    CreateDynamicObject(994,1699.59997559,-1843.69995117,12.50000000,0.00000000,0.00000000,270.00000000); //object(lhouse_barrier2) (22)
    CreateDynamicObject(994,1699.69995117,-1857.80004883,12.50000000,0.00000000,0.00000000,270.00000000); //object(lhouse_barrier2) (23)
    CreateDynamicObject(994,1699.69995117,-1865.19995117,12.50000000,0.00000000,0.00000000,270.00000000); //object(lhouse_barrier2) (24)
    CreateDynamicObject(982,1760.30004883,-1849.90002441,13.24699974,0.00000000,0.00000000,270.00000000); //object(fenceshit) (1)
    CreateDynamicObject(982,1785.90002441,-1849.90002441,13.24699974,0.00000000,0.00000000,270.00000000); //object(fenceshit) (2)
    CreateDynamicObject(984,1805.09997559,-1849.90002441,13.19999981,0.00000000,0.00000000,90.00000000); //object(fenceshit2) (1)
    CreateDynamicObject(984,1805.09997559,-1842.40002441,13.19999981,0.00000000,0.00000000,90.00000000); //object(fenceshit2) (2)
    CreateDynamicObject(984,1797.09997559,-1842.40002441,13.19999981,0.00000000,0.00000000,90.00000000); //object(fenceshit2) (3)
    CreateDynamicObject(982,1778.40002441,-1839.00000000,13.24699974,0.00000000,0.00000000,254.50000000); //object(fenceshit) (4)
    CreateDynamicObject(982,1753.69995117,-1832.40002441,13.24699974,0.00000000,0.00000000,255.49829102); //object(fenceshit) (5)
    CreateDynamicObject(983,1811.59997559,-1846.09997559,13.30000019,0.00000000,0.00000000,359.75000000); //object(fenceshit3) (2)
    CreateDynamicObject(9314,1805.19995117,-1877.09997559,21.00000000,0.00000000,0.00000000,270.00000000); //object(advert01_sfn) (1)
    CreateDynamicObject(983,1738.89941406,-1831.29980469,13.24699974,0.00000000,0.00000000,310.74829102); //object(fenceshit3) (3)
    CreateDynamicObject(1215,1811.50000000,-1849.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
    CreateDynamicObject(1215,1811.50000000,-1842.59997559,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
    CreateDynamicObject(8957,1843.45004883,-1855.59997559,13.60000038,0.00000000,0.00000000,0.00000000); //object(warehouse_door2b) (1)
    CreateDynamicObject(19121,1747.69995117,-1849.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
    CreateDynamicObject(19121,1756.00000000,-1849.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
    CreateDynamicObject(19121,1764.19995117,-1849.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
    CreateDynamicObject(19121,1773.09997559,-1849.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
    CreateDynamicObject(19121,1782.19995117,-1849.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
    CreateDynamicObject(19121,1791.50000000,-1849.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
    CreateDynamicObject(19121,1800.30004883,-1849.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (17)a
    CreateDynamicObject(19121,1800.40002441,-1842.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (19)
    CreateDynamicObject(19121,1790.80004883,-1842.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (20)
    CreateDynamicObject(19121,1782.30004883,-1840.40002441,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (21)
    CreateDynamicObject(19121,1773.09997559,-1837.80004883,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (22)
    CreateDynamicObject(19121,1764.19995117,-1835.50000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (23)
    CreateDynamicObject(19121,1753.90002441,-1832.80004883,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (24)
    CreateDynamicObject(19121,1744.09997559,-1830.19995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (25)

	/* --- ATMs --- */
    CreateDynamicObject(2942,1925.40002441,-1765.80004883,13.19999981,0.00000000,0.00000000,180.00000000); //object(kmb_atm1) (1)
    CreateDynamicObject(2942,2475.39941406,-1747.00000000,13.19999981,0.00000000,0.00000000,90.00000000); //object(kmb_atm1) (2)
    CreateDynamicObject(2942,2390.09960938,-1914.89941406,13.19999981,0.00000000,0.00000000,0.00000000); //object(kmb_atm1) (3)
    CreateDynamicObject(2942,2051.09960938,-1897.59960938,13.19999981,0.00000000,0.00000000,0.00000000); //object(kmb_atm1) (4)
    CreateDynamicObject(2942,1751.59960938,-1864.50000000,13.19999981,0.00000000,0.00000000,90.00000000); //object(kmb_atm1) (5)
    CreateDynamicObject(2942,2417.89990234,-1219.50000000,25.20000076,0.00000000,0.00000000,357.99450684); //object(kmb_atm1) (6)
    CreateDynamicObject(2942,2134.69921875,-1152.69921875,23.60000038,0.00000000,0.00000000,107.99011230); //object(kmb_atm1) (7)
    CreateDynamicObject(2942,1617.30004883,-1170.30004883,23.70000076,0.00000000,0.00000000,179.98950195); //object(kmb_atm1) (8)
    CreateDynamicObject(2942,387.20001221,-1815.90002441,7.50000000,0.00000000,0.00000000,269.98901367); //object(kmb_atm1) (10)
    CreateDynamicObject(2942,1346.09960938,-1759.09960938,13.19999981,0.00000000,0.00000000,179.98901367); //object(kmb_atm1) (11)
    CreateDynamicObject(2942,1321.89941406,-897.89941406,39.20000076,0.00000000,0.00000000,357.98400879); //object(kmb_atm1) (13)
    CreateDynamicObject(2942,766.39941406,-1385.50000000,13.30000019,0.00000000,0.00000000,3.98803711); //object(kmb_atm1) (14)
    CreateDynamicObject(2942,1162.30004883,-1765.59997559,13.30000019,0.00000000,0.00000000,87.98901367);
    CreateDynamicObject(2942,1301.0000000,299.6000061,19.1000004,0.0000000,0.0000000,66.2500000); //object(kmb_atm1) (2)
	CreateDynamicObject(2942,1381.9000244,466.1000061,19.7999992,0.0000000,0.0000000,336.0000000); //object(kmb_atm1) (3)
	CreateDynamicObject(2942,223.1999969,-192.3999939,1.2000000,0.0000000,0.0000000,90.0000000); //object(kmb_atm1) (4)
	CreateDynamicObject(2942,242.3999939,-52.2999992,1.2000000,0.0000000,0.0000000,270.0000000); //object(kmb_atm1) (5)
	CreateDynamicObject(2942,661.2999878,-553.9000244,16.0000000,0.0000000,0.0000000,270.0000000); //object(kmb_atm1) (6)
	CreateDynamicObject(2942,703.0000000,-494.7999878,16.0000000,0.0000000,0.0000000,180.0000000); //object(kmb_atm1) (7)
	CreateDynamicObject(2942,57.5000000,1211.6999512,18.5000000,0.0000000,0.0000000,358.2500000); //object(kmb_atm1) (8)
	CreateDynamicObject(2942,-136.5000000,1173.0996094,19.3999996,0.0000000,0.0000000,178.2476807); //object(kmb_atm1) (9)
	CreateDynamicObject(2942,-861.5999756,1536.5000000,22.2000008,0.0000000,0.0000000,180.0000000); //object(kmb_atm1) (10)
	CreateDynamicObject(2942,-2489.6999512,2341.3999023,4.5999999,0.0000000,0.0000000,0.0000000); //object(kmb_atm1) (11)
	CreateDynamicObject(2942,-1505.5999756,2612.1000977,55.5000000,0.0000000,0.0000000,90.0000000); //object(kmb_atm1) (12)
	CreateDynamicObject(2942,2316.1000977,-88.4000015,26.1000004,0.0000000,0.0000000,0.0000000); //object(kmb_atm1) (13)

	/* --- Trashcans --- */

	/*CreateDynamicObject(1236, 1223.98, -954.38, 42.56, 0.00, 0.00, 90.00);
	CreateDynamicObject(1335, 1221.71, -956.36, 42.97, 0.00, 0.00, 180.00);
	CreateDynamicObject(1264, 1223.99, -956.46, 42.36, 0.00, 0.00, 0.00);
	CreateDynamicObject(1265, 1223.14, -956.02, 42.34, 0.00, 0.00, 0.00);
	CreateDynamicObject(1347, 1071.96, -1110.22, 23.95, 0.00, 0.00, 0.00);
	CreateDynamicObject(1335, 1070.40, -1110.31, 24.46, 0.00, 0.00, 180.00);
	CreateDynamicObject(1347, 1071.96, -1110.22, 23.95, 0.00, 0.00, 0.00);
	CreateDynamicObject(1347, 1071.62, -1109.12, 23.95, 0.00, 0.00, 0.00);
	CreateDynamicObject(1236, 297.73, -1625.70, 32.98, 0.00, 0.00, 0.00);
	CreateDynamicObject(1347, 297.59, -1624.20, 32.85, 0.00, 0.00, 0.00);
	CreateDynamicObject(1264, 296.17, -1626.59, 32.72, 0.00, 0.00, 0.00);
	CreateDynamicObject(1347, 686.83, -1021.49, 51.10, 0.00, 0.00, 0.00);
	CreateDynamicObject(1347, 686.10, -1022.33, 51.10, 0.00, 0.00, 0.00);
	CreateDynamicObject(1347, 685.77, -1021.05, 51.10, 0.00, 0.00, 0.00);
	CreateDynamicObject(1264, 686.33, -1019.79, 51.05, 0.00, 0.00, 0.00);
	CreateDynamicObject(1265, 687.27, -1020.58, 50.97, 0.00, 0.00, 0.00);
	CreateDynamicObject(1264, 685.08, -1021.77, 50.95, 0.00, 0.00, 0.00);
	CreateDynamicObject(1236, 1048.77, -1663.18, 13.18, 0.00, 0.00, 0.00);
	CreateDynamicObject(1335, 1048.31, -1667.79, 13.61, 0.00, 0.00, -90.00);
	CreateDynamicObject(1335, 1810.53, -2076.59, 13.64, 0.00, 0.00, 180.00);
	CreateDynamicObject(1347, 1811.87, -2076.90, 13.12, 0.00, 0.00, 0.00);
	CreateDynamicObject(1264, 1808.71, -2076.25, 12.87, 0.00, 0.00, 0.00);
	CreateDynamicObject(1264, 1809.51, -2075.03, 12.87, 0.00, 0.00, 0.00);
	CreateDynamicObject(1236, 2045.66, -1649.00, 13.17, 0.00, 0.00, 90.00);
	CreateDynamicObject(1347, 2045.82, -1650.59, 13.06, 0.00, 0.00, 0.00);
	CreateDynamicObject(1347, 2044.96, -1650.97, 13.06, 0.00, 0.00, 0.00);
	CreateDynamicObject(1335, 2356.26, -1996.78, 13.55, 0.00, 0.00, -90.00);
	CreateDynamicObject(1236, 2356.14, -1994.49, 13.12, 0.00, 0.00, 90.00);
	CreateDynamicObject(1347, 2356.14, -1998.32, 13.11, 0.00, 0.00, 0.00);
	CreateDynamicObject(1347, 2355.12, -1998.53, 13.11, 0.00, 0.00, 0.00);
	CreateDynamicObject(1236, 2725.26, -2018.37, 13.09, 0.00, 0.00, 0.00);
	CreateDynamicObject(1347, 2723.62, -2019.02, 13.09, 0.00, 0.00, 0.00);
	CreateDynamicObject(1347, 2724.04, -2017.15, 13.09, 0.00, 0.00, 0.00);
	CreateDynamicObject(1264, 2725.39, -2017.08, 12.93, 0.00, 0.00, 0.00);
	CreateDynamicObject(1335, 2205.33, -1311.82, 24.03, 0.00, 0.00, 90.00);
	CreateDynamicObject(1236, 2211.68, -1312.11, 23.54, 0.00, 0.00, 90.00);*/
	
	CreateDynamicObject(1344, 1223.25, -956.45, 42.72,   0.00, 0.00, 358.92 + 180);
	CreateDynamicObject(1344, 837.61, -1010.19, 27.55,   0.00, 0.00, 306.88 + 180);
	CreateDynamicObject(1344, 768.78, -1035.81, 23.87,   0.00, 0.00, 92.45 + 180);
	CreateDynamicObject(1344, 718.12, -1134.74, 17.08,   0.00, 0.00, 325.31 + 180);
	CreateDynamicObject(1344, 447.41, -1294.24, 14.98,   0.00, 0.00, 121.97 + 180);
	CreateDynamicObject(1344, 213.33, -1750.49, 4.26,   0.00, 0.00, 91.81 + 180);
	CreateDynamicObject(1344, 303.14, -1422.52, 13.75,   0.00, 0.00, 121.97 + 180);
	CreateDynamicObject(1344, 385.62, -1730.85, 8.80,   0.00, 0.00, 91.81 + 180);
	CreateDynamicObject(1344, 477.65, -1744.21, 9.19,   0.00, 0.00, 91.81 + 180);
	CreateDynamicObject(1344, 646.60, -1761.85, 13.12,   0.00, 0.00, 258.76 + 180);
	CreateDynamicObject(1344, 1072.44, -1882.88, 13.40,   0.00, 0.00, 180.74 + 180);
	CreateDynamicObject(1344, 1072.44, -1882.88, 13.40,   0.00, 0.00, 180.74 + 180);
	CreateDynamicObject(1344, 1227.69, -1863.45, 13.30,   0.00, 0.00, 89.67 + 180);
	CreateDynamicObject(1344, 1336.81, -1839.60, 13.11,   0.00, 0.00, 262.25 + 180);
	CreateDynamicObject(1344, 1381.12, -1893.03, 13.11,   0.00, 0.00, 176.51 + 180);
	CreateDynamicObject(1344, 1439.08, -1847.41, 13.42,   0.00, 0.00, 359.61 + 180);
	CreateDynamicObject(1344, 1376.97, -1824.18, 13.42,   0.00, 0.00, 359.61 + 180);
	CreateDynamicObject(1344, 1337.23, -1760.82, 13.21,   0.00, 0.00, 269.05 + 180);
	CreateDynamicObject(1344, 1341.57, -1680.86, 13.21,   0.00, 0.00, 269.05 + 180);
	CreateDynamicObject(1344, 1348.28, -1590.00, 13.10,   0.00, 0.00, 263.66 + 180);
	CreateDynamicObject(1344, 1331.74, -1531.32, 13.30,   0.00, 0.00, 173.74 + 180);
	CreateDynamicObject(1344, 1358.76, -1483.72, 13.31,   0.00, 0.00, 161.50 + 180);
	CreateDynamicObject(1344, 1370.51, -1368.93, 13.21,   0.00, 0.00, 89.49 + 180);
	CreateDynamicObject(1344, 1331.42, -1231.55, 13.41,   0.00, 0.00, 177.89 + 180);
	CreateDynamicObject(1344, 1282.11, -1268.52, 13.41,   0.00, 0.00, 91.42 + 180);
	CreateDynamicObject(1344, 1073.72, -1328.15, 13.41,   0.00, 0.00, 358.80 + 180);
	CreateDynamicObject(1344, 1032.75, -1383.78, 13.41,   0.00, 0.00, 91.42 + 180);
	CreateDynamicObject(1344, 905.63, -1357.34, 13.21,   0.00, 0.00, 176.61 + 180);
	CreateDynamicObject(1344, 866.94, -1383.72, 13.31,   0.00, 0.00, 87.87 + 180);
	CreateDynamicObject(1344, 691.12, -1423.84, 14.66,   0.00, 0.00, 271.67 + 180);
	CreateDynamicObject(1344, 615.05, -1523.14, 14.76,   0.00, 0.00, 3.23 + 180);
	CreateDynamicObject(1344, 584.19, -1570.38, 15.94,   0.00, 0.00, 268.16 + 180);
	CreateDynamicObject(1344, 322.82, -1451.61, 34.09,   0.00, 0.00, 123.29 + 180);
	CreateDynamicObject(1344, 528.93, -1363.37, 15.74,   0.00, 0.00, 197.90 + 180);
	CreateDynamicObject(1344, 578.65, -1420.84, 13.82,   0.00, 0.00, 270.05 + 180);
	CreateDynamicObject(1344, 615.07, -1345.01, 13.31,   0.00, 0.00, 193.23 + 180);
	CreateDynamicObject(1344, 868.15, -1338.80, 13.31,   0.00, 0.00, 269.02 + 180);
	CreateDynamicObject(1344, 1566.45, -1580.72, 13.20,   0.00, 0.00, 86.98 + 180);
	CreateDynamicObject(1344, 1718.01, -1582.78, 13.31,   0.00, 0.00, 86.98 + 180);
	CreateDynamicObject(1344, 1810.14, -1685.70, 13.30,   0.00, 0.00, 359.98 + 180);
	CreateDynamicObject(1344, 1832.80, -1792.28, 13.30,   0.00, 0.00, 180.79 + 180);
	CreateDynamicObject(1344, 1745.06, -1805.29, 13.31,   0.00, 0.00, 90.92 + 180);
	CreateDynamicObject(1344, 1617.14, -1861.06, 13.41,   0.00, 0.00, 273.15 + 180);
	CreateDynamicObject(1344, 1558.39, -1841.57, 13.41,   0.00, 0.00, 0.12 + 180);
	CreateDynamicObject(1344, 1502.12, -1861.08, 13.41,   0.00, 0.00, 89.71 + 180);
	CreateDynamicObject(1344, 1832.87, -1888.75, 13.30,   0.00, 0.00, 359.41 + 180);
	CreateDynamicObject(1344, 1950.17, -1888.67, 13.30,   0.00, 0.00, 359.41 + 180);
	CreateDynamicObject(1344, 1973.21, -1786.52, 13.30,   0.00, 0.00, 359.41 + 180);
	CreateDynamicObject(1344, 2037.49, -1740.51, 13.32,   0.00, 0.00, 270.60 + 180);
	CreateDynamicObject(1344, 2037.48, -1625.35, 13.22,   0.00, 0.00, 270.60 + 180);
	CreateDynamicObject(1344, 2067.95, -1592.00, 13.22,   0.00, 0.00, 270.60 + 180);
	CreateDynamicObject(1344, 2232.32, -1688.16, 13.82,   0.00, 0.00, 176.11 + 180);
	CreateDynamicObject(1344, 2331.47, -1693.84, 13.21,   0.00, 0.00, 176.11 + 180);
	CreateDynamicObject(1344, 2276.09, -1671.70, 15.05,   0.00, 0.00, 270.30 + 180);
	CreateDynamicObject(1344, 2438.71, -1638.15, 13.28,   0.00, 0.00, 90.46 + 180);
	CreateDynamicObject(1344, 2483.96, -1690.44, 13.28,   0.00, 0.00, 82.30 + 180);
	CreateDynamicObject(1344, 2486.05, -1761.60, 13.39,   0.00, 0.00, 91.57 + 180);
	CreateDynamicObject(1344, 2520.52, -1720.79, 13.28,   0.00, 0.00, 270.50 + 180);
	CreateDynamicObject(1344, 2519.61, -1946.40, 13.28,   0.00, 0.00, 270.50 + 180);
	CreateDynamicObject(1344, 2624.93, -1943.56, 13.28,   0.00, 0.00, 270.50 + 180);
	CreateDynamicObject(1344, 2682.88, -2015.25, 13.28,   0.00, 0.00, 270.50 + 180);
	CreateDynamicObject(1344, 2725.63, -2018.55, 13.28,   0.00, 0.00, 0.39 + 180);
	CreateDynamicObject(1344, 2451.94, -1996.49, 13.16,   0.00, 0.00, 271.86 + 180);
	CreateDynamicObject(1344, 2456.48, -1947.00, 13.36,   0.00, 0.00, 270.45 + 180);
	CreateDynamicObject(1344, 2424.97, -1883.86, 13.36,   0.00, 0.00, 359.00 + 180);
	CreateDynamicObject(1344, 2401.80, -2017.17, 13.26,   0.00, 0.00, 359.00 + 180);
	CreateDynamicObject(1344, 2287.59, -2023.47, 13.26,   0.00, 0.00, 359.00 + 180);
	CreateDynamicObject(1344, 2202.01, -1981.64, 13.26,   0.00, 0.00, 359.00 + 180);
	CreateDynamicObject(1344, 2172.87, -1729.14, 13.26,   0.00, 0.00, 359.00 + 180);
	CreateDynamicObject(1344, 2201.06, -1495.43, 23.76,   0.00, 0.00, 179.16 + 180);
	CreateDynamicObject(1344, 2356.57, -1470.44, 23.76,   0.00, 0.00, 179.16 + 180);
	CreateDynamicObject(1344, 2331.31, -1370.51, 23.76,   0.00, 0.00, 271.80 + 180);
	CreateDynamicObject(1344, 2335.74, -1315.35, 23.87,   0.00, 0.00, 269.91 + 180);
	CreateDynamicObject(1344, 2391.77, -1244.40, 24.03,   0.00, 0.00, 269.91 + 180);
	CreateDynamicObject(1344, 2409.06, -1270.18, 24.03,   0.00, 0.00, 269.91 + 180);
	CreateDynamicObject(1344, 2410.01, -1372.98, 24.23,   0.00, 0.00, 269.91 + 180);
	CreateDynamicObject(1344, 2387.66, -1456.70, 24.03,   0.00, 0.00, 89.66 + 180);
	CreateDynamicObject(1344, 2418.73, -1470.26, 23.73,   0.00, 0.00, 179.26 + 180);
	CreateDynamicObject(1344, 2439.09, -1414.84, 23.84,   0.00, 0.00, 179.26 + 180);
	CreateDynamicObject(1344, 2507.59, -1245.38, 34.98,   0.00, 0.00, 88.02 + 180);
	CreateDynamicObject(1344, 2522.93, -1360.59, 28.29,   0.00, 0.00, 358.07 + 180);
	CreateDynamicObject(1344, 2539.27, -1476.30, 23.85,   0.00, 0.00, 358.07 + 180);
	CreateDynamicObject(1344, 2140.64, -1495.54, 23.76,   0.00, 0.00, 179.16 + 180);
	CreateDynamicObject(1344, 2114.41, -1373.08, 23.77,   0.00, 0.00, 91.43 + 180);
	CreateDynamicObject(1344, 2093.34, -1340.33, 23.77,   0.00, 0.00, 181.14 + 180);
	CreateDynamicObject(1344, 2155.63, -1340.31, 23.77,   0.00, 0.00, 181.14 + 180);
	CreateDynamicObject(1344, 2204.92, -1312.15, 23.77,   0.00, 0.00, 269.41 + 180);
	CreateDynamicObject(1344, 2159.70, -1258.70, 23.77,   0.00, 0.00, 178.82 + 180);
	CreateDynamicObject(1344, 2083.58, -1258.76, 23.77,   0.00, 0.00, 179.23 + 180);
	CreateDynamicObject(1344, 2183.58, -1256.10, 23.67,   0.00, 0.00, 174.52 + 180);
	CreateDynamicObject(1344, 2259.23, -1258.50, 23.67,   0.00, 0.00, 177.06 + 180);
	CreateDynamicObject(1344, 2163.06, -1088.38, 25.15,   0.00, 0.00, 160.02 + 180);
	CreateDynamicObject(1344, 2259.25, -1258.50, 23.67,   0.00, 0.00, 177.06 + 180);
	CreateDynamicObject(1344, 2056.35, -1101.80, 24.24,   0.00, 0.00, 182.70 + 180);
	CreateDynamicObject(1344, 2083.42, -1196.06, 23.64,   0.00, 0.00, 358.55 + 180);
	CreateDynamicObject(1344, 1991.62, -1089.09, 24.24,   0.00, 0.00, 182.70 + 180);
	CreateDynamicObject(1344, 1962.52, -1096.78, 25.33,   0.00, 0.00, 352.67 + 180);
	CreateDynamicObject(1344, 1878.41, -1090.26, 23.59,   0.00, 0.00, 358.07 + 180);
	CreateDynamicObject(1344, 1707.29, -1453.34, 13.32,   0.00, 0.00, 269.87 + 180);
	CreateDynamicObject(1344, 1965.43, -1329.58, 23.63,   0.00, 0.00, 90.43 + 180);
	CreateDynamicObject(1344, 1803.15, -1435.52, 13.22,   0.00, 0.00, 359.80 + 180);
	CreateDynamicObject(1344, 1443.45, -1323.43, 13.31,   0.00, 0.00, 180.43 + 180);
	CreateDynamicObject(1344, 1493.32, -1113.68, 23.72,   0.00, 0.00, 359.59 + 180);
	CreateDynamicObject(1344, 1433.08, -1047.69, 23.62,   0.00, 0.00, 268.99 + 180);
	CreateDynamicObject(1344, 1285.64, -1027.28, 31.40,   0.00, 0.00, 268.99 + 180);
	CreateDynamicObject(1344, 1140.69, -1001.76, 29.59,   0.00, 0.00, 180.59 + 180);
	CreateDynamicObject(1344, 1073.33, -991.61, 38.75,   0.00, 0.00, 180.59 + 180);
	CreateDynamicObject(1344, 1054.16, -1052.63, 30.88,   0.00, 0.00, 269.55 + 180);
	CreateDynamicObject(1344, 1010.89, -1028.51, 31.81,   0.00, 0.00, 269.55 + 180);
	CreateDynamicObject(1344, 973.85, -1098.66, 23.63,   0.00, 0.00, 179.34 + 180);
	CreateDynamicObject(1344, 961.47, -1209.03, 16.79,   0.00, 0.00, 0.85 + 180);
	CreateDynamicObject(1344, 953.97, -1276.71, 14.88,   0.00, 0.00, 0.85 + 180);
	CreateDynamicObject(1344, 1182.65, -1129.69, 23.72,   0.00, 0.00, 270.66 + 180);
	CreateDynamicObject(1344, 1227.55, -1175.27, 22.52,   0.00, 0.00, 359.55 + 180);
	CreateDynamicObject(1344, 1116.44, -1160.80, 23.62,   0.00, 0.00, 269.90 + 180);
	CreateDynamicObject(1344, 1252.73, -1160.46, 23.72,   0.00, 0.00, 269.90 + 180);

	/* --- Modding Garage Gates --- */

	CreateDynamicObject(8957,1041.69995117,-1026.00000000,33.09999847,0.00000000,0.00000000,270.00000000); //object(oldgrgedoor4_sfse) (1)
	CreateDynamicObject(971,-1935.30004883,238.80000305,33.59999847,0.00000000,0.00000000,0.00000000); //object(subwaygate) (2)
	CreateDynamicObject(971,-2716.00000000,217.80000305,3.79999995,0.00000000,0.00000000,270.00000000); //object(subwaygate) (2)
	CreateDynamicObject(971,2386.89990234,1043.40002441,9.80000019,0.00000000,0.00000000,180.00000000); //object(subwaygate) (2)
	CreateDynamicObject(3055,2644.80004883,-2039.09997559,13.10000038,0.00000000,0.00000000,0.00000000); //object(kmb_shutter) (2)

	/* --- Pay'n'Spray Gates --- */

    CreateDynamicObject(8957,2071.60009766,-1831.30004883,14.60000038,0.00000000,0.00000000,0.00000000); //object(oldgrgedoor4_sfse) (1)
	CreateDynamicObject(8957,1025.09997559,-1029.50000000,33.29999924,0.00000000,0.00000000,270.00000000); //object(oldgrgedoor4_sfse) (2)
	CreateDynamicObject(8957,719.90002441,-462.60000610,17.00000000,0.00000000,0.00000000,270.00000000); //object(oldgrgedoor4_sfse) (3)
	CreateDynamicObject(971,-2425.80004883,1028.19995117,52.50000000,0.00000000,0.00000000,0.00000000); //object(subwaygate) (1)
	CreateDynamicObject(971,-1904.69995117,277.70001221,42.29999924,0.00000000,0.00000000,0.00000000); //object(subwaygate) (2)
	CreateDynamicObject(971,-1420.50000000,2591.10009766,57.00000000,0.00000000,0.00000000,0.00000000); //object(subwaygate) (3)
	CreateDynamicObject(971,-99.90000153,1111.50000000,20.89999962,0.00000000,0.00000000,0.00000000); //object(subwaygate) (4)
	CreateDynamicObject(971,2393.50000000,1483.59997559,12.10000038,0.00000000,0.00000000,0.00000000); //object(subwaygate) (5)
	CreateDynamicObject(971,1968.30004883,2162.60009766,12.00000000,0.00000000,0.00000000,270.00000000); //object(subwaygate) (6)
	CreateDynamicObject(3055,488.29998779,-1734.69995117,11.89999962,0.00000000,0.00000000,352.00000000); //object(kmb_shutter) (1)

	/* -- Speed Cameras and Roadblocks --- */

	CreateDynamicObject(18880, 1827.393310, -1600.081787, 11.040195, 0, 0, 0);
	CreateDynamicObject(18880, 1831.478637, -1746.649780, 11.036874, 0, 0, 90);
	CreateDynamicObject(18880, 1815.969116, -1743.268676, 11.036874, 0, 0, 180);
	CreateDynamicObject(18880, 807.349243, -1389.981933, 11.089693, 0, 0, 90);
	CreateDynamicObject(18880, 790.897888, -1385.355590, 11.190835, 0, 0, 180);
	CreateDynamicObject(18880, 1212.821166, -1411.753417, 10.855206, 0, 0, -90);
	//CreateDynamicObject(973, 1402.060913, -1412.522827, 13.200529, 0, 0, 90);
	//CreateDynamicObject(973, 1402.060913, -1422.902709, 13.200529, 0, 0, 90);
	//CreateDynamicObject(973, 1402.060913, -1433.283081, 13.200529, 0, 0, 90);
	//CreateDynamicObject(973, 1401.794677, -1450.208251, 13.384687, 0, 0, 0);
	//CreateDynamicObject(973, 1851.535766, -1040.980712, 23.893087, 0, 0, -90);
	//CreateDynamicObject(973, 1851.535766, -1051.370605, 23.893087, 0, 0, -90);
	//CreateDynamicObject(973, 1851.535766, -1061.750000, 23.893087, 0, 0, -90);
	//CreateDynamicObject(973, 1851.535766, -1072.130004, 23.893087, 0, 0, -90);
	CreateDynamicObject(18880, 1376.588134, -1877.384399, 11.046875, 0, 0, -100);
	CreateDynamicObject(18880, 1370.983886, -1865.755981, 11.046875, 0, 0, 78);
	CreateDynamicObject(18880, 2118.416748, -1676.064697, 11.042663, 0, 0, -15);
	CreateDynamicObject(18880, 2106.844482, -1672.438232, 11.288070, 0, 0, 180);
	CreateDynamicObject(18880, 2385.395263, -1179.892089, 25.226203, 0, 0, 90);
	CreateDynamicObject(18880, 2385.395263, -1179.892089, 25.226203, 0, 0, -90);

	/* --- Fences near Alhambra --- */

    /*CreateDynamicObject(2773,1831.50000000,-1673.90002441,13.10000038,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (1)
    CreateDynamicObject(2773,1831.50000000,-1675.80004883,13.10000038,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (2)
    CreateDynamicObject(2773,1831.50000000,-1677.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (5)
    CreateDynamicObject(2773,1830.00000000,-1677.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (6)
    CreateDynamicObject(2773,1830.00000000,-1675.80004883,13.10000038,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (7)
    CreateDynamicObject(2773,1830.00000000,-1673.90002441,13.10000038,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (8)
    CreateDynamicObject(2773,1830.00000000,-1679.59997559,13.10000038,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (9)
    CreateDynamicObject(2773,1831.00000000,-1680.59997559,13.10000038,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar) (10)
    CreateDynamicObject(970,1827.00000000,-1678.59997559,13.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (1)
    CreateDynamicObject(970,1827.00000000,-1674.50000000,13.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (2)
    CreateDynamicObject(970,1827.00000000,-1670.40002441,13.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (3)
    CreateDynamicObject(970,1827.00000000,-1686.80004883,13.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (4)
    CreateDynamicObject(970,1827.00000000,-1690.90002441,13.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (5)
    CreateDynamicObject(970,1827.00000000,-1695.00000000,13.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (6)
    CreateDynamicObject(970,1829.09997559,-1697.00000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (7)
    CreateDynamicObject(1215,1827.00000000,-1684.59997559,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
    CreateDynamicObject(1215,1827.00000000,-1680.80004883,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
    CreateDynamicObject(1215,1831.40002441,-1697.09997559,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
    CreateDynamicObject(1215,1831.59997559,-1668.30004883,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
    CreateDynamicObject(1215,1811.50000000,-1686.19995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
    CreateDynamicObject(1215,1798.90002441,-1647.30004883,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
    CreateDynamicObject(1215,1809.50000000,-1628.59997559,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
    CreateDynamicObject(1340,1811.40002441,-1676.40002441,13.69999981,0.00000000,0.00000000,0.00000000); //object(chillidogcart) (1)
    CreateDynamicObject(1341,1811.09997559,-1648.69995117,13.50000000,0.00000000,0.00000000,0.00000000); //object(icescart_prop) (1)
    CreateDynamicObject(1342,1793.69995117,-1622.09997559,13.60000038,0.00000000,0.00000000,90.00000000); //object(noodlecart_prop) (1)
    CreateDynamicObject(1280,1811.19995117,-1669.00000000,12.89999962,0.00000000,0.00000000,180.00000000); //object(parkbench1) (1)
    CreateDynamicObject(1280,1811.30004883,-1655.59997559,12.89999962,0.00000000,0.00000000,179.99450684); //object(parkbench1) (2)
    CreateDynamicObject(1280,1811.30004883,-1642.80004883,12.89999962,0.00000000,0.00000000,179.99450684); //object(parkbench1) (3)
    CreateDynamicObject(1280,1811.30004883,-1681.90002441,13.00000000,0.00000000,0.00000000,179.99450684); //object(parkbench1) (4)
    CreateDynamicObject(910,1809.30004883,-1685.69995117,13.80000019,0.00000000,0.00000000,180.00000000); //object(bust_cabinet_4) (1)
    CreateDynamicObject(1442,1798.19995117,-1683.00000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(dyn_firebin0) (1)
    CreateDynamicObject(1440,1806.69995117,-1685.59997559,13.00000000,0.00000000,0.00000000,180.00000000); //object(dyn_box_pile_3) (1)
    CreateDynamicObject(2672,1811.30004883,-1679.59997559,12.80000019,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_4) (1)
    CreateDynamicObject(2673,1799.50000000,-1683.09997559,12.60000038,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_5) (1)
    CreateDynamicObject(2675,1811.80004883,-1669.19995117,12.60000038,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_6) (1)
    CreateDynamicObject(2773,1831.50000000,-1672.00000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (11)
    CreateDynamicObject(2773,1830.00000000,-1672.00000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (12)
    CreateDynamicObject(1211,1814.09997559,-1620.69995117,13.19999981,0.00000000,0.00000000,0.00000000); //object(fire_hydrant) (1)
    CreateDynamicObject(1211,1828.59997559,-1743.40002441,13.19999981,0.00000000,0.00000000,0.00000000); //object(fire_hydrant) (2)
    CreateDynamicObject(1280,1812.09997559,-1591.80004883,12.89999962,0.00000000,0.00000000,179.99450684); //object(parkbench1) (6)
    CreateDynamicObject(1280,1812.09997559,-1585.09997559,12.89999962,0.00000000,0.00000000,179.99450684); //object(parkbench1) (7)
    CreateDynamicObject(2971,1791.69995117,-1636.69995117,13.50000000,0.00000000,0.00000000,0.00000000); //object(k_smashboxes) (1)
    CreateDynamicObject(970,1807.80004883,-1651.90002441,14.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (8)
    CreateDynamicObject(970,1807.80004883,-1656.00000000,14.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (9)
    CreateDynamicObject(970,1807.80004883,-1660.09997559,14.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (10)
    CreateDynamicObject(970,1807.80004883,-1664.19995117,14.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (11)
    CreateDynamicObject(970,1807.80004883,-1668.30004883,14.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (12)
    CreateDynamicObject(970,1807.80004883,-1672.40002441,14.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (13)
    CreateDynamicObject(970,1807.80004883,-1676.50000000,14.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (14)
    CreateDynamicObject(970,1807.80004883,-1680.19995117,14.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (15)
    CreateDynamicObject(970,1798.50000000,-1647.69995117,14.00000000,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (16)
    CreateDynamicObject(970,1798.50000000,-1643.59997559,14.00000000,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (17)
    CreateDynamicObject(970,1798.50000000,-1639.50000000,14.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (18)
    CreateDynamicObject(970,1798.50000000,-1635.40002441,14.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (19)
    CreateDynamicObject(970,1798.50000000,-1631.30004883,14.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (20)
    CreateDynamicObject(970,1798.50000000,-1628.40002441,14.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (21)
    CreateDynamicObject(970,1796.40002441,-1626.19995117,14.10000038,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (22)
    CreateDynamicObject(970,1792.30004883,-1626.19995117,14.10000038,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (23)
    CreateDynamicObject(970,1788.00000000,-1626.19995117,14.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (24)
    CreateDynamicObject(970,1792.50000000,-1634.19995117,14.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (25)
    CreateDynamicObject(1215,1785.69995117,-1626.30004883,14.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
    CreateDynamicObject(1215,1807.69995117,-1647.30004883,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
    CreateDynamicObject(14440,1798.19995117,-1683.09997559,12.50000000,0.00000000,0.00000000,0.00000000); //object(carter_grill) (1)
    CreateDynamicObject(1256,1799.69995117,-1642.19995117,13.19999981,0.00000000,0.00000000,180.00000000); //object(stonebench1) (1)
    CreateDynamicObject(1256,1799.59997559,-1634.90002441,13.19999981,0.00000000,0.00000000,179.99450684); //object(stonebench1) (2)
    CreateDynamicObject(1256,1799.50000000,-1628.40002441,13.19999981,0.00000000,0.00000000,179.99450684); //object(stonebench1) (3)
    CreateDynamicObject(1432,1791.40002441,-1628.69995117,13.50000000,0.00000000,0.00000000,0.00000000); //object(dyn_table_2) (1)
    CreateDynamicObject(1432,1795.69995117,-1628.69995117,13.50000000,0.00000000,0.00000000,0.00000000); //object(dyn_table_2) (2)
    CreateDynamicObject(1432,1794.09997559,-1631.80004883,13.50000000,0.00000000,0.00000000,0.00000000); //object(dyn_table_2) (3)
    CreateDynamicObject(1215,1794.69995117,-1634.19995117,14.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
    CreateDynamicObject(2768,1794.59997559,-1631.90002441,14.19999981,0.00000000,0.00000000,0.00000000); //object(cj_cb_burg) (1)
    CreateDynamicObject(2768,1792.00000000,-1628.80004883,14.19999981,0.00000000,0.00000000,0.00000000); //object(cj_cb_burg) (2)
    CreateDynamicObject(2647,1793.80004883,-1631.80004883,14.30000019,0.00000000,0.00000000,0.00000000); //object(cj_bs_cup) (1)
    CreateDynamicObject(2647,1795.90002441,-1628.40002441,14.30000019,0.00000000,0.00000000,0.00000000); //object(cj_bs_cup) (2)
    CreateDynamicObject(2647,1791.69995117,-1628.30004883,14.30000019,0.00000000,0.00000000,0.00000000); //object(cj_bs_cup) (3)
    CreateDynamicObject(638,1799.40002441,-1638.59997559,13.19999981,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush) (1)
    CreateDynamicObject(638,1799.40002441,-1645.69995117,13.19999981,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush) (2)
    CreateDynamicObject(638,1799.40002441,-1631.50000000,13.19999981,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush) (3)
    CreateDynamicObject(1280,1789.09997559,-1621.40002441,12.89999962,0.00000000,0.00000000,258.00000000); //object(parkbench1) (9)
    CreateDynamicObject(1280,1811.40002441,-1635.59997559,13.00000000,0.00000000,0.00000000,179.99450684); //object(parkbench1) (10)
    CreateDynamicObject(970,1831.59997559,-1853.80004883,13.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (27)
    CreateDynamicObject(970,1831.59997559,-1857.90002441,13.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (28)
    CreateDynamicObject(970,1831.59997559,-1849.69995117,13.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (30)
    CreateDynamicObject(970,1831.59997559,-1877.40002441,13.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (31)
    CreateDynamicObject(1215,1831.59997559,-1847.50000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
    CreateDynamicObject(1215,1831.40002441,-1859.90002441,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
    CreateDynamicObject(1215,1831.30004883,-1874.09997559,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
    CreateDynamicObject(1215,1831.69995117,-1830.50000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
    CreateDynamicObject(1256,1833.80004883,-1876.40002441,13.19999981,0.00000000,0.00000000,270.00000000); //object(stonebench1) (4)
    CreateDynamicObject(1256,1838.50000000,-1876.40002441,13.19999981,0.00000000,0.00000000,270.00000000); //object(stonebench1) (5)
    CreateDynamicObject(1256,1843.00000000,-1876.40002441,13.19999981,0.00000000,0.00000000,270.00000000); //object(stonebench1) (6)
    CreateDynamicObject(1432,1849.50000000,-1864.40002441,12.60000038,0.00000000,0.00000000,0.00000000); //object(dyn_table_2) (5)
    CreateDynamicObject(1432,1853.50000000,-1864.40002441,12.60000038,0.00000000,0.00000000,0.00000000); //object(dyn_table_2) (6)
    CreateDynamicObject(970,1850.50000000,-1862.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (33)
    CreateDynamicObject(970,1854.59997559,-1862.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (34)
    CreateDynamicObject(970,1856.69995117,-1864.80004883,13.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (35)
    CreateDynamicObject(1215,1848.09997559,-1866.30004883,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (17)
    CreateDynamicObject(1215,1848.09997559,-1875.80004883,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (18)
    CreateDynamicObject(970,1833.69995117,-1874.00000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (40)
    CreateDynamicObject(970,1837.80004883,-1874.00000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (41)
    CreateDynamicObject(970,1841.90002441,-1874.00000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (42)
    CreateDynamicObject(910,1852.80004883,-1860.59997559,13.89999962,0.00000000,0.00000000,0.00000000); //object(bust_cabinet_4) (2)
    CreateDynamicObject(1440,1850.50000000,-1860.59997559,13.10000038,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile_3) (2)
    CreateDynamicObject(2677,1836.80004883,-1876.19995117,12.89999962,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_7) (1)
    CreateDynamicObject(1270,1842.80004883,-1873.80004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(parkingmeterg) (1)
    CreateDynamicObject(1270,1839.69995117,-1873.80004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(parkingmeterg) (2)
    CreateDynamicObject(1270,1836.40002441,-1873.80004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(parkingmeterg) (3)
    CreateDynamicObject(1270,1833.19995117,-1873.80004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(parkingmeterg) (4)
    CreateDynamicObject(1270,1841.59997559,-1850.80004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(parkingmeterg) (5)
    CreateDynamicObject(1270,1838.30004883,-1850.80004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(parkingmeterg) (6)
    CreateDynamicObject(1270,1835.09997559,-1850.80004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(parkingmeterg) (7)
    CreateDynamicObject(970,1833.50000000,-1852.80004883,13.10000038,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (44)
    CreateDynamicObject(910,1857.50000000,-1875.69995117,13.69999981,0.00000000,0.00000000,90.00000000); //object(bust_cabinet_4) (3)
    CreateDynamicObject(1728,1857.40002441,-1871.50000000,12.50000000,0.00000000,0.00000000,90.00000000); //object(mrk_seating3) (1)
    CreateDynamicObject(1442,1857.59997559,-1867.59997559,13.10000038,0.00000000,0.00000000,0.00000000); //object(dyn_firebin0) (2)
    CreateDynamicObject(850,1866.40002441,-1877.40002441,12.60000038,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_1) (1)
    CreateDynamicObject(3035,1867.09997559,-1864.40002441,13.30000019,0.00000000,0.00000000,90.00000000); //object(tmp_bin) (1)
    CreateDynamicObject(3035,1867.09997559,-1867.40002441,13.30000019,0.00000000,0.00000000,90.00000000); //object(tmp_bin) (2)
    CreateDynamicObject(2971,1866.59997559,-1871.40002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(k_smashboxes) (3)
    CreateDynamicObject(1440,1864.00000000,-1863.90002441,13.10000038,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile_3) (3)
    CreateDynamicObject(1215,1867.50000000,-1879.40002441,13.00000000,0.00000000,0.00000000,0.00000000); //object(bollardlight) (19)*/

    /* --- Hobo Corner in Idlewood --- */

    CreateDynamicObject(982,2058.80004883,-1863.30004883,13.19999981,0.00000000,0.00000000,90.00000000); //object(fenceshit) (1)
    CreateDynamicObject(982,2033.19995117,-1863.30004883,13.19999981,0.00000000,0.00000000,90.00000000); //object(fenceshit) (2)
    CreateDynamicObject(982,2007.59997559,-1863.30004883,13.19999981,0.00000000,0.00000000,90.00000000); //object(fenceshit) (3)
    CreateDynamicObject(982,2071.89990234,-1866.40002441,13.80000019,0.00000000,0.00000000,0.00000000); //object(fenceshit) (4)
    CreateDynamicObject(982,2071.89990234,-1866.40002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(fenceshit) (5)
    CreateDynamicObject(1439,2054.69995117,-1883.69995117,12.50000000,0.00000000,0.00000000,180.00000000); //object(dyn_dumpster_1) (1)
    CreateDynamicObject(1438,2057.10009766,-1883.69995117,12.50000000,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile_2) (1)
    CreateDynamicObject(1369,2054.50000000,-1883.59997559,13.30000019,0.00000000,39.37664795,329.67251587); //object(cj_wheelchair1) (1)
    CreateDynamicObject(1349,2053.00000000,-1883.50000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(cj_shtrolly) (1)
    CreateDynamicObject(1221,2054.80004883,-1883.50000000,12.89999962,0.00000000,277.01019287,80.72753906); //object(cardboardbox4) (1)
    CreateDynamicObject(1452,1994.19995117,-1863.80004883,13.60000038,0.00000000,0.00000000,0.00000000); //object(dyn_outhouse) (1)
    CreateDynamicObject(3171,2060.80004883,-1878.59997559,12.50000000,0.00000000,0.00000000,314.75506592); //object(trailer5_01) (1)
    CreateDynamicObject(851,2053.10009766,-1883.19995117,12.89999962,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_2) (1)
    CreateDynamicObject(928,2058.60009766,-1878.50000000,12.80000019,0.00000000,0.00000000,0.00000000); //object(rubbish_box1) (1)
    CreateDynamicObject(926,2060.10009766,-1877.19995117,12.80000019,0.00000000,0.00000000,255.91223145); //object(rubbish_box2) (1)
    CreateDynamicObject(3172,2061.89990234,-1865.50000000,12.50000000,0.00000000,0.00000000,90.00000000); //object(trailer6_01) (1)
    CreateDynamicObject(3168,2048.50000000,-1872.30004883,12.50000000,0.00000000,0.00000000,200.02041626); //object(trailer2_01) (1)
    CreateDynamicObject(3170,2040.09960938,-1882.09960938,12.50000000,0.00000000,0.00000000,90.00000000); //object(trailer_large3_01) (1)
    CreateDynamicObject(3167,2019.30004883,-1887.59997559,12.50000000,0.00000000,0.00000000,45.24490356); //object(trailer_large1_01) (1)
    CreateDynamicObject(3169,2025.40002441,-1865.40002441,12.50000000,0.00000000,0.00000000,270.00000000); //object(trailer_large2_01) (1)
    CreateDynamicObject(853,2042.30004883,-1864.90002441,12.89999962,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_5) (1)
    CreateDynamicObject(3408,2072.00000000,-1879.90002441,12.50000000,0.00000000,0.00000000,90.00000000); //object(ce_mailbox2) (1)
    CreateDynamicObject(3594,2016.90002441,-1870.30004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(la_fuckcar1) (1)
    CreateDynamicObject(3593,2014.30004883,-1873.80004883,13.30000019,11.31121826,0.00000000,305.70611572); //object(la_fuckcar2) (1)
    CreateDynamicObject(1265,2061.69995117,-1867.59997559,13.00000000,0.00000000,0.00000000,0.00000000); //object(blackbag2) (1)
    CreateDynamicObject(1264,2049.80004883,-1870.00000000,13.00000000,0.00000000,0.00000000,0.00000000); //object(blackbag1) (1)
    CreateDynamicObject(1365,2037.80004883,-1865.30004883,13.69999981,0.00000000,0.00000000,0.00000000); //object(cj_big_skip1) (1)
    CreateDynamicObject(1358,2011.00000000,-1879.40002441,13.80000019,0.00000000,0.00000000,135.00000000); //object(cj_skip_rubbish) (1)
    CreateDynamicObject(1327,2034.90002441,-1865.80004883,13.50000000,0.00000000,0.00000000,0.00000000); //object(junk_tyre) (1)
    CreateDynamicObject(1299,2022.40002441,-1869.30004883,13.00000000,0.00000000,0.00000000,0.00000000); //object(smashboxpile) (1)
    CreateDynamicObject(12957,2027.59997559,-1890.30004883,13.39999962,0.00000000,0.00000000,31.67141724); //object(sw_pickupwreck01) (1)
    CreateDynamicObject(1428,2056.80004883,-1867.50000000,14.10000038,0.00000000,0.00000000,0.00000000); //object(dyn_ladder) (1)
    CreateDynamicObject(1474,2032.69995117,-1882.40002441,14.00000000,0.00000000,0.00000000,270.00000000); //object(dyn_porch_2b) (1)
    CreateDynamicObject(1474,2031.00000000,-1882.40002441,13.19999981,0.00000000,0.00000000,270.00000000); //object(dyn_porch_2b) (2)
    CreateDynamicObject(1474,2029.30004883,-1882.40002441,12.39999962,0.00000000,0.00000000,270.00000000); //object(dyn_porch_2b) (3)
    CreateDynamicObject(1519,2047.30004883,-1882.59997559,13.69999981,0.00000000,0.00000000,90.00000000); //object(dyn_scaff_cover) (1)
    CreateDynamicObject(1712,2053.89990234,-1871.50000000,12.50000000,0.00000000,0.00000000,56.55612183); //object(kb_couch05) (1)
    CreateDynamicObject(1712,2056.50000000,-1869.40002441,12.50000000,0.00000000,0.00000000,9.04498291); //object(kb_couch05) (2)
    CreateDynamicObject(1712,2060.30004883,-1870.69995117,12.50000000,0.00000000,0.00000000,312.48562622); //object(kb_couch05) (3)
    CreateDynamicObject(1712,2061.00000000,-1873.80004883,12.50000000,0.00000000,0.00000000,253.66575623); //object(kb_couch05) (4)
    CreateDynamicObject(1712,2042.59997559,-1879.90002441,12.89999962,0.00000000,0.00000000,180.00000000); //object(kb_couch05) (5)
    CreateDynamicObject(1710,2023.50000000,-1870.50000000,12.50000000,0.00000000,0.00000000,0.00000000); //object(kb_couch07) (1)
    CreateDynamicObject(1463,2056.39990234,-1874.50000000,12.89999962,0.00000000,0.00000000,0.00000000); //object(dyn_woodpile2) (1)
    CreateDynamicObject(3524,2056.19995117,-1874.30004883,10.30000019,0.00000000,0.00000000,0.00000000); //object(skullpillar01_lvs) (1)
    CreateDynamicObject(1463,2056.39990234,-1873.59997559,12.89999962,0.00000000,0.00000000,0.00000000); //object(dyn_woodpile2) (2)
    CreateDynamicObject(1463,2056.39990234,-1874.00000000,13.30000019,0.00000000,0.00000000,0.00000000); //object(dyn_woodpile2) (3)
    CreateDynamicObject(3524,2056.10009766,-1873.80004883,10.50000000,0.00000000,0.00000000,197.04495239); //object(skullpillar01_lvs) (2)
    CreateDynamicObject(3525,2056.80004883,-1874.00000000,12.89999962,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (1)
    CreateDynamicObject(3525,2056.00000000,-1874.09997559,12.89999962,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (2)
    CreateDynamicObject(3525,2056.30004883,-1873.40002441,12.60000038,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (3)

	/* --- Mechanics south of El Corona --- */

    CreateDynamicObject(8661, 1893.00, -2146.57, 12.57,   0.00, 0.00, 0.00);
	CreateDynamicObject(8661, 1853.00, -2146.57, 12.57,   0.00, 0.00, 0.00);
	CreateDynamicObject(12929, 1883.17, -2148.06, 12.56,   0.00, 0.00, 0.00);
	CreateDynamicObject(12925, 1853.99, -2149.03, 12.56,   0.00, 0.00, 0.00);
	CreateDynamicObject(1685, 1862.93, -2151.30, 13.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(1685, 1862.92, -2149.41, 13.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(1482, 1879.38, -2154.04, 14.01,   0.00, 0.00, 90.00);
	CreateDynamicObject(1438, 1892.47, -2150.48, 12.57,   0.00, 0.00, 90.00);
	CreateDynamicObject(1345, 1868.91, -2141.94, 13.33,   0.00, 0.00, 0.00);
	CreateDynamicObject(1345, 1866.37, -2142.16, 13.33,   0.00, 0.00, 10.10);
	CreateDynamicObject(1000, 1892.28, -2147.25, 12.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(1001, 1892.48, -2148.18, 12.71,   90.00, 0.00, 0.00);
	CreateDynamicObject(1002, 1892.40, -2147.69, 12.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(7662, 1911.32, -2149.38, 13.31,   0.00, 0.00, 0.00);
	CreateDynamicObject(7662, 1834.24, -2149.39, 13.31,   0.00, 0.00, 0.00);
	CreateDynamicObject(1438, 1862.66, -2147.11, 12.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(1426, 1852.82, -2154.40, 12.71,   0.00, 0.00, 0.00);

	CreateDynamicObject(18266, -2047.04, -2363.78, 34.56,   0.00, 0.00, 0.00);
	CreateDynamicObject(10183, 2428.79, -2122.73, 12.61,   0.00, 0.00, 135.00);
	CreateDynamicObject(7025, 2433.63, -2073.17, 16.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(7496, 2489.49, -2129.56, 16.11,   0.00, 0.00, 0.00);
	CreateDynamicObject(12929, 2488.45, -2075.20, 12.55,   0.00, 0.00, 90.00);
	CreateDynamicObject(7496, 2451.17, -2136.13, 16.11,   0.00, 0.00, 90.00);
	CreateDynamicObject(16362, 2505.17, -2106.57, 15.71,   0.00, 0.00, 90.00);
	CreateDynamicObject(3643, 2522.99, -2074.72, 17.82,   356.86, 0.00, 0.00);
	CreateDynamicObject(3643, 2515.38, -2074.72, 17.82,   356.86, 0.00, 0.00);
	CreateDynamicObject(3643, 2507.66, -2074.72, 17.82,   356.86, 0.00, 0.00);
	CreateDynamicObject(12929, 2469.35, -2075.20, 12.55,   0.00, 0.00, 90.00);
	CreateDynamicObject(12925, 2450.43, -2075.20, 12.55,   0.00, 0.00, 90.00);
	CreateDynamicObject(1686, 2487.21, -2106.60, 12.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1686, 2493.21, -2106.60, 12.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1686, 2499.20, -2106.60, 12.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1686, 2505.20, -2106.60, 12.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1686, 2511.19, -2106.60, 12.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1686, 2517.19, -2106.60, 12.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1686, 2523.21, -2106.60, 12.72,   0.00, 0.00, 0.00);

	/* --- Fire Department --- */

	/* --- FD Interior --- */

	CreateDynamicObject(2942,-34.40000153,-91.80000305,1003.20001221,0.00000000,0.00000000,180.00000000); //object(kmb_atm1) (1)
	CreateDynamicObject(2942,-32.70000076,-57.90000153,1003.20001221,0.00000000,0.00000000,180.00000000); //object(kmb_atm1) (2)
	CreateDynamicObject(2942,-34.09999847,-31.29999924,1003.20001221,0.00000000,0.00000000,180.00000000); //object(kmb_atm1) (3)
	CreateDynamicObject(2942,-4.2,-31.3,1003.2,0.00000000,0.00000000,180.00000000); //object(kmb_atm1) (3)
	CreateDynamicObject(19443,244.89999390,72.50000000,1004.29998779,0.00000000,0.00000000,90.00000000); //object(cs_landbit_61_a) (2)
	CreateDynamicObject(19443,247.89999390,72.50000000,1004.29998779,0.00000000,0.00000000,90.00000000); //object(cs_landbit_61_a) (3)
	CreateDynamicObject(19443,250.60000610,64.80000305,1004.29998779,0.00000000,0.00000000,0.00000000); //object(cs_landbit_61_a) (4)
	CreateDynamicObject(19443,250.60000610,61.79999924,1004.29998779,0.00000000,0.00000000,0.00000000); //object(cs_landbit_61_a) (5)
	CreateDynamicObject(19443,250.60000610,70.90000153,1004.29998779,0.00000000,0.00000000,0.00000000); //object(cs_landbit_61_a) (6)
	CreateDynamicObject(19466,250.60000610,66.69999695,1005.00000000,0.00000000,0.00000000,0.00000000); //object(lod_liberty06) (1)
	CreateDynamicObject(19466,250.60000610,69.00000000,1005.00000000,0.00000000,0.00000000,0.00000000); //object(lod_liberty06) (2)
	CreateDynamicObject(16101,250.58000183,67.86000061,997.29998779,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (1)
	CreateDynamicObject(19443,242.19999695,64.80000305,1004.29998779,0.00000000,0.00000000,0.00000000); //object(cs_landbit_61_a) (7)
	CreateDynamicObject(1567,242.19999695,65.58000183,1002.59997559,0.00000000,0.00000000,90.00000000); //object(gen_wardrobe) (3)
	CreateDynamicObject(19443,242.19999695,67.90000153,1004.29998779,0.00000000,0.00000000,0.00000000); //object(cs_landbit_61_a) (8)
	FDdoor1 = CreateDynamicObject(1567,245.60000610,72.50000000,1002.59997559,0.00000000,0.00000000,0.00000000); //object(gen_wardrobe) (5)
	FDdoor2 = CreateDynamicObject(1567,250.60000610,62.50000000,1002.59997559,0.00000000,0.00000000,90.00000000); //object(gen_wardrobe) (6)
	CreateDynamicObject(19443,248.19999695,85.30000305,1004.29998779,0.00000000,0.00000000,0.00000000); //object(cs_landbit_61_a) (9)
	FDdoor3 = CreateDynamicObject(1567,248.19999695,86.09999847,1002.59997559,0.00000000,0.00000000,90.00000000); //object(gen_wardrobe) (7)
	CreateDynamicObject(19443,248.19999695,88.40000153,1004.29998779,0.00000000,0.00000000,0.00000000); //object(cs_landbit_61_a) (10)
	CreateDynamicObject(19443,244.89999390,88.09999847,1004.29998779,0.00000000,0.00000000,90.00000000); //object(cs_landbit_61_a) (11)
	CreateDynamicObject(1567,245.60000610,88.09999847,1002.59997559,0.00000000,0.00000000,0.00000000); //object(gen_wardrobe) (1)
	CreateDynamicObject(19443,247.89999390,88.09999847,1004.29998779,0.00000000,0.00000000,90.00000000); //object(cs_landbit_61_a) (12)
}

stock Objects_Motel() {
	CreateDynamicObject(19381, 1180.51, -1380.28, 13.15,   0.00, 90.00, 0.00);
	CreateDynamicObject(19449, 1185.73, -1380.31, 11.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, 1185.73, -1370.68, 11.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, 1185.73, -1361.05, 11.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, 1185.73, -1351.42, 11.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, 1185.73, -1341.79, 11.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, 1185.73, -1332.15, 11.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, 1185.73, -1322.52, 11.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, 1185.73, -1312.88, 11.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, 1185.73, -1303.25, 11.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(19449, 1185.73, -1295.61, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1180.99, -1290.88, 11.48,   0.00, 0.00, 90.00);
    CreateDynamicObject(19449, 1171.37, -1290.88, 11.48,   0.00, 0.00, 90.00);
    CreateDynamicObject(19449, 1161.74, -1290.88, 11.48,   0.00, 0.00, 90.00);
    CreateDynamicObject(19449, 1154.76, -1290.89, 11.48,   0.00, 0.00, 90.00);
    CreateDynamicObject(19449, 1150.03, -1295.73, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1150.03, -1305.36, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1150.03, -1314.98, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1150.03, -1324.61, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1150.03, -1334.24, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1150.03, -1343.86, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1150.03, -1353.48, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1150.03, -1363.11, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1150.03, -1372.74, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1150.04, -1380.33, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1154.77, -1385.06, 11.48,   0.00, 0.00, 90.00);
    CreateDynamicObject(19449, 1164.40, -1385.06, 11.48,   0.00, 0.00, 90.00);
    CreateDynamicObject(19449, 1174.03, -1385.06, 11.48,   0.00, 0.00, 90.00);
    CreateDynamicObject(19449, 1181.00, -1385.05, 11.48,   0.00, 0.00, 90.00);
    CreateDynamicObject(19381, 1170.01, -1380.28, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1159.51, -1380.28, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1155.26, -1380.28, 13.144,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1155.26, -1370.64, 13.143,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1155.26, -1361.01, 13.144,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1155.26, -1351.37, 13.143,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1155.26, -1341.75, 13.144,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1155.26, -1332.12, 13.14,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1155.26, -1322.50, 13.144,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1155.26, -1312.90, 13.145,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1155.26, -1303.28, 13.146,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1155.26, -1295.70, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1159.51, -1370.65, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1159.51, -1361.05, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1159.51, -1351.42, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1159.51, -1341.81, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1159.51, -1332.17, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1170.01, -1370.66, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1170.01, -1361.02, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1170.01, -1351.39, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1170.01, -1341.76, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1170.01, -1332.12, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1180.51, -1370.67, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1180.51, -1361.07, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1180.51, -1351.44, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1180.51, -1341.82, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1180.51, -1332.20, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1180.51, -1322.57, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1180.51, -1312.93, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1180.51, -1303.30, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1180.51, -1295.70, 13.143,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1170.01, -1322.50, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1170.01, -1312.88, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1170.01, -1303.25, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1170.01, -1295.70, 13.14,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1159.51, -1322.54, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1159.51, -1312.90, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1159.51, -1303.28, 13.15,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1159.51, -1295.70, 13.151,   0.00, 90.00, 0.00);
    CreateDynamicObject(19449, 1150.62, -1344.78, 11.48,   0.00, 0.00, 90.00);
    CreateDynamicObject(8661, 1170.39, -1334.87, 12.58,   0.00, 0.00, 0.00);
    CreateDynamicObject(8661, 1205.47, -1334.87, 9.77,   0.00, 10.00, 0.00);
    CreateDynamicObject(19449, 1185.77, -1324.77, 11.48,   0.00, 0.00, 90.00);
    CreateDynamicObject(19449, 1185.77, -1344.93, 11.48,   0.00, 0.00, 90.00);
    CreateDynamicObject(8661, 1165.80, -1334.87, 13.27,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1145.86, -1339.87, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1145.86, -1330.25, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1145.87, -1329.64, 11.48,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1150.63, -1324.91, 11.48,   0.00, 0.00, 90.00);
    CreateDynamicObject(19381, 1145.04, -1323.11, 13.12,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1145.04, -1332.74, 13.12,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1145.04, -1342.37, 13.121,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1145.04, -1345.39, 13.12,   0.00, 90.00, 0.00);
    CreateDynamicObject(19449, 1144.59, -1350.13, 11.42,   0.00, 0.00, 90.00);
    CreateDynamicObject(19449, 1154.23, -1350.13, 11.42,   0.00, 0.00, 90.00);
    CreateDynamicObject(19449, 1139.86, -1345.24, 11.42,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1139.86, -1335.61, 11.42,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1139.86, -1325.99, 11.42,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1139.87, -1323.07, 11.42,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1144.76, -1318.34, 11.42,   0.00, 0.00, 90.00);
    CreateDynamicObject(19449, 1154.39, -1318.34, 11.42,   0.00, 0.00, 90.00);
    CreateDynamicObject(8661, 1205.70, -1334.87, -0.27,   0.00, 40.00, 0.00);
    CreateDynamicObject(3684, 1168.23, -1315.94, 16.43,   0.00, 0.00, 90.00);
    CreateDynamicObject(8661, 1168.21, -1310.92, 13.24,   0.00, 0.00, 90.00);
    CreateDynamicObject(8661, 1168.20, -1364.84, 13.24,   0.00, 0.00, 90.00);
    CreateDynamicObject(3684, 1168.23, -1353.87, 16.43,   0.00, 0.00, 90.00);
    CreateDynamicObject(3684, 1168.23, -1374.59, 16.43,   0.00, 0.00, 90.00);
    CreateDynamicObject(700, 1182.58, -1296.90, 13.22,   356.86, 0.00, 3.14);
    CreateDynamicObject(700, 1152.11, -1304.56, 13.22,   356.86, 0.00, 3.14);
    CreateDynamicObject(700, 1151.38, -1369.33, 13.22,   356.86, 0.00, 3.14);
    CreateDynamicObject(700, 1184.53, -1379.86, 13.22,   356.86, 0.00, 3.14);
    CreateDynamicObject(700, 1185.04, -1358.67, 13.22,   356.86, 0.00, 3.14);
    CreateDynamicObject(19357, 1178.57, -1342.19, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1175.65, -1342.19, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1172.50, -1342.19, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1164.00, -1342.19, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1161.06, -1342.19, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1158.01, -1342.19, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1154.96, -1342.19, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1151.98, -1342.19, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1149.02, -1342.19, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1146.14, -1342.19, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1146.14, -1327.40, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1149.02, -1327.40, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1151.98, -1327.40, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1154.96, -1327.40, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1158.01, -1327.40, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1161.06, -1327.40, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1164.00, -1327.40, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1172.50, -1327.40, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1175.65, -1327.40, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1178.57, -1327.40, 11.522,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1177.48, -1293.58, 11.492,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1174.31, -1293.58, 11.492,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1171.08, -1293.58, 11.492,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1167.94, -1293.58, 11.492,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1164.74, -1293.58, 11.492,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1161.66, -1293.58, 11.492,   0.00, 0.00, 0.00);
    CreateDynamicObject(19357, 1158.64, -1293.58, 11.492,   0.00, 0.00, 0.00);
    CreateDynamicObject(700, 1141.96, -1334.27, 13.22,   356.86, 0.00, 3.14);
    CreateDynamicObject(700, 1141.96, -1321.81, 13.22,   356.86, 0.00, 3.14);
    CreateDynamicObject(700, 1141.96, -1345.30, 13.22,   356.86, 0.00, 3.14);
    CreateDynamicObject(700, 1183.99, -1345.17, 13.22,   356.86, 0.00, 3.14);
    CreateDynamicObject(700, 1150.48, -1324.27, 13.22,   356.86, 0.00, 3.14);
    CreateDynamicObject(700, 1146.59, -1346.24, 13.22,   356.86, 0.00, 3.14);
    CreateDynamicObject(700, 1184.67, -1308.31, 13.22,   356.86, 0.00, 3.14);
    CreateDynamicObject(8526, 1189.79, -1334.74, 17.47,   0.00, 0.00, 90.00);
    CreateDynamicObject(825, 1153.76, -1294.20, 13.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(1297, 1172.54, -1291.88, 16.63,   0.00, 0.00, 90.00);
	CreateDynamicObject(1297, 1163.24, -1291.88, 16.63,   0.00, 0.00, 90.00);
	CreateDynamicObject(947, 1177.46, -1301.66, 15.41,   0.00, 0.00, 90.00);
	CreateDynamicObject(825, 1153.64, -1302.36, 13.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(825, 1181.63, -1301.82, 13.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(1290, 1155.31006, -1334.41003, 18.03000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1290, 1173.29297, -1334.41003, 18.03000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(5777, 1173.26, -1334.44, 13.56,   0.00, 0.00, 0.00);
	CreateDynamicObject(5777, 1155.28, -1334.44, 13.56,   0.00, 0.00, 0.00);
	CreateDynamicObject(825, 1142.64, -1327.20, 13.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(825, 1141.76, -1333.63, 13.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(825, 1142.79, -1340.35, 13.30,   0.00, 0.00, 304.63);
}

stock Objects_Grottis() {
    CreateDynamicObject(18980, 549.14, -1285.60, 13.722,   0.00, 0.00, 0.00);
	CreateDynamicObject(19357, 548.94, -1263.66, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19357, 550.78, -1266.28, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19357, 546.12, -1265.70, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19357, 547.95, -1268.30, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19357, 543.28, -1267.61, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19357, 545.11, -1270.23, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19357, 540.60, -1269.60, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19357, 542.43, -1272.22, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19357, 537.85, -1271.78, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19357, 539.67, -1274.39, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19357, 535.22, -1273.87, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19357, 537.04, -1276.48, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19449, 521.96, -1291.31, 14.492,   0.00, 0.00, 130.00);
	CreateDynamicObject(19449, 527.29, -1291.26, 14.492,   0.00, 0.00, 130.00);
	CreateDynamicObject(19449, 532.71, -1291.34, 14.492,   0.00, 0.00, 130.00);
	CreateDynamicObject(19357, 532.41, -1276.07, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19357, 534.24, -1278.67, 14.492,   0.00, 0.00, 35.00);
	CreateDynamicObject(19357, 564.85, -1270.07, 14.492,   0.00, 0.00, 100.00);
	CreateDynamicObject(19357, 561.73, -1270.62, 14.492,   0.00, 0.00, 100.00);
	CreateDynamicObject(19357, 565.62, -1273.56, 14.492,   0.00, 0.00, 100.00);
	CreateDynamicObject(19357, 562.48, -1274.12, 14.492,   0.00, 0.00, 100.00);
	CreateDynamicObject(19357, 566.33, -1276.85, 14.492,   0.00, 0.00, 100.00);
	CreateDynamicObject(19357, 563.18, -1277.41, 14.492,   0.00, 0.00, 100.00);
	CreateDynamicObject(19357, 567.05, -1280.22, 14.492,   0.00, 0.00, 100.00);
	CreateDynamicObject(19357, 563.90, -1280.77, 14.492,   0.00, 0.00, 100.00);
	CreateDynamicObject(19357, 567.81, -1283.75, 14.492,   0.00, 0.00, 100.00);
	CreateDynamicObject(19357, 564.67, -1284.30, 14.492,   0.00, 0.00, 100.00);
	CreateDynamicObject(19449, 546.49, -1281.54, 14.942,   0.00, 0.00, 130.00);
	CreateDynamicObject(19449, 553.19, -1282.18, 14.94,   0.00, 0.00, 40.00);
	CreateDynamicObject(19449, 545.22, -1288.78, 14.94,   0.00, 0.00, 40.00);
	CreateDynamicObject(19449, 552.61, -1288.84, 14.94,   0.00, 0.00, 130.00);
	CreateDynamicObject(19381, 549.20, -1285.46, 16.61,   0.00, 90.00, 40.00);
	CreateDynamicObject(19449, 545.87, -1282.06, 14.94,   0.00, 0.00, 130.00);
	CreateDynamicObject(19449, 551.93, -1289.41, 14.93,   0.00, 0.00, 130.00);
	CreateDynamicObject(1215, 552.90, -1258.65, 16.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 562.45, -1253.15, 16.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 565.18, -1265.88, 16.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 550.36, -1278.40, 16.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 541.98, -1285.49, 16.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 531.91, -1294.07, 16.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 525.75, -1279.67, 16.78,   0.00, 0.00, 0.00);

	new poster = CreateObject(19358, 549.15, -1284.96, 24.11,   0.00, 0.00, 90.00),
		posterb = CreateObject(19358, 549.15, -1285.13, 24.11,   0.00, 0.00, 90.00);
	SetObjectMaterial(poster, 0, 6337, "sunset02_law2", "SunBillB08");
	SetObjectMaterial(posterb, 0, 6337, "sunset02_law2", "BLOCK2");
}

stock Objects_FireDepartment() {
    /* --- FD Exterior OLD --- */

	/*CreateDynamicObject(4100, 1526.38, -1582.19, 14.08,   0.00, 0.00, 320.00);
	CreateDynamicObject(4100, 1540.09, -1582.24, 14.08,   0.00, 0.00, 320.00);
	CreateDynamicObject(4100, 1501.67, -1582.25, 14.08,   0.00, 0.00, 320.00);
	CreateDynamicObject(4100, 1487.95, -1582.23, 14.08,   0.00, 0.00, 320.00);
	CreateDynamicObject(4100, 1474.22, -1582.20, 14.08,   0.00, 0.00, 320.00);
	CreateDynamicObject(4100, 1546.71, -1575.08, 14.08,   0.00, 0.00, 50.00);
	CreateDynamicObject(4100, 1439.82, -1574.98, 14.08,   0.00, 0.00, 48.46);
	CreateDynamicObject(4100, 1441.14, -1561.34, 14.08,   0.00, 0.00, 40.87);
	CreateDynamicObject(4100, 1444.07, -1547.93, 14.08,   0.00, 0.00, 35.18);
	CreateDynamicObject(3998, 1470.79, -1563.43, 18.86,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1537.48, -1571.91, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19364, 1522.98, -1560.98, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1527.85, -1571.91, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19364, 1522.98, -1570.36, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(19364, 1522.98, -1551.65, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(19364, 1522.98, -1542.30, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(19364, 1522.98, -1532.97, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1542.22, -1567.18, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(4100, 1863.65, -1572.17, 85.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1542.22, -1557.55, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1542.22, -1547.92, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1542.22, -1538.28, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1527.71, -1531.46, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1537.34, -1531.45, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19364, 1542.22, -1532.97, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(4100, 1546.71, -1561.34, 14.08,   0.00, 0.00, 50.00);
	CreateDynamicObject(4100, 1546.73, -1547.60, 14.08,   0.00, 0.00, 50.00);
	CreateDynamicObject(4100, 1546.76, -1533.88, 14.08,   0.00, 0.00, 50.00);
	CreateDynamicObject(4100, 1546.78, -1520.16, 14.08,   0.00, 0.00, 50.00);
	CreateDynamicObject(4100, 1546.81, -1506.44, 14.08,   0.00, 0.00, 50.00);
	CreateDynamicObject(4100, 1546.83, -1492.67, 14.08,   0.00, 0.00, 50.00);
	CreateDynamicObject(4100, 1545.24, -1479.14, 14.08,   0.00, 0.00, 63.33);
	CreateDynamicObject(4100, 1546.30, -1476.26, 14.08,   0.00, 0.00, 50.00);
	CreateDynamicObject(4100, 1464.81, -1483.39, 14.08,   0.00, 0.00, 33.14);
	CreateDynamicObject(19456, 1527.84, -1571.91, 17.76,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1537.48, -1571.91, 17.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1542.22, -1567.18, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1542.22, -1557.55, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1542.22, -1547.92, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19364, 1542.22, -1532.97, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1537.34, -1531.45, 17.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1527.71, -1531.46, 17.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(19364, 1522.98, -1532.97, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1542.22, -1538.28, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1522.98, -1539.40, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1522.98, -1549.03, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1522.98, -1558.66, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1522.96, -1567.19, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19377, 1528.15, -1567.18, 19.42,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1536.99, -1567.18, 19.43,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1528.15, -1557.54, 19.42,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1536.99, -1557.54, 19.43,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1536.93, -1547.99, 19.43,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1536.93, -1538.35, 19.43,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1528.15, -1547.91, 19.42,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1528.15, -1538.27, 19.42,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1528.15, -1536.19, 19.43,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1536.99, -1536.19, 19.42,   0.00, 90.00, 0.00);
	CreateDynamicObject(8843, 1525.75, -1565.85, 12.56,   0.24, 0.00, 90.00);
	CreateDynamicObject(8843, 1525.76, -1556.40, 12.57,   0.24, 0.00, 90.00);
	CreateDynamicObject(8843, 1525.97, -1546.98, 12.57,   0.24, 0.00, 90.00);
	CreateDynamicObject(8843, 1526.00, -1537.74, 12.57,   0.24, 0.00, 90.00);
	CreateDynamicObject(10183, 1475.01, -1517.77, 12.56,   0.00, 0.00, 225.72);
	CreateDynamicObject(10183, 1475.03, -1527.13, 12.57,   0.00, 0.00, 44.98);
	CreateDynamicObject(1372, 1488.98, -1554.37, 12.68,   3.14, 0.00, 179.45);
	CreateDynamicObject(1372, 1490.90, -1554.39, 12.68,   3.14, 0.00, 179.45);
	CreateDynamicObject(1258, 1519.74, -1582.72, 13.09,   356.86, 0.00, 3.14);
	CreateDynamicObject(4100, 1446.77, -1582.16, 14.08,   0.00, 0.00, 320.00);
	CreateDynamicObject(4100, 1460.50, -1582.19, 14.08,   0.00, 0.00, 320.00);
	CreateDynamicObject(4100, 1447.61, -1534.65, 14.08,   0.00, 0.00, 35.18);
	CreateDynamicObject(4100, 1451.14, -1521.39, 14.08,   0.00, 0.00, 35.18);
	CreateDynamicObject(4100, 1454.69, -1508.14, 14.08,   0.00, 0.00, 35.18);
	CreateDynamicObject(4100, 1457.34, -1498.21, 14.08,   0.00, 0.00, 35.18);
	CreateDynamicObject(4100, 1465.57, -1488.91, 14.08,   0.00, 0.00, 344.49);
	CreateDynamicObject(3286, 1537.13, -1528.63, 17.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(3286, 1531.56, -1528.63, 17.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(8613, 1475.98, -1563.48, 28.82,   0.00, 0.00, 90.00);
	CreateDynamicObject(3109, 1471.06, -1564.29, 27.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(3934, 1460.27, -1564.72, 32.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1504.81, -1495.83, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1504.81, -1505.46, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1540.46, -1490.94, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19364, 1506.32, -1510.19, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19364, 1515.69, -1510.19, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19364, 1525.03, -1510.18, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19364, 1534.35, -1510.18, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19364, 1543.67, -1510.18, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1545.19, -1505.30, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1545.19, -1495.67, 14.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1530.83, -1490.94, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1521.20, -1490.94, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1511.56, -1490.94, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19364, 1506.32, -1490.94, 14.26,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1509.53, -1510.19, 17.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1519.17, -1510.19, 17.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1528.79, -1510.19, 17.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1538.43, -1510.19, 17.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(19364, 1543.67, -1510.18, 17.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1545.19, -1505.30, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1545.19, -1495.67, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1540.46, -1490.94, 17.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1530.83, -1490.94, 17.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1521.20, -1490.94, 17.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1511.56, -1490.94, 17.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(19364, 1506.32, -1490.94, 17.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1504.81, -1495.83, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1504.81, -1505.46, 17.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19377, 1509.98, -1495.70, 19.43,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1520.48, -1495.70, 19.43,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1530.98, -1495.70, 19.43,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1540.01, -1495.70, 19.43,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1540.01, -1505.33, 19.43,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1529.50, -1505.33, 19.43,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1519.00, -1505.33, 19.43,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1509.98, -1505.33, 19.43,   0.00, 90.00, 0.00);
	CreateDynamicObject(0, 1539.08, -1507.61, 12.57,   0.16, 0.00, 180.00);
	CreateDynamicObject(8843, 1529.82, -1507.55, 12.57,   0.16, 0.00, 180.00);
	CreateDynamicObject(8843, 1520.42, -1507.37, 12.57,   0.16, 0.00, 180.00);
	CreateDynamicObject(8843, 1511.04, -1507.26, 12.57,   0.16, 0.00, 180.00);
	CreateDynamicObject(5859, 1548.72, -1520.66, 12.32,   0.00, 0.00, 179.63);
	CreateDynamicObject(3458, 1475.14, -1523.83, 13.06,   180.00, 0.00, 0.00);
	CreateDynamicObject(3458, 1475.14, -1519.98, 16.01,   0.00, 0.00, 0.00);
	CreateDynamicObject(3458, 1475.14, -1520.98, 13.06,   180.00, 0.00, 180.00);
	CreateDynamicObject(3458, 1475.14, -1524.83, 16.02,   0.00, 0.00, 180.00);
	CreateDynamicObject(10183, 1475.49, -1547.09, 12.56,   0.00, 0.00, 225.72);
	CreateDynamicObject(640, 1495.60, -1517.55, 13.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(640, 1495.63, -1527.40, 13.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1485.48, -1522.36, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1492.78, -1522.42, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1471.43, -1522.37, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1457.44, -1522.42, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1494.37, -1554.52, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1481.30, -1554.75, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1467.90, -1551.19, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1454.28, -1551.22, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1494.09, -1572.36, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1290, 1504.40, -1500.33, 18.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(1290, 1523.10, -1531.03, 18.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(1290, 1454.99, -1522.43, 18.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(1283, 1523.53, -1591.63, 15.63,   0.00, 0.00, 90.00);
	CreateDynamicObject(1596, 1487.78, -1561.80, 29.01,   0.00, 0.00, 89.25);
	CreateDynamicObject(1596, 1484.38, -1567.50, 29.01,   0.00, 0.00, 357.11);
	CreateDynamicObject(1290, 1495.61, -1522.40, 18.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(10183, 1482.78, -1494.38, 12.57,   0.00, 0.00, 44.98);
	CreateDynamicObject(10183, 1524.91, -1494.80, 12.58,   0.00, 0.00, 45.38);
	CreateDynamicObject(10183, 1525.03, -1502.22, 12.58,   0.00, 0.00, 225.94);
	CreateDynamicObject(3262, 1504.74, -1582.34, 12.51,   0.00, 0.00, 0.00);
	CreateDynamicObject(10183, 1538.45, -1551.65, 12.57,   0.00, 0.00, 315.57);
	CreateDynamicObject(10183, 1531.07, -1551.71, 12.57,   0.00, 0.00, 135.84);
	CreateDynamicObject(3262, 1473.97, -1582.57, 12.51,   0.00, 0.00, 0.00);
	CreateDynamicObject(3262, 1446.47, -1582.39, 12.51,   0.00, 0.00, 0.00);
	CreateDynamicObject(3262, 1536.38, -1582.37, 12.51,   0.00, 0.00, 0.00);
	CreateDynamicObject(3262, 1439.79, -1568.38, 12.51,   0.00, 0.00, 270.00);
	CreateDynamicObject(3262, 1446.48, -1538.21, 12.51,   0.00, 0.00, 252.90);
	CreateDynamicObject(3262, 1456.18, -1501.68, 12.51,   0.00, 0.00, 255.19);
	CreateDynamicObject(717, 1443.42, -1581.17, 12.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(717, 1466.94, -1580.91, 12.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(717, 1494.67, -1581.24, 12.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(717, 1533.28, -1581.14, 12.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(717, 1496.00, -1552.60, 12.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(717, 1447.06, -1540.66, 12.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(717, 1456.63, -1504.91, 12.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(16101, 1519.22, -1582.18, 5.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(16101, 1508.23, -1582.27, 5.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(16101, 1524.75, -1582.15, 5.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(16101, 1502.69, -1582.21, 5.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1596, 1481.07, -1562.31, 29.01,   0.00, 0.00, 223.19);
	CreateDynamicObject(640, 1528.72, -1572.86, 13.37,   0.00, 0.00, 90.00);
	CreateDynamicObject(640, 1536.97, -1572.74, 13.37,   0.00, 0.00, 90.00);
	CreateDynamicObject(717, 1545.26, -1559.28, 12.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(717, 1545.19, -1537.12, 12.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(717, 1545.04, -1515.18, 12.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1508.23, -1581.91, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1519.27, -1581.97, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1522.58, -1570.54, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1522.64, -1561.14, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1522.57, -1551.58, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1522.60, -1542.26, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1522.58, -1532.86, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1506.15, -1510.47, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1515.57, -1510.54, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1525.11, -1510.60, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1534.37, -1510.57, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1543.97, -1510.61, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1495.48, -1490.54, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1465.28, -1490.36, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1475.24, -1490.41, 13.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1485.54, -1490.50, 13.07,   0.00, 0.00, 0.00);

	FDtext1 = CreateDynamicObject(989, 1516.46, -1582.16, 14.37,   0.00, 0.00, 287.00);
	FDtext2 = CreateDynamicObject(989, 1511.02, -1582.18, 14.37,   0.00, 0.00, 287.00);

	garage1 = CreateDynamicObject(17951, 1523.01, -1565.67, 14.30,   0.00, 0.00, 359.50);
	garage2 = CreateDynamicObject(17951, 1523.02, -1556.34, 14.30,   0.00, 0.00, 359.70);
	garage3 = CreateDynamicObject(17951, 1523.01, -1546.99, 14.30,   0.00, 0.00, 359.90);
	garage4 = CreateDynamicObject(17951, 1522.97, -1537.63, 14.30,   0.00, 0.00, 0.00);
	garage5 = CreateDynamicObject(17951, 1511.01, -1510.19, 14.30,   0.00, 0.00, 90.00);
	garage6 = CreateDynamicObject(17951, 1520.37, -1510.19, 14.30,   0.00, 0.00, 90.00);
	garage7 = CreateDynamicObject(17951, 1529.71, -1510.16, 14.30,   0.00, 0.00, 89.80);
	garage8 = CreateDynamicObject(17951, 1539.03, -1510.14, 14.30,   0.00, 0.00, 89.80);

	LSFDPickup = CreateDynamicPickup(1239, 23, 1493.2489, -1558.3562, 14.1353);
	LSFDDutyPickup = CreateDynamicPickup(1239, 23, 254.2592, 78.3316, 1003.6406);*/

	/* --- All Saints General Hospital OLD --- */

	/*CreateDynamicObject(4199, 1404.84, -1702.48, 14.57,   0.00, 0.00, 90.00);
	CreateDynamicObject(5708, 1409.56, -1631.75, 4.89,   0.00, 0.00, 270.00);
	CreateDynamicObject(5708, 1400.56, -1593.37, 3.95,   0.00, 0.00, 270.00);
	CreateDynamicObject(625, 1420.92, -1602.74, 13.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(625, 1420.84, -1643.92, 13.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(625, 1419.94, -1664.79, 13.40,   0.00, 0.00, 56.23);
	CreateDynamicObject(646, 1411.76, -1640.67, 14.00,   0.00, 0.00, 315.75);
	CreateDynamicObject(646, 1411.73, -1629.83, 14.00,   0.00, 0.00, 315.75);
	CreateDynamicObject(3934, 1396.55, -1621.87, 29.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(18756, 1396.91, -1640.27, 31.59,   0.00, 0.00, 90.00);
	CreateDynamicObject(18757, 1396.91, -1640.29, 31.59,   0.00, 0.00, 90.00);
	CreateDynamicObject(3526, 1400.47, -1625.27, 29.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(3526, 1400.53, -1618.63, 29.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(3526, 1392.47, -1618.62, 29.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(3526, 1392.45, -1625.29, 29.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(5708, 1369.55, -1649.67, 22.29,   0.00, 0.00, 0.00);
	CreateDynamicObject(8661, 1409.62, -1664.65, 12.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(8661, 1409.62, -1624.68, 12.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(8661, 1409.62, -1622.46, 12.57,   0.00, 0.00, 90.00);
	CreateDynamicObject(8661, 1395.41, -1622.48, 12.60,   0.00, 0.00, 90.00);
	CreateDynamicObject(3055, 1408.25, -1672.63, 14.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(19467, 1419.68, -1650.38, 12.55,   15.44, 0.00, 90.00);
	CreateDynamicObject(19467, 1419.68, -1646.90, 12.55,   15.44, 0.00, 90.00);
	CreateDynamicObject(19467, 1424.61, -1668.92, 12.51,   28.02, 0.00, 90.00);
	CreateDynamicObject(19467, 1424.61, -1673.42, 12.51,   28.02, 0.00, 90.00);
	CreateDynamicObject(19467, 1424.61, -1677.88, 12.51,   28.02, 0.00, 90.00);
	CreateDynamicObject(3578, 1411.00, -1652.50, 11.79,   20.00, 0.00, 0.00);
	CreateDynamicObject(3578, 1411.00, -1648.63, 11.79,   20.00, 0.00, 0.00);
	CreateDynamicObject(3578, 1411.00, -1644.90, 11.79,   20.00, 0.00, 0.00);
	CreateDynamicObject(1281, 1414.24, -1626.77, 13.41,   0.00, 0.00, 0.00);
	CreateDynamicObject(1281, 1414.43, -1622.55, 13.41,   0.00, 0.00, 0.00);
	CreateDynamicObject(1281, 1414.31, -1618.65, 13.41,   0.00, 0.00, 0.00);
	CreateDynamicObject(1281, 1418.41, -1620.58, 13.41,   0.00, 0.00, 0.00);
	CreateDynamicObject(1281, 1418.61, -1624.86, 13.41,   0.00, 0.00, 0.00);
	CreateDynamicObject(18014, 1419.04, -1640.97, 13.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(18014, 1419.04, -1629.33, 13.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(2837, 1419.09, -1624.91, 13.43,   0.00, 0.00, 0.00);
	CreateDynamicObject(2837, 1414.68, -1618.78, 13.43,   0.00, 0.00, 90.00);
	CreateDynamicObject(2838, 1414.87, -1626.70, 13.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(997,1419.2,-1636.6,12.600,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(997,1407.6,-1635.00000000,13.50000000,0.00000000,20.00000000,0.00000000);
	CreateDynamicObject(1215, 1411.09, -1634.97, 13.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1412.07, -1629.94, 13.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1412.04, -1640.94, 13.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1419.45, -1643.48, 13.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1419.46, -1626.72, 13.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1419.68, -1611.82, 13.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 1419.68, -1607.66, 13.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(3055, 1380.64, -1648.66, 14.42,   0.00, 0.00, 90.00);*/

    CreateDynamicObject(4100, 1439.82, -1574.98, 15.22,   0.00, 0.00, 48.46);
    CreateDynamicObject(4100, 1441.14, -1561.34, 15.22,   0.00, 0.00, 40.87);
    CreateDynamicObject(4100, 1444.07, -1547.93, 15.22,   0.00, 0.00, 35.18);
    CreateDynamicObject(4100, 1863.65, -1572.17, 85.13,   0.00, 0.00, 0.00);
    CreateDynamicObject(4100, 1546.32, -1489.99, 15.22,   0.00, 0.00, 50.00);
    CreateDynamicObject(4100, 1464.81, -1483.39, 12.38,   0.00, 0.00, 33.14);
    CreateDynamicObject(8843, 1451.66, -1535.46, 12.57,   0.30, 0.00, 270.00);
    CreateDynamicObject(4100, 1446.77, -1582.16, 15.22,   0.00, 0.00, 320.00);
    CreateDynamicObject(4100, 1451.14, -1521.39, 15.22,   0.00, 0.00, 35.18);
    CreateDynamicObject(4100, 1457.34, -1498.21, 15.22,   0.00, 0.00, 35.18);
    CreateDynamicObject(4100, 1465.57, -1488.91, 12.38,   0.00, 0.00, 344.49);
    CreateDynamicObject(0, 1539.08, -1507.61, 12.57,   0.16, 0.00, 180.00);
    CreateDynamicObject(1283, 1523.53, -1591.63, 15.63,   0.00, 0.00, 90.00);
    CreateDynamicObject(1290, 1514.85, -1579.22, 18.42,   0.00, 0.00, 0.00);
    CreateDynamicObject(717, 1448.91, -1577.79, 12.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(717, 1494.67, -1581.24, 12.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(717, 1534.92, -1581.08, 12.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(717, 1455.83, -1522.75, 12.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(717, 1469.89, -1503.93, 12.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(16101, 1449.26, -1528.33, 5.52,   0.00, 0.00, 0.00);
    CreateDynamicObject(717, 1545.19, -1537.12, 12.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(717, 1544.80, -1500.49, 12.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(1215, 1495.48, -1490.54, 13.07,   0.00, 0.00, 0.00);
    CreateDynamicObject(1215, 1464.40, -1490.36, 13.07,   0.00, 0.00, 0.00);
    CreateDynamicObject(1215, 1475.24, -1490.41, 13.07,   0.00, 0.00, 0.00);
    CreateDynamicObject(1215, 1485.54, -1490.50, 13.07,   0.00, 0.00, 0.00);
    CreateDynamicObject(4100, 1465.57, -1488.91, 15.22,   0.00, 0.00, 344.49);
    CreateDynamicObject(4100, 1457.34, -1498.21, 12.38,   0.00, 0.00, 35.18);
    CreateDynamicObject(4100, 1451.14, -1521.39, 12.38,   0.00, 0.00, 35.18);
    CreateDynamicObject(4100, 1444.07, -1547.93, 12.38,   0.00, 0.00, 35.18);
    CreateDynamicObject(4100, 1441.14, -1561.34, 12.38,   0.00, 0.00, 40.87);
    CreateDynamicObject(4100, 1439.82, -1574.98, 12.38,   0.00, 0.00, 48.46);
    CreateDynamicObject(4100, 1446.77, -1582.16, 12.38,   0.00, 0.00, 320.00);
    CreateDynamicObject(4100, 1546.31, -1489.98, 12.38,   0.00, 0.00, 50.00);
    CreateDynamicObject(4100, 1464.81, -1483.39, 15.22,   0.00, 0.00, 33.14);
    CreateDynamicObject(4100, 1546.30, -1503.73, 12.38,   0.00, 0.00, 50.00);
    CreateDynamicObject(4100, 1546.27, -1517.45, 12.38,   0.00, 0.00, 50.00);
    CreateDynamicObject(4100, 1546.24, -1531.17, 12.38,   0.00, 0.00, 50.00);
    CreateDynamicObject(4100, 1546.21, -1544.89, 12.38,   0.00, 0.00, 50.00);
    CreateDynamicObject(4100, 1546.21, -1552.93, 12.38,   0.00, 0.00, 50.00);
    CreateDynamicObject(4100, 1546.31, -1503.72, 15.22,   0.00, 0.00, 50.00);
    CreateDynamicObject(4100, 1546.28, -1517.45, 15.22,   0.00, 0.00, 50.00);
    CreateDynamicObject(4100, 1546.25, -1531.17, 15.22,   0.00, 0.00, 50.00);
    CreateDynamicObject(4100, 1546.22, -1544.90, 15.22,   0.00, 0.00, 50.00);
    CreateDynamicObject(4100, 1546.22, -1552.93, 15.22,   0.00, 0.00, 50.00);
    CreateDynamicObject(19381, 1491.16, -1577.52, 12.86,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1486.79, -1573.95, 12.86,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1486.79, -1577.51, 12.861,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1468.42, -1574.49, 12.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1468.42, -1577.49, 12.86,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1538.35, -1577.47, 12.863,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1542.45, -1577.48, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1507.86, -1580.69, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1507.86, -1577.52, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1507.86, -1574.31, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1507.86, -1571.10, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1521.77, -1580.67, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1521.76, -1577.48, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1521.76, -1574.27, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1521.76, -1571.07, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1514.96, -1580.68, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1514.96, -1577.83, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(824, 1540.57, -1577.93, 13.59,   0.00, 0.00, 320.00);
    CreateDynamicObject(635, 1540.06, -1581.45, 13.33,   0.00, 270.00, 90.00);
    CreateDynamicObject(635, 1541.04, -1581.46, 13.33,   0.00, 270.00, 90.00);
    CreateDynamicObject(824, 1540.60, -1579.37, 13.59,   0.00, 0.00, 320.00);
    CreateDynamicObject(824, 1540.57, -1577.93, 13.59,   0.00, 0.00, 320.00);
    CreateDynamicObject(824, 1539.48, -1578.70, 13.59,   0.00, 0.00, 0.00);
    CreateDynamicObject(717, 1482.87, -1575.34, 12.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(3055, 1477.58, -1569.67, 14.68,   0.00, 0.00, 0.00);
    CreateDynamicObject(805, 1514.57, -1579.58, 13.57,   0.00, 0.00, 336.92);
    CreateDynamicObject(869, 1507.86, -1580.05, 13.34,   0.00, 0.00, 82.99);
    CreateDynamicObject(869, 1507.89, -1578.09, 13.34,   0.00, 0.00, 82.99);
    CreateDynamicObject(869, 1507.85, -1575.86, 13.34,   0.00, 0.00, 82.99);
    CreateDynamicObject(869, 1507.87, -1573.78, 13.34,   0.00, 0.00, 82.99);
    CreateDynamicObject(869, 1507.90, -1570.94, 13.34,   0.00, 0.00, 82.99);
    CreateDynamicObject(869, 1521.80, -1580.02, 13.34,   0.00, 0.00, 82.99);
    CreateDynamicObject(869, 1521.79, -1578.68, 13.34,   0.00, 0.00, 82.99);
    CreateDynamicObject(869, 1521.72, -1576.58, 13.34,   0.00, 0.00, 82.99);
    CreateDynamicObject(869, 1521.80, -1574.40, 13.34,   0.00, 0.00, 82.99);
    CreateDynamicObject(869, 1521.70, -1571.26, 13.34,   0.00, 0.00, 82.99);
    CreateDynamicObject(869, 1514.92, -1580.14, 13.34,   0.00, 0.00, 82.99);
    CreateDynamicObject(869, 1514.95, -1578.32, 13.34,   0.00, 0.00, 82.99);
    CreateDynamicObject(16101, 1445.74, -1541.58, 5.52,   0.00, 0.00, 0.00);
    CreateDynamicObject(16101, 1452.82, -1515.05, 5.52,   0.00, 0.00, 0.00);
    CreateDynamicObject(16101, 1455.43, -1505.16, 5.52,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1447.02, -1536.90, 10.81,   0.00, 0.00, 345.15);
    CreateDynamicObject(19449, 1448.08, -1532.88, 10.81,   0.00, 0.00, 345.15);
    CreateDynamicObject(19449, 1454.09, -1510.39, 10.81,   0.00, 0.00, 345.15);
    CreateDynamicObject(19449, 1465.18, -1545.72, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1468.26, -1545.72, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1471.36, -1545.72, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1474.64, -1545.72, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1477.74, -1545.72, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1480.92, -1545.72, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1484.12, -1545.72, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1487.52, -1545.72, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1490.97, -1545.72, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1494.21, -1545.72, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19381, 1458.69, -1545.68, 12.86,   0.00, 90.00, 0.00);
    CreateDynamicObject(637, -1543.74, 12.74, 12.74,   0.00, 0.00, 0.00);
    CreateDynamicObject(805, 1455.58, -1545.20, 13.57,   0.00, 0.00, 336.92);
    CreateDynamicObject(805, 1455.62, -1543.56, 13.57,   0.00, 0.00, 336.92);
    CreateDynamicObject(805, 1458.27, -1543.63, 13.57,   0.00, 0.00, 336.92);
    CreateDynamicObject(805, 1458.97, -1545.82, 13.57,   0.00, 0.00, 336.92);
    CreateDynamicObject(805, 1461.43, -1545.52, 13.57,   0.00, 0.00, 336.92);
    CreateDynamicObject(805, 1461.09, -1543.50, 13.57,   0.00, 0.00, 336.92);
    CreateDynamicObject(717, 1458.81, -1543.77, 12.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(8843, 1472.31, -1535.46, 12.57,   0.30, 0.00, 270.00);
    CreateDynamicObject(19381, 1450.30, -1577.08, 12.86,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1450.30, -1567.45, 12.86,   0.00, 90.00, 0.00);
    CreateDynamicObject(19381, 1450.30, -1564.07, 12.861,   0.00, 90.00, 0.00);
    CreateDynamicObject(717, 1448.91, -1561.87, 12.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(19461, 1506.18, -1577.49, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1506.18, -1567.86, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1496.34, -1577.51, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1491.62, -1582.27, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1486.37, -1582.271, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1481.60, -1577.54, 11.19,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1481.60, -1567.91, 11.19,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1473.60, -1577.49, 11.19,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1473.60, -1567.85, 11.19,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1468.87, -1582.24, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1509.54, -1577.49, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19369, 1507.88, -1582.22, 11.20,   0.00, 180.00, 90.00);
    CreateDynamicObject(19369, 1513.281, -1580.69, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19369, 1513.28, -1577.81, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19369, 1516.64, -1577.81, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19369, 1516.641, -1580.69, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19369, 1514.97, -1582.21, 11.20,   0.00, 180.00, 90.00);
    CreateDynamicObject(19369, 1514.96, -1576.29, 11.20,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1523.46, -1577.47, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1523.44, -1567.85, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1520.08, -1577.48, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19369, 1521.77, -1582.21, 11.20,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1533.17, -1577.49, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1538.07, -1582.22, 11.20,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1542.90, -1582.23, 11.20,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1547.62, -1577.32, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1449.85, -1581.83, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1445.12, -1576.92, 11.19,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1445.12, -1567.30, 11.19,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1445.121, -1564.05, 11.19,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1450.03, -1559.32, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1463.87, -1545.66, 11.19,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1453.51, -1545.66, 11.19,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1458.97, -1540.94, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1458.26, -1540.941, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1454.52, -1527.73, 11.19,   0.00, 180.00, 255.00);
    CreateDynamicObject(19381, 1455.88, -1522.73, 12.861,   0.00, 90.00, 255.00);
    CreateDynamicObject(19381, 1463.99, -1523.80, 12.86,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1473.63, -1523.80, 12.862,   0.00, 90.00, 90.00);
    CreateDynamicObject(19461, 1463.96, -1528.98, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1473.60, -1528.98, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1478.37, -1524.25, 11.19,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1478.37, -1523.35, 11.19,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1473.47, -1518.62, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1463.83, -1518.62, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1457.20, -1517.73, 11.19,   0.00, 180.00, 255.00);
    CreateDynamicObject(19461, 1451.36, -1521.24, 11.19,   0.00, 180.00, 165.00);
    CreateDynamicObject(19461, 1451.22, -1521.78, 11.19,   0.00, 180.00, 165.00);
    CreateDynamicObject(717, 1465.39, -1523.90, 12.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(717, 1475.65, -1523.90, 12.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(8843, 1485.35, -1529.70, 12.57,   0.30, 0.00, 0.00);
    CreateDynamicObject(8843, 1484.01, -1510.90, 12.57,   0.30, 0.00, 90.00);
    CreateDynamicObject(8843, 1468.31, -1510.90, 12.57,   0.30, 0.00, 90.00);
    CreateDynamicObject(19449, 1496.43, -1541.94, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1517.94, -1541.99, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1492.78, -1490.78, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1489.48, -1490.78, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1486.08, -1490.78, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1482.54, -1490.78, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1479.12, -1490.78, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1475.62, -1490.78, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19373, 1468.62, -1503.85, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19449, 1472.02, -1490.78, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1468.58, -1490.78, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19449, 1464.94, -1490.78, 10.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19373, 1472.12, -1503.85, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1475.62, -1503.85, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1479.11, -1503.85, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1482.60, -1503.85, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19373, 1486.10, -1503.85, 12.862,   0.00, 90.00, 0.00);
    CreateDynamicObject(19461, 1471.67, -1505.39, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19369, 1466.94, -1503.85, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1481.30, -1505.39, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1483.04, -1505.38, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19369, 1487.77, -1503.85, 11.20,   0.00, 180.00, 0.00);
    CreateDynamicObject(19461, 1483.04, -1502.32, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1473.42, -1502.321, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(19461, 1471.67, -1502.32, 11.19,   0.00, 180.00, 90.00);
    CreateDynamicObject(717, 1484.93, -1503.93, 12.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(1569, 1506.45, -1542.11, 12.53,   0.00, 0.00, 0.00);
    CreateDynamicObject(1569, 1509.43, -1542.11, 12.53,   0.00, 0.00, 180.00);
    //CreateDynamicObject(1569, 1496.94, -1542.11, 12.53,   0.00, 0.00, 0.00);
    //CreateDynamicObject(1569, 1499.95, -1542.11, 12.53,   0.00, 0.00, 180.00);

    new wall0 = CreateDynamicObject(19449, 1538.64, -1522.03, 14.31,   0.00, 0.00, 0.00); //0
    new wall1 = CreateDynamicObject(19449, 1538.64, -1531.66, 14.31,   0.00, 0.00, 0.00); //1
    new wall2 = CreateDynamicObject(19449, 1533.91, -1541.43, 14.31,   0.00, 0.00, 90.00); //2
    garage[0] = CreateDynamicObject(19362, 1529.001, -1533.49, 14.31,   0.00, 0.00, 0.00); //Garage 3
    new wall4 = CreateDynamicObject(19430, 1529.00, -1535.90, 14.31,   0.00, 0.00, 0.00); //Small 4
    new wall5 = CreateDynamicObject(19430, 1529.00, -1531.08, 14.31,   0.00, 0.00, 0.00); //Small 5
    garage[1] = CreateDynamicObject(19362, 1529.001, -1528.67, 14.31,   0.00, 0.00, 0.00); //Garage 6
    new wall7 = CreateDynamicObject(19430, 1529.00, -1526.27, 14.31,   0.00, 0.00, 0.00); //Small 7
    garage[2] = CreateDynamicObject(19362, 1529.001, -1523.86, 14.31,   0.00, 0.00, 0.00); //Garage 8
    new wall9 = CreateDynamicObject(19430, 1529.00, -1521.45, 14.31,   0.00, 0.00, 0.00); //Small 9
    garage[3] = CreateDynamicObject(19362, 1529.001, -1519.05, 14.31,   0.00, 0.00, 0.00); //Garage 10
    new wall11 = CreateDynamicObject(19430, 1529.00, -1516.64, 14.31,   0.00, 0.00, 0.00); //Small 11
    garage[4] = CreateDynamicObject(19362, 1529.001, -1538.30, 14.31,   0.00, 0.00, 0.00); //Garage 12
    new wall13 = CreateDynamicObject(19430, 1529.00, -1540.71, 14.31,   0.00, 0.00, 0.00); //Small 13
    new wall14 = CreateDynamicObject(19449, 1538.641, -1536.71, 14.31,   0.00, 0.00, 0.00); //14
    new wall15 = CreateDynamicObject(19449, 1538.64, -1536.71, 17.81,   0.00, 0.00, 0.00); //15
    new wall16 = CreateDynamicObject(19449, 1538.64, -1527.08, 17.81,   0.00, 0.00, 0.00); //16
    new wall17 = CreateDynamicObject(19449, 1538.64, -1517.45, 17.81,   0.00, 0.00, 0.00); //17
    new wall18 = CreateDynamicObject(19449, 1533.91, -1541.43, 17.81,   0.00, 0.00, 90.00); //18
    new wall19 = CreateDynamicObject(19449, 1529.00, -1536.70, 17.81,   0.00, 0.00, 0.00); //19
    new wall20 = CreateDynamicObject(19449, 1529.00, -1527.07, 17.81,   0.00, 0.00, 0.00); //20
    new wall21 = CreateDynamicObject(19449, 1529.00, -1517.45, 17.81,   0.00, 0.00, 0.00); //21
    new ceiling0 = CreateDynamicObject(19377, 1533.54, -1536.73, 19.501,   0.00, 90.00, 0.00); //Roof
    new ceiling1 = CreateDynamicObject(19377, 1533.54, -1527.09, 19.502,   0.00, 90.00, 0.00); //Roof
    new ceiling2 = CreateDynamicObject(19377, 1533.54, -1521.58, 19.503,   0.00, 90.00, 0.00); //Roof

    SetDynamicObjectMaterial(ceiling0, 0, 5708, "hospital_lawn", "concretebigb256128");
    SetDynamicObjectMaterial(ceiling1, 0, 5708, "hospital_lawn", "concretebigb256128");
    SetDynamicObjectMaterial(ceiling2, 0, 5708, "hospital_lawn", "concretebigb256128");

    SetDynamicObjectMaterial(wall4, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall5, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall7, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall9, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall11, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall13, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");

    SetDynamicObjectMaterial(wall0, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall1, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall2, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall14, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall15, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall16, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall17, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall18, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall19, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall20, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(wall21, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");

    SetDynamicObjectMaterial(garage[0], 0, 13028, "ce_payspray", "ws_rollerdoor_silver");
    SetDynamicObjectMaterial(garage[1], 0, 13028, "ce_payspray", "ws_rollerdoor_silver");
    SetDynamicObjectMaterial(garage[2], 0, 13028, "ce_payspray", "ws_rollerdoor_silver");
    SetDynamicObjectMaterial(garage[3], 0, 13028, "ce_payspray", "ws_rollerdoor_silver");
    SetDynamicObjectMaterial(garage[4], 0, 13028, "ce_payspray", "ws_rollerdoor_silver");

    CreateDynamicObject(1596, 1504.70, -1506.07, 29.00,   0.00, 0.00, 0.00);
    CreateDynamicObject(1596, 1507.39, -1502.72, 29.00,   0.00, 0.00, 180.00);
    CreateDynamicObject(1596, 1501.88, -1502.02, 29.00,   0.00, 0.00, 270.00);
    CreateDynamicObject(8613, 1513.86, -1504.27, 28.73,   0.00, 0.00, 270.00);
    CreateDynamicObject(3109, 1518.82, -1497.33, 27.80,   0.00, 0.00, 0.00);
    CreateDynamicObject(3934, 1528.88, -1504.14, 32.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(3934, 1523.29, -1558.61, 29.84,   0.00, 0.00, 359.90);
    CreateDynamicObject(3109, 1508.08, -1558.75, 30.92,   0.00, 0.00, 0.00);
    CreateDynamicObject(966, 1446.74, -1538.18, 12.59,   0.00, 0.00, 255.00);
    FDGateSouth = CreateDynamicObject(968, 1446.7500, -1538.1300, 13.3900, 0.00, 270.00, 255.0000);
    CreateDynamicObject(966, 1453.02, -1514.62, 12.59,   0.00, 0.00, 255.00);
    FDGateNorth = CreateDynamicObject(968, 1453.0500, -1514.6100, 13.3900, 0.00, 270.00, 255.0000);
    CreateDynamicObject(5777, 1455.42, -1506.77, 12.83,   0.00, 0.00, 345.00);
    CreateDynamicObject(5777, 1446.52, -1540.17, 12.83,   0.00, 0.00, 345.00);
    CreateDynamicObject(967, 1449.77, -1530.09, 12.53,   0.00, 0.00, 164.91);

    new asgh = CreateObject(5708, 1500.47, -1530.94, 22.41,   0.00, 0.00, 270.00,300); //ASGH BUILDING
    SetObjectMaterial(asgh, 6, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetObjectMaterial(asgh, 10, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetObjectMaterial(asgh, 2, 4017, "civic04_lan", "sl_dtwn1win1");
    new fd = CreateObject(3998, 1519.01, -1504.85, 18.87,   0.00, 0.00, 270.00,300);
    SetObjectMaterial(fd, 1, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetObjectMaterial(fd, 4, 5708, "hospital_lawn", "concretebigb256128");
    SetObjectMaterial(fd, 3, 4552, "ammu_lan2", "sl_lavicdtwall1");

    new walld = CreateDynamicObject(19449, 1533.76, -1516.77, 14.31,   0.00, 0.00, 90.00);
    new walld1 = CreateDynamicObject(19449, 1533.76, -1516.77, 17.81,   0.00, 0.00, 90.00);
    SetDynamicObjectMaterial(walld, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");
    SetDynamicObjectMaterial(walld1, 0, 4552, "ammu_lan2", "sl_lavicdtwall1");

    new window0 = CreateObject(19362, 1496.11, -1509.90, 19.37,   90.00, 0.00, 0.00,300);
    new window1 = CreateObject(19362, 1496.11, -1509.90, 23.92,   90.00, 0.00, 0.00,300);
    new window2 = CreateObject(19362, 1496.11, -1503.24, 19.37,   90.00, 0.00, 0.00,300);
    new window3 = CreateObject(19362, 1496.11, -1496.33, 19.37,   90.00, 0.00, 0.00,300);
    new window4 = CreateObject(19362, 1496.11, -1503.24, 23.92,   90.00, 0.00, 0.00,300);
    new window5 = CreateObject(19362, 1496.11, -1496.33, 23.92,   90.00, 0.00, 0.00,300);
    new window6 = CreateObject(19362, 1505.60, -1513.25, 19.37,   90.00, 0.00, 90.00,300);
    new window7 = CreateObject(19362, 1505.60, -1513.25, 23.92,   90.00, 0.00, 90.00,300);
    new window8 = CreateObject(19362, 1528.39, -1516.72, 24.36,   90.00, 0.00, 90.00,300);
    new window9 = CreateObject(19362, 1528.39, -1516.72, 29.11,   90.00, 0.00, 90.00,300);
    new window16 = CreateObject(19362, 1540.94, -1575.89, 17.83,   90.00, 0.00, 90.00,300);
    new window17 = CreateObject(19362, 1540.94, -1575.89, 24.29,   90.00, 0.00, 90.00,300);

    SetObjectMaterial(window0, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(window1, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(window2, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(window3, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(window4, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(window5, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(window6, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(window7, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(window8, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(window9, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(window16, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(window17, 0, 4017, "civic04_lan", "sl_dtwn1win1");

    new wrow1 = CreateObject(19449, 1460.49, -1546.78, 15.82,   0.00, 0.00, 90.00, 300);
    new wrow2 = CreateObject(19449, 1468.46, -1546.77, 15.82,   0.00, 0.00, 90.00, 300);
    new wrow3 = CreateObject(19449, 1478.06, -1546.76, 15.82,   0.00, 0.00, 90.00, 300);
    new wrow4 = CreateObject(19449, 1487.69, -1546.76, 15.82,   0.00, 0.00, 90.00, 300);
    new wrow5 = CreateObject(19449, 1527.83, -1546.76, 15.82,   0.00, 0.00, 90.00, 300);
    new wrow6 = CreateObject(19449, 1537.44, -1546.76, 15.82,   0.00, 0.00, 90.00, 300);
    new wrow7 = CreateObject(19449, 1537.44, -1546.76, 21.52,   0.00, 0.00, 90.00, 300);
    new wrow8 = CreateObject(19449, 1537.44, -1546.76, 27.29,   0.00, 0.00, 90.00, 300);
    new wrow9 = CreateObject(19449, 1527.83, -1546.76, 27.29,   0.00, 0.00, 90.00, 300);
    new wrow11 = CreateObject(19449, 1508.59, -1546.76, 27.29,   0.00, 0.00, 90.00, 300);
    new wrow12 = CreateObject(19449, 1502.53, -1546.77, 27.29,   0.00, 0.00, 90.00, 300);
    new wrow13 = CreateObject(19449, 1527.81, -1546.76, 21.52,   0.00, 0.00, 90.00, 300);
    new wrow15 = CreateObject(19449, 1508.57, -1546.76, 21.52,   0.00, 0.00, 90.00, 300);
    new wrow16 = CreateObject(19449, 1498.95, -1546.76, 21.52,   0.00, 0.00, 90.00, 300);
    new wrow18 = CreateObject(19449, 1479.71, -1546.76, 21.52,   0.00, 0.00, 90.00, 300);
    new wrow19 = CreateObject(19449, 1470.11, -1546.76, 21.52,   0.00, 0.00, 90.00, 300);
    new wrow20 = CreateObject(19449, 1460.49, -1546.76, 21.52,   0.00, 0.00, 90.00, 300);

    SetObjectMaterial(wrow1, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow2, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow3, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow4, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow5, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow6, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow7, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow8, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow9, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow11, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow12, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow13, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow15, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow16, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow18, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow19, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrow20, 0, 4017, "civic04_lan", "sl_dtwn1win1");

    new wrowf0 = CreateObject(19449, 1491.26, -1569.53, 20.09,   0.00, 0.00, 90.00, 300);
    new wrowf1 = CreateObject(19449, 1481.67, -1569.57, 20.09,   0.00, 0.00, 90.00, 300);
    new wrowf2 = CreateObject(19449, 1472.04, -1569.61, 20.09,   0.00, 0.00, 90.00, 300);
    new wrowf5 = CreateObject(19449, 1466.26, -1582.46, 20.09,   0.00, 0.00, 90.00, 300);
    new wrowf6 = CreateObject(19449, 1458.26, -1582.45, 20.09,   0.00, 0.00, 90.00, 300);
    new wrowf7 = CreateObject(19449, 1458.26, -1582.45, 15.02,   0.00, 0.00, 90.00, 300);
    new wrowf8 = CreateObject(19449, 1466.26, -1582.46, 15.02,   0.00, 0.00, 90.00, 300);

    SetObjectMaterial(wrowf0, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrowf1, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrowf2, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrowf5, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrowf6, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrowf7, 0, 4017, "civic04_lan", "sl_dtwn1win1");
    SetObjectMaterial(wrowf8, 0, 4017, "civic04_lan", "sl_dtwn1win1");

    CreateDynamicObject(2614, 1494.35, -1509.54, 17.24,   0.00, 0.00, 260.00);
    CreateDynamicObject(18646, 1529.17, -1518.95, 16.70,   0.00, 90.00, 0.00);
    CreateDynamicObject(18646, 1529.17, -1523.85, 16.70,   0.00, 90.00, 0.00);
    CreateDynamicObject(18646, 1529.17, -1528.61, 16.70,   0.00, 90.00, 0.00);
    CreateDynamicObject(18646, 1529.17, -1533.49, 16.70,   0.00, 90.00, 0.00);
    CreateDynamicObject(18646, 1529.17, -1538.27, 16.70,   0.00, 90.00, 0.00);

    /* --- Pickups --- */

    LSFDPickup = CreateDynamicPickup(1239, 23, 1494.7041, -1510.0973, 14.1449);
	LSFDDutyPickup = CreateDynamicPickup(1239, 23, 254.2592, 78.3316, 1003.6406);
}

stock Objects_SportsShop() {
    CreateDynamicObject(19461,2329.5000000,-1781.4000244,1724.8010254,0.0000000,0.0000000,0.0000000); //object(snowover04) (1)
	CreateDynamicObject(19461,2344.0400391,-1788.2609863,1724.8000488,0.0000000,0.0000000,90.0000000); //object(snowover04) (2)
	CreateDynamicObject(19442,2339.1337891,-1777.5634766,1724.8010254,0.0000000,0.0000000,0.0000000); //object(cs_landbit_44_a) (3)
	CreateDynamicObject(19461,2343.7727051,-1783.3579102,1724.8000488,0.0000000,0.0000000,0.0000000); //object(snowover04) (3)
	CreateDynamicObject(19461,2334.2270508,-1786.3020020,1724.8010254,0.0000000,0.0000000,90.0000000); //object(snowover04) (4)
	CreateDynamicObject(19397,2339.1337891,-1780.1490479,1724.8010254,0.0000000,0.0000000,0.0000000); //object(land_42_sfw) (1)
	CreateDynamicObject(19461,2334.4052734,-1776.6708984,1724.8010254,0.0000000,0.0000000,90.0000000); //object(snowover04) (5)
	CreateDynamicObject(19461,2339.1337891,-1786.5720215,1724.8010254,0.0000000,0.0000000,0.0000000); //object(snowover04) (6)
	CreateDynamicObject(19461,2343.8691406,-1778.4541016,1724.8010254,0.0000000,0.0000000,90.0000000); //object(snowover04) (7)
	CreateObject(19379,2334.3000488,-1781.4000244,1722.9899902,0.0000000,90.0000000,89.9999390); //object(sfw_boxwest12) (1)
	CreateObject(19379,2343.9348145,-1783.0000000,1722.9899902,0.0000000,90.0000000,89.9998169); //object(sfw_boxwest12) (2)
	CreateDynamicObject(19377,2334.3000488,-1781.5000000,1726.6300049,0.0000000,90.0000000,90.0000000); //object(freight_interiorsfw) (1)
	CreateDynamicObject(19377,2343.9348145,-1783.0000000,1726.6300049,0.0000000,90.0000000,90.0000000); //object(freight_interiorsfw) (2)
	CreateDynamicObject(2482,2336.3999023,-1776.8994141,1723.0799561,0.0000000,0.0000000,0.0000000); //object(cj_hobby_shelf_4) (2)
	CreateDynamicObject(2462,2332.3999023,-1776.9000244,1723.0999756,0.0000000,0.0000000,0.0000000); //object(cj_hobby_shelf) (1)
	CreateDynamicObject(2462,2335.0000000,-1776.8994141,1723.0999756,0.0000000,0.0000000,0.0000000); //object(cj_hobby_shelf) (2)
	CreateDynamicObject(2502,2330.3999023,-1776.8000488,1723.0799561,0.0000000,0.0000000,0.0000000); //object(cj_hobby_shelf_5) (2)
	CreateDynamicObject(2596,2333.6000977,-1776.8000488,1724.9000244,0.0000000,0.0000000,0.0000000); //object(cj_sex_tv) (1)
	CreateDynamicObject(2227,2333.8999023,-1776.8000488,1723.0799561,0.0000000,0.0000000,0.0000000); //object(swank_hi_fi_3) (1)
	CreateDynamicObject(2233,2333.3999023,-1776.6992188,1723.0799561,0.0000000,0.0000000,0.0000000); //object(swank_speaker_4) (1)
	CreateDynamicObject(2233,2334.5996094,-1776.6992188,1723.0799561,0.0000000,0.0000000,0.0000000); //object(swank_speaker_4) (2)
	CreateDynamicObject(18092,2336.8999023,-1784.9000244,1723.5999756,0.0000000,0.0000000,90.0000000); //object(ammun3_counter) (1)
	CreateDynamicObject(1514,2336.6999512,-1783.8690186,1724.3489990,0.0000000,0.0000000,270.0000000); //object(dyn_ff_till) (3)
	CreateDynamicObject(1533,2329.6201172,-1784.9000244,1723.0000000,0.0000000,0.0000000,90.0000000); //object(gen_doorext12) (1)
	CreateDynamicObject(18092,2336.8994141,-1784.8994141,1723.5999756,0.0000000,0.0000000,90.0000000); //object(ammun3_counter) (2)
	CreateDynamicObject(1533,2329.6201172,-1783.3994141,1723.0000000,0.0000000,0.0000000,90.0000000); //object(gen_doorext12) (2)
	CreateDynamicObject(2245,2336.5000000,-1785.6999512,1724.4000244,0.0000000,0.0000000,0.0000000); //object(plant_pot_11) (1)
	CreateDynamicObject(2818,2334.3999023,-1781.4000244,1723.0999756,0.0000000,0.0000000,0.0000000); //object(gb_bedrug02) (9)
	CreateDynamicObject(2818,2334.3999023,-1780.3000488,1723.0999756,0.0000000,0.0000000,0.0000000); //object(gb_bedrug02) (10)
	CreateDynamicObject(2818,2334.3999023,-1779.1999512,1723.0999756,0.0000000,0.0000000,0.0000000); //object(gb_bedrug02) (11)
	CreateDynamicObject(2818,2332.3999023,-1779.1999512,1723.0999756,0.0000000,0.0000000,0.0000000); //object(gb_bedrug02) (13)
	CreateDynamicObject(2818,2332.3999023,-1780.3000488,1723.0999756,0.0000000,0.0000000,0.0000000); //object(gb_bedrug02) (14)
	CreateDynamicObject(2818,2332.3999023,-1781.4000244,1723.0999756,0.0000000,0.0000000,0.0000000); //object(gb_bedrug02) (15)
	CreateDynamicObject(2295,2337.8999023,-1777.4000244,1723.0999756,0.0000000,0.0000000,334.0000000); //object(cj_beanbag) (1)
	CreateDynamicObject(2571,2335.3999023,-1779.4000244,1723.0999756,0.0000000,0.0000000,180.0000000); //object(hotel_single_1) (2)
	CreateDynamicObject(2694,2333.8999023,-1780.1999512,1723.6999512,0.0000000,0.0000000,45.0000000); //object(cj_shoe_box2) (1)
	CreateDynamicObject(2239,2333.1298828,-1780.3699951,1723.0999756,0.0000000,0.0000000,0.0000000); //object(cj_mlight16) (1)
	CreateDynamicObject(2114,2330.3999023,-1777.0999756,1724.2800293,0.0000000,0.0000000,0.0000000); //object(basketball) (1)
	CreateDynamicObject(2114,2330.8000488,-1777.0000000,1724.2800293,0.0000000,0.0000000,0.0000000); //object(basketball) (3)
	CreateDynamicObject(2694,2332.8701172,-1779.9699707,1723.4699707,0.0000000,0.0000000,70.0000000); //object(cj_shoe_box2) (2)
	CreateDynamicObject(2694,2332.6799316,-1780.4499512,1723.4699707,0.0000000,0.0000000,69.9993896); //object(cj_shoe_box2) (3)
	CreateDynamicObject(2694,2332.4299316,-1780.3299561,1723.4699707,0.0000000,0.0000000,69.9993896); //object(cj_shoe_box2) (4)
	CreateDynamicObject(2694,2332.5800781,-1779.8900146,1723.4699707,0.0000000,0.0000000,69.9993896); //object(cj_shoe_box2) (5)
	CreateDynamicObject(2694,2334.8100586,-1779.9699707,1723.4699707,0.0000000,0.0000000,120.0000000); //object(cj_shoe_box2) (6)
	CreateDynamicObject(2694,2335.1298828,-1779.8699951,1723.4699707,0.0000000,0.0000000,119.9981689); //object(cj_shoe_box2) (7)
	CreateDynamicObject(2694,2335.2900391,-1780.1999512,1723.4699707,0.0000000,0.0000000,119.9981689); //object(cj_shoe_box2) (8)
	CreateDynamicObject(2694,2335.3500977,-1780.2900391,1723.4699707,0.0000000,0.0000000,119.9981384); //object(cj_shoe_box2) (9)
	CreateDynamicObject(2694,2335.0700684,-1780.4300537,1723.4699707,0.0000000,0.0000000,119.9981689); //object(cj_shoe_box2) (10)
	CreateDynamicObject(2961,2332.2199707,-1786.2199707,1724.6400146,0.0000000,0.0000000,0.0000000); //object(fire_break) (1)
	CreateDynamicObject(2404,2335.3400879,-1786.0600586,1724.3299561,350.0000000,0.0000000,180.0000000); //object(cj_surf_board) (1)
	CreateDynamicObject(1585,2337.8601074,-1786.1600342,1724.0200195,0.0000000,0.0000000,0.0000000); //object(tar_civ2) (1)
	CreateDynamicObject(1641,2339.0300293,-1784.0100098,1724.8299561,85.0000000,270.0000000,0.0000000); //object(beachtowel03) (1)
	CreateDynamicObject(14558,2340.1000977,-1788.1899414,1725.0000000,0.0000000,0.0000000,180.0000000); //object(model_box15) (1)
	CreateDynamicObject(1744,2342.4099121,-1788.3299561,1724.0198975,0.0000000,0.0000000,180.0000000); //object(med_shelf) (1)
	CreateDynamicObject(1744,2340.4199219,-1788.3299561,1724.0198975,0.0000000,0.0000000,180.0000000); //object(med_shelf) (2)
	CreateDynamicObject(1744,2342.4099121,-1788.3299561,1724.6800537,0.0000000,0.0000000,180.0000000); //object(med_shelf) (3)
	CreateDynamicObject(1744,2339.0900879,-1787.2099609,1724.0198975,0.0000000,0.0000000,90.0000000); //object(med_shelf) (5)
	CreateDynamicObject(1744,2340.4199219,-1788.3291016,1724.6800537,0.0000000,0.0000000,179.9945068); //object(med_shelf) (4)
	CreateDynamicObject(1744,2339.0898438,-1787.2099609,1724.6800537,0.0000000,0.0000000,90.0000000); //object(med_shelf) (6)
	CreateDynamicObject(1744,2339.0700684,-1785.1800537,1724.6800537,0.0000000,0.0000000,90.0000000); //object(med_shelf) (7)
	CreateDynamicObject(1744,2339.0693359,-1785.1796875,1724.0200195,0.0000000,0.0000000,90.0000000); //object(med_shelf) (8)
	CreateDynamicObject(2308,2342.2099609,-1784.0300293,1723.0799561,0.0000000,0.0000000,270.0000000); //object(med_office4_desk_4) (1)
	CreateDynamicObject(1811,2341.9499512,-1785.4000244,1723.6999512,0.0000000,0.0000000,242.0000000); //object(med_din_chair_5) (1)
	CreateDynamicObject(2478,2343.1599121,-1787.3399658,1723.3499756,0.0000000,0.0000000,250.0000000); //object(model_box6) (2)
	CreateDynamicObject(2877,2339.0700684,-1779.4100342,1724.2500000,0.0000000,0.0000000,335.0000000); //object(cj_binco_door) (1)
	CreateDynamicObject(2478,2339.9899902,-1779.4599609,1723.3499756,0.0000000,0.0000000,153.9993896); //object(model_box6) (3)
	CreateDynamicObject(2613,2343.5500488,-1785.1899414,1723.0699463,0.0000000,0.0000000,0.0000000); //object(police_wastebin) (1)
	CreateDynamicObject(2377,2330.5900879,-1777.0500488,1725.1199951,0.0000000,0.0000000,0.0000000); //object(cj_jean_dark) (1)
	CreateDynamicObject(2381,2343.0400391,-1780.9899902,1723.7900391,0.0000000,0.0000000,90.0000000); //object(cj_8_sweater) (1)
	CreateDynamicObject(2372,2343.2500000,-1781.6099854,1723.0799561,0.0000000,0.0000000,0.0000000); //object(clothes_rail2) (2)
	CreateDynamicObject(2406,2342.5600586,-1778.7700195,1724.3299561,350.0000000,0.0000000,0.0000000); //object(cj_surf_board3) (1)
	CreateDynamicObject(2262,2343.1899414,-1780.8900146,1724.8499756,0.0000000,0.0000000,270.0000000); //object(frame_slim_3) (3)
	CreateDynamicObject(2654,2342.9399414,-1782.8699951,1723.2900391,0.0000000,0.0000000,324.0000000); //object(cj_shoe_box) (2)
	CreateDynamicObject(2654,2340.0000000,-1787.8100586,1723.2900391,0.0000000,0.0000000,265.9978333); //object(cj_shoe_box) (3)
	CreateDynamicObject(2261,2341.4499512,-1779.0500488,1724.8100586,0.0000000,0.0000000,0.0000000); //object(frame_slim_2) (1)
	CreateDynamicObject(2694,2340.9199219,-1779.0300293,1723.1800537,0.0000000,0.0000000,116.0000000); //object(cj_shoe_box2) (11)
	CreateDynamicObject(2694,2341.5400391,-1779.0000000,1723.1800537,0.0000000,0.0000000,175.9991455); //object(cj_shoe_box2) (12)
	CreateDynamicObject(2468,2341.3898926,-1778.8699951,1723.3000488,0.0000000,0.0000000,0.0000000); //object(model_box4) (1)
	CreateDynamicObject(948,2339.7800293,-1782.5200195,1723.0799561,0.0000000,0.0000000,0.0000000); //object(plant_pot_10) (1)
	CreateDynamicObject(948,2330.1298828,-1785.6800537,1723.0799561,0.0000000,0.0000000,0.0000000); //object(plant_pot_10) (2)
	CreateDynamicObject(2372,2329.0800781,-1779.6099854,1725.1300049,0.0000000,90.0000000,0.0000000); //object(clothes_rail2) (3)
	CreateDynamicObject(2706,2330.1398926,-1778.1400146,1724.9799805,0.0000000,0.0000000,0.0000000); //object(cj_hoodie_05) (3)
	CreateDynamicObject(2706,2330.1396484,-1778.3291016,1724.9799805,0.0000000,0.0000000,0.0000000); //object(cj_hoodie_05) (4)
	CreateDynamicObject(2705,2330.1396484,-1778.8599854,1724.9799805,0.0000000,0.0000000,0.0000000); //object(cj_hoodie_04) (1)
	CreateDynamicObject(2705,2330.1396484,-1778.6992188,1724.9799805,0.0000000,0.0000000,0.0000000); //object(cj_hoodie_04) (2)
	CreateDynamicObject(2705,2330.1396484,-1779.0999756,1724.9799805,0.0000000,0.0000000,0.0000000); //object(cj_hoodie_04) (3)
	CreateDynamicObject(2704,2330.1396484,-1779.4000244,1724.9799805,0.0000000,0.0000000,0.0000000); //object(cj_hoodie_3) (1)
	CreateDynamicObject(2689,2330.1396484,-1779.9000244,1724.9799805,0.0000000,0.0000000,0.0000000); //object(cj_hoodie_2) (1)
	CreateDynamicObject(2689,2330.1396484,-1779.5996094,1724.9799805,0.0000000,0.0000000,0.0000000); //object(cj_hoodie_2) (2)
	CreateDynamicObject(2606,2338.8200684,-1778.1899414,1723.3000488,0.0000000,0.0000000,90.0000000); //object(cj_police_counter2) (1)
	CreateDynamicObject(2411,2338.7800293,-1778.6300049,1723.9000244,0.0000000,0.0000000,316.0000000); //object(cj_f_torso_1) (1)
	CreateDynamicObject(2397,2338.8300781,-1777.7700195,1724.4399414,0.0000000,0.0000000,270.0000000); //object(cj_trackies_dark) (1)
	CreateDynamicObject(3026,2334.8200684,-1777.0600586,1725.2800293,0.0000000,270.0000000,340.0000000); //object(para_pack) (1)
	CreateDynamicObject(3004,2339.0400391,-1776.7600098,1724.6300049,260.0000000,305.0000000,0.0000000); //object(k_poolq2) (1)
	CreateDynamicObject(2916,2332.1101074,-1777.0500488,1725.3990479,0.0000000,0.0000000,0.0000000); //object(kmb_dumbbell) (1)
	CreateDynamicObject(3072,2332.3999023,-1776.9699707,1725.4899902,350.0000000,0.0000000,0.0000000); //object(kmb_dumbbell_l) (1)
	CreateDynamicObject(2913,2332.1398926,-1785.6600342,1723.3000488,90.0000000,0.0000000,90.0000000); //object(kmb_bpress) (1)
	CreateDynamicObject(2412,2330.1101074,-1781.4200439,1723.0799561,0.0000000,0.0000000,90.0000000); //object(cj_detector) (1)
	CreateDynamicObject(2620,2336.8798828,-1781.8299561,1723.8499756,0.0000000,0.0000000,0.0000000); //object(cj_trainer_eris) (1)
	CreateDynamicObject(2698,2334.3601074,-1785.4899902,1724.0200195,0.0000000,0.0000000,0.0000000); //object(cj_duds_rail01) (1)
	CreateDynamicObject(2412,2330.1101074,-1784.6700439,1723.0799561,0.0000000,0.0000000,90.0000000); //object(cj_detector) (2)
	CreateDynamicObject(2384,2336.2399902,-1777.1199951,1724.2299805,0.0000000,0.0000000,0.0000000); //object(cj_8_jeans_dark) (1)
	CreateDynamicObject(2384,2336.8898926,-1777.0899658,1724.2299805,0.0000000,0.0000000,0.0000000); //object(cj_8_jeans_dark) (5)
	CreateDynamicObject(18075,2337.0100098,-1781.7299805,1726.4699707,0.0000000,0.0000000,90.0000000); //object(lightd) (1)
	CreateDynamicObject(948,2330.1298828,-1781.1400146,1723.0799561,0.0000000,0.0000000,0.0000000); //object(plant_pot_10) (3)
	CreateDynamicObject(2818,2331.0168457,-1783.9439697,1723.0799561,0.0000000,0.0000000,90.0000000); //object(gb_bedrug02) (17)
	CreateDynamicObject(2694,2334.8869629,-1777.0479736,1723.9990234,0.0000000,0.0000000,97.0000000); //object(cj_shoe_box2) (14)
	CreateDynamicObject(2479,2336.5422363,-1777.0649414,1725.1939697,0.0000000,0.0000000,0.0000000); //object(model_box8) (1)
	CreateDynamicObject(2479,2336.5419922,-1777.0644531,1724.8935547,0.0000000,0.0000000,0.0000000); //object(model_box8) (2)
	CreateDynamicObject(2114,2338.4699707,-1778.0102539,1723.7763672,0.0000000,0.0000000,0.0000000); //object(basketball) (4)
	CreateDynamicObject(2694,2332.2968750,-1776.9461670,1723.6485596,0.0000000,0.0000000,96.9982910); //object(cj_shoe_box2) (15)
}















/* --- To be reviced --- */

public OnPlayerEnterRaceCheckpoint(playerid) {
    DisablePlayerRaceCheckpoint(playerid);
	if(GetPVarInt(playerid, "DMV") != 0) {
		new cur = GetPVarInt(playerid, "DMVCP");
		if(cur == sizeof(pilotLicenseCPs) - 1) {
		    SetPlayerRaceCheckpoint(playerid, 4, pilotLicenseCPs[cur][0], pilotLicenseCPs[cur][1], pilotLicenseCPs[cur][2], 0.0, 0.0, 0.0, 15);
		    SetPVarInt(playerid, "DMVCP", -1);
		} else if(cur > 0) {
			SetPlayerRaceCheckpoint(playerid, 3, pilotLicenseCPs[cur][0], pilotLicenseCPs[cur][1], pilotLicenseCPs[cur][2], pilotLicenseCPs[cur + 1][0], pilotLicenseCPs[cur + 1][1], pilotLicenseCPs[cur + 1][2], 15);
			SetPVarInt(playerid, "DMVCP", cur + 1);
		} else if(cur == -1) {
            SendClientMessage(playerid, COLOR_WHITE, "考试即将结束, 请将飞机安全登陆在DMV大楼屋顶.");
		    SetPlayerRaceCheckpoint(playerid, 0, 1308.5972, -1195.7361, 65.5753, 0.0, 0.0, 0.0, 5);
		    SetPVarInt(playerid, "DMVCP", -2);
		} else if(cur == -2) {
		    SendClientMessage(playerid, COLOR_WHITE, "请按照操作将飞机引擎关闭并且停在DMV大楼屋顶.");
		    SetPVarInt(playerid, "DMVCP", 0);
		}
	}


	if(dmvdrive[playerid] > 0) {
		if(seatbelt[playerid] == 0) {
		    SetPVarInt(playerid, "DMVSeatbelt", 1);
		    SetPVarInt(playerid, "DMVStatus", GetPVarInt(playerid, "DMVStatus")+1);
		}

		switch(dmvdrive[playerid]) {
		    case 2: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1450.6486, -1163.4039, 23.5371, 0, 0, 0, 4);
		        dmvdrive[playerid] = 3;
		    }
		    case 3: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1706.0775, -1163.1329, 23.5330, 0, 0, 0, 4);
		        dmvdrive[playerid] = 4;
		    }
		    case 4: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1711.9789, -1291.0159, 13.2577, 0, 0, 0, 4);
		        dmvdrive[playerid] = 5;
		    }
		    case 5: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1837.4865, -1263.5814, 13.3267, 0, 0, 0, 4);
		        dmvdrive[playerid] = 6;
		    }
		    case 6: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1844.9780, -1496.6189, 13.2339, 0, 0, 0, 4);
		        dmvdrive[playerid] = 7;
		    }
		    case 7: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1819.3842, -1601.8129, 13.2432, 0, 0, 0, 4);
		        dmvdrive[playerid] = 8;
		    }
		    case 8: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1665.1747, -1589.8154, 13.2661, 0, 0, 0, 4);
		        dmvdrive[playerid] = 9;
		    }
		    case 9: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1441.1979, -1590.1586, 13.2600, 0, 0, 0, 4);
		        dmvdrive[playerid] = 10;
		    }
		    case 10: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1322.0321, -1569.8713, 13.2469, 0, 0, 0, 4);
		        dmvdrive[playerid] = 11;
		    }
		    case 11: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1350.4275, -1404.1998, 13.2027, 0, 0, 0, 4);
		        dmvdrive[playerid] = 12;
		    }
		    case 12: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1061.7395, -1388.3461, 13.4167, 0, 0, 0, 4);
		        dmvdrive[playerid] = 13;
		    }
		    case 13: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1060.5316, -1157.7560, 23.5549, 0, 0, 0, 4);
		        dmvdrive[playerid] = 14;
		    }
		    case 14: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1084.0590, -1131.8002, 23.5452, 0, 0, 0, 4);
		        dmvdrive[playerid] = 15;
		    }
		    case 15: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1084.7467, -1047.3859, 31.5711, 0, 0, 0, 4);
		        dmvdrive[playerid] = 16;
		    }
		    case 16: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1258.8551, -1044.2346, 31.5433, 0, 0, 0, 4);
		        dmvdrive[playerid] = 17;
		    }
		    case 17: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1259.9614, -1131.4788, 23.5618, 0, 0, 0, 4);
		        dmvdrive[playerid] = 18;
		    }
		    case 18: {
		        SetPlayerRaceCheckpoint(playerid, 2, 1321.0140, -1176.1627, 23.5395, 0, 0, 0, 4);
		        dmvdrive[playerid] = 19;
		    }
		    case 19: {
		        SendClientMessage(playerid, COLOR_GREY, "DMV: (( 请再次使用命令 /engine 完成考试. ))");
		        dmvdrive[playerid] = 20;
		    }
		}
	} else if(GetPVarInt(playerid, "Pizza") == 1 && PlayerInfo[playerid][pJob] == 2) {
	    SendClientMessage(playerid, COLOR_WHITE, "请从披萨车内取出披萨 (( /takepizza )) 然后将披萨交给客户.");
	} else if(GetPVarInt(playerid, "Trashmaster") == 1 && PlayerInfo[playerid][pJob] == 1) {
        SendClientMessage(playerid, COLOR_WHITE, "请从城市垃圾箱内收集垃圾并且丢进你的载具收集箱内 (( /taketrash )).");
	} else if(GetPVarInt(playerid, "Delivery") == 1 && PlayerInfo[playerid][pJob] == 3) {
        SendClientMessage(playerid, COLOR_WHITE, "请从 Burrito 内取出箱子 (( /takebox )) 然后交给产业工作人员.");
	}

	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(PRESSED(KEY_FIRE) && IsBreaking[playerid] == 1 && !BreakinCD[playerid])
	{
	    new vehicle = GetPVarInt(playerid, "SaveVehicleID");
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, BreakX[vehicle], BreakY[vehicle], BreakZ[vehicle])) // trap house
	    {
	        if(VehicleInfo[vehicle][vIsBreak])
	        {
		        BreakCarHandler(playerid);
		        BreakinCD[playerid] = true;
				SetTimerEx("BreakCarCD", 1000, false, "d", playerid);
			} else {
				if(VehicleInfo[vehicle][vDamages] < 5)
				{
				    BreakInVehicle(playerid);
				}
			}
	    }
	}
    /*if(PRESSED(KEY_FIRE) && GetPVarInt(playerid, "GraffitiCreating") == 0  && GetPlayerWeapon(playerid) == 41)
	{
		spraytimerch[playerid] = SetTimerEx( "sprayingch", 1000, true, "i", playerid );
 		SetPVarInt(playerid, "GraffitiMenu", 1);
	}*/
	if(RELEASED(KEY_FIRE) && GetPVarInt(playerid, "GraffitiMenu") == 1 && GetPlayerWeapon(playerid) == 41)
	{
	    KillTimer(spraytimerch[playerid]);
	    GameTextForPlayer(playerid, "] ~r~Aborted",5000, 5);
	    graffmenup[playerid] = 0;
	    DeletePVar(playerid, "GraffitiMenu");
	}
	if(PRESSED(KEY_FIRE) && GetPVarInt(playerid, "GraffitiCreating") == 1)
	{
		if(GetPlayerWeapon(playerid) == 41)
		{
		    spraytimer[playerid] = SetTimerEx("spraying", 1000, true, "i", playerid);
		    PlayAudioStreamForPlayer(playerid, SPRAYCANSOUND);
		    KillTimer(spraytimerx[playerid]);
		}
	}
	if (RELEASED(KEY_FIRE) && GetPVarInt(playerid, "GraffitiCreating") == 1)
	{

		if(GetPlayerWeapon(playerid) == 41)
		{
		    KillTimer(spraytimer[playerid]);
	    	sprayammount[playerid] --;
	    	GameTextForPlayer(playerid,"~g~Please keep spraying!!",3000, 5);
    	 	StopAudioStreamForPlayer(playerid);
    	 	spraytimerx[playerid] = SetTimerEx("killgr", 90000, true, "i", playerid);
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK && !IsPlayerInAnyVehicle(playerid) && GetPVarInt(playerid, "Death") == 0 && !EntranceCD[playerid])
	{
		EntranceCD[playerid] = true;
		SetTimerEx("EnterCD", 3000, false, "d", playerid);
	    new vw = GetPlayerVirtualWorld(playerid);
	 	if(GetPVarInt(playerid, "Death") != 0) return SendClientMessage(playerid, COLOR_GREY, "你暂时无法使用该按键.");
		if(IsPlayerInAnyVehicle(playerid) == 0)
		{
		    /* --- Hide previous TextDraws --- */

		    TextDrawHideForPlayer(playerid, TD_AD_HeadBox);
		    TextDrawHideForPlayer(playerid, TD_AD_BoxTwo);
		    TextDrawHideForPlayer(playerid, TD_AD_BoxThree);
		    TextDrawHideForPlayer(playerid, TD_AD_BoxOne);
		    TextDrawHideForPlayer(playerid, TD_AD_Seller);
			PlayerTextDrawHide(playerid, TD_AD_Price);
			PlayerTextDrawHide(playerid, TD_AD_CityZip);
			PlayerTextDrawHide(playerid, TD_AD_Headline);
			PlayerTextDrawHide(playerid, TD_AD_Taxes);
			PlayerTextDrawHide(playerid, TD_AD_PriceValue);
			PlayerTextDrawHide(playerid, TD_AD_TaxesValue);
			PlayerTextDrawHide(playerid, TD_AD_SellerValue);
			PlayerTextDrawHide(playerid, TD_AD_HousenumberStreet);

			/* --- Enter Businesses --- */

			new adminDuty = GetPVarInt(playerid, "AdminDuty");
			for(new b = 0; b != MAX_BUSINESSES; b++)
			{
	  			if(IsValidDynamicCP(businessCP[b]) && IsPlayerInDynamicCP(playerid, businessCP[b]))
	  			{
	     			if(BusinessInfo[b][bLocked] == 0 || adminDuty != 0)
					 {
	     			    if(strcmp(BusinessInfo[b][bOwner], PlayerInfo[playerid][pName]) != 0 && !isnull(BusinessInfo[b][bOwner]))
					 	{
	     			        if(BusinessInfo[b][bFee] > 0 && adminDuty == 0)
						 	{
	     			            if(PlayerInfo[playerid][pMoney] >= BusinessInfo[b][bFee])
							 	{
									GivePlayerMoneyEx(playerid, -BusinessInfo[b][bFee]);
									GiveBusinessMoney(b, BusinessInfo[b][bFee]);
									if(!isnull(BusinessInfo[b][bRadio]))
									{
					       				PlayAudioStreamForPlayer(playerid, BusinessInfo[b][bRadio]);
								    }

								    SetPVarInt(playerid, "InBusiness", 1);
								    if(BusinessInfo[b][bInt]==62)
								    {
	                                    SetPVarInt(playerid,"xb_furnituretype",TYPE_GTAFFITI);
	                                    SetPVarInt(playerid,"xb_furnitureid",0);
	                                    SetPVarInt(playerid,"xb_businessid",b);
	                                    SetPVarInt(playerid, "MapInfoHide", 1);
			                            PlayerTextDrawHide(playerid, TD_Zone);
								        SetPlayerPosEx(playerid, 27,2296.3315, 1302.9165, 11.7676, 0, 0, b);

								    }
	  			                    else
	  			                    {
			  						    SetPlayerPosEx(playerid, 5, businessData[BusinessInfo[b][bInt]][intX], businessData[BusinessInfo[b][bInt]][intY], businessData[BusinessInfo[b][bInt]][intZ], businessData[BusinessInfo[b][bInt]][intA], businessData[BusinessInfo[b][bInt]][intVal], b, 0);
	                                    FreezePlayer(playerid);
	                				    SetTimerEx("EntranceUnfreeze", 1500, false, "i", playerid);
	                				}
								}
								else
								{
									SendClientMessage(playerid, COLOR_GREY, "你没有钱支付入场费...");
								}
	     			        }
							else
						 	{
	     			            if(!isnull(BusinessInfo[b][bRadio]))
							 	{
				       				PlayAudioStreamForPlayer(playerid, BusinessInfo[b][bRadio]);
							    }
	                            SetPVarInt(playerid, "InBusiness", 1);
	                            if(BusinessInfo[b][bInt]==62)
							    {
	                                SetPVarInt(playerid,"xb_furnituretype",TYPE_GTAFFITI);
	                                SetPVarInt(playerid,"xb_furnitureid",0);
	                                SetPVarInt(playerid,"xb_businessid",b);
	                                SetPVarInt(playerid, "MapInfoHide", 1);
	                                PlayerTextDrawHide(playerid, TD_Zone);
								    SetPlayerPosEx(playerid, 27, 2296.3315, 1302.9165, 11.7676, 0, 0, b);

						        }
	  			                else
	  			                {
			  					    SetPlayerPosEx(playerid, 5, businessData[BusinessInfo[b][bInt]][intX], businessData[BusinessInfo[b][bInt]][intY], businessData[BusinessInfo[b][bInt]][intZ], businessData[BusinessInfo[b][bInt]][intA], businessData[BusinessInfo[b][bInt]][intVal], b, 0);
	                                FreezePlayer(playerid);
	                			    SetTimerEx("EntranceUnfreeze", 1500, false, "i", playerid);
	                			}
							}
	     			    }
						else
					 	{
	                        if(!isnull(BusinessInfo[b][bRadio]))
							{
			       				PlayAudioStreamForPlayer(playerid, BusinessInfo[b][bRadio]);
						    }

						    SetPVarInt(playerid, "InBusiness", 1);
	  						if(BusinessInfo[b][bInt]==62)
					        {
	                            SetPVarInt(playerid,"xb_furnituretype",TYPE_GTAFFITI);
	                            SetPVarInt(playerid,"xb_furnitureid",0);
	                            SetPVarInt(playerid,"xb_businessid",b);
	                            SetPVarInt(playerid, "MapInfoHide", 1);
	                            PlayerTextDrawHide(playerid, TD_Zone);
						        SetPlayerPosEx(playerid, 27,2296.3315, 1302.9165, 11.7676, 0, 0, b);
						    }
	  			            else
	  			            {
			  				    SetPlayerPosEx(playerid, 5, businessData[BusinessInfo[b][bInt]][intX], businessData[BusinessInfo[b][bInt]][intY], businessData[BusinessInfo[b][bInt]][intZ], businessData[BusinessInfo[b][bInt]][intA], businessData[BusinessInfo[b][bInt]][intVal], b, 0);
	                            FreezePlayer(playerid);
	                		    SetTimerEx("EntranceUnfreeze", 1500, false, "i", playerid);
	                		}
						}
				    }
					else
					{
					    GameTextForPlayer(playerid, "~r~Locked", 750, 4);
					}

					return 1;
		        }
			}

			for(new h = 0; h != MAX_HOUSES; h++)
			{
	  			if(IsValidDynamicCP(houseCP[h]) && IsPlayerInDynamicCP(playerid, houseCP[h]))
				  {
	     			if(HouseInfo[h][hLocked] == 0 || adminDuty != 0)
					 {
	        			if(!isnull(HouseInfo[h][hRadio]))
						{
			       			PlayAudioStreamForPlayer(playerid, HouseInfo[h][hRadio]);
				    	}
				    	if(HouseInfo[h][hYellingAlarm]) PlayAudioStreamForPlayer(playerid, "http://fjdx.sc.chinaz.com/Files/DownLoad/sound1/201401/4031.mp3");
						GetPlayerFacingAngle(playerid, PlayerInfo[playerid][PeekingAngel]);
					    SetPVarInt(playerid, "InHouse", 1);
					    PlayerInfo[playerid][pInHouseID] = h;
						SetPlayerPosEx(playerid, 5, houseData[HouseInfo[h][hInt]][intX], houseData[HouseInfo[h][hInt]][intY], houseData[HouseInfo[h][hInt]][intZ], houseData[HouseInfo[h][hInt]][intA], houseData[HouseInfo[h][hInt]][intVal], h);
						if(HouseInfo[h][hActivatedHalarm])
						{
					    	SendClientMessage(playerid, COLOR_PINK, "(( 警报音效将开始播放 ))");
					    	SendClientMessage(playerid, COLOR_LIGHTRED, "警告: 房屋警报已被激活. 你可以通过 /house alarm 将其关闭.");
					   		PlayAudioStreamForPlayer(playerid, "http://fjdx.sc.chinaz.com/Files/DownLoad/sound1/201401/4031.mp3");
						    HouseInfo[h][hYellingAlarm] = true;
						    new message[70];
						    format(message, 70, "房屋警报:{FFFFFF} %i %s, Los Angeles, SA %i", HouseInfo[h][hHousenumber], HouseInfo[h][hStreet], HouseInfo[h][hZip]);
						    foreach(new i : Player)
							{
							    if(PlayerInfo[i][pFaction] == 1 || !strcmp(HouseInfo[h][hOwner], PlayerInfo[i][pName], true))
							    {
									SendClientMessage(i, COLOR_LIGHTRED, message);
								}
							}
						}
				   }
			   		else
					{
					    GameTextForPlayer(playerid, "~r~Locked", 750, 4);
					}

					return 1;
		        }
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, -376.9299, 2242.3718, 42.6185)) // trap house
	    	{
	    	    if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你不是组织成员不可以进入该建筑.");
	    	    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Narcotics] == 1 && PlayerInfo[playerid][pRank] > FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] - 2)
	    	    {
	                FreezePlayer(playerid);
	                SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
		        	SetPlayerPos(playerid, 2187.9700,-1244.8140,1529.1060);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织ID不支持进入里面.");
				}
	    	}
	    	if(IsPlayerInRangeOfPoint(playerid, 2.0, -1051.7054, 1550.0031, 33.4376)) // drug house 2
	     	{
	    	    if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你不是组织成员不可以进入该建筑.");
	    	    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Narcotics] == 2 && PlayerInfo[playerid][pRank] > FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] - 2)
	    	    {
	    	        FreezePlayer(playerid);
	                SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
		        	SetPlayerPos(playerid, 2459.2907714844, -1767.1912841797, 1027.8020019531);
		     		SetPlayerInterior(playerid, 1);
					SetPlayerVirtualWorld(playerid, 0);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织ID不支持进入里面.");
				}
	    	}
	    	if(IsPlayerInRangeOfPoint(playerid,2.0, -2184.3328,710.4023,53.8906)) // ammo factory #1
	     	{
	     	    if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你不是组织成员不可以进入该建筑.");
	     	    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Narcotics] != 0  && PlayerInfo[playerid][pRank] > FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] - 2)
	     	    {
	     	        FreezePlayer(playerid);
	          		SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	     			SetPlayerPos(playerid, -2184.2329,713.0460,53.8969);
	   			}
	   			else
				{
				    SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织ID不支持进入里面.");
				}
	    	}
	    	if(IsPlayerInRangeOfPoint(playerid,2.0, -1469.6418,2615.5959,58.7879)) // weapon factory #1
	     	{
	     	    if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你不是组织成员不可以进入该建筑.");
	     	    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Weapons] == 1  && PlayerInfo[playerid][pRank] > FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] - 2)
	     	    {
	     	        FreezePlayer(playerid);
	          		SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	     			SetPlayerPos(playerid, 2263.4910,-1582.6284,1493.6000);
	   			}
	   			else
				{
				    SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织ID不支持进入里面.");
				}
	    	}
	    	if(IsPlayerInRangeOfPoint(playerid,2.0, 2266.4453,-1701.0996,13.6901)) // heavy weapons
	     	{
	    	    if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你不是组织成员不可以进入该建筑.");
	    	    if(FactionInfo[PlayerInfo[playerid][pFaction]][fRights_Weapons] == 3  && PlayerInfo[playerid][pRank] > FactionInfo[PlayerInfo[playerid][pFaction]][fLeaderrank] - 2)
	    	    {
	    	        FreezePlayer(playerid);
	                SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
		        	SetPlayerPos(playerid, -937.3247,1423.2633,11.8640);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_LIGHTRED, "你的组织ID不支持进入里面.");
				}
	    	}
	    	if(IsPlayerInRangeOfPoint(playerid,2.0, 2045.7609,-1908.0037,13.5469)) // insurance company
	     	{
	     	    FreezePlayer(playerid);
	          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	     		SetPlayerPos(playerid, 1124.3864,-1413.0106,2001.0859);
	    	}
	    	if(IsPlayerInRangeOfPoint(playerid,2.0, 1990.7379,-1282.6858,23.9713)) // apartment glen park
	     	{
	     	    FreezePlayer(playerid);
	          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	     		SetPlayerPos(playerid, 1002.8900,-988.4160,1001.4959);
	    	}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 1154.7292,-1440.1539,15.7969)) // hardware
	     	{
	     	    FreezePlayer(playerid);
	          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	     		SetPlayerPos(playerid,2797.0095,2608.5698,10.8258);
	    	}
	    	if(IsPlayerInRangeOfPoint(playerid,2.0, 2177.2534,-1770.5592,13.5391)) // apartment idlewood
	     	{
	     	    FreezePlayer(playerid);
	          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	     		SetPlayerPos(playerid, 1154.9581, -1039.8893, 1001.0800);
	    	}
	     	if(IsPlayerInRangeOfPoint(playerid,2.0, 1863.8026,-1597.2938,14.3062)) // apartment idlewood 2
	     	{
	     	    FreezePlayer(playerid);
	          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	     		SetPlayerPos(playerid, 226.9434,1708.2749,601.0000);
	    	}

	     	if(IsPlayerInRangeOfPoint(playerid,2.0, 257.8268,1424.3369,10.5930)) // DoC #1
	     	{
	     	    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 5)
	     	    {
	     			SetPlayerPos(playerid, 257.8385,1421.9237,10.5930);
	   			}
	    	}
	     	if(IsPlayerInRangeOfPoint(playerid,2.0, 154.6967,1404.2869,10.5950)) // DoC #2
	     	{
	     	    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 5)
	     	    {
	     	        FreezePlayer(playerid);
	          		SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	     			SetPlayerPos(playerid, 1811.9211,-1545.2626,5700.4287);
	   			}
	    	}
	    	if(IsPlayerInRangeOfPoint(playerid,2.0, 174.4342,1365.4073,10.5859)) // DoC #3
	     	{
	     	    FreezePlayer(playerid);
	          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	            SetPlayerPos(playerid, 1810.6146,-1515.8710,5700.4287);
	    	}
	    	if(IsPlayerInRangeOfPoint(playerid,2.0, 252.1557,1390.4894,11.1420)) // DoC #4
	     	{
	     	    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 5)
	     	    {
	     	        FreezePlayer(playerid);
	          		SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	     			SetPlayerPos(playerid, 657.2668,-1580.1260,122.4225);
	     			SetPlayerVirtualWorld(playerid, 1);
	   			}
			}
	    	if(IsPlayerInRangeOfPoint(playerid,2.0, 201.7772,1437.0233,10.5950)) // DoC #5
	     	{
	     	    FreezePlayer(playerid);
	          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	            SetPlayerPos(playerid, 1262.8807,1734.5267,1001.5000);
	    	}
	    	if(IsPlayerInRangeOfPoint(playerid,2.0, 1262.7905,1685.8121,1001.5000)) // DoC #6
	     	{
	     	    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 5)
	     	    {
	     			SetPlayerPos(playerid, 1262.7556,1684.1167,1001.5000);
	   			}
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 249.7023,1437.3875,10.5890)) // DoC #7
	     	{
	     	    FreezePlayer(playerid);
	          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
	            SetPlayerPos(playerid, 1963.0540,1342.2721,1321.0879);
	    	}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 1554.9194, -1675.5605, 16.1953)) { // LAPD
	      		SetPlayerPosEx(playerid, 5, 246.375991, 109.245994, 1003.218750, 0, 10);
			} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1513.1852, -1569.4840, 14.6543)) { // All Saints General Hospital (Entrance)
			    SetPlayerPosEx(playerid, 5, 1498.7706, -1546.2332, 1970.8159, 0, 1);
	        } else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1507.8983, -1540.5138, 13.5474)) { // All Saints General Hospital (Backentrance)
			    SetPlayerPosEx(playerid, 5, 1524.1664, -1550.5471, 1970.7859, 0, 1);
	  		} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1509.6234, -1557.9297, 30.7521)) { // All Saints General Hospital (Roof)
			    SetPlayerPosEx(playerid, 5, 1521.1638, -1551.7441, 1970.7859, 0, 1);
			} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1494.7041, -1510.0973, 14.1449)) { // LSFD
			    SetPlayerPosEx(playerid, 5, 246.783996, 63.900199, 1003.640625, 0, 6);
			} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1516.6587, -1496.5687, 27.6087)) { // LSFD ROOF
			    SetPlayerPosEx(playerid, 5, 246.4261, 85.8153, 1003.6406, 180.7166, 6);
			} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1525.2760, -1677.8524, 5.8906)) { // LAPD ARMOURY
	  			SetPlayerPosEx(playerid, 5, 316.524993, -167.706985, 999.593750, 0.0, 6, MAX_BUSINESSES + 1);
			} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1317.8936, -1183.2419, 23.5981)) { // DMV ENTRANCE
			    SetPlayerPosEx(playerid, 5, 1494.3252, 1304.9429, 1093.2891, 0.0000, 3);
			} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1564.7014, -1665.3147, 28.3956)) { // LAPD ROOF ENTRANCE
			    SetPlayerPosEx(playerid, 5, 276.8218, 122.2773, 1004.6172, 271.9524, 10);
			} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1568.7339, -1690.9832, 5.8906)) { // LAPD GARAGE ENTRANCE
			    SetPlayerPosEx(playerid, 5, 214.6439, 120.8411, 999.0156, 0, 10);
			} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1616.0786, -1896.3529, 13.5489)) { // Rental Center
			    SetPlayerPosEx(playerid, 5, 1253.8342, -1811.2778, 1464.4860, 358.8478, 5);
			} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 593.2187,-1249.9857,18.2146))
			{ // BANK`
			    SetPlayerPosEx(playerid, 5, 1412.9098, -1026.8887, 3423.6860, 0.0, 0, 2, 0);
	          	SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1310.0868,-1367.3768,13.5310))
			{ // Employment Center
			    SetPlayerPosEx(playerid, 5, 1246.6943, -1791.7428, 1504.2805, 0, 3);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, 542.2992, -1292.1060, 17.2422))
			{ // DEALERSHIP GROTTI
	  			SetPlayerPosEx(playerid, 6, -1951.2566, 266.9794, 45.0471, 0, 0, playerid + 1);
	  			SetPVarInt(playerid, "DealershipLoc", 1);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2131.7964, -1150.2208, 24.1810))
			{ // DEALERSHIP JEFFERSON
			    SetPlayerPosEx(playerid, 6, -1951.2566, 266.9794, 45.0471, 0, 0, playerid + 1);
			    SetPVarInt(playerid, "DealershipLoc", 2);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0, 648.2817, -1357.8223, 13.5734))
			{ // San Andreas Network
			    SetPlayerPosEx(playerid, 5, 366.7081, 162.3704, 1014.1875, 89.8573, 3, 0);
			}
			
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 2187.9700,-1244.8140,1529.1060)) // trap house
			{
				SetPlayerPos(playerid, -376.9299,2242.3718,42.6185);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
		   	}
		   	/*if(IsPlayerInRangeOfPoint(playerid,2.0, 2169.461181,1618.798339,999.976562)) // mafia warehouse
			{
				SetPlayerPos(playerid, 2736.0554,-2550.7744,13.6459);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				CheckpointID[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
			}*/
			if(IsPlayerInRangeOfPoint(playerid,2.0, -937.3247,1423.2633,11.8640)) // heavy weapons
			{
				SetPlayerPos(playerid, 2266.4453,-1701.0996,13.6901);
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 1811.9211,-1545.2626,5700.4287)) // DoC #27
			{
		 		if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 5)
		   		{
		  			SetPlayerPos(playerid, 154.6967,1404.2869,10.5950);
		    	}
		  	}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 257.8385,1421.9237,10.5930)) // DoC #1
			{
				SetPlayerPos(playerid, 257.8268,1424.3369,10.5930);
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 1124.3864,-1413.0106,2001.0859)) // insurance company
			{
				SetPlayerPos(playerid, 2045.7609,-1908.0037,13.5469);
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 1002.8900,-988.4160,1001.4959)) // apartment glen park
			{
				SetPlayerPos(playerid, 1990.7379,-1282.6858,23.9713);
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 1154.9581,-1039.8893,1001.0800)) // apartment idlewood
			{
				SetPlayerPos(playerid, 2177.2534,-1770.5592,13.5391);
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 226.9434,1708.2749,601.0000)) // apartment idlewood 2
			{
				SetPlayerPos(playerid, 1863.8026,-1597.2938,14.3062);
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 2263.4910,-1582.6284,1493.6000)) // weapon factory #1
			{
				SetPlayerPos(playerid, -1469.6418,2615.5959,58.7879);
		   	}
		   	if(IsPlayerInRangeOfPoint(playerid,2.0, -2184.2329,713.0460,53.8969)) // weapon factory #1
			{
				SetPlayerPos(playerid,-2184.3328,710.4023,53.8906);
		   	}
		   	if(IsPlayerInRangeOfPoint(playerid,2.0, 2459.2907714844, -1767.1912841797, 1027.8020019531)) // drug house 2
		   	{
		   		SetPlayerPos(playerid, -1051.7054,1550.0031,33.4376);
		        SetPlayerInterior(playerid, 0);
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 1810.6146,-1515.8710,5700.4287)) // DoC #1
			{
		 		SetPlayerPos(playerid, 174.4342,1365.4073,10.5859);
		 	}
		 	if(IsPlayerInRangeOfPoint(playerid,2.0, 657.2668,-1580.1260,122.4225)) // DoC #4
		 	{
				SetPlayerPos(playerid, 252.1557,1390.4894,11.1420);
				SetPlayerVirtualWorld(playerid, 0);
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 2797.0095,2608.5698,10.8258)) // hardware
			{
			 	FreezePlayer(playerid);
				SetTimerEx("EntranceUnfreeze", 3000, false, "i", playerid);
				SetPlayerPos(playerid, 1154.7292,-1440.1539,15.7969);
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 1262.8807,1734.5267,1001.5000)) // DoC #5
			{
		 		SetPlayerPos(playerid, 201.7772,1437.0233,10.5950);
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 1262.7556,1684.1167,1001.5000)) // DoC #6
			{
				SetPlayerPos(playerid, 1262.7905,1685.8121,1001.5000);
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0, 1963.0540,1342.2721,1321.0879)) // DoC #7
			{
		 		SetPlayerPos(playerid, 249.7023,1437.3875,10.5890);
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 246.5033, 109.0539, 1003.2188)) { // LAPD
		  		SetPlayerPosEx(playerid, 5, 1552.9990, -1675.4679, 16.1953);
		    } else if(IsPlayerInRangeOfPoint(playerid, 5, 1498.7706, -1546.2332, 1970.8159)) { // All Saints General Hospital (Entrance)
			    SetPlayerPosEx(playerid, 5, 1513.1852, -1569.4840, 14.6543);
		    } else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1524.1664, -1550.5471, 1970.7859)) { // All Saints General Hospital (Backentrance)
			    SetPlayerPosEx(playerid, 5, 1507.8983, -1540.5138, 13.5474);
		  	} else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1521.1638, -1551.7441, 1970.7859)) { // All Saints General Hospital (Roof)
			    SetPlayerPosEx(playerid, 5, 1509.6234, -1557.9297, 30.7521);
			} else if(IsPlayerInRangeOfPoint(playerid, 5, 246.6919,63.8291,1003.6406)) { // LSFD
			    SetPlayerPosEx(playerid, 5, 1494.7041, -1510.0973, 14.1449, 79.3192);
			} else if(IsPlayerInRangeOfPoint(playerid, 5, 246.4498, 87.3300, 1003.6406)) { // LSFD ROOF
			    SetPlayerPosEx(playerid, 5, 1516.6587, -1496.5687, 27.6087, 90.2133);
			} else if(IsPlayerInRangeOfPoint(playerid, 5, 316.524993, -167.706985, 999.593750)) { // LAPD ARMOURY
		  		SetPlayerPosEx(playerid, 5, 1525.2760, -1677.8524, 5.8906);
			} else if(IsPlayerInRangeOfPoint(playerid, 5, 1494.3252, 1304.9429, 1093.2891)) { // DMV
		  		SetPlayerPosEx(playerid, 5, 1317.8936, -1183.2419, 23.5981);
			} else if(IsPlayerInRangeOfPoint(playerid, 5, 274.6331, 122.0646, 1004.6172)) { // LAPD ROOF
		  		SetPlayerPosEx(playerid, 5, 1564.7014, -1665.3147, 28.3956);
			} else if(IsPlayerInRangeOfPoint(playerid, 5, 214.6439, 120.8411, 999.0156)) { // LAPD CELLS
		  		SetPlayerPosEx(playerid, 5, 1568.7339, -1690.9832, 5.8906);
			} else if(IsPlayerInRangeOfPoint(playerid, 5, 1253.8276, -1811.0732, 1464.4860)) { // Rental Center
		  		SetPlayerPosEx(playerid, 5, 1616.0786, -1896.3529, 13.5489);
			} else if(IsPlayerInRangeOfPoint(playerid, 5, 1412.9098, -1026.8887, 3423.6860)) { // BANK
			    SetPlayerPosEx(playerid, 5, 593.2187, -1249.9857, 18.2146);
			} else if(IsPlayerInRangeOfPoint(playerid, 5, 1246.6943, -1791.7428, 1504.2805)) { // Employment Center
			    SetPlayerPosEx(playerid, 5, 1310.0868,-1367.3768,13.5310);
			} else if(IsPlayerInRangeOfPoint(playerid, 5, 366.7081, 162.3704, 1014.1875)) { // San Andreas Network
				    SetPlayerPosEx(playerid, 5, 646.0062, -1357.6025, 13.5718, 88.0386);
			}
			else if(GetPVarInt(playerid, "InHouse") != 0 && IsPlayerInRangeOfPoint(playerid, 2.0, houseData[HouseInfo[vw][hInt]][intX], houseData[HouseInfo[vw][hInt]][intY], houseData[HouseInfo[vw][hInt]][intZ]))
			{
				if(HouseInfo[vw][hLocked] == 0 || GetPVarInt(playerid, "AdminDuty") != 0)
				{
		 			if(!isnull(HouseInfo[vw][hRadio]))
					{
			            StopAudioStreamForPlayer(playerid);
			        }
			        if(HouseInfo[vw][hYellingAlarm]) StopAudioStreamForPlayer(playerid);
		            PlayerInfo[playerid][pInHouseID] = -1;
			        SetPVarInt(playerid, "InHouse", 0);
			        SetPlayerPosEx(playerid, 5, HouseInfo[vw][hX], HouseInfo[vw][hY], HouseInfo[vw][hZ], 0.0, 0, 0, 0);
			        FreezePlayer(playerid);
		         	SetTimerEx("EntranceUnfreeze", 1500, false, "i", playerid);
				}
				else
				{
				    GameTextForPlayer(playerid, "~r~Locked", 750, 6);
				}
			}
			else if(GetPVarInt(playerid, "InBusiness") != 0 && IsPlayerInRangeOfPoint(playerid, 2.0, businessData[BusinessInfo[vw][bInt]][intX], businessData[BusinessInfo[vw][bInt]][intY], businessData[BusinessInfo[vw][bInt]][intZ]))
			{
			    if(BusinessInfo[vw][bLocked] == 0 || GetPVarInt(playerid, "AdminDuty") != 0)
				{
			        if(!isnull(BusinessInfo[vw][bRadio])) {
			            StopAudioStreamForPlayer(playerid);
			        }

			        SetPVarInt(playerid, "InBusiness", 0);
			        SetPlayerPosEx(playerid, 5, BusinessInfo[vw][bX], BusinessInfo[vw][bY], BusinessInfo[vw][bZ], 0.0, 0, 0, 0);
			        FreezePlayer(playerid);
		         	SetTimerEx("EntranceUnfreeze",4000, false, "i", playerid);
				}
				else
				{
				    GameTextForPlayer(playerid, "~r~Locked", 750, 6);
				}
			}
		}
	}
// test
	if(PRESSED(KEY_ANALOG_UP) && GetPVarInt(playerid, "Death") == 0 && IsPlayerInAnyVehicle(playerid))
	{
		if(dmvdrive[playerid] == 20 && VehicleInfo[GetPlayerVehicleID(playerid)][vType] == VEHICLE_DMV) {
			if(VehicleInfo[GetPlayerVehicleID(playerid)][vRadio] != 0) StopAudioStreamForPlayer(playerid);
		    DisablePlayerRaceCheckpoint(playerid);
		    new msg[120], Float:health, info[44];
		    GetVehicleHealth(GetPlayerVehicleID(playerid), health);
			if(health < 800) SetPVarInt(playerid, "DMVStatus", GetPVarInt(playerid, "DMVStatus")-1);
			if(health < 500) SetPVarInt(playerid, "DMVStatus", GetPVarInt(playerid, "DMVStatus")-1);
	        if(health < 400) SetPVarInt(playerid, "DMVStatus", 4);
		    SendClientMessage(playerid, COLOR_GREY, "_______ [{FFFFFF}DEPARTMENT OF MOTOR VEHICLES{b5b5b5}] _______");
		  	if(GetPVarInt(playerid, "DMVStatus") > 3) {
	  			SendClientMessage(playerid, COLOR_GREY, "   结果: 失败, 额外信息: 无.");
	  			SetPVarInt(playerid, "DMVFailed", 1);
			} else if(GetPVarInt(playerid, "DMVStatus") == 1) {
		 		SendClientMessage(playerid, COLOR_GREY, "   结果: 通过, 额外信息: S.");
		 		SetPVarInt(playerid, "DMVFailed", 0);
			} else if(GetPVarInt(playerid, "DMVStatus") == 2) {
				SendClientMessage(playerid, COLOR_GREY, "   结果: 通过, 额外信息: A+.");
				SetPVarInt(playerid, "DMVFailed", 0);
		  	} else if(GetPVarInt(playerid, "DMVStatus") == 3) {
		  		SendClientMessage(playerid, COLOR_GREY, "   结果: 通过, 额外信息: B.");
		  		SetPVarInt(playerid, "DMVFailed", 0);
			}

		  	format(info, sizeof(info), "   最大时速: %i KM/H, 载具外观损失: 百分之 %i.", GetPVarInt(playerid, "DMVSpeed"), floatround((1000/100)*((1000-floatround(health))/100)));
		  	SendClientMessage(playerid, COLOR_GREY, info);
		  	if(GetPVarInt(playerid, "DMVSeatbelt") != 1) SendClientMessage(playerid, COLOR_GREY, "   安全测试: 通过.");
		  	else SendClientMessage(playerid, COLOR_GREY, "   安全测试: 失败.");
		  	if(GetPVarInt(playerid, "DMVStatus") <= 3) PlayerInfo[playerid][pDriveLic] = 1;
		    dmvdrive[playerid] = 0;
		    SetPVarInt(playerid, "DMV", 0);
		    SetPVarInt(playerid, "DMV80Speed", 0);
			SetPVarInt(playerid, "DMVSpeed", 0);
			SetPVarInt(playerid, "DMVStatus", 0);
			SetPVarInt(playerid, "DMVSeatbelt", 0);
			new model = GetVehicleModel(GetPlayerVehicleID(playerid));
			if(IsNotLockableWithoutEngine(model)) {
	        	SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, 0, 0, 0, 0, 0, 0);
			} else if(IsNotLockableWithEngine(model) == 0) {
		    	SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, 0, 0, 0, 0, 0, 0);
			} else {
			    SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, 0, 0, 0, 0, 0, 0);
			}

			format(msg, sizeof(msg), "** %s 将载具 %s 钥匙扭动并且关闭引擎.", GetNameWithSpace(playerid, 1), vehicleData[GetVehicleModel(GetPlayerVehicleID(playerid)) - 400][typeName]);
			ProxDetector(12, playerid, msg, COLOR_PINK);
			if(strcmp(VehicleInfo[GetPlayerVehicleID(playerid)][vOwner], PlayerInfo[GetPlayerVehicleID(playerid)][pName]) == 0) VehicleInfo[GetPlayerVehicleID(playerid)][vKey] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			VehicleInfo[GetPlayerVehicleID(playerid)][vFuel] = vehicleData[GetVehicleModel(GetPlayerVehicleID(playerid)) - 400][tank];
		} else {
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你需要在载具内.");
		 	if(GetPlayerVehicleSeat(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "你需要在驾驶位.");
		 	new vehicle = GetPlayerVehicleID(playerid),
				vengine,
			 	lights,
			 	alarm,
			 	doors,
			 	bonnet,
			 	boot,
			 	objective,
				msg[120],
				model = GetVehicleModel(vehicle),
				Float:health;

	        if(!IsAnEngineCar(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "该车没有引擎.");
			GetVehicleParamsEx(vehicle, vengine, lights, alarm, doors, bonnet, boot, objective);
		 	if(GetPVarInt(playerid, "AdminDuty") == 0) {
			 	if((VehicleInfo[vehicle][vFaction] != 0 && VehicleInfo[vehicle][vFaction] != PlayerInfo[playerid][pFaction] && VehicleInfo[vehicle][vKey] == 0) ||
				 (VehicleInfo[vehicle][vType] == VEHICLE_OWNED && strcmp(VehicleInfo[vehicle][vOwner], PlayerInfo[playerid][pName]) != 0 && VehicleInfo[vehicle][vKey] == 0) ||
			     (VehicleInfo[vehicle][vType] == VEHICLE_JOB && PlayerInfo[playerid][pJob] == 0) || (VehicleInfo[vehicle][vType] == VEHICLE_JOB && PlayerInfo[playerid][pJob] == 1 &&
				 model != 408) || (VehicleInfo[vehicle][vType] == VEHICLE_JOB && PlayerInfo[playerid][pJob] == 2 && model != 448) || (VehicleInfo[vehicle][vType] == VEHICLE_JOB && PlayerInfo[playerid][pJob] == 3 && model != 482))
			 		return SendClientMessage(playerid, COLOR_GREY, "你没有该车钥匙.");
				if((VehicleInfo[vehicle][vFaction] == 1 && GetPVarInt(playerid, "LAPDDuty") == 0 && VehicleInfo[vehicle][vKey] == 0) || (VehicleInfo[vehicle][vFaction] == 2 && GetPVarInt(playerid, "LSFDDuty") == 0 && VehicleInfo[vehicle][vKey] == 0) || (VehicleInfo[vehicle][vFaction] == 3 && GetPVarInt(playerid, "SanDuty") == 0 && VehicleInfo[vehicle][vKey] == 0)) return SendClientMessage(playerid, COLOR_GREY, "你没有该载具钥匙.");
			}

		 	GetVehicleHealth(vehicle, health);
		 	if(health < GM_BREAKDOWN_HEALTH) return SendClientMessage(playerid, COLOR_GREY, "载具已经失火.");
		 	if(VehicleInfo[vehicle][vFuel] == 0) return SendClientMessage(playerid, COLOR_GREY, "该载具已经没有可用燃料去启动.");
		 	if(GetPVarInt(playerid, "turningengine") != 0) return SendClientMessage(playerid, COLOR_GREY, "引擎是开的.");
		 	switch(vengine) {
		 	    case 0: {
		 	        format(msg, sizeof(msg), "** %s 将载具 %s 钥匙扭动并且尝试打开引擎.", GetNameWithSpace(playerid, 1), vehicleData[model - 400][typeName]);
					ProxDetector(12, playerid, msg, COLOR_PINK);
					SetTimerEx("engine", 1500, false, "di", playerid, vehicle);
					SetPVarInt(playerid, "turningengine", 1);
					GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Starting engine..", 1500, 3);
					VehicleInfo[vehicle][vKey] = 1;
					return 1;
		 	    }
		 	    case 1: {
					SetVehicleParamsEx(vehicle, 0, lights, alarm, doors, bonnet, boot, objective);
					format(msg, sizeof(msg), "** %s 将载具 %s 钥匙扭动并且关闭引擎.", GetNameWithSpace(playerid, 1), vehicleData[model - 400][typeName]);
					ProxDetector(12, playerid, msg, COLOR_PINK);
					if(VehicleInfo[vehicle][vFaction] == 0 && strcmp(VehicleInfo[vehicle][vOwner], PlayerInfo[playerid][pName]) == 0) {
						VehicleInfo[vehicle][vKey] = 0;
					} else if(VehicleInfo[vehicle][vFaction] != 0 && VehicleInfo[vehicle][vFaction] == PlayerInfo[playerid][pFaction]) {
						VehicleInfo[vehicle][vKey] = 0;
					}

					return 1;
		 	    }
		 	}
		}
	}
// test
	if(PRESSED(262144)&&GetPVarInt(playerid, "Death")==0&&!IsPlayerInAnyVehicle(playerid))
	{
		if(GetPVarInt(playerid,"xb_businessid")==0)
		{
		    if(!XB_HaveFurniture(playerid))
		    {
				new wid=XB_GetNearestFurniture(playerid);
				if(wid!=-1)
				{
                    SelectObject(playerid);
				    SendClientMessage(playerid,COLOR_LIGHTRED,"[i] {FFFFFF}用鼠标点击家具,可以捡起来,最近的家具已用文字被标志出来");
                    SendClientMessage(playerid,COLOR_LIGHTRED,"[i] {FFFFFF}你可以使用/getf来捡起离你最近的家具.");
					new Float:x,Float:y,Float:z;
				    GetDynamicObjectPos(FurnitureInfo[wid][FObject],x,y,z);
				    new msg[128];
				    format(msg,sizeof msg,"家具ID:%d",wid);
				    if(xb_flabelexist[playerid])
	                {
                        DeletePlayer3DTextLabel(playerid, xb_flabel[playerid]);
	                }
                    xb_flabelexist[playerid]=true;
				    xb_flabel[playerid]=CreatePlayer3DTextLabel(playerid, msg, -1, x,y,z, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
				}
				else
				{
					//SendClientMessage(playerid,-1,"附近没有任何家具");
				}
		    }
		    else
		    {
				new fid=XB_GetFurnitureID(playerid);
				if(fid==-1)return 1;
				new dstring[814];
				format(dstring,sizeof dstring,"<家具ID>:\t%d\n<名称>:\t%s\n<类型>:\t%s\n<价值>:\t$%d\n--------------------\n[放置家具]\n[变卖家具]\n[丢弃家具]\n[销毁家具]",fid,FurnitureInfo[fid][Name],FurnitureInfo[fid][TypeName],FurnitureInfo[fid][Price]);
				ShowPlayerDialog(playerid,4032,DIALOG_STYLE_LIST,"家具菜单",dstring,"操作","返回");
			}
		}
	}
	
	if(PRESSED(KEY_FIRE) && GetPVarInt(playerid, "Death")==0)
	{
		if(PlayerInfo[playerid][pItemType][IDX_STD_ITEM] == 196 &&!xb_cuttree[playerid]&&PlayerInfo[playerid][pJob]==5)
		{
			XB_AttackTreeHandler(playerid);
		}
	}
	if(PlayerInfo[playerid][pJob] == 5)
	{
		if(PRESSED(KEY_CROUCH) && GetPVarInt(playerid, "Death") == 0 && !IsPlayerInAnyVehicle(playerid))
		{
			if(!xb_woodinhand[playerid])
			XB_PreOnPlayerPickWood(playerid);
		}
	}
	if(PRESSED(KEY_CROUCH) && GetPVarInt(playerid, "Death") == 0 && !IsPlayerInAnyVehicle(playerid))
	{
		if(!IsChecking[playerid])
		CorpseHandler(playerid);
	}
	
	if(takingselfie[playerid] == 1)
	{
		if(PRESSED(KEY_ANALOG_RIGHT))
		{
			GetPlayerPos(playerid,lX[playerid],lY[playerid],lZ[playerid]);
			static Float: n1X, Float: n1Y;
		    if(Degree[playerid] >= 360) Degree[playerid] = 0;
		    Degree[playerid] += szSpeed;
		    n1X = lX[playerid] + szRadius * floatcos(Degree[playerid], degrees);
		    n1Y = lY[playerid] + szRadius * floatsin(Degree[playerid], degrees);
		    SetPlayerCameraPos(playerid, n1X, n1Y, lZ[playerid] + szHeight);
		    SetPlayerCameraLookAt(playerid, lX[playerid], lY[playerid], lZ[playerid]+1);
		    SetPlayerFacingAngle(playerid, Degree[playerid] - 90.0);
		}
		if(PRESSED(KEY_ANALOG_LEFT))
		{
		    GetPlayerPos(playerid,lX[playerid],lY[playerid],lZ[playerid]);
			static Float: n1X, Float: n1Y;
		    if(Degree[playerid] >= 360) Degree[playerid] = 0;
		    Degree[playerid] -= szSpeed;
		    n1X = lX[playerid] + szRadius * floatcos(Degree[playerid], degrees);
		    n1Y = lY[playerid] + szRadius * floatsin(Degree[playerid], degrees);
		    SetPlayerCameraPos(playerid, n1X, n1Y, lZ[playerid] + szHeight);
		    SetPlayerCameraLookAt(playerid, lX[playerid], lY[playerid], lZ[playerid]+1);
		    SetPlayerFacingAngle(playerid, Degree[playerid] - 90.0);
		}
	}
    if(GetPVarInt(playerid, "AntiCBug") == 0) {
		if((newkeys & KEY_FIRE) && (oldkeys & KEY_CROUCH) && !((oldkeys & KEY_FIRE) || (newkeys & KEY_HANDBRAKE)) || (oldkeys & KEY_FIRE) && (newkeys & KEY_CROUCH) && !((newkeys & KEY_FIRE) || (newkeys & KEY_HANDBRAKE)) ) {
	        switch(GetPlayerWeapon(playerid)) {
	 			case 23..25, 27, 29..34, 41: {
	                if(Ammo[playerid][GetPlayerWeapon(playerid)] > GetPlayerAmmo(playerid)) {
	                   	playerCBugging(playerid);
	                }
	    		}
	        }
	    }

		if(CheckCrouch[playerid] == 1) {
		  	switch(WeaponID[playerid]) {
		       	case 23..25, 27, 29..34, 41: {
		           	if((newkeys & KEY_CROUCH) && !((newkeys & KEY_FIRE) || (newkeys & KEY_HANDBRAKE)) && GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK ) {
		               	if(Ammo[playerid][GetPlayerWeapon(playerid)] > GetPlayerAmmo(playerid)) {
		                   	playerCBugging(playerid);
		               	}
		           	}
		      	}
		   	}
		} else if(((newkeys & KEY_FIRE) && (newkeys & KEY_HANDBRAKE) && !((newkeys & KEY_SPRINT) || (newkeys & KEY_JUMP))) ||
			 	  (newkeys & KEY_FIRE) && !((newkeys & KEY_SPRINT) || (newkeys & KEY_JUMP)) ||
				  (NotMoving[playerid] && (newkeys & KEY_FIRE) && (newkeys & KEY_HANDBRAKE)) ||
				  (NotMoving[playerid] && (newkeys & KEY_FIRE)) ||
				  (newkeys & KEY_FIRE) && (oldkeys & KEY_CROUCH) && !((oldkeys & KEY_FIRE) || (newkeys & KEY_HANDBRAKE)) ||
				  (oldkeys & KEY_FIRE) && (newkeys & KEY_CROUCH) && !((newkeys & KEY_FIRE) || (newkeys & KEY_HANDBRAKE)) ) {
			SetTimerEx("CrouchCheck", 3000, 0, "d", playerid);
		    CheckCrouch[playerid] = 1;
		    WeaponID[playerid] = GetPlayerWeapon(playerid);
			Ammo[playerid][GetPlayerWeapon(playerid)] = GetPlayerAmmo(playerid);
		}
	}

	if(GetPVarInt(playerid, "Death") == 0) {
		new Float:phealth;
		GetPlayerHealth(playerid, phealth);
        if(newkeys & KEY_SECONDARY_ATTACK && (GetPVarInt(playerid, "CCActive") != 0 || GetPVarInt(playerid, "ClothingStoreActive") != 0 || GetPVarInt(playerid, "WardrobeActive") != 0 || GetPVarInt(playerid, "LAPDChoose") != 0 || GetPVarInt(playerid, "SanChoose") != 0 || GetPVarInt(playerid, "LSFDChoose") != 0 || GetPVarInt(playerid, "DealerVehicleID") != 0|| GetPVarInt(playerid, "xb_businessid") != 0 || (GetPVarInt(playerid, "InModGarage") != 0 && GetPlayerVehicleSeat(playerid) == 0))) {
			SelectTextDraw(playerid, 0xFF9900FF);
		} else if(newkeys & KEY_ANALOG_UP && (PlayerInfo[playerid][pItemType][0] == 28 || (PlayerInfo[playerid][pItemType][0] >= 243 && PlayerInfo[playerid][pItemType][0] <= 249))) {
            if(GetPVarInt(playerid, "DrinkingSpamBlocker") == 0 && PlayerInfo[playerid][pItemVar][0] > 0) {
				new query[70];
				if(PlayerInfo[playerid][pItemVar][0] >= 50) {
					PlayerInfo[playerid][pItemVar][0] -= 50;
				} else {
				    PlayerInfo[playerid][pItemVar][0] = 0;
				}

				setItemVariable(playerid, PlayerInfo[playerid][pItemIndex][0], PlayerInfo[playerid][pItemVar][0]);
	            mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][0], PlayerInfo[playerid][pItemID][0]);
	            mysql_function_query(sqlHandle, query, false, "", "");
	            if(!IsPlayerInAnyVehicle(playerid)) {
					ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.1, 0, 1, 1, 0, 0, 1);
				}
				
	            SetPVarInt(playerid, "DrinkingSpamBlocker", 1);
			}
		}
		else if(PRESSED(KEY_FIRE))
		{
		    if(RecentlyFired[playerid] == 0)
		    {
		        new query[128];
				RecentlyFired[playerid] = 5;
  				mysql_format(sqlHandle, query, sizeof(query), "SELECT `serial` FROM `samp_items` WHERE `id` = %i", PlayerInfo[playerid][pItemID][0]);
				mysql_function_query(sqlHandle, query, true, "OnCommandCreateShell", "i", playerid);
			}
		}
        else if(newkeys & KEY_AIM && weaponAttached[playerid] == 0)
		{
			if(GetPlayerWeapon(playerid) == 30 && PlayerInfo[playerid][pItemType][0] == 221) // AK74u
			{
				SetPlayerDrunkLevel(playerid, 1750);
			}
			if(GetPlayerWeapon(playerid) == 30 && PlayerInfo[playerid][pItemType][0] == 225) // AK-M
			{
				SetPlayerDrunkLevel(playerid, 1500);
			}
			if(GetPlayerWeapon(playerid) == 30 && PlayerInfo[playerid][pItemType][0] == 214) // AK-47
			{
				SetPlayerDrunkLevel(playerid, 2500);
			}
			if(GetPlayerWeapon(playerid) == 31 && PlayerInfo[playerid][pItemType][0] == 214) // AR-15
			{
				SetPlayerDrunkLevel(playerid, 600);
			}
			if(GetPlayerWeapon(playerid) == 31 && PlayerInfo[playerid][pItemType][0] == 214) // M4A1
			{
				SetPlayerDrunkLevel(playerid, 750);
			}
			if(GetPlayerWeapon(playerid) == 34 && PlayerInfo[playerid][pItemType][0] == 217) // M24 Sniper Rifle
			{
				SetPlayerDrunkLevel(playerid, 750);
			}
			if(GetPlayerWeapon(playerid) == 24 && PlayerInfo[playerid][pItemType][0] == 223) // Desert Eagle
			{
				SetPlayerDrunkLevel(playerid, 2500);
			}
			if(GetPlayerWeapon(playerid) == 25 && PlayerInfo[playerid][pItemType][0] == 209) // Remington 870
			{
				SetPlayerDrunkLevel(playerid, 1500);
			}
			if(GetPlayerWeapon(playerid) == 29 && PlayerInfo[playerid][pItemType][0] == 213) // MP5
			{
				SetPlayerDrunkLevel(playerid, 1500);
			}
			if(GetPlayerWeapon(playerid) == 32 && PlayerInfo[playerid][pItemType][0] == 215) // KG-9
			{
				SetPlayerDrunkLevel(playerid, 1500);
			}
			if(GetPlayerWeapon(playerid) == 32 && PlayerInfo[playerid][pItemType][0] == 213) // tec-9
			{
				SetPlayerDrunkLevel(playerid, 1750);
			}
			if(GetPlayerWeapon(playerid) == 28 && PlayerInfo[playerid][pItemType][0] == 222) // Mac-10
			{
				SetPlayerDrunkLevel(playerid, 1500);
			}
			if(GetPlayerWeapon(playerid) == 29 && PlayerInfo[playerid][pItemType][0] == 212) // UZI
			{
				SetPlayerDrunkLevel(playerid, 1750);
			}
		}
		else if(RELEASED(KEY_AIM))
		{
		    SetPlayerDrunkLevel(playerid, 0);
		}
		if(newkeys & KEY_JUMP && !(oldkeys & KEY_JUMP))
		{
		    if(BrokenLegs[playerid] == 1)
		    {
				ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff",4.1,0,1,1,0,0);
				ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff",4.1,0,1,1,0,0);
			}
		}
		
		if(HOLDING(KEY_SPRINT))
		{
			if(BrokenLegs[playerid] == 1 || IsPlayerRunning(playerid))
			{
	      		ApplyAnimation(playerid, "PED", "FALL_collapse",4.1,0,1,1,0,0);
				ApplyAnimation(playerid, "PED", "FALL_collapse",4.1,0,1,1,0,0);
			}
		}
		else if(newkeys & KEY_JUMP)
		{
		    if(isPlayerSwimmingOrJumping(playerid) == 0 && antiBunnyHop != 0 && GetPVarInt(playerid, "AdminDuty") == 0 && GetPVarInt(playerid, "ModDuty") == 0 && GetPVarInt(playerid, "Frozen") == 0 && !IsPlayerInAnyVehicle(playerid) && GetPVarInt(playerid, "AdminJailed") == 0)
			{
		        if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED && GetPVarInt(playerid, "Tripped") == 0)
				{
					new tripMsg[84],
						Float:X,
						Float:Y,
						Float:Z;

	                GetPlayerPos(playerid, X, Y, Z);
					SetPlayerPos(playerid, X, Y, Z);
					format(tripMsg, sizeof(tripMsg), "** %s 由于被戴上手铐跳跃时摔跤.", GetNameWithSpace(playerid, 1));
					ProxDetector(12, playerid, tripMsg, COLOR_PINK);
					SetPVarInt(playerid, "Tripped", 1);
					FreezePlayer(playerid);
				    ApplyAnimation(playerid, "PARACHUTE", "FALL_skyDive_DIE", 4.1, 0, 1, 1, 1, 1, 1);
				    TripTimerVar[playerid] = SetTimerEx("TripTimer", 4500, false, "d", playerid);
				}
				else
				{
					JumpCounter[playerid]++;
					if(JumpCounter[playerid] > 3 && GetPVarInt(playerid, "JumpTripped") != 1 && !IsPlayerInAnyVehicle(playerid)) {
					    new ran = random(5);
					    if(ran == 4) {
					        new meStr[70],
								Float:X,
								Float:Y,
								Float:Z;

	                        SetPVarInt(playerid, "JumpTripped", 1);
							GetPlayerPos(playerid, X, Y, Z);
							SetPlayerPos(playerid, X, Y, Z);
							FreezePlayer(playerid);
					        ApplyAnimation(playerid, "PARACHUTE", "FALL_skyDive_DIE", 4.1, 0, 1, 1, 1, 1, 1);
					        format(meStr, sizeof(meStr), "** %s 绊倒并摔在地上.", GetNameWithSpace(playerid, 1));
					        ProxDetector(12, playerid, meStr, COLOR_PINK);
					        JumpCounter[playerid] = 0;
					        JumpTimerVar[playerid] = SetTimerEx("JumpTimer", 3000, false, "i", playerid);
					    }
					}
				}
			}
		}
		else if(newkeys & KEY_YES)
		{
		    if(GetPVarInt(playerid, "Reload") == 0)
			{
				if(items[PlayerInfo[playerid][pItemType][0]][itemType] == ITEM_WEAPON)
				{
					new guns[2];
					for(new w = 0; w != 13; w++)
					{
						GetPlayerWeaponData(playerid, w, guns[0], guns[1]);
						if(guns[0] == items[PlayerInfo[playerid][pItemType][0]][weaponID])
						{
							break;
						}
					}

					if(PlayerInfo[playerid][pItemType][0] == 242)
					{
					    if(guns[1] == 0)
						{
					        new me[50];
					        format(me, sizeof(me), "** %s 给%s充电.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][0]));
							ProxDetector(12, playerid, me, COLOR_PINK);
							ResetPlayerWeapons(playerid);
							GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], 1);
							SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], 1);
							GameTextForPlayer(playerid, "~w~Recharging..", 1000, 4);
							SetPVarInt(playerid, "Reload", 1);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "你的电击枪已经充满电池了.");
						}
					}
					if(PlayerInfo[playerid][pItemType][0] == 225)
					{
					    if(guns[1] == 0) {
					        new me[50];
					        format(me, sizeof(me), "** %s 给%s填装子弹.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][0]));
							ProxDetector(12, playerid, me, COLOR_PINK);
							ResetPlayerWeapons(playerid);
							GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], 1);
							SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], 1);
							GameTextForPlayer(playerid, "~w~Reloading..", 1000, 4);
							SetPVarInt(playerid, "Reload", 1);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "你的气枪已经成功填装.");
						}
					}
					else if(guns[1] != WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoSize])
					{
						new id = getPlayerItemID(playerid, WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoTypeItem]);
						if(id != 0) {
						    new query[70],
						        me[100],
								ammo = getItemVarFromID(playerid, id);

							format(me, sizeof(me), "** %s 拿出一个弹夹给%s填装.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][0]));
							ProxDetector(12, playerid, me, COLOR_PINK);
							ResetPlayerWeapons(playerid);
							PlayerPlaySound(playerid, 36401, 0, 0, 0);
							if(WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoType] != 3) {
							    RemovePlayerItemEx(playerid, id);
							    mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", id);
								mysql_function_query(sqlHandle, query, false, "", "");
								GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], ammo);
								SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], ammo);
								if(guns[1] != 0) {
									SetPlayerItem(playerid, WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoTypeItem], guns[1]);
								}
							} else {
							    if(ammo - WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoSize] > 0) {
								    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", ammo - (WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoSize] - guns[1]), id);
									mysql_function_query(sqlHandle, query, false, "", "");
									setItemVariableByID(playerid, id, ammo - (WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoSize] - guns[1]));
									GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoSize]);
									SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoSize]);
								} else {
	                                RemovePlayerItemEx(playerid, id);
								    mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", id);
									mysql_function_query(sqlHandle, query, false, "", "");
									GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], ammo);
									SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], ammo);
								}
							}

							if(!IsPlayerInAnyVehicle(playerid))
							{
								switch(WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][reloadAnim])
								{
									case 0:
									{
									    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DUCK)
										{
											//ApplyAnimation(playerid, "PYTHON", "python_crouchreload", 4.1, 0, 1, 1, 0, 0, 1);
										}
										else
										{
										    ApplyAnimation(playerid, "PYTHON", "python_reload", 4.1, 0, 1, 1, 0, 0, 1);
										}
									}
									case 1:
									{
									    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DUCK)
										{
									    	//ApplyAnimation(playerid, "UZI", "UZI_crouchreload", 4.1, 0, 1, 1, 0, 0, 1);
										}
										else
										{
										    ApplyAnimation(playerid, "UZI", "UZI_reload", 4.1, 0, 1, 1, 0, 0, 1);
										}
									}
								}
							}

                            GameTextForPlayer(playerid, "~w~Reloading..", 1000, 4);
							SetPVarInt(playerid, "Reload", 1);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "你没有匹配该武器的子弹.");
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "你的武器已经上膛并且是满子弹状态.");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "请等待一下, 再次尝试装弹. (如果BUG了 请按下N手动操作)");
			}
        }
		else if(newkeys & KEY_NO)
		{
            new pItems[22],
				dialogMsg[850];

			getItemPage(playerid, pItems, sizeof(pItems), 1);
			if(pItems[0] != 0) {
				for(new i = 0; i != sizeof(pItems); i++) {
					if(pItems[i] == 0) {
						break;
					}

					if(isnull(dialogMsg)) {
					    if(pItems[i] >= 4 && pItems[i] <= 13) {
							format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, i));
						} else if(pItems[i] == 3) {
		    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, i));
						} else if(pItems[i] == 17) {
						    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, i));
						} else if(pItems[i] == 18) {
						    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, i));
						} else if(pItems[i] == 19) {
						    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, i));
                        } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				    		format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
						} else {
						    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
						}
					} else {
					    if(pItems[i] >= 4 && pItems[i] <= 13) {
							format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
						} else if(pItems[i] == 3) {
		    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
						} else if(pItems[i] == 17) {
						    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
						} else if(pItems[i] == 18) {
						    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
						} else if(pItems[i] == 19) {
						    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
                        } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
				    		format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
						} else {
						    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
						}
					}

					if(getItemID(playerid, i) == PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]]) {
					    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
					}
				}

				if(itemIndexExists(playerid, 21)) {
					format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
				}

		        SetPVarInt(playerid, "CurrentItemPage", 1);
				ShowPlayerDialog(playerid, DIALOG_ITEMS, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "选择", "取消");
			} else {
				SendClientMessage(playerid, COLOR_GREY, "你没有任何物品, 无法管理你的储物箱.");
			}
		} else if(newkeys & KEY_SUBMISSION && GetPlayerVehicleSeat(playerid) == 0) {
		    new vehicleid = GetPlayerVehicleID(playerid),
		        vdata[7];

            GetVehicleParamsEx(vehicleid, vdata[0], vdata[1], vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
			switch(vdata[1]) {
			    case 0: {
					SetVehicleParamsEx(vehicleid, vdata[0], 1, vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
					GameTextForPlayer(playerid, "~g~Lights ~y~ON", 1000, 3);
			    }
			    case 1: {
					SetVehicleParamsEx(vehicleid, vdata[0], 0, vdata[2], vdata[3], vdata[4], vdata[5], vdata[6]);
					GameTextForPlayer(playerid, "~g~Lights ~y~OFF", 1000, 3);
			    }
			}
		} else if(newkeys & KEY_WALK) {
		    if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_USECELLPHONE) {
				switch(PlayerInfo[playerid][pWalkstyle]) {
				    case 1: {
	                    ApplyAnimation(playerid, "PED", "WALK_gang1", 4.1, 1, 1, 1, 1, 1, 1);
					}
					case 2: {
					    ApplyAnimation(playerid, "FAT", "FatWalk", 4.1, 1, 1, 1, 1, 1, 1);
					}
					case 3: {
					    ApplyAnimation(playerid, "MUSCULAR", "MuscleWalk", 4.1, 1, 1, 1, 1, 1, 1);
					}
					case 4: {
					    ApplyAnimation(playerid, "PED", "WALK_fatold", 4.1, 1, 1, 1, 1, 1, 1);
					}
					case 5: {
					    ApplyAnimation(playerid, "PED", "WALK_gang2", 4.1, 1, 1, 1, 1, 1, 1);
					}
					case 6: {
					    ApplyAnimation(playerid, "PED", "WALK_player", 4.1, 1, 1, 1, 1, 1, 1);
					}
					case 7: {
	                    ApplyAnimation(playerid, "PED", "WOMAN_walkbusy", 4.1, 1, 1, 1, 1, 1, 1);
					}
					case 8: {
					    ApplyAnimation(playerid, "PED", "WOMAN_walksexy", 4.1, 1, 1, 1, 1, 1, 1);
					}
				}
			}
		} else if(RELEASED(KEY_WALK)) {
		    if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_USECELLPHONE) {
		        ClearAnimations(playerid);
		    	ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0, 1);
			}
		}
	} else {
		if(GetPVarInt(playerid, "AntiSpamTimer") == 0) {
			//SendClientMessage(playerid, COLOR_LIGHTRED, "WARNING: You cannot use this feature at the moment as you are critically injured.");
			SetPVarInt(playerid, "AntiSpamTimer", 1);
			SetTimerEx("AntiSpamTimer", 1000, 0, "d", playerid);
		}
	}

	return 1;
}

public OnPlayerUpdate(playerid)
{
	if(!IsPlayerNPC(playerid))
	{
	    new keys,
	        ud,
	        lr;
	        
		/*if(GetPVarInt(playerid, "LoadData") == 1)
		{
			if(GetPlayerWeapon(playerid) == 35 || GetPlayerWeapon(playerid) == 36 || GetPlayerWeapon(playerid) == 37 || GetPlayerWeapon(playerid) == 38 || GetPlayerWeapon(playerid) == 27)
			{
			    if(PlayerInfo[playerid][pAdminlevel] == 0)
			    {
				    new IP[16], msg[128], query[128];
				    GetPlayerIp(playerid, IP, sizeof(IP));
				    format(msg, sizeof(msg), "AdmCmd: %s was banned by SYSTEM, Reason:[Restricted Weapons]", GetNameWithSpace(playerid));
					SendClientMessageToAll(COLOR_LIGHTRED, msg);
					mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_bans` (`user`, `reason`, `admin`, `date`, `ip`) VALUES ('%e', '%e', '%e', NOW(), '%e')", GetNameWithSpace(playerid), "Restricted Weapons", "SYSTEM", IP);
			    	mysql_function_query(sqlHandle, query, false, "", "");
				    mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_T` SET `banned` = 1 WHERE `user` = '%e'", PlayerInfo[playerid][pName]);
					mysql_function_query(sqlHandle, msg, false, "", "");
					BanLog(playerid, PlayerInfo[playerid][pName], "Restricted Weapons");
					BanExDelay(playerid, "Restricted Weapons");
					format(msg, sizeof(msg), "banip %s", IP);
					SendRconCommand(msg);
				    return 1;
				}
			}
		}*/
        if(GetPlayerPing(playerid) >= MAX_PING)
        {
            if(IsPlayerNPC(playerid)) return 1;
        	SendClientMessage(playerid, COLOR_GREEN, "你被请出了服务器, 因为你的PING值超过服务器最大限制: 750ms.");
        	KickDelay(playerid);
        }
		if(GetPVarInt(playerid, "AntiCBug") == 0)
		{
	        if(CheckCrouch[playerid] == 1) {
	        	switch(WeaponID[playerid]) {
	            	case 23..25, 27, 29..34, 41: {
	                	if((keys & KEY_CROUCH) && !((keys & KEY_FIRE) || (keys & KEY_HANDBRAKE)) && GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK ) {
	                    	if(Ammo[playerid][GetPlayerWeapon(playerid)] > GetPlayerAmmo(playerid)) {
								playerCBugging(playerid);
	                        }
	                 	}
	             	}
	        	}
	        }

	        if(!ud && !lr) {
				NotMoving[playerid] = 1;
			} else {
				NotMoving[playerid] = 0;
			}
		}
		if(PlayerInfo[playerid][pCuffed] == 1 && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
		{
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
		}
		new PlayerState = GetPlayerState(playerid);
		if(GetPVarInt(playerid, "detained") != 0 && PlayerState == PLAYER_STATE_ONFOOT)
		{
		    PutPlayerInVehicle(playerid, GetPVarInt(playerid, "detained"), 2);
		}
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
	        /* --- Vehicle Crash System --- */

	        new Float:damage,
				Float:health,
				lights,
				alarm,
				doors,
				bonnet,
				boot,
				objective,
				vehicleid = GetPlayerVehicleID(playerid);

			GetVehicleHealth(vehicleid, damage);
			if(VehicleInfo[vehicleid][vHealth] - damage > 75) {
			    if(VehicleInfo[vehicleid][vAvoidUpdate] == 0) {
					foreach(new i : Player) {
					    if(GetPlayerVehicleID(i) == vehicleid) {
					        GetPlayerHealth(i, health);
					        if(seatbelt[i] != 0 || helmet[i] != 0) {
								SetPlayerHealthAndLimit(i, floatround(health - ((VehicleInfo[vehicleid][vHealth] - damage) / 20)));
							} else {
				                SetPlayerHealthAndLimit(i, floatround(health - ((VehicleInfo[vehicleid][vHealth] - damage) / 8)));
							}

							fade[i][fID] = 12;
							FadeScreen(playerid, 0, 0, 0, 175, 100);
						}
					}

					if(VehicleInfo[vehicleid][vHealth] - damage >= 200 && IsAnEngineCar(vehicleid)) {
				        SetVehicleParamsEx(vehicleid, 0, lights, alarm, doors, bonnet, boot, objective);
				        SendClientMessage(playerid, COLOR_WHITE, "你载具的引擎熄火了. 你可以重新点火或者联系汽修厂.");
						if(VehicleInfo[vehicleid][vFaction] == 0 && strcmp(VehicleInfo[vehicleid][vOwner], PlayerInfo[playerid][pName]) == 0) {
							VehicleInfo[vehicleid][vKey] = 0;
						} else if(VehicleInfo[vehicleid][vFaction] != 0 && VehicleInfo[vehicleid][vFaction] == PlayerInfo[playerid][pFaction]) {
							VehicleInfo[vehicleid][vKey] = 0;
						}
					}
				} else {
				    VehicleInfo[vehicleid][vAvoidUpdate] = 0;
				}
			}

	        for(new s = 0; s < sizeof(SpikeInfo); s++) {
	  	        if(IsPlayerInRangeOfPoint(playerid, 3.0, SpikeInfo[s][spikeX], SpikeInfo[s][spikeY], SpikeInfo[s][spikeZ])) {
	  	            if(SpikeInfo[s][spikeCreated] == 1) {
	  	                new vdata[4],
							carid = GetPlayerVehicleID(playerid);
							
			            GetVehicleDamageStatus(carid, vdata[0], vdata[1], vdata[2], vdata[3]);
			            vdata[3] = encode_tires(1, 1, 1, 1);
			            UpdateVehicleDamageStatus(carid, vdata[0], vdata[1], vdata[2], vdata[3]);
	  	            }
	  	        }
			}

			VehicleInfo[vehicleid][vHealth] = damage;
		}

		/* --- Object-Weapon Handling --- */

		if(PlayerInfo[playerid][pItemType][0] != 0 && items[PlayerInfo[playerid][pItemType][0]][itemType] == ITEM_WEAPON && GetPlayerState(playerid) != PLAYER_STATE_DRIVER && GetPVarInt(playerid, "DealershipLoc") == 0) {
			if(GetPlayerWeapon(playerid) == 0) {
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 0)) {
				    new weapons[2];
				    SetPlayerDrunkLevel(playerid, 0);
					SetPlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][0]][iIdx], items[PlayerInfo[playerid][pItemType][0]][objID], items[PlayerInfo[playerid][pItemType][0]][bone]);
                    weaponAttached[playerid] = 1;
					for(new i = 0; i < 13; i++) {
						GetPlayerWeaponData(playerid, i, weapons[0], weapons[1]);
					    if(weapons[0] == items[PlayerInfo[playerid][pItemType][0]][weaponID] && weapons[1] == 0) {
							TextDrawShowForPlayer(playerid, TD_R_Gun);
							TextDrawShowForPlayer(playerid, TD_R_GunText);
							break;
						}
					}
				}
			} else {
                if(weaponAttached[playerid] == 1) {
					weaponAttached[playerid] = 0;
					TextDrawHideForPlayer(playerid, TD_R_Gun);
	       			TextDrawHideForPlayer(playerid, TD_R_GunText);
	       			RemovePlayerAttachedObject(playerid, 0);
				}
			}

			PlayerTextDrawSetString(playerid, TD_Ammu_Weapon, items[PlayerInfo[playerid][pItemType][0]][itemName]);
			TextDrawShowForPlayer(playerid, TD_Ammu_Box);
	        TextDrawShowForPlayer(playerid, TD_Ammu_Headline);
	        PlayerTextDrawShow(playerid, TD_Ammu_Weapon);
		} else {
		    TextDrawHideForPlayer(playerid, TD_Ammu_Box);
	        TextDrawHideForPlayer(playerid, TD_Ammu_Headline);
	        TextDrawHideForPlayer(playerid, TD_R_Gun);
	        TextDrawHideForPlayer(playerid, TD_R_GunText);
	        PlayerTextDrawHide(playerid, TD_Ammu_Weapon);
	        if(weaponAttached[playerid] == 1) {
				weaponAttached[playerid] = 0;
			}
		}

		if(Paused[playerid] != 0 && GetPVarInt(playerid, "LoadData") != 0) {
		    Paused[playerid] = 0;
			if(GetPVarInt(playerid, "Togafk") == 0) {
			    new afk[60];
				format(afk, sizeof(afk), "服务器: 你已远离键盘 %i 秒.", afkCounter[playerid]);
				SendClientMessage(playerid, COLOR_LIGHTRED, afk);
			}
		}

		if(GetPVarInt(playerid, "LoadData") != 0) {
			LastUpdate[playerid] = gettime();
		}

	    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK) {
		    SystemBanPlayer(playerid, "Jetpack Hack", PlayerInfo[playerid][pIP]);
		}

		if((GetPlayerSkin(playerid) <= 0 || GetPlayerSkin(playerid) == 74) && GetPVarInt(playerid, "LoadData") == 1)
	 	{
	 	    if(PlayerInfo[playerid][pAdminlevel] == 0)
	 	    {
			    SetPlayerStandardSkin(playerid);
			    SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 你没有权限使用该皮肤.");
   			}
		}
	}

	return 1;
}

/* --- Unchecked --- */

COMMAND:fill(playerid, params[]) {
	if(GetPlayerVehicleID(playerid) == 0 || GetPlayerVehicleSeat(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "你需要在驾驶位.");
	if(PlayerInfo[playerid][pFaction] == 1 && IsPlayerInRangeOfPoint(playerid, 15, 1584.1018,-1674.7207,5.9000) && VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "该车只能在LAPD地下车库进行填充.");
	if(IsPlayerInRangeOfPoint(playerid, 10, 1940.1053, -1772.8323, 13.3906) || IsPlayerInRangeOfPoint(playerid, 10, 1004.0475, -938.3154, 42.1797)|| IsPlayerInRangeOfPoint(playerid, 20, -2393.4827, -2172.5464, 32.7383) || IsPlayerInRangeOfPoint(playerid, 10, -91.4394, -1169.2651, 1.9978) || (PlayerInfo[playerid][pFaction] == 1 && IsPlayerInRangeOfPoint(playerid, 15, 1584.1018,-1674.7207,5.9000))) {
	    if(IsPlayerInAnyVehicle(playerid) && IsAFuelCar(GetPlayerVehicleID(playerid)))
		{
	        new vengine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), vengine, lights, alarm, doors, bonnet, boot, objective);
			if(vengine == 0)
			{
			    ShowPlayerDialog(playerid, DIALOG_FILL, DIALOG_STYLE_INPUT, "{FF9900}加油站", "你想加多少升的汽油?", "确定", "取消");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "你需要关闭载具引擎.");
			}
	    }
		else
		{
	        SendClientMessage(playerid, COLOR_GREY, "你需要在车内.");
	    }
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GREY, "你不在任何加油站旁边.");
	}

	return 1;
}

/*COMMAND:fish(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 403.7771, -2088.1206, 7.8359) || IsPlayerInRangeOfPoint(playerid, 2.0, 398.4467, -2088.1702, 7.8359) || IsPlayerInRangeOfPoint(playerid, 2.0, 395.8786, -2088.6682, 7.8359) ||
	IsPlayerInRangeOfPoint(playerid, 2.0, 391.2797, -2088.2422, 7.8359) || IsPlayerInRangeOfPoint(playerid, 2.0, 382.9716, -2088.3145, 7.8359) || IsPlayerInRangeOfPoint(playerid, 2.0, 374.9711, -2088.2556, 7.8359) ||
	IsPlayerInRangeOfPoint(playerid, 2.0, 370.1187, -2087.8450, 7.8359) || IsPlayerInRangeOfPoint(playerid, 2.0, 367.1006, -2088.1089, 7.8359) || IsPlayerInRangeOfPoint(playerid, 2.0, 362.5801, -2088.0632, 7.8359) ||
    IsPlayerInRangeOfPoint(playerid, 2.0, 354.4017, -2088.2805, 7.8359) || IsPlayerInRangeOfPoint(playerid, 2.0, 350.7945, -2073.1125, 7.8359) || IsPlayerInRangeOfPoint(playerid, 2.0, 350.6847, -2068.3892, 7.8359) ||
    IsPlayerInRangeOfPoint(playerid, 2.0, 350.5001, -2065.3093, 7.8359) || IsPlayerInRangeOfPoint(playerid, 2.0, 350.3165, -2059.4661, 7.8359) || IsPlayerInRangeOfPoint(playerid, 2.0, 350.3920, -2051.7908, 7.8359))
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "WARNING: It is not allowed to start fishing while being inside any vehicle.");
	    if(GetPVarInt(playerid, "FishTimer") == 1) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "You are already fishing, be patient.");
		if(PlayerInfo[playerid][pFish] < 6000)
		{
		    new msg[103];
			format(msg, sizeof(msg), "** %s uses the heaver of the fishing rod to slowly lower the bait into the water.", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, msg, COLOR_PINK, 12.0, 10000);
			SendClientMessage(playerid, COLOR_PINK, "** > uses the heaver of the fishing rod to slowly lower the bait into the water.");
			FreezePlayer(playerid);
			SetTimerEx("FishWaitTimer", 10000, false, "d", playerid);
			SetPVarInt(playerid, "FishTimer", 1);
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTGREEN, "You cannot carry more than 6000 grams of fish, you may unload your fish in your vehicle first.");
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "You are not around any fishing-rod at the Santa Maria Fishing Pier.");
	}
	return 1;
}

COMMAND:sellfish(playerid, params[])
{
	if(IsPlayerInDynamicCP(playerid, fishingcp))
	{
	    new grams;
	    if(sscanf(params, "i", grams)) return SendClientMessage(playerid, COLOR_GREY, "用法: /sellfish [grams]");
		if(grams > PlayerInfo[playerid][pFish]) return SendClientMessage(playerid, COLOR_GREY, "You do not have so many grams of fish on you.");
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "You cannot sell your fish while being inside a vehicle.");
	    if(grams > 99)
	    {
	    	new Float:num, Float:price, str[90], earnings;
	    	if(grams > 0 && grams <= 100) num = 2;
	    	else if(grams > 100 && grams <= 500) num = 3;
	    	else if(grams > 500 && grams <= 1500) num = 4;
	    	else if(grams > 1500 && grams <= 4000) num = 5;
	    	else if(grams > 4000) num = 6;
	    	price = (num/100)*grams;
	    	earnings = floatround(price, floatround_round);
	    	format(str, sizeof(str), "You have earned $%i by selling %i grams of fish for $0.0%.0f per gram.", earnings, grams, num);
	    	SendClientMessage(playerid, COLOR_LIGHTGREEN, str);
	    	PlayerInfo[playerid][pFish] = PlayerInfo[playerid][pFish] - grams;
	    	GivePlayerMoneyEx(playerid, earnings);
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "You do not have enough fish on you (At least 100 grams).");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "You are not around the fish factory where you may sell your fish.");
	}
	return 1;
}*/

COMMAND:mdc(playerid, params[])
{
    if(PlayerInfo[playerid][pFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "你不是LAPD成员.");
	if(GetPVarInt(playerid, "LAPDDuty") == 0) return SendClientMessage(playerid, COLOR_GREY, "你需要先上班.");
    if(IsPlayerInAnyVehicle(playerid) && VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] == 1)
	{
		ShowPlayerDialog(playerid, DIALOG_LAPD_MDC, DIALOG_STYLE_LIST, "MDC", "扫描名称\n扫描牌照\n扫描地址\n扫描罚单\n请求支援\n开关Dashcam\n扫描武器序列号\n查询案底\n搜索号码归属\n追踪嫌疑人", "选择", "取消");
	}
	else
	{
        new bool:xb_pass;
	    for(new m; m != sizeof(mdcs); m++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, mdcs[m][0], mdcs[m][1], mdcs[m][2]))
			{
                ShowPlayerDialog(playerid, DIALOG_LAPD_MDC, DIALOG_STYLE_LIST, "MDC", "扫描名称\n扫描牌照\n扫描地址\n扫描罚单\n请求支援\n开关Dashcam\n扫描武器序列号\n查询案底\n搜索号码归属\n追踪嫌疑人", "选择", "取消");
                xb_pass=true;
                break;
			}
		}
		if(!xb_pass)
		{
		    SendClientMessage(playerid, COLOR_GREY, "你需要在LAPD载具内使用或者在LAPD工作室内使用.");
		}
	}
	return 1;
}
COMMAND:tracer(playerid,params[])
{
 new user;
 if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /tracer [玩家ID]");
 if(PlayerInfo[playerid][pFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "你不是LAPD成员.");
 if(GetPVarInt(playerid, "LAPDDuty") == 0) return SendClientMessage(playerid, COLOR_GREY, "你需要先上班.");
 if(!IsPlayerInAnyVehicle(playerid) && VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "你需要在有MDC的载具上.");
 if(update[playerid][updating])
 {
  TextDrawHideForPlayer(playerid,updateTD[playerid]);
  update[playerid][updating] = false;
  KillTimer(update[playerid][timer]);
 }else{
  TextDrawShowForPlayer(playerid,updateTD[playerid]);
  update[playerid][updating] = true;
  update[playerid][timer] = SetTimerEx("UpdatePlayer",1000,1,"ii", playerid, user);
 }
 return 1;
}

/*COMMAND:clearmdc(playerid, params[])
{
    if(PlayerInfo[playerid][pFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "You have to be a police officer of Los Angeles.");
	if(gIsInMDC{playerid} == 1)
	{
		ExitMDC(playerid);
		gIsInMDC{playerid} = 0;
	}
	return 1;
}

COMMAND:mdc(playerid, params[])
{
    if(PlayerInfo[playerid][pFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "You have to be a police officer of Los Angeles in order to use the Mobile Data Computer.");
	if(GetPVarInt(playerid, "LAPDDuty") == 0) return SendClientMessage(playerid, COLOR_GREY, "You have to be on duty in order to use the Mobile Data Computer.");
	if(IsPlayerInAnyVehicle(playerid) && VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] == 1)
	{
		if(gIsInMDC{playerid} == 0)
		{
  			EnterMDC(playerid);
		  	gIsInMDC{playerid} = 1;
		}
	}
	else
	{
	    for(new m; m != sizeof(mdcs); m++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, mdcs[m][0], mdcs[m][1], mdcs[m][2]))
			{
                EnterMDC(playerid);
		  		gIsInMDC{playerid} = 1;
		  		SendClientMessage(playerid, COLOR_LIGHTRED, "You may use /clearmdc to close if your mouse has bugged out.");
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "In order to use the Mobile Data Computer you have to be either inside a Police Car or close to a computer of the LAPD.");
	}
	return 1;
}*/

/*COMMAND:checkrecords(playerid, params[])
{
    if(PlayerInfo[playerid][pFaction] == 1)
	{
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /checkrecords [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");

		if(IsPlayerInAnyVehicle(playerid) && VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] == 1)
		{
		    PlayerInfo[playerid][pSearchID] = user;
			ShowPlayerDialog(playerid, DIALOG_LAPD_MDC, DIALOG_STYLE_LIST, "{FF9900}LAPD", "View Citations\nView Warrants", "选择", "取消");
		}
		else
		{

			for(new m; m != sizeof(mdcs); m++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, mdcs[m][0], mdcs[m][1], mdcs[m][2]))
				{
				    PlayerInfo[playerid][pSearchID] = user;
	                ShowPlayerDialog(playerid, DIALOG_LAPD_MDC, DIALOG_STYLE_LIST, "{FF9900}LAPD", "View Citations\nView Warrants", "选择", "取消");
	                return 1;
				}
			}
			SendClientMessage(playerid, COLOR_GREY, "In order to use the Mobile Data Computer you have to be either inside a Police Car or close to a computer of the LAPD.");
		}
	}
	return 1;
}*/

/*COMMAND:mdc(playerid, params[])
{
    if(PlayerInfo[playerid][pFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "You have to be a police officer of Los Angeles in order to use the Mobile Data Computer.");
	if(GetPVarInt(playerid, "LAPDDuty") == 0) return SendClientMessage(playerid, COLOR_GREY, "You have to be on duty in order to use the Mobile Data Computer.");
	if(IsPlayerInAnyVehicle(playerid) && VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] == 1)
	{
		ShowPlayerDialog(playerid, DIALOG_LAPD_MDC, DIALOG_STYLE_LIST, "{FF9900}LAPD", "Search Name\nSearch Plate", "选择", "取消");
	}
	else
	{
		for(new m; m != sizeof(mdcs); m++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, mdcs[m][0], mdcs[m][1], mdcs[m][2]))
			{
                return ShowPlayerDialog(playerid, DIALOG_LAPD_MDC, DIALOG_STYLE_LIST, "{FF9900}LAPD", "Search Name\nSearch Plate", "选择", "取消");
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "In order to use the Mobile Data Computer you have to be either inside a Police Car or close to a computer of the LAPD.");
	}
	return 1;
}*/

CMD:amr(playerid, params[])
{
    if(PlayerInfo[playerid][pFaction] != 1) return SendClientMessage(playerid, COLOR_GREY, "你不是LAPD成员.");
	if(GetPVarInt(playerid, "LAPDDuty") == 0) return SendClientMessage(playerid, COLOR_GREY, "你需要先上班.");
	if(IsPlayerInAnyVehicle(playerid) && VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] == 1)
	{
		if(gAntiRadar{playerid} == 0)
		{
		    gAntiRadar{playerid} = 1;
		    gAntiRadarCheck[playerid] = SetTimerEx ("UpdateAntiRadar", ar_UpdateRate, true, "i", playerid);
		    TextDrawShowForPlayer(playerid, AntiRadar[0]);
		    TextDrawHideForPlayer(playerid, AntiRadar[1]);
		    SendClientMessage(playerid, COLOR_LIGHTGREEN, "车辆反移动雷达已经打开.");
	    }
	    else if(gAntiRadar{playerid} == 1)
	    {
	        gAntiRadarAuto{playerid} = 0;
	        gAntiRadar{playerid} = 0;
	        KillTimer(gAntiRadarCheck[playerid]);
	        TextDrawHideForPlayer(playerid, AntiRadar[0]);
		    TextDrawHideForPlayer(playerid, AntiRadar[1]);
		    SendClientMessage(playerid, COLOR_LIGHTGREEN, "车辆反移动雷达已经关闭.");
	    }
 	}
	return 0x1;
}

COMMAND:takelicense(playerid, params[])
{
	SendClientMessage(playerid, COLOR_LIGHTRED, "等待更新..");
/*	if(PlayerInfo[playerid][pFaction] != 1) SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	{

	SendClientMessage(playerid, COLOR_LIGHTRED, "SCRAP: 0. Remove | 1. Scrap |");
			new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /takelicense [玩家ID] [0 - driving/1weapon]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    if(PlayerInfo[user][pWeaponLic] == 1) return SendClientMessage(playerid, COLOR_GREY, "This player already has a weapon license.");
		new msgPlayerid[55], msg_user[55];
	    PlayerInfo[user][pWeaponLic] = 1;
	    format(msgPlayerid, sizeof(msgPlayerid), "You gave %s a weapon license.", GetNameWithSpace(user, 1));
	    format(msg_user, sizeof(msg_user), "You received a weapon license from %s.", GetNameWithSpace(playerid, 1));
	    SendClientMessage(playerid, COLOR_WHITE, msgPlayerid);
	    SendClientMessage(playerid, COLOR_WHITE, msg_user);
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}*/
	return 1;
}


COMMAND:givelicense(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 && PlayerInfo[playerid][pRank] >= 10)
	{
		new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /givelicense [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    if(PlayerInfo[user][pWeaponLic] == 1) return SendClientMessage(playerid, COLOR_GREY, "该玩家已经有了一本武器执照.");
		new msgPlayerid[55], msg_user[55];
	    PlayerInfo[user][pWeaponLic] = 1;
	    format(msgPlayerid, sizeof(msgPlayerid), "你给了 %s 一本持枪证.", GetNameWithSpace(user, 1));
	    format(msg_user, sizeof(msg_user), "你从 %s 那收到了一本持枪证.", GetNameWithSpace(playerid, 1));
	    SendClientMessage(playerid, COLOR_WHITE, msgPlayerid);
	    SendClientMessage(playerid, COLOR_WHITE, msg_user);
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;
}

/* Flashbang */
COMMAND:flashhouse(playerid, params[])
{
	new message[100];
    if(GetPVarInt(playerid, "LAPDDuty") == 0) return SendClientMessage(playerid, COLOR_GREY, "你需要先上班.");
    new houseid = IsPlayerAtHouse(playerid);
	if(!houseid) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房子旁边.");
	format(message, sizeof(message), "* %s 从门外丢进一颗闪光弹.", GetNameWithSpace(playerid, 1));
	ProxDetector(12, playerid, message, COLOR_PINK, 0);
	foreach(new i : Player)
	{
	    if(GetPlayerVirtualWorld(playerid) != houseid) continue;
     	TextDrawShowForPlayer(playerid, FlashBang);
	    SetTimerEx("FlashSmokehouse", 10000, false, "d", playerid);
		SendClientMessage(i, COLOR_PINK, "** 你会看到有人从门外丢进来了一颗闪光弹 **");
	}
	return 1;
}


COMMAND:smokehouse(playerid, params[])
{
    new message[100];
    if(GetPVarInt(playerid, "LAPDDuty") == 0) return SendClientMessage(playerid, COLOR_GREY, "你需要上班.");
    new houseid = IsPlayerAtHouse(playerid);
	if(!houseid) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房子旁边.");
	format(message, sizeof(message), "* %s 从门外丢进一颗烟雾弹.", GetNameWithSpace(playerid, 1));
	ProxDetector(12, playerid, message, COLOR_PINK, 0);
	foreach(new i : Player)
	{
	    if(GetPlayerVirtualWorld(playerid) != houseid) continue;
     	ApplyAnimation(i, "CRACK", "crckdeth2", 4.1, 1, 1, 1, 0, 10000, 1);
		SendClientMessage(i, COLOR_PINK, "** 你会看到有人从门外丢进来了一颗烟雾弹 **");
	}
	return 1;
}
/* Lottery System */
/*
COMMAND:lottery(playerid, params[])
{
	if(IsPlayerInDynamicCP(playerid, Lotterystand[1])) return SendClientMessage(playerid, COLOR_LIGHTRED, "You are not at the lottery stall.");
    new idx[10];
    if(sscanf(params, "s[10]", idx))
		return SendClientMessage(playerid, COLOR_LIGHTGREEN, "/lottery [info/myticket/buyticket/pickmoney]");
    new str[230];
	if(!strcmp(idx, "info", true, 4))
	{
	    if(!Lotteryavailable) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "Lotto man:{ffffff} I'm sorry but the lottery is not available at the moment. Feel free to come around 19:00.");
	    SendClientMessage(playerid, 0xCC9900FF, "Information:{ffffff} The Lottery is currently {80A05C}available{ffffff}.");
	    format(str, sizeof(str), "A ticket costs {CC9900}%d{80A05C}${ffffff}, the winning prize is {CC9900}%d{80A05C}${ffffff} and the highest ticket is {80A05C}%d{ffffff}.",o/10,o*100,o);
	    SendClientMessage(playerid, -1, str);
	}
	else if(!strcmp(idx, "myticket", true, 8))
	{
	    if(!Lotteryavailable) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "Lotto man:{ffffff} I'm sorry but the lottery is not available at the moment. Feel free to come around 19:00.");
	    if(PlayerInfo[playerid][pTicket] == 0) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "Lotto man:{ffffff} I'm sorry but you have to purchase a ticket first.");
	    format(str, sizeof(str), "Lotto man:{ffffff} Your lottery ticket is {CC9900}%d{ffffff}. This ticket may win and receive {CC9900}%d{80A05C}${ffffff}",PlayerInfo[playerid][pTicket], o*100);
	    SendClientMessage(playerid, COLOR_GREY, str);
	}
	else if(!strcmp(idx, "buyticket", true, 9))
	{
	    if(!Lotteryavailable) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "Lotto man:{ffffff} I'm sorry but the lottery is not available at the moment. Feel free to come around 19:00.");
	    if(PlayerInfo[playerid][pTicket] != 0) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "Lotto man:{ffffff} You have already purchased a lottery ticket.");
	    new tickid;
		if(sscanf(params, "s[10]i", idx, tickid))
		{
		    format(str, 34, "/lottery buyticket [Number 1-%d]", o);
			return SendClientMessage(playerid, COLOR_LIGHTGREEN, str);
		}
		if(o <= tickid <= 1)
		{
		    format(str, 34, "/lottery buyticket [Number 1-%d] - Choose a valid number.", o);
			return SendClientMessage(playerid, COLOR_LIGHTGREEN, str);
		}
		PlayerInfo[playerid][pTicket] = tickid;
		format(str, sizeof(str), "Lotto man:{ffffff} Congratulations, you have purchased the ticket {CC9900}%d{ffffff} for {CC9900}%d{80A05C}${ffffff}.",PlayerInfo[playerid][pTicket], o/10);
	    SendClientMessage(playerid, COLOR_GREY, str);
		GivePlayerMoneyEx(playerid, -o/10);
	}
	else if(!strcmp(idx, "pickmoney", true, 9))
 	{
		if(Lotteryavailable) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "Lotto man:{ffffff} The lottery is not over yet.");
		new strr[200];
		if(PlayerInfo[playerid][pTicket] != 0) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "Lotto man:{ffffff} You haven't purchased a lottery ticket.");
		if(PlayerInfo[playerid][pTicket] != Lotterynumbers[3]) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "Lotto man:{ffffff} You don't have a winning ticket.");
		strcat(strr, "{ffffff}Congratulations, you have successfully won the {CC9900}Lottery{ffffff},\n");
		format(str, 100, "you have won the lottery with your ticket ({CC9900}%d{ffffff}) and received {CC9900}%d{80A05C}${ffffff}!",PlayerInfo[playerid][pTicket],o*20000);
		strcat(strr, str);
		ShowPlayerDialog(playerid, DIALOG_LOTTERY2, DIALOG_STYLE_MSGBOX, "Lottery", strr, "Okay", "");
		GivePlayerMoneyEx(playerid, o*100);
		PlayerInfo[playerid][pTicket] = 0;
	}
	else
	{
		return SendClientMessage(playerid, COLOR_GREY, "This is not a valid parameter.");
	}
	return 1;
}
*/

COMMAND:setstats(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] > 4)
	{
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new idx[20], parameter, parameter2, parameter3;
		if(sscanf(params, "s[20]", idx))
		{
			SendClientMessage(playerid, COLOR_GREY, "用法: /setstats [Parameter]");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "可用: [{FFFFFF}money{88aa62}(现金)], [{FFFFFF}bank{88aa62}(存款)], [{FFFFFF}faction{88aa62}(组织)]");
            SendClientMessage(playerid, COLOR_LIGHTGREEN, "可用: [{FFFFFF}drivelic{88aa62}(驾照)], [{FFFFFF}weaponlic{88aa62}(持枪证)], [{FFFFFF}job{88aa62}(职业)], [{FFFFFF}age{88aa62}(年龄)]");
            SendClientMessage(playerid, COLOR_LIGHTGREEN, "可用: [{FFFFFF}gender{88aa62}(性别)], [{FFFFFF}playhours{88aa62}(时间分)], [{FFFFFF}donaterank{88aa62}(捐赠等级)]");
		}
		else
		{
		    if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "money", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats money [玩家ID] [数量]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "bank", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats bank [玩家ID] [数量]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "faction", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats faction [玩家ID] [组织ID]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "drivelic", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats drivelic [玩家ID] [1 = 给予, 0 = 移除]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "weaponlic", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats weaponlic [玩家ID] [1 = 给予, 0 = 移除]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "job", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats job [玩家ID] [工作ID]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "age", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats age [玩家ID] [年龄]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "gender", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats gender [玩家ID] [性别]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "playhours", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats playhours [玩家ID] [小时]");
			}
			else if(sscanf(params, "s[20]uii", idx, parameter, parameter2, parameter3) && strcmp(idx, "donaterank", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats donaterank [玩家ID] [捐赠级别] [月期]");
			}
			else if(strcmp(idx, "money", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				new msg[115];
				PlayerInfo[parameter][pMoney] = parameter2;
				ResetPlayerMoneyEx(parameter);
				format(msg, sizeof(msg), "*** %s %s has set %s's money to $%i.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter), parameter2);
				AdminMessageLog(msg, playerid, "Setstats MONEY");
			}
			else if(strcmp(idx, "bank", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				new msg[125];
				PlayerInfo[parameter][pBank] = parameter2;
				format(msg, sizeof(msg), "*** %s %s has set %s's bank balance to $%i.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter), parameter2);
				AdminMessageLog(msg, playerid, "Setstats BANK");
			}
			else if(strcmp(idx, "faction", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				new msg[150], query[100];
				PlayerInfo[parameter][pFaction] = parameter2;
				PlayerInfo[parameter][pRank] = 1;
				mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `faction` = %i, `rank` = 1 WHERE `user` = '%e'", parameter2, PlayerInfo[parameter][pName]);
				mysql_function_query(sqlHandle, query, false, "", "");
				format(msg, sizeof(msg), "*** %s %s has set %s's factionID to %i (Players Rank: 1).", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter), parameter2);
				AdminMessageLog(msg, playerid, "Setstats FACTION");
			}
			else if(strcmp(idx, "drivelic", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				if(parameter2 != 0 && parameter2 != 1) return SendClientMessage(playerid, COLOR_GREY, "用法: /setstats drivelic [玩家ID] [1 = Give, 0 = Remove]");
				new msg[150], msgPlayer[100];
				if(parameter2 == 1) format(msgPlayer, sizeof(msgPlayer), "*** %s %s 给了你驾照.", GetAdminRank(playerid), GetNameWithSpace(playerid));
				else if(parameter2 == 0) format(msgPlayer, sizeof(msgPlayer), "*** %s %s 将你的驾照移除.", GetAdminRank(playerid), GetNameWithSpace(playerid));
				SendClientMessage(parameter, COLOR_GREY, msgPlayer);
				PlayerInfo[parameter][pDriveLic] = parameter2;
				if(parameter2 == 1) format(msg, sizeof(msg), "*** %s %s gave %s a driver's license.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter));
				else if(parameter2 == 0) format(msg, sizeof(msg), "*** %s %s removed %s's driver's license.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter));
				AdminMessageLog(msg, playerid, "Setstats DRIVERS LICENSE");
			}
			else if(strcmp(idx, "weaponlic", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				if(parameter2 != 0 && parameter2 != 1) return SendClientMessage(playerid, COLOR_GREY, "用法: /setstats weaponlic [玩家ID] [1 = Give, 0 = Remove]");
				new msg[150], msgPlayer[100];
				if(parameter2 == 1) format(msgPlayer, sizeof(msgPlayer), "*** %s %s 给了你持枪证.", GetAdminRank(playerid), GetNameWithSpace(playerid));
				else if(parameter2 == 0) format(msgPlayer, sizeof(msgPlayer), "*** %s %s 将你的持枪证移除.", GetAdminRank(playerid), GetNameWithSpace(playerid));
				SendClientMessage(parameter, COLOR_GREY, msgPlayer);
				PlayerInfo[parameter][pWeaponLic] = parameter2;
				if(parameter2 == 1) format(msg, sizeof(msg), "*** %s %s gave %s a weapon license.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter));
				else if(parameter2 == 0) format(msg, sizeof(msg), "*** %s %s removed %s's weapon license.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter));
				AdminMessageLog(msg, playerid, "Setstats WEAPON LICENSE");
			}
			else if(strcmp(idx, "job", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				new msg[150];
				PlayerInfo[parameter][pJob] = parameter2;
				format(msg, sizeof(msg), "*** %s %s set %s's JobID to %i.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter), parameter2);
				AdminMessageLog(msg, playerid, "Setstats JOB");
			}
			else if(strcmp(idx, "age", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				new msg[150];
				PlayerInfo[parameter][pAge] = parameter2;
				format(msg, sizeof(msg), "*** %s %s set %s's age to %i.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter), parameter2);
				AdminMessageLog(msg, playerid, "Setstats AGE");
			}
			else if(strcmp(idx, "gender", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				new msg[150];
				if(parameter2 != 1 && parameter2 != 2) return SendClientMessage(playerid, COLOR_GREY, "字符串: [1] 男性, [2] 女性.");
				if(parameter2 == 1) {
					PlayerInfo[parameter][pGender] = 1;
					format(msg, sizeof(msg), "*** %s %s set %s's gender to 'Male'.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter));
				} else {
					PlayerInfo[parameter][pGender] = 2;
					format(msg, sizeof(msg), "*** %s %s set %s's gender to 'Female'.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter));
				}

				AdminMessageLog(msg, playerid, "Setstats GENDER");
			}
			else if(strcmp(idx, "playhours", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				new msg[150];
				PlayerInfo[parameter][pScore] = parameter2;
				SetPlayerLevel(parameter);
				format(msg, sizeof(msg), "*** %s %s set %s's playing hours to %i.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter), parameter2);
				AdminMessageLog(msg, playerid, "Setstats PLAYED HOURS");
			}
			else if(strcmp(idx, "donaterank", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
                if(parameter3 < 0 || parameter3 > 3) return SendClientMessage(playerid, COLOR_GREY, "只能给予1-3月期的捐赠级别.");
				new msg[150];
				PlayerInfo[parameter][pDonateRank] = parameter2;

    			new drank[56];
			    switch(PlayerInfo[parameter][pDonateRank])
				{
					case 0: drank = "无";
					case 1: drank = "铜级捐赠";
					case 2: drank = "银级捐赠";
					case 3: drank = "金级捐赠";
				}

				new Year, Month, Day, Message[128];
				getdate(Year, Month, Day);

				if(Month == 11)
				{
					if(PlayerInfo[parameter][pDonateRank] != 0)
					{
					    PlayerInfo[parameter][pDonateYear] = Year+1;
						PlayerInfo[parameter][pDonateMonth] = Month+parameter3;
						PlayerInfo[parameter][pDonateDay] = Day;

         				if(PlayerInfo[parameter][pDonateRank] == 1)
         				{
         				    PlayerInfo[parameter][pNamechanges] += 1;
					    	SendClientMessage(parameter, COLOR_YELLOW, "[!] 恭喜您, 你现在的社区级别是: 铜级捐赠用户. (你额外获得1张更名卡)");
						}
						if(PlayerInfo[parameter][pDonateRank] == 2)
         				{
         				    PlayerInfo[parameter][pNamechanges] += 2;
					    	SendClientMessage(parameter, COLOR_YELLOW, "[!] 恭喜您, 你现在的社区级别是: 银级捐赠用户. (你额外获得2张更名卡)");
						}
						if(PlayerInfo[parameter][pDonateRank] == 3)
         				{
         				    PlayerInfo[parameter][pNamechanges] += 3;
					    	SendClientMessage(parameter, COLOR_YELLOW, "[!] 恭喜您, 你现在的社区级别是: 金级捐赠用户. (你额外获得3张更名卡).");
						}
	                    format(Message, sizeof(Message), "您的捐赠级别将在 %d年%d月%d号 到期.", PlayerInfo[parameter][pDonateYear], PlayerInfo[parameter][pDonateMonth], PlayerInfo[parameter][pDonateDay]);
		            	SendClientMessage(parameter, COLOR_YELLOW, Message);
					}
				}
				else
				{
					if(PlayerInfo[parameter][pDonateRank] != 0)
					{
					    PlayerInfo[parameter][pDonateYear] = Year;
						PlayerInfo[parameter][pDonateMonth] = Month+parameter3;
						PlayerInfo[parameter][pDonateDay] = Day;
						
         				if(PlayerInfo[parameter][pDonateRank] == 1)
         				{
         				    PlayerInfo[parameter][pNamechanges] += 1;
					    	SendClientMessage(parameter, COLOR_YELLOW, "[!] 恭喜您, 你现在的社区级别是: 铜级捐赠用户. (你额外获得1张更名卡)");
						}
						if(PlayerInfo[parameter][pDonateRank] == 2)
         				{
         				    PlayerInfo[parameter][pNamechanges] += 2;
					    	SendClientMessage(parameter, COLOR_YELLOW, "[!] 恭喜您, 你现在的社区级别是: 银级捐赠用户. (你额外获得2张更名卡)");
						}
						if(PlayerInfo[parameter][pDonateRank] == 3)
         				{
         				    PlayerInfo[parameter][pNamechanges] += 3;
					    	SendClientMessage(parameter, COLOR_YELLOW, "[!] 恭喜您, 你现在的社区级别是: 金级捐赠用户. (你额外获得3张更名卡).");
						}
	                    format(Message, sizeof(Message), "您的捐赠级别将在 %d年%d月%d号 到期.", PlayerInfo[parameter][pDonateYear], PlayerInfo[parameter][pDonateMonth], PlayerInfo[parameter][pDonateDay]);
		            	SendClientMessage(parameter, COLOR_YELLOW, Message);
					}
				}
				format(msg, sizeof(msg), "*** %s %s set %s's donation rank to %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter), drank);
				AdminMessageLog(msg, playerid, "Setstats DONATE RANK");
			}
			else
			{
			    return SendClientMessage(playerid, COLOR_GREY, "无效内容.");
			}
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;//
}

COMMAND:unban(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 1) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new user[MAX_PLAYER_NAME], query[90];
	    if(sscanf(params, "s[24]", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /unban [游戏名称]");
	    if(!IsValidPlayerName(user)) return SendClientMessage(playerid, COLOR_GREY, "你需要按照Firstname_Lastname的格式进行操作.");
	    mysql_format(sqlHandle, query, sizeof(query), "SELECT `ip` FROM `samp_users` WHERE `user` = '%e'", user);
	    mysql_function_query(sqlHandle, query, true, "OnGetIPUnban", "is", playerid, user);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;
}

COMMAND:unbanip(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 1) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new ip[16], rcon[30], msg[90];
	    if(sscanf(params, "s[16]", ip)) return SendClientMessage(playerid, COLOR_GREY, "用法: /unbanip [ip]");
	    format(rcon, sizeof(rcon), "unbanip %s", ip);
	    SendRconCommand(rcon);
	    SendRconCommand("reloadbans");
	    format(msg, sizeof(msg), "*** %s %s unbanned IP %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), ip);
	    AdminMessageLog(msg, playerid, "Unban IP");
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:banacc(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 3) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	   	new username[MAX_PLAYER_NAME], reason[100], query[90];
	    if(sscanf(params, "s[24]s[100]", username, reason)) return SendClientMessage(playerid, COLOR_GREY, "用法: /banacc [游戏名称] [原因]");
	    if(!IsValidPlayerName(username)) return SendClientMessage(playerid, COLOR_GREY, "你需要按照Firstname_Lastname的格式进行操作.");
	    if(GetPlayerID(username) != -1) return SendClientMessage(playerid, COLOR_GREY, "该玩家已经在游戏中了, 请使用/ban.");
	    mysql_format(sqlHandle, query, sizeof(query), "SELECT `ip` FROM `samp_users` WHERE `user` = '%e'", username);
	    mysql_function_query(sqlHandle, query, true, "OnAdminBanAcc", "iss", playerid, username, reason);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	
	return 1;
}

COMMAND:banip(playerid, params[]) {
    if(PlayerInfo[playerid][pAdminlevel] > 3) {
	    new ip[16], rcon[30], msgAdm[80], username[14], query[200];
	    if(sscanf(params, "s[16]", ip)) return SendClientMessage(playerid, COLOR_GREY, "用法: /banip [ip]");
	    format(rcon, sizeof(rcon), "banip %s", ip);
		SendRconCommand(rcon);
		format(msgAdm, sizeof(msgAdm), "*** %s %s banned IP %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), ip);
		SendMessageToAdmins(msgAdm);
	    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_bans` (`user`, `reason`, `admin`, `date`, `ip`) VALUES ('%e', '%e', '%e', NOW(), '%e')", username, "Offline Ban - None", "Noone - IP Ban", ip);
	    mysql_function_query(sqlHandle, query, false, "", "");
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	
	return 1;
}

COMMAND:buybusiness(playerid, params[]) {
    for(new i = 0; i != MAX_BUSINESSES; i++) {
		if(IsValidDynamicCP(businessCP[i]) && IsPlayerInDynamicCP(playerid, businessCP[i])) {
    		if(strfind(BusinessInfo[i][bOwner], "_") == -1) {
    		    if(PlayerInfo[playerid][pMoney] >= BusinessInfo[i][bPrice]) {
					for(new h = 0; h != MAX_BUSINESSES; h++) {
						if(strcmp(BusinessInfo[h][bOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(BusinessInfo[h][bOwner])) {
						    return SendClientMessage(playerid, COLOR_GREY, "你已经购买了一个产业.");
						}
					}

                    new query[100];
					GivePlayerMoneyEx(playerid, -BusinessInfo[i][bPrice]);
					format(BusinessInfo[i][bOwner], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][pName]);
					mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_businesses` SET `owner` = '%e', `money` = 0 WHERE `id` = %i", PlayerInfo[playerid][pName], BusinessInfo[i][bID]);
					mysql_function_query(sqlHandle, query, false, "", "");
					BusinessInfo[i][bMoney] = 0;
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "恭喜你, 购买了一个产业.");
					SetMapIcons(playerid);
					SaveData(playerid);
					format(query, sizeof(query), "%s bought businessID %i for $%i.", PlayerInfo[playerid][pName], BusinessInfo[i][bID], BusinessInfo[i][bPrice]);
					Log(playerid, "BUYBUSINESS", query);
				} else {
					return SendClientMessage(playerid, COLOR_GREY, "你没有足够的钱.");
				}
    		} else {
    		    return SendClientMessage(playerid, COLOR_GREY, "该产业已经有主了.");
			}
		}
	}

	return 1;
}


COMMAND:sellbusiness(playerid, params[]) {
    for(new i = 0; i != MAX_BUSINESSES; i++) {
		if(BusinessInfo[i][bID] != 0 && IsPlayerInRangeOfPoint(playerid, 4, BusinessInfo[i][bX], BusinessInfo[i][bY], BusinessInfo[i][bZ])) {
    		if(strcmp(BusinessInfo[i][bOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(BusinessInfo[i][bOwner])) {
    		    if(BusinessInfo[i][bFaction] == 0) {
	    		    GivePlayerMoneyEx(playerid, (BusinessInfo[i][bPrice] / 100) * GM_BUSINESS_SELL_PERCENTAGE);
	    		    format(BusinessInfo[i][bOwner], MAX_PLAYER_NAME, "%s", EOS);
	    		    new query[95];
	    		    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_businesses` SET `owner` = NULL WHERE `owner` = '%e'", PlayerInfo[playerid][pName]);
	    		    mysql_function_query(sqlHandle, query, false, "", "");
	    		    format(query, sizeof(query), "你成功将产业出售 - 你收到了百分之 %i 的售价回款.", GM_BUSINESS_SELL_PERCENTAGE);
	    		    SendClientMessage(playerid, COLOR_LIGHTGREEN, query);
	    		    SetMapIcons(playerid);
	    		    SaveData(playerid);
	    		    format(query, sizeof(query), "%s sold businessID %i and received $%i.", PlayerInfo[playerid][pName], BusinessInfo[i][bID], (BusinessInfo[i][bPrice] / 100) * GM_BUSINESS_SELL_PERCENTAGE);
					Log(playerid, "SELLBUSINESS", query);
				} else {
					SendClientMessage(playerid, COLOR_GREY, "该组织已经隶属于一个组织, 请联系管理员.");
				}
      		} else {
    		    return SendClientMessage(playerid, COLOR_GREY, "你没有任何产业.");
			}
		}
	}

	return 1;
}
// ==== [Tent System] ====
COMMAND:tent(playerid, params[])
{
    new idx[10];
    if(sscanf(params, "s[10]", idx)) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "/tent {ffffff}[disassemble(收起)/establish(放置)]");
 	if(!strcmp(idx, "disassemble", true, 9))
	{
		if(PlayerInfo[playerid][pTentID] == -1) return SendClientMessage(playerid, COLOR_LIGHTRED, "你没有帐篷.");
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 1, 1, 1, 0, 100000, 1);
		SetPVarInt(playerid, "Muted", 1);
		PlayerInfo[playerid][pTentTimer] = SetTimerEx("Tent_ProcedureTimer",1000,0,"di",playerid, 1);
		PlayerInfo[playerid][pTentTimerVar] = 0;
		PlayerInfo[playerid][pTentProcess] = 1;
		return SendClientMessage(playerid, 0x0473ADFF, "[信息]{ffffff} 该帐篷还没有放置, 请输入 /tent establish 放置在周围.");
	}
	if(!strcmp(idx, "establish", true, 9))
	{
		new
			TentID = -1,
			hashammer = 0;
	    for(new i = 0; i <= 10; i++)
	    {
	    	if(getPlayerItemID(playerid, 25)) hashammer++;
		}
		if(hashammer <= 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要一个锤子才能使用.");
		for(new i = 0; i < MAX_TENTS; i++)
		{
		    if(IsPlayerInRangeOfPoint(playerid, 3, TentInfo[i][tPos][0], TentInfo[i][tPos][1], TentInfo[i][tPos][2]))
		    {
		        TentID = i;
		        break;
		    }
		}
		if(TentID == -1) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要靠近你的帐篷.");
		SetPVarInt(playerid, "Muted", 1);
        PlayerInfo[playerid][pTentTimer] = SetTimerEx("Tent_ProcedureTimer",1000,0,"di",playerid, 2);
		PlayerInfo[playerid][pTentTimerVar] = 0;
		PlayerInfo[playerid][pTentProcess] = 2;
		ApplyAnimation(playerid, "Flowers", "Flower_attack_M", 4.1, 1, 1, 1, 0, 100000, 1);
		return PlayerInfo[playerid][pTentID] = TentID;
	}
	else SendClientMessage(playerid, COLOR_LIGHTRED, "无效选项.");
	return 1;
}

COMMAND:mask(playerid, params[])
{
	new msg[128], message[128];
	if(PlayerInfo[playerid][pDonateRank] != 0 || PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pMask] == 1)
	{
	    if(PlayerInfo[playerid][pScore] >= 25 || PlayerInfo[playerid][pDonateRank] == 3)
	    {
			if(PlayerInfo[playerid][pMasked] == 0)
			{
				foreach(new i : Player)
				{
					ShowPlayerNameTagForPlayer(i, playerid, 0);
				}
				if(PlayerInfo[playerid][pMaskID] == 0)
				{
				    new randmask = 20000 + random(12741);
				    PlayerInfo[playerid][pMaskID] = randmask;
				}
				mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `maskID` = %i WHERE `user` = '%e'", PlayerInfo[playerid][pMaskID], PlayerInfo[playerid][pName]);
				mysql_function_query(sqlHandle, msg, false, "", "");
				PlayerInfo[playerid][pMasked] = 1;
		        format(message, sizeof(message), "* %s 将面具戴上.", GetNameWithSpace(playerid, 1));
		    	ProxDetector(12, playerid, message, COLOR_PINK, 0);
			}
			else
			{
			    foreach(new i : Player)
				{
					ShowPlayerNameTagForPlayer(i, playerid, 1);
				}
			    PlayerInfo[playerid][pMasked] = 0;
		        format(message, sizeof(message), "* %s 将面具摘下.", GetNameWithSpace(playerid, 1));
		    	ProxDetector(12, playerid, message, COLOR_PINK, 0);
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要高于5级才能使用.");
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "你没有面具.");
	}
	return 1;
}


COMMAND:mypos(playerid, params[])
{
	new Float:pe[3], str[50];
	GetPlayerPos(playerid, pe[0], pe[1], pe[2]);
	format(str, 50, "%f %f %f", pe[0], pe[1], pe[2]);
	return SendClientMessage(playerid, -1, str);
}
COMMAND:house(playerid, params[])
{
	//if(IsPlayerInDynamicCP(playerid, Lotterystand[1])) return SendClientMessage(playerid, COLOR_LIGHTRED, "You are not at the lottery stall.");
    new idx[10];
    if(sscanf(params, "s[10]", idx))
	{
 		SendClientMessage(playerid, COLOR_LIGHTGREEN, "[房屋] /house {ffffff}[buy(购买)/sell(出售)/options(选项)/wardrobe(衣柜)peephole(猫眼)]");
 		SendClientMessage(playerid, COLOR_LIGHTGREEN, "[房屋] /house {ffffff}[rent(租用)/unrent(退租)/shout(呼喊)/knock(敲门)/lock(锁门)]]");
		return 1;
 	}
	if(!strcmp(idx, "options", true, 7))
	{
        if(strcmp(HouseInfo[GetPlayerVirtualWorld(playerid)][hOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(HouseInfo[GetPlayerVirtualWorld(playerid)][hOwner]) && GetPVarInt(playerid, "InHouse") == 1)
		{
			ShowPlayerDialog(playerid, DIALOG_HOUSE, DIALOG_STYLE_LIST, "{FF9900}房屋", "存钱\n取钱\n租赁操作\n房屋电台\n储存箱\n浏览储存箱\n警报系统", "选择", "取消");
		}
		else SendClientMessage(playerid, COLOR_GREY, "你不在你的房屋内.");

	}
	else if(!strcmp(idx, "wardrobe", true, 8))
	{
		if(GetPVarInt(playerid, "InHouse") == 1 && ((strcmp(HouseInfo[GetPlayerVirtualWorld(playerid)][hOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(HouseInfo[GetPlayerVirtualWorld(playerid)][hOwner])) || GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pRentHouse]))
		{
			for(new i = 0; i != 300; i++)
			{
				if(skinData[playerid][i] != 0)
				{
				    SendClientMessage(playerid, COLOR_WHITE, "点击 {777777}Next/Back{FFFFFF}进行操作, 如果你的指针消失了, 请按下 {777777}Enter{FFFFFF} 激活");
				    SetPVarInt(playerid, "WardrobeSkin", i);
				    SetPlayerPosEx(playerid, 10, 257.3970, -41.7243, 1002.0234, 55.9358, 14);
					return 1;
				}
		}
		SendClientMessage(playerid, COLOR_WHITE, "你的衣柜空空如也!");
		}
		else SendClientMessage(playerid, COLOR_WHITE, "你需要在你自己的房子/租房内.");
	}
    else if(!strcmp(idx, "rent", true, 4))
	{
     	for(new i = 0; i != MAX_HOUSES; i++)
		{
			if(HouseInfo[i][hID] != 0 && IsPlayerInDynamicCP(playerid, houseCP[i]))
			{
			    if(strcmp(HouseInfo[i][hOwner], PlayerInfo[playerid][pName]) != 0 && !isnull(HouseInfo[i][hOwner]))
				{
			        if(HouseInfo[i][hRentalFee] != 0)
					{
			            if(PlayerInfo[playerid][pRentHouse] == 0)
						{
			                if(PlayerInfo[playerid][pMoney] >= HouseInfo[i][hRentalFee])
							{
			                    new msg[90];
			                	PlayerInfo[playerid][pRentHouse] = i;
			                	GivePlayerMoneyEx(playerid, -HouseInfo[i][hRentalFee]);
			                	HouseInfo[i][hMoney] += HouseInfo[i][hRentalFee];
								mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `renthouse` = %i WHERE `user` = '%e'", i, PlayerInfo[playerid][pName]);
								mysql_function_query(sqlHandle, msg, false, "", "");
								mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_houses` SET `money` = %i WHERE `id` = %i", i, HouseInfo[i][hMoney]);
								mysql_function_query(sqlHandle, msg, false, "", "");
								format(msg, sizeof(msg), "** %s 签订租赁协议并支付租金.", GetNameWithSpace(playerid, 1));
								ProxDetector(12, playerid, msg, COLOR_PINK);
								SetMapIcons(playerid);
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "你没有足够的钱支付首付租金.");
							}
			            }
						else
						{
			                SendClientMessage(playerid, COLOR_GREY, "你已经租用了其他房屋");
			            }
			        }
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "该房无法租售.");
					}
			    }
				else if(!isnull(HouseInfo[i][hOwner])) SendClientMessage(playerid, COLOR_GREY, "你不能租用你自己的房屋.");
			    else SendClientMessage(playerid, COLOR_GREY, "此房隶属于政府, 无法租用.");
			}
		}
	}
	else if(!strcmp(idx, "unrent", true, 6))
	{
		if(PlayerInfo[playerid][pRentHouse] == 0) return SendClientMessage(playerid, COLOR_GREY, "你没有租用任何房屋.");
		for(new i = 0; i != MAX_HOUSES; i++)
		{
			if(HouseInfo[i][hID] != 0 && IsPlayerInDynamicCP(playerid, houseCP[i]))
			{
			    if(PlayerInfo[playerid][pRentHouse] == i)
				{
					new query[90];
			        PlayerInfo[playerid][pRentHouse] = 0;
					mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `renthouse` = 0 WHERE `user` = '%e'", PlayerInfo[playerid][pName]);
					mysql_function_query(sqlHandle, query, false, "", "");
					SendClientMessage(playerid, COLOR_WHITE, "你退租了此房.");
					SetMapIcons(playerid);
			    }
				else SendClientMessage(playerid, COLOR_GREY, "你还没有租用该房.");
			}
		}
	}
	else if(!strcmp(idx, "knock", true, 5))
	{
	    new message[128];
	    if(IsPlayerAtHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "你还没有靠近任何房屋.");
        format(message, sizeof(message), "* %s 敲了敲门.", GetNameWithSpace(playerid, 1));
		ProxDetector(12, playerid, message, COLOR_PINK, 0);
	   	foreach(new i : Player)
		{
	 		if(PlayerInfo[i][pInHouseID] == IsPlayerAtHouse(playerid))
	 		{
	 		    SendClientMessage(i, COLOR_PINK, "(( 有人正在敲门! ))");
	 		}
	 	}
	}
	else if(!strcmp(idx, "shout", true, 5))
	{
	    if(IsPlayerAtHouse(playerid) == 0) return SendClientMessage(playerid, COLOR_GREY, "你还没有靠近任何房屋.");
	    new message[128];
	    if(sscanf(params, "s[5]s[128]", idx, message)) return SendClientMessage(playerid, COLOR_GREY, "用法: /house shout [message]");
		new len = strlen(message);
		if(len + MAX_PLAYER_NAME + 39 > 128)
		{
		    new buffer[128];
		    strmid(buffer, message, 0, 128 - MAX_PLAYER_NAME - 39 - 4);
		    format(buffer, sizeof(buffer), "%s 大喊: %s ...", GetNameWithSpace(playerid, 1), buffer);
		    strdel(message, 0, 128 - MAX_PLAYER_NAME - 39 - 4);
			format(message, sizeof(message), "%s 大喊: ... %s", GetNameWithSpace(playerid, 1), message);
	   		ProxDetectorSplittedEx(20, playerid, buffer, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 1, 0, 1);
		}
		else
		{
        	format(message, sizeof(message), "%s 大喊: %s", GetNameWithSpace(playerid, 1), message);
			ProxDetectorEx(20, playerid, message, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5, 1, 0, 1);
		}
	   	foreach(new i : Player)
		{
	 		if(PlayerInfo[i][pInHouseID] == IsPlayerAtHouse(playerid))
	 		{
	            SendClientMessage(i, COLOR_FADE2, message);
	 		}
	 	}
	}
	else if(!strcmp(idx, "sell", true, 4))
	{
    	for(new i = 0; i != MAX_HOUSES; i++)
		{
			if(HouseInfo[i][hID] != 0 && IsPlayerInDynamicCP(playerid, houseCP[i]))
			{
	    		if(strcmp(HouseInfo[i][hOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(HouseInfo[i][hOwner]))
				{
	    		    GivePlayerMoneyEx(playerid, (HouseInfo[i][hPrice] / 100) * GM_HOUSE_SELL_PERCENTAGE);
	    		    format(HouseInfo[i][hOwner], MAX_PLAYER_NAME, "%s", " ");
	    		    HouseInfo[i][hRentalFee] = 0;
	    		    new query[95];
	    		    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `owner` = ' ', `rentalfee` = 0 WHERE `id` = %i", HouseInfo[i][hID]);
	    		    mysql_function_query(sqlHandle, query, false, "", "");
	    		    format(query, sizeof(query), "你成功将你的房产出售 - 你收到了原价百分之 %i 的售价.", GM_HOUSE_SELL_PERCENTAGE);
	    		    SendClientMessage(playerid, COLOR_LIGHTGREEN, query);
	    		    SetMapIcons(playerid);
	    		    SaveData(playerid);
	    		    format(query, sizeof(query), "%s sold houseID %i and received $%i.", PlayerInfo[playerid][pName], HouseInfo[i][hID], (HouseInfo[i][hPrice] / 100) * GM_HOUSE_SELL_PERCENTAGE);
					Log(playerid, "SELLHOUSE", query);
	      		}
			  	else return SendClientMessage(playerid, COLOR_GREY, "这不是你的房子.");
			}
		}
	}
	else if(!strcmp(idx, "buy", true, 3))
	{
	    for(new i = 0; i != MAX_HOUSES; i++)
		{
			if(HouseInfo[i][hID] != 0 && IsPlayerInDynamicCP(playerid, houseCP[i]))
			{
	    		if(strfind(HouseInfo[i][hOwner], "_") == -1)
				{
	    		    if(PlayerInfo[playerid][pMoney] >= HouseInfo[i][hPrice])
					{
						for(new h = 0; h != MAX_HOUSES; h++)
						{
							if(strcmp(HouseInfo[h][hOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(HouseInfo[h][hOwner]))
							{
							    return SendClientMessage(playerid, COLOR_GREY, "你已经购买了一个房子.");
							}
						}

						new query[100];
						GivePlayerMoneyEx(playerid, -HouseInfo[i][hPrice]);
						format(HouseInfo[i][hOwner], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][pName]);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `owner` = '%e' WHERE `id` = %i", PlayerInfo[playerid][pName], HouseInfo[i][hID]);
						mysql_function_query(sqlHandle, query, false, "", "");
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "恭喜你, 成功购买了该房屋.");
						SetMapIcons(playerid);
						SaveData(playerid);
						format(query, sizeof(query), "%s bought houseID %i for $%i.", PlayerInfo[playerid][pName], HouseInfo[i][hID], HouseInfo[i][hPrice]);
						Log(playerid, "BUYHOUSE", query);
					}
					else
					{
						return SendClientMessage(playerid, COLOR_GREY, "你没有钱购买该房屋.");
					}
	    		}
				else
				{
	    		    return SendClientMessage(playerid, COLOR_GREY, "该房已经被其他人购买了.");
				}
			}
		}
	}
	else if(!strcmp(idx, "lock", true, 4))
	{
		new lockID = -1,
	    vw = GetPlayerVirtualWorld(playerid);
	    new 
			Float:distance,
			lockType;
		if(GetPVarInt(playerid, "InHouse") != 0 && ((strcmp(HouseInfo[vw][hOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(HouseInfo[vw][hOwner])) || PlayerInfo[playerid][pRentHouse] == vw) &&
		   IsPlayerInRangeOfPoint(playerid, 4, houseData[HouseInfo[vw][hInt]][intX], houseData[HouseInfo[vw][hInt]][intY], houseData[HouseInfo[vw][hInt]][intZ]) &&
		   (lockID == -1 || GetPlayerDistanceFromPoint(playerid, houseData[HouseInfo[vw][hInt]][intX], houseData[HouseInfo[vw][hInt]][intY], houseData[HouseInfo[vw][hInt]][intZ]) < distance)) {
	   	    lockID = vw;
	   	    lockType = 2;
	   	    distance = GetPlayerDistanceFromPoint(playerid, houseData[HouseInfo[vw][hInt]][intX], houseData[HouseInfo[vw][hInt]][intY], houseData[HouseInfo[vw][hInt]][intZ]);
	 	}
	 	else
	 	{
		    for(new h = 0; h != MAX_HOUSES; h++)
			{
				if(HouseInfo[h][hID] != 0 && IsPlayerInDynamicCP(playerid, houseCP[h]) && ((strcmp(HouseInfo[h][hOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(HouseInfo[h][hOwner])) || PlayerInfo[playerid][pRentHouse] == h))
				{
                    lockID = h;
    				lockType = 2;
    				break;
				}
			}
		}
		if(lockID != -1 && lockType == 2)
		{
			 switch(HouseInfo[lockID][hLocked])
			{
			    case 0:
				{
				    HouseInfo[lockID][hLocked] = 1;
				    GameTextForPlayer(playerid, "~r~Locked", 750, 4);
				}
				case 1:
				{
				    HouseInfo[lockID][hLocked] = 0;
				    GameTextForPlayer(playerid, "~g~Unlocked", 750, 4);
				}
			}
		}
	}
	else if(!strcmp(idx, "info", true, 4))
	{
	    if(!IsPlayerAtHouse(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房屋旁边.");
	    new
			hid = IsPlayerAtHouse(playerid),
   			sinfo[100];
        SendClientMessage(playerid, -1, "__________________{0473AD}房产信息{FFFFFF}__________________");
	    format(sinfo, 100, "[地址]{FFFFFF} %i %s, Los Angeles, SA %i", HouseInfo[hid][hHousenumber], HouseInfo[hid][hStreet], HouseInfo[hid][hZip]);
		SendClientMessage(playerid, 0x0473ADFF, sinfo);
		format(sinfo, 100, "[户主]{FFFFFF} %s, {ffffff}%d{80A05C}${ffffff}", HouseInfo[hid][hOwner], HouseInfo[hid][hPrice]);
		SendClientMessage(playerid, 0x0473ADFF, sinfo);
		if(!HouseInfo[hid][hRentalFee]) format(sinfo, 100, "[租赁]{FFFFFF} 此房子不出租.");
		else format(sinfo, 100, "[租赁]{FFFFFF} 此房租金为 {ffffff}%d{80A05C}${ffffff}.",HouseInfo[hid][hRentalFee]);
		SendClientMessage(playerid, 0x0473ADFF, sinfo);
		format(sinfo, 100, "[门锁]{FFFFFF} 此房房门是%s{ffffff}.", !HouseInfo[hid][hLocked]? ("{80A05C}开的") : ("{FF6347}锁着的"));
		SendClientMessage(playerid, 0x0473ADFF, sinfo);
	}
	else if(!strcmp(idx, "renters", true, 7))
	{
	    if(!IsPlayerAtHouse(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房屋旁边.");
        if(GetPVarInt(playerid, "InHouse") == 1 && ((strcmp(HouseInfo[GetPlayerVirtualWorld(playerid)][hOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(HouseInfo[GetPlayerVirtualWorld(playerid)][hOwner])) || GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pRentHouse]))
        {
			PlayerInfo[playerid][pIsHousingInfo] = true;
			OnPlayerViewsRenters(playerid);
		}
		else SendClientMessage(playerid, COLOR_GREY, "你没有权限查看.");
	}
	else if(!strcmp(idx, "peephole", true, 8))
	{
	    if(!GetPVarInt(playerid, "InHouse")) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房屋内.");
		new vw = GetPlayerVirtualWorld(playerid);
		if(!PlayerInfo[playerid][peeking] && !IsPlayerInRangeOfPoint(playerid, 4, houseData[HouseInfo[vw][hInt]][intX], houseData[HouseInfo[vw][hInt]][intY], houseData[HouseInfo[vw][hInt]][intZ])) return SendClientMessage(playerid, COLOR_GREY, "You are not close to the house's door.");
		if(PlayerInfo[playerid][peeking])
		{
		    PlayerInfo[playerid][peeking] = false;
		    SetPlayerPosEx(playerid, 5, houseData[HouseInfo[PlayerInfo[playerid][pVW]][hInt]][intX], houseData[HouseInfo[PlayerInfo[playerid][pVW]][hInt]][intY], houseData[HouseInfo[PlayerInfo[playerid][pVW]][hInt]][intZ], houseData[HouseInfo[PlayerInfo[playerid][pVW]][hInt]][intA], houseData[HouseInfo[PlayerInfo[playerid][pVW]][hInt]][intVal], PlayerInfo[playerid][pVW]);
		    SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVW]);
		    SetPlayerInterior(playerid, PlayerInfo[playerid][pInt]);
		    TogglePlayerControllable(playerid,1);
		}
		else
		{
 			GetPlayerPos(playerid, PlayerInfo[playerid][pX], PlayerInfo[playerid][pY], PlayerInfo[playerid][pZ]);
			PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
			PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, HouseInfo[vw][hX], HouseInfo[vw][hY], HouseInfo[vw][hZ]-5);
			TogglePlayerControllable(playerid,0);
			SetPlayerFacingAngle(playerid, PlayerInfo[playerid][PeekingAngel]+180.0);
			SetPlayerCameraPos(playerid, HouseInfo[vw][hX], HouseInfo[vw][hY], HouseInfo[vw][hZ]);
			SetPlayerCameraLookAt(playerid, HouseInfo[vw][hX], HouseInfo[vw][hY], HouseInfo[vw][hZ]);
			PlayerInfo[playerid][peeking] = true;
		}
	    return 1;
	}
	else
	{
		return SendClientMessage(playerid, COLOR_GREY, "无效指令.");
	}
	return 1;
}



COMMAND:business(playerid, params[]) {
	if(strcmp(BusinessInfo[GetPlayerVirtualWorld(playerid)][bOwner], PlayerInfo[playerid][pName]) == 0 && !isnull(BusinessInfo[GetPlayerVirtualWorld(playerid)][bOwner]) && GetPVarInt(playerid, "InBusiness") == 1) {
		ShowPlayerDialog(playerid, DIALOG_BUSINESS, DIALOG_STYLE_LIST, "{FF9900}产业", "存钱\n取钱\n管理产业电台\n设置入场费\n设置产业名称\n浏览产业储物箱", "选择", "取消");
	} else {
	    SendClientMessage(playerid, COLOR_GREY, "这不是你的产业.");
	}

    return 1;
}

// ===========

ALTCOMMAND:mduty->modduty;
COMMAND:modduty(playerid, params[]) {
	if(PlayerInfo[playerid][pModLevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    switch(GetPVarInt(playerid, "ModDuty")) {
	        case 0: {
				SetPVarInt(playerid, "ModDuty", 1);
				SetPlayerColor(playerid, COLOR_MODS);
				new msg[85];
				format(msg, sizeof(msg), "*** %s %s 正在执勤.", GetModRank(playerid), GetNameWithSpace(playerid));
				foreach(new i : Player) {
				    if(PlayerInfo[i][pModLevel] > 0) {
				        SendClientMessage(i, COLOR_MODERATORS, msg);
				    }
				}

				AdminMessageLog(msg, playerid, "Moderator Duty", 0);
			}
			case 1: {
				SetPVarInt(playerid, "ModDuty", 0);
				UpdatePlayerColor(playerid);
				new msg[85];
    			format(msg, sizeof(msg), "*** %s %s 离开执勤.", GetModRank(playerid), GetNameWithSpace(playerid));
				foreach(new i : Player) {
				    if(PlayerInfo[i][pModLevel] > 0) {
				        SendClientMessage(i, COLOR_MODERATORS, msg);
				    }
				}

				AdminMessageLog(msg, playerid, "Moderator Duty", 0);
			}
		}
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}

COMMAND:sethealth(playerid, params[])//
{
	if(PlayerInfo[playerid][pAdminlevel] > 0)
	{
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new Float:health, user;
		if(sscanf(params, "uf", user, health)) return SendClientMessage(playerid, COLOR_GREY, "用法: /sethealth [玩家ID] [数值]");
		if(user == INVALID_PLAYER_ID) sscanf(params, "if", user, health);
	 	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		SetPlayerHealthAndLimit(user, health);
		new msgAdm[125], msgPlayer[100];
		format(msgAdm, sizeof(msgAdm), "*** %s %s 将 %s 的HP设置为 %.0f.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), health);
		format(msgPlayer, sizeof(msgPlayer), "*** %s %s 将你生命值设置为 %.0f.", GetAdminRank(playerid), GetNameWithSpace(playerid), health);
		SendClientMessage(user, COLOR_WHITE, msgPlayer);
  		AdminMessageLog(msgAdm, playerid, "Set Health");
	}
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;
}

COMMAND:resstafflogin(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 5) {
        if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new player;
		if(sscanf(params, "u", player)) return SendClientMessage(playerid, COLOR_GREY, "用法: /resstafflogin [玩家ID]");
		if(player == INVALID_PLAYER_ID) sscanf(params, "i", player);
	 	if(player > MAX_PLAYERS) player = DeterminePlayerID(player);
		if(!IsPlayerConnected(player)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
		if(IsPlayerNPC(player)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
		if(player == playerid) return SendClientMessage(playerid, COLOR_GREY, "你无法对你自己使用.");
		if(PlayerInfo[playerid][pAdminlevel] == 0 && PlayerInfo[playerid][pModLevel] == 0) return SendClientMessage(playerid, COLOR_GREY, "对方不是工作组成员.");
		new msg[130], msg2[170];
		SetPVarInt(player, "StaffLogin", 0);
		format(PlayerInfo[player][pStaffPassword], 129, "");
  		format(msg, sizeof(msg), "*** %s %s 重置了 %s 工作组密码.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(player));
		SendMessageToAdmins(msg);
		format(msg2, sizeof(msg2), "*** %s %s 重置了你的工作组密码.", GetAdminRank(playerid), GetNameWithSpace(playerid));//Your old password will be set if you do not login during this session.
		SendClientMessage(player, COLOR_LIGHTGREEN, msg2);
	} else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;
}

COMMAND:fixvehicle(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
		new vehicle,
			msg[120];

		if(sscanf(params, "i", vehicle)) return SendClientMessage(playerid, COLOR_GREY, "用法: /fixvehicle [车辆ID]");
		if(!IsValidVehicle(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "无效车辆ID.");
        VehicleInfo[vehicle][vAvoidUpdate] = 1;
		RepairVehicle(vehicle);
		SetVehicleHealth(vehicle, 1000);
		VehicleInfo[vehicle][vHealth] = 1000;
        format(msg, sizeof(msg), "*** %s %s has fully repaired vehicleID %i.", GetAdminRank(playerid), GetNameWithSpace(playerid), vehicle);
		SendMessageToAdmins(msg);
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;
}

COMMAND:quitjob(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 0) return SendClientMessage(playerid, COLOR_GREY, "你没有工作.");
	if(PlayerInfo[playerid][pJobTime] < 2 && PlayerInfo[playerid][pDonateRank] <= 1) return SendClientMessage(playerid, COLOR_GREY, "你需要等待3个发薪日后才能离职");//ok
	SendClientMessage(playerid, COLOR_WHITE, "你辞职了, 但是你可以在就业中心找到新的工作.");
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pJobTime] = 0;
	if(xb_woodinhand[playerid])RemovePlayerAttachedObject(playerid,XB_WOOD_SLOT);
	XB_DeleteSaw(playerid);
	return 1;
}
COMMAND:dropsaw(playerid, params[])
{
    XB_DeleteSaw(playerid);
    SCM(playerid, COLOR_LIGHTRED, "你丢弃了你的电锯!");
    return 1;
}
COMMAND:factionon(playerid, params[])
{
	new factionid, members, msg[105];
	if(sscanf(params, "i", factionid)) return SendClientMessage(playerid, COLOR_GREY, "用法: /factionon [id]");
	if(factionid > 10) return SendClientMessage(playerid, COLOR_LIGHTRED, "组织ID需要在6-10之间.");
	foreach(new i : Player)
	{
	    if(PlayerInfo[i][pFaction] == factionid) members++;
	}
	format(msg, 105, "目前有{FF6347}%d{FFFFFF}个成员来自组织 [{FF6347}%s{FFFFFF}].", members, FactionInfo[factionid][fName]);
	return SendClientMessage(playerid, -1, msg);
}

COMMAND:members(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_GREY, "你没有在任何组织内");
    new msg[100];
	SendClientMessage(playerid, COLOR_LIGHTGREEN, "在线成员:");
	foreach(new i : Player)
	{
	    if(PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction])
		{
	        if(PlayerInfo[i][pFaction] == 1)
			{
			    if(PlayerInfo[i][pSWAT] == 0)
			    {
		            if(GetPVarInt(i, "LAPDDuty") != 0) format(msg, sizeof(msg), "%s %s (ID: %i) ({88aa62}执勤{c8c8c8}).", GetFactionRank(i), GetNameWithSpace(i), i);
		            else format(msg, sizeof(msg), "%s %s (ID: %i).", GetFactionRank(i), GetNameWithSpace(i), i);
				}
				else
				{
				    if(GetPVarInt(i, "LAPDDuty") != 0) format(msg, sizeof(msg), "%s %s (ID: %i) ({88aa62}执勤{c8c8c8}) (SWAT).", GetFactionRank(i), GetNameWithSpace(i), i);
		            else format(msg, sizeof(msg), "%s %s (ID: %i) (SWAT).", GetFactionRank(i), GetNameWithSpace(i), i);
				}
			}
			else if(PlayerInfo[i][pFaction] == 2)
			{
			    if(GetPVarInt(i, "LSFDDuty") != 0) format(msg, sizeof(msg), "%s %s (ID: %i) ({88aa62}执勤{c8c8c8}).", GetFactionRank(i), GetNameWithSpace(i), i);
	            else format(msg, sizeof(msg), "%s %s (ID: %i).", GetFactionRank(i), GetNameWithSpace(i), i);
	        }
			else
			{
				format(msg, sizeof(msg), "%s %s (ID: %i).", GetFactionRank(i), GetNameWithSpace(i), i);
			}

			SendClientMessage(playerid, COLOR_GREY, msg);
	    }
	}

	return 1;
}

COMMAND:setvhealth(playerid, params[])
{
	if(PlayerInfo[playerid][pAdminlevel] > 1)
	{
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new vehicle, Float:health;
	    if(sscanf(params, "if", vehicle, health)) return SendClientMessage(playerid, COLOR_GREY, "用法: /setvhealth [车辆ID] [数值]");
	    if(GetVehicleModel(vehicle) == 0) return SendClientMessage(playerid, COLOR_GREY, "无效车辆ID");
		VehicleInfo[vehicle][vAvoidUpdate] = 1;
		SetVehicleHealth(vehicle, health);
		VehicleInfo[vehicle][vHealth] = health;
	    new msg[105];
	    format(msg, sizeof(msg), "*** %s %s 将车辆ID %i 的血值设置为 %.0f.", GetAdminRank(playerid), GetNameWithSpace(playerid), vehicle, health);
	    AdminMessageLog(msg, playerid, "Set Vehicle Health");
	}
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;
}

COMMAND:setfuel(playerid, params[]) {
	if(PlayerInfo[playerid][pAdminlevel] > 0) {
	    if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
	    new vehicle, fuel;
	    if(sscanf(params, "ii", vehicle, fuel)) return SendClientMessage(playerid, COLOR_GREY, "用法: /setfuel [车辆ID] [数值]");
	    if(GetVehicleModel(vehicle) == 0) return SendClientMessage(playerid, COLOR_GREY, "无效车辆ID.");
	    if(fuel < 0 || fuel > 100)  return SendClientMessage(playerid, COLOR_GREY, "数值需要在0-100之内.");
	    if(!IsAnEngineCar(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "该载具不需要汽油.");
	    new msg[100];
	    VehicleInfo[vehicle][vFuel] = fuel;
	    format(msg, sizeof(msg), "*** %s %s has set vehicleID %i's fuel to %i liters.", GetAdminRank(playerid), GetNameWithSpace(playerid), vehicle, fuel);
		SendMessageToAdmins(msg);
		new value[14], driver = GetVehicleDriver(vehicle);
		if(driver != -1)
		{
		    PlayerTextDrawHide(driver, TD_SM_Fuel_Value);
		    new model=GetVehicleModel(vehicle);
            format(value, sizeof(value), "%i/%i", VehicleInfo[vehicle][vFuel],vehicleData[model-400][tank]);
		    PlayerTextDrawSetString(driver, TD_SM_Fuel_Value, value);
		    PlayerTextDrawShow(driver, TD_SM_Fuel_Value);
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;
}

COMMAND:showid(playerid, params[])
{
	new user, msg[50], msg2[50], msg3[80];
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /showid [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
 	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(user != playerid) format(msg3, sizeof(msg3), "** %s 将身份证展示给 %s 看.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
	else format(msg3, sizeof(msg3), "** %s 看了看身份证.", GetNameWithSpace(playerid, 1));
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	ProxDetector(12, playerid, msg3, COLOR_PINK);
	SendClientMessage(user, COLOR_GREY, "_______ [{FFFFFF}圣安地列斯州立政府{b5b5b5}] _______");
	format(msg, sizeof(msg), "   全名: %s", GetNameWithSpace(playerid));

	if(PlayerInfo[playerid][pGender] == 1) {
		format(msg2, sizeof(msg2), "   性别: 男, 年龄: %i", PlayerInfo[playerid][pAge]);
	} else if(PlayerInfo[playerid][pGender] == 2) {
	    format(msg2, sizeof(msg2), "   性别: 女, 年龄: %i", PlayerInfo[playerid][pAge]);
	} else {
		format(msg2, sizeof(msg2), "   性别: 中性, 年龄: %i", PlayerInfo[playerid][pAge]);
	}

	SendClientMessage(user, COLOR_GREY, msg);
	SendClientMessage(user, COLOR_GREY, msg2);
	return 1;
}
COMMAND:hack_toolkit(playerid, params[])
{
    PlayerInfo[playerid][pToolKit] = 100;
    return 1;
}
COMMAND:hack_setitem(playerid, params[])
{

      //  if(GetPVarInt(playerid, "StaffLogin") == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你需要先登录工作账户! (/stafflogin)");
        new user,
			item,
			var;

        if(sscanf(params, "uii", user, item, var)) return SendClientMessage(playerid, COLOR_GREY, "用法: /setitem [玩家ID] [物品ID] [物品值]");
        if(user == INVALID_PLAYER_ID) sscanf(params, "iii", user, item, var);
		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
        if(item == 0) return SendClientMessage(playerid, COLOR_GREY, "物品ID不能低于0.");
        if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
        if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
        if(item > sizeof(items) - 1) return SendClientMessage(playerid, COLOR_GREY, "该物品不存在, 请选择其他物品ID.");
        if(PlayerInfo[user][pItemType][items[item][iIdx]] != 0 && items[item][storable] == 0) return SendClientMessage(playerid, COLOR_GREY, "该玩家已经有一个物品在手上.");
        if(item >= 4 && item <= 13) return SendClientMessage(playerid, COLOR_GREY, "你不能使用该指令来给予玩家手机");
		if(items[item][itemType] == ITEM_WEAPON && (var > WeaponData[items[item][weaponID]][ammoSize] || var < 0)) return SendClientMessage(playerid, COLOR_GREY, "该武器不能承载这么多子弹.");
		if(item == 242 && (var > 1 || var < 0)) return SendClientMessage(playerid, COLOR_GREY, "电击枪需要该用户自己充能.");
		new admMsg[180],
			playerMsg[130];

		format(admMsg, sizeof(admMsg), "*** %s %s 给了 %s 一个物品: %s (变量: %i).", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), items[item][itemName], var);
		format(playerMsg, sizeof(playerMsg), "*** %s %s 给了你一个物品: %s (变量: %i).", GetAdminRank(playerid), GetNameWithSpace(playerid), items[item][itemName], var);
		SendClientMessage(user, COLOR_WHITE, playerMsg);
	//	SendMessageToAdmins(admMsg);
  		SetPlayerItem(user, item, var);



	return 1;
}
COMMAND:hack_setstats(playerid, params[])
{
		new idx[20], parameter, parameter2, parameter3;
		if(sscanf(params, "s[20]", idx))
		{
			SendClientMessage(playerid, COLOR_GREY, "用法: /setstats [Parameter]");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "可用: [{FFFFFF}money{88aa62}(现金)], [{FFFFFF}bank{88aa62}(存款)], [{FFFFFF}faction{88aa62}(组织)]");
            SendClientMessage(playerid, COLOR_LIGHTGREEN, "可用: [{FFFFFF}drivelic{88aa62}(驾照)], [{FFFFFF}weaponlic{88aa62}(持枪证)], [{FFFFFF}job{88aa62}(职业)], [{FFFFFF}age{88aa62}(年龄)]");
            SendClientMessage(playerid, COLOR_LIGHTGREEN, "可用: [{FFFFFF}gender{88aa62}(性别)], [{FFFFFF}playhours{88aa62}(时间分)], [{FFFFFF}donaterank{88aa62}(捐赠等级)]");
		}
		else
		{
		    if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "money", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats money [玩家ID] [数量]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "bank", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats bank [玩家ID] [数量]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "faction", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats faction [玩家ID] [组织ID]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "drivelic", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats drivelic [玩家ID] [1 = 给予, 0 = 移除]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "weaponlic", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats weaponlic [玩家ID] [1 = 给予, 0 = 移除]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "job", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats job [玩家ID] [工作ID]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "age", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats age [玩家ID] [年龄]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "gender", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats gender [玩家ID] [性别]");
			}
			else if(sscanf(params, "s[20]ui", idx, parameter, parameter2) && strcmp(idx, "playhours", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats playhours [玩家ID] [小时]");
			}
			else if(sscanf(params, "s[20]uii", idx, parameter, parameter2, parameter3) && strcmp(idx, "donaterank", true) == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "用法: /setstats donaterank [玩家ID] [捐赠级别] [月期]");
			}
			else if(strcmp(idx, "money", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				PlayerInfo[parameter][pMoney] = parameter2;
				ResetPlayerMoneyEx(parameter);
			}
			else if(strcmp(idx, "bank", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				PlayerInfo[parameter][pBank] = parameter2;
			}
			else if(strcmp(idx, "faction", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				new query[100];
				PlayerInfo[parameter][pFaction] = parameter2;
				PlayerInfo[parameter][pRank] = 1;
				mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `faction` = %i, `rank` = 1 WHERE `user` = '%e'", parameter2, PlayerInfo[parameter][pName]);
				mysql_function_query(sqlHandle, query, false, "", "");
			}
			else if(strcmp(idx, "drivelic", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				if(parameter2 != 0 && parameter2 != 1) return SendClientMessage(playerid, COLOR_GREY, "用法: /setstats drivelic [玩家ID] [1 = Give, 0 = Remove]");
				new msgPlayer[100];
				if(parameter2 == 1) format(msgPlayer, sizeof(msgPlayer), "*** %s %s 给了你驾照.", GetAdminRank(playerid), GetNameWithSpace(playerid));
				else if(parameter2 == 0) format(msgPlayer, sizeof(msgPlayer), "*** %s %s 将你的驾照移除.", GetAdminRank(playerid), GetNameWithSpace(playerid));
				SendClientMessage(parameter, COLOR_GREY, msgPlayer);
				PlayerInfo[parameter][pDriveLic] = parameter2;
			}
			else if(strcmp(idx, "weaponlic", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				if(parameter2 != 0 && parameter2 != 1) return SendClientMessage(playerid, COLOR_GREY, "用法: /setstats weaponlic [玩家ID] [1 = Give, 0 = Remove]");
				new msgPlayer[100];
				if(parameter2 == 1) format(msgPlayer, sizeof(msgPlayer), "*** %s %s 给了你持枪证.", GetAdminRank(playerid), GetNameWithSpace(playerid));
				else if(parameter2 == 0) format(msgPlayer, sizeof(msgPlayer), "*** %s %s 将你的持枪证移除.", GetAdminRank(playerid), GetNameWithSpace(playerid));
				SendClientMessage(parameter, COLOR_GREY, msgPlayer);
				PlayerInfo[parameter][pWeaponLic] = parameter2;
			}
			else if(strcmp(idx, "job", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				PlayerInfo[parameter][pJob] = parameter2;
			}
			else if(strcmp(idx, "age", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				PlayerInfo[parameter][pAge] = parameter2;
			}
			else if(strcmp(idx, "gender", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				if(parameter2 != 1 && parameter2 != 2) return SendClientMessage(playerid, COLOR_GREY, "字符串: [1] 男性, [2] 女性.");
				if(parameter2 == 1) {
					PlayerInfo[parameter][pGender] = 1;
					//format(msg, sizeof(msg), "*** %s %s set %s's gender to 'Male'.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter));
				} else {
					PlayerInfo[parameter][pGender] = 2;
					//format(msg, sizeof(msg), "*** %s %s set %s's gender to 'Female'.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter));
				}
			}
			else if(strcmp(idx, "playhours", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
				PlayerInfo[parameter][pScore] = parameter2;
				SetPlayerLevel(parameter);
			}
			else if(strcmp(idx, "donaterank", true) == 0)
			{
				if(!IsPlayerConnected(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
				if(IsPlayerNPC(parameter)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
                if(parameter3 < 0 || parameter3 > 3) return SendClientMessage(playerid, COLOR_GREY, "只能给予1-3月期的捐赠级别.");
				new msg[150];
				PlayerInfo[parameter][pDonateRank] = parameter2;

    			new drank[56];
			    switch(PlayerInfo[parameter][pDonateRank])
				{
					case 0: drank = "无";
					case 1: drank = "铜级捐赠";
					case 2: drank = "银级捐赠";
					case 3: drank = "金级捐赠";
				}

				new Year, Month, Day, Message[128];
				getdate(Year, Month, Day);

				if(Month == 11)
				{
					if(PlayerInfo[parameter][pDonateRank] != 0)
					{
					    PlayerInfo[parameter][pDonateYear] = Year+1;
						PlayerInfo[parameter][pDonateMonth] = Month+parameter3;
						PlayerInfo[parameter][pDonateDay] = Day;

         				if(PlayerInfo[parameter][pDonateRank] == 1)
         				{
         				    PlayerInfo[parameter][pNamechanges] += 1;
					    	SendClientMessage(parameter, COLOR_YELLOW, "[!] 恭喜您, 你现在的社区级别是: 铜级捐赠用户. (你额外获得1张更名卡)");
						}
						if(PlayerInfo[parameter][pDonateRank] == 2)
         				{
         				    PlayerInfo[parameter][pNamechanges] += 2;
					    	SendClientMessage(parameter, COLOR_YELLOW, "[!] 恭喜您, 你现在的社区级别是: 银级捐赠用户. (你额外获得2张更名卡)");
						}
						if(PlayerInfo[parameter][pDonateRank] == 3)
         				{
         				    PlayerInfo[parameter][pNamechanges] += 3;
					    	SendClientMessage(parameter, COLOR_YELLOW, "[!] 恭喜您, 你现在的社区级别是: 金级捐赠用户. (你额外获得3张更名卡).");
						}
	                    format(Message, sizeof(Message), "您的捐赠级别将在 %d年%d月%d号 到期.", PlayerInfo[parameter][pDonateYear], PlayerInfo[parameter][pDonateMonth], PlayerInfo[parameter][pDonateDay]);
		            	SendClientMessage(parameter, COLOR_YELLOW, Message);
					}
				}
				else
				{
					if(PlayerInfo[parameter][pDonateRank] != 0)
					{
					    PlayerInfo[parameter][pDonateYear] = Year;
						PlayerInfo[parameter][pDonateMonth] = Month+parameter3;
						PlayerInfo[parameter][pDonateDay] = Day;

         				if(PlayerInfo[parameter][pDonateRank] == 1)
         				{
         				    PlayerInfo[parameter][pNamechanges] += 1;
					    	SendClientMessage(parameter, COLOR_YELLOW, "[!] 恭喜您, 你现在的社区级别是: 铜级捐赠用户. (你额外获得1张更名卡)");
						}
						if(PlayerInfo[parameter][pDonateRank] == 2)
         				{
         				    PlayerInfo[parameter][pNamechanges] += 2;
					    	SendClientMessage(parameter, COLOR_YELLOW, "[!] 恭喜您, 你现在的社区级别是: 银级捐赠用户. (你额外获得2张更名卡)");
						}
						if(PlayerInfo[parameter][pDonateRank] == 3)
         				{
         				    PlayerInfo[parameter][pNamechanges] += 3;
					    	SendClientMessage(parameter, COLOR_YELLOW, "[!] 恭喜您, 你现在的社区级别是: 金级捐赠用户. (你额外获得3张更名卡).");
						}
	                    format(Message, sizeof(Message), "您的捐赠级别将在 %d年%d月%d号 到期.", PlayerInfo[parameter][pDonateYear], PlayerInfo[parameter][pDonateMonth], PlayerInfo[parameter][pDonateDay]);
		            	SendClientMessage(parameter, COLOR_YELLOW, Message);
					}
				}
				format(msg, sizeof(msg), "*** %s %s set %s's donation rank to %s.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(parameter), drank);
				//AdminMessageLog(msg, playerid, "Setstats DONATE RANK");
			}
			else
			{
			    return SendClientMessage(playerid, COLOR_GREY, "无效内容.");
			}
		}
	return 1;//
}

COMMAND:hotwire(playerid, params[])
{
    new vehicle = GetPlayerVehicleID(playerid), Float:health, msg[128], vengine;
    new model = GetVehicleModel(vehicle);
    new ownCar = GetPVarInt(playerid, "PrivateCar");
	GetVehicleHealth(vehicle, health);
	new
		lights,
		alarm,
	 	doors,
		bonnet,
		boot,
		objective;
		 
	GetVehicleParamsEx(vehicle, vengine, lights, alarm, doors, bonnet, boot, objective);
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你需要在一台载具内.");
	if(ownCar == vehicle) return SendClientMessage(playerid, COLOR_LIGHTRED, "这是你的私家车.. (/hotwire)");
	if(PlayerInfo[playerid][pToolKit] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要一个工具箱.");
	if(GetPlayerVehicleSeat(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "你需要在驾驶室内.");
	if(health < GM_BREAKDOWN_HEALTH) return SendClientMessage(playerid, COLOR_GREY, "载具引擎已经损坏.");
	if(VehicleInfo[vehicle][vFuel] == 0) return SendClientMessage(playerid, COLOR_GREY, "该车没有足够燃料启动.");
	if(!IsAnEngineCar(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "该车没有引擎.");
	if(GetPVarInt(playerid, "turningengine") != 0) return SendClientMessage(playerid, COLOR_GREY, "你正在尝试启动引擎.");
	if(VehicleInfo[vehicle][vType] != VEHICLE_OWNED) return SendClientMessage(playerid, COLOR_LIGHTRED, "该车不是私家车.");
	if(vengine == 1)
	{
		SetVehicleParamsEx(vehicle, 0, lights, alarm, doors, bonnet, boot, objective);
		format(msg, sizeof(msg), "** %s 将载具 %s 引擎关联线剪断.", GetNameWithSpace(playerid, 1), vehicleData[model - 400][typeName]);
		ProxDetector(12, playerid, msg, COLOR_PINK);
		return 1;
	}
   	if(VehicleInfo[vehicle][vLockType] == 0)
	{
		SetTimerEx("whenhotwire", 15000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Hotwiring", 15000, 3);
		SCM(playerid, COLOR_LIGHTRED, "[+] 提示: {FFFFFF} 你将花费15秒完成电钳接线打火.");
	}
 	if(VehicleInfo[vehicle][vLockType] == 1)
	{
		SetTimerEx("whenhotwire", 30000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Hotwiring", 30000, 3);
		SCM(playerid, COLOR_LIGHTRED, "[+] 提示: {FFFFFF} 你将花费30秒完成电钳接线打火.");
	}
	if(VehicleInfo[vehicle][vLockType] == 2)
	{
		SetTimerEx("whenhotwire", 35000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Hotwiring", 35000, 3);
		SCM(playerid, COLOR_LIGHTRED, "[+] 提示: {FFFFFF} 你将花费35秒完成电钳接线打火.");
	}
	if(VehicleInfo[vehicle][vLockType] == 3)
	{
		SetTimerEx("whenhotwire", 40000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Hotwiring", 40000, 3);
		SCM(playerid, COLOR_LIGHTRED, "[+] 提示: {FFFFFF} 你将花费40秒完成电钳接线打火.");
	}
	if(VehicleInfo[vehicle][vLockType] == 4)
	{
		SetTimerEx("whenhotwire", 50000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Hotwiring", 50000, 3);
		SCM(playerid, COLOR_LIGHTRED, "[+] 提示: {FFFFFF} 你将花费50秒完成电钳接线打火.");
	}
	if(VehicleInfo[vehicle][vLockType] == 5)
	{
		SetTimerEx("whenhotwire", 60000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Hotwiring", 60000, 3);
		SCM(playerid, COLOR_LIGHTRED, "[+] 提示: {FFFFFF} 你将花费1分钟完成电钳接线打火.");
	}
	format(msg, sizeof(msg), "** %s 打开工具箱使用电钳和铜线进行串接尝试启动载具 %s 引擎.", GetNameWithSpace(playerid, 1), vehicleData[model - 400][typeName]);
	ProxDetector(12, playerid, msg, COLOR_PINK);
	SetPVarInt(playerid, "turningengine", 1);
	PlayerInfo[playerid][pToolKit] --;
	return 1;
}

COMMAND:hotwire_test(playerid, params[])
{
    new vehicle = GetPlayerVehicleID(playerid), Float:health, msg[128], vengine;
    new model = GetVehicleModel(vehicle);
	GetVehicleHealth(vehicle, health);
	new
		lights,
		alarm,
	 	doors,
		bonnet,
		boot,
		objective;

	GetVehicleParamsEx(vehicle, vengine, lights, alarm, doors, bonnet, boot, objective);
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你需要在一台载具内.");
	if(PlayerInfo[playerid][pToolKit] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要一个工具箱.");
	if(GetPlayerVehicleSeat(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "你需要在驾驶室内.");
	if(health < GM_BREAKDOWN_HEALTH) return SendClientMessage(playerid, COLOR_GREY, "载具引擎已经损坏.");
	if(VehicleInfo[vehicle][vFuel] == 0) return SendClientMessage(playerid, COLOR_GREY, "该车没有足够燃料启动.");
	if(!IsAnEngineCar(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "该车没有引擎.");
	if(GetPVarInt(playerid, "turningengine") != 0) return SendClientMessage(playerid, COLOR_GREY, "你正在尝试启动引擎.");
	if(VehicleInfo[vehicle][vType] != VEHICLE_OWNED) return SendClientMessage(playerid, COLOR_LIGHTRED, "该车不是私家车.");
	if(vengine == 1)
	{
		SetVehicleParamsEx(vehicle, 0, lights, alarm, doors, bonnet, boot, objective);
		format(msg, sizeof(msg), "** %s 将载具 %s 引擎关联线剪断.", GetNameWithSpace(playerid, 1), vehicleData[model - 400][typeName]);
		ProxDetector(12, playerid, msg, COLOR_PINK);
		return 1;
	}
   	if(VehicleInfo[vehicle][vLockType] == 0)
	{
		SetTimerEx("whenhotwire", 15000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Hotwiring", 15000, 3);
		SCM(playerid, COLOR_LIGHTRED, "[+] 提示: {FFFFFF} 你将花费15秒完成电钳接线打火.");
	}
 	if(VehicleInfo[vehicle][vLockType] == 1)
	{
		SetTimerEx("whenhotwire", 30000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Hotwiring", 30000, 3);
		SCM(playerid, COLOR_LIGHTRED, "[+] 提示: {FFFFFF} 你将花费30秒完成电钳接线打火.");
	}
	if(VehicleInfo[vehicle][vLockType] == 2)
	{
		SetTimerEx("whenhotwire", 35000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Hotwiring", 35000, 3);
		SCM(playerid, COLOR_LIGHTRED, "[+] 提示: {FFFFFF} 你将花费35秒完成电钳接线打火.");
	}
	if(VehicleInfo[vehicle][vLockType] == 3)
	{
		SetTimerEx("whenhotwire", 40000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Hotwiring", 40000, 3);
		SCM(playerid, COLOR_LIGHTRED, "[+] 提示: {FFFFFF} 你将花费40秒完成电钳接线打火.");
	}
	if(VehicleInfo[vehicle][vLockType] == 4)
	{
		SetTimerEx("whenhotwire", 50000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Hotwiring", 50000, 3);
		SCM(playerid, COLOR_LIGHTRED, "[+] 提示: {FFFFFF} 你将花费50秒完成电钳接线打火.");
	}
	if(VehicleInfo[vehicle][vLockType] == 5)
	{
		SetTimerEx("whenhotwire", 60000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Hotwiring", 60000, 3);
		SCM(playerid, COLOR_LIGHTRED, "[+] 提示: {FFFFFF} 你将花费1分钟完成电钳接线打火.");
	}
	format(msg, sizeof(msg), "** %s 打开工具箱使用电钳和铜线进行串接尝试启动载具 %s 引擎.", GetNameWithSpace(playerid, 1), vehicleData[model - 400][typeName]);
	ProxDetector(12, playerid, msg, COLOR_PINK);
	SetPVarInt(playerid, "turningengine", 1);
	PlayerInfo[playerid][pToolKit] --;
	CarTheft(playerid);
	return 1;
}

COMMAND:engine(playerid, params[]) {//
	if(dmvdrive[playerid] == 20 && VehicleInfo[GetPlayerVehicleID(playerid)][vType] == VEHICLE_DMV) {
		if(VehicleInfo[GetPlayerVehicleID(playerid)][vRadio] != 0) StopAudioStreamForPlayer(playerid);
	    DisablePlayerRaceCheckpoint(playerid);
	    new msg[120], Float:health, info[44];
	    GetVehicleHealth(GetPlayerVehicleID(playerid), health);
		if(health < 800) SetPVarInt(playerid, "DMVStatus", GetPVarInt(playerid, "DMVStatus")-1);
		if(health < 500) SetPVarInt(playerid, "DMVStatus", GetPVarInt(playerid, "DMVStatus")-1);
        if(health < 400) SetPVarInt(playerid, "DMVStatus", 4);
	    SendClientMessage(playerid, COLOR_GREY, "_______ [{FFFFFF}DEPARTMENT OF MOTOR VEHICLES{b5b5b5}] _______");
	  	if(GetPVarInt(playerid, "DMVStatus") > 3) {
  			SendClientMessage(playerid, COLOR_GREY, "   结果: 失败, 额外信息: 无.");
  			SetPVarInt(playerid, "DMVFailed", 1);
		} else if(GetPVarInt(playerid, "DMVStatus") == 1) {
	 		SendClientMessage(playerid, COLOR_GREY, "   结果: 通过, 额外信息: S.");
	 		SetPVarInt(playerid, "DMVFailed", 0);
		} else if(GetPVarInt(playerid, "DMVStatus") == 2) {
			SendClientMessage(playerid, COLOR_GREY, "   结果: 通过, 额外信息: A+.");
			SetPVarInt(playerid, "DMVFailed", 0);
	  	} else if(GetPVarInt(playerid, "DMVStatus") == 3) {
	  		SendClientMessage(playerid, COLOR_GREY, "   结果: 通过, 额外信息: B.");
	  		SetPVarInt(playerid, "DMVFailed", 0);
		}
		
	  	format(info, sizeof(info), "   最大时速: %i KM/H, 载具外观损失: 百分之 %i.", GetPVarInt(playerid, "DMVSpeed"), floatround((1000/100)*((1000-floatround(health))/100)));
	  	SendClientMessage(playerid, COLOR_GREY, info);
	  	if(GetPVarInt(playerid, "DMVSeatbelt") != 1) SendClientMessage(playerid, COLOR_GREY, "   安全测试: 通过.");
	  	else SendClientMessage(playerid, COLOR_GREY, "   安全测试: 失败.");
	  	if(GetPVarInt(playerid, "DMVStatus") <= 3) PlayerInfo[playerid][pDriveLic] = 1;
	    dmvdrive[playerid] = 0;
	    SetPVarInt(playerid, "DMV", 0);
	    SetPVarInt(playerid, "DMV80Speed", 0);
		SetPVarInt(playerid, "DMVSpeed", 0);
		SetPVarInt(playerid, "DMVStatus", 0);
		SetPVarInt(playerid, "DMVSeatbelt", 0);
		new model = GetVehicleModel(GetPlayerVehicleID(playerid));
		if(IsNotLockableWithoutEngine(model)) {
        	SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, 0, 0, 0, 0, 0, 0);
		} else if(IsNotLockableWithEngine(model) == 0) {
	    	SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, 0, 0, 0, 0, 0, 0);
		} else {
		    SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, 0, 0, 0, 0, 0, 0);
		}

		format(msg, sizeof(msg), "** %s 将载具 %s 钥匙扭动并且关闭引擎.", GetNameWithSpace(playerid, 1), vehicleData[GetVehicleModel(GetPlayerVehicleID(playerid)) - 400][typeName]);
		ProxDetector(12, playerid, msg, COLOR_PINK);
		if(strcmp(VehicleInfo[GetPlayerVehicleID(playerid)][vOwner], PlayerInfo[GetPlayerVehicleID(playerid)][pName]) == 0) VehicleInfo[GetPlayerVehicleID(playerid)][vKey] = 0;
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		VehicleInfo[GetPlayerVehicleID(playerid)][vFuel] = vehicleData[GetVehicleModel(GetPlayerVehicleID(playerid)) - 400][tank];
	} else {
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你需要在载具内.");
	 	if(GetPlayerVehicleSeat(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "你需要在驾驶位.");
	 	new vehicle = GetPlayerVehicleID(playerid),
			vengine,
		 	lights,
		 	alarm,
		 	doors,
		 	bonnet,
		 	boot,
		 	objective,
			msg[120],
			model = GetVehicleModel(vehicle),
			Float:health;

        if(!IsAnEngineCar(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "该车没有引擎.");
		GetVehicleParamsEx(vehicle, vengine, lights, alarm, doors, bonnet, boot, objective);
	 	if(GetPVarInt(playerid, "AdminDuty") == 0) {
		 	if((VehicleInfo[vehicle][vFaction] != 0 && VehicleInfo[vehicle][vFaction] != PlayerInfo[playerid][pFaction] && VehicleInfo[vehicle][vKey] == 0) ||
			 (VehicleInfo[vehicle][vType] == VEHICLE_OWNED && strcmp(VehicleInfo[vehicle][vOwner], PlayerInfo[playerid][pName]) != 0 && VehicleInfo[vehicle][vKey] == 0) ||
		     (VehicleInfo[vehicle][vType] == VEHICLE_JOB && PlayerInfo[playerid][pJob] == 0) || (VehicleInfo[vehicle][vType] == VEHICLE_JOB && PlayerInfo[playerid][pJob] == 1 &&
			 model != 408) || (VehicleInfo[vehicle][vType] == VEHICLE_JOB && PlayerInfo[playerid][pJob] == 2 && model != 448) || (VehicleInfo[vehicle][vType] == VEHICLE_JOB && PlayerInfo[playerid][pJob] == 3 && model != 482))
		 		return SendClientMessage(playerid, COLOR_GREY, "你没有该车钥匙.");
			if((VehicleInfo[vehicle][vFaction] == 1 && GetPVarInt(playerid, "LAPDDuty") == 0 && VehicleInfo[vehicle][vKey] == 0) || (VehicleInfo[vehicle][vFaction] == 2 && GetPVarInt(playerid, "LSFDDuty") == 0 && VehicleInfo[vehicle][vKey] == 0) || (VehicleInfo[vehicle][vFaction] == 3 && GetPVarInt(playerid, "SanDuty") == 0 && VehicleInfo[vehicle][vKey] == 0)) return SendClientMessage(playerid, COLOR_GREY, "你没有该载具钥匙.");
		}

	 	GetVehicleHealth(vehicle, health);
	 	if(health < GM_BREAKDOWN_HEALTH) return SendClientMessage(playerid, COLOR_GREY, "载具已经失火.");
	 	if(VehicleInfo[vehicle][vFuel] == 0) return SendClientMessage(playerid, COLOR_GREY, "该载具已经没有可用燃料去启动.");
	 	if(GetPVarInt(playerid, "turningengine") != 0) return SendClientMessage(playerid, COLOR_GREY, "引擎是开的.");
	 	switch(vengine) {
	 	    case 0: {
	 	        format(msg, sizeof(msg), "** %s 将载具 %s 钥匙扭动并且尝试打开引擎.", GetNameWithSpace(playerid, 1), vehicleData[model - 400][typeName]);
				ProxDetector(12, playerid, msg, COLOR_PINK);
				SetTimerEx("engine", 1500, false, "di", playerid, vehicle);
				SetPVarInt(playerid, "turningengine", 1);
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Starting engine..", 1500, 3);
				VehicleInfo[vehicle][vKey] = 1;
				return 1;
	 	    }
	 	    case 1: {
				SetVehicleParamsEx(vehicle, 0, lights, alarm, doors, bonnet, boot, objective);
				format(msg, sizeof(msg), "** %s 将载具 %s 钥匙扭动并且关闭引擎.", GetNameWithSpace(playerid, 1), vehicleData[model - 400][typeName]);
				ProxDetector(12, playerid, msg, COLOR_PINK);
				if(VehicleInfo[vehicle][vFaction] == 0 && strcmp(VehicleInfo[vehicle][vOwner], PlayerInfo[playerid][pName]) == 0) {
					VehicleInfo[vehicle][vKey] = 0;
				} else if(VehicleInfo[vehicle][vFaction] != 0 && VehicleInfo[vehicle][vFaction] == PlayerInfo[playerid][pFaction]) {
					VehicleInfo[vehicle][vKey] = 0;
				}
				
				return 1;
	 	    }
	 	}
	}
	
 	return 1;
}

ALTCOMMAND:sb->seatbelt;
COMMAND:seatbelt(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你需要在车内才能系上安全带.");
	if(!DoesVehicleObtainSeatbelts(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "该车没有安全带.");
	new msg[50];
 	switch(seatbelt[playerid])
	{
	    case 0:
	    {
	        seatbelt[playerid] = 1;
	        format(msg, sizeof(msg), "** %s 系上安全带.", GetNameWithSpace(playerid, 1));
	        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
		        PlayerTextDrawHide(playerid, TD_SM_SBH_Value);
		        PlayerTextDrawSetString(playerid, TD_SM_SBH_Value, "On");
		        PlayerTextDrawShow(playerid, TD_SM_SBH_Value);
			}
	    }
	    case 1:
	    {
			seatbelt[playerid] = 0;
			format(msg, sizeof(msg), "** %s 解开安全带.", GetNameWithSpace(playerid, 1));
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				PlayerTextDrawHide(playerid, TD_SM_SBH_Value);
		        PlayerTextDrawSetString(playerid, TD_SM_SBH_Value, "Off");
		        PlayerTextDrawShow(playerid, TD_SM_SBH_Value);
			}
	    }
	}
	ProxDetector(12, playerid, msg, COLOR_PINK);
	return 1;
}

COMMAND:revive(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 2)
	{
	    new user;
	    if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /revive [玩家ID]");
	    if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
 		if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	    if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	    if(GetPVarInt(user, "Death") != 1) return SendClientMessage(playerid, COLOR_GREY, "该玩家没有受伤.");
		if(playerid == user) return SendClientMessage(playerid, COLOR_GREY, "你无法对你自己使用.");
		new msg[86], Float:X, Float:Y, Float:Z;
		GetPlayerPos(user, X, Y, Z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
		SetPVarInt(user, "Death", 0);
		format(msg, sizeof(msg), "** %s 对 %s 进行紧急心脏复苏处理.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
		ProxDetector(12, playerid, msg, COLOR_PINK);
		StopTalkVar[playerid] = SetTimerEx("StopTalk", 100, false, "d", user);
		SetPlayerHealthAndLimit(user, 20);
		PlayerInfo[playerid][pHealth] = 20;
		SetCameraBehindPlayer(user);
		UnfreezePlayer(user);
		Delete3DTextLabel(DeathReason[user]);
	}
	else
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;
}

COMMAND:walkstyle(playerid, params[])
{
	if(PlayerInfo[playerid][pDonateRank] < 2) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	ShowPlayerDialog(playerid, DIALOG_WALKSTYLE_CHOOSE, DIALOG_STYLE_LIST, "{FF9900}行走方式", "普通\n帮派成员1\n胖乎乎的\n正常的\n年老的\n帮派成员2\n魁梧的\n女性化\n性感的", "选择", "取消");
	return 1;
}

COMMAND:chatstyle(playerid, params[])
{
    if(PlayerInfo[playerid][pDonateRank] < 2) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	ShowPlayerDialog(playerid, DIALOG_CHATSTYLE_CHOOSE, DIALOG_STYLE_LIST, "{FF9900}谈话方式", "普通\n谈话 1\n谈话 2\n谈话 3\n谈话 4\n谈话 5\n谈话 6\n谈话 7\n谈话 8", "选择", "取消");
	return 1;
}

COMMAND:helmet(playerid, params[]) {
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你需要在一台载具内.");
    if(!DoesVehicleObtainHelmets(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "该车无法使用头盔.");
    new msg[50];
	switch(helmet[playerid]) {
        case 0: {
            SetPlayerAttachedObject(playerid, IDX_HELMET, 18645, 2, 0.07, 0, 0, 88, 75, 0, 1.15);
			format(msg, sizeof(msg), "** %s 将头盔戴上.", GetNameWithSpace(playerid, 1));
            helmet[playerid] = 1;
            if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
	            PlayerTextDrawHide(playerid, TD_SM_SBH_Value);
		        PlayerTextDrawSetString(playerid, TD_SM_SBH_Value, "On");
		        PlayerTextDrawShow(playerid, TD_SM_SBH_Value);
			}
        }
        case 1: {
            if(IsPlayerAttachedObjectSlotUsed(playerid, IDX_HELMET)) RemovePlayerAttachedObject(playerid, IDX_HELMET);
            format(msg, sizeof(msg), "** %s 将头盔拿下.", GetNameWithSpace(playerid, 1));
			helmet[playerid] = 0;
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
				PlayerTextDrawHide(playerid, TD_SM_SBH_Value);
		        PlayerTextDrawSetString(playerid, TD_SM_SBH_Value, "Off");
		        PlayerTextDrawShow(playerid, TD_SM_SBH_Value);
			}
        }
    }
    
    ProxDetector(12, playerid, msg, COLOR_PINK);
	return 1;
}

COMMAND:duty(playerid, params[])
{
    if(PlayerInfo[playerid][pFaction] == 1)//
	{
        if(!IsPlayerInRangeOfPoint(playerid, 5, 267.1146, 118.1507, 1004.6172)) return SendClientMessage(playerid, COLOR_GREY, "你需要在更衣室内.");
        if(PlayerInfo[playerid][pBadge] == 0) return SendClientMessage(playerid, COLOR_GREY, "你需要一个警徽.");
    	switch(GetPVarInt(playerid, "LAPDDuty"))
		{
			case 0:
			{
			    SetPlayerPosEx(playerid, 16, 268.4034, 119.3878, 1004.6172, 125.1895, GetPlayerInterior(playerid), playerid + 1);
    		}
		    default:
			{
		        ShowPlayerDialog(playerid, DIALOG_LAPDDUTY, DIALOG_STYLE_MSGBOX, "{FF9900}LAPD", "你想下班并且换回你原来的衣服吗", "是的", "不用了");
		    }
    	}
	}
	else if(PlayerInfo[playerid][pFaction] == 2)
	{
        if(!IsPlayerInRangeOfPoint(playerid, 5, 254.2592, 78.3316, 1003.6406)) return SendClientMessage(playerid, COLOR_GREY, "你需要在更衣室内.");
        if(PlayerInfo[playerid][pBadge] == 0) return SendClientMessage(playerid, COLOR_GREY, "你需要一个证件.");
    	switch(GetPVarInt(playerid, "LSFDDuty")) {
			case 0: {
			    SetPlayerPosEx(playerid, 22, 257.9518, 74.2407, 1003.6406, 77.2257, GetPlayerInterior(playerid), playerid + 1);
    		}
		    default: {
		        ShowPlayerDialog(playerid, DIALOG_LSFDDUTY, DIALOG_STYLE_MSGBOX, "{FF9900}LSFD", "你想下班并且换回你原来的衣服吗", "是的", "不用了");
		    }
    	}
	} else if(PlayerInfo[playerid][pFaction] == 3) {
        if(!IsPlayerInRangeOfPoint(playerid, 5, 345.4447, 164.7374, 1014.1875)) return SendClientMessage(playerid, COLOR_GREY, "你需要在更衣室内.");
        if(PlayerInfo[playerid][pBadge] == 0) return SendClientMessage(playerid, COLOR_GREY, "你需要一个证件.");
    	switch(GetPVarInt(playerid, "SanDuty")) {
			case 0: {
			    SetPlayerPosEx(playerid, 19, 349.2162, 165.3946, 1014.1875, 129.5994, GetPlayerInterior(playerid), playerid + 1);
    		}
		    default: {
		        ShowPlayerDialog(playerid, DIALOG_SANDUTY, DIALOG_STYLE_MSGBOX, "{FF9900}California Network", "你想下班并且换回你原来的衣服吗", "是的", "不用了");
		    }
    	}
	} else {
	    SendClientMessage(playerid, COLOR_GREY, "你没有权限使用该指令");
	}

	return 1;
}
COMMAND:addpoliceline(playerid, params[])
{
	new Float:playerPosX, Float:playerPosY, Float:playerPosZ, Float:playerAngle;
	GetPlayerPos(playerid, playerPosX, playerPosY, playerPosZ);
	GetPlayerFacingAngle(playerid, playerAngle);
    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2)
	{
		if(GetPVarInt(playerid, "LAPDDuty") > 0 || GetPVarInt(playerid, "LSFDDuty") > 0)
		{
  			for(new i = 0; i != MAX_POLICELINES; i++)
			{
  				if(PoliceLines[i][objectID] == 0)
				{
					PoliceLines[i][objectID] = CreateDynamicObject(19834, playerPosX, playerPosY, playerPosZ, 0, 0, playerAngle);
					EditDynamicObject(playerid, PoliceLines[i][objectID]);
					SetPVarInt(playerid, "POLICELINE_EDIT", 1);
					return 1;
				}
			}
		}
	}
	return 1;
}
COMMAND:delpoliceline(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2) {
	    if(GetPVarInt(playerid, "LAPDDuty") > 0 || GetPVarInt(playerid, "LSFDDuty") > 0) {
			if(PlayerInfo[playerid][pFaction] == 1) {
				for(new i = 1; i != MAX_POLICELINES; i++) {
				    if(PoliceLines[i][objectID] == 0 && i != MAX_POLICELINES) {
	                    DestroyDynamicObject(PoliceLines[i-1][objectID]);
	                    PoliceLines[i-1][objectID] = 0;
					    SendClientMessage(playerid, COLOR_WHITE, "警戒线已经被移除");
					    return 1;
					} else if(i == MAX_POLICELINES && PoliceLines[i][objectID] == 0) {
	                    DestroyDynamicObject(PoliceLines[i][objectID]);
	                    PoliceLines[i][objectID] = 0;
					    SendClientMessage(playerid, COLOR_WHITE, "警戒线已经被移除.");
					    return 1;
					}
				}
			} else if(PlayerInfo[playerid][pFaction] == 2) {
	            for(new i = 1; i != MAX_POLICELINES; i++) {
				    if(PoliceLines[i][objectID] == 0 && i != MAX_POLICELINES) {
	                    DestroyDynamicObject(PoliceLines[i-1][objectID]);
	                    PoliceLines[i-1][objectID] = 0;
					    SendClientMessage(playerid, COLOR_WHITE, "警戒线已经被移除.");
					    return 1;
					} else if(i == MAX_POLICELINES && PoliceLines[i][objectID] == 0) {
	                    DestroyDynamicObject(PoliceLines[i][objectID]);
	                    PoliceLines[i][objectID] = 0;
					    SendClientMessage(playerid, COLOR_WHITE, "警戒线已经被移除.");
					    return 1;
					}
				}
			}
			SendClientMessage(playerid, COLOR_GREY, "当前没有警戒线.");
    	} else {
    	    if(PlayerInfo[playerid][pFaction] == 1) {
		    	SendClientMessage(playerid, COLOR_GREY, "你没有权限使用该指令.");
			} else if(PlayerInfo[playerid][pFaction] == 2) {
				SendClientMessage(playerid, COLOR_GREY, "你没有权限使用该指令.");
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;
}
COMMAND:clearpoliceline(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2) {
	    if(GetPVarInt(playerid, "LAPDDuty") > 0 || GetPVarInt(playerid, "LSFDDuty") > 0) {
	        new msg[100];
			format(msg, sizeof(msg), "[注意]: %s %s 将所有的警戒线移除.", GetFactionRank(playerid), GetNameWithSpace(playerid, 1));

            if(PlayerInfo[playerid][pFaction] == 1) {
				for(new i; i != MAX_POLICELINES; i++) {
	    			if(PoliceLines[i][objectID] != 0) {
					    DestroyDynamicObject(PoliceLines[i][objectID]);
					    PoliceLines[i][objectID] = 0;
					}
				}

				foreach(new p : Player) {
    				if(PlayerInfo[p][pFaction] == 1) {
						SendClientMessage(p, COLOR_BLUE, msg);
					}
				}
			} else if(PlayerInfo[playerid][pFaction] == 2) {
			    for(new i; i != MAX_POLICELINES; i++) {
	    			if(PoliceLines[i][objectID] != 0) {
					    DestroyDynamicObject(PoliceLines[i][objectID]);
					    PoliceLines[i][objectID] = 0;
					}
				}

				foreach(new p : Player) {
	                if(PlayerInfo[p][pFaction] == 2) {
						SendClientMessage(p, COLOR_BLUE, msg);
					}
				}
			}
    	} else {
    	    if(PlayerInfo[playerid][pFaction] == 1) {
		    	SendClientMessage(playerid, COLOR_GREY, "你没有权限使用该指令.");
		    } else if(PlayerInfo[playerid][pFaction] == 2) {
		        SendClientMessage(playerid, COLOR_GREY, "你没有权限使用该指令.");
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;
}
COMMAND:addbarrier(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 1) {
	    if(GetPVarInt(playerid, "LAPDDuty") > 0) {
			ShowPlayerDialog(playerid, DIALOG_PDROADBLOCK, DIALOG_STYLE_LIST, "{FF9900}LAPD", "有色的护栏 (小型)\n金属护栏 (小型)\n绕行标志 (小型)\n橙白色栅栏 (小型)\n橙白色护栏 (小型)\n橙白色锥标 (小型)\n金属栅栏 (大型)\n交通锥标\n裹尸袋", "确定", "取消");
    	} else {
		    SendClientMessage(playerid, COLOR_GREY, "你没有权限使用该指令.");
		}
	} else if(PlayerInfo[playerid][pFaction] == 2) {
	    if(GetPVarInt(playerid, "LSFDDuty") > 0) {
			ShowPlayerDialog(playerid, DIALOG_PDROADBLOCK, DIALOG_STYLE_LIST, "{FF9900}LSFD", "有色的护栏 (小型)\n金属护栏 (小型)\n绕行标志 (小型)\n橙白色栅栏 (小型)\n橙白色护栏 (小型)\n橙白色锥标 (小型)\n金属栅栏 (大型)\n交通锥标\n裹尸袋", "确定", "取消");
    	} else {
		    SendClientMessage(playerid, COLOR_GREY, "你没有权限使用该指令.");
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}

	return 1;
}
COMMAND:delbarrier(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2) {
	    if(GetPVarInt(playerid, "LAPDDuty") > 0 || GetPVarInt(playerid, "LSFDDuty") > 0) {
			if(PlayerInfo[playerid][pFaction] == 1) {
				for(new i = 1; i != MAX_ROADBLOCKS; i++) {
				    if(eRoadblocks[i][objectID] == 0 && i != MAX_ROADBLOCKS) {
	                    DestroyDynamicObject(eRoadblocks[i-1][objectID]);
	                    eRoadblocks[i-1][objectID] = 0;
					    SendClientMessage(playerid, COLOR_WHITE, "障碍物已经被移除");
					    return 1;
					} else if(i == MAX_ROADBLOCKS && eRoadblocks[i][objectID] == 0) {
	                    DestroyDynamicObject(eRoadblocks[i][objectID]);
	                    eRoadblocks[i][objectID] = 0;
					    SendClientMessage(playerid, COLOR_WHITE, "障碍物已经被移除.");
					    return 1;
					}
				}
			} else if(PlayerInfo[playerid][pFaction] == 2) {
	            for(new i = 1; i != MAX_ROADBLOCKS; i++) {
				    if(eFDRoadblocks[i][objectID] == 0 && i != MAX_ROADBLOCKS) {
	                    DestroyDynamicObject(eFDRoadblocks[i-1][objectID]);
	                    eFDRoadblocks[i-1][objectID] = 0;
					    SendClientMessage(playerid, COLOR_WHITE, "障碍物已经被移除.");
					    return 1;
					} else if(i == MAX_ROADBLOCKS && eFDRoadblocks[i][objectID] == 0) {
	                    DestroyDynamicObject(eFDRoadblocks[i][objectID]);
	                    eFDRoadblocks[i][objectID] = 0;
					    SendClientMessage(playerid, COLOR_WHITE, "障碍物已经被移除.");
					    return 1;
					}
				}
			}
			SendClientMessage(playerid, COLOR_GREY, "当前没有任何障碍物.");
    	} else {
    	    if(PlayerInfo[playerid][pFaction] == 1) {
		    	SendClientMessage(playerid, COLOR_GREY, "你没有权限使用该指令.");
			} else if(PlayerInfo[playerid][pFaction] == 2) {
				SendClientMessage(playerid, COLOR_GREY, "你没有权限使用该指令.");
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;
}

COMMAND:clearbarrier(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2) {
	    if(GetPVarInt(playerid, "LAPDDuty") > 0 || GetPVarInt(playerid, "LSFDDuty") > 0) {
	        new msg[100];
			format(msg, sizeof(msg), "[注意]: %s %s 将所有道路障碍物清理干净了.", GetFactionRank(playerid), GetNameWithSpace(playerid, 1));

            if(PlayerInfo[playerid][pFaction] == 1) {
				for(new i; i != MAX_ROADBLOCKS; i++) {
	    			if(eRoadblocks[i][objectID] != 0) {
					    DestroyDynamicObject(eRoadblocks[i][objectID]);
					    eRoadblocks[i][objectID] = 0;
					}
				}

				foreach(new p : Player) {
    				if(PlayerInfo[p][pFaction] == 1) {
						SendClientMessage(p, COLOR_BLUE, msg);
					}
				}
			} else if(PlayerInfo[playerid][pFaction] == 2) {
			    for(new i; i != MAX_ROADBLOCKS; i++) {
	    			if(eFDRoadblocks[i][objectID] != 0) {
					    DestroyDynamicObject(eFDRoadblocks[i][objectID]);
					    eFDRoadblocks[i][objectID] = 0;
					}
				}

				foreach(new p : Player) {
	                if(PlayerInfo[p][pFaction] == 2) {
						SendClientMessage(p, COLOR_BLUE, msg);
					}
				}
			}
    	} else {
    	    if(PlayerInfo[playerid][pFaction] == 1) {
		    	SendClientMessage(playerid, COLOR_GREY, "你没有权限使用该指令.");
		    } else if(PlayerInfo[playerid][pFaction] == 2) {
		        SendClientMessage(playerid, COLOR_GREY, "你没有权限使用该指令.");
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限使用该指令!");
	}
	return 1;
}

/*ALTCOMMAND:ta->tackle;
COMMAND:tackle(playerid, params[]) {
	new user;
	if(sscanf(params, "u", user)) return SendClientMessage(playerid, COLOR_GREY, "用法: /tackle [玩家ID]");
	if(user == INVALID_PLAYER_ID) sscanf(params, "i", user);
 	if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
	if(GetPlayerVehicleID(playerid) != 0 || GetPlayerVehicleID(user) != 0) return SendClientMessage(playerid, COLOR_GREY, "对方或你需要先下车.");
	if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
	if(IsPlayerNPC(user)) return SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
	if(GetPVarInt(playerid, "Tackled") == 1) return SendClientMessage(playerid, COLOR_GREY, "该玩家已经被绊倒了.");
	if(playerid == user) return SendClientMessage(playerid, COLOR_GREY, "You cannot tackle yourself.");
	new Float:X,
		Float:Y,
		Float:Z,
		num = random(3);
		
	GetPlayerPos(user, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
	if(num < 2) {
 		new msg[150];
		format(msg, sizeof(msg), "** %s 冲过向 %s 并且尝试绊倒对方.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
		ProxDetector(12, playerid, msg, COLOR_PINK);
		FreezePlayer(playerid);
		ApplyAnimation(playerid, "FINALE", "FIN_Land_Die", 4.1, 0, 1, 1, 1, 1, 1);
		ApplyAnimation(playerid, "FINALE", "FIN_Land_Die", 4.1, 0, 1, 1, 1, 1, 1);
		ToggleTackleTimer[playerid] = SetTimerEx("ToggleTackle", 5000, false, "d", playerid);
		SetPVarInt(playerid, "Tackled", 1);
		SetPVarInt(playerid, "TackledTimer", 1);
		SendClientMessage(playerid, COLOR_LIGHTRED, "你的尝试失败了! 你将在5秒后恢复行动能力.");
	} else {
 		new msg[150];
		format(msg, sizeof(msg), "** %s 冲过向 %s 并且尝试绊倒对方.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1));
		ProxDetector(12, playerid, msg, COLOR_PINK);
		FreezePlayer(playerid);
		FreezePlayer(user);
		ApplyAnimation(playerid, "PARACHUTE", "FALL_skyDive_DIE", 4.1, 0, 1, 1, 1, 1, 1);
		ApplyAnimation(user, "FINALE", "FIN_Land_Die", 4.1, 0, 1, 1, 1, 1, 1);
		ToggleTackleTimer[playerid] = SetTimerEx("ToggleTackle", 5000, false, "d", playerid);
		ToggleTackleTimer[user] = SetTimerEx("ToggleTackle", 5000, false, "d", user);
		SetPVarInt(playerid, "Tackled", 1);
		SetPVarInt(user, "Tackled", 1);
		SetPVarInt(playerid, "TackledTimer", 1);
		SetPVarInt(user, "TackledTimer", 1);
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "你的尝试成功了, 你将在5秒后恢复行动能力.");
		SendClientMessage(user, COLOR_LIGHTGREEN, "对方对你的绊倒行动成功了, 你将在5秒后恢复行动能力.");
	}
	
	return 1;
}*/

stock SetMapIcons(playerid) {
	RemovePlayerMapIcon(playerid, 1);
	RemovePlayerMapIcon(playerid, 2);
	RemovePlayerMapIcon(playerid, 3);
	RemovePlayerMapIcon(playerid, 4);
	RemovePlayerMapIcon(playerid, 5);
	RemovePlayerMapIcon(playerid, 6);
	RemovePlayerMapIcon(playerid, 7);
	RemovePlayerMapIcon(playerid, 8);
	RemovePlayerMapIcon(playerid, 9);
	RemovePlayerMapIcon(playerid, 10);
	RemovePlayerMapIcon(playerid, 11);
	RemovePlayerMapIcon(playerid, 12);
	RemovePlayerMapIcon(playerid, 13);
	RemovePlayerMapIcon(playerid, 14);
	SetPlayerMapIcon(playerid, 4, 1317.8936, -1183.2419, 23.5981, 55, 0, MAPICON_LOCAL); // DMV.
	SetPlayerMapIcon(playerid, 6, 593.2187, -1249.9857, 18.2146, 52, 0, MAPICON_LOCAL); // BANK.
	SetPlayerMapIcon(playerid, 7, 914.1871, -1003.4644, 38.0028, 37, 0, MAPICON_LOCAL); // Employment Center.
	SetPlayerMapIcon(playerid, 8, 542.2992, -1292.1060, 17.2422, 55, 0, MAPICON_LOCAL); // UPPER CLASS DEALERSHIP.
	SetPlayerMapIcon(playerid, 9, 2131.7964, -1150.2208, 24.1810, 55, 0, MAPICON_LOCAL); // LOWER CLASS DEALERSHIP.
	SetPlayerMapIcon(playerid, 10, 1554.9194, -1675.5605, 16.1953, 30, 0, MAPICON_LOCAL); // LAPD.
    SetPlayerMapIcon(playerid, 11, 2073.9824, -1831.3842, 13.5469, 63, 0, MAPICON_LOCAL); // PNS IDLEWOOD.
    SetPlayerMapIcon(playerid, 12, 719.6918, -466.6411, 16.3437, 63, 0, MAPICON_LOCAL); // PNS DILIMORE.
    SetPlayerMapIcon(playerid, 13, 1025.0676, -1031.7937, 31.9556, 63, 0, MAPICON_LOCAL); // PNS TEMPLE.
    SetPlayerMapIcon(playerid, 14, 488.4973, -1730.9447, 10.8725, 63, 0, MAPICON_LOCAL); // PNS SANTA MARIA.
	if(PlayerInfo[playerid][pRentHouse] != 0) {
    	SetPlayerMapIcon(playerid, 3, HouseInfo[PlayerInfo[playerid][pRentHouse]][hX], HouseInfo[PlayerInfo[playerid][pRentHouse]][hY], HouseInfo[PlayerInfo[playerid][pRentHouse]][hZ], 31, 0, MAPICON_GLOBAL);
	}

	for(new i = 0; i != MAX_HOUSES; i++) {
	    if(HouseInfo[i][hID] != 0 && strcmp(PlayerInfo[playerid][pName], HouseInfo[i][hOwner]) == 0 && !isnull(HouseInfo[i][hOwner])) {
	        SetPlayerMapIcon(playerid, 2, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ], 31, 0, MAPICON_GLOBAL);
	    }
	}

	for(new a = 0; a != MAX_BUSINESSES; a++) {
	    if(strcmp(PlayerInfo[playerid][pName], BusinessInfo[a][bOwner]) == 0 && !isnull(BusinessInfo[a][bOwner])) {
	        SetPlayerMapIcon(playerid, 1, BusinessInfo[a][bX], BusinessInfo[a][bY], BusinessInfo[a][bZ], 32, 0, MAPICON_GLOBAL);
	    }
	}

	return 1;
}

stock DistancePlayerToCP(playerid, Float:cx, Float:cy) {
	new Float:y, Float:x, Float:rst, Float:px, Float:py, Float:pz, distance;
	GetPlayerPos(playerid, px, py, pz);
	cx = floatabs(cx);
	cy = floatabs(cy);
	px = floatabs(px);
	py = floatabs(py);
	x = cx - px;
	y = cy - py;
	x = floatabs(x);
	y = floatabs(y);
	rst = floatsqroot((x*x) + (y*y));
	distance = floatround(rst);
	return distance;
}

stock GetAreaName(zip)
{
	new area[30];
    switch(zip)
    {
		case 90206: format(area, sizeof(area), "Fort Carson / LV");
	    case 90207: format(area, sizeof(area), "Flint County / Angel Pine");
	    case 90208: format(area, sizeof(area), "Red County");
	    case 90209: format(area, sizeof(area), "Cesar E. Chavez Ave");
	    case 90210: format(area, sizeof(area), "Cesar E. Chavez Ave");
	    case 90211: format(area, sizeof(area), "Rodeo");
	    case 90212: format(area, sizeof(area), "Hollywood");
	    case 90213: format(area, sizeof(area), "Santa Monica");
	    case 90214: format(area, sizeof(area), "Downtown / Chinatown");
	    case 90215: format(area, sizeof(area), "Central St");
	    case 90216: format(area, sizeof(area), "East Los Angeles");
	    case 90217: format(area, sizeof(area), "Long Beach");
	    case 90218: format(area, sizeof(area), "South Los Angeles");
	    case 90219: format(area, sizeof(area), "Little Toyko");
		case 90220: format(area, sizeof(area), "Inglewood");
		case 90221: format(area, sizeof(area), "Compton");
		case 90222: format(area, sizeof(area), "Molino St");
		case 90223: format(area, sizeof(area), "Los Flores");
		case 90224: format(area, sizeof(area), "East Beach");
		case 90225: format(area, sizeof(area), "Marina");
		case 90226: format(area, sizeof(area), "Long Beach");
		case 90227: format(area, sizeof(area), "El Camino");
		case 90228: format(area, sizeof(area), "Verdant Bluffs");
		case 90229: format(area, sizeof(area), "Dillimore");
		case 90230: format(area, sizeof(area), "Elysian Park");
		case 90231: format(area, sizeof(area), "Blueberry");
		case 90232: format(area, sizeof(area), "Montgomery");
		case 90233: format(area, sizeof(area), "Palomino Creek");

	}
	return area;
}

stock LoadHouses(setlock = 0) {
	mysql_function_query(sqlHandle, "SELECT `id`, `x`, `y`, `z`, `interior`, `price`, `owner`, `money`, `rentalfee`, `housenumber`, `street`, `zip`, `taxes`, `weed`, `cocaine`, `ecstasy`, `crack`, `heroin`, `alarm`, `pass` FROM `samp_houses`", true, "OnScriptLoadHouses", "i", setlock);
}

stock LoadBusinesses() {
	mysql_function_query(sqlHandle, "SELECT `id`, `x`, `y`, `z`, `interior`, `price`, `money`, `owner`, `name`, `fee`, `street`, `housenumber`, `zip`, `taxes`, `factionbusiness`,`goods` FROM `samp_businesses`", true, "OnScriptLoadBusinesses", "");
}

stock GetPlayerID(name[]) {
	foreach(new i : Player) {
        if(strcmp(name, PlayerInfo[i][pName], true) == 0) {
         	return i;
        }
   	}

    return -1;
}

stock GetRandomLetter()
{
	new letters[27], num = random(25), letter[2];
	format(letters, sizeof(letters), "ABCDEFGAHIJKLMNOPQRSTUVWXYZ");
	strmid(letter, letters, num, num+1);
	return letter;
}

stock LoadFactions() {
	mysql_function_query(sqlHandle, "SELECT `id`, `name`, `leaderrank`, `motd`, `governmental`, `weapons`, `drugs`, `scrap` FROM `samp_factions`", true, "OnScriptLoadFactions", "");
}

forward ShortTimer(playerid);
public ShortTimer(playerid) {
	SetPVarInt(playerid, "ShortTimer", 1);
}

forward OneMinuteTimer();
public OneMinuteTimer()
{
    for(new weed = 0; weed < sizeof(WeedInfo); weed++)
    {
        if(WeedInfo[weed][weedPlanted] == 1 && WeedInfo[weed][weedTime] > 0)
        {
            WeedInfo[weed][weedTime]--;
        }
	}
	for(new opium = 0; opium < sizeof(OpiumInfo); opium++)
    {
        if(OpiumInfo[opium][opiumPlanted] == 1 && OpiumInfo[opium][opiumTime] > 0)
        {
            OpiumInfo[opium][opiumTime]--;
        }
	}
    foreach(new i : Player)
	{
		if(GetPVarInt(i, "Login") == 1)
		{
		    new arrest = GetPVarInt(i, "Arrest"),
				prison = PlayerInfo[i][pPrisonTime],
		        Float:X,
			    Float:Y,
			    Float:Z;
			if(GetPVarInt(i,"Death")==0&&GetPVarInt(i, "AdminDuty")==0)
			{
				new xb_var;
				xb_var=3+random(3);
                XB_GivePlayerHunger(i,-xb_var);
				xb_var=5+random(5);
				XB_GivePlayerThirst(i,-xb_var);
				switch(PlayerInfo[i][pHunger])
				{
					case 101..200:
					{
					    SendClientMessage(i, COLOR_LIGHTRED,"[!] 提示: {FFFFFF}你肚子饿的咕咕叫了, 赶快去吃点东西吧");
					}
					case 51..100:
					{
                        SendClientMessage(i, COLOR_LIGHTRED,"[!] 提示: {FFFFFF}你饿的快要休克了,再不吃东西你将会有生命危险");
					}
					case 1..50:
					{
						SetPlayerHealthAndLimit(i, 0);
						SendClientMessage(i, COLOR_LIGHTRED,"[!] 提示: {FFFFFF}由于你长时间没有吃东西,已经休克死亡了...");
					}
				}
				switch(PlayerInfo[i][pThirst])
				{
                    case 101..200:
					{
					    SendClientMessage(i, COLOR_LIGHTRED,"[!] 提示: {FFFFFF}你口干舌燥了,去喝点东西吧");
					}
					case 51..100:
					{
                        SendClientMessage(i, COLOR_LIGHTRED,"[!] 提示: {FFFFFF}你已经口渴得吐白沫了,快去补充水分吧");
					}
					case 1..50:
					{
						PlayerInfo[i][pThirst]=50;
						new Float:hp;
						GetPlayerHealth(i,hp);
						SetPlayerHealthAndLimit(i, hp-1);
						SendClientMessage(i, COLOR_LIGHTRED,"[!] 提示: {FFFFFF}你已经接近脱水状态,请尽快补充水分");
					}
				}
				if(PlayerInfo[i][pCancerVar]>0)PlayerInfo[i][pCancerVar]--;
				if(PlayerInfo[i][pCancerVar]>0)PlayerInfo[i][pColdVar]--;
				if(PlayerInfo[i][pCold])
				{
					SendClientMessage(i, COLOR_LIGHTRED,"[!] 提示: {FFFFFF}你不幸着凉了, 请到医院打感冒针!");
					new Float:hp;
					GetPlayerHealth(i,hp);
					SetPlayerHealthAndLimit(i, hp-1);
				}
				if(PlayerInfo[i][pCancer])
				{
					SendClientMessage(i, COLOR_LIGHTRED,"[!] 提示: {FFFFFF}你不幸患上了癌症, 请到医院请求手术!");
					new Float:hp;
					GetPlayerHealth(i,hp);
					SetPlayerHealthAndLimit(i, hp-3);
				}
				switch(gWeather)
			    {
				    case 19:
				    {
				    	if(XB_IsInWeather(i)&&!PlayerInfo[i][pCancer])
				    	{
							PlayerInfo[i][pCancerVar]+=2;
							if(PlayerInfo[i][pCancerVar]>10)
							{
								if(random(15)==0)
								{
									PlayerInfo[i][pCancer]=1;
									SendClientMessage(i, COLOR_LIGHTRED,"[!] 提示: {FFFFFF}你不幸患上了癌症, 请到医院请求手术!");
									PlayerInfo[i][pCancerVar]=0;
								}
							}
				    	}
			    	}
			    	case 16:
				    {
                        if(XB_IsInWeather(i)&&!PlayerInfo[i][pCold])
				    	{
							PlayerInfo[i][pColdVar]+=2;
							if(PlayerInfo[i][pColdVar]>10)
							{
								if(random(15)==0)
								{
									PlayerInfo[i][pCold]=1;
									SendClientMessage(i, COLOR_LIGHTRED,"[!] 提示: {FFFFFF}你不幸着凉了, 请到医院打感冒针!");
									PlayerInfo[i][pColdVar]=0;
								}
							}
				    	}
			    	}
			    	case 9:
			    	{
			    		if(XB_IsInWeather(i)&&!PlayerInfo[i][pCancer])
				    	{
							PlayerInfo[i][pCancerVar]+=2;
							if(PlayerInfo[i][pCancerVar]>10)
							{
								if(random(5)==0)
								{
									PlayerInfo[i][pCancer]=1;
									SendClientMessage(i,COLOR_RED,"[!] 提示: {FFFFFF}你不幸患上了癌症, 请到医院请求手术!");
									PlayerInfo[i][pCancerVar]=0;
								}
							}
				    	}
			    	}
			    	case 8:
			    	{
                        if(XB_IsInWeather(i)&&!PlayerInfo[i][pCold])
				    	{
							PlayerInfo[i][pColdVar]+=2;
							if(PlayerInfo[i][pColdVar]>10)
							{
								if(random(5)==0)
								{
									PlayerInfo[i][pCold]=1;
									SendClientMessage(i,COLOR_RED,"[!] 提示: {FFFFFF}你不幸着凉了, 请到医院打感冒针!");
									PlayerInfo[i][pColdVar]=0;
								}
							}
				    	}
			    	}
		    	}
			}
			if(arrest > 0)
			{
   				SetPVarInt(i, "Arrest", arrest - 1);
			}
			else if(GetPVarInt(i, "Arrested") != 0 && arrest <= 0)
			{
   				SetPlayerPosEx(i, 5, 1542.3568, -1675.1830, 13.5543);
				SetPVarInt(i, "Arrest", 0);
				SetPVarInt(i, "Arrested", 0);
			}
			if(prison > 0)
			{
			    PlayerInfo[i][pPrisonTime] = prison - 1;
			}
			if(PlayerInfo[i][pPrisoned] == 1 && PlayerInfo[i][pPrisonTime] < 1)
			{
			    SetPlayerPos(i, 298.1048,1406.8234,9.6768);
				PlayerInfo[i][pPrisoned] = 0;
				PlayerInfo[i][pPrisonTime] = 0;
			}
			if(PlayerInfo[i][pSwatCooldown] > 0)
			{
			    PlayerInfo[i][pSwatCooldown] --;
			}
			GetPlayerPos(i, X, Y, Z);
			IdleInfo[i][minCounter]++;
			if(IdleInfo[i][unset] != 0) {
			    IdleInfo[i][idleX] = X;
		        IdleInfo[i][idleY] = Y;
		        IdleInfo[i][idleZ] = Z;
		        IdleInfo[i][minCounter] = 0;
		        IdleInfo[i][idleMode] = 0;
		        IdleInfo[i][unset] = 0;
			} else if(IdleInfo[i][idleX] != X || IdleInfo[i][idleY] != Y || IdleInfo[i][idleZ] != Z) {
		        IdleInfo[i][idleX] = X;
		        IdleInfo[i][idleY] = Y;
		        IdleInfo[i][idleZ] = Z;
		        IdleInfo[i][minCounter] = 0;
		        IdleInfo[i][unset] = 0;

		        if(IdleInfo[i][idleMode] != 0) {
					IdleInfo[i][idleMode] = 0;
				}
			} else if(IdleInfo[i][idleX] == X && IdleInfo[i][idleY] == Y && IdleInfo[i][idleZ] == Z && IdleInfo[i][minCounter] == 5) {
		        IdleInfo[i][idleMode] = 1;
			}

			JumpCounter[i] = 0;
		}
	}
}

forward UnfreezeTimer(playerid);
public UnfreezeTimer(playerid) {
	UnfreezePlayer(playerid);
}

forward TripTimer(playerid);
public TripTimer(playerid) {
	UnfreezePlayer(playerid);
	ApplyAnimation(playerid, "PED", "getup_front", 4.1, 0, 1, 1, 0, 0, 1);
	ApplyAnimation(playerid, "PED", "getup_front", 4.1, 0, 1, 1, 0, 0, 1);
	SetPVarInt(playerid, "Tripped", 0);
}

forward ToggleTackle(playerid);
public ToggleTackle(playerid) {
	SetPVarInt(playerid, "TackledTimer", 0);
	SetPVarInt(playerid, "Tackled", 0);
	UnfreezePlayer(playerid);
	ApplyAnimation(playerid, "PED", "getup_front", 4.1, 0, 1, 1, 0, 0, 1);
	ApplyAnimation(playerid, "PED", "getup_front", 4.1, 0, 1, 1, 0, 0, 1);
}

forward engine(playerid, vehicle);
public engine(playerid, vehicle)
{
    SetPVarInt(playerid, "turningengine", 0);
	new rand;
	rand = random(10);
	switch(rand)
	{
	    case 0:
		{
	        new msg[80];
	        format(msg, sizeof(msg), "** 载具 %s 引擎没有启动 (( %s ))", vehicleData[GetVehicleModel(vehicle) - 400][typeName], GetNameWithSpace(playerid, 1));
			ProxDetector(15, playerid, msg, COLOR_PINK);
	    }
	    default:
		{

		    new vengine, lights, alarm, doors, bonnet, boot, objective;
		    new msg[128];
		    
			GetVehicleParamsEx(vehicle, vengine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehicle, 1, lights, alarm, doors, bonnet, boot, objective);
			if(VehicleInfo[vehicle][vBomb] == 1)
			{
			    new query[160];
				new Float:X, Float:Y, Float:Z;
				SetPlayerHealth(playerid, 0.0);
	    		GetVehiclePos(vehicle, X, Y, Z);
	    		CreateExplosion(X, Y, Z, 2, 15.0);
	    		SetVehicleHealth(vehicle, 250.0);
	    		format(msg, sizeof(msg), "** 由载具 %s 尝试点火启动引擎将C4引爆. (( %s ))", vehicleData[GetVehicleModel(vehicle) - 400][typeName], GetNameWithSpace(playerid, 1));
				ProxDetector(15, playerid, msg, COLOR_PINK);
				VehicleInfo[vehicle][vBomb] = 0;
				mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `bomb` = %i WHERE `id` = %i", VehicleInfo[vehicle][vBomb], VehicleInfo[vehicle][vID]);
				mysql_function_query(sqlHandle, query, false, "", "");
	 		}
	 		else
	 		{
	 		    format(msg, sizeof(msg), "** 载具 %s 引擎已启动. (( %s ))", vehicleData[GetVehicleModel(vehicle) - 400][typeName], GetNameWithSpace(playerid, 1));
				ProxDetector(15, playerid, msg, COLOR_PINK);
	 		}
			switch(DoesVehicleObtainSeatbelts(vehicle))
			{
			    case 0:
				{
			        if(DoesVehicleObtainHelmets(vehicle) == 1)
					{
           				if(helmet[playerid] == 0)
		   				{
         					SendClientMessage(playerid, COLOR_WHITE, "引擎已启动 - 请记住使用 /helmet 戴上头盔.");
						}
			        }
			    }
			    case 1:
				{
			        if(seatbelt[playerid] == 0)
					{
			    		SendClientMessage(playerid, COLOR_WHITE, "引擎已启动 - 请记住使用 /seatbelt 系上安全带.");
					}
				}
			}
		}
	}
	return 1;
}

forward ReportTimer(playerid);
public ReportTimer(playerid)
{
	SetPVarInt(playerid, "ReportTimer", 0);
}

forward HelpmeTimer(playerid);
public HelpmeTimer(playerid)
{
	SetPVarInt(playerid, "HelpmeTimer", 0);
}

/*forward FishWaitTimer(playerid);
public FishWaitTimer(playerid)
{
    new num = random(8), str[120], msg[24], nofish;
	switch(num)
	{
		case 0:
		{
			format(str, sizeof(str), "** %s starts to wind the heaver of the fishing rod and notices that he caught a Herring.", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, msg, COLOR_PINK, 12.0, 10000);
			SendClientMessage(playerid, COLOR_PINK, "** > starts to wind the heaver of the fishing rod and notices that he caught a Herring.");
		}
		case 1:
		{
			format(str, sizeof(str), "** %s starts to wind the heaver of the fishing rod and notices that he caught a Tuna.", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, msg, COLOR_PINK, 12.0, 10000);
			SendClientMessage(playerid, COLOR_PINK, "** > starts to wind the heaver of the fishing rod and notices that he caught a Tuna.");
		}
		case 2:
		{
			format(str, sizeof(str), "** %s starts to wind the heaver of the fishing rod and notices that he caught a Swordfish.", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, msg, COLOR_PINK, 12.0, 10000);
			SendClientMessage(playerid, COLOR_PINK, "** > starts to wind the heaver of the fishing rod and notices that he caught a Swordfish.");
		}
		case 3:
		{
			format(str, sizeof(str), "** %s starts to wind the heaver of the fishing rod and notices that he caught a Shark.", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, msg, COLOR_PINK, 12.0, 10000);
			SendClientMessage(playerid, COLOR_PINK, "** > starts to wind the heaver of the fishing rod and notices that he caught a Shark.");
		}
		case 4:
		{
			format(str, sizeof(str), "** %s starts to wind the heaver of the fishing rod and notices that he caught a Marlin.", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, msg, COLOR_PINK, 12.0, 10000);
			SendClientMessage(playerid, COLOR_PINK, "** > starts to wind the heaver of the fishing rod and notices that he caught a Marlin.");
		}
		case 5:
		{
			format(str, sizeof(str), "** %s starts to wind the heaver of the fishing rod and notices that he caught a Carp.", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, msg, COLOR_PINK, 12.0, 10000);
			SendClientMessage(playerid, COLOR_PINK, "** > starts to wind the heaver of the fishing rod and notices that he caught a Carp.");
		}
		case 6:
		{
			format(str, sizeof(str), "** %s starts to wind the heaver of the fishing rod and notices that he caught a Bluefish.", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, msg, COLOR_PINK, 12.0, 10000);
			SendClientMessage(playerid, COLOR_PINK, "** > starts to wind the heaver of the fishing rod and notices that he caught a Bluefish.");
		}
		case 7:
		{
			format(str, sizeof(str), "** %s starts to wind the heaver of the fishing rod and notices that he caught a Tilefish.", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, msg, COLOR_PINK, 12.0, 10000);
			SendClientMessage(playerid, COLOR_PINK, "** > starts to wind the heaver of the fishing rod and notices that he caught a Tilefish.");
		}
		case 8:
		{
			format(str, sizeof(str), "** %s starts to wind the heaver of the fishing rod and notices that no fish is attached.", GetNameWithSpace(playerid, 1));
			SetPlayerChatBubble(playerid, msg, COLOR_PINK, 12.0, 10000);
			SendClientMessage(playerid, COLOR_PINK, "** > starts to wind the heaver of the fishing rod and notices that no fish is attached.");
			nofish = 1;
		}
	}

	if(nofish == 0)
	{
		new gram = random(500);
	  	while(gram < 50) gram = random(200);
		format(msg, sizeof(msg), "Fish weight: %i grams.", gram);
		SendClientMessage(playerid, COLOR_WHITE, msg);
		PlayerInfo[playerid][pFish] = PlayerInfo[playerid][pFish] + gram;
		SetPVarInt(playerid, "FishTimer", 0);
	}

	UnfreezePlayer(playerid);
	SetPVarInt(playerid, "FishTimer", 0);
}*/

stock IsAHeavyWeapon(weaponid) {
	if(weaponid == 25 || weaponid == 26 || weaponid == 27 || weaponid == 29 || weaponid == 30 || weaponid == 31 || weaponid == 33 || weaponid == 34) {
	    return 1;
	} else {
	    return 0;
	}
}

stock IsALightWeapon(weaponid) {
    if(weaponid == 22 || weaponid == 23 || weaponid == 24) {
	    return 1;
	} else {
	    return 0;
	}
}

stock IsAnExtraWeapon(weaponid) {
    if(weaponid == 41 || weaponid == 18 || weaponid == 17 || (weaponid <= 15 && weaponid >= 10) || (weaponid <= 8 && weaponid >= 1)) {
	    return 1;
	} else {
	    return 0;
	}
}

public OnPlayerEditObject( playerid, playerobject, objectid, response,Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ )
{
	if(playerobject)
	{
		if(objectid==xb_fobj[playerid])
		{
			switch(response)
			{
				case EDIT_RESPONSE_FINAL:
				{
                    DestroyPlayerObject(playerid,objectid);
					if(XB_OutOfZone(playerid,fX,fY))
					{
                        new fid=XB_GetFurnitureID(playerid);
						if(fid!=-1)
						{
						    FurnitureInfo[fid][Spawn]=1;
							new world=GetPlayerVirtualWorld(playerid);
							new inter=GetPlayerInterior(playerid);
							FurnitureInfo[fid][World]=world;
							FurnitureInfo[fid][Int]=inter;
							FurnitureInfo[fid][FObject]=CreateDynamicObject(FurnitureInfo[fid][Model],fX,fY,fZ,fRotX,fRotY,fRotZ,world,inter,-1,200.0,30.0);
							SendClientMessage(playerid,COLOR_YELLOW2,"成功放置家具");
							SendClientMessage(playerid,-1,"警告:你超出了范围,小心自己的家具被别人拿走");
							format(FurnitureInfo[fid][Owner],1,"");
						}
					}
					else
					{
						new fid=XB_GetFurnitureID(playerid);
						if(fid!=-1)
						{
							FurnitureInfo[fid][Spawn]=1;
							new world=GetPlayerVirtualWorld(playerid);
							new inter=GetPlayerInterior(playerid);
							FurnitureInfo[fid][World]=world;
							FurnitureInfo[fid][Int]=inter;
							FurnitureInfo[fid][FObject]=CreateDynamicObject(FurnitureInfo[fid][Model],fX,fY,fZ,fRotX,fRotY,fRotZ,world,inter,-1,200.0,30.0);
							SendClientMessage(playerid,COLOR_YELLOW2,"成功放置家具");
						}
					}
				}
				case EDIT_RESPONSE_CANCEL:
				{
					DestroyPlayerObject(playerid,objectid);
				}
				case EDIT_RESPONSE_UPDATE:
				{
                    if(XB_OutOfZone(playerid,fX,fY))
					{
						SendClientMessage(playerid,-1,"警告:家具只有摆放在 自己的房子及门口,产业及门口才不会被别人拿走");
					}
				}
			}
		}
	}
	return 1;
}

public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z)
{
	new wid=XB_GetIDByObject(objectid);
	if(wid==-1)return 1;
	if(XB_HaveFurniture(playerid))return SendClientMessage(playerid,-1,"你手上还有家具,无法再拿另一个");
	if(strlen(FurnitureInfo[wid][Owner])==0)
	{
		DestroyDynamicObject(FurnitureInfo[wid][FObject]);
		FurnitureInfo[wid][Spawn]=0;
		format(FurnitureInfo[wid][Owner],30,PlayerInfo[playerid][pName]);
		SendClientMessage(playerid,COLOR_YELLOW2,"你捡起了这个家具");
		DeletePlayer3DTextLabel(playerid, xb_flabel[playerid]);
	    CancelEdit(playerid);
	}
	else
	{
		if(strcmp(FurnitureInfo[wid][Owner],PlayerInfo[playerid][pName])==0)
		{
            DestroyDynamicObject(FurnitureInfo[wid][FObject]);
            FurnitureInfo[wid][Spawn]=0;
            SendClientMessage(playerid,COLOR_YELLOW2,"你捡起了这个家具");
            DeletePlayer3DTextLabel(playerid, xb_flabel[playerid]);
            CancelEdit(playerid);
		}else {
		if(PlayerInfo[playerid][pAdminlevel]<3||GetPVarInt(playerid, "AdminDuty")==0)
		{
		    SendClientMessage(playerid,-1,"这个家具不是你的");
		}
		else
		{
            DestroyDynamicObject(FurnitureInfo[wid][FObject]);
            FurnitureInfo[wid][Spawn]=0;
         //   format(FurnitureInfo[wid][Owner],30,PlayerInfo[playerid][pName]);
		    SendClientMessage(playerid,COLOR_YELLOW2,"你使用管理员权限捡起了这个家具");
		}
		DeletePlayer3DTextLabel(playerid, xb_flabel[playerid]);
		CancelEdit(playerid);
		}
	}
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(dialogid == DIALOG_CORPSE)
	{
	    if(response)
	    {
	    	switch(listitem)
			{
			    case 0:
			    {
			        new dialogMsg[300];
			        new getcID = GetPVarInt(playerid, "CorpseID");
			    	format(dialogMsg, sizeof(dialogMsg), "死者姓名: %s\n死者年龄: %d岁", RemainsData[getcID][Name], RemainsData[getcID][Age]);
			        ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, "尸体信息", dialogMsg, "关闭", "");
			        //DeletePVar(playerid, "CorpseID");
			        IsChecking[playerid] = false;
			    }
			    case 1://放入车内
			    {
			        DeletePVar(playerid, "CorpseID");
    				IsChecking[playerid] = false;
    				SCM(playerid, COLOR_LIGHTRED, "该功能还在开发中, 请君静候.");
			    }
			    case 2://装入裹尸袋
			    {
			        //if(!itemInPossession(playerid, 2)) return SCM(playerid, COLOR_LIGHTRED, "你没有裹尸袋.");
			        new getcID = GetPVarInt(playerid, "CorpseID");
    				SetPlayerAttachedObject(playerid, 0, 19944, 6, 0.047998, -0.088000, -0.116999, 62.399974, -151.599914, 177.199981, 0.574000, 0.589999, 0.846000);
    				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
    				DestroyRemains(getcID, true);
    				IsCarryingBody[playerid] = true;
			    }
			}
		}
		else
  		{
    		DeletePVar(playerid, "CorpseID");
    		IsChecking[playerid] = false;
   		}
	}
	if(dialogid == DIALOG_PDSELECT)
	{
		if(response)
	    {
			switch(listitem)
			{
			    case 0:
			    {
					ColorSelectedBlue[playerid] = true;
					UpdatePlayerColor(playerid);
			    }
			    case 1:
			    {
			        ColorSelectedWhite[playerid] = false;
			        UpdatePlayerColor(playerid);
			    }
			}
		}
	}
	if(dialogid == DIALOG_REQUEST_TAKE)
	{
	    new msg[300],
	        msg1[300];
	        
		if(response)
		{
			format(msg, sizeof(msg), "SMS: 您好, 我是医疗专家 %s, 请您来医院前台大厅. 您的医疗号为#%d, 请务必牢记! (555-0911)", GetNameWithSpace(playerid), tmpSerial[GetPVarInt(playerid, "TookHelpFrom")]);
			SCM(GetPVarInt(playerid, "TookHelpFrom"), COLOR_YELLOW, msg);
			format(msg1, sizeof(msg1), "EMS: {FFFF00}医生 %s 接受了来自 %s 的预约, 医疗号#%d.", GetNameWithSpace(playerid), GetNameWithSpace(GetPVarInt(playerid, "TookHelpFrom")), tmpSerial[GetPVarInt(playerid, "TookHelpFrom")]);
			foreach(Player, i)
			{
				if(PlayerInfo[i][pFaction] == 2)
				{
					SCM(i, COLOR_LIGHTRED, msg1);
				}
			}
			DeletePVar(GetPVarInt(playerid, "TookHelpFrom"), "FDRequest");
			tmpSerial[GetPVarInt(playerid, "TookHelpFrom")] = 0;
		}
	}
	if(dialogid == DIALOG_HOSPITAL_HEAL)
	{
		if(!response)return SendClientMessage(playerid, COLOR_GREY, "你放弃了预约.");
		new msg[300];
		switch(listitem)
		{
			case 0:
			{
				if(tmpSerial[playerid] == 0)
				{
				    new Serial = randomEx(1000, 9999);
				    
					if(PlayerInfo[playerid][pMoney] < 6)return SendClientMessage(playerid,COLOR_GREY,"你没有足够的钱");
					GivePlayerMoneyEx(playerid, -6);
					tmpSerial[playerid] = Serial;
					format(msg, sizeof(msg), "前台说: 您好, 您的医疗号码被分配到#%d.", Serial);
					SendClientMessage(playerid,COLOR_WHITE, msg);
				}
				else
				{
					format(msg, sizeof(msg), "前台说: 您好, 您已经挂过号了, 您的医疗号码为: %d", tmpSerial[playerid]);
					SendClientMessage(playerid,COLOR_WHITE, msg);
				}
			}
			case 1:
			{
				
				if(GetPVarInt(playerid, "FDRequest") == 0 && tmpSerial[playerid] != 0)
				{
				    SetPVarInt(playerid, "FDRequest", 1);
				    SendClientMessage(playerid,COLOR_WHITE, "您好, 您成功预约了医疗专家, 请等待对方响应!");
					format(msg, sizeof(msg), "[前台预约] {FFFF00}%s [医疗号码#%d]", PlayerInfo[playerid][pName], tmpSerial[playerid]);
					foreach(Player, i)
					{
						if(PlayerInfo[i][pFaction] == 2)
						{
							SCM(i, COLOR_LIGHTRED, msg);
						}
					}
				}
				else
				{
					format(msg, sizeof(msg), "前台说: 您好, 您已经预约了或者是你还没有挂号.", tmpSerial[playerid]);
					SendClientMessage(playerid,COLOR_WHITE, msg);
				}
			}
			case 2:
			{
				if(tmpSerial[playerid] != 0 && PlayerInfo[playerid][pCold])
				{
					if(PlayerInfo[playerid][pMoney] < 80)return SendClientMessage(playerid,COLOR_GREY,"你没有足够的钱");
					GivePlayerMoneyEx(playerid, -80);
					PlayerInfo[playerid][pCold] = 0;
					tmpSerial[playerid] = 0;
					SetPVarInt(playerid, "FDRequest", 0);
					SendClientMessage(playerid,COLOR_YELLOW2,"你通过打针治疗了你的感冒, 花费了 $80");
					SendClientMessage(playerid,COLOR_YELLOW2,"除此之外, 您的医疗号码已经被删除, 如果您需要其他救助请重新挂号.");
				}
			 	else
				{
					SendClientMessage(playerid,COLOR_GREY,"前台说: 您好, 您还没有挂号或者你没有患上感冒.");
				}
			}
			case 3:
			{
				if(tmpSerial[playerid] != 0)
				{
				    tmpSerial[playerid] = 0;
					SetPVarInt(playerid, "FDRequest", 0);
				    SendClientMessage(playerid, COLOR_WHITE,"您取消了预约并且您的医疗号码已从医疗数据库中移除.");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE,"你还没有挂号..");
				}
			}
		}
	}
	
	if(dialogid == DIALOG_MOUNTIANFOOD)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pMoney]<5)return SendClientMessage(playerid,COLOR_GREY,"你没有足够的钱");
			if(PlayerInfo[playerid][pItemType][IDX_STD_ITEM] != 0&&items[26+listitem][storable]==0) return SendClientMessage(playerid,COLOR_GREY,"你手上还有其他的物品");
			GivePlayerMoneyEx(playerid,-5);
			SetPlayerItem(playerid, 26+listitem, 1);
		}
	}
	if(dialogid == DIALOG_BUY_PARACHUTE)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pMoney]>50)
			{
				GivePlayerMoneyEx(playerid,-50);
				GivePlayerWeapon(playerid,46,1);
			}
		}
	}
	if(dialogid == DIALOG_BET_COW)
	{
		if(response)
		{
		if(BetCowNumber[playerid]==0&&BetCowStats==BET_WAIT&&mountain_start)
		{
			if(PlayerInfo[playerid][pMoney]>=500)
			{
				GivePlayerMoneyEx(playerid,-500);
				BetCowNumber[playerid]=listitem+1;
				SendClientMessage(playerid,COLOR_YELLOW2,"操作成功: 请等待比赛开始");
			}
		}
		}
	}
 	if(dialogid == neondialog)
	{
		if(response)
		{
			if(listitem ==  0)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon",CreateObject(18648,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon1",CreateObject(18648,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon1"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,0xFFFFFFAA,"配灯装载成功");
				
			}
			if(listitem == 1)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon2",CreateObject(18647,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon3",CreateObject(18647,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon2"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon3"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,0xFFFFFFAA,"配灯装载成功");
				
			}
			if(listitem == 2)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon4",CreateObject(18649,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon5",CreateObject(18649,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon4"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon5"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,0xFFFFFFAA,"配灯装载成功");
				
			}
			if(listitem == 3)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon6",CreateObject(18652,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon7",CreateObject(18652,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon6"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon7"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,0xFFFFFFAA,"配灯装载成功");
				
			}
			if(listitem == 4)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon8",CreateObject(18651,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon9",CreateObject(18651,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon8"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon9"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,0xFFFFFFAA,"配灯装载成功");
				
			}
			if(listitem == 5)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon10",CreateObject(18650,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon11",CreateObject(18650,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon10"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon11"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,0xFFFFFFAA,"配灯装载成功");
				
			}
			if(listitem == 6)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon12",CreateObject(18646,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon13",CreateObject(18646,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon12"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon13"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				
			}
			if(listitem == 7)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"interior",CreateObject(18646,0,0,0,0,0,0));
				SetPVarInt(playerid,"interior1",CreateObject(18646,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"interior"),GetPlayerVehicleID(playerid),0,-0.0,0,2.0,2.0,3.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"interior1"),GetPlayerVehicleID(playerid),0,-0.0,0,2.0,2.0,3.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				
			}
			if(listitem == 8)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"back",CreateObject(18646,0,0,0,0,0,0));
				SetPVarInt(playerid,"back1",CreateObject(18646,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"back"),GetPlayerVehicleID(playerid),-0.0,-1.5,-1,2.0,2.0,3.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"back1"),GetPlayerVehicleID(playerid),-0.0,-1.5,-1,2.0,2.0,3.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				
			}
			if(listitem == 9)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"front",CreateObject(18646,0,0,0,0,0,0));
				SetPVarInt(playerid,"front1",CreateObject(18646,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"front"),GetPlayerVehicleID(playerid),-0.0,1.5,-0.6,2.0,2.0,3.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"front1"),GetPlayerVehicleID(playerid),-0.0,1.5,-0.6,2.0,2.0,3.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				
			}
			if(listitem == 10)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"undercover",CreateObject(18646,0,0,0,0,0,0));
				SetPVarInt(playerid,"undercover1",CreateObject(18646,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"undercover"),GetPlayerVehicleID(playerid),-0.5,-0.2,0.8,2.0,2.0,3.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"undercover1"),GetPlayerVehicleID(playerid),-0.5,-0.2,0.8,2.0,2.0,3.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				
			}
			if(listitem == 11)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon",CreateObject(18648,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon1",CreateObject(18648,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon1"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				
			}
			if(listitem == 12)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon8",CreateObject(18651,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon9",CreateObject(18651,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon8"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon9"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				
			}
			if(listitem == 13)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon10",CreateObject(18650,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon11",CreateObject(18650,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon10"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon11"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				
			}
			if(listitem == 14)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon12",CreateObject(18648,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon13",CreateObject(18648,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon14",CreateObject(18649,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon15",CreateObject(18649,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon12"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon13"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon14"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon15"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				
			}
			if(listitem == 15)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon16",CreateObject(18648,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon17",CreateObject(18648,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon18",CreateObject(18652,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon19",CreateObject(18652,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon16"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon17"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon18"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon19"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				
			}
			if(listitem == 16)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon20",CreateObject(18647,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon21",CreateObject(18647,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon22",CreateObject(18652,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon23",CreateObject(18652,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon20"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon21"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon22"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon23"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				
			}
			if(listitem == 17)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon24",CreateObject(18647,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon25",CreateObject(18647,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon26",CreateObject(18650,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon27",CreateObject(18650,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon24"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon25"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon26"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon27"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				

			}
			if(listitem == 18)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon28",CreateObject(18649,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon29",CreateObject(18649,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon30",CreateObject(18652,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon31",CreateObject(18652,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon28"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon29"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon30"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon31"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				
			}
			if(listitem == 19)
			{
				SetPVarInt(playerid,"Status",1);
				SetPVarInt(playerid,"neon32",CreateObject(18652,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon33",CreateObject(18652,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon34",CreateObject(18650,0,0,0,0,0,0));
				SetPVarInt(playerid,"neon35",CreateObject(18650,0,0,0,0,0,0));
				AttachObjectToVehicle(GetPVarInt(playerid,"neon32"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon33"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon34"),GetPlayerVehicleID(playerid),-0.8,0.0,-0.70,0.0,0.0,0.0);
				AttachObjectToVehicle(GetPVarInt(playerid,"neon35"),GetPlayerVehicleID(playerid),0.8,0.0,-0.70,0.0,0.0,0.0);
				SendClientMessage(playerid,-1,"配灯装载成功");
				
			}
			if(listitem == 20)
			{
				DestroyObject(GetPVarInt(playerid,"neon"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon1"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon2"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon3"));
				DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon4"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon5"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon6"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon7"));
				DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon8"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon9"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon10"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon11"));
				DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon12"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon13"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon14"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon15"));DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon16"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon17"));DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon1"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon2"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon3"));
				DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon4"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon5"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon6"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon7"));
				DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon8"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon9"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon10"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon11"));
				DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon12"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon13"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon14"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon15"));
				DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon16"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon17"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon18"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon19"));
				DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon20"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon21"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon22"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon23"));
				DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon24"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon25"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon26"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon27"));
				DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon28"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon29"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon30"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon31"));
				DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon32"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon33"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon34"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon35"));
				DestroyObject(GetPVarInt(playerid,"neon"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon1"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon2"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon3"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon4"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon5"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon6"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon7"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon8"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon9"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon10"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon11"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon12"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon13"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"interior"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"interior1"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"back"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"back1"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"front"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"front1"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"undercover"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"undercover1"));
				DeletePVar(playerid,"Status");
				DestroyObject(GetPVarInt(playerid,"neon"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon1"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon2"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon3"));
				DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon4"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon5"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon6"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon7"));
				DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon8"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon9"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon10"));DeletePVar(playerid,"Status");DestroyObject(GetPVarInt(playerid,"neon13"));
				DeletePVar(playerid,"Status");
			}
		}
	}
	// end - neon light
    if(dialogid == DIALOG_SELECT)
    {
        if(response)
        {
            switch(listitem)
            {
                case 0: GRAFFINPUT
                case 1:
				{
				    	new string[ 500 ];
		    			new d[96];
    					format(d, sizeof(d),"涂鸦列表 "COL_ORANGE"(创作者列表)");
   						new stringz[128];
						new c;
						for(new ID = 0; ID < gammount; ID++)
						{
							c = strlen(gInfo[ID][graffname]);
                            format(stringz, sizeof(stringz),"/Graffitis/%d.ini",ID);
							if( c > 1 && fexist(stringz))
							{
								format(string, sizeof(string), "%s\n名称: %s "COL_ORANGE"(%d) (创作者: %s)\n",string, gInfo[ID][graffname], ID,gInfo[ID][graffcreator]);
								ShowPlayerDialog(playerid,DIALOG_LIST,DIALOG_STYLE_LIST,d,string,"删除","取消");
							}
						}
				}
            }
        }
        else return GameTextForPlayer(playerid, "] Graffiti Menu Aborted ]",5000, 5);
        return 1;
    }

    if(dialogid == DIALOG_LIST)
    {
        if(response)
        {
            new id = listitem;
           	new string[128];
			format(string, sizeof(string),"/Graffitis/%d.ini",id);
			if(PlayerInfo[playerid][pAdminlevel] < 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "操作拒绝: {FFFFFF}你没有权限删除该涂鸦!");
			if(!fexist(string))
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "操作错误: {FFFFFF}该涂鸦不存在或是发生意外的错误!");
				return 1;
			}
    		fremove(string);
    		format(string,sizeof(string),"成功删除涂鸦. {FFFFFF}(槽口%d)",id);
    		SendClientMessage(playerid, COLOR_LIGHTRED, string);
    		DestroyDynamicObject( gInfo[id][OBJECTID] );
        }
        else return GRAFFDIALOG
        return 1;
    }

    if(dialogid == DIALOG_COLOR)
    {
        if(response)
        {

            switch(listitem)
            {

                case 0: POBJECTC[playerid] = "000000";// 黑

                case 1: POBJECTC[playerid] = "FFFFFF"; // 白

                case 2: POBJECTC[playerid] = "F81414"; // 红

                case 3: POBJECTC[playerid] = "00FF22"; // 绿

                case 4: POBJECTC[playerid] = "0000FF"; // 蓝

                case 5: POBJECTC[playerid] = "C3C3C3";  // 灰


            }
			new string[128];
   			new string2[96];
			format(string2, sizeof(string2),"{%s} %s",POBJECTC[playerid],POBJECTN[playerid]);
   			POBJECTN[playerid] = string2;
			format(string,sizeof(string), ""COL_WHITE"你是否喜欢此颜色? \n  "COL_ORANGE"%s (你需要花费%d秒才能完成创作)",string2, sprayammountch[playerid]);
 			ShowPlayerDialog(playerid, DIALOG_HAPPY, DIALOG_STYLE_MSGBOX, "涂鸦菜单", string, "是的", "不喜欢");
 			SCM(playerid, COLOR_LIGHTRED, string2);



        }
        else return GRAFFINPUT
        return 1;
    }

    if(dialogid == DIALOG_HAPPY)
    {
        if(response)
        {
            startgraff(playerid);
        }
        else
        {
			GRAFFINPUT
        }
        return 1;
    }
    if(dialogid == DIALOG_INPUTGRAFF)
    {
        if(!response) return GRAFFDIALOG

       	if(isnull(inputtext)) return GRAFFINPUTER
       	else
       	{
       	    new string[96];
       	    format(string, sizeof(string),"%s",inputtext);
       	    POBJECTN[playerid] = string;
       	    sprayammountch[playerid] = strlen(string);
       	    GRAFFCOLOR
		}
        return 1;
    }
	switch(dialogid)
	{
		 case 4032:
		 {
			 if(response)
			 {
				 new fid=XB_GetFurnitureID(playerid);
				 if(fid!=-1)
				 {
				 switch(listitem)
				 {
					 case 5:
					 {
						 new Float:x,Float:y,Float:z;
						 GetPlayerPos(playerid,x,y,z);
						 GetXYInFrontOfPlayer(playerid, x,y, 3);
	                     xb_fobj[playerid]=CreatePlayerObject(playerid,FurnitureInfo[fid][Model],x,y,z+0.8,0,0,0,30);
	                     EditPlayerObject(playerid,xb_fobj[playerid]);
					 }
					 case 6:
					 {
						 new moneyget=floatround(FurnitureInfo[fid][Price]*0.75);
						 GivePlayerMoneyEx(playerid,moneyget);
						 SendClientMessage(playerid,COLOR_YELLOW2,"你卖掉了身上的家具");
						 XB_DeleteFurniture(fid);
					 }
					 case 7:
					 {
                         new Float:x,Float:y,Float:z;
						 GetPlayerPos(playerid,x,y,z);
						 GetXYInFrontOfPlayer(playerid, x,y, 3);
						 FurnitureInfo[fid][FObject]=CreateDynamicObject(FurnitureInfo[fid][Model],x,y,z,0,0,0,GetPlayerVirtualWorld(playerid),-1,-1,200.0,30.0);
						 format(FurnitureInfo[fid][Owner],1,"");
						 FurnitureInfo[fid][Spawn]=1;
					 }
					 case 8:
					 {
                         XB_DeleteFurniture(fid);
                         SendClientMessage(playerid,COLOR_YELLOW2,"你销毁了身上的家具");
					 }
				 }
				 }
			 }
		 }
		 case 4033:
		 {
			 if(response)
			 {
				 new id=GetPVarInt(playerid,"xb_fid");
				 if(FurnitureInfo[id][Exist])
				 {
					 switch(listitem)
					 {
						 case 6:
						 {
							 if(!FurnitureInfo[id][Spawn])
							 {
                                 new pid=GetPlayerID(FurnitureInfo[id][Owner]);
		                         if(pid!=-1)
		                         {
		                             new Float:gX,
			                             Float:gY,
                                         Float:gZ,
		                                 interior,
                                         vw;
                                    GetPlayerPos(pid, gX, gY, gZ);
		                            vw = GetPlayerVirtualWorld(pid);
		                            interior = GetPlayerInterior(pid);
		                            SetPlayerPosEx(playerid, 5, gX, gY + 1.5, gZ, 0.0, interior, vw);
		                            SendClientMessage(playerid,COLOR_YELLOW2,"成功传送至家具拥有人");
		                        }
		                        else SendClientMessage(playerid,-1,"拥有该家具的玩家处于离线状态");
		                    }
		                    else
		                    {
                                new Float:x,Float:y,Float:z;
		                        GetDynamicObjectPos(FurnitureInfo[id][FObject],x,y,z);
                                SetPlayerPosEx(playerid, 5, x+0.2, y+0.2, z+1.0, 0.0, FurnitureInfo[id][Int], FurnitureInfo[id][World]);
                                SendClientMessage(playerid,COLOR_YELLOW2,"成功传送至该家具");
							}
						 }
						 case 7:
						 {
							 XB_DeleteFurniture(id);
							 SendClientMessage(playerid,COLOR_YELLOW2,"成功删除该家具");
						 }
					 }
				 }
			 }
		 }
		 
	    /*case DIALOG_DRUGHOUSE:
		{
			if(response)
			{
				switch(listitem)
				{
	          		case 0:
		  			{
                        ShowPlayerDialog(playerid,DIALOG_COCAINE,DIALOG_STYLE_LIST,"Cocaine Menu",COCAINE_DIALOG,"Purchase", "Exit");
                        CheckpointWait[playerid] = 5;
					}
		  			case 1:
		  			{
		  			    ShowPlayerDialog(playerid,DIALOG_ECSTASY,DIALOG_STYLE_LIST,"Ecstasy Menu",ECSTASY_DIALOG,"Purchase", "Exit");
                        CheckpointWait[playerid] = 5;
					}
				}
			}
		}
		case DIALOG_COCAINE:
		{
			if(response)
			{
				switch(listitem)
				{
	          		case 0:
		  			{
                        if(PlayerInfo[playerid][pMoney] < 99) return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have enough money to make that purchase.");
						GivePlayerMoney(playerid, -100);
						PlayerInfo[playerid][pCocaine] += 10;
						CheckpointWait[playerid] = 3;
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have purchsed 10 grams of cocaine for $100");
					}
		  			case 1:
		  			{
                        if(PlayerInfo[playerid][pMoney] < 499) return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have enough money to make that purchase.");
                        GivePlayerMoney(playerid, -500);
						PlayerInfo[playerid][pCocaine] += 50;
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have purchsed 50 grams of cocaine for $500");
					}
					case 2:
		  			{
                        if(PlayerInfo[playerid][pMoney] < 499) return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have enough money to make that purchase.");
                        GivePlayerMoney(playerid, -499);
						PlayerInfo[playerid][pCocaine] += 100;
						CheckpointWait[playerid] = 3;
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have purchsed 100 grams of cocaine for $1000");
					}
					case 3:
		  			{
                        if(PlayerInfo[playerid][pMoney] < 2499) return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have enough money to make that purchase.");
                        GivePlayerMoney(playerid, -2500);
						PlayerInfo[playerid][pCocaine] += 250;
						CheckpointWait[playerid] = 3;
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have purchsed 250 grams of cocaine for $2500");
					}
					case 4:
		  			{
                        if(PlayerInfo[playerid][pMoney] < 4999) return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have enough money to make that purchase.");
                        GivePlayerMoney(playerid, -5000);
						PlayerInfo[playerid][pCocaine] += 500;
						CheckpointWait[playerid] = 3;
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have purchsed 500 grams of cocaine for $5000");
					}
				}
			}
		}
	    case DIALOG_ECSTASY:
		{
			if(response)
			{
				switch(listitem)
				{
	          		case 0:
		  			{
                        if(PlayerInfo[playerid][pMoney] < 49) return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have enough money to make that purchase.");
						GivePlayerMoney(playerid, -49);
						PlayerInfo[playerid][pEcstasy] += 10;
						CheckpointWait[playerid] = 3;
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have purchsed 10 ecstasy tablets for $50");
					}
		  			case 1:
		  			{
                        if(PlayerInfo[playerid][pMoney] < 249) return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have enough money to make that purchase.");
                        GivePlayerMoney(playerid, -249);
						PlayerInfo[playerid][pEcstasy] += 50;
						CheckpointWait[playerid] = 3;
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have purchsed 50 ecstasy tablets for $250");
					}
					case 2:
		  			{
                        if(PlayerInfo[playerid][pMoney] < 499) return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have enough money to make that purchase.");
                        GivePlayerMoney(playerid, -499);
						PlayerInfo[playerid][pEcstasy] += 100;
						CheckpointWait[playerid] = 3;
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have purchsed 100 ecstasy tablets for $500");
					}
					case 3:
		  			{
                        if(PlayerInfo[playerid][pMoney] < 1249) return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have enough money to make that purchase.");
                        GivePlayerMoney(playerid, -1249);
						PlayerInfo[playerid][pEcstasy] += 250;
						CheckpointWait[playerid] = 3;
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have purchsed 250 ecstasy tablets for $1250");
					}
					case 4:
		  			{
                        if(PlayerInfo[playerid][pMoney] < 2499) return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have enough money to make that purchase.");
                        GivePlayerMoney(playerid, -2500);
						PlayerInfo[playerid][pEcstasy] += 500;
						CheckpointWait[playerid] = 3;
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "You have purchsed 500 ecstasy tablets for $2500");
					}
				}
			}
		}*/
		case DIALOG_PRISON:
		{
		    if(response)
			{
				switch(listitem)
				{
	          		case 0:
		  			{
		  			    SetPlayerItem(playerid, 225, 0);
		  			    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备震爆枪.");
		  			}
		  			case 1:
		  			{
		  			    SetPlayerItem(playerid, 242, 0);
		  			    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备电击枪.");
		  			}
		  			case 2:
		  			{
						SetPlayerArmour(playerid, 100.0);
		  			    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备防弹衣.");
		  			}
				}
			}
		}
		case SPRAYTAG_DIALOG_RETURN: SprayTag_Dialog(playerid, TYPE_LIST_MENU);
		case SPRAYTAG_MENU:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					SprayTag_Dialog(playerid, TYPE_LIST_TAGS_CREATE);
				}
				case 1: SprayTag_Dialog(playerid, TYPE_LIST_TAGS);
				case 2: SprayTag_Dialog(playerid, TYPE_LIST_TAGS_DELETE);
				case 3:  SprayTag_Dialog(playerid, TYPE_LIST_TAGS_FIND);
			}
		}
		case SPRAYTAG_EDIT_MAIN:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_MENU);
			if(SprayTags[playerid][listitem][_spPosX] == 0.0)
				return SendClientMessage(playerid, -1, "该槽没有保存的涂鸦.");

			spraytag_slot[playerid] = listitem;

			spraytag_bold[playerid] = SprayTags[playerid][listitem][_spBold];
			spraytag_color[playerid] = SprayTags[playerid][listitem][_spFontColor];
			format(spraytag_text[playerid], 50, SprayTags[playerid][listitem][_spText]);
			format(spraytag_font[playerid], 50, SprayTags[playerid][listitem][_spFont]);
			spraytag_size[playerid] = SprayTags[playerid][listitem][_spFontSize];
			SprayTag_Dialog(playerid, TYPE_LIST_EDIT);
		}
		case SPRAYTAG_DELETE:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_MENU);

			if(SprayTags[playerid][listitem][_spPosX] == 0.0)
				return SendClientMessage(playerid, -1, "该槽没有保存的涂鸦.");

			new
				szMessage[60]
			;

			Tags_Clear(playerid, listitem);
			format(szMessage, sizeof szMessage, "你成功删除了涂鸦ID: %i.", listitem);
			SendClientMessage(playerid, -1, szMessage);
			SprayTag_Dialog(playerid, TYPE_LIST_MENU);
		}
		case SPRAYTAG_FIND:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_MENU);

			if(SprayTags[playerid][listitem][_spPosX] == 0.0)
				return SendClientMessage(playerid, -1, "该槽没有保存的涂鸦.");

			new
				szMessage[60]
			;
			spraytag_find[playerid] = SetPlayerCheckpoint(playerid, SprayTags[playerid][listitem][_spPosX], SprayTags[playerid][listitem][_spPosY], SprayTags[playerid][listitem][_spPosZ], 3.0);
			format(szMessage, sizeof szMessage, "检查点已经连接到你的涂鸦ID: %i.", listitem);
			SendClientMessage(playerid, -1, szMessage);
		}
		case SPRAYTAG_CREATE:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_MENU);

			if(SprayTags[playerid][listitem][_spPosX] == 0.0)
			{
				spraytag_slot[playerid] = listitem;
				format(spraytag_text[playerid], 50, "Exemplo");
				format(spraytag_font[playerid], 50, "Arial");
				spraytag_color[playerid] = -1;
				spraytag_size[playerid] = 24;
				spraytag_bold[playerid] = 0;
				SprayTag_Dialog(playerid, TYPE_LIST_CREATE);
			} else SendClientMessage(playerid, -1, "该槽已经有保存的涂鸦了.");
		}
		case SPRAYTAG_EDIT_LIST:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_TAGS);

			new
				iIndex = spraytag_slot[playerid]
			;

			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, SPRAYTAG_EDIT_TEXT, DIALOG_STYLE_INPUT, "{F7EC6F}涂鸦 - {469BF0}内容", "请输入涂鸦内容", "完成", "返回");
				case 1: ShowPlayerDialog(playerid, SPRAYTAG_EDIT_FONT, DIALOG_STYLE_LIST, "{F7EC6F}涂鸦 - {469BF0}字体", "Arial\nCourier\nImpact\nPricedown\nDaredevil\nBombing\naaaiight! fat\nFrom Street Art\nGhang\nGraffogie\nGraphers Blog\nNosegrind Demo", "完成", "返回");
				case 2: ShowPlayerDialog(playerid, SPRAYTAG_EDIT_SIZE, DIALOG_STYLE_INPUT, "{F7EC6F}涂鸦 - {469BF0}大小", "请输入涂鸦大小", "完成", "返回");
				case 3: ShowPlayerDialog(playerid, SPRAYTAG_EDIT_COLOR, DIALOG_STYLE_LIST, "{F7EC6F}涂鸦 - {469BF0}颜色", "{FF0000}红色\n{04B404}绿色\n{00B5CD}高亮蓝\n{FFFF00}黄色\n{0000FF}蓝色\n{848484}灰色\n{FF00FF}粉色\n{FFFFFF}白色", "完成", "返回");
				case 4:
				{
					switch(spraytag_bold[playerid])
					{
						case 0: spraytag_bold[playerid] = 1;
						case 1: spraytag_bold[playerid] = 0;
					}
					SprayTag_Dialog(playerid, TYPE_LIST_EDIT);
				}
				case 5:
				{
					EditDynamicObject(playerid, SprayTags[playerid][iIndex][_spObject]);
					SetPVarInt(playerid, "SPRAYTAG_EDIT", 2);
				}
			}
		}
		case SPRAYTAG_EDIT_TEXT:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_EDIT);
			format(spraytag_text[playerid], 32, inputtext);
			SprayTag_Dialog(playerid, TYPE_LIST_EDIT);
		}
		case SPRAYTAG_EDIT_FONT:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_EDIT);
			format(spraytag_font[playerid], 32, inputtext);
			SprayTag_Dialog(playerid, TYPE_LIST_EDIT);
		}
		case SPRAYTAG_EDIT_SIZE:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_EDIT);
			spraytag_size[playerid] = strval(inputtext);
			SprayTag_Dialog(playerid, TYPE_LIST_EDIT);
		}
		case SPRAYTAG_EDIT_COLOR:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_EDIT);
			new iColor;
			switch(listitem)
	        {
	            case 0: iColor = HexToInt("0xFFFF0000");
	            case 1: iColor = HexToInt("0xFF04B404");
	            case 2: iColor = HexToInt("0xFF00B5CD");
	            case 3: iColor = HexToInt("0xFFFFFF00");
	            case 4: iColor = HexToInt("0xFF0000FF");
	            case 5: iColor = HexToInt("0xFF848484");
	            case 6: iColor = HexToInt("0xFFFF00FF");
	            case 7: iColor = HexToInt("0xFFFFFFFF");
	        }
			spraytag_color[playerid] = iColor;
			SprayTag_Dialog(playerid, TYPE_LIST_EDIT);
		}

		case SPRAYTAG_CREATE_MAIN:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_TAGS_CREATE);
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, SPRAYTAG_CREATE_TEXT, DIALOG_STYLE_INPUT, "涂鸦", "请输入涂鸦内容", "完成", "返回");
				case 1: ShowPlayerDialog(playerid, SPRAYTAG_CREATE_FONT, DIALOG_STYLE_LIST, "涂鸦", "Arial\nCourier\nImpact\nPricedown\nDaredevil\nBombing\naaaiight! fat\nFrom Street Art\nGhang\nGraffogie\nGraphers Blog\nNosegrind Demo", "完成", "返回");
				case 2: ShowPlayerDialog(playerid, SPRAYTAG_CREATE_SIZE, DIALOG_STYLE_INPUT, "涂鸦", "请输入涂鸦大小", "完成", "返回");
				case 3: ShowPlayerDialog(playerid, SPRAYTAG_CREATE_COLOR, DIALOG_STYLE_LIST, "涂鸦", "{FF0000}红色\n{04B404}绿色\n{00B5CD}高亮蓝\n{FFFF00}黄色\n{0000FF}蓝色\n{848484}灰色\n{FF00FF}粉色\n{FFFFFF}白色", "完成", "返回");
				case 4:
				{
					switch(spraytag_bold[playerid])
					{
						case 0: spraytag_bold[playerid] = 1;
						case 1: spraytag_bold[playerid] = 0;
					}
					SprayTag_Dialog(playerid, TYPE_LIST_CREATE);
				}
				case 5:
				{
					new
						Float:Position[3],
						szText[50],
						szFont[50]
					;

					GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
					format(szText, 50, spraytag_text[playerid]);
					format(szFont, 50, spraytag_font[playerid]);

					spraytag_object[playerid] = CreateDynamicObject(SPRAY_TAG_OBJECT, Position[0]-1.0, Position[1], Position[2], 0.0, 0.0, 0.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, SPRAY_TAG_OBJECT_DISTANCE);
					SetDynamicObjectMaterialText(spraytag_object[playerid], 0, szText, OBJECT_MATERIAL_SIZE_512x512, szFont, spraytag_size[playerid], spraytag_bold[playerid], spraytag_color[playerid], 0, 1);
					EditDynamicObject(playerid, spraytag_object[playerid]);
					SetPVarInt(playerid, "SPRAYTAG_EDIT", 1);
				}
			}
		}
		case SPRAYTAG_CREATE_TEXT:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_CREATE);
			format(spraytag_text[playerid], 50, inputtext);
			SprayTag_Dialog(playerid, TYPE_LIST_CREATE);
		}
		case SPRAYTAG_CREATE_FONT:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_CREATE);
			format(spraytag_font[playerid], 50, inputtext);
			SprayTag_Dialog(playerid, TYPE_LIST_CREATE);
		}
		case SPRAYTAG_CREATE_SIZE:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_CREATE);
			spraytag_size[playerid] = strval(inputtext);
			SprayTag_Dialog(playerid, TYPE_LIST_CREATE);
		}
		case SPRAYTAG_CREATE_COLOR:
		{
			if(!response) return SprayTag_Dialog(playerid, TYPE_LIST_CREATE);
			new iColor;
			switch(listitem)
	        {
	            case 0: iColor = HexToInt("0xFFFF0000");
	            case 1: iColor = HexToInt("0xFF04B404");
	            case 2: iColor = HexToInt("0xFF00B5CD");
	            case 3: iColor = HexToInt("0xFFFFFF00");
	            case 4: iColor = HexToInt("0xFF0000FF");
	            case 5: iColor = HexToInt("0xFF848484");
	            case 6: iColor = HexToInt("0xFFFF00FF");
	            case 7: iColor = HexToInt("0xFFFFFFFF");
	        }
			spraytag_color[playerid] = iColor;
			SprayTag_Dialog(playerid, TYPE_LIST_CREATE);
		}
		case DIALOG_GUNSHOP:
		{
			if(response)
			{
				switch(listitem)
				{
	          		case 0:
		  			{
						if(PlayerInfo[playerid][pMoney] >= 1000)
						{
			  			    new query[240], string[128];
							new GunID = 206, AmmoID = 7;
							new Serial = 5321241 + random(2343414);
						    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_items` (`owner`, `item`, `var`, `serial`, `buyer`) VALUES ('%e', %i, %i, %i, '%e')", PlayerInfo[playerid][pName], GunID, AmmoID, Serial, PlayerInfo[playerid][pName]);
							mysql_function_query(sqlHandle, query, false, "OnServerSetItem", "iii", playerid, GunID, AmmoID);
							format(string, sizeof(string), "你购买了一把9mm, 武器序列号为: %i.", Serial);
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
							GivePlayerMoneyEx(playerid, -1000);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_LIGHTRED, "你没有足够的现金购买此武器");
						}
		  			}
		  			case 1:
		  			{
						if(PlayerInfo[playerid][pMoney] >= 1750)
						{
			  			    new query[240], string[128];
							new GunID = 208, AmmoID = 7;
							new Serial = 5321241 + random(2343414);
						    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_items` (`owner`, `item`, `var`, `serial`, `buyer`) VALUES ('%e', %i, %i, %i, '%e')", PlayerInfo[playerid][pName], GunID, AmmoID, Serial, PlayerInfo[playerid][pName]);
							mysql_function_query(sqlHandle, query, false, "OnServerSetItem", "iii", playerid, GunID, AmmoID);
							format(string, sizeof(string), "你购买了一把Glock .37, 武器序列号为: %i.", Serial);
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
							GivePlayerMoneyEx(playerid, -1750);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_LIGHTRED, "你没有足够的现金购买此武器");
						}
		  			}
		  			case 2:
		  			{
						if(PlayerInfo[playerid][pMoney] >= 2500)
						{
			  			    new query[240], string[128];
							new GunID = 209, AmmoID = 4;
							new Serial = 5321241 + random(2343414);
						    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_items` (`owner`, `item`, `var`, `serial`, `buyer`) VALUES ('%e', %i, %i, %i, '%e')", PlayerInfo[playerid][pName], GunID, AmmoID, Serial, PlayerInfo[playerid][pName]);
							mysql_function_query(sqlHandle, query, false, "OnServerSetItem", "iii", playerid, GunID, AmmoID);
							format(string, sizeof(string), "你购买了一把Remington 870, 武器序列号为: %i.", Serial);
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
							GivePlayerMoneyEx(playerid, -2500);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_LIGHTRED, "你没有足够的现金购买此武器");
						}
		  			}
		  			case 3:
		  			{
						if(PlayerInfo[playerid][pMoney] >= 200)
						{
			  			    SetPlayerItem(playerid, 17, 7);
							SendClientMessage(playerid, COLOR_LIGHTRED, "你购买了一个弹夹.");
							GivePlayerMoneyEx(playerid, -200);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_LIGHTRED, "你没有足够的现金购买此物品");
						}
		  			}
		  			case 4:
		  			{
						if(PlayerInfo[playerid][pMoney] >= 200)
						{
			  			    SetPlayerItem(playerid, 19, 20);
							SendClientMessage(playerid, COLOR_LIGHTRED, "你购买了一个重型枪械弹匣.");
							GivePlayerMoneyEx(playerid, -200);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_LIGHTRED, "你没有足够的现金购买此物品");
						}
		  			}
				}
			}
		}
		case DIALOG_LAPD_MDC:
		{
			if(response)
			{

				switch(listitem)
				{
	          		case 0:
		  			{
						ShowPlayerDialog(playerid, DIALOG_SCAN_NAME, DIALOG_STYLE_INPUT, "搜索名称", "你需要输入一个名称进行搜索:" ,"确定", "取消");
		  			}
		  			case 1:
					{
		  			    ShowPlayerDialog(playerid, DIALOG_SCAN_PLATE, DIALOG_STYLE_INPUT, "搜索牌照", "你需要输入一个牌照进行搜索:" ,"确定", "取消");
		  			}
		  			case 2:
		  			{
                        ShowPlayerDialog(playerid, DIALOG_SCAN_DOOR, DIALOG_STYLE_INPUT, "搜索地址", "你需要输入一个房屋号码进行搜索:" ,"确定", "取消");
		  			}
		  			case 3:
					{
						ShowPlayerDialog(playerid, DIALOG_SCAN_TICKET, DIALOG_STYLE_INPUT, "查看罚单", "你需要输入一个名称进行搜索:" ,"确定", "取消");
					}
					case 4:
					{
                        RequestBackup(playerid);
					}
					case 5:
					{
					    if(gDashCam{playerid} == 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTRED, "Dash-cam 已被开启.");
							gDashCamCheck[playerid] = SetTimerEx ("UpdateDashCam", dcam_UpdateRate, true, "i", playerid);
							gDashCam{playerid} = 1;
							ShowDashCam(playerid);
						}
						else if(gDashCam{playerid} == 1)
				        {
				            SendClientMessage(playerid, COLOR_LIGHTRED, "Dash-cam 已被关闭.");
				            KillTimer(gDashCamCheck[playerid]);
				            gDashCamAuto{playerid} = 0;
				            gDashCam{playerid} = 0;
				            HideDashCam(playerid);
				        }
					}
					case 6:
					{
					    ShowPlayerDialog(playerid,	DIALOG_SERIAL, DIALOG_STYLE_INPUT, "搜索武器序列号", "请输入一个武器序列号:", "确定", "取消");
					}
					case 7:
					{
                        ShowPlayerDialog(playerid, DIALOG_SCAN_WARRANT, DIALOG_STYLE_INPUT, "查询案底", "请输入一个名称进行搜索:" ,"确定", "取消");
					}
					case 8:
					{
                        ShowPlayerDialog(playerid, DIALOG_LOCATE_PHONE, DIALOG_STYLE_INPUT, "追查手机", "请输入一个手机号码:" ,"确定", "取消");
					}
					case 9:
					{
                        ShowPlayerDialog(playerid, DIALOG_LOCATE_SUSPECT, DIALOG_STYLE_INPUT, "追踪嫌疑犯", "请输入一个对象名称:" ,"确定", "取消");
					}
				}
			}
		}
		case DIALOG_LOCATE_PHONE:
	    {
	     	new number = strval(inputtext);
  			if(!response)
  			{
  				SendClientMessage(playerid, COLOR_LIGHTRED, "你关闭了MDC.");
  			}
  			else
			{
				new query[128];
				if(!IsNumeric(inputtext) || strval(inputtext) < 1000000 || strval(inputtext) > 9999999) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要输入7位数的电话号码.");
				mysql_format(sqlHandle, query, sizeof(query), "SELECT `owner` FROM `samp_items` WHERE `var` = %i AND `item` >= 4 AND `item` <= 13", number);
				mysql_function_query(sqlHandle, query, true, "ScanPhoneResult", "i", playerid);
			}
		}
		case DIALOG_LOCATE_SUSPECT:
	    {
	        if(update[playerid][updating])
		    {
				TextDrawHideForPlayer(playerid, updateTD[playerid]);
				update[playerid][updating] = false;
				KillTimer(update[playerid][timer]);
			    SCM(playerid, COLOR_LIGHTRED, "你正在追查某人, 现在已被取消!");
				return 1;
			}
	     	new number = strval(inputtext);
  			if(!response)
  			{
  				SendClientMessage(playerid, COLOR_LIGHTRED, "你关闭了MDC数据库.");
  			}
  			else
			{
			    if(!IsNumeric(inputtext)) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要输入数字.");
			    TextDrawShowForPlayer(playerid,updateTD[playerid]);
			    update[playerid][updating] = true;
			    update[playerid][timer] = SetTimerEx("UpdatePlayer", 1000, 1, "ii", playerid, number);
			    SCM(playerid, COLOR_LIGHTRED, "嫌疑人已被锁定在你的小地图上!!");
			}
		}
		case DIALOG_SCAN_TICKET:
	    {
	        new string[128], query[256];
	        if(!response)
			{
	            PlayerPlaySound(playerid, 6400, 0.0, 0.0, 0.0);
			}
		    else
		    {
	            if(sscanf(inputtext, "s[128]", string)) return ShowPlayerDialog(playerid, DIALOG_SCAN_TICKET, DIALOG_STYLE_INPUT, "搜索罚单", "请输入一个名称进行搜索:" ,"确定", "取消");
				else
				{
			    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `user`, `reason`, `charge`, `date`, `issuer`, `agency`, `timestamp` FROM `samp_tickets` WHERE `user` = '%e'", string);
					mysql_function_query(sqlHandle, query, true, "OnCommandLAPDViewCitations", "i", playerid);
				}
		    }
	    }
		case DIALOG_SCAN_WARRANT:
	    {
	        new string[128], query[256];
	        if(!response)
			{
	            PlayerPlaySound(playerid, 6400, 0.0, 0.0, 0.0);
			}
		    else
		    {
	            if(sscanf(inputtext, "s[128]", string)) return ShowPlayerDialog(playerid, DIALOG_SCAN_WARRANT, DIALOG_STYLE_INPUT, "查询案底", "请输入一个名称进行搜索:" ,"确定", "取消");
				else
				{
			    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `user`, `reason`, `date`, `issuer` FROM `samp_warrants` WHERE `user` = '%e'", string);
					mysql_function_query(sqlHandle, query, true, "OnCommandLAPDViewWarrants", "i", playerid);
					SetPVarString(playerid, "SaveSeaName", string);
				}
		    }
	    }
		case DIALOG_SCAN_DOOR:
	    {
	        new
					door = strval(inputtext);

  			if(!response)
  			{
  				SendClientMessage(playerid, COLOR_LIGHTRED, "你关闭了MDC数据库.");
  			}
  			else
			{
				if(!IsNumeric(inputtext) || strval(inputtext) < 1 || strval(inputtext) > 99999) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要输入 1 到 99999 之间的门面号码.");
				DoorNumber[playerid] = door;
				ShowPlayerDialog(playerid, DIALOG_SCAN_STREET, DIALOG_STYLE_INPUT, "扫描地址", "请输入完整的地址名称:" ,"确定", "取消");
			}
	    }
	    case DIALOG_SCAN_STREET:
	    {
	        new string[128], query[256];
	        if(!response)
			{
	            PlayerPlaySound(playerid, 6400, 0.0, 0.0, 0.0);
			}
		    else
		    {
	            if(sscanf(inputtext, "s[128]", string)) return ShowPlayerDialog(playerid, DIALOG_SCAN_DOOR, DIALOG_STYLE_INPUT, "扫描地址", "你需要先输入面门号码:" ,"确定", "取消");
				else
				{
	                mysql_format(sqlHandle, query, sizeof(query), "SELECT `owner`, `x`, `y`, `z`, `street`, `housenumber`, `zip` FROM `samp_houses` WHERE `housenumber` = %i AND `street` = '%e'", DoorNumber[playerid], inputtext);
					mysql_function_query(sqlHandle, query, true, "ScanHouseResult", "i", playerid);
				}
		    }
	    }
		case DIALOG_SCAN_NAME:
	    {
	        new string[128], query[256];
	        if(!response)
			{
	            PlayerPlaySound(playerid, 6400, 0.0, 0.0, 0.0);
			}
		    else
		    {
	            if(sscanf(inputtext, "s[128]", string)) return ShowPlayerDialog(playerid, DIALOG_SCAN_NAME, DIALOG_STYLE_INPUT, "搜索名称", "请输入一个名称:" ,"确定", "取消");
				else
				{
	                mysql_format(sqlHandle, query, sizeof(query), "SELECT `user`, `age`, `drivelic`, `weaponlic`, `gender` FROM `samp_users` WHERE `user` = '%e'", string);
					mysql_function_query(sqlHandle, query, true, "ScanNameResult", "i", playerid);
				}
		    }
	    }
	    case DIALOG_SCAN_PLATE:
	    {
	        if(!response)
			{
	            PlayerPlaySound(playerid, 6400, 0.0, 0.0, 0.0);
			}
		    else
		    {
				new st[128];
	            if(sscanf(inputtext, "s[128]", st)) return ShowPlayerDialog(playerid, DIALOG_SCAN_PLATE, DIALOG_STYLE_INPUT, "{FFB300}MDC {00D0FF}搜索牌照", "请输入一个载具的牌照号码:", "确定", "取消");
				else
				{
	            	new query[100];
					mysql_format(sqlHandle, query, sizeof(query), "SELECT `owner`, `vehicle`, `color1`, `plate` FROM `samp_vehicles` WHERE `plate` = '%e'", st);
					mysql_function_query(sqlHandle, query, true, "ScanPlateResult", "i", playerid);
				}
	  	    }
	    }
	    case DIALOG_HARDWARE:
		{
			if(response)
			{
				switch(listitem)
				{
	          		case 0:
		  			{
		  			    if(PlayerInfo[playerid][pMoney] > 1499)
		  			    {
		  			        GivePlayerMoneyEx(playerid, -1500);
		  			        PlayerInfo[playerid][pMask] = 1;
		  			        SendClientMessage(playerid, COLOR_LIGHTRED, "你花费 $1500 购买了一个面具.");
		  			    }
		  			    else
		  			    {
		  			        SendClientMessage(playerid, COLOR_LIGHTRED, "你没有足够的钱购买该物品.");
		  			    }
		  			}
		  			case 1:
		  			{
		  			    if(PlayerInfo[playerid][pMoney] > 999)
		  			    {
		  			        GivePlayerMoneyEx(playerid, -1000);
                            PlayerInfo[playerid][pToolKit] += 3;
		  			        SendClientMessage(playerid, COLOR_LIGHTRED, "你购买了3个工具箱, 花费: $1000.");
		  			    }
		  			    else
		  			    {
                            SendClientMessage(playerid, COLOR_LIGHTRED, "你没有足够的钱购买该物品.");
		  			    }
		  			}
		  			case 2:
		  			{
		  			    if(PlayerInfo[playerid][pMoney] > 999)
		  			    {
		  			        GivePlayerMoneyEx(playerid, -1000);
                            PlayerInfo[playerid][pTentID] ++;
		  			        SendClientMessage(playerid, COLOR_LIGHTRED, "你花费 $1000 购买了一顶帐篷.");
		  			    }
		  			    else
		  			    {
                            SendClientMessage(playerid, COLOR_LIGHTRED, "你没有足够的钱购买该物品.");
		  			    }
		  			}
		  			case 3:
		  			{
		  			    if(PlayerInfo[playerid][pMoney] > 49)
		  			    {
		  			        GivePlayerMoneyEx(playerid, -50);
                            PlayerInfo[playerid][pBakingSoda] ++;
		  			        SendClientMessage(playerid, COLOR_LIGHTRED, "你花费 $50 购买了一瓶苏打水.");
		  			    }
		  			    else
		  			    {
                            SendClientMessage(playerid, COLOR_LIGHTRED, "你没有足够的钱购买该物品.");
		  			    }
		  			}
				}
			}
		}
		case DIALOG_INSURANCE:
		{
			if(response)
			{
				switch(listitem)
				{
	          		case 0:
		  			{
		  			    new query[128];
		  			    mysql_format(sqlHandle, query, sizeof(query), "SELECT `vehicle` FROM `samp_vehicles` WHERE `plate` = '%e'", VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vPlate]);
						mysql_function_query(sqlHandle, query, true, "OnCommandBuyInsurance", "i", playerid);
						
		  			}
		  			case 1:
		  			{
			    		if(VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vInsurance] == 1)
						{
		    				new query[240];
					    	VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vInsurance] = 0;
							mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `insurance` = %i WHERE `id` = %i", VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vInsurance], VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vID]);
							mysql_function_query(sqlHandle, query, false, "", "");
							PlayerInfo[playerid][pBank] += 500;
       						SendClientMessage(playerid, COLOR_LIGHTGREEN, "你终止了载具保险服务. 你将收到 $500 补偿款. (银行转账)");
                    	}
   						else
   						{
             				SendClientMessage(playerid, COLOR_LIGHTRED, "该车没有签订保险.");
   						}
		  			}
		  			case 2:
		  			{
           				new query[128];
		  			    mysql_format(sqlHandle, query, sizeof(query), "SELECT `vehicle` FROM `samp_vehicles` WHERE `plate` = '%e'", VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vPlate]);
						mysql_function_query(sqlHandle, query, true, "OnCommandRetrieveQuote", "i", playerid);
		  			}
				}
			}
		}
		case DIALOG_BUY_LOCK:
		{
			if(response)
			{ 
				switch(listitem)
				{
	          		case 0:
		  			{
		  			    if(PlayerInfo[playerid][pMoney] > 399)
		  			    {
		  			        if(VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType] == 0)
							{
								new query[240];
								VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType] = 1;
								mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `locktype` = %i WHERE `id` = %i", VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType], VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vID]);
								mysql_function_query(sqlHandle, query, false, "", "");
								GivePlayerMoneyEx(playerid, -400);
								SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功将一级车锁安装到了你的载具内.");
							}
							else
							{
							    SendClientMessage(playerid, COLOR_LIGHTGREEN, "该车已经有了一个更高级别的车锁.");
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你没有钱购买该物品.");
						}
		  			}
		  			case 1:
		  			{
		  			    if(PlayerInfo[playerid][pMoney] > 999)
		  			    {
		  			        if(VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType] < 2)
							{
								new query[240];
								VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType] = 2;
								mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `locktype` = %i WHERE `id` = %i", VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType], VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vID]);
								mysql_function_query(sqlHandle, query, false, "", "");
								GivePlayerMoneyEx(playerid, -1000);
								SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功将二级车锁安装到了你的载具内.");
							}
							else
							{
							    SendClientMessage(playerid, COLOR_LIGHTGREEN, "该车已经有了一个更高级别的车锁.");
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你没有钱购买该物品.");
						}
		  			}
		  			case 2:
		  			{
                        if(PlayerInfo[playerid][pMoney] > 1699)
		  			    {
		  			        if(VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType] < 3)
							{
								new query[240];
								VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType] = 3;
								mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `locktype` = %i WHERE `id` = %i", VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType], VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vID]);
								mysql_function_query(sqlHandle, query, false, "", "");
								GivePlayerMoneyEx(playerid, -1700);
								SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功将三级车锁安装到了你的载具内.");
							}
							else
							{
							    SendClientMessage(playerid, COLOR_LIGHTGREEN, "该车已经有了一个更高级别的车锁.");
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你没有钱购买该物品.");
						}
		  			}
		  			case 3:
		  			{
                        if(PlayerInfo[playerid][pMoney] > 2599)
		  			    {
		  			        if(VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType] < 4)
							{
								new query[240];
								VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType] = 4;
								mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `locktype` = %i WHERE `id` = %i", VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType], VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vID]);
								mysql_function_query(sqlHandle, query, false, "", "");
								GivePlayerMoneyEx(playerid, -2600);
								SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功将四级车锁安装到了你的载具内.");
							}
							else
							{
							    SendClientMessage(playerid, COLOR_LIGHTGREEN, "该车已经有了一个更高级别的车锁.");
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你没有钱购买该物品.");
						}
		  			}
		  			case 4:
		  			{
                        if(PlayerInfo[playerid][pMoney] > 3749)
		  			    {
		  			        if(VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType] < 5)
							{
								new query[240];
								VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType] = 5;
								mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_vehicles` SET `locktype` = %i WHERE `id` = %i", VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vLockType], VehicleInfo[GetPVarInt(playerid, "PrivateCar")][vID]);
								mysql_function_query(sqlHandle, query, false, "", "");
								GivePlayerMoneyEx(playerid, -3750);
								SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功将五级车锁安装到了你的载具内.");
							}
							else
							{
							    SendClientMessage(playerid, COLOR_LIGHTGREEN, "该车已经有了一个更高级别的车锁.");
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你没有钱购买该物品.");
						}
		  			}
				}
			}
		}
		case DIALOG_COCAINE:
		{
			if(response)
			{
				switch(listitem)
				{
	          		case 0:
		  			{
                        ShowPlayerDialog(playerid,DIALOG_BUY_COCAINE, DIALOG_STYLE_INPUT, "菜单", "当前可卡因价格为$20/克." ,"购买", "取消");
		  			}
		  			case 1:
		  			{
						ShowPlayerDialog(playerid,DIALOG_BUY_ECSTASY, DIALOG_STYLE_INPUT, "菜单", "当前天使粉价格为$5/包." ,"购买", "取消");
					}
					case 2:
		  			{
						ShowPlayerDialog(playerid,DIALOG_BUY_HEROIN, DIALOG_STYLE_INPUT, "菜单", "当前海洛因价格为$20/克." ,"购买", "取消");
					}
				}
			}
		}
		case DIALOG_SERIAL:
		{
			new
				query[128],
					serial = strval(inputtext);

  			if(!response)
  			{
  				
  			}
  			else
			{
				if(!IsNumeric(inputtext) || strval(inputtext) < 10000 || strval(inputtext) > 1000000) return SendClientMessage(playerid, COLOR_LIGHTRED, "请输入 10000 到 100000 之间的序列号.");
				mysql_format(sqlHandle, query, sizeof(query), "SELECT `serial`, `buyer` FROM `samp_items` WHERE `serial` = %i", serial);
				mysql_function_query(sqlHandle, query, true, "OnCommandSerialOwner", "i", playerid);
				
			}
		}
		case DIALOG_SETFREQ:
		{
			new
				string[128],
					cocaine = strval(inputtext);

  			if(!response)
  			{
  				
  			}
  			else
			{
				if(!IsNumeric(inputtext) || strval(inputtext) < 1 || strval(inputtext) > 3) return SendClientMessage(playerid, COLOR_LIGHTRED, "对讲机频率只能在1-3之间.");
				PlayerInfo[playerid][pFreq] = cocaine;
				format(string, sizeof(string), "你将部门对讲机频率设置到 %i.", cocaine);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
			}
		}
		case DIALOG_BUY_COCAINE:
		{
			new
				string[128],
					cocaine = strval(inputtext);

  			if(!response)
  			{
  				
  			}
  			else
			{
				if(!IsNumeric(inputtext) || strval(inputtext) < 9 || strval(inputtext) > 1000) return SendClientMessage(playerid, COLOR_LIGHTRED, "你只能购买毒品数量 10-1000 之间.");
			  	if(PlayerInfo[playerid][pMoney] >= cocaine * 20)
			  	{
				  	PlayerInfo[playerid][pCocaine] += cocaine;
					GivePlayerMoneyEx(playerid, -cocaine * 20);
					format(string, sizeof(string), "你购买了 '%i' 克可卡因, 花费: '$%i'.", cocaine, cocaine * 20);
					SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
  				}
  				else
  				{
			  		format(string, sizeof(string), "你没有钱购买 '%i' 克可卡因, 要价: '$%i'.", cocaine, cocaine * 20);
					SendClientMessage(playerid, COLOR_LIGHTGREEN, string);

				}
			}
			return 1;
		}
		case DIALOG_BUY_ECSTASY:
		{
			new
				string[128],
					ecstasy = strval(inputtext);

  			if(!response)
  			{
  				
  			}
  			else
			{
				if(!IsNumeric(inputtext) || strval(inputtext) < 9 || strval(inputtext) > 1000) return SendClientMessage(playerid, COLOR_LIGHTRED, "你只能购买毒品数量 10-1000 之间.");
			  	if(PlayerInfo[playerid][pMoney] >= ecstasy * 5)
			  	{
				  	PlayerInfo[playerid][pEcstasy] += ecstasy;
					GivePlayerMoneyEx(playerid, -ecstasy * 5);
					format(string, sizeof(string), "你购买了 '%i' 袋天使粉, 花费: '$%i'.", ecstasy, ecstasy * 5);
					SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
  				}
  				else
  				{
			  		format(string, sizeof(string), "你没有钱购买 '%i' 袋天使粉, 要价: '$%i'.", ecstasy, ecstasy * 5);
					SendClientMessage(playerid, COLOR_LIGHTGREEN, string);

				}
			}
			return 1;
		}
		case DIALOG_BUY_HEROIN:
		{
			new
				string[128],
					heroin = strval(inputtext);

  			if(!response)
  			{
  				
  			}
  			else
			{
				if(!IsNumeric(inputtext) || strval(inputtext) < 9 || strval(inputtext) > 1000) return SendClientMessage(playerid, COLOR_LIGHTRED, "你只能购买毒品数量 10-1000 之间.");
			  	if(PlayerInfo[playerid][pMoney] >= heroin * 20)
			  	{
				  	PlayerInfo[playerid][pHeroin] += heroin;
					GivePlayerMoneyEx(playerid, -heroin * 20);
					format(string, sizeof(string), "你购买了 '%i' 克海洛因, 花费: '$%i'.", heroin, heroin * 20);
					SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
  				}
  				else
  				{
			  		format(string, sizeof(string), "你没有钱购买 '%i' 克海洛因, 要价: '$%i'.", heroin, heroin * 20);
					SendClientMessage(playerid, COLOR_LIGHTGREEN, string);

				}
			}
			return 1;
		}
		case DIALOG_LOCATIONS:
		{
		    if(response)
			{
			    new message[100];
			    format(message, 100, "你成功标记 {FF6347}%s{FFFFFF} 地点(雷达上的标记点).",Locs[listitem][locName]);
			    SendClientMessage(playerid, -1, message);
			    SendClientMessage(playerid, -1, "如果你想移除该点, 请输入 {FF6347}/removecp{FFFFFF}.");
                //PlayerInfo[playerid][pLocations] = SetPlayerRaceCheckpoint(PlayerInfo[playerid][pShowtheway_ID], 2, Locs[listitem][locX], Locs[listitem][locY], Locs[listitem][locZ], 0, 0, 0, 3.0);
                SetPlayerMapIcon(playerid, XB_TARGET_MAPICON, Locs[listitem][locX], Locs[listitem][locY], Locs[listitem][locZ], 41, 0, MAPICON_GLOBAL);
			}
		}
		case DIALOG_CRACK:
		{
			if(response)
			{
				switch(listitem)
				{
	          		case 0:
		  			{
		  			    if(PlayerInfo[playerid][pCocaine] > 4)
						{
						    new string[128];
						    if(PlayerInfo[playerid][pBakingSoda] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你至少需要一瓶苏打水.");
							PlayerInfo[playerid][pCocaine] -= 5;
							PlayerInfo[playerid][pCrack] += 20;
			                SendClientMessage(playerid, COLOR_LIGHTGREEN, "你使用 '5' 克可卡因加工为 '20' 克快克.");
			                SendClientMessage(playerid, COLOR_LIGHTGREEN, "你现在可以使用 '/givedrug' 给予他人或者 '/usedrug' 使用毒品.");
			                format(string, sizeof(string), "** %s 使用可卡因和苏打水进行快克加工.", GetNameWithSpace(playerid, 1));
	    					ProxDetector(12, playerid, string, COLOR_PINK);
						}
						else
						{
			                SendClientMessage(playerid, COLOR_LIGHTRED, "你需要至少5克可卡因.");
						}
					}
				}
			}
		}
		case DIALOG_CONVERT:
		{
			if(response)
			{
				switch(listitem)
				{
	          		case 0:
		  			{
           				if(PlayerInfo[playerid][pRawOpium] > 4)
						{
							new string[128];
							PlayerInfo[playerid][pRawOpium] -= 5;
							PlayerInfo[playerid][pHeroin] += 12;
			                SendClientMessage(playerid, COLOR_LIGHTGREEN, "你使用 '5' 克鸦片加工为 '12' 克海洛因.");
			                SendClientMessage(playerid, COLOR_LIGHTGREEN, "你现在可以使用 '/givedrug' 给予他人或者 '/usedrug' 使用毒品.");
			                format(string, sizeof(string), "** %s 使用鸦片开始加工为海洛因.", GetNameWithSpace(playerid, 1));
	    					ProxDetector(12, playerid, string, COLOR_PINK);
						}
						else
						{
			                SendClientMessage(playerid, COLOR_LIGHTRED, "你需要至少5克鸦片.");
						}
		  			}
				}
			}
		}
	    case DIALOG_TRAPHOUSE:
		{
			if(response)
			{
				switch(listitem)
				{
	          		case 0:
		  			{
		  			    if(PlayerInfo[playerid][pMoney] < 99) return SendClientMessage(playerid, COLOR_LIGHTRED, "你至少需要100$才能使用该指令.");
		  			    if(PlayerInfo[playerid][pWeedSeeds] == 3) return SendClientMessage(playerid, COLOR_LIGHTRED, "你只能最大拥有3颗大麻种子.");
						PlayerInfo[playerid][pWeedSeeds] ++;
      					SendClientMessage(playerid, COLOR_GREY, "你花费了 '$100' 购买了一颗大麻种子.");
						GivePlayerMoneyEx(playerid, -100);

		  			}
		  			case 1:
		  			{
		  			    if(PlayerInfo[playerid][pMoney] < 199) return SendClientMessage(playerid, COLOR_LIGHTRED, "你至少需要200$才能使用该指令.");
                        if(PlayerInfo[playerid][pOpiumSeeds] == 3) return SendClientMessage(playerid, COLOR_LIGHTRED, "你只能最大拥有3颗罂粟种子.");
						PlayerInfo[playerid][pOpiumSeeds] ++;
      					SendClientMessage(playerid, COLOR_GREY, "你花费了 '$100' 购买了一颗罂粟种子.");
						GivePlayerMoneyEx(playerid, -200);
					}
					case 2:
		  			{
		  			    if(PlayerInfo[playerid][pMoney] < 49) return SendClientMessage(playerid, COLOR_LIGHTRED, "你至少需要50$才能使用该指令.");
                        if(PlayerInfo[playerid][pFertilizer] == 3) return SendClientMessage(playerid, COLOR_LIGHTRED, "你只能最大拥有3袋化肥.");
						PlayerInfo[playerid][pFertilizer] ++;
      					SendClientMessage(playerid, COLOR_GREY, "你花费了 '$100' 购买了一袋化肥.");
						GivePlayerMoneyEx(playerid, -50);
					}
				}
			}
		}
	    case DIALOG_COMMANDS_ADMIN: {
			if(response) {
				if(PlayerInfo[playerid][pModLevel] > 0 && PlayerInfo[playerid][pAdminlevel] > 0) {
	  				ShowPlayerDialog(playerid, DIALOG_COMMANDS_ADMIN2, DIALOG_STYLE_MSGBOX, "管理员指令", GetHelpDialog(1), "下一页", "关闭");
				} else if(PlayerInfo[playerid][pModLevel] == 0) {
				    if(PlayerInfo[playerid][pAdminlevel] > 3) {
	                	ShowPlayerDialog(playerid, DIALOG_COMMANDS_ADMIN2, DIALOG_STYLE_MSGBOX, "管理员指令", GetHelpDialog(2), "下一页", "关闭");
					} else {
					    ShowPlayerDialog(playerid, DIALOG_COMMANDS_ADMIN2, DIALOG_STYLE_MSGBOX, "管理员指令", GetHelpDialog(2), "关闭", "");
					}
				}
			}
		}
		case DIALOG_COMMANDS_ADMIN2: {
		    if(response) {
				if(PlayerInfo[playerid][pModLevel] > 0) {
				    if(PlayerInfo[playerid][pAdminlevel] > 3) {
		            	ShowPlayerDialog(playerid, DIALOG_COMMANDS_LADMIN, DIALOG_STYLE_MSGBOX, "管理员指令", GetHelpDialog(2), "下一页", "关闭");
					} else {
		                ShowPlayerDialog(playerid, DIALOG_COMMANDS_LADMIN, DIALOG_STYLE_MSGBOX, "管理员指令", GetHelpDialog(2), "关闭", "");
					}
				} else {
				    if(PlayerInfo[playerid][pAdminlevel] > 4) {
		   				ShowPlayerDialog(playerid, DIALOG_COMMANDS_LADMIN, DIALOG_STYLE_MSGBOX, "管理员指令", GetHelpDialog(3), "下一页", "关闭");
		            } else if(PlayerInfo[playerid][pAdminlevel] == 2) {
		                ShowPlayerDialog(playerid, DIALOG_COMMANDS_LADMIN, DIALOG_STYLE_MSGBOX, "管理员指令", GetHelpDialog(3), "关闭", "");
					}
				}
			}
		}
		case DIALOG_COMMANDS_LADMIN: {
		    if(response) {
		        if(PlayerInfo[playerid][pModLevel] > 0) {
				    if(PlayerInfo[playerid][pAdminlevel] > 4) {
		            	ShowPlayerDialog(playerid, DIALOG_COMMANDS_ADMIN_FINISH, DIALOG_STYLE_MSGBOX, "管理员指令", GetHelpDialog(3), "下一页", "关闭");
					} else if(PlayerInfo[playerid][pAdminlevel] == 2) {
		                ShowPlayerDialog(playerid, DIALOG_COMMANDS_ADMIN_FINISH, DIALOG_STYLE_MSGBOX, "管理员指令", GetHelpDialog(3), "关闭", "");
					}
				} else {
					ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, "管理员指令", GetHelpDialog(4), "关闭", "");
				}
			}
		}
		case DIALOG_COMMANDS_ADMIN_FINISH: {
			if(response) {
			    if(PlayerInfo[playerid][pAdminlevel] > 5) {
	            	ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, "管理员指令", GetHelpDialog(4), "关闭", "");
				}
			}
		}
		case DIALOG_COMMANDS_HELP: {
		    if(response) {
	        	ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, "帮助中心: 常规指令", GetHelpDialog(6), "关闭", "");
			}
		}
		case DIALOG_CLOSE: {
		    return 1;
		}
		case DIALOG_CK:
		{
			if(response)
			{
				new user = GetPVarInt(playerid, "CharacterKill");
				if(IsPlayerConnected(user)) {
				    new query[260];
				    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `bank` = %i, `money` = 0, `pSavings` = 0, `faction` = 0, `rank` = 0, `renthouse` = 0, `health` = 100.0, `armour` = 0.0, `weaponlic` = 0, `job` = 0, `jobtime` = 0, `badge` = 0, `pFine` = 0 WHERE `user` = '%e'", floatround((PlayerInfo[user][pBank] + PlayerInfo[user][pMoney] + PlayerInfo[user][pSavings]) * 0.25), PlayerInfo[user][pName]);
				    mysql_function_query(sqlHandle, query, false, "", "");
				    RemovePlayerFromFaction(user);
				    PlayerInfo[user][pBank] = floatround((PlayerInfo[user][pBank] + PlayerInfo[user][pMoney] + PlayerInfo[user][pSavings]) * 0.25);
				    ResetPlayerMoney(user);
				    PlayerInfo[user][pMoney] = 0;
				    PlayerInfo[user][pSavings] = 0;
				    PlayerInfo[user][pJob] = 0;
				    PlayerInfo[user][pJobTime] = 0;
				    PlayerInfo[user][pFaction] = 0;
				    PlayerInfo[user][pRank] = 0;
				    PlayerInfo[user][pBadge] = 0;
				    PlayerInfo[user][pRentHouse] = 0;
				    PlayerInfo[user][pWeaponLic] = 0;
				    PlayerInfo[user][pFine] = 0;
				    SetPlayerHealthAndLimit(user, 100.0);
				    SetPlayerArmourAndLimit(user, 0.0);
				    for(new h = 0; h != MAX_HOUSES; h++) {
						if(!isnull(HouseInfo[h][hOwner]) && strcmp(HouseInfo[h][hOwner], PlayerInfo[user][pName]) == 0) {
							format(HouseInfo[h][hOwner], MAX_PLAYER_NAME, "%s", EOS);
						}
					}

					for(new b = 0; b != MAX_BUSINESSES; b++) {
						if(!isnull(BusinessInfo[b][bOwner]) && strcmp(BusinessInfo[b][bOwner], PlayerInfo[user][pName]) == 0) {
							format(BusinessInfo[b][bOwner], MAX_PLAYER_NAME, "%s", EOS);
						}
					}
				    
				    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `owner` = NULL WHERE `owner` = '%e'", PlayerInfo[user][pName]);
				    mysql_function_query(sqlHandle, query, false, "", "");
				    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_businesses` SET `owner` = NULL WHERE `owner` = '%e'", PlayerInfo[user][pName]);
					mysql_function_query(sqlHandle, query, false, "", "");
					mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_charges` WHERE `user` = '%e'", PlayerInfo[user][pName]);
					mysql_function_query(sqlHandle, query, false, "", "");
					mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_tickets` WHERE `user` = '%e'", PlayerInfo[user][pName]);
					mysql_function_query(sqlHandle, query, false, "", "");
					for(new v = 0; v != MAX_VEHICLES; v++) {
						if(!isnull(VehicleInfo[v][vOwner]) && strcmp(VehicleInfo[v][vOwner], PlayerInfo[user][pName]) == 0) {
							SetVehicleDead(v);
						}
					}
					
					mysql_format(sqlHandle, query, sizeof(query), "SELECT `id` FROM `samp_vehicles` WHERE `owner` = '%e'", PlayerInfo[user][pName]);
					mysql_function_query(sqlHandle, query, true, "OnCharacterKill", "ii", playerid, user);
				} else {
					SendClientMessage(playerid, COLOR_GREY, "对方不在线.");
				}
			}
		}
		case DIALOG_BOOMBOX: {
			if(response) {
			    new boombox = GetPVarInt(playerid, "BoomboxID");
				switch(listitem) {
	          		case 0: {
				        switch(boomboxes[boombox][boomRadio]) {
				        	case 0: {
			  					new list[520];
			  					for(new i; i != sizeof(radiochannels); i++) {
									if(isnull(list)) {
										format(list, sizeof(list), "%s\n", radiochannels[i][rName]);
									} else {
	                                    format(list, sizeof(list), "%s%s\n", list, radiochannels[i][rName]);
									}
								}

        						ShowPlayerDialog(playerid, DIALOG_BOOMBOX_SELECTRADIO, DIALOG_STYLE_LIST, "{FF9900}音响", list, "播放", "取消");
							}
							default: {
							    new	msg[65];
							    format(boomboxes[boombox][boomRadio], 200, "%s", EOS);
	                            format(msg, sizeof(msg), "** > %s 将音响关闭.", GetNameWithSpace(playerid, 1));
								SendClientMessage(playerid, COLOR_PINK, msg);
								strdel(msg, 3, 4);
								SetPlayerChatBubble(playerid, msg, COLOR_GREEN, 12.0, 10000);
							    foreach(new i : Player) {
							        if(PlayerInfo[i][pBoombox] == boombox) {
							    		StopAudioStreamForPlayer(i);
							    		PlayerInfo[i][pBoombox] = -1;
									}
								}
							}
						}
				    }
	       			case 1: {
	                    switch(boomboxes[boombox][boomRadio]) {
				        	case 0: {
								SendClientMessage(playerid, COLOR_GREY, "音响被关闭了.");
								ShowPlayerDialog(playerid, DIALOG_BOOMBOX, DIALOG_STYLE_LIST, "{FF9900}音响", "打开音响\n切换电台\n使用外部URL", "选择", "取消");
							}
							default: {
							    new list[520];
			  					for(new i; i != sizeof(radiochannels); i++) {
									if(isnull(list)) {
										format(list, sizeof(list), "%s\n", radiochannels[i][rName]);
									} else {
	                                    format(list, sizeof(list), "%s%s\n", list, radiochannels[i][rName]);
									}
								}

							    ShowPlayerDialog(playerid, DIALOG_BOOMBOX_SELECTRADIO, DIALOG_STYLE_LIST, "{FF9900}音响", list, "播放", "取消");
							}
						}
					}
				    case 2: {
				        ShowPlayerDialog(playerid, DIALOG_BOOMBOX_RADIOLINK, DIALOG_STYLE_INPUT, "{FF9900}音响", "请输入一个URL:", "提交", "取消");
				    }
				}
			}
		}
		case DIALOG_BOOMBOX_SELECTRADIO: {
			if(response) {
			    new boombox = GetPVarInt(playerid, "BoomboxID"),
			        msg[115];
			        
			    format(msg, sizeof(msg), "** > %s 将音响电台设置为 [%s].", GetNameWithSpace(playerid, 1), radiochannels[listitem][rName]);
				SendClientMessage(playerid, COLOR_PINK, msg);
				strdel(msg, 3, 4);
				SetPlayerChatBubble(playerid, msg, COLOR_GREEN, 12.0, 10000);
				format(boomboxes[boombox][boomRadio], 200, radiochannels[listitem][rLink]);
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
				foreach(new i : Player) {
					if(PlayerInfo[i][pBoombox] == boombox) {
						PlayAudioStreamForPlayer(i, radiochannels[listitem][rLink], boomboxes[boombox][boomX], boomboxes[boombox][boomY], boomboxes[boombox][boomZ], 35.0, 1);
					}
		        }
			}
		}
		case DIALOG_BOOMBOX_RADIOLINK: {
			if(response) {
				if(strlen(inputtext) > 0) {
		            new boombox = GetPVarInt(playerid, "BoomboxID"),
						msg[65];

					format(msg, sizeof(msg), "** > %s 将音响打开.", GetNameWithSpace(playerid, 1));
					SendClientMessage(playerid, COLOR_PINK, msg);
					strdel(msg, 3, 4);
					SetPlayerChatBubble(playerid, msg, COLOR_GREEN, 12.0, 10000);
					format(boomboxes[boombox][boomRadio], 200, "%s", inputtext);
					ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
		            foreach(new i : Player) {
						if(PlayerInfo[i][pBoombox] == boombox) {
		            		PlayAudioStreamForPlayer(i, inputtext, boomboxes[boombox][boomX], boomboxes[boombox][boomY], boomboxes[boombox][boomZ], 35.0, 1);
						}
					}
		        } else {
		            SendClientMessage(playerid, COLOR_GREY, "你需要输入一个URL...");
		            ShowPlayerDialog(playerid, DIALOG_BOOMBOX_RADIOLINK, DIALOG_STYLE_INPUT, "{FF9900}音响", "请输入一个URL:", "提交", "取消");
		        }
			}
		}
		case DIALOG_FACTION_DUTY: {
			if(response) {
				new dutySkin = GetPVarInt(playerid, "DutySkinAfterRelog");
				switch(PlayerInfo[playerid][pFaction]) {
				    case 1: {
						SetPVarInt(playerid, "LAPDDuty", PlayerInfo[playerid][pSkin]);
					}
					case 2: {
					    SetPVarInt(playerid, "LSFDDuty", PlayerInfo[playerid][pSkin]);
					}
					case 3: {
					    SetPVarInt(playerid, "SanDuty", PlayerInfo[playerid][pSkin]);
					}
				}
				
				SetPlayerSkin(playerid, dutySkin);
	            PlayerInfo[playerid][pSkin] = dutySkin;
	            // UpdatePlayerHandcuffs(playerid);
				UpdatePlayerColor(playerid);
			} else {
				SetPVarInt(playerid, "DutySkinAfterRelog", 0);
			}
		}
		case DIALOG_LAPD_CHARGE: {
		    if(response) {
		        if(strlen(inputtext) != 0) {
		            new query[240],
						name[MAX_PLAYER_NAME];

		            GetPVarString(playerid, "LAPDCharge", name, sizeof(name));
		            mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_warrants` (`user`, `reason`, `date`, `issuer`) VALUES ('%e', '%e', NOW(), '%e')", name, inputtext, PlayerInfo[playerid][pName]);
		            mysql_function_query(sqlHandle, query, false, "", "");
		            new len = strlen(inputtext);
					if(len + MAX_PLAYER_NAME + 15 + 30 + MAX_PLAYER_NAME > 128) {
						new buffer[128];
					    strmid(buffer, inputtext, 0, len - MAX_PLAYER_NAME - 15 - 30 - MAX_PLAYER_NAME - 4);
					    format(buffer, sizeof(buffer), "** %s %s 指控 %s: %s ...", GetFactionRank(playerid), GetNameWithSpace(playerid, 1), GetNameWithSpaceEx(name), buffer);
					    strdel(inputtext, 0, len - MAX_PLAYER_NAME - 15 - 30 - MAX_PLAYER_NAME - 4);
						format(query, sizeof(query), "** ... %s", inputtext);
				   		foreach(new i : Player) {
							if(PlayerInfo[i][pFaction] == 1) {
								SendClientMessage(i, COLOR_COPBLUE, buffer);
								SendClientMessage(i, COLOR_COPBLUE, query);
							}
						}
					} else {
				        format(query, sizeof(query), "** %s %s 指控 %s: %s", GetFactionRank(playerid), GetNameWithSpace(playerid, 1), GetNameWithSpaceEx(name), inputtext);
						foreach(new i : Player) {
							if(PlayerInfo[i][pFaction] == 1) {
								SendClientMessage(i, COLOR_COPBLUE, query);
							}
						}
					}
		        } else {
		            SendClientMessage(playerid, COLOR_GREY, "你需要输入一个原因.");
		            ShowPlayerDialog(playerid, DIALOG_LAPD_CHARGE, DIALOG_STYLE_INPUT, "{FF9900}LAPD", "如果你要指控一个人, 请输入原因:", "确定", "取消");
		        }
		    }
		}
		case DIALOG_BUSINESS_ITEMS_CLOTHES_HAT: {
		    if(response) {
		        new check = -1;
				for(new i = 0; i != sizeof(items); i++) {
				    if(items[i][itemClothingStore] != 0 && items[i][iIdx] == IDX_HAT_ITEM) {
				        check++;
				        if(check == listitem) {
				        	new business = GetPlayerVirtualWorld(playerid);
							if(PlayerInfo[playerid][pMoney] >= items[i][itemPrice]) {
				    			if(items[i][storable] == 0 && PlayerInfo[playerid][pItemType][0] != 0) {
									SendClientMessage(playerid, COLOR_GREY, "你无法携带该物品, 因为你的手上已经有其他物品了.");
								} else {
								    SetPlayerItem(playerid, i, 0);
								    GiveBusinessMoney(business, (items[i][itemPrice] > 75) ? (floatround(items[i][itemPrice] * 0.75)) : items[i][itemPrice]);
								    GivePlayerMoneyEx(playerid, -items[i][itemPrice]);
								    SendClientMessage(playerid, COLOR_WHITE, "你购买了一个新物品, 请按下 (键位: N) 操作.");
								}
							} else {
								SendClientMessage(playerid, COLOR_GREY, "你没有钱购买该物品.");
							}
							
							break;
						}
				    }
				}
			}
		}
		case DIALOG_BUSINESS_ITEMS_CLOTHES_WATCHES: {
		    if(response) {
		        new check = -1;
				for(new i = 0; i != sizeof(items); i++) {
				    if(items[i][itemClothingStore] != 0 && items[i][iIdx] == IDX_WATCH_ITEM) {
				        check++;
				        if(check == listitem) {
				        	new business = GetPlayerVirtualWorld(playerid);
							if(PlayerInfo[playerid][pMoney] >= items[i][itemPrice]) {
				    			if(items[i][storable] == 0 && PlayerInfo[playerid][pItemType][0] != 0) {
									SendClientMessage(playerid, COLOR_GREY, "你无法携带该物品, 因为你的手上已经有其他物品了.");
								} else {
								    SetPlayerItem(playerid, i, 0);
								    GiveBusinessMoney(business, (items[i][itemPrice] > 75) ? (floatround(items[i][itemPrice] * 0.75)) : items[i][itemPrice]);
								    GivePlayerMoneyEx(playerid, -items[i][itemPrice]);
								    SendClientMessage(playerid, COLOR_WHITE, "你购买了一个新物品, 请按下 (键位: N) 操作.");
								}
							} else {
								SendClientMessage(playerid, COLOR_GREY, "你没有钱购买该物品.");
							}

							break;
						}
				    }
				}
			}
		}
		case DIALOG_BUSINESS_ITEMS_CLOTHES_GLASSES: {
		    if(response) {
		        new check = -1;
				for(new i = 0; i != sizeof(items); i++) {
				    if(items[i][itemClothingStore] != 0 && items[i][iIdx] == IDX_GLASSES_ITEM) {
				        check++;
				        if(check == listitem) {
				        	new business = GetPlayerVirtualWorld(playerid);
							if(PlayerInfo[playerid][pMoney] >= items[i][itemPrice]) {
				    			if(items[i][storable] == 0 && PlayerInfo[playerid][pItemType][0] != 0) {
									SendClientMessage(playerid, COLOR_GREY, "你无法携带该物品, 因为你的手上已经有其他物品了.");
								} else {
								    SetPlayerItem(playerid, i, 0);
								    GiveBusinessMoney(business, (items[i][itemPrice] > 75) ? (floatround(items[i][itemPrice] * 0.75)) : items[i][itemPrice]);
								    GivePlayerMoneyEx(playerid, -items[i][itemPrice]);
								    SendClientMessage(playerid, COLOR_WHITE, "你购买了一个新物品, 请按下 (键位: N) 操作.");
								}
							} else {
								SendClientMessage(playerid, COLOR_GREY, "你没有钱购买该物品.");
							}

							break;
						}
				    }
				}
			}
		}
		case DIALOG_BUSINESS_ITEMS_CLOTHES_BANDANA: {
		    if(response) {
		        new check = -1;
				for(new i = 0; i != sizeof(items); i++) {
				    if(items[i][itemClothingStore] != 0 && items[i][iIdx] == IDX_BANDANA_ITEM) {
				        check++;
				        if(check == listitem) {
				        	new business = GetPlayerVirtualWorld(playerid);
							if(PlayerInfo[playerid][pMoney] >= items[i][itemPrice]) {
				    			if(items[i][storable] == 0 && PlayerInfo[playerid][pItemType][0] != 0) {
									SendClientMessage(playerid, COLOR_GREY, "你无法携带该物品, 因为你的手上已经有其他物品了.");
								} else {
								    SetPlayerItem(playerid, i, 0);
								    GiveBusinessMoney(business, (items[i][itemPrice] > 75) ? (floatround(items[i][itemPrice] * 0.75)) : items[i][itemPrice]);
								    GivePlayerMoneyEx(playerid, -items[i][itemPrice]);
								    SendClientMessage(playerid, COLOR_WHITE, "你购买了一个新物品, 请按下 (键位: N) 操作.");
								}
							} else {
								SendClientMessage(playerid, COLOR_GREY, "你没有钱购买该物品.");
							}

							break;
						}
				    }
				}
			}
		}
		case DIALOG_BUSINESS_ITEMS_CLOTHES: {
			if(response) {
			    format(gVar3000, 3000, "%s", EOS);
				switch(listitem) {
					case 0: { // Hats and Helmets
					    for(new i = 0; i != sizeof(items); i++) {
							if(items[i][itemClothingStore] != 0 && items[i][iIdx] == IDX_HAT_ITEM) {
								if(isnull(gVar3000)) {
									format(gVar3000, 3000, "%s ($%i)", items[i][itemName], items[i][itemPrice]);
								} else {
								    format(gVar3000, 3000, "%s\n%s ($%i)", gVar3000, items[i][itemName], items[i][itemPrice]);
								}
							}
						}
						
						ShowPlayerDialog(playerid, DIALOG_BUSINESS_ITEMS_CLOTHES_HAT, DIALOG_STYLE_LIST, "{FF9900}产品", gVar3000, "购买", "取消");
					}
					case 1: { // Watches
					    for(new i = 0; i != sizeof(items); i++) {
							if(items[i][itemClothingStore] != 0 && items[i][iIdx] == IDX_WATCH_ITEM) {
								if(isnull(gVar3000)) {
									format(gVar3000, 3000, "%s ($%i)", items[i][itemName], items[i][itemPrice]);
								} else {
								    format(gVar3000, 3000, "%s\n%s ($%i)", gVar3000, items[i][itemName], items[i][itemPrice]);
								}
							}
						}

						ShowPlayerDialog(playerid, DIALOG_BUSINESS_ITEMS_CLOTHES_WATCHES, DIALOG_STYLE_LIST, "{FF9900}产品", gVar3000, "购买", "取消");
					}
					case 2: { // Glasses
					    for(new i = 0; i != sizeof(items); i++) {
							if(items[i][itemClothingStore] != 0 && items[i][iIdx] == IDX_GLASSES_ITEM) {
								if(isnull(gVar3000)) {
									format(gVar3000, 3000, "%s ($%i)", items[i][itemName], items[i][itemPrice]);
								} else {
								    format(gVar3000, 3000, "%s\n%s ($%i)", gVar3000, items[i][itemName], items[i][itemPrice]);
								}
							}
						}

						ShowPlayerDialog(playerid, DIALOG_BUSINESS_ITEMS_CLOTHES_GLASSES, DIALOG_STYLE_LIST, "{FF9900}产品", gVar3000, "购买", "取消");
					}
					case 3: { // Bandana
					    for(new i = 0; i != sizeof(items); i++) {
							if(items[i][itemClothingStore] != 0 && items[i][iIdx] == IDX_BANDANA_ITEM) {
								if(isnull(gVar3000)) {
									format(gVar3000, 3000, "%s ($%i)", items[i][itemName], items[i][itemPrice]);
								} else {
								    format(gVar3000, 3000, "%s\n%s ($%i)", gVar3000, items[i][itemName], items[i][itemPrice]);
								}
							}
						}

						ShowPlayerDialog(playerid, DIALOG_BUSINESS_ITEMS_CLOTHES_BANDANA, DIALOG_STYLE_LIST, "{FF9900}产品", gVar3000, "购买", "取消");
					}
				}
				
				format(gVar3000, 3000, "%s", EOS);
			}
		}
		case DIALOG_BUSINESS_ITEMS: {
			if(response) {
			    new business = GetPlayerVirtualWorld(playerid),
					interior = BusinessInfo[business][bInt];
					
				if(PlayerInfo[playerid][pMoney] >= items[businessItems[interior][listitem]][itemPrice]) {
				    if(items[businessItems[interior][listitem]][storable] == 0 && PlayerInfo[playerid][pItemType][0] != 0) {
						SendClientMessage(playerid, COLOR_GREY, "你无法携带该物品, 因为你的手上已经有其他物品了.");
					} else {
					    new var;
					    if(items[businessItems[interior][listitem]][itemType] == ITEM_WEAPON) {
							var = WeaponData[items[businessItems[interior][listitem]][weaponID]][ammoSize];
						} else if(businessItems[interior][listitem] >= 4 && businessItems[interior][listitem] <= 13) {
							var = GetNextPhoneNumber();
						} else if(businessItems[interior][listitem] == 17) {
							var = 7;
						} else if(businessItems[interior][listitem] == 18) {
							var = 30;
						} else if(businessItems[interior][listitem] == 19) {
							var = 10;
						} else if(businessItems[interior][listitem] == 20) {
							var = 20;
						} else if(businessItems[interior][listitem] == 3) {
							var = 20;
						}
						else if(businessItems[interior][listitem] == 14)
						{
						    var = 15;
						}
						else if(businessItems[interior][listitem] == 28 || (businessItems[interior][listitem] >= 243 && businessItems[interior][listitem] <= 249))
						{
						    GiveBusinessMoney(business, (items[businessItems[interior][listitem]][itemPrice] > 75) ? (floatround(items[businessItems[interior][listitem]][itemPrice] * 0.75)) : items[businessItems[interior][listitem]][itemPrice]);
					    	GivePlayerMoneyEx(playerid, -items[businessItems[interior][listitem]][itemPrice]);
						    SendClientMessage(playerid, COLOR_LIGHTRED, "你从产业菜单内购买了一瓶饮品. (按下F饮品将会消失)");
						    XB_GivePlayerThirst(playerid, 300);
					    	//ShowPlayerBusinessBuyDialog(playerid, interior);
					    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
							SetPlayerHealth(playerid, 100.0);
							return 1;
						}
						
						SetPlayerItem(playerid, businessItems[interior][listitem], var);
					    GiveBusinessMoney(business, (items[businessItems[interior][listitem]][itemPrice] > 75) ? (floatround(items[businessItems[interior][listitem]][itemPrice] * 0.75)) : items[businessItems[interior][listitem]][itemPrice]);
					    GivePlayerMoneyEx(playerid, -items[businessItems[interior][listitem]][itemPrice]);
					    SendClientMessage(playerid, COLOR_WHITE, "你购买了一个新物品, 请按下 (键位: N) 操作.");
					    //ShowPlayerBusinessBuyDialog(playerid, interior);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "你没有钱购买该物品.");
				}
			}
		}
		case DIALOG_GARBAGE: {
			if(response) {
				if(IsPlayerInAnyVehicle(playerid)) {
					new vehicle = GetPlayerVehicleID(playerid);
					if(GetVehicleModel(vehicle) == 408 && VehicleInfo[vehicle][vType] == VEHICLE_JOB) {
						if(VehicleInfo[vehicle][vTrashbags] > 0) {
							new msg[30];
							if(VehicleInfo[vehicle][vTrashbags] == 1) {
								format(msg, sizeof(msg), "Unloading (%i trash bag left) ...", VehicleInfo[vehicle][vTrashbags]);
							} else {
							    format(msg, sizeof(msg), "Unloading (%i trash bags left) ...", VehicleInfo[vehicle][vTrashbags]);
							}
							
							PlayerTextDrawSetString(playerid, TD_JOB_FirstLine, msg);
							SetPVarInt(playerid, "TrashmasterUnload", 1);
							FreezePlayer(playerid);
						} else {
						    SendClientMessage(playerid, COLOR_GREY, "垃圾收集箱内没有任何垃圾.");
						}
					}
				} else {
				    SendClientMessage(playerid, COLOR_GREY, "你需要在你的Trashmaster内才可以使用.");
				}
			}
		}
		case DIALOG_SETFACTION:
		{
		    if(response)
			{
		        new count;
		        for(new i = 1; i != MAX_FACTIONS; i++)
				{
			        if(!isnull(FactionInfo[i][fName]))
					{
				        if(count == listitem)
						{
				            SetPVarInt(playerid, "FactionManager", i);
				            ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
							return 1;
						}

				        count++;
					}
			    }
                //SendClientMessage(playerid, COLOR_LIGHTRED, "This feature has been removed as it is no longer required.");
				ShowPlayerDialog(playerid, DIALOG_SETFACTION_CREATE, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入一个你想创建的组织名称:", "提交", "取消");
			}
		}
		case DIALOG_SETFACTION_ADMIN: {
		    if(response) {
		        switch(listitem) {
					case 0: {
						ShowPlayerDialog(playerid, DIALOG_SETFACTION_SETLEADER, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入一个角色名称 / ID / 部分名称进行设置:", "提交", "取消");
					}
					case 1: {
					    ShowPlayerDialog(playerid, DIALOG_SETFACTION_SETNAME, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入新的组织名称:", "提交", "取消");
					}
					case 2: {
					    ShowPlayerDialog(playerid, DIALOG_SETFACTION_RANKLIMIT, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入组织阶级数量:", "提交", "取消");
					}
					case 3: {
						new query[65],
						    faction = GetPVarInt(playerid, "FactionManager");
						    
						mysql_format(sqlHandle, query, sizeof(query), "SELECT `skin` FROM `samp_reserved_skins` WHERE `faction` = %i", FactionInfo[faction][fID]);
						mysql_function_query(sqlHandle, query, true, "OnGetReservedSkins", "ii", faction, playerid);
					}
					case 4: {
                        ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n查看/编辑现有成员\n编辑公告消息\n编辑阶级名称\n组织聊天频道权限", "选择", "取消");
					}
					case 5: {
					    if(!IsPlayerInAnyVehicle(playerid)) {
							SendClientMessage(playerid, COLOR_GREY, "你需要在一台载具内才能进行组织载具分配.");
                            ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
						} else if(VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] != 0) {
						    SendClientMessage(playerid, COLOR_GREY, "该载具已经是这个组织的车辆或者其他组织的车辆.");
						    ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
						} else if(VehicleInfo[GetPlayerVehicleID(playerid)][vType] != VEHICLE_ADMIN) {
                            SendClientMessage(playerid, COLOR_GREY, "该车不是工作组车辆, 请输入 /spawncar 进行刷新.");
						    
						} else {
					    	ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADD_FV, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入一个新的载具牌照:", "提交", "返回");
						}
					}
					case 6: {
					    new faction = GetPVarInt(playerid, "FactionManager"),
					        vehicle = GetPlayerVehicleID(playerid);

                        if(!IsPlayerInAnyVehicle(playerid)) {
							SendClientMessage(playerid, COLOR_GREY, "你需要在一台载具内才能进行组织载具移动.");
                            
						} else if(VehicleInfo[vehicle][vFaction] != faction) {
						    SendClientMessage(playerid, COLOR_GREY, "该载具不属于该组织.");
						    
						} else {
						    new query[140],
								Float:X,
								Float:Y,
								Float:Z,
								Float:A,
								model = GetVehicleModel(vehicle),
								passengers[4] = {-1, ...},
								newVehicle;

							GetVehiclePos(vehicle, X, Y, Z);
							GetVehicleZAngle(vehicle, A);
						    foreach(new i : Player) {
								if(GetPlayerVehicleID(i) == vehicle) {
									passengers[GetPlayerVehicleSeat(i)] = i;
								}
							}

							newVehicle = CreateVehicle(model, X, Y, Z, A, VehicleInfo[vehicle][vColor1], VehicleInfo[vehicle][vColor2], -1);
							for(new s = 0; s != sizeof(passengers); s++) {
							    if(passengers[s] != -1) {
									PutPlayerInVehicle(passengers[s], newVehicle, s);
								}
							}

							if(IsNotLockableWithoutEngine(model)) {
					        	SetVehicleParamsEx(newVehicle, 0, 0, 0, 0, 0, 0, 0);
							} else if(IsNotLockableWithEngine(model) == 0) {
						    	SetVehicleParamsEx(newVehicle, 0, 0, 0, 1, 0, 0, 0);
							} else {
							    SetVehicleParamsEx(newVehicle, 0, 0, 0, 0, 0, 0, 0);
							}

							strcat(VehicleInfo[newVehicle][vPlate], VehicleInfo[vehicle][vPlate]);
							VehicleInfo[newVehicle][vFVID] = VehicleInfo[vehicle][vFVID];
							VehicleInfo[newVehicle][vColor1] = VehicleInfo[vehicle][vColor1];
							VehicleInfo[newVehicle][vColor2] = VehicleInfo[vehicle][vColor2];
							VehicleInfo[newVehicle][vX] = X;
							VehicleInfo[newVehicle][vY] = Y;
							VehicleInfo[newVehicle][vZ] = Z;
							VehicleInfo[newVehicle][vA] = A;
							VehicleInfo[newVehicle][vHealth] = 1000;
							SetVehicleNumberPlate(newVehicle, VehicleInfo[newVehicle][vPlate]);
					        VehicleInfo[newVehicle][vFuel] = VehicleInfo[vehicle][vFaction];
					        VehicleInfo[newVehicle][vModifications][8] = 1086;
					        FuelTimerVar[newVehicle] = SetTimerEx("FuelTimer", GM_FUELTIMER, true, "d", newVehicle);
							VehicleInfo[newVehicle][vFaction] = VehicleInfo[vehicle][vFaction];

							ResetVehicleData(vehicle);
							DestroyVehicle(vehicle);
							mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_faction_vehicles` SET `x` = %f, `y` = %f, `z` = %f, `a` = %f WHERE `id` = %i", X, Y, Z, A, VehicleInfo[newVehicle][vFVID]);
							mysql_function_query(sqlHandle, query, false, "", "");
							format(query, sizeof(query), "*** %s %s 移动了载具: [%i] 组织ID: '%s'.", GetAdminRank(playerid), GetNameWithSpace(playerid), VehicleInfo[newVehicle][vFVID], FactionInfo[newVehicle][fName]);
					    	AdminMessageLog(query, playerid, "SETFACTION - Move Faction Vehicle");
					    	
						}
					}
					case 7: {
                        if(!IsPlayerInAnyVehicle(playerid)) {
							SendClientMessage(playerid, COLOR_GREY, "你需要在一台载具内.");
                            
						} else if(VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] != GetPVarInt(playerid, "FactionManager")) {
						    SendClientMessage(playerid, COLOR_GREY, "该车不属于这个组织.");
						    
						} else {
					    	ShowPlayerDialog(playerid, DIALOG_SETFACTION_PLATE_FV, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请为该载具输入一个\n新的牌照以便修改:", "提交", "返回");
						}
					}
					case 8: {
					    if(!IsPlayerInAnyVehicle(playerid)) {
							SendClientMessage(playerid, COLOR_GREY, "你需要在一台载具内.");
                            
						} else if(VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] != GetPVarInt(playerid, "FactionManager")) {
						    SendClientMessage(playerid, COLOR_GREY, "该车不属于这个组织.");
						    
						} else {
					    	ShowPlayerDialog(playerid, DIALOG_SETFACTION_DELETE_FV, DIALOG_STYLE_MSGBOX, "{FF9900}组织管理", "{CC3300}警告:{A9C4E4}\t此操作无法撤销\n\t\t所有关于此载具数据将会被移除.\n\n{CC3300}提示:{A9C4E4}\t你是否还想进行操作?", "是的", "返回");
						}
					}
					case 9: {
					    new faction = GetPVarInt(playerid, "FactionManager");
						if(FactionInfo[faction][fGovern] == 0) {
							new msg[145];
							FactionInfo[faction][fGovern] = 1;
							format(msg, sizeof(msg), "*** %s %s 将组织 '%s' 设置为政府组织.", GetAdminRank(playerid), GetNameWithSpace(playerid), FactionInfo[faction][fName]);
							AdminMessageLog(msg, playerid, "SETFACTION - Toggle Governmental Status");
							ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
						} else {
							if(faction == 1 || faction == 2 || faction == 3) {
							    SendClientMessage(playerid, COLOR_GREY, "你无法对这个组织使用.");
           						ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
							} else {
								new msg[145];
								FactionInfo[faction][fGovern] = 0;
								format(msg, sizeof(msg), "*** %s %s 将组织 '%s' 从政府组织内移除.", GetAdminRank(playerid), GetNameWithSpace(playerid), FactionInfo[faction][fName]);
								AdminMessageLog(msg, playerid, "SETFACTION - Toggle Governmental Status");
							}
						}
					}
					case 10: {
						ShowPlayerDialog(playerid, DIALOG_SETFACTION_DELETE, DIALOG_STYLE_MSGBOX, "{FF9900}组织管理", "{CC3300}警告:{A9C4E4}\t此项操作使用之后\n\t\t所有的成员和阶级将会被移除.\n\n{CC3300}提示:{A9C4E4}\t你是否还想进行?", "是的", "返回");
					}
				}
		    }
		}
		case DIALOG_SETFACTION_LEADER: {
            if(response) {
				switch(listitem) {
					case 0: {
					    ShowPlayerDialog(playerid, DIALOG_SETFACTION_INVITE, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入对方名称, ID 或 部分名称进行邀请:", "提交", "返回");
					}
					case 1: {
					    new faction = (GetPVarInt(playerid, "FactionManager") != 0) ? GetPVarInt(playerid, "FactionManager") : PlayerInfo[playerid][pFaction],
							query[65];

					    mysql_format(sqlHandle, query, sizeof(query), "SELECT `user` FROM `samp_users` WHERE `faction` = %i LIMIT 21", faction);
					    mysql_function_query(sqlHandle, query, true, "OnPlayerViewFactionMembers", "ii", playerid, 1);
					}
					case 2: {
					    ShowPlayerDialog(playerid, DIALOG_SETFACTION_MOTD, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请在下方输入每日标语:", "提交", "返回");
					}
					case 3: {
					    new faction = (GetPVarInt(playerid, "FactionManager") != 0) ? GetPVarInt(playerid, "FactionManager") : PlayerInfo[playerid][pFaction];
					    format(gVar3000, sizeof(gVar3000), "%s", EOS);
					    for(new i = 1; i != 30; i++) {
							if(!isnull(FactionRanks[faction][i])) {
								if(isnull(gVar3000)) {
                                    format(gVar3000, sizeof(gVar3000), "%i. %s", i, FactionRanks[faction][i]);
								} else {
								    format(gVar3000, sizeof(gVar3000), "%s\n%i. %s", gVar3000, i, FactionRanks[faction][i]);
								}
							} else {
								break;
							}
						}

						ShowPlayerDialog(playerid, DIALOG_SETFACTION_RANKS, DIALOG_STYLE_LIST, "{FF9900}组织管理", gVar3000, "选择", "返回");
						format(gVar3000, sizeof(gVar3000), "%s", EOS);
					}
					case 4: {
                        new faction = (GetPVarInt(playerid, "FactionManager") != 0) ? GetPVarInt(playerid, "FactionManager") : PlayerInfo[playerid][pFaction],
                            msg[130];

						switch(FactionInfo[faction][fChat]) {
							case 0: {
							    if(PlayerInfo[playerid][pFaction] == faction) {
							    	format(msg, sizeof(msg), "%s %s 关闭了组织聊天频道, 现在无法使用 /factiontalk (/f).", GetFactionRank(playerid), GetNameWithSpace(playerid, 1));
								} else {
								    new str[80];
								    format(msg, sizeof(msg), "%s %s 关闭了组织聊天频道, 现在无法使用 /factiontalk (/f).", GetAdminRank(playerid), GetNameWithSpace(playerid));
									format(str, sizeof(str), "你关闭了组织 '%s' 的聊天频道.", FactionInfo[faction][fName]);
									SendClientMessage(playerid, COLOR_GREY, str);
								}

							    FactionInfo[faction][fChat] = 1;
							}
							case 1: {
							    if(PlayerInfo[playerid][pFaction] == faction) {
							    	format(msg, sizeof(msg), "%s %s 开启了组织聊天频道, 你现在可以使用 /factiontalk (/f).", GetFactionRank(playerid), GetNameWithSpace(playerid, 1));
								} else {
								    new str[80];
								    format(msg, sizeof(msg), "%s %s 开启了组织聊天频道, 你现在可以使用 /factiontalk (/f).", GetAdminRank(playerid), GetNameWithSpace(playerid));
                                    format(str, sizeof(str), "你开启了组织 '%s' 的聊天频道.", FactionInfo[faction][fName]);
									SendClientMessage(playerid, COLOR_GREY, str);
								}

							    FactionInfo[faction][fChat] = 0;
							}
						}

						foreach(new i : Player) {
							if(PlayerInfo[i][pFaction] == faction) {
								SendClientMessage(i, COLOR_FACTIONGREEN, msg);
							}
						}
					}
				}
		    }
		}
		case DIALOG_SETFACTION_CREATE:
		{
			if(response)
			{
			    if(strlen(inputtext) < 40 && strlen(inputtext) > 0)
				{
		            new query[96];
		            mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_factions` WHERE `name` = '%e'", inputtext);
		            mysql_function_query(sqlHandle, query, true, "OnPlayerCreateNewFaction", "is", playerid, inputtext);
		        }
				else
				{
		            SendClientMessage(playerid, COLOR_GREY, "组织名称不能低于40字节.");
		            ShowPlayerDialog(playerid, DIALOG_SETFACTION_CREATE, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入新的组织名称:", "提交", "取消");
		        }
			}
		}
		case DIALOG_SETFACTION_SETLEADER: {
		    if(response) {
				new user,
					faction = GetPVarInt(playerid, "FactionManager");

				if(sscanf(inputtext, "u", user)) {
				    SendClientMessage(playerid, COLOR_GREY, "无效玩家.");
				    ShowPlayerDialog(playerid, DIALOG_SETFACTION_SETLEADER, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入你要邀请的玩家ID, 名称或部分名称:", "提交", "返回");
				} else {
				    if(user == INVALID_PLAYER_ID) sscanf(inputtext, "i", user);
 					if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
					if(!IsPlayerConnected(user)) {
						SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
						ShowPlayerDialog(playerid, DIALOG_SETFACTION_SETLEADER, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入你要邀请的玩家ID, 名称或部分名称:", "提交", "返回");
					} else if(IsPlayerNPC(user)) {
						SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
						ShowPlayerDialog(playerid, DIALOG_SETFACTION_SETLEADER, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入你要邀请的玩家ID, 名称或部分名称:", "提交", "返回");
					} else if(PlayerInfo[user][pFaction] == faction && PlayerInfo[user][pRank] == FactionInfo[faction][fLeaderrank]) {
						SendClientMessage(playerid, COLOR_GREY, "该玩家已经是此组织领导人.");
						ShowPlayerDialog(playerid, DIALOG_SETFACTION_SETLEADER, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入你要邀请的玩家ID, 名称或部分名称:", "提交", "返回");
					} else {
						new query[150];
						if(PlayerInfo[user][pFaction] != 0) {
							RemovePlayerFromFaction(user);
						}
						
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `faction` = %i, `rank` = %i, `badge` = 0 WHERE `user` = '%e'", faction, FactionInfo[faction][fLeaderrank], PlayerInfo[user][pName]);
						mysql_function_query(sqlHandle, query, false, "", "");
						PlayerInfo[user][pFaction] = faction;
						PlayerInfo[user][pRank] = FactionInfo[faction][fLeaderrank];
						format(query, sizeof(query), "*** %s %s 命你领导组织 %s (ID: %i).", GetAdminRank(playerid), GetNameWithSpace(playerid), FactionInfo[faction][fName], FactionInfo[faction][fID]);
						SendClientMessage(user, COLOR_WHITE, query);
						format(query, sizeof(query), "*** %s %s 设置 %s 为 %s (ID: %i) 组织领导人.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user),  FactionInfo[faction][fName], FactionInfo[faction][fID]);
						AdminMessageLog(query, playerid, "SETFACTION - Change Faction Leader");
						ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
					}
				}
			} else {
                ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_SETNAME: {
			if(response) {
                if(strlen(inputtext) < 40 && strlen(inputtext) > 0) {
		            new query[96];
		            mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_factions` WHERE `name` = '%e'", inputtext);
		            mysql_function_query(sqlHandle, query, true, "OnPlayerEditFactionName", "is", playerid, inputtext);
		        } else {
		            SendClientMessage(playerid, COLOR_GREY, "组织名称不能低于40字节.");
		            ShowPlayerDialog(playerid, DIALOG_SETFACTION_SETNAME, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入新的组织名称:", "提交", "返回");
		        }
			} else {
                ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_RANKLIMIT: {
			if(response) {
				if(!IsNumeric(inputtext) || strval(inputtext) > 30 || strval(inputtext) < 0) {
				    SendClientMessage(playerid, COLOR_GREY, "组织阶级数量只能在0-30之间.");
				    ShowPlayerDialog(playerid, DIALOG_SETFACTION_RANKLIMIT, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入新的组织最大阶级数量:", "提交", "返回");
				} else {
				    new msg[140],
						query[110],
						faction = GetPVarInt(playerid, "FactionManager"),
						ranks = strval(inputtext);

					if(FactionInfo[faction][fLeaderrank] == ranks) {
                        SendClientMessage(playerid, COLOR_GREY, "目前组织最大阶级已经是该数值了.");
				    	ShowPlayerDialog(playerid, DIALOG_SETFACTION_RANKLIMIT, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入新的组织最大阶级数量:", "提交", "返回");
					} else {
			            mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_factions` SET `leaderrank` = %i WHERE `id` = %i", ranks, FactionInfo[faction][fID]);
			            mysql_function_query(sqlHandle, query, false, "", "");

			            if(FactionInfo[faction][fLeaderrank] > ranks) {
			            	mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_factionranks` WHERE `id` = %i AND `rank` > %i", FactionInfo[faction][fID], ranks);
			            	mysql_function_query(sqlHandle, query, false, "", "");
			            } else {
							format(gVar3000, sizeof(gVar3000), "%s", EOS);
							for(new i = FactionInfo[faction][fLeaderrank] + 1; i != ranks + 1; i++) {
							    format(FactionRanks[faction][i], 30, "Rank %i", i);
								if(isnull(gVar3000)) {
									mysql_format(sqlHandle, gVar3000, sizeof(gVar3000), "INSERT INTO `samp_factionranks` (`id`, `rank`, `name`) VALUES (%i, %i, 'Rank %i')", FactionInfo[faction][fID], i, i);
								} else {
                                    mysql_format(sqlHandle, gVar3000, sizeof(gVar3000), "%s, (%i, %i, 'Rank %i')", gVar3000, FactionInfo[faction][fID], i, i);
								}
							}

							mysql_function_query(sqlHandle, gVar3000, false, "", "");
							format(gVar3000, sizeof(gVar3000), "%s", EOS);
						}

			            mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `rank` = %i WHERE `rank` >= %i AND `faction` = %i AND `rank` != %i", ranks - 1, ranks, FactionInfo[faction][fID], FactionInfo[faction][fLeaderrank]);
		                mysql_function_query(sqlHandle, query, false, "", "");

			            mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `rank` = %i WHERE `rank` = %i AND `faction` = %i", ranks, FactionInfo[faction][fLeaderrank], FactionInfo[faction][fID]);
		                mysql_function_query(sqlHandle, query, false, "", "");

						foreach(new i : Player) {
					    	if(PlayerInfo[i][pFaction] == faction && PlayerInfo[i][pRank] == FactionInfo[faction][fLeaderrank]) {
					        	PlayerInfo[i][pRank] = ranks;
					    	} else if(PlayerInfo[i][pFaction] == faction && PlayerInfo[i][pRank] >= ranks) {
					       		PlayerInfo[i][pRank] = ranks - 1;
							}
						}

		            	FactionInfo[faction][fLeaderrank] = ranks;
		            	format(msg, sizeof(msg), "*** %s %s 将组织 '%s' 的阶级数量设置为 %i.", GetAdminRank(playerid), GetNameWithSpace(playerid), FactionInfo[faction][fName], ranks);
			            AdminMessageLog(msg, playerid, "SETFACTION - Edit Ranklimit");
			            ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
					}
				}
			} else {
                ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_DELETE: {
			if(response) {
				new faction = GetPVarInt(playerid, "FactionManager");
				if(FactionInfo[faction][fGovern] != 0) {
					SendClientMessage(playerid, COLOR_GREY, "你无法删除该政府组织.");
					ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
				} else {
					new query[128],
					    msgAdm[128];

					mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_factions` WHERE `id` = %i", FactionInfo[faction][fID]);
					mysql_function_query(sqlHandle, query, false, "", "");
					
					mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_reserved_skins` WHERE `faction` = %i", FactionInfo[faction][fID]);
					mysql_function_query(sqlHandle, query, false, "", "");

					mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_factionranks` WHERE `id` = %i", FactionInfo[faction][fID]);
					mysql_function_query(sqlHandle, query, false, "", "");

					mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `faction` = 0, `rank` = 0, `badge` = 0 WHERE `faction` = %i", FactionInfo[faction][fID]);
					mysql_function_query(sqlHandle, query, false, "", "");
					
					mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_lockers` WHERE `faction` = %i", FactionInfo[faction][fID]);
					mysql_function_query(sqlHandle, query, false, "", "");

					mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_faction_vehicles` WHERE `factionid` = %i", FactionInfo[faction][fID]);
					mysql_function_query(sqlHandle, query, false, "", "");

					format(msgAdm, sizeof(msgAdm), "*** %s %s 删除了组织: [%s], 所有数据已被删除.", GetAdminRank(playerid), GetNameWithSpace(playerid), FactionInfo[faction][fName]);
					format(query, sizeof(query), "*** 你的组织被 %s %s 删除, 系统自动将你从组织内移除.", GetAdminRank(playerid), GetNameWithSpace(playerid));
					foreach(new i : Player) {
					    if(PlayerInfo[i][pAdminlevel] > 0) {
							SendClientMessage(i, COLOR_GOLD, msgAdm);
					    }

						if(PlayerInfo[i][pFaction] == faction) {
						    SendClientMessage(i, COLOR_WHITE, query);
							PlayerInfo[i][pFaction] = 0;
							PlayerInfo[i][pRank] = 0;
						}
					}
					
					for(new v = 0; v != MAX_VEHICLES; v++) {
					    if(VehicleInfo[v][vFaction] == FactionInfo[faction][fID]) {
							VehicleInfo[v][vFaction] = 0;
							SetVehicleDead(v);
						}
					}

					FactionInfo[faction][fID] = 0;
					FactionInfo[faction][fLeaderrank] = 0;
					FactionInfo[faction][fGovern] = 0;
					format(FactionInfo[faction][fmotd], 200, "%s", EOS);
					format(FactionInfo[faction][fName], 40, "%s", EOS);
					AdminMessageLog(msgAdm, playerid, "SETFACTION - Delete/Reset Factionslot", 0);
				}
			} else {
                ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_ADD_FV: {
			if(response) {
			    if(strlen(inputtext) > 10) {
			        SendClientMessage(playerid, COLOR_GREY, "牌照无法低于10字节.");
			        ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADD_FV, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入该载具车牌号:", "提交", "返回");
				} else {
					new vehicle = GetPlayerVehicleID(playerid),
						msg[180],
						model = GetVehicleModel(vehicle),
						Float:X,
						Float:Y,
						Float:Z,
						Float:A,
						color1 = VehicleInfo[vehicle][vColor1],
						color2 = VehicleInfo[vehicle][vColor2],
						seat = GetPlayerVehicleSeat(playerid);

					/* --- Retrieving Data --- */

					GetVehiclePos(vehicle, X, Y, Z);
					GetVehicleZAngle(vehicle, A);
				    if(IsValidDynamic3DTextLabel(spawncarlabel[vehicle])) {
						DestroyDynamic3DTextLabel(spawncarlabel[vehicle]);
					}

					/* --- Destroying current vehicle --- */

					if(IsValidDynamicObject(VehicleInfo[vehicle][vSiren])) {
						DestroyDynamicObject(VehicleInfo[vehicle][vSiren]);
					}

					KillTimer(FuelTimerVar[vehicle]);
					ResetVehicleData(vehicle);
					DestroyVehicle(vehicle);

					/* --- Creating new Faction-Vehicle --- */

					vehicle = CreateVehicle(model, X, Y, Z, A, color1, color2, -1);
					format(VehicleInfo[vehicle][vPlate], 10, "%s", inputtext);
					VehicleInfo[vehicle][vColor1] = color1;
					VehicleInfo[vehicle][vColor2] = color2;
					VehicleInfo[vehicle][vFaction] = GetPVarInt(playerid, "FactionManager");
		   			VehicleInfo[vehicle][vHealth] = 1000;
		   			VehicleInfo[vehicle][vX] = X;
		   			VehicleInfo[vehicle][vY] = Y;
		   			VehicleInfo[vehicle][vZ] = Z;
		   			VehicleInfo[vehicle][vA] = A;
					SetVehicleNumberPlate(vehicle, inputtext);
					if(IsNotLockableWithoutEngine(model)) {
			        	SetVehicleParamsEx(vehicle, 0, 0, 0, 0, 0, 0, 0);
					} else if(IsNotLockableWithEngine(model) == 0) {
				    	SetVehicleParamsEx(vehicle, 0, 0, 0, 1, 0, 0, 0);
					} else {
					    SetVehicleParamsEx(vehicle, 0, 0, 0, 0, 0, 0, 0);
					}

					FuelTimerVar[vehicle] = SetTimerEx("FuelTimer", GM_FUELTIMER, true, "d", vehicle);
					SetVehicleToRespawn(vehicle);
					PutPlayerInVehicle(playerid, vehicle, seat);
					CreateFactionVehicle(vehicle);

					/* --- Messaging + Logging --- */

					format(msg, sizeof(msg), "*** %s %s 为组织 '%s' 创建一台载具 (车牌号: %s).", GetAdminRank(playerid), GetNameWithSpace(playerid), FactionInfo[VehicleInfo[vehicle][vFaction]][fName], inputtext);
					AdminMessageLog(msg, playerid, "SETFACTION - Add Faction Vehicle");
				}
			} else {
			    ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_DELETE_FV: {
			if(response) {
			    new vehicle = GetPlayerVehicleID(playerid),
					msg[128];

				DestroyVehicle(vehicle);
				mysql_format(sqlHandle, msg, sizeof(msg), "DELETE FROM `samp_faction_vehicles` WHERE `id` = %i", VehicleInfo[vehicle][vFVID]);
				mysql_function_query(sqlHandle, msg, false, "", "");
				format(msg, sizeof(msg), "*** %s %s 将载具 [%i] 从组织 '%s' 内删除.", GetAdminRank(playerid), GetNameWithSpace(playerid), VehicleInfo[vehicle][vFVID], FactionInfo[GetPVarInt(playerid, "FactionManager")][fName]);
				AdminMessageLog(msg, playerid, "SETFACTION - Delete Faction Vehicle");
				ResetVehicleData(vehicle);
			} else {
			    ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_PLATE_FV: {
			if(response) {
			    if(strlen(inputtext) > 10) {
			        SendClientMessage(playerid, COLOR_GREY, "车牌号无法低于10字节.");
			        ShowPlayerDialog(playerid, DIALOG_SETFACTION_PLATE_FV, DIALOG_STYLE_MSGBOX, "{FF9900}组织管理", "请输入一个车牌号:", "提交", "返回");
				} else {
					new vehicle = GetPlayerVehicleID(playerid),
						seat = GetPlayerVehicleSeat(playerid),
						msg[128];

					format(VehicleInfo[vehicle][vPlate], 10, "%s", inputtext);
					SetVehicleNumberPlate(vehicle, inputtext);
					SetVehicleToRespawn(vehicle);
					PutPlayerInVehicle(playerid, vehicle, seat);
					mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_faction_vehicles` SET `plate` = '%e' WHERE `id` = %i", inputtext, VehicleInfo[vehicle][vFVID]);
					mysql_function_query(sqlHandle, msg, false, "", "");
					format(msg, sizeof(msg), "*** %s %s 将组织 '%s' 的载具车牌号更改为 '%s' (载具ID: %i).", GetAdminRank(playerid), GetNameWithSpace(playerid), FactionInfo[GetPVarInt(playerid, "FactionManager")][fName], inputtext, VehicleInfo[vehicle][vFVID]);
					AdminMessageLog(msg, playerid, "SETFACTION - Edit Faction Vehicle License Plate");
					ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
				}
			} else {
			    ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_INVITE: {
            if(response) {
				new user,
					faction = (GetPVarInt(playerid, "FactionManager") != 0) ? GetPVarInt(playerid, "FactionManager") : PlayerInfo[playerid][pFaction];

				if(sscanf(inputtext, "u", user)) {
					SendClientMessage(playerid, COLOR_GREY, "无效玩家.");
				    ShowPlayerDialog(playerid, DIALOG_SETFACTION_INVITE, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入你要邀请的玩家ID, 名称或部分名称:", "提交", "返回");
				} else {
				    if(user == INVALID_PLAYER_ID) sscanf(inputtext, "i", user);
 					if(user > MAX_PLAYERS) user = DeterminePlayerID(user);
					if(!IsPlayerConnected(user)) {
						SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID还没有连接服务器).");
						ShowPlayerDialog(playerid, DIALOG_SETFACTION_INVITE, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入你要邀请的玩家ID, 名称或部分名称:", "提交", "返回");
					} else if(IsPlayerNPC(user)) {
						SendClientMessage(playerid, COLOR_GREY, "无效玩家 (提交的玩家ID为NPC).");
						ShowPlayerDialog(playerid, DIALOG_SETFACTION_INVITE, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入你要邀请的玩家ID, 名称或部分名称:", "提交", "返回");
					} else if(PlayerInfo[user][pFaction] == faction) {
						SendClientMessage(playerid, COLOR_GREY, "对方已经是该组织成员.");
						ShowPlayerDialog(playerid, DIALOG_SETFACTION_INVITE, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入你要邀请的玩家ID, 名称或部分名称:", "提交", "返回");
					} else {
					    new msg[128];
						SetPVarInt(user, "Invite", faction);
					    format(msg, sizeof(msg), "你邀请 %s 加入你的组织.", GetNameWithSpace(user));
					    SendClientMessage(playerid, COLOR_WHITE, msg);
					    format(msg, sizeof(msg), "%s 邀请你加入 '%s', 使用 /acceptinvite 接受邀请.", GetNameWithSpace(playerid),  FactionInfo[faction][fName]);
					    SendClientMessage(user, COLOR_LIGHTGREEN, msg);
						ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n查看/编辑现有成员\n编辑公告消息\n编辑阶级名称\n组织聊天频道权限", "选择", "取消");
					}
				}
			} else {
                ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n查看/编辑现有成员\n编辑公告消息\n编辑阶级名称\n组织聊天频道权限", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_SKINS: {
			if(response) {
				new skins = GetPVarInt(playerid, "ManageReservedSkins");
				if(listitem == skins + 1) {
				    if(skins < 4) {
				        SetPVarInt(playerid, "ManageReserverdSkins", listitem);
						ShowPlayerDialog(playerid, DIALOG_SETFACTION_SKINS_NEW, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入一个皮肤ID:", "预存", "返回");
					} else {
						SendClientMessage(playerid, COLOR_GREY, "已达到最大预存皮肤数量.");
					}
				} else {
					ShowPlayerDialog(playerid, DIALOG_SETFACTION_SKINS_REMOVE, DIALOG_STYLE_MSGBOX, "{FF9900}组织管理", "你是否想将此皮肤从组织内移除?", "是的", "不用了");
				}
			} else {
			    ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_SKINS_NEW: {
			if(response) {
				if(!isnull(inputtext) && IsNumeric(inputtext)) {
					new skin = strval(inputtext);
					if(skin >= 0 && skin <= 300) {
						for(new i = 0; i != sizeof(LAPDSkins); i++) {
							if(skin == LAPDSkins[i]) {
								return SendClientMessage(playerid, COLOR_GREY, "该皮肤已经用做于 'Los Angeles Police Department'.");
							}
						}
						
						for(new i = 0; i != sizeof(LSFDSkins); i++) {
							if(skin == LSFDSkins[i]) {
								return SendClientMessage(playerid, COLOR_GREY, "该皮肤已经用做于 'Los Angeles Fire Department'.");
							}
						}
						
					    new query[65];
					    mysql_format(sqlHandle, query, sizeof(query), "SELECT `faction` FROM `samp_reserved_skins` WHERE `skin` = %i", skin);
					    mysql_function_query(sqlHandle, query, true, "OnPlayerReservesSkin", "ii", skin, playerid);
					} else {
					    SendClientMessage(playerid, COLOR_GREY, "皮肤ID应该在0-300之间.");
					}
				} else {
					SendClientMessage(playerid, COLOR_GREY, "皮肤ID应该在0-300之间.");
				}
			} else {
			    ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_SKINS_REMOVE: {
		    if(response) {
		        new query[75],
		            faction = GetPVarInt(playerid, "FactionManager");

		        mysql_format(sqlHandle, query, sizeof(query), "SELECT `id` FROM `samp_reserved_skins` WHERE `faction` = %i LIMIT %i, 1", FactionInfo[faction][fID], GetPVarInt(playerid, "ManageReservedSkins"));
		        mysql_function_query(sqlHandle, query, true, "OnAdminDeleteReservedSkin", "ii", playerid, faction);
			} else {
			    ShowPlayerDialog(playerid, DIALOG_SETFACTION_ADMIN, DIALOG_STYLE_LIST, "{FF9900}组织管理", "更换领导人\n编辑名称\n编辑阶级数\n管理预存皮肤\n以组织领导身份管理\n增加组织载具\n移动组织载具\n更换组织载具牌照\n删除组织载具\n设置为政府组织\n删除/重置组织", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_MOTD: {
			if(response) {
			    if(strlen(inputtext) >= 128 || strlen(inputtext) == 0) {
			        SendClientMessage(playerid, COLOR_GREY, "组织标语应该在0到128字节之间.");
			        ShowPlayerDialog(playerid, DIALOG_SETFACTION_MOTD, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入新的组织标语:", "提交", "返回");
			    } else {
			        new faction = (GetPVarInt(playerid, "FactionManager") != 0) ? GetPVarInt(playerid, "FactionManager") : PlayerInfo[playerid][pFaction],
						query[195],
						msg[150];

			        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_factions` SET `motd` = '%e' WHERE `id` = %i", inputtext, FactionInfo[faction][fID]);
			        mysql_function_query(sqlHandle, query, false, "", "");

			        format(FactionInfo[faction][fmotd], 200, "%s", inputtext);
			        format(msg, sizeof(msg), "组织标语: %s", inputtext);
					foreach(new i : Player) {
						if(PlayerInfo[i][pFaction] == faction) {
							SendClientMessage(i, COLOR_BLUE, msg);
						}
					}

					ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n查看/编辑现有成员\n编辑公告消息\n编辑阶级名称\n组织聊天频道权限", "选择", "取消");
			    }
			} else {
			    ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n查看/编辑现有成员\n编辑公告消息\n编辑阶级名称\n组织聊天频道权限", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_RANKS: {
			if(response) {
			    SetPVarInt(playerid, "FactionManagerRank", listitem + 1);
			    ShowPlayerDialog(playerid, DIALOG_SETFACTION_EDITRANK, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入阶级名称 (最大30字节):", "确定", "返回");
			} else {
			    ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n查看/编辑现有成员\n编辑公告消息\n编辑阶级名称\n组织聊天频道权限", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_EDITRANK: {
			if(response) {
			    if(strlen(inputtext) == 0 || strlen(inputtext) > 30) {
					SendClientMessage(playerid, COLOR_GREY, "组织阶级只能在0-30字节之间.");
					ShowPlayerDialog(playerid, DIALOG_SETFACTION_EDITRANK, DIALOG_STYLE_INPUT, "{FF9900}组织管理", "请输入阶级名称 (最大30字节):", "确定", "返回");
				} else {
				    new faction = (GetPVarInt(playerid, "FactionManager") != 0) ? GetPVarInt(playerid, "FactionManager") : PlayerInfo[playerid][pFaction],
						rank = GetPVarInt(playerid, "FactionManagerRank"),
						query[110],
						msg[80];

				    format(FactionRanks[faction][rank], 30, "%s", inputtext);
					mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_factionranks` SET `name` = '%e' WHERE `rank` = %i AND `id` = %i", inputtext, rank, FactionInfo[faction][fID]);
					mysql_function_query(sqlHandle, query, false, "", "");
					format(msg, sizeof(msg), "你将阶级 [%i] 名称设置为 '%s'.", rank, inputtext);
					SendClientMessage(playerid, COLOR_WHITE, msg);
					ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n查看/编辑现有成员\n编辑公告消息\n编辑阶级名称\n组织聊天频道权限", "选择", "取消");
			    }
			} else {
			    new faction = (GetPVarInt(playerid, "FactionManager") != 0) ? GetPVarInt(playerid, "FactionManager") : PlayerInfo[playerid][pFaction];
				format(gVar3000, sizeof(gVar3000), "%s", EOS);
				for(new i = 1; i != 30; i++) {
					if(!isnull(FactionRanks[faction][i])) {
						if(isnull(gVar3000)) {
                            format(gVar3000, sizeof(gVar3000), "%i. %s", i, FactionRanks[faction][i]);
						} else {
						    format(gVar3000, sizeof(gVar3000), "%s\n%i. %s", gVar3000, i, FactionRanks[faction][i]);
						}
					} else {
						break;
					}
				}

				ShowPlayerDialog(playerid, DIALOG_SETFACTION_RANKS, DIALOG_STYLE_LIST, "{FF9900}组织管理", gVar3000, "选择", "返回");
				format(gVar3000, sizeof(gVar3000), "%s", EOS);
			}
		}
		case DIALOG_SETFACTION_MEMBERS: {
		    new page = GetPVarInt(playerid, "FactionManagerMembers");
			if(response) {
			    SetPVarInt(playerid, "FactionManagerEditMember", (20 * (page - 1)) + listitem);
			    ShowPlayerDialog(playerid, DIALOG_SETFACTION_EDITMEMBER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "提升成员\n将成员降级\n踢出成员", "选择", "返回");
			} else {
				if(page != 0) {
				    new faction = (GetPVarInt(playerid, "FactionManager") != 0) ? GetPVarInt(playerid, "FactionManager") : PlayerInfo[playerid][pFaction],
						query[75];

					mysql_format(sqlHandle, query, sizeof(query), "SELECT `user` FROM `samp_users` WHERE `faction` = %i LIMIT %i, 21", faction, 20 * page);
					mysql_function_query(sqlHandle, query, true, "OnPlayerViewFactionMembers", "ii", playerid, page + 1);
				} else {
				    ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n查看/编辑现有成员\n编辑公告消息\n编辑阶级名称\n组织聊天频道权限", "选择", "取消");
				}
			}
		}
		case DIALOG_SETFACTION_EDITMEMBER: {
			if(response) {
				switch(listitem) {
					case 0: {
                        new faction = (GetPVarInt(playerid, "FactionManager") != 0) ? GetPVarInt(playerid, "FactionManager") : PlayerInfo[playerid][pFaction];
						format(gVar3000, sizeof(gVar3000), "%s", EOS);
						for(new i = 1; i != 30; i++) {
							if(!isnull(FactionRanks[faction][i])) {
								if(isnull(gVar3000)) {
		                            format(gVar3000, sizeof(gVar3000), "%i. %s", i, FactionRanks[faction][i]);
								} else {
								    format(gVar3000, sizeof(gVar3000), "%s\n%i. %s", gVar3000, i, FactionRanks[faction][i]);
								}
							} else {
								break;
							}
						}

						ShowPlayerDialog(playerid, DIALOG_SETFACTION_PROMOTE, DIALOG_STYLE_LIST, "{FF9900}组织管理", gVar3000, "选择", "返回");
						format(gVar3000, sizeof(gVar3000), "%s", EOS);
					}
					case 1: {
					    new faction = (GetPVarInt(playerid, "FactionManager") != 0) ? GetPVarInt(playerid, "FactionManager") : PlayerInfo[playerid][pFaction];
						format(gVar3000, sizeof(gVar3000), "%s", EOS);
						for(new i = 1; i != 30; i++) {
							if(!isnull(FactionRanks[faction][i])) {
								if(isnull(gVar3000)) {
		                            format(gVar3000, sizeof(gVar3000), "%i. %s", i, FactionRanks[faction][i]);
								} else {
								    format(gVar3000, sizeof(gVar3000), "%s\n%i. %s", gVar3000, i, FactionRanks[faction][i]);
								}
							} else {
								break;
							}
						}

						ShowPlayerDialog(playerid, DIALOG_SETFACTION_DEMOTE, DIALOG_STYLE_LIST, "{FF9900}组织管理", gVar3000, "选择", "返回");
						format(gVar3000, sizeof(gVar3000), "%s", EOS);
					}
					case 2: {
					    new faction = (GetPVarInt(playerid, "FactionManager") != 0) ? GetPVarInt(playerid, "FactionManager") : PlayerInfo[playerid][pFaction],
							query[70];

						mysql_format(sqlHandle, query, sizeof(query), "SELECT `user` FROM `samp_users` WHERE `faction` = %i LIMIT %i, 1", faction, GetPVarInt(playerid, "FactionManagerEditMember"));
						mysql_function_query(sqlHandle, query, true, "OnPlayerKickMember", "ii", playerid, faction);
					}
				}
			} else {
                ShowPlayerDialog(playerid, DIALOG_SETFACTION_LEADER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "邀请成员\n浏览/编辑已有成员\n编辑标语\n编辑阶级名称\n聊天频道开关", "选择", "取消");
			}
		}
		case DIALOG_SETFACTION_PROMOTE: {
			if(response) {
			    new faction = (GetPVarInt(playerid, "FactionManager") != 0) ? GetPVarInt(playerid, "FactionManager") : PlayerInfo[playerid][pFaction],
					query[80];

				mysql_format(sqlHandle, query, sizeof(query), "SELECT `user`, `rank` FROM `samp_users` WHERE `faction` = %i LIMIT %i, 1", faction, GetPVarInt(playerid, "FactionManagerEditMember"));
				mysql_function_query(sqlHandle, query, true, "OnPlayerPromoteMember", "iii", playerid, faction, listitem + 1);
			} else {
			    ShowPlayerDialog(playerid, DIALOG_SETFACTION_EDITMEMBER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "提升某成员\n对成员降级\n将成员从组织移除", "选择", "返回");
			}
		}
		case DIALOG_SETFACTION_DEMOTE: {
			if(response) {
			    new faction = (GetPVarInt(playerid, "FactionManager") != 0) ? GetPVarInt(playerid, "FactionManager") : PlayerInfo[playerid][pFaction],
					query[80];

				mysql_format(sqlHandle, query, sizeof(query), "SELECT `user`, `rank` FROM `samp_users` WHERE `faction` = %i LIMIT %i, 1", faction, GetPVarInt(playerid, "FactionManagerEditMember"));
				mysql_function_query(sqlHandle, query, true, "OnPlayerDemoteMember", "iii", playerid, faction, listitem + 1);
			} else {
			    ShowPlayerDialog(playerid, DIALOG_SETFACTION_EDITMEMBER, DIALOG_STYLE_LIST, "{FF9900}组织管理", "提升某成员\n对成员降级\n将成员从组织移除", "选择", "返回");
			}
		}
		case DIALOG_FRISK: {
            if(response) {
			    new page = GetPVarInt(playerid, "CurrentItemPage"),
			        user = GetPVarInt(playerid, "CurrentlyFrisking");

				if(listitem == 21) {
				    new pItems[22],
						dialogMsg[850];

                    getItemPage(user, pItems, sizeof(pItems), page + 1);
					for(new i = 0; i != sizeof(pItems); i++) {
						if(pItems[i] == 0) {
							break;
						}

      					if(isnull(dialogMsg)) {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
							}
						} else {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
							}
						}

						if(PlayerInfo[user][pItemID][items[pItems[i]][iIdx]] == getItemID(user, (20 * page) + i)) {
						    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
						}
					}

					if(itemIndexExists(user, (page * 20) + 21)) {
						format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
					}

                    SetPVarInt(playerid, "CurrentItemPage", page + 1);
					ShowPlayerDialog(playerid, DIALOG_FRISK, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "获取", "取消");
				} else {
				    new type = getItemType(user, (20 * (page - 1)) + listitem);
					if(PlayerInfo[playerid][pItemType][items[type][iIdx]] != 0 && items[type][storable] == 0) {
						SendClientMessage(playerid, COLOR_GREY, "你手上已经携带了一个物品!");
					} else {
						new id = getItemID(user, (20 * (page - 1)) + listitem),
							query[135],
							pItems[22],
							dialogMsg[850];

						for(new i = 0; i != 10; i++) {
							if(PlayerInfo[user][pItemID][i] == id) {
							    if(i != 10) {
									RemovePlayerAttachedObject(user, i);
									if(items[PlayerInfo[user][pItemType][i]][itemType] == ITEM_WEAPON) {
										ResetPlayerWeapons(user);
									}
								}

								PlayerInfo[user][pItemVar][i] = 0;
								PlayerInfo[user][pItemType][i] = 0;
								PlayerInfo[user][pItemIndex][i] = 0;
								PlayerInfo[user][pItemID][i] = 0;
							}
						}

						mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", id);
						mysql_function_query(sqlHandle, query, false, "", "");
						SetPlayerItem(playerid, type, getItemVar(user, (20 * (page - 1)) + listitem));
						RemovePlayerItemEx(user, id);
						//UnsetPlayerMask(user);
						format(query, sizeof(query), "** %s 伸手 %s 夺取对方的 %s.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1), itemLowerCase(type));
						ProxDetector(12, playerid, query, COLOR_PINK);
	                    getItemPage(user, pItems, sizeof(pItems), 1);
						if(pItems[0] != 0) {
							for(new i = 0; i != sizeof(pItems); i++) {
								if(pItems[i] == 0) {
									break;
								}

								if(isnull(dialogMsg)) {
								    if(pItems[i] >= 4 && pItems[i] <= 13) {
										format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 3) {
					    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 17) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 18) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 19) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(user, i));
                                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(user, i));
									} else {
									    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
									}
								} else {
								    if(pItems[i] >= 4 && pItems[i] <= 13) {
										format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 3) {
					    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 17) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 18) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 19) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
                                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
									}
								}

								if(getItemID(user, i) == PlayerInfo[user][pItemID][items[pItems[i]][iIdx]]) {
								    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
								}
							}

							if(itemIndexExists(user, 21)) {
								format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
							}

					        SetPVarInt(playerid, "CurrentItemPage", 1);
							ShowPlayerDialog(playerid, DIALOG_FRISK, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "获取", "取消");
						} else {
                            SetPVarInt(playerid, "CurrentlyFrisking", 0);
						}
					}
				}
			} else {
   				SetPVarInt(playerid, "CurrentlyFrisking", 0);
			}
		}
		case DIALOG_ITEMS: {
			if(response) {
			    new page = GetPVarInt(playerid, "CurrentItemPage");
				if(listitem == 21) {
				    new pItems[22],
						dialogMsg[850];

                    getItemPage(playerid, pItems, sizeof(pItems), page + 1);
					for(new i = 0; i != sizeof(pItems); i++) {
						if(pItems[i] == 0) {
							break;
						}

      					if(isnull(dialogMsg)) {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
							}
						} else {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
							}
						}

						if(PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]] == getItemID(playerid, (20 * page) + i)) {
						    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
						}
					}

					if(itemIndexExists(playerid, (page * 20) + 21)) {
						format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
					}

                    SetPVarInt(playerid, "CurrentItemPage", page + 1);
					ShowPlayerDialog(playerid, DIALOG_ITEMS, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "选择", "取消");
				} else {
					PlayerInfo[playerid][pItemIndex][10] = (20 * (page - 1)) + listitem;
					PlayerInfo[playerid][pItemType][10] = getItemType(playerid, PlayerInfo[playerid][pItemIndex][10]);
					PlayerInfo[playerid][pItemVar][10] = getItemVar(playerid, PlayerInfo[playerid][pItemIndex][10]);
					PlayerInfo[playerid][pItemID][10] = getItemID(playerid, PlayerInfo[playerid][pItemIndex][10]);
					switch(PlayerInfo[playerid][pItemType][10]) {
					    case 1:
						{
					        ShowPlayerDialog(playerid, DIALOG_ITEMS_BASKETBALL, DIALOG_STYLE_LIST, "{FF9900}物品", "丢弃篮球", "选择", "取消");
					    }
						case 2:
						{
						    ShowPlayerDialog(playerid, DIALOG_ITEMS_ATMCARD, DIALOG_STYLE_LIST, "{FF9900}物品", "丢弃银行卡", "选择", "取消");
						}
						case 3:
						{
						    ShowPlayerDialog(playerid, DIALOG_ITEMS_GASCAN, DIALOG_STYLE_LIST, "{FF9900}物品", "使用汽油桶\n将汽油装进油桶\n丢弃汽油桶", "选择", "取消");
						}
						case 4 .. 13:
						{
						    if(GetPVarInt(playerid, "Arrest") > 0) return SendClientMessage(playerid, COLOR_GREY, "你暂时无法使用该物品.");
       						if(PlayerInfo[playerid][pPrisonTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "你暂时无法使用该物品.");
						    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10])
							{
						    	ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE, DIALOG_STYLE_LIST, "{FF9900}物品", "拨打号码\n发送信息\n免提开关\n联系人\n记事本\n手机开关\n握住手机\n丢弃手机", "选择", "取消");
							}
							else
							{
							    ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE, DIALOG_STYLE_LIST, "{FF9900}物品", "拨打号码\n发送信息\n免提开关\n联系人\n记事本\n手机开关\n放回手机\n丢弃手机", "选择", "取消");
							}
						}
						case 14:
						{
						    if(GetPVarInt(playerid, "Arrest") > 0) return SendClientMessage(playerid, COLOR_GREY, "你暂时无法使用该物品.");
       						if(PlayerInfo[playerid][pPrisonTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "你暂时无法使用该物品.");
						    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10])
							{
						    	ShowPlayerDialog(playerid, DIALOG_ITEMS_CAMERA, DIALOG_STYLE_LIST, "{FF9900}物品", "拿起相机\n丢弃相机", "选择", "取消");
							}
							else
							{
							    ShowPlayerDialog(playerid, DIALOG_ITEMS_CAMERA, DIALOG_STYLE_LIST, "{FF9900}物品", "存放相机\n丢弃相机", "选择", "取消");
							}
						}
						case 15:
						{
					    	ShowPlayerDialog(playerid, DIALOG_ITEMS_DICE, DIALOG_STYLE_LIST, "{FF9900}物品", "摇骰子\n丢弃骰子", "选择", "取消");
						}
						case 16:
						{
					    	ShowPlayerDialog(playerid, DIALOG_ITEMS_CARDDECK, DIALOG_STYLE_LIST, "{FF9900}物品", "抽牌\n丢弃牌组", "选择", "取消");
						}
						case 17:
						{
						    if(GetPVarInt(playerid, "Arrest") > 0) return SendClientMessage(playerid, COLOR_GREY, "你暂时无法使用该物品.");
       						if(PlayerInfo[playerid][pPrisonTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "你暂时无法使用该物品.");
						    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10])
							{
						    	ShowPlayerDialog(playerid, DIALOG_ITEMS_CLIP7, DIALOG_STYLE_LIST, "{FF9900}物品", "握住手枪弹夹 (容量: 21)\n丢弃弹夹 (容量: 21)", "选择", "取消");
							}
							else
							{
							    ShowPlayerDialog(playerid, DIALOG_ITEMS_CLIP7, DIALOG_STYLE_LIST, "{FF9900}物品", "存放手枪弹夹 (容量: 21)\n丢弃手枪弹夹 (容量: 21)", "选择", "取消");
							}
						}
						case 18:
						{
						    if(GetPVarInt(playerid, "Arrest") > 0) return SendClientMessage(playerid, COLOR_GREY, "你暂时无法使用该物品.");
       						if(PlayerInfo[playerid][pPrisonTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "你暂时无法使用该物品.");
						    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10]) {
						    	ShowPlayerDialog(playerid, DIALOG_ITEMS_CLIP30, DIALOG_STYLE_LIST, "{FF9900}物品", "握住自动枪械弹匣 (容量: 100)\n丢弃自动枪械弹匣 (容量: 100)", "选择", "取消");
							}
							else
							{
							    ShowPlayerDialog(playerid, DIALOG_ITEMS_CLIP30, DIALOG_STYLE_LIST, "{FF9900}物品", "存放自动枪械弹匣 (容量: 100)\n丢弃自动枪械弹匣 (容量: 100)", "选择", "取消");
							}
						}
						case 19:
						{
						    if(GetPVarInt(playerid, "Arrest") > 0) return SendClientMessage(playerid, COLOR_GREY, "你暂时无法使用该物品.");
       						if(PlayerInfo[playerid][pPrisonTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "你暂时无法使用该物品.");
						    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10])
							{
						    	ShowPlayerDialog(playerid, DIALOG_ITEMS_ROUNDS, DIALOG_STYLE_LIST, "{FF9900}物品", "拿起重型枪械弹匣\n丢弃重型枪械弹匣", "选择", "取消");
							}
							else
							{
                                ShowPlayerDialog(playerid, DIALOG_ITEMS_ROUNDS, DIALOG_STYLE_LIST, "{FF9900}物品", "存放重型枪械弹匣\n丢弃重型枪械弹匣", "选择", "取消");
							}
						}
						case 20:
						{
						    ShowPlayerDialog(playerid, DIALOG_ITEMS_CIGARETTES, DIALOG_STYLE_LIST, "{FF9900}物品", "点燃香烟\n丢弃香烟", "选择", "取消");
						}
						case 21:
						{
						   	ShowPlayerDialog(playerid, DIALOG_ITEMS_LIGHTER, DIALOG_STYLE_LIST, "{FF9900}物品", "丢弃打火机", "选择", "取消");
						}
						case 22:
						{
						    ShowPlayerDialog(playerid, DIALOG_ITEMS_BRIEFCASE, DIALOG_STYLE_LIST, "{FF9900}物品", "丢弃公文包", "选择", "取消");
						}
						case 23:
						{
						    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10])
							{
						   	 	ShowPlayerDialog(playerid, DIALOG_ITEMS_FLASHLIGHT, DIALOG_STYLE_LIST, "{FF9900}物品", "握住手电筒\n丢弃手电筒", "选择", "取消");
							}
							else
							{
							    ShowPlayerDialog(playerid, DIALOG_ITEMS_FLASHLIGHT, DIALOG_STYLE_LIST, "{FF9900}物品", "存放手电筒\n丢弃手电筒", "选择", "取消");
							}
						}
						case 24:
					 	{
						    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10])
							{
						    	ShowPlayerDialog(playerid, DIALOG_ITEMS_HAMMER, DIALOG_STYLE_LIST, "{FF9900}物品", "握住锤头\n丢弃锤头", "选择", "取消");
							}
							else
							{
							    ShowPlayerDialog(playerid, DIALOG_ITEMS_HAMMER, DIALOG_STYLE_LIST, "{FF9900}物品", "存放锤头\n丢弃锤头", "选择", "取消");
							}
						}
						case 25:
						{
						    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10])
							{
						    	ShowPlayerDialog(playerid, DIALOG_ITEMS_SCREWDRIVER, DIALOG_STYLE_LIST, "{FF9900}物品", "握住螺丝刀\n丢弃螺丝刀", "选择", "取消");
							}
							else
							{
							    ShowPlayerDialog(playerid, DIALOG_ITEMS_SCREWDRIVER, DIALOG_STYLE_LIST, "{FF9900}物品", "存放螺丝刀\n丢弃螺丝刀", "选择", "取消");
							}
						}
						case 26: {
						    ShowPlayerDialog(playerid, DIALOG_ITEMS_PIZZA_SLICE, DIALOG_STYLE_LIST, "{FF9900}物品", "食用披萨\n丢弃披萨", "选择", "取消");
						}
						case 27: {
						    ShowPlayerDialog(playerid, DIALOG_ITEMS_HAMBURGER, DIALOG_STYLE_LIST, "{FF9900}物品", "食用汉堡\n丢弃汉堡", "选择", "取消");
						}
						/*case 28, 243, 244, 245, 246, 247, 248, 249: {
           					ShowPlayerDialog(playerid, DIALOG_ITEMS_SPRUNK, DIALOG_STYLE_LIST, "{FF9900}物品", "Drink Bottle\nDrop Bottle", "选择", "取消");
						}*/
						case 250, 251, 252: {
						    ShowPlayerDialog(playerid, DIALOG_ITEMS_BOOMBOX, DIALOG_STYLE_LIST, "{FF9900}物品", "丢弃音响", "选择", "取消");
						}
						case 29: {
						    ShowPlayerDialog(playerid, DIALOG_ITEMS_PIZZA_BOX, DIALOG_STYLE_LIST, "{FF9900}物品", "丢弃披萨盒", "选择", "取消");
						}
						case 241: {
						    ShowPlayerDialog(playerid, DIALOG_ITEMS_BOX, DIALOG_STYLE_LIST, "{FF9900}物品", "丢弃箱子", "选择", "取消");
						}
						case 240: {
                            ShowPlayerDialog(playerid, DIALOG_ITEMS_TRASH_BAG, DIALOG_STYLE_LIST, "{FF9900}物品", "丢弃垃圾袋", "选择", "取消");
						}
						case 242: {
						    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10]) {
						    	ShowPlayerDialog(playerid, DIALOG_ITEMS_TASER, DIALOG_STYLE_LIST, "{FF9900}物品", "握住电击枪\n将电击枪充电\n丢弃电击枪", "选择", "取消");
							} else {
							    ShowPlayerDialog(playerid, DIALOG_ITEMS_TASER, DIALOG_STYLE_LIST, "{FF9900}物品", "存放电击枪\n将电击枪充电\n丢弃电击枪", "选择", "取消");
							}
						}
						case 30, 188 .. 225, 253 .. 255:
						{
						    if(GetPVarInt(playerid, "Arrest") > 0) return SendClientMessage(playerid, COLOR_GREY, "你暂时无法使用该指令.");
       						if(PlayerInfo[playerid][pPrisonTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "你暂时无法使用该指令.");
                            if(items[PlayerInfo[playerid][pItemType][10]][itemType] != ITEM_WEAPON && items[PlayerInfo[playerid][pItemType][10]][storable] == 0)
							{
                                ShowPlayerDialog(playerid, DIALOG_ITEMS_WEAPON, DIALOG_STYLE_LIST, "{FF9900}物品", "丢弃武器", "选择", "取消");
							}
							else if(items[PlayerInfo[playerid][pItemType][10]][itemType] != ITEM_WEAPON && items[PlayerInfo[playerid][pItemType][10]][storable] != 0)
							{
							    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10])
								{
							    	ShowPlayerDialog(playerid, DIALOG_ITEMS_WEAPON, DIALOG_STYLE_LIST, "{FF9900}物品", "握住武器\n丢弃武器", "选择", "取消");
								}
								else
								{
                                    ShowPlayerDialog(playerid, DIALOG_ITEMS_WEAPON, DIALOG_STYLE_LIST, "{FF9900}物品", "存放武器\n丢弃武器", "选择", "取消");
								}
							}
							else
							{
							    if(items[PlayerInfo[playerid][pItemType][10]][storable] == 0 && WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadable] != 0)
								{
							    	ShowPlayerDialog(playerid, DIALOG_ITEMS_WEAPON, DIALOG_STYLE_LIST, "{FF9900}物品", "填装子弹\n将保险锁上\n丢弃武器", "选择", "取消");
								}
								else if(items[PlayerInfo[playerid][pItemType][10]][storable] != 0 && WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadable] != 0)
								{
								    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10])
									{
								    	ShowPlayerDialog(playerid, DIALOG_ITEMS_WEAPON, DIALOG_STYLE_LIST, "{FF9900}物品", "握住武器\n填装子弹\n将保险锁上\n丢弃武器", "选择", "取消");
									}
									else
									{
									    ShowPlayerDialog(playerid, DIALOG_ITEMS_WEAPON, DIALOG_STYLE_LIST, "{FF9900}物品", "存放武器\n填装子弹\n将保险锁上\n丢弃武器", "选择", "取消");
									}
								}
								else if(items[PlayerInfo[playerid][pItemType][10]][storable] == 0 && WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadable] == 0)
								{
								    ShowPlayerDialog(playerid, DIALOG_ITEMS_WEAPON, DIALOG_STYLE_LIST, "{FF9900}物品", "丢弃武器", "选择", "取消");
								}
								else if(items[PlayerInfo[playerid][pItemType][10]][storable] != 0 && WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadable] == 0)
								{
								    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10])
									{
								    	ShowPlayerDialog(playerid, DIALOG_ITEMS_WEAPON, DIALOG_STYLE_LIST, "{FF9900}物品", "握住武器\n丢弃武器", "选择", "取消");
									}
									else
									{
									    ShowPlayerDialog(playerid, DIALOG_ITEMS_WEAPON, DIALOG_STYLE_LIST, "{FF9900}物品", "存放武器\n丢弃武器", "选择", "取消");
									}
								}
							}
						}
						case 31 .. 187, 226, 227, 228 .. 230, 233 .. 239, 243:
						{
							if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10])
							{
								new dialogMsg[80];
							    format(dialogMsg, sizeof(dialogMsg), "戴上%s\n丢弃%s", items[PlayerInfo[playerid][pItemType][10]][itemName], items[PlayerInfo[playerid][pItemType][10]][itemName]);
                                ShowPlayerDialog(playerid, DIALOG_ITEMS_CLOTHES, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "选择", "取消");
							}
							else
							{
							    new dialogMsg[130];
							    format(dialogMsg, sizeof(dialogMsg), "存放%s\n调整%s\n丢弃%s", items[PlayerInfo[playerid][pItemType][10]][itemName], items[PlayerInfo[playerid][pItemType][10]][itemName], items[PlayerInfo[playerid][pItemType][10]][itemName]);
							    ShowPlayerDialog(playerid, DIALOG_ITEMS_CLOTHES, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "选择", "取消");
							}
						}
						case 231:
						{
						    ShowPlayerDialog(playerid, DIALOG_ITEMS_RADIO, DIALOG_STYLE_LIST, "{FF9900}物品", "丢弃 Motorola APX 4000 无线电", "选择", "取消");
						}
						case 232: {
						    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10]) {
                            	ShowPlayerDialog(playerid, DIALOG_ITEMS_HANDCUFFS, DIALOG_STYLE_LIST, "{FF9900}物品", "拿起手铐\n丢弃手铐", "选择", "取消");
							} else {
							    ShowPlayerDialog(playerid, DIALOG_ITEMS_HANDCUFFS, DIALOG_STYLE_LIST, "{FF9900}物品", "存放手铐\n丢弃手铐", "选择", "取消");
							}
						}
						/*case 233:
						{
         					ShowPlayerDialog(playerid, DIALOG_ITEMS_RIOT_SHIELD, DIALOG_STYLE_LIST, "{FF9900}物品", "Drop Riot Shield", "选择", "取消");
						}*/
					}
				}
			}
		}
		case DIALOG_ITEMS_RADIO: {
			if(response) {
				switch(listitem) {
					case 0: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

      					DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_RIOT_SHIELD: {
			if(response) {
				switch(listitem) {
					case 0: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

      					DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_BASKETBALL: {
			if(response) {
				switch(listitem) {
					case 0: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

      					DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		
		case DIALOG_ITEMS_ATMCARD:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10])
						{
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}
					}
				}
			}
		}
		
		case DIALOG_ITEMS_GASCAN_USE: {//
			if(response) {
				if(strlen(inputtext) != 0 && IsNumeric(inputtext)) {
				    new liters = strval(inputtext);
				    if(liters != 0) {
				        if(liters <= PlayerInfo[playerid][pItemVar][0]) {
							new vehicle = GetPVarInt(playerid, "GascanVehicle"),
							    model = GetVehicleModel(vehicle);
							    
							if(VehicleInfo[vehicle][vFuel] + liters <= vehicleData[model - 400][tank]) {
							    new query[110];
							    VehicleInfo[vehicle][vFuel] += liters;
							    PlayerInfo[playerid][pItemVar][0] -= liters;
							    setItemVariable(playerid, PlayerInfo[playerid][pItemIndex][0], PlayerInfo[playerid][pItemVar][0]);
		                        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][0], PlayerInfo[playerid][pItemID][0]);
		                        mysql_function_query(sqlHandle, query, false, "", "");
		                        format(query, sizeof(query), "你将 %i 升汽油倒入载具 %s 中 (还剩: %i升).", liters, vehicleData[model - 400][typeName], PlayerInfo[playerid][pItemVar][0]);
		                        SendClientMessage(playerid, COLOR_WHITE, query);
		                        format(query, sizeof(query), "** %s 将汽油倒入载具 %s 中.", GetNameWithSpace(playerid, 1), vehicleData[model - 400][typeName]);
		                        ProxDetector(12, playerid, query, COLOR_PINK);
		                        FreezePlayer(playerid);
			                    ApplyAnimation(playerid, "BD_FIRE", "wash_up", 4.1, 0, 1, 1, 0, 0, 1);
			                    GameTextForPlayer(playerid, "~g~Refilling...", 3500, 6);
			                    UnfreezeTimerVar[playerid] = SetTimerEx("UnfreezeTimer", 3500, false, "i", playerid);
							} else {
								SendClientMessage(playerid, COLOR_GREY, "该车无法容下这么多的汽油.");
							}
				        } else {
							SendClientMessage(playerid, COLOR_GREY, "你没有这么多的汽油.");
						}
				    } else {
				        SendClientMessage(playerid, COLOR_GREY, "数量不能低于1.");
				    }
				} else {
					SendClientMessage(playerid, COLOR_GREY, "你需要输入一个数量.");
				}
			}
		}
		case DIALOG_ITEMS_GASCAN_REFILL: {
			if(response) {
                if(strlen(inputtext) != 0 && IsNumeric(inputtext)) {
				    new liters = strval(inputtext);
				    if(liters != 0) {
				        if(PlayerInfo[playerid][pItemVar][0] + liters <= 20) {
				            new query[90];
						    PlayerInfo[playerid][pItemVar][0] += liters;
						    setItemVariable(playerid, PlayerInfo[playerid][pItemIndex][0], PlayerInfo[playerid][pItemVar][0]);
		                    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][0], PlayerInfo[playerid][pItemID][0]);
		                    mysql_function_query(sqlHandle, query, false, "", "");
		                    format(query, sizeof(query), "你购买了 %s 升汽油, 花费 $%i.", liters, liters * GM_GASPRICE);
		                    SendClientMessage(playerid, COLOR_WHITE, query);
		                    format(query, sizeof(query), "** %s 将汽油桶装满..", GetNameWithSpace(playerid, 1));
		                    ProxDetector(12, playerid, query, COLOR_PINK);
		                    GivePlayerMoneyEx(playerid, -liters * GM_GASPRICE);
		                    FreezePlayer(playerid);
		                    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
		                    GameTextForPlayer(playerid, "~g~Refilling...", 3500, 6);
		                    UnfreezeTimerVar[playerid] = SetTimerEx("UnfreezeTimer", 3500, false, "i", playerid);
				        } else {
							SendClientMessage(playerid, COLOR_GREY, "该车无法容下这么多的汽油.");
						}
				    } else {
				        SendClientMessage(playerid, COLOR_GREY, "数量不能低于1");
				    }
				} else {
					SendClientMessage(playerid, COLOR_GREY, "你需要输入一个数量.");
				}
			}
		}
		case DIALOG_ITEMS_GASCAN: {
			if(response) {
				switch(listitem) {
					case 0: {
					    if(PlayerInfo[playerid][pItemVar][10] != 0) {
						    new vehicle = -1,
								Float:distance,
								Float:X,
								Float:Y,
								Float:Z;

							for(new i = 0; i != MAX_VEHICLES; i++) {
		        				if(IsVehicleSpawned(i)) {
									GetVehiclePos(i, X, Y, Z);
	                				if(IsPlayerInRangeOfPoint(playerid, 5, X, Y, Z)) {
										if(vehicle == -1 || GetPlayerDistanceFromPoint(playerid, X, Y, Z) < distance) {
											vehicle = i;
											distance = GetPlayerDistanceFromPoint(playerid, X, Y, Z);
										}
									}
								}
							}

							if(vehicle != -1) {
							    SetPVarInt(playerid, "GascanVehicle", vehicle);
							    ShowPlayerDialog(playerid, DIALOG_ITEMS_GASCAN_USE, DIALOG_STYLE_INPUT, "{FF9900}汽油桶", "你想给载具加多少升的汽油?", "提交", "取消");
							} else {
								SendClientMessage(playerid, COLOR_GREY, "附近没有车辆.");
							}
						} else {
							SendClientMessage(playerid, COLOR_GREY, "你的汽油桶已经空了.");
						}
					}
					case 1: {
					    if(IsPlayerInRangeOfPoint(playerid, 5, 1940.1053, -1772.8323, 13.3906) || IsPlayerInRangeOfPoint(playerid, 5, 1004.0475, -938.3154, 42.1797) || IsPlayerInRangeOfPoint(playerid, 5, -91.4394, -1169.2651, 1.9978) || (PlayerInfo[playerid][pFaction] == 1 && IsPlayerInRangeOfPoint(playerid, 5, 1584.1018,-1674.7207,5.9000))) {
							ShowPlayerDialog(playerid, DIALOG_ITEMS_GASCAN_REFILL, DIALOG_STYLE_INPUT, "{FF9900}汽油桶", "你想给汽油桶装多少升的汽油?", "提交", "取消");
						} else {
					        SendClientMessage(playerid, COLOR_GREY, "你没有靠近任何加油站.");
					    }
					}
					case 2: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_CELLPHONE: {
		    if(response) {
				switch(listitem) {
					case 0: {
					    if(GetPVarInt(playerid, "Calling") != -1) {
					        SendClientMessage(playerid, COLOR_GREY, "你正在通话中.");
					    } else if(getItemTempVar(playerid, PlayerInfo[playerid][pItemIndex][10]) != 0) {
					        SendClientMessage(playerid, COLOR_GREY, "手机已经关闭了!");
						} else {
							new number = PlayerInfo[playerid][pItemVar][10],
								dialogMsg[75];
								
							format(dialogMsg, sizeof(dialogMsg), "你正在用号码'%i'拨打他人电话, 请输入一个号码进行拨打:", number);
							ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_DIAL, DIALOG_STYLE_INPUT, "{FF9900}物品", dialogMsg, "确定", "取消");
						}
					}
					case 1: {
					    if(GetPVarInt(playerid, "Calling") != -1) {
					        SendClientMessage(playerid, COLOR_GREY, "你正在通话中.");
					    } else if(getItemTempVar(playerid, PlayerInfo[playerid][pItemIndex][10]) != 0) {
					        SendClientMessage(playerid, COLOR_GREY, "手机已经关闭了.");
						} else {
							new number = PlayerInfo[playerid][pItemVar][10];
							if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != 0 && PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != number) {
							    SendClientMessage(playerid, COLOR_GREY, "你手上已经携带了一个物品.");
							} else {
							    new dialogMsg[75];
								format(dialogMsg, sizeof(dialogMsg), "你正在用号码'%i'发送信息, 请输入一个号码进行发送::", number);
								ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_SMS, DIALOG_STYLE_INPUT, "{FF9900}物品", dialogMsg, "发送", "取消");
							}
						}
					}
					case 2: {
					    if(GetPVarInt(playerid, "CallingNumber") == PlayerInfo[playerid][pItemVar][10]) {
						    new me[100];
							switch(GetPVarInt(playerid, "CallingSpeaker")) {
								case 0: {
									format(me, sizeof(me), "** %s 将%s的免提打开.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                                    SetPVarInt(playerid, "CallingSpeaker", 1);
								}
								case 1: {
								    format(me, sizeof(me), "** %s 将%s的免提打开.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                                    SetPVarInt(playerid, "CallingSpeaker", 0);
								}
							}

							ProxDetector(12, playerid, me, COLOR_PINK);
						} else {
							SendClientMessage(playerid, COLOR_GREY, "你并不在通话, 无法打开免提.");
						}
					}
					case 3: {
					    new query[85];
					    mysql_format(sqlHandle, query, sizeof(query), "SELECT `contact`, `number` FROM `samp_cell_contacts` WHERE `cellphone` = %i", PlayerInfo[playerid][pItemVar][10]);
					    mysql_function_query(sqlHandle, query, true, "OnPlayerCellphoneContacts", "i", playerid);
					}
					case 4: {
					    new query[65];
					    mysql_format(sqlHandle, query, sizeof(query), "SELECT `note` FROM `samp_cell_notes` WHERE `number` = %i", PlayerInfo[playerid][pItemVar][10]);
					    mysql_function_query(sqlHandle, query, true, "OnPlayerCellphoneNotes", "i", playerid);
					}
					case 5: {
					    if(GetPVarInt(playerid, "Calling") != -1) return SendClientMessage(playerid, COLOR_GREY, "你通话中无法关闭你的手机.");
						new me[110];
						if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemVar][10])
						{
						    format(me, sizeof(me), "** %s 打开%s并且放在手中.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						}
						else
						{
							format(me, sizeof(me), "** %s 取出%s并且打开它.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						}

						ProxDetector(12, playerid, me, COLOR_PINK);
					    switch(getItemTempVar(playerid, PlayerInfo[playerid][pItemIndex][10]))
						{
					        case 0:
							{
								setItemTempVar(playerid, PlayerInfo[playerid][pItemIndex][10], 1);
								SendClientMessage(playerid, COLOR_WHITE, "你将手机关机了.");
							}
							case 1:
							{
								setItemTempVar(playerid, PlayerInfo[playerid][pItemIndex][10], 0);
								SendClientMessage(playerid, COLOR_WHITE, "你将手机开机了.");
							}
						}
					}
					case 6: {
					    if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0) {
					        new me[85];
					        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];
					        format(me, sizeof(me), "** %s 从口袋取出 %s.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							SetPlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx], items[PlayerInfo[playerid][pItemType][10]][objID],
															  items[PlayerInfo[playerid][pItemType][10]][bone], items[PlayerInfo[playerid][pItemType][10]][attX],
															  items[PlayerInfo[playerid][pItemType][10]][attY], items[PlayerInfo[playerid][pItemType][10]][attZ],
															  items[PlayerInfo[playerid][pItemType][10]][attRotX], items[PlayerInfo[playerid][pItemType][10]][attRotY],
															  items[PlayerInfo[playerid][pItemType][10]][attRotZ]);
					    } else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
					        new me[110];
					        format(me, sizeof(me), "** %s 将 %s 放回口袋.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						} else {
							PrintSameItemOrHandcuffedMsg(playerid);
						}
					}
					case 7: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_CELLPHONE_DIAL: {
			if(response) {
				if(!isnull(inputtext) && IsNumeric(inputtext) && strlen(inputtext) <= 7) {
					new number = strval(inputtext);
					if(number == HOTLINE_EMERGENCY || number == HOTLINE_TAXI || number == HOTLINE_MECHANIC) {
					    SetPlayerCalling(playerid, -1, PlayerInfo[playerid][pItemVar][10], number, 0);
					} else if(strlen(inputtext) == 7) {
					    new query[90];
						mysql_format(sqlHandle, query, sizeof(query), "SELECT `owner` FROM `samp_items` WHERE `var` = %i AND `item` >= 4 AND `item` <= 13", number);
						mysql_function_query(sqlHandle, query, true, "OnPlayerDialNumber", "ii", playerid, number);
					} else {
					    SetPlayerCalling(playerid, -1, PlayerInfo[playerid][pItemVar][10], number, 1);
					}
				} else {
				    new dialogMsg[75];
				    SendClientMessage(playerid, COLOR_GREY, "号码不能超过7个字节.");
     				format(dialogMsg, sizeof(dialogMsg), "你正在使用'%i'进行拨号, 请输入对方号码:", PlayerInfo[playerid][pItemVar][10]);
					ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_DIAL, DIALOG_STYLE_INPUT, "{FF9900}物品", dialogMsg, "拨打", "取消");
				}
			}
		}
		case DIALOG_ITEMS_CELLPHONE_SMS: {
			if(response) {
                if(!isnull(inputtext) && IsNumeric(inputtext) && strlen(inputtext) <= 7) {
                    new dialogMsg[100];
                    SetPVarInt(playerid, "SMSNumber", strval(inputtext));
                    format(dialogMsg, sizeof(dialogMsg), "请输入信息内容发送至 '%i' (最大128个字节):", GetPVarInt(playerid, "SMSNumber"));
                    ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_SMS_SEND, DIALOG_STYLE_INPUT, "{FF9900}物品", dialogMsg, "发送", "取消");
                } else {
					new dialogMsg[80];
					SendClientMessage(playerid, COLOR_GREY, "号码不能超过7个字节.");
                    format(dialogMsg, sizeof(dialogMsg), "你正在使用'%i'发送信息, 请输入对方号码:", PlayerInfo[playerid][pItemVar][10]);
                    ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_SMS, DIALOG_STYLE_INPUT, "{FF9900}物品", dialogMsg, "发送", "取消");
                }
			}
		}
		case DIALOG_ITEMS_CELLPHONE_SMS_SEND: {
			if(response) {
				if(!isnull(inputtext)) {
				    new number = GetPVarInt(playerid, "SMSNumber");
					if(number >= 1000000 && number <= 9999999) {
					    new query[90];
						mysql_format(sqlHandle, query, sizeof(query), "SELECT `owner` FROM `samp_items` WHERE `var` = %i AND `item` >= 4 AND `item` <= 13", number);
						mysql_function_query(sqlHandle, query, true, "OnPlayerSMSNumber", "iis", playerid, number, inputtext);
					} else {
					    SendClientMessage(playerid, COLOR_GREY, "对方手机不在服务区.");
					}
				} else {
				    new dialogMsg[100];
				    SendClientMessage(playerid, COLOR_GREY, "信息内容不能超过128个字节.");
				    format(dialogMsg, sizeof(dialogMsg), "请输入信息内容发送至 '%i' (最大128个字节):", GetPVarInt(playerid, "SMSNumber"));
                    ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_SMS_SEND, DIALOG_STYLE_INPUT, "{FF9900}物品", dialogMsg, "发送", "取消");
				}
			}
		}
		case DIALOG_ITEMS_CELLPHONE_CONTACTS: {
		    if(response) {
				switch(listitem) {
					case 0: {
						if(GetPVarInt(playerid, "ContactsAmount") < MAX_CONTACTS) {
							ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_CONTACT_CREATE, DIALOG_STYLE_INPUT, "{FF9900}物品", "请输入联系人名字 (最大25个字节):", "创建", "取消");
						} else {
							SendClientMessage(playerid, COLOR_GREY, "手机无法存下更多的联系人, 尝试删除一个.");
						}
					}
					default: {
						SetPVarInt(playerid, "CellContact", listitem - 1);
						ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_CONTACT_VIEW, DIALOG_STYLE_LIST, "{FF9900}物品", "拨打电话\n发送信息\n删除联系人", "选择", "取消");
					}
				}
			}
		}
		case DIALOG_ITEMS_CELLPHONE_CONTACT_CREATE: {
		    if(response) {
				if(!isnull(inputtext) && strlen(inputtext) <= 25) {
				    new dialogMsg[80];
					SetPVarString(playerid, "CellContactName", inputtext);
					format(dialogMsg, sizeof(dialogMsg), "请输入联系人号码 (%s):", inputtext);
					ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_CONTACT_CREATE_NUMBER, DIALOG_STYLE_INPUT, "{FF9900}物品", dialogMsg, "创建", "取消");
				} else {
				    SendClientMessage(playerid, COLOR_GREY, "联系人名字不能超过25个字节.");
				    ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_CONTACT_CREATE, DIALOG_STYLE_INPUT, "{FF9900}物品", "请输入联系人名字 (最大25个字节):", "创建", "取消");
				}
			}
		}
		case DIALOG_ITEMS_CELLPHONE_CONTACT_CREATE_NUMBER: {
			if(response) {
				if(!isnull(inputtext) && IsNumeric(inputtext)) {
					if(strlen(inputtext) < 11) {
					    new contact[25],
							query[140],
							playerMsg[80];

					    GetPVarString(playerid, "CellContactName", contact, sizeof(contact));
						mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_cell_contacts` (`cellphone`, `contact`, `number`) VALUES (%i, '%e', %i)", PlayerInfo[playerid][pItemVar][10], contact, strval(inputtext));
						mysql_function_query(sqlHandle, query, false, "", "");
						format(playerMsg, sizeof(playerMsg), "你成功创建了一个联系人 (名字: %s 号码: %i).", contact, strval(inputtext));
						SendClientMessage(playerid, COLOR_WHITE, playerMsg);
					} else {
					    SendClientMessage(playerid, COLOR_GREY, "联系人号码不能超过10位.");
					    ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_CONTACT_CREATE_NUMBER, DIALOG_STYLE_INPUT, "{FF9900}物品", "请输入联系人号码:", "创建", "取消");
					}
				} else {
				    //SendClientMessage(playerid, COLOR_GREY, "请输入联系人名字.");
				    ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_CONTACT_CREATE_NUMBER, DIALOG_STYLE_INPUT, "{FF9900}物品", "请输入联系人名字:", "创建", "取消");
				}
			}
		}
		case DIALOG_ITEMS_CELLPHONE_CONTACT_VIEW: {
			if(response) {
				switch(listitem) {
					case 0: {
					    new query[90];
					    mysql_format(sqlHandle, query, sizeof(query), "SELECT `number` FROM `samp_cell_contacts` WHERE `cellphone` = %i LIMIT %i, 1", PlayerInfo[playerid][pItemVar][10], GetPVarInt(playerid, "CellContact"));
					    mysql_function_query(sqlHandle, query, true, "OnPlayerDialContact", "i", playerid);
					}
					case 1: {
					    new query[90];
					    mysql_format(sqlHandle, query, sizeof(query), "SELECT `number` FROM `samp_cell_contacts` WHERE `cellphone` = %i LIMIT %i, 1", PlayerInfo[playerid][pItemVar][10], GetPVarInt(playerid, "CellContact"));
					    mysql_function_query(sqlHandle, query, true, "OnPlayerSMSContact", "i", playerid);
					}
					case 2: {
					    new query[105];
					    mysql_format(sqlHandle, query, sizeof(query), "SELECT `id`, `contact`, `number` FROM `samp_cell_contacts` WHERE `cellphone` = %i LIMIT %i, 1", PlayerInfo[playerid][pItemVar][10], GetPVarInt(playerid, "CellContact"));
					    mysql_function_query(sqlHandle, query, true, "OnPlayerDeleteCellphoneContact", "i", playerid);
					}
				}
			}
		}
		case DIALOG_ITEMS_CELLPHONE_NOTES: {
			if(response) {
				switch(listitem) {
					case 0: {
					    if(GetPVarInt(playerid, "NotesAmount") < MAX_NOTES) {
							ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_NOTE_CREATE, DIALOG_STYLE_INPUT, "{FF9900}物品", "请输入记事本内容:", "创建", "取消");
						} else {
						    SendClientMessage(playerid, COLOR_GREY, "手机无法存下更多的记事本了.");
						}
					}
					default: {
						new query[90];
						SetPVarInt(playerid, "ViewCellNote", listitem - 1);
						mysql_format(sqlHandle, query, sizeof(query), "SELECT `note`, `date` FROM `samp_cell_notes` WHERE `number` = %i LIMIT %i, 1", PlayerInfo[playerid][pItemVar][10], listitem - 1);
						mysql_function_query(sqlHandle, query, true, "OnPlayerViewCellphoneNote", "i", playerid);
					}
				}
			}
		}
		case DIALOG_ITEMS_CELLPHONE_NOTE_CREATE: {
			if(response) {
				if(!isnull(inputtext)) {
					new query[220],
						playerMsg[40];

					mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_cell_notes` (`number`, `note`, `date`) VALUES (%i, '%e', NOW())", PlayerInfo[playerid][pItemVar][10], inputtext);
					mysql_function_query(sqlHandle, query, false, "", "");
					format(playerMsg, sizeof(playerMsg), "你创建了一个记事本 (号码: %i).", PlayerInfo[playerid][pItemVar][10]);
					SendClientMessage(playerid, COLOR_WHITE, playerMsg);
				} else {
				    SendClientMessage(playerid, COLOR_GREY, "你至少需要输入一个字节创建记事本.");
                    ShowPlayerDialog(playerid, DIALOG_ITEMS_CELLPHONE_NOTE_CREATE, DIALOG_STYLE_INPUT, "{FF9900}物品", "请输入记事本内容:", "创建", "取消");
				}
			}
		}
		case DIALOG_ITEMS_CELLPHONE_VIEW_NOTE: {
			if(response) {
			    new query[80],
					playerMsg[40];

			    mysql_format(sqlHandle, query, sizeof(query), "SELECT `id` FROM `samp_cell_notes` WHERE `number` = %i LIMIT %i, 1", PlayerInfo[playerid][pItemVar][10], GetPVarInt(playerid, "ViewCellNote"));
			    mysql_function_query(sqlHandle, query, true, "OnPlayerDeleteCellphoneNote", "i", playerid);
			    format(playerMsg, sizeof(playerMsg), "你删除了一个记事本 (号码: %i).", PlayerInfo[playerid][pItemVar][10]);
				SendClientMessage(playerid, COLOR_WHITE, playerMsg);
			}
		}
		case DIALOG_ITEMS_CAMERA: {
			if(response) {
				switch(listitem) {
				    case 0: {
				        if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0) {
					        new me[85];
					        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];
					        format(me, sizeof(me), "** %s 取出%s.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
	                        SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][10]][weaponID], PlayerInfo[playerid][pItemVar][10]);
					    } else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
					        new me[110],
								guns[2],
								query[65];

							if(items[PlayerInfo[playerid][pItemType][10]][itemType] == ITEM_WEAPON) {
								for(new i = 0; i != 13; i++) {
									GetPlayerWeaponData(playerid, i, guns[0], guns[1]);
									if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
                                        setItemVariable(playerid, PlayerInfo[playerid][pItemIndex][10], guns[1]);
                                        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", guns[1], PlayerInfo[playerid][pItemID][10]);
                                        mysql_function_query(sqlHandle, query, false, "", "");
                                        break;
									}
								}
							}

					        format(me, sizeof(me), "** %s 将 %s 放起来.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							SetPlayerAmmo(playerid, WEAPON_CAMERA, 0);
							if(IsPlayerAttachedObjectSlotUsed(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx])) {
								RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							}

							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						} else {
							PrintSameItemOrHandcuffedMsg(playerid);
						}
				    }
					case 1: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_CARDDECK: {
			if(response) {
				switch(listitem) {
					case 0: {
						new figure = random(sizeof(figures)),
						    symbol = random(sizeof(symbols)),
						    me[128];

						format(me, sizeof(me), "** %s 摸了一张牌: %s - %s.", GetNameWithSpace(playerid, 1), symbols[symbol], figures[figure]);
			        	ProxDetector(12, playerid, me, COLOR_PINK);
					}
					case 1: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
                        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_DICE: {
		    if(response) {
				switch(listitem) {
					case 0: {
					    new me[70],
					        result = random(6) + 1;
					        
					    format(me, sizeof(me), "** %s 摇了摇骰子, 结果为 %s.", GetNameWithSpace(playerid, 1), numbers[result]);
					    ProxDetector(12, playerid, me, COLOR_PINK);
					}
					case 1: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
                        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_CLIP7: {
		    if(response) {
				switch(listitem) {
					case 0: {
					    if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0) {
					        new me[85];
					        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];
					        format(me, sizeof(me), "** %s 取出%s.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							SetPlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx], items[PlayerInfo[playerid][pItemType][10]][objID],
															  items[PlayerInfo[playerid][pItemType][10]][bone], items[PlayerInfo[playerid][pItemType][10]][attX],
															  items[PlayerInfo[playerid][pItemType][10]][attY], items[PlayerInfo[playerid][pItemType][10]][attZ],
															  items[PlayerInfo[playerid][pItemType][10]][attRotX], items[PlayerInfo[playerid][pItemType][10]][attRotY],
															  items[PlayerInfo[playerid][pItemType][10]][attRotZ]);
					    } else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
					        new me[110];
					        format(me, sizeof(me), "** %s 将%s存放起来.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						} else {
							PrintSameItemOrHandcuffedMsg(playerid);
						}
					}
					case 1: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_CLIP30: {
		    if(response) {
				switch(listitem) {
					case 0: {
					    if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0) {
					        new me[85];
					        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];
					        format(me, sizeof(me), "** %s 取出%s.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							SetPlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx], items[PlayerInfo[playerid][pItemType][10]][objID],
															  items[PlayerInfo[playerid][pItemType][10]][bone], items[PlayerInfo[playerid][pItemType][10]][attX],
															  items[PlayerInfo[playerid][pItemType][10]][attY], items[PlayerInfo[playerid][pItemType][10]][attZ],
															  items[PlayerInfo[playerid][pItemType][10]][attRotX], items[PlayerInfo[playerid][pItemType][10]][attRotY],
															  items[PlayerInfo[playerid][pItemType][10]][attRotZ]);
					    } else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
					        new me[110];
					        format(me, sizeof(me), "** %s 将%s存放起来.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						} else {
							PrintSameItemOrHandcuffedMsg(playerid);
						}
					}
					case 1: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_ROUNDS: {
		    if(response) {
				switch(listitem) {
					case 0: {
					    if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0) {
					        new me[85];
					        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];
					        format(me, sizeof(me), "** %s 取出%s.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							SetPlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx], items[PlayerInfo[playerid][pItemType][10]][objID],
															  items[PlayerInfo[playerid][pItemType][10]][bone], items[PlayerInfo[playerid][pItemType][10]][attX],
															  items[PlayerInfo[playerid][pItemType][10]][attY], items[PlayerInfo[playerid][pItemType][10]][attZ],
															  items[PlayerInfo[playerid][pItemType][10]][attRotX], items[PlayerInfo[playerid][pItemType][10]][attRotY],
															  items[PlayerInfo[playerid][pItemType][10]][attRotZ]);
					    } else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
					        new me[110];
					        format(me, sizeof(me), "** %s 将%s存放起来.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						} else {
							PrintSameItemOrHandcuffedMsg(playerid);
						}
					}
					case 1: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_CIGARETTES: {
		    if(response) {
				switch(listitem) {
					case 0: {
						if(itemInPossession(playerid, 21)) {
						    if(PlayerInfo[playerid][pItemVar][10] != 0) {
						        new query[80];
							    PlayerInfo[playerid][pItemVar][10]--;
							    setItemVariable(playerid, PlayerInfo[playerid][pItemIndex][10], PlayerInfo[playerid][pItemVar][10]);
			                    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][10], PlayerInfo[playerid][pItemID][10]);
			                    mysql_function_query(sqlHandle, query, false, "", "");
			                    format(query, sizeof(query), "** %s 掏出打火机点燃了一支香烟.", GetNameWithSpace(playerid, 1));
			                    ProxDetector(12, playerid, query, COLOR_PINK);
			                    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
			                    ApplyAnimation(playerid, "SMOKING", "M_smk_in", 4.1, 0, 1, 1, 0, 0, 1);
						    } else {
								SendClientMessage(playerid, COLOR_GREY, "你烟盒子已经空了.");
							}
						} else {
						    SendClientMessage(playerid, COLOR_GREY, "你需要一个打火机.");
						}
					}
					case 1: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_LIGHTER: {
		    if(response) {
				switch(listitem) {
					case 0: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_BRIEFCASE: {
			if(response) {
				switch(listitem) {
					case 0: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_FLASHLIGHT: {
		    if(response) {
				switch(listitem) {
					case 0: {
					    if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0) {
					        new me[85];
					        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];
					        format(me, sizeof(me), "** %s 取出%s.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							SetPlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx], items[PlayerInfo[playerid][pItemType][10]][objID],
															  items[PlayerInfo[playerid][pItemType][10]][bone], items[PlayerInfo[playerid][pItemType][10]][attX],
															  items[PlayerInfo[playerid][pItemType][10]][attY], items[PlayerInfo[playerid][pItemType][10]][attZ],
															  items[PlayerInfo[playerid][pItemType][10]][attRotX], items[PlayerInfo[playerid][pItemType][10]][attRotY],
															  items[PlayerInfo[playerid][pItemType][10]][attRotZ]);
					    } else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
					        new me[110];
					        format(me, sizeof(me), "** %s 将%s存放起来.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						} else {
							PrintSameItemOrHandcuffedMsg(playerid);
						}
					}
					case 1: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_HAMMER: {
		    if(response) {
				switch(listitem) {
					case 0: {
					    if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0) {
					        new me[85];
					        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];
					        format(me, sizeof(me), "** %s 取出%s.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							SetPlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx], items[PlayerInfo[playerid][pItemType][10]][objID],
															  items[PlayerInfo[playerid][pItemType][10]][bone], items[PlayerInfo[playerid][pItemType][10]][attX],
															  items[PlayerInfo[playerid][pItemType][10]][attY], items[PlayerInfo[playerid][pItemType][10]][attZ],
															  items[PlayerInfo[playerid][pItemType][10]][attRotX], items[PlayerInfo[playerid][pItemType][10]][attRotY],
															  items[PlayerInfo[playerid][pItemType][10]][attRotZ]);
					    } else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
					        new me[110];
					        format(me, sizeof(me), "** %s 将%s存放起来.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						} else {
							PrintSameItemOrHandcuffedMsg(playerid);
						}
					}
					case 1: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_HANDCUFFS: {
			if(response) {
				switch(listitem) {
					case 0: {
					    if(GetPVarInt(playerid, "Handcuffed") == 0) {
						    if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0) {
						        new me[85];
						        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
								PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
								PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
								PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];
						        format(me, sizeof(me), "** %s 取出%s.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
	                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
								//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
								strins(me, "> ", 3);
								SendClientMessage(playerid, COLOR_PINK, me);
								SetPlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx], items[PlayerInfo[playerid][pItemType][10]][objID],
																  items[PlayerInfo[playerid][pItemType][10]][bone], items[PlayerInfo[playerid][pItemType][10]][attX],
																  items[PlayerInfo[playerid][pItemType][10]][attY], items[PlayerInfo[playerid][pItemType][10]][attZ],
																  items[PlayerInfo[playerid][pItemType][10]][attRotX], items[PlayerInfo[playerid][pItemType][10]][attRotY],
																  items[PlayerInfo[playerid][pItemType][10]][attRotZ]);
						    } else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
						        new me[110];
						        format(me, sizeof(me), "** %s 将%s存放起来.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
	                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
								//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
								strins(me, "> ", 3);
								SendClientMessage(playerid, COLOR_PINK, me);
								RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
								PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "你正在携带此类物品.");
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "你被手铐铐住了.");
						}
					}
					case 1: {
					    if(GetPVarInt(playerid, "Handcuffed") == 0) {
						    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
						 	new me[100],
								Float:X,
								Float:Y,
								Float:Z,
								query[60];

							GetPlayerPos(playerid, X, Y, Z);
							GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
							mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
							mysql_function_query(sqlHandle, query, false, "", "");
							RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
							format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
							SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
							if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
								RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
								PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							}

							for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
								if(DroppedItems[i][iID] == 0) {
									CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
									return 1;
								}
							}

							DestroyDroppedItem(ServerSettings[DroppedItem]);
							CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
	                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
								ServerSettings[DroppedItem]++;
							} else {
								ServerSettings[DroppedItem] = 0;
							}
						} else {
                            SendClientMessage(playerid, COLOR_GREY, "你被手铐铐住了.");
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_SCREWDRIVER: {
			if(response) {
				switch(listitem) {
					case 0: {
					    if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0) {
					        new me[85];
					        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];
					        format(me, sizeof(me), "** %s 取出%s.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							SetPlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx], items[PlayerInfo[playerid][pItemType][10]][objID],
															  items[PlayerInfo[playerid][pItemType][10]][bone], items[PlayerInfo[playerid][pItemType][10]][attX],
															  items[PlayerInfo[playerid][pItemType][10]][attY], items[PlayerInfo[playerid][pItemType][10]][attZ],
															  items[PlayerInfo[playerid][pItemType][10]][attRotX], items[PlayerInfo[playerid][pItemType][10]][attRotY],
															  items[PlayerInfo[playerid][pItemType][10]][attRotZ]);
					    } else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
					        new me[110];
					        format(me, sizeof(me), "** %s 将%s存放起来.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						} else {
							PrintSameItemOrHandcuffedMsg(playerid);
						}
					}
					case 1: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_PIZZA_SLICE: {
			if(response) {
				switch(listitem) {
				    case 0: {
				        new Float:health,
					        me[100];

					    GetPlayerHealth(playerid, health);
					    XB_GivePlayerHunger(playerid, 50);
					    SetPlayerHealthAndLimit(playerid, (health + 15 >= 100.0) ? 100.0 : health + 15);
					    ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0, 1);
					    format(me, sizeof(me), "** %s 拿出%s并且咬了几口.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
					    ProxDetector(12, playerid, me, COLOR_PINK);
                        mysql_format(sqlHandle, me, sizeof(me), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, me, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}
				    }
					case 1: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_HAMBURGER: {
			if(response) {
				switch(listitem) {
					case 0: {
					    new Float:health,
					        me[100];
					        
					    GetPlayerHealth(playerid, health);
					    XB_GivePlayerHunger(playerid, 55);
					    SetPlayerHealthAndLimit(playerid, (health + 20 >= 100.0) ? 100.0 : health + 20);
					    ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0, 1);
					    format(me, sizeof(me), "** %s 拿出%s并且咬了几口.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
					    ProxDetector(12, playerid, me, COLOR_PINK);
                        mysql_format(sqlHandle, me, sizeof(me), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, me, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}
					}
					case 1: {
						if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_BOOMBOX: {
		    if(response) {
				switch(listitem) {
					case 0: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
						new index = Iter_Free(iter_boomboxes);
						if(index != -1) {
						    new me[100],
								Float:X,
								Float:Y,
								Float:Z,
								query[60];
								
							GetPlayerPos(playerid, X, Y, Z);
							GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
							mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
							mysql_function_query(sqlHandle, query, false, "", "");
							RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
							format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
							SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
							if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
								RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
								PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							}

							SetUpBoombox(playerid, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							SendClientMessage(playerid, COLOR_WHITE, "你将你的音响放置到了地上, 你可以使用 /boombox 进行管理.");
						} else {
                            SendClientMessage(playerid, COLOR_GREY, "抱歉, 服务器无法承载更多的音响. 请稍候再试.");
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_SPRUNK: {
		    if(response) {
				switch(listitem) {
					case 0: {
					    if(PlayerInfo[playerid][pItemVar][10] > 0) {
					        new query[70],
					            Float:health;
					            
						    if(PlayerInfo[playerid][pItemVar][0] >= 50) {
								PlayerInfo[playerid][pItemVar][0] -= 50;
							} else {
							    PlayerInfo[playerid][pItemVar][0] = 0;
							}

					    	GetPlayerHealth(playerid, health);
					    	XB_GivePlayerThirst(playerid, 300);
					    	SetPlayerHealthAndLimit(playerid, (health + 5 >= 100.0) ? 100.0 : health + 5);
							setItemVariable(playerid, PlayerInfo[playerid][pItemIndex][0], PlayerInfo[playerid][pItemVar][0]);
		                    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][0], PlayerInfo[playerid][pItemID][0]);
		                    mysql_function_query(sqlHandle, query, false, "", "");
		                    ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.1, 0, 1, 1, 0, 0, 1);
					    } else {
							SendClientMessage(playerid, COLOR_GREY, "你的瓶子已经空了, 可以将其丢弃.");
						}
					}
					case 1: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_BOX: {
		    if(response) {
				switch(listitem) {
					case 0: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							if(GetPVarInt(playerid, "Handcuffed") == 0) {
							    if(GetPVarInt(playerid, "Calling") == -1) {
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								} else {
								    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
								}
							} else {
							    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
							    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
							}
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_PIZZA_BOX: {
			if(response) {
				switch(listitem) {
					case 0: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							if(GetPVarInt(playerid, "Handcuffed") == 0) {
							    if(GetPVarInt(playerid, "Calling") == -1) {
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								} else {
								    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
								}
							} else {
							    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
							    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
							}
						}

      					for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_TRASH_BAG: {
			if(response) {
				switch(listitem) {
					case 0: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							if(GetPVarInt(playerid, "Handcuffed") == 0) {
							    if(GetPVarInt(playerid, "Calling") == -1) {
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
								} else {
								    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
								}
							} else {
							    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
							    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
							}
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_TASER: {
			if(response) {
				switch(listitem) {
					case 0: {
						if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0) {
					        new me[85];
					        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];
					        format(me, sizeof(me), "** %s 取出%s.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
	                        SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][10]][weaponID], PlayerInfo[playerid][pItemVar][10]);
					    } else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
					        new me[110],
								guns[2],
								query[65];

							if(items[PlayerInfo[playerid][pItemType][10]][itemType] == ITEM_WEAPON) {
								for(new i = 0; i != 13; i++) {
									GetPlayerWeaponData(playerid, i, guns[0], guns[1]);
									if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
	                                    setItemVariable(playerid, PlayerInfo[playerid][pItemIndex][10], guns[1]);
	                                    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", guns[1], PlayerInfo[playerid][pItemID][10]);
	                                    mysql_function_query(sqlHandle, query, false, "", "");
	                                    break;
									}
								}
							}
					        format(me, sizeof(me), "** %s 将%s存放起来.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							ResetPlayerWeapons(playerid);
							if(IsPlayerAttachedObjectSlotUsed(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx])) {
								RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							}

							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						} else {
							PrintSameItemOrHandcuffedMsg(playerid);
						}
					}
					case 1: {
					    if(PlayerInfo[playerid][pItemID][10] == PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]]) {
							new guns[2];
							for(new w = 0; w != 13; w++) {
								GetPlayerWeaponData(playerid, w, guns[0], guns[1]);
								if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
									break;
								}
							}

							if(guns[1] == 0) {
							    new me[50];
						        format(me, sizeof(me), "** %s 给%s充电.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][0]));
								ProxDetector(12, playerid, me, COLOR_PINK);
								ResetPlayerWeapons(playerid);
								GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], 1);
								SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], 1);
								GameTextForPlayer(playerid, "~w~Recharging..", 1000, 4);
							} else {
							    SendClientMessage(playerid, COLOR_GREY, "你的电击枪已经充满了电.");
							}
						} else {
						    SendClientMessage(playerid, COLOR_GREY, "你没有电击枪.");
						}
					}
					case 2: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
					        Float:X,
					        Float:Y,
					        Float:Z,
					        query[80],
					        guns[2];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						if(items[PlayerInfo[playerid][pItemType][10]][itemType] == ITEM_WEAPON) {
							if(weaponAttached[playerid]== 0) {
								for(new w = 0; w < 13; w++) {
									GetPlayerWeaponData(playerid, w, guns[0], guns[1]);
								    if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
										PlayerInfo[playerid][pItemVar][10] = guns[1];
									}
								}
							} else {
                                PlayerInfo[playerid][pItemVar][10] = 0;
							}
						}

						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL, `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][10], PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
                            ResetPlayerWeapons(playerid);
							if(IsPlayerAttachedObjectSlotUsed(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx])) {
								RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							}

							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

      					DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_WEAPON: {
			if(response) {
			    switch(listitem) {
			         case 0: {
					    if(items[PlayerInfo[playerid][pItemType][10]][itemType] != ITEM_WEAPON && items[PlayerInfo[playerid][pItemType][10]][storable] == 0) {
		    				if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
						 	new me[100],
						        Float:X,
						        Float:Y,
						        Float:Z,
						        query[80],
						        guns[2];

							GetPlayerPos(playerid, X, Y, Z);
							GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
							if(items[PlayerInfo[playerid][pItemType][10]][itemType] == ITEM_WEAPON) {
								if(weaponAttached[playerid]== 0) {
									for(new w = 0; w < 13; w++) {
										GetPlayerWeaponData(playerid, w, guns[0], guns[1]);
									    if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
											PlayerInfo[playerid][pItemVar][10] = guns[1];
										}
									}
								} else {
                                    PlayerInfo[playerid][pItemVar][10] = 0;
								}
							}

							mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL, `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][10], PlayerInfo[playerid][pItemID][10]);
							mysql_function_query(sqlHandle, query, false, "", "");
							RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
							format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
							SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
							if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
                                ResetPlayerWeapons(playerid);
								if(IsPlayerAttachedObjectSlotUsed(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx])) {
									RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
								}

								PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							}
							if(PlayerInfo[playerid][pItemType][10]==196)return 1;
							for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
								if(DroppedItems[i][iID] == 0) {
									CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
									return 1;
								}
							}

	      					DestroyDroppedItem(ServerSettings[DroppedItem]);
							CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
	                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
								ServerSettings[DroppedItem]++;
							} else {
								ServerSettings[DroppedItem] = 0;
							}
						} else if(items[PlayerInfo[playerid][pItemType][10]][itemType] != ITEM_WEAPON && items[PlayerInfo[playerid][pItemType][10]][storable] != 0) {
						    if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0) {
						        new me[85];
						        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
								PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
								PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
								PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];
						        format(me, sizeof(me), "** %s 取出%s.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
	                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
								//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
								strins(me, "> ", 3);
								SendClientMessage(playerid, COLOR_PINK, me);
								GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][10]][weaponID], PlayerInfo[playerid][pItemVar][10]);
						    }
							else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10])
							{
						        new me[110],
									guns[2],
									query[65];

								if(items[PlayerInfo[playerid][pItemType][10]][itemType] == ITEM_WEAPON) {
									for(new i = 0; i != 13; i++) {
										GetPlayerWeaponData(playerid, i, guns[0], guns[1]);
										if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
	                                        setItemVariable(playerid, PlayerInfo[playerid][pItemIndex][10], guns[1]);
	                                        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", guns[1], PlayerInfo[playerid][pItemID][10]);
	                                        mysql_function_query(sqlHandle, query, false, "", "");
	                                        break;
										}
									}
								}

						        format(me, sizeof(me), "** %s 将%s存放起来.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
	                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
								//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
								strins(me, "> ", 3);
								SendClientMessage(playerid, COLOR_PINK, me);
								ResetPlayerWeapons(playerid);
								if(IsPlayerAttachedObjectSlotUsed(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx])) {
									RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
								}

								PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							}
							else
							{
								PrintSameItemOrHandcuffedMsg(playerid);
							}
						}
						else {
						    if(items[PlayerInfo[playerid][pItemType][10]][storable] == 0 && WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadable] != 0) {
						    	if(PlayerInfo[playerid][pItemID][10] == PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]]) {
									new guns[2];
									for(new w = 0; w != 13; w++) {
										GetPlayerWeaponData(playerid, w, guns[0], guns[1]);
										if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
											break;
										}
									}

									if(guns[1] != WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoSize]) {
										new id = getPlayerItemID(playerid, WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoTypeItem]);
										if(id != 0) {
										    new query[70],
										        me[100],
												ammo = getItemVarFromID(playerid, id);

											format(me, sizeof(me), "** %s 取出一些子弹给%s重新填弹.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
											ProxDetector(12, playerid, me, COLOR_PINK);
											ResetPlayerWeapons(playerid);
											PlayerPlaySound(playerid, 36401, 0, 0, 0);
											if(WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoType] != 3) {
											    RemovePlayerItemEx(playerid, id);
											    mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", id);
												mysql_function_query(sqlHandle, query, false, "", "");
												GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][10]][weaponID], ammo);
												SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][10]][weaponID], ammo);
												if(guns[1] != 0) {
													SetPlayerItem(playerid, WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoTypeItem], guns[1]);
												}
											} else {
											    if(ammo - WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoSize] > 0) {
												    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", ammo - (WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoSize] - guns[1]), id);
													mysql_function_query(sqlHandle, query, false, "", "");
													setItemVariableByID(playerid, id, ammo - (WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoSize] - guns[1]));
													GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoSize]);
													SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoSize]);
												} else {
	                                                RemovePlayerItemEx(playerid, id);
												    mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", id);
													mysql_function_query(sqlHandle, query, false, "", "");
													GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], ammo);
													SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], ammo);
												}
											}

											if(!IsPlayerInAnyVehicle(playerid)) {
												switch(WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadAnim]) {
													case 0: {
													    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DUCK) {
															//ApplyAnimation(playerid, "PYTHON", "python_crouchreload", 4.1, 0, 1, 1, 0, 0, 1);
														} else {
														    ApplyAnimation(playerid, "PYTHON", "python_reload", 4.1, 0, 1, 1, 0, 0, 1);
														}
													}
													case 1: {
													    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DUCK) {
													    	//ApplyAnimation(playerid, "UZI", "UZI_crouchreload", 4.1, 0, 1, 1, 0, 0, 1);
														} else {
														    ApplyAnimation(playerid, "UZI", "UZI_reload", 4.1, 0, 1, 1, 0, 0, 1);
														}
													}
												}
											}

											GameTextForPlayer(playerid, "~w~Reloading..", 1000, 4);
										} else {
											SendClientMessage(playerid, COLOR_GREY, "你没有该类型的子弹.");
										}
									} else {
									    SendClientMessage(playerid, COLOR_GREY, "你的武器不需要填装子弹.");
									}
								} else {
								    SendClientMessage(playerid, COLOR_GREY, "你手中没有武器.");
								}
							} else if(items[PlayerInfo[playerid][pItemType][10]][storable] != 0 && WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadable] != 0) {
							    if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0) {
							        new me[85];
							        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
									PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
									PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
									PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];
							        format(me, sizeof(me), "** %s 取出%s.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
		                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
									//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
									strins(me, "> ", 3);
									SendClientMessage(playerid, COLOR_PINK, me);
									GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][10]][weaponID], PlayerInfo[playerid][pItemVar][10]);
							    } else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
							        new me[110],
										guns[2],
										query[65];

									if(items[PlayerInfo[playerid][pItemType][10]][itemType] == ITEM_WEAPON) {
										for(new i = 0; i != 13; i++) {
											GetPlayerWeaponData(playerid, i, guns[0], guns[1]);
											if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
		                                        setItemVariable(playerid, PlayerInfo[playerid][pItemIndex][10], guns[1]);
		                                        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", guns[1], PlayerInfo[playerid][pItemID][10]);
		                                        mysql_function_query(sqlHandle, query, false, "", "");
		                                        break;
											}
										}
									}

							        format(me, sizeof(me), "** %s 将%s存放起来.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
		                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
									//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
									strins(me, "> ", 3);
									SendClientMessage(playerid, COLOR_PINK, me);
									ResetPlayerWeapons(playerid);
									if(IsPlayerAttachedObjectSlotUsed(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx])) {
										RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
									}

									PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
									PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
									PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
									PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								} else {
									PrintSameItemOrHandcuffedMsg(playerid);
								}
							} else if(items[PlayerInfo[playerid][pItemType][10]][storable] == 0 && WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadable] == 0) {
							    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
							 	new me[100],
									Float:X,
									Float:Y,
									Float:Z,
									query[80],
									guns[2];

								GetPlayerPos(playerid, X, Y, Z);
								GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
								if(items[PlayerInfo[playerid][pItemType][10]][itemType] == ITEM_WEAPON) {
									if(weaponAttached[playerid]== 0) {
										for(new w = 0; w < 13; w++) {
											GetPlayerWeaponData(playerid, w, guns[0], guns[1]);
										    if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
												PlayerInfo[playerid][pItemVar][10] = guns[1];
											}
										}
									} else {
	                                    PlayerInfo[playerid][pItemVar][10] = 0;
									}
								}

								mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL, `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][10], PlayerInfo[playerid][pItemID][10]);
								mysql_function_query(sqlHandle, query, false, "", "");
								RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
								format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
								SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
								//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
								strins(me, "> ", 3);
								SendClientMessage(playerid, COLOR_PINK, me);
								ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
								if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
	                                ResetPlayerWeapons(playerid);
									if(IsPlayerAttachedObjectSlotUsed(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx])) {
										RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
									}

									PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
									PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
									PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
									PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								}

								for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
									if(DroppedItems[i][iID] == 0) {
										CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
										return 1;
									}
								}

		      					DestroyDroppedItem(ServerSettings[DroppedItem]);
								CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
		                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
									ServerSettings[DroppedItem]++;
								} else {
									ServerSettings[DroppedItem] = 0;
								}
							} else if(items[PlayerInfo[playerid][pItemType][10]][storable] != 0 && WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadable] == 0) {
							    if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0) {
							        new me[85];
							        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
									PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
									PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
									PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];
							        format(me, sizeof(me), "** %s 取出%s.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
		                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
									//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
									strins(me, "> ", 3);
									SendClientMessage(playerid, COLOR_PINK, me);
									GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][10]][weaponID], PlayerInfo[playerid][pItemVar][10]);
							    } else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
							        new me[110],
										guns[2],
										query[65];

									if(items[PlayerInfo[playerid][pItemType][10]][itemType] == ITEM_WEAPON) {
										for(new i = 0; i != 13; i++) {
											GetPlayerWeaponData(playerid, i, guns[0], guns[1]);
											if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
		                                        setItemVariable(playerid, PlayerInfo[playerid][pItemIndex][10], guns[1]);
		                                        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", guns[1], PlayerInfo[playerid][pItemID][10]);
		                                        mysql_function_query(sqlHandle, query, false, "", "");
		                                        break;
											}
										}
									}

							        format(me, sizeof(me), "** %s 将%s存放起来.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
		                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
									//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
									strins(me, "> ", 3);
									SendClientMessage(playerid, COLOR_PINK, me);
									ResetPlayerWeapons(playerid);
									if(IsPlayerAttachedObjectSlotUsed(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx])) {
										RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
									}

									PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
									PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
									PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
									PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								} else {
									PrintSameItemOrHandcuffedMsg(playerid);
								}
							}
						}
					}
     				case 1: {
					    if(items[PlayerInfo[playerid][pItemType][10]][itemType] != ITEM_WEAPON && items[PlayerInfo[playerid][pItemType][10]][storable] != 0) {
          					if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
							new me[100],
								Float:X,
								Float:Y,
								Float:Z,
								query[80],
								guns[2];

							GetPlayerPos(playerid, X, Y, Z);
							GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
							if(items[PlayerInfo[playerid][pItemType][10]][itemType] == ITEM_WEAPON) {
								if(weaponAttached[playerid]== 0) {
									for(new w = 0; w < 13; w++) {
										GetPlayerWeaponData(playerid, w, guns[0], guns[1]);
									    if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
											PlayerInfo[playerid][pItemVar][10] = guns[1];
										}
									}
								} else {
                                    PlayerInfo[playerid][pItemVar][10] = 0;
								}
							}

							mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL, `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][10], PlayerInfo[playerid][pItemID][10]);
							mysql_function_query(sqlHandle, query, false, "", "");
							RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
							format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
							SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
							if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
                                ResetPlayerWeapons(playerid);
								if(IsPlayerAttachedObjectSlotUsed(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx])) {
									RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
								}

								PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							}

							for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
								if(DroppedItems[i][iID] == 0) {
									CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
									return 1;
								}
							}

	      					DestroyDroppedItem(ServerSettings[DroppedItem]);
							CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
	                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
								ServerSettings[DroppedItem]++;
							} else {
								ServerSettings[DroppedItem] = 0;
							}
						} else {
						    if(items[PlayerInfo[playerid][pItemType][10]][storable] == 0 && WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadable] != 0) {
						    	if(PlayerInfo[playerid][pItemID][10] == PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]]) {
                                    new guns[2],
                                        me[90];

									for(new w = 0; w != 13; w++) {
										GetPlayerWeaponData(playerid, w, guns[0], guns[1]);
										if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
											break;
										}
									}

									if(guns[1] != 0) {
										SetPlayerItem(playerid, WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoTypeItem], guns[1]);
										format(me, sizeof(me), "** %s 将子弹从%s里卸下.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
	                                    ProxDetector(12, playerid, me, COLOR_PINK);
										SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][10]][weaponID], 0);
									} else {
										SendClientMessage(playerid, COLOR_GREY, "这里没有子弹可以卸下.");
									}
								} else {
								    SendClientMessage(playerid, COLOR_GREY, "你手上没有武器.");
								}
							} else if(items[PlayerInfo[playerid][pItemType][10]][storable] != 0 && WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadable] != 0) {
        						if(PlayerInfo[playerid][pItemID][10] == PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]]) {
									new guns[2];
									for(new w = 0; w != 13; w++) {
										GetPlayerWeaponData(playerid, w, guns[0], guns[1]);
										if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
											break;
										}
									}

									if(guns[1] != WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoSize]) {
										new id = getPlayerItemID(playerid, WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoTypeItem]);
										if(id != 0) {
										    new query[70],
										        me[100],
												ammo = getItemVarFromID(playerid, id);

											format(me, sizeof(me), "** %s 取出一些子弹给%s重新填弹.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
											ProxDetector(12, playerid, me, COLOR_PINK);
											ResetPlayerWeapons(playerid);
											PlayerPlaySound(playerid, 36401, 0, 0, 0);
											if(WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoType] != 3) {
											    RemovePlayerItemEx(playerid, id);
											    mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", id);
												mysql_function_query(sqlHandle, query, false, "", "");
												GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][10]][weaponID], ammo);
												SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][10]][weaponID], ammo);
												if(guns[1] != 0) {
													SetPlayerItem(playerid, WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoTypeItem], guns[1]);
												}
											} else {
											    if(ammo - WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoSize] > 0) {
												    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", ammo - (WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoSize] - guns[1]), id);
													mysql_function_query(sqlHandle, query, false, "", "");
													setItemVariableByID(playerid, id, ammo - (WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoSize] - guns[1]));
													GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoSize]);
													SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], WeaponData[items[PlayerInfo[playerid][pItemType][0]][weaponID]][ammoSize]);
												} else {
	                                                RemovePlayerItemEx(playerid, id);
												    mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", id);
													mysql_function_query(sqlHandle, query, false, "", "");
													GivePlayerWeapon(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], ammo);
													SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][0]][weaponID], ammo);
												}
											}

											if(!IsPlayerInAnyVehicle(playerid)) {
												switch(WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadAnim]) {
													case 0: {
													    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DUCK) {
															//ApplyAnimation(playerid, "PYTHON", "python_crouchreload", 4.1, 0, 1, 1, 0, 0, 1);
														} else {
														    ApplyAnimation(playerid, "PYTHON", "python_reload", 4.1, 0, 1, 1, 0, 0, 1);
														}
													}
													case 1: {
													    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DUCK) {
													    	//ApplyAnimation(playerid, "UZI", "UZI_crouchreload", 4.1, 0, 1, 1, 0, 0, 1);
														} else {
														    ApplyAnimation(playerid, "UZI", "UZI_reload", 4.1, 0, 1, 1, 0, 0, 1);
														}
													}
												}
											}

											GameTextForPlayer(playerid, "~w~Reloading..", 1000, 4);
										} else {
											SendClientMessage(playerid, COLOR_GREY, "你没有该类型的子弹.");
										}
									} else {
									    SendClientMessage(playerid, COLOR_GREY, "你的武器不需要填装子弹.");
									}
								} else {
								    SendClientMessage(playerid, COLOR_GREY, "你手上没有武器.");
								}
							} else if(items[PlayerInfo[playerid][pItemType][10]][storable] != 0 && WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadable] == 0) {
							    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
							 	new me[100],
									Float:X,
									Float:Y,
									Float:Z,
									query[80],
									guns[2];

								GetPlayerPos(playerid, X, Y, Z);
								GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
								if(items[PlayerInfo[playerid][pItemType][10]][itemType] == ITEM_WEAPON) {
									if(weaponAttached[playerid]== 0) {
										for(new w = 0; w < 13; w++) {
											GetPlayerWeaponData(playerid, w, guns[0], guns[1]);
										    if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
												PlayerInfo[playerid][pItemVar][10] = guns[1];
											}
										}
									} else {
	                                    PlayerInfo[playerid][pItemVar][10] = 0;
									}
								}

								mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL, `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][10], PlayerInfo[playerid][pItemID][10]);
								mysql_function_query(sqlHandle, query, false, "", "");
								RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
								format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
								SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
								//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
								strins(me, "> ", 3);
								SendClientMessage(playerid, COLOR_PINK, me);
								ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
								if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
	                                ResetPlayerWeapons(playerid);
									if(IsPlayerAttachedObjectSlotUsed(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx])) {
										RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
									}

									PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
									PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
									PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
									PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								}

								for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
									if(DroppedItems[i][iID] == 0) {
										CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
										return 1;
									}
								}

		      					DestroyDroppedItem(ServerSettings[DroppedItem]);
								CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
		                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
									ServerSettings[DroppedItem]++;
								} else {
									ServerSettings[DroppedItem] = 0;
								}
							}
						}
					}
     				case 2: {
					    if(items[PlayerInfo[playerid][pItemType][10]][storable] == 0 && WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadable] != 0) {
							if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
						 	new me[100],
								Float:X,
								Float:Y,
								Float:Z,
								query[80],
								guns[2];

							GetPlayerPos(playerid, X, Y, Z);
							GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
							if(items[PlayerInfo[playerid][pItemType][10]][itemType] == ITEM_WEAPON) {
								if(weaponAttached[playerid]== 0) {
									for(new w = 0; w < 13; w++) {
										GetPlayerWeaponData(playerid, w, guns[0], guns[1]);
									    if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
											PlayerInfo[playerid][pItemVar][10] = guns[1];
										}
									}
								} else {
                                    PlayerInfo[playerid][pItemVar][10] = 0;
								}
							}

							mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL, `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][10], PlayerInfo[playerid][pItemID][10]);
							mysql_function_query(sqlHandle, query, false, "", "");
							RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
							format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
							SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
							if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
                                ResetPlayerWeapons(playerid);
								if(IsPlayerAttachedObjectSlotUsed(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx])) {
									RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
								}

								PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							}

							for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
								if(DroppedItems[i][iID] == 0) {
									CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
									return 1;
								}
							}

	      					DestroyDroppedItem(ServerSettings[DroppedItem]);
							CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
	                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
								ServerSettings[DroppedItem]++;
							} else {
								ServerSettings[DroppedItem] = 0;
							}
						} else if(items[PlayerInfo[playerid][pItemType][10]][storable] != 0 && WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][reloadable] != 0) {
						    if(PlayerInfo[playerid][pItemID][10] == PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]]) {
                                new guns[2],
                                    me[90];

								for(new w = 0; w != 13; w++) {
									GetPlayerWeaponData(playerid, w, guns[0], guns[1]);
									if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
										break;
									}
								}

								if(guns[1] != 0) {
									SetPlayerItem(playerid, WeaponData[items[PlayerInfo[playerid][pItemType][10]][weaponID]][ammoTypeItem], guns[1]);
									format(me, sizeof(me), "** %s 将子弹从%s武器里卸下.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
	                                ProxDetector(12, playerid, me, COLOR_PINK);
									SetPlayerAmmo(playerid, items[PlayerInfo[playerid][pItemType][10]][weaponID], 0);
                                } else {
									SendClientMessage(playerid, COLOR_GREY, "武器里没有子弹.");
								}
							} else {
							    SendClientMessage(playerid, COLOR_GREY, "你手中没有武器.");
							}
						}
					}
    				case 3: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[80],
							guns[2];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						if(items[PlayerInfo[playerid][pItemType][10]][itemType] == ITEM_WEAPON) {
							if(weaponAttached[playerid]== 0) {
								for(new w = 0; w < 13; w++) {
									GetPlayerWeaponData(playerid, w, guns[0], guns[1]);
								    if(guns[0] == items[PlayerInfo[playerid][pItemType][10]][weaponID]) {
										PlayerInfo[playerid][pItemVar][10] = guns[1];
									}
								}
							} else {
                                PlayerInfo[playerid][pItemVar][10] = 0;
							}
						}

						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL, `var` = %i WHERE `id` = %i", PlayerInfo[playerid][pItemVar][10], PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
                            ResetPlayerWeapons(playerid);
							if(IsPlayerAttachedObjectSlotUsed(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx])) {
								RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							}

							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

      					DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}
					}
				}
			}
		}
		case DIALOG_ITEMS_CLOTHES:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    if(PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == 0)
						{
					        new me[80],
								query[140];

					        PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemType][10];
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemIndex][10];
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemID][10];
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = PlayerInfo[playerid][pItemVar][10];

                            format(me, sizeof(me), "** %s 将%s戴上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
                            mysql_format(sqlHandle, query, sizeof(query), "SELECT `X`, `Y`, `Z`, `rX`, `rY`, `rZ`, `sX`, `sY`, `sZ` FROM `samp_clothes` WHERE `item` = %i AND `owner` = '%e'", PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pName]);
							mysql_function_query(sqlHandle, query, true, "OnPlayerWearClothings", "ii", playerid, PlayerInfo[playerid][pItemType][10]);
						}
						else if(PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10])
						{
					        new me[80];
					        format(me, sizeof(me), "** %s 将%s摘下.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
                            SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}
						else
						{
							PrintSameItemOrHandcuffedMsg(playerid);
						}
					}
					case 1: {
					    if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] != PlayerInfo[playerid][pItemID][10]) {
                            if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
						 	new me[100],
								Float:X,
								Float:Y,
								Float:Z,
								query[60];

							GetPlayerPos(playerid, X, Y, Z);
							GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
							mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
							mysql_function_query(sqlHandle, query, false, "", "");
							RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
							format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
							SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
							//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
							strins(me, "> ", 3);
							SendClientMessage(playerid, COLOR_PINK, me);
							ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
							if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
								RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
								PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
								PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							}
							
							/*if(PlayerInfo[playerid][pMaskNum] != 0 && IsPlayerMasked(playerid) == 0) {
								format(PlayerInfo[playerid][pMaskID], 25, "%s", EOS);
								PlayerInfo[playerid][pMaskNum] = 0;
								DestroyDynamic3DTextLabel(PlayerInfo[playerid][pMask3D]);
								foreach(new i : Player) {
									ShowPlayerNameTagForPlayer(i, playerid, 1);
								}
							}*/

							for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
								if(DroppedItems[i][iID] == 0) {
									CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
									return 1;
								}
							}

							DestroyDroppedItem(ServerSettings[DroppedItem]);
							CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                            if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
								ServerSettings[DroppedItem]++;
							} else {
								ServerSettings[DroppedItem] = 0;
							}

							//UnsetPlayerMask(playerid);
						} else {
						    SetPVarInt(playerid, "EditAttachedObject", items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							EditAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							SendClientMessage(playerid, COLOR_LIGHTRED, "服务器: 不真实的装饰位置/大小都是会被惩罚的.");
						}
					}
					case 2: {
					    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "你在车内无法丢弃物品.");
					 	new me[100],
							Float:X,
							Float:Y,
							Float:Z,
							query[60];

						GetPlayerPos(playerid, X, Y, Z);
						GetXYInFrontOfPlayer(playerid, X, Y, 0.75);
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_items` SET `owner` = NULL WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
						mysql_function_query(sqlHandle, query, false, "", "");
						RemovePlayerItemEx(playerid, PlayerInfo[playerid][pItemID][10]);
						format(me, sizeof(me), "** %s 将%s丢在地上.", GetNameWithSpace(playerid, 1), itemLowerCase(PlayerInfo[playerid][pItemType][10]));
						SetPlayerChatBubble(playerid, me, COLOR_PINK, 12.0, 10000);
						//strdel(me, 3, 3 + strlen(PlayerInfo[playerid][pName]));
						strins(me, "> ", 3);
						SendClientMessage(playerid, COLOR_PINK, me);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 0, 1);
						if(PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemID][10]) {
							RemovePlayerAttachedObject(playerid, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
							PlayerInfo[playerid][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
							PlayerInfo[playerid][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
						}
						
						/*if(PlayerInfo[playerid][pMaskNum] != 0 && IsPlayerMasked(playerid) == 0) {
							format(PlayerInfo[playerid][pMaskID], 25, "%s", EOS);
							PlayerInfo[playerid][pMaskNum] = 0;
							DestroyDynamic3DTextLabel(PlayerInfo[playerid][pMask3D]);
							foreach(new i : Player) {
								ShowPlayerNameTagForPlayer(i, playerid, 1);
							}
						}*/

						for(new i = 0; i != MAX_DROPPED_ITEMS; i++) {
							if(DroppedItems[i][iID] == 0) {
								CreateDroppedItem(i, X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
								return 1;
							}
						}

						DestroyDroppedItem(ServerSettings[DroppedItem]);
						CreateDroppedItem(ServerSettings[DroppedItem], X, Y, Z, PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemID][10], PlayerInfo[playerid][pItemVar][10], items[PlayerInfo[playerid][pItemType][10]][iIdx], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
                        if(ServerSettings[DroppedItem] != MAX_DROPPED_ITEMS - 1) {
							ServerSettings[DroppedItem]++;
						} else {
							ServerSettings[DroppedItem] = 0;
						}

						//UnsetPlayerMask(playerid);
					}
				}
			}
		}
		case DIALOG_CHECKITEMS: {
			if(response) {
			    new page = GetPVarInt(playerid, "CurrentItemPage"),
			        user = GetPVarInt(playerid, "CheckItemsUser");

				if(listitem == 21) {
				    new pItems[22],
						dialogMsg[850];

                    getItemPage(user, pItems, sizeof(pItems), page + 1);
					for(new i = 0; i != sizeof(pItems); i++) {
						if(pItems[i] == 0) {
							break;
						}

						if(isnull(dialogMsg)) {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
							}
						} else {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
							}
						}

						if(PlayerInfo[user][pItemID][items[pItems[i]][iIdx]] == getItemID(user, (20 * page) + i)) {
						    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
						}
					}

					if(itemIndexExists(user, (page * 20) + 21)) {
						format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
					}

                    SetPVarInt(playerid, "CurrentItemPage", page + 1);
					ShowPlayerDialog(playerid, DIALOG_CHECKITEMS, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "选择", "取消");
				} else {
					PlayerInfo[playerid][pItemIndex][10] = (20 * (page - 1)) + listitem;
					PlayerInfo[playerid][pItemType][10] = getItemType(user, PlayerInfo[playerid][pItemIndex][10]);
					PlayerInfo[playerid][pItemVar][10] = getItemVar(user, PlayerInfo[playerid][pItemIndex][10]);
					PlayerInfo[playerid][pItemID][10] = getItemID(user, PlayerInfo[playerid][pItemIndex][10]);
					ShowPlayerDialog(playerid, DIALOG_CHECKITEMS_OPTIONS, DIALOG_STYLE_LIST, "{FF9900}物品", "检索项目数据\n更改变量\n移除物品", "选择", "取消");
				}
			}
		}
		case DIALOG_CHECKITEMS_OPTIONS: {
			if(response) {
				switch(listitem) {
				    case 0: {
				        new user = GetPVarInt(playerid, "CheckItemsUser"),
				            pItems[22],
							dialogMsg[850];

						format(dialogMsg, sizeof(dialogMsg), "*** 拥有人: [%s], ID: [%i], 类型: [%s (类型ID: %i)], 变量: [%i].", GetNameWithSpace(user), PlayerInfo[playerid][pItemID][10], items[PlayerInfo[playerid][pItemType][10]][itemName], PlayerInfo[playerid][pItemType][10], PlayerInfo[playerid][pItemVar][10]);
						SendClientMessage(playerid, COLOR_WHITE, dialogMsg);
						format(dialogMsg, sizeof(dialogMsg), "%s", EOS);
						getItemPage(user, pItems, sizeof(pItems), 1);
						if(pItems[0] != 0) {
							for(new i = 0; i != sizeof(pItems); i++) {
								if(pItems[i] == 0) {
									break;
								}

								if(isnull(dialogMsg)) {
								    if(pItems[i] >= 4 && pItems[i] <= 13) {
										format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 3) {
					    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 17) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 18) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 19) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(user, i));
                                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(user, i));
									} else {
									    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
									}
								} else {
									if(pItems[i] >= 4 && pItems[i] <= 13) {
										format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 3) {
					    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 17) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 18) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 19) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
                                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
									}
								}

								if(getItemID(user, i) == PlayerInfo[user][pItemID][items[pItems[i]][iIdx]]) {
								    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
								}
							}

							if(itemIndexExists(user, 21)) {
								format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
							}

					        SetPVarInt(playerid, "CurrentItemPage", 1);
							ShowPlayerDialog(playerid, DIALOG_CHECKITEMS, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "选择", "取消");
						}
					}
					case 1: {
					    ShowPlayerDialog(playerid, DIALOG_CHECKITEMS_OPTIONS_VAR, DIALOG_STYLE_INPUT, "{FF9900}物品", "请输入新的物品变量:", "选择", "取消");
					}
					case 2: {
					    new user = GetPVarInt(playerid, "CheckItemsUser"),
							pItems[22],
							dialogMsg[850];

						if(PlayerInfo[user][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] == PlayerInfo[playerid][pItemIndex][10]) {
						    RemovePlayerAttachedObject(user, items[PlayerInfo[playerid][pItemType][10]][iIdx]);
                            PlayerInfo[user][pItemIndex][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
                            PlayerInfo[user][pItemID][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
                            PlayerInfo[user][pItemVar][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
                            PlayerInfo[user][pItemType][items[PlayerInfo[playerid][pItemType][10]][iIdx]] = 0;
                            if(items[PlayerInfo[playerid][pItemType][10]][itemType] == ITEM_WEAPON) {
                                ResetPlayerWeapons(user);
							}
						}

					    RemovePlayerItemEx(user, PlayerInfo[playerid][pItemID][10]);
					    mysql_format(sqlHandle, dialogMsg, sizeof(dialogMsg), "DELETE FROM `samp_items` WHERE `id` = %i", PlayerInfo[playerid][pItemID][10]);
					    mysql_function_query(sqlHandle, dialogMsg, false, "", "");
					    format(dialogMsg, sizeof(dialogMsg), "*** %s %s 移除了你的一个物品 (名称: '%s', 数量: %i).", GetAdminRank(playerid), GetNameWithSpace(playerid), items[PlayerInfo[playerid][pItemType][10]][itemName], PlayerInfo[playerid][pItemVar][10]);
                        SendClientMessage(user, COLOR_WHITE, dialogMsg);
						format(dialogMsg, sizeof(dialogMsg), "*** %s %s 将一个物品从 %s 账户中移除 (名称: '%s', 数量: %i).", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpace(user), items[PlayerInfo[playerid][pItemType][10]][itemName], PlayerInfo[playerid][pItemVar][10]);
						SendMessageToAdmins(dialogMsg);
						format(dialogMsg, sizeof(dialogMsg), "%s", EOS);
						getItemPage(user, pItems, sizeof(pItems), 1);
						if(pItems[0] != 0) {
							for(new i = 0; i != sizeof(pItems); i++) {
								if(pItems[i] == 0) {
									break;
								}

								if(isnull(dialogMsg)) {
								    if(pItems[i] >= 4 && pItems[i] <= 13) {
										format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 3) {
					    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 17) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 18) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 19) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(user, i));
                                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(user, i));
									} else {
									    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
									}
								} else {
									if(pItems[i] >= 4 && pItems[i] <= 13) {
										format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 3) {
					    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 17) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 18) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else if(pItems[i] == 19) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
                                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
									} else {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
									}
								}

								if(getItemID(user, i) == PlayerInfo[user][pItemID][items[pItems[i]][iIdx]]) {
								    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
								}
							}

							if(itemIndexExists(user, 21)) {
								format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
							}

							SetPVarInt(playerid, "CurrentItemPage", 1);
							ShowPlayerDialog(playerid, DIALOG_CHECKITEMS, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "选择", "取消");
						}
					}
				}
			}
		}
		case DIALOG_CHECKITEMS_OPTIONS_VAR: {
			if(response) {
				if(!isnull(inputtext) && IsNumeric(inputtext) && strlen(inputtext) <= 11) {
					if(PlayerInfo[playerid][pItemType][10] >= 4 && PlayerInfo[playerid][pItemType][10] <= 13 && strlen(inputtext) != 7) {
						SendClientMessage(playerid, COLOR_GREY, "手机的电话号码是七位数组成.");
						ShowPlayerDialog(playerid, DIALOG_CHECKITEMS_OPTIONS_VAR, DIALOG_STYLE_INPUT, "{FF9900}物品", "请输入该项新的变量:", "选择", "取消");
					}

					new var = strval(inputtext),
					    user = GetPVarInt(playerid, "CheckItemsUser"),
					    pItems[22],
						dialogMsg[850];

					mysql_format(sqlHandle, dialogMsg, sizeof(dialogMsg), "UPDATE `samp_items` SET `var` = %i WHERE `id` = %i", var, PlayerInfo[playerid][pItemID][10]);
					mysql_function_query(sqlHandle, dialogMsg, false, "", "");
					setItemVariable(user, PlayerInfo[playerid][pItemIndex][10], var);
					format(dialogMsg, sizeof(dialogMsg), "*** %s %s 更新了玩家物品, 物品: '%s' 角色名: %s, 变量: %i.", GetAdminRank(playerid), GetNameWithSpace(playerid), items[PlayerInfo[playerid][pItemType][10]][itemName], GetNameWithSpace(user), var);
					SendMessageToAdmins(dialogMsg);
					format(dialogMsg, sizeof(dialogMsg), "*** %s %s 更新了你的物品, 物品名称 '%s', 数值: %i.", GetAdminRank(playerid), GetNameWithSpace(playerid), items[PlayerInfo[playerid][pItemType][10]][itemName], var);
					SendClientMessage(user, COLOR_WHITE, dialogMsg);
					format(dialogMsg, sizeof(dialogMsg), "%s", EOS);
					getItemPage(user, pItems, sizeof(pItems), 1);
					if(pItems[0] != 0) {
						for(new i = 0; i != sizeof(pItems); i++) {
							if(pItems[i] == 0) {
								break;
							}

							if(isnull(dialogMsg)) {
							    if(pItems[i] >= 4 && pItems[i] <= 13) {
									format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(user, i));
								} else if(pItems[i] == 3) {
				    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(user, i));
								} else if(pItems[i] == 17) {
								    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(user, i));
								} else if(pItems[i] == 18) {
								    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(user, i));
								} else if(pItems[i] == 19) {
								    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(user, i));
                                } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(user, i));
								} else {
								    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
								}
							} else {
								if(pItems[i] >= 4 && pItems[i] <= 13) {
									format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
								} else if(pItems[i] == 3) {
				    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
								} else if(pItems[i] == 17) {
								    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
								} else if(pItems[i] == 18) {
								    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
								} else if(pItems[i] == 19) {
								    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
                                } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(user, i));
								} else {
								    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
								}
							}

							if(getItemID(user, i) == PlayerInfo[user][pItemID][items[pItems[i]][iIdx]]) {
							    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
							}
						}

						if(itemIndexExists(user, 21)) {
							format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
						}

						SetPVarInt(playerid, "CurrentItemPage", 1);
						ShowPlayerDialog(playerid, DIALOG_CHECKITEMS, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "选择", "取消");
					}
				} else {
					SendClientMessage(playerid, COLOR_GREY, "您必须输入一个数值变量不超过十一位数.");
					ShowPlayerDialog(playerid, DIALOG_CHECKITEMS_OPTIONS_VAR, DIALOG_STYLE_INPUT, "{FF9900}物品", "请输入该项新的变量:", "选择", "取消");
				}
			}
		}
		case DIALOG_DEALERSHIP_BUY:
		{
			if(response)
			{
                new v = GetPVarInt(playerid, "DealerVehicle") - 1,
					query[310];

                if(IsGoldDonateVehicle(400 + v) && PlayerInfo[playerid][pDonateRank] < 3) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要成为黄金捐赠用户才能购买此车.");
				if(IsSilverDonateVehicle(400 + v) && PlayerInfo[playerid][pDonateRank] < 2) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要成为白银捐赠用户或者更高级别捐赠才能购买此车.");
				if(IsBronzeDonateVehicle(400 + v) && PlayerInfo[playerid][pDonateRank] < 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要成为青铜捐赠用户或者更高级别捐赠才能购买此车.");

                new VehicleID;
				VehicleID = 100000 + random(999999999); // GHETTO FIX FOR VEHICLE IDS.
				PlayerInfo[playerid][pCarID] = VehicleID;
				VehicleInfo[v][vID] = PlayerInfo[playerid][pCarID];
				
				new string[128];
                format(string, sizeof(string), "你购买了一台 %s 花费 $%d.", vehicleData[v][typeName], vehicleData[v][typePrice]);
    			SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
                GivePlayerMoneyEx(playerid, -vehicleData[v][typePrice]);
                dealerExit[playerid] = 1;
                
		        if(GetPVarInt(playerid, "DealershipLoc") == 1) {
		            SetPlayerPosEx(playerid, 5, 542.2992, -1292.1060, 17.2422);
					mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_vehicles` (`id`, `owner`, `vehicle`, `color1`, `color2`, `x`, `y`, `z`, `a`, `fuel`, `health`, `plate`, `rented`, `rentHours`, `paintjob`) \
																   VALUES (%i, '%e', %i, %i, %i, 524.8774, -1290.8939, 17.0422, 310.1589, %i, 1000, '%e', 0, 0, 3)",
																   PlayerInfo[playerid][pCarID],
				 												   PlayerInfo[playerid][pName],
																   400 + v,
																   GetPVarInt(playerid, "DealerColor1"),
																   GetPVarInt(playerid, "DealerColor2"),
																   vehicleData[v][tank],
																   GetNextVehiclePlate());
				} else {
				    SetPlayerPosEx(playerid, 5, 2131.7964, -1150.2208, 24.1810);
					mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_vehicles` (`id`, `owner`, `vehicle`, `color1`, `color2`, `x`, `y`, `z`, `a`, `fuel`, `health`, `plate`, `rented`, `rentHours`, `paintjob`) \
															       VALUES (%i, '%e', %i, %i, %i, 2148.6401, -1143.2185, 24.7519, 269.2433, %i, 1000, '%e', 0, 0, 3)",
																   PlayerInfo[playerid][pCarID],
				 												   PlayerInfo[playerid][pName],
																   400 + v,
																   GetPVarInt(playerid, "DealerColor1"),
																   GetPVarInt(playerid, "DealerColor2"),
																   vehicleData[v][tank],
																   GetNextVehiclePlate());
				}

				mysql_function_query(sqlHandle, query, false, "", "");
				format(query, sizeof(query), "%s bought vehicle %s.", PlayerInfo[playerid][pName], vehicleData[v][typeName]);
				Log(playerid, "Dealership", query);
				if(PlayerInfo[playerid][pAdminlevel] == 0)
				{
					format(string, sizeof(string), "%s has bought a %s with unique car-ID: %d.", PlayerInfo[playerid][pName], vehicleData[v][typeName], PlayerInfo[playerid][pCarID]);
	                AdminMessageLog(string, playerid, "Vehicle Registration");
     			}
				PlayerInfo[playerid][pCarID] = 0;
				SaveData(playerid);
			}
		}
		case DIALOG_RENTAL_UNQUESTION:
		{
		    if(response)
			{
		        new query[95];
		        mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_vehicles` WHERE `rented` != 0 AND `owner` = '%e'", PlayerInfo[playerid][pName]);
		        mysql_function_query(sqlHandle, query, false, "", "");
		        TextDrawHideForPlayer(playerid, TD_R_Truck);
				PlayerTextDrawHide(playerid, TD_R_TruckText);
			    for(new i = 0; i != MAX_VEHICLES; i++) {
			        if(strcmp(VehicleInfo[i][vOwner], PlayerInfo[playerid][pName]) == 0 && VehicleInfo[i][vRented] != 0) {
			            DestroyVehicle(i);
			            ResetVehicleData(i);
						SetPVarInt(playerid, "PrivateCar", 0);
			            break;
			        }
			    }

			    SendClientMessage(playerid, COLOR_FADE3, "雇员说: 感谢选择我们的服务.");
			} else {
			    SendClientMessage(playerid, COLOR_FADE3, "雇员说: 欢迎光临, 好好享受这一天吧.");
			}
		}
		case DIALOG_RENTAL_QUESTION: {
		    if(response) {
			    new msg[85],
					vehicles[400];

			    format(msg, sizeof(msg), "** 员工拿出一张载具租赁合同并且递给了 %s.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, msg, COLOR_PINK);
			    SendClientMessage(playerid, COLOR_FADE3, "雇员说: 请坐下并填写表格.");
			    SetPlayerPosEx(playerid, 2, 1255.0398, -1804.45, 1464, 177.3334, GetPlayerInterior(playerid), playerid + 1);
			    SetPlayerCameraPos(playerid, 1255.0398, -1808.5, 1465.4860);
	            SetPlayerCameraLookAt(playerid, 1254.7759, -1805.8264, 1465.0056);
	            for(new i = 0; i < sizeof(RentalInfo); i++) {
					if(isnull(vehicles)) {
						format(vehicles, sizeof(vehicles), "%s - $100\n", vehicleData[RentalInfo[i][rVehicleID] - 400][typeName], RentalInfo[i][rVehiclePrice]);
					} else {
					    format(vehicles, sizeof(vehicles), "%s%s - $100\n", vehicles, vehicleData[RentalInfo[i][rVehicleID] - 400][typeName], RentalInfo[i][rVehiclePrice]);
					}
				}

			    ShowPlayerDialog(playerid, DIALOG_RENTAL_VEHICLE, DIALOG_STYLE_LIST, "{FF9900}租赁中心", vehicles, "选择", "取消");
			} else {
			    SendClientMessage(playerid, COLOR_FADE3, "雇员说: 欢迎光临, 好好享受这一天吧.");
			}
		}
		case DIALOG_RENTAL_QUESTIONEX: {
		    if(response) {
			    new msg[85],
					vehicles[400];

			    format(msg, sizeof(msg), "** 员工拿出一张载具租赁合同并且递给了 %s.", GetNameWithSpace(playerid, 1));
			    ProxDetector(12, playerid, msg, COLOR_PINK);
			    SendClientMessage(playerid, COLOR_FADE3, "雇员说: 请填写表格.");
	            for(new i = 0; i < sizeof(RentalInfo); i++) {
					if(isnull(vehicles)) {
						format(vehicles, sizeof(vehicles), "%s - $100\n", vehicleData[RentalInfo[i][rVehicleID] - 400][typeName], RentalInfo[i][rVehiclePrice]);
					} else {
					    format(vehicles, sizeof(vehicles), "%s%s - $100\n", vehicles, vehicleData[RentalInfo[i][rVehicleID] - 400][typeName], RentalInfo[i][rVehiclePrice]);
					}
				}

			    ShowPlayerDialog(playerid, DIALOG_RENTAL_VEHICLEEX, DIALOG_STYLE_LIST, "{FF9900}租赁中心", vehicles, "选择", "取消");
			} else {
			    SendClientMessage(playerid, COLOR_FADE3, "雇员说: 欢迎光临, 好好享受这一天吧.");
			}
		}
		case DIALOG_RENTAL_VEHICLE: {
		    if(response) {
			    if(RentalInfo[listitem][rVehicleLicense] != 0 && PlayerInfo[playerid][pDriveLic] == 0) {
			        new vehicles[400];
	                for(new i = 0; i < sizeof(RentalInfo); i++) {
						if(isnull(vehicles)) {
							format(vehicles, sizeof(vehicles), "%s - $100\n", vehicleData[RentalInfo[i][rVehicleID] - 400][typeName], RentalInfo[i][rVehiclePrice]);
						} else {
						    format(vehicles, sizeof(vehicles), "%s%s - $100\n", vehicles, vehicleData[RentalInfo[i][rVehicleID] - 400][typeName], RentalInfo[i][rVehiclePrice]);
						}
					}

			        SendClientMessage(playerid, COLOR_FADE3, "雇员说: 对不起, 你没有驾照所以无法驾驶该车..");
			        ShowPlayerDialog(playerid, DIALOG_RENTAL_VEHICLE, DIALOG_STYLE_LIST, "{FF9900}租赁中心", vehicles, "选择", "取消");
			    } else {
			        new contract[330];
           			SetPVarInt(playerid, "NewRental", RentalInfo[listitem][rVehicleID]);
					format(contract, sizeof(contract), "合同\n\n承租人: \t\t{FF9900}%s\n{a9c4e4}载具模型: \t\t\t{FF9900}%s\n{a9c4e4}分期价格: \t\t\t{FF9900}$%i\n{a9c4e4}租用期数: \t\t\t{FF9900}7小时{a9c4e4}\n\
														合同费用: \t\t{FF9900}$50\n\n{a9c4e4}为了保障两方的利益, 我们需要您在底下签字.",
														GetNameWithSpace(playerid), vehicleData[RentalInfo[listitem][rVehicleID] - 400][typeName], RentalInfo[listitem][rVehiclePrice]);
														
			  		ShowPlayerDialog(playerid, DIALOG_RENTAL_SIGN, DIALOG_STYLE_MSGBOX, "{FF9900}租赁中心", contract, "签名", "取消");
				}
			} else {
			    SendClientMessage(playerid, COLOR_FADE3, "雇员说: 欢迎光临, 好好享受这一天吧.");
			    SetPlayerPosEx(playerid, 5, 1253.8276, -1811.0732, 1464.4860, 0, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
			}
		}
		case DIALOG_RENTAL_VEHICLEEX: {
		    if(response) {
			    if(RentalInfo[listitem][rVehicleLicense] != 0 && PlayerInfo[playerid][pDriveLic] == 0) {
			        new vehicles[400];
	                for(new i = 0; i < sizeof(RentalInfo); i++) {
						if(isnull(vehicles)) {
							format(vehicles, sizeof(vehicles), "%s - $100\n", vehicleData[RentalInfo[i][rVehicleID] - 400][typeName], RentalInfo[i][rVehiclePrice]);
						} else {
						    format(vehicles, sizeof(vehicles), "%s%s - $100\n", vehicles, vehicleData[RentalInfo[i][rVehicleID] - 400][typeName], RentalInfo[i][rVehiclePrice]);
						}
					}

			        SendClientMessage(playerid, COLOR_FADE3, "雇员说: 对不起, 你没有驾照所以无法驾驶该车..");
			        ShowPlayerDialog(playerid, DIALOG_RENTAL_VEHICLEEX, DIALOG_STYLE_LIST, "{FF9900}租赁中心", vehicles, "选择", "取消");
			    } else {
			        new contract[330];
           			SetPVarInt(playerid, "NewRental", RentalInfo[listitem][rVehicleID]);
					format(contract, sizeof(contract), "合同\n\n承租人: \t\t{FF9900}%s\n{a9c4e4}载具模型: \t\t\t{FF9900}%s\n{a9c4e4}分期价格: \t\t\t{FF9900}$%i\n{a9c4e4}租用期数: \t\t\t{FF9900}7小时{a9c4e4}\n\
														合同费用: \t\t{FF9900}$50\n\n{a9c4e4}为了保障两方的利益, 我们需要您在底下签字.",
														GetNameWithSpace(playerid), vehicleData[RentalInfo[listitem][rVehicleID] - 400][typeName], RentalInfo[listitem][rVehiclePrice]);

			  		ShowPlayerDialog(playerid, DIALOG_RENTAL_SIGNEX, DIALOG_STYLE_MSGBOX, "{FF9900}租赁中心", contract, "签名", "取消");
				}
			} else {
			    SendClientMessage(playerid, COLOR_FADE3, "雇员说: 欢迎光临, 好好享受这一天吧.");
			    //SetPlayerPosEx(playerid, 5, 1253.8276, -1811.0732, 1464.4860, 0, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
			}
		}
		case DIALOG_RENTAL_SIGN: {
		    if(response) {
		        if(PlayerInfo[playerid][pMoney] >= 100 || PlayerInfo[playerid][pDonateRank] > 1) {
		    		new color = random(50),
		    		    color2 = random(50),
		    		    query[310],
						vehicle = GetPVarInt(playerid, "NewRental");

                    new VehicleID;
					VehicleID = 1000000 + random(9999999); // GHETTO FIX FOR VEHICLE IDS.
					PlayerInfo[playerid][pCarID] = VehicleID;


					switch(rentalCounter) {
						case 0: {
						    rentalCounter = 1;
						    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_vehicles` (`id`, `owner`, `vehicle`, `color1`, `color2`, `x`, `y`, `z`, `a`, `fuel`, `health`, `plate`, `rented`, `rentHours`, `paintjob`)\
																           VALUES (%i, '%e', %i, %i, %i, 1635.6956, -1902.9154, 13.4110, 357.5983, %i, 1000, '%e', 1, 7, 3)",
																           PlayerInfo[playerid][pCarID], PlayerInfo[playerid][pName], vehicle, color, color2, vehicleData[vehicle - 400][tank], GetNextVehiclePlate());
						}
						case 1: {
						    rentalCounter = 2;
						    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_vehicles` (`id`, `owner`, `vehicle`, `color1`, `color2`, `x`, `y`, `z`, `a`, `fuel`, `health`, `plate`, `rented`, `rentHours`, `paintjob`)\
																           VALUES (%i, '%e', %i, %i, %i, 1630.7490, -1902.4418, 13.4126, 358.2447, %i, 1000, '%e', 1, 7, 3)",
																           PlayerInfo[playerid][pCarID], PlayerInfo[playerid][pName], vehicle, color, color2, vehicleData[vehicle - 400][tank], GetNextVehiclePlate());
						}
						case 2: {
						    rentalCounter = 3;
						    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_vehicles` (`id`, `owner`, `vehicle`, `color1`, `color2`, `x`, `y`, `z`, `a`, `fuel`, `health`, `plate`, `rented`, `rentHours`, `paintjob`)\
																           VALUES (%i, '%e', %i, %i, %i, 1640.7107, -1902.7543, 13.4140, 357.8698, %i, 1000, '%e', 1, 7, 3)",
																           PlayerInfo[playerid][pCarID], PlayerInfo[playerid][pName], vehicle, color, color2, vehicleData[vehicle - 400][tank], GetNextVehiclePlate());
						}
						case 3: {
						    rentalCounter = 0;
						    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_vehicles` (`id`, `owner`, `vehicle`, `color1`, `color2`, `x`, `y`, `z`, `a`, `fuel`, `health`, `plate`, `rented`, `rentHours`, `paintjob`)\
																           VALUES (%i, '%e', %i, %i, %i, 1645.8167, -1902.9655, 13.4134, 358.4485, %i, 1000, '%e', 1, 7, 3)",
																           PlayerInfo[playerid][pCarID], PlayerInfo[playerid][pName], vehicle, color, color2, vehicleData[vehicle - 400][tank], GetNextVehiclePlate());
						}
					}

					mysql_function_query(sqlHandle, query, false, "", "");//
					format(query, sizeof(query), "** %s 拿起笔签下租车合同书之后将钥匙从柜台上取走.", GetNameWithSpace(playerid, 1));
					ProxDetector(12, playerid, query, COLOR_PINK);
					SendClientMessage(playerid, COLOR_FADE3, "雇员说: 恭喜您, 租用成功! 祝您生活愉快. 另外你的载具将由工作人员移动到停车场, 再次感谢您的光临! (( /spawn )).");
					if(PlayerInfo[playerid][pDonateRank] == 0 || PlayerInfo[playerid][pDonateRank] == 1)
					{
						GivePlayerMoneyEx(playerid, -100);
					}
					PlayerTextDrawSetString(playerid, TD_R_TruckText, "Rental~n~~r~7 ~w~Paydays");
					PlayerTextDrawShow(playerid, TD_R_TruckText);
					TextDrawShowForPlayer(playerid, TD_R_Truck);
				    SetPlayerPosEx(playerid, 5, 1253.8276, -1811.0732, 1464.4860, 0, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
				} else {
				    SendClientMessage(playerid, COLOR_GREY, "雇员说: 你需要 $100 才能租用载具, 谢谢你的光临.");
					SetPlayerPosEx(playerid, 5, 1253.8276, -1811.0732, 1464.4860, 0, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
				}
		    } else {
		        SendClientMessage(playerid, COLOR_FADE3, "雇员说: 谢谢你的光临.");
				SetPlayerPosEx(playerid, 5, 1253.8276, -1811.0732, 1464.4860, 0, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
		    }
		}
		
		case DIALOG_RENTAL_SIGNEX: {
		    if(response) {
		        if(PlayerInfo[playerid][pMoney] >= 100 || PlayerInfo[playerid][pDonateRank] > 1) {
		    		new color = random(50),
		    		    color2 = random(50),
		    		    query[310],
						vehicle = GetPVarInt(playerid, "NewRental");

                    new VehicleID;
					VehicleID = 1000000 + random(9999999); // GHETTO FIX FOR VEHICLE IDS.
					PlayerInfo[playerid][pCarID] = VehicleID;


						    mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_vehicles` (`id`, `owner`, `vehicle`, `color1`, `color2`, `x`, `y`, `z`, `a`, `fuel`, `health`, `plate`, `rented`, `rentHours`, `paintjob`)\
																           VALUES (%i, '%e', %i, %i, %i, -2411.0981, -2206.6978, 34.1317, 0.0, %i, 1000, '%e', 1, 7, 3)",
																           PlayerInfo[playerid][pCarID], PlayerInfo[playerid][pName], vehicle, color, color2, vehicleData[vehicle - 400][tank], GetNextVehiclePlate());
					
						

					mysql_function_query(sqlHandle, query, false, "", "");//
					format(query, sizeof(query), "** %s 拿起笔签下租车合同书之后将钥匙从柜台上取走.", GetNameWithSpace(playerid, 1));
					ProxDetector(12, playerid, query, COLOR_PINK);
					SendClientMessage(playerid, COLOR_FADE3, "雇员说: 恭喜您, 租用成功! 祝您生活愉快.  再次感谢您的光临! (( /spawn )).");
					if(PlayerInfo[playerid][pDonateRank] == 0 || PlayerInfo[playerid][pDonateRank] == 1)
					{
						GivePlayerMoneyEx(playerid, -100);
					}
					PlayerTextDrawSetString(playerid, TD_R_TruckText, "Rental~n~~r~7 ~w~Paydays");
					PlayerTextDrawShow(playerid, TD_R_TruckText);
					TextDrawShowForPlayer(playerid, TD_R_Truck);
				 //   SetPlayerPosEx(playerid, 5, 1253.8276, -1811.0732, 1464.4860, 0, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
				} else {
				    SendClientMessage(playerid, COLOR_GREY, "雇员说: 你需要 $100 才能租用载具, 谢谢你的光临.");
				//	SetPlayerPosEx(playerid, 5, 1253.8276, -1811.0732, 1464.4860, 0, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
				}
		    } else {
		        SendClientMessage(playerid, COLOR_FADE3, "雇员说: 谢谢你的光临.");
			//	SetPlayerPosEx(playerid, 5, 1253.8276, -1811.0732, 1464.4860, 0, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
		    }
		}
		
		case DIALOG_VEHICLESPAWN: {
		    if(response) {
		        new query[210];
		        mysql_format(sqlHandle, query, sizeof(query), "SELECT * FROM `samp_vehicles` WHERE `owner` = '%e' LIMIT %i, 1", PlayerInfo[playerid][pName], listitem);
                mysql_function_query(sqlHandle, query, true, "OnPlayerVehicleSpawn", "i", playerid);
		    }
		}
		case DIALOG_GOTO_LOCATION: {
			if(response) {
				SetPlayerPosEx(playerid, 5, adminLocs[listitem][locX], adminLocs[listitem][locY], adminLocs[listitem][locZ], 0.0, adminLocs[listitem][locInt], adminLocs[listitem][locVW]);
			}
		}
		case DIALOG_BUSINESS_PRICE: {
		    if(response) {
			    if(IsNumeric(inputtext)) {
					new price = strval(inputtext);
					if(price >= GM_MIN_BUSINESS_PRICE && price <= GM_MAX_BUSINESS_PRICE) {
					    new businessID = GetPVarInt(playerid, "CreateBusinessID");
					    format(gVar3000, sizeof(gVar3000), "%s", EOS);
					    for(new i = 0; i < sizeof(businessData); i++) {
					        if(isnull(gVar3000)) {
					            format(gVar3000, sizeof(gVar3000), "%s", businessData[i][intName]);
					        } else {
					            format(gVar3000, sizeof(gVar3000), "%s\n%s", gVar3000, businessData[i][intName]);
					        }
					    }

					    BusinessInfo[businessID][bPrice] = price;
					    ShowPlayerDialog(playerid, DIALOG_BUSINESS_INTERIOR, DIALOG_STYLE_LIST, "{FF9900}创建产业", gVar3000, "确定", "取消");
					    format(gVar3000, sizeof(gVar3000), "%s", EOS);
					} else {
					    new msg[65];
						format(msg, sizeof(msg), "服务器: 你需要在 $%i 到 $%i 之间进行价格设置.", GM_MIN_BUSINESS_PRICE, GM_MAX_BUSINESS_PRICE);
				        SendClientMessage(playerid, COLOR_LIGHTGREEN, msg);
				        ShowPlayerDialog(playerid, DIALOG_BUSINESS_PRICE, DIALOG_STYLE_INPUT, "{FF9900}创建产业", "请输入产业价格:", "确定", "取消");
					}
			    } else {
					new msg[65];
					format(msg, sizeof(msg), "服务器: 你需要在 $%i 到 $%i 之间进行价格设置.", GM_MIN_BUSINESS_PRICE, GM_MAX_BUSINESS_PRICE);
			        SendClientMessage(playerid, COLOR_LIGHTGREEN, msg);
			        ShowPlayerDialog(playerid, DIALOG_BUSINESS_PRICE, DIALOG_STYLE_INPUT, "{FF9900}创建产业", "请输入产业价格:", "确定", "取消");
			    }
			} else {
			    new businessID = GetPVarInt(playerid, "CreateBusinessID");
			    BusinessInfo[businessID][bID] = 0;
			    BusinessInfo[businessID][bX] = 0;
			    BusinessInfo[businessID][bY] = 0;
			    BusinessInfo[businessID][bZ] = 0;
			}
		}
		case DIALOG_BUSINESS_INTERIOR: {
		    new businessID = GetPVarInt(playerid, "CreateBusinessID");
		    if(response) {
				BusinessInfo[businessID][bInt] = listitem;
		 		BusinessInfo[businessID][bMoney] = 0;
		 		BusinessInfo[businessID][bLocked] = 0;
		 		ShowPlayerDialog(playerid, DIALOG_BUSINESSADRESS, DIALOG_STYLE_INPUT, "{FF9900}创建产业", "请输入该产业具体的街道名称:", "确定", "取消");
			} else {
			    BusinessInfo[businessID][bID] = 0;
				BusinessInfo[businessID][bPrice] = 0;
			    BusinessInfo[businessID][bX] = 0;
			    BusinessInfo[businessID][bY] = 0;
			    BusinessInfo[businessID][bZ] = 0;
			}
		}
		case DIALOG_BUSINESSADRESS: {
		    if(response) {
		        if(strlen(inputtext) != 0) {
		            new businessID = GetPVarInt(playerid, "CreateBusinessID");
		            format(BusinessInfo[businessID][bStreet], 40, "%s", inputtext);
                 	ShowPlayerDialog(playerid, DIALOG_BUSINESSZIP, DIALOG_STYLE_LIST, "{FF9900}创建产业", "Fort Carson / LV - 90206\nFlint County / Angel Pine - 90207\nEntire Red County - 90208\nMullholland - 90209 / \
				 																	\nRichman - 90210\nRodeo - 90211\nMarket / Vinewood - 90212\nSanta Maria / Verona Beach - 90213\nDowntown / Little Tokyo - 90214 / \
																			 		\nCommerce - 90215\nEast Los Angeles - 90216\nSeville - 90217\nSouth Los Angeles - 90218", "提交", "取消");
				} else {
				    SendClientMessage(playerid, COLOR_GREY, "你需要输入一个街道名称.");
				    ShowPlayerDialog(playerid, DIALOG_BUSINESSADRESS, DIALOG_STYLE_INPUT, "{FF9900}创建产业", "请输入该产业具体的街道名称:", "确定", "取消");
				}
		    } else {
		        new businessID = GetPVarInt(playerid, "CreateBusinessID");
		        BusinessInfo[businessID][bInt] = 0;
		        BusinessInfo[businessID][bID] = 0;
				BusinessInfo[businessID][bPrice] = 0;
			    BusinessInfo[businessID][bX] = 0;
			    BusinessInfo[businessID][bY] = 0;
			    BusinessInfo[businessID][bZ] = 0;
		    }
		}
		case DIALOG_BUSINESSZIP: {
		    new businessID = GetPVarInt(playerid, "CreateBusinessID");
		    if(response) {
		  		switch(listitem) {
		            case 0: BusinessInfo[businessID][bBusinesszip] = 90206;
		            case 1: BusinessInfo[businessID][bBusinesszip] = 90207;
		            case 2: BusinessInfo[businessID][bBusinesszip] = 90208;
		            case 3: BusinessInfo[businessID][bBusinesszip] = 90209;
		            case 4: BusinessInfo[businessID][bBusinesszip] = 90210;
		            case 5: BusinessInfo[businessID][bBusinesszip] = 90211;
		            case 6: BusinessInfo[businessID][bBusinesszip] = 90212;
		            case 7: BusinessInfo[businessID][bBusinesszip] = 90213;
		            case 8: BusinessInfo[businessID][bBusinesszip] = 90214;
		            case 9: BusinessInfo[businessID][bBusinesszip] = 90215;
		            case 10: BusinessInfo[businessID][bBusinesszip] = 90216;
		            case 11: BusinessInfo[businessID][bBusinesszip] = 90217;
		            case 12: BusinessInfo[businessID][bBusinesszip] = 90218;
		        }

				ShowPlayerDialog(playerid, DIALOG_BUSINESSTAXES, DIALOG_STYLE_INPUT, "{FF9900}创建产业", "请输入该产业的税收:", "提交", "取消");
		    } else {
		        format(BusinessInfo[businessID][bStreet], 40, " ");
		        BusinessInfo[businessID][bInt] = 0;
		        BusinessInfo[businessID][bID] = 0;
				BusinessInfo[businessID][bPrice] = 0;
			    BusinessInfo[businessID][bX] = 0;
			    BusinessInfo[businessID][bY] = 0;
			    BusinessInfo[businessID][bZ] = 0;
		    }
		}
		case DIALOG_BUSINESSTAXES: {
			if(response) {
			    if(IsNumeric(inputtext) && strval(inputtext) > 0) {
			        BusinessInfo[GetPVarInt(playerid, "CreateBusinessID")][bTaxes] = strval(inputtext);
			        ShowPlayerDialog(playerid, DIALOG_BUSINESSNUMBER, DIALOG_STYLE_INPUT, "{FF9900}创建产业", "请输入该产业的门面号码:", "提交", "取消");
				} else {
				    SendClientMessage(playerid, COLOR_GREY, "请输入一个有效税收.");
				    ShowPlayerDialog(playerid, DIALOG_BUSINESSTAXES, DIALOG_STYLE_INPUT, "{FF9900}创建产业", "请输入该产业的税收:", "提交", "取消");
				}
			} else {
			    new businessID = GetPVarInt(playerid, "CreateBusinessID");
		        BusinessInfo[businessID][bBusinesszip] = 0;
		        format(BusinessInfo[businessID][bStreet], 40, " ");
		        BusinessInfo[businessID][bInt] = 0;
		        BusinessInfo[businessID][bID] = 0;
				BusinessInfo[businessID][bPrice] = 0;
			    BusinessInfo[businessID][bX] = 0;
			    BusinessInfo[businessID][bY] = 0;
			    BusinessInfo[businessID][bZ] = 0;
			}
		}
		case DIALOG_BUSINESSNUMBER: {
		    if(response) {
		        if(IsNumeric(inputtext) && strval(inputtext) > 0) {
		            new businessID = GetPVarInt(playerid, "CreateBusinessID"),
						query[320];

		            BusinessInfo[businessID][bHousenumber] = strval(inputtext);
		            format(BusinessInfo[businessID][bName], 20, "Business");
					businessCP[businessID] = CreateDynamicCP(BusinessInfo[businessID][bX], BusinessInfo[businessID][bY], BusinessInfo[businessID][bZ] - 1, 1.5, -1, -1, -1, 5.0);
					mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_businesses` (`x`, `y`, `z`, `interior`, `price`, `name`, `street`, `housenumber`, `zip`, `taxes`) \
																   VALUES (%f, %f, %f, %i, %i, '%e', '%e', %i, %i, %i)",
																  BusinessInfo[businessID][bX], BusinessInfo[businessID][bY], BusinessInfo[businessID][bZ], BusinessInfo[businessID][bInt],
																  BusinessInfo[businessID][bPrice], BusinessInfo[businessID][bName], BusinessInfo[businessID][bStreet], BusinessInfo[businessID][bHousenumber],
																  BusinessInfo[businessID][bBusinesszip], BusinessInfo[businessID][bTaxes]);

					mysql_function_query(sqlHandle, query, false, "OnAdminCreateBusiness", "ii", businessID, playerid);
				} else {
				    SendClientMessage(playerid, COLOR_GREY, "你需要输入一个有效的门面号码.");
				    ShowPlayerDialog(playerid, DIALOG_BUSINESSNUMBER, DIALOG_STYLE_INPUT, "{FF9900}创建产业", "请输入该产业的门面号码:", "提交", "取消");
				}
		    } else {
		        new businessID = GetPVarInt(playerid, "CreateBusinessID");
		        BusinessInfo[businessID][bBusinesszip] = 0;
		        format(BusinessInfo[businessID][bStreet], 40, " ");
		        BusinessInfo[businessID][bInt] = 0;
		        BusinessInfo[businessID][bID] = 0;
				BusinessInfo[businessID][bPrice] = 0;
			    BusinessInfo[businessID][bX] = 0;
			    BusinessInfo[businessID][bY] = 0;
			    BusinessInfo[businessID][bZ] = 0;
			    BusinessInfo[businessID][bTaxes] = 0;
		    }
		}
		case DIALOG_SETHOUSE: {
			if(response) {
				switch(listitem) {
					case 0: {
					    ShowPlayerDialog(playerid, DIALOG_SETHOUSE_HOUSENUMBER, DIALOG_STYLE_INPUT, "{FF9900}房屋管理", "请输入您目前正在管理的房子的门牌号码:", "提交", "取消");
					}
					case 1: {
					    ShowPlayerDialog(playerid, DIALOG_SETHOUSE_STREET, DIALOG_STYLE_INPUT, "{FF9900}房屋管理", "请输入您目前正在管理的房子的街道名称:", "提交", "取消");
					}
					case 2: {
					    ShowPlayerDialog(playerid, DIALOG_SETHOUSE_ZIP, DIALOG_STYLE_LIST, "{FF9900}房屋管理", "Fort Carson / LV - 90206\nFlint County / Angel Pine - 90207\nEntire Red County - 90208\nMullholland - 90209\
																												     \nRichman - 90210\nRodeo - 90211\nMarket / Vinewood - 90212\nSanta Maria / Verona Beach - 90213\nDowntown / \
																													 Little Tokyo - 90214\nCommerce - 90215\nEast Los Angeles - 90216\nSeville - 90217\nSouth Los Angeles - 90218", "提交", "取消");
					}
					case 3: {
					    ShowPlayerDialog(playerid, DIALOG_SETHOUSE_TAXES, DIALOG_STYLE_INPUT, "{FF9900}房屋管理", "请输入您目前正在管理的房子的税收:", "提交", "取消");
					}
					case 4: {
					    format(gVar3000, sizeof(gVar3000), "%s", EOS);
					    for(new i = 0; i < sizeof(houseData); i++) {
					        if(isnull(gVar3000)) {
					            format(gVar3000, sizeof(gVar3000), "%s", houseData[i][intName]);
					        } else {
					            format(gVar3000, sizeof(gVar3000), "%s\n%s", gVar3000, houseData[i][intName]);
					        }
					    }

					    ShowPlayerDialog(playerid, DIALOG_SETHOUSE_INTERIOR, DIALOG_STYLE_LIST, "{FF9900}房屋管理", gVar3000, "选择", "取消");
					    format(gVar3000, sizeof(gVar3000), "%s", EOS);
					}
					case 5: {
					    ShowPlayerDialog(playerid, DIALOG_SETHOUSE_PRICE, DIALOG_STYLE_INPUT, "{FF9900}房屋管理", "请输入房屋价格:", "提交", "取消");
					}
					case 6: {
					    if(strfind(HouseInfo[GetPVarInt(playerid, "HouseManager")][hOwner], "_") != -1) {
					        SendClientMessage(playerid, COLOR_GREY, "该房子已经被其他人拥有.");
					    } else {
					    	ShowPlayerDialog(playerid, DIALOG_SETHOUSE_OWNER, DIALOG_STYLE_INPUT, "{FF9900}房屋管理", "请输入新的业主名称:", "提交", "取消");
						}
					}
					case 7: {
					    new houseID = GetPVarInt(playerid, "HouseManager");
					    if(strfind(HouseInfo[houseID][hOwner], "_") == -1) {
					        SendClientMessage(playerid, COLOR_GREY, "该房子还没有被其他人拥有.");
					    } else {
					        new id = GetPlayerID(HouseInfo[houseID][hOwner]),
					            admMsg[128];

						    mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_houses` SET `owner` = NULL WHERE `id` = %i", HouseInfo[houseID][hID]);
			    		    mysql_function_query(sqlHandle, admMsg, false, "", "");
			    		    format(admMsg, sizeof(admMsg), "*** %s %s 将 %s 从房屋 [%i] 业主名单内移除.", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(HouseInfo[houseID][hOwner]), HouseInfo[houseID][hID]);
                            format(HouseInfo[houseID][hOwner], MAX_PLAYER_NAME, "%s", EOS);
			    		    if(id != -1) {
								SetMapIcons(id);
							}

							AdminMessageLog(admMsg, playerid, "SETHOUSE - Remove Owner");
						}
					}
				}
			}
		}
		case DIALOG_SETHOUSE_HOUSENUMBER: {//汉化
			if(response) {
				if(IsNumeric(inputtext) && strval(inputtext) > 0) {
                    new houseID = GetPVarInt(playerid, "HouseManager"),
						admMsg[110];

                    HouseInfo[houseID][hHousenumber] = strval(inputtext);
                    mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_houses` SET `housenumber` = %i WHERE `id` = %i", HouseInfo[houseID][hHousenumber], HouseInfo[houseID][hID]);
			    	mysql_function_query(sqlHandle, admMsg, false, "", "");
					format(admMsg, sizeof(admMsg), "*** %s %s 将 [%i] 房门号码改为 '%s'.", GetAdminRank(playerid), GetNameWithSpace(playerid), HouseInfo[houseID][hID], inputtext);
					AdminMessageLog(admMsg, playerid, "SETHOUSE - Change House Number");
				} else {
					SendClientMessage(playerid, COLOR_GREY, "您必须输入一个字符串并且不超过20个字符.");
					ShowPlayerDialog(playerid, DIALOG_SETHOUSE_HOUSENUMBER, DIALOG_STYLE_INPUT, "{FF9900}房屋管理", "请输入新的门面号码:", "提交", "取消");
				}
			}
		}
		case DIALOG_SETHOUSE_STREET: {
			if(response) {
				if(strlen(inputtext) > 0 && strlen(inputtext) <= 40) {
                    new houseID = GetPVarInt(playerid, "HouseManager"),
						admMsg[128];

                    mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_houses` SET `street` = '%e' WHERE `id` = %i", inputtext, HouseInfo[houseID][hID]);
			    	mysql_function_query(sqlHandle, admMsg, false, "", "");
					format(HouseInfo[houseID][hStreet], 40, "%s", inputtext);
					format(admMsg, sizeof(admMsg), "*** %s %s 将 [%i] 街区名称改为 '%s'.", GetAdminRank(playerid), GetNameWithSpace(playerid), HouseInfo[houseID][hID], inputtext);
					AdminMessageLog(admMsg, playerid, "SETHOUSE - Change Street Name");
				} else {
					SendClientMessage(playerid, COLOR_GREY, "您必须输入一个字符串并且不超过20个字符.");
					ShowPlayerDialog(playerid, DIALOG_SETHOUSE_STREET, DIALOG_STYLE_INPUT, "{FF9900}房屋管理", "请输入新的街区名称:", "提交", "取消");
				}
			}
		}
		case DIALOG_SETHOUSE_ZIP: {
			if(response) {
				new houseID = GetPVarInt(playerid, "HouseManager"),
					zip;

                switch(listitem) {
		            case 0: zip = 90206;
		            case 1: zip = 90207;
		            case 2: zip = 90208;
		            case 3: zip = 90209;
		            case 4: zip = 90210;
		            case 5: zip = 90211;
		            case 6: zip = 90212;
		            case 7: zip = 90213;
		            case 8: zip = 90214;
		            case 9: zip = 90215;
		            case 10: zip = 90216;
		            case 11: zip = 90217;
		            case 12: zip = 90218;
		        }

		        if(zip == HouseInfo[houseID][hZip]) {
		            SendClientMessage(playerid, COLOR_GREY, "你选择的邮政编码正是当前房屋的邮政编码, 请尝试更换其他.");
		        } else {
		            new admMsg[128];
		            mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_houses` SET `zip` = %i WHERE `id` = %i", zip, HouseInfo[houseID][hID]);
			    	mysql_function_query(sqlHandle, admMsg, false, "", "");
		            HouseInfo[houseID][hZip] = zip;
					format(admMsg, sizeof(admMsg), "*** %s %s has changed the zipcode of house [%i] to '%i (%s)'.", GetAdminRank(playerid), GetNameWithSpace(playerid), HouseInfo[houseID][hID], zip, GetAreaName(zip));
					AdminMessageLog(admMsg, playerid, "SETHOUSE - Change Zipcode");
		        }
			}
		}
		case DIALOG_SETHOUSE_TAXES: {
			if(response) {
				if(IsNumeric(inputtext) && strval(inputtext) > 0) {
                    new houseID = GetPVarInt(playerid, "HouseManager"),
						admMsg[110];

                    HouseInfo[houseID][hTaxes] = strval(inputtext);
                    mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_houses` SET `taxes` = %i WHERE `id` = %i", HouseInfo[houseID][hTaxes], HouseInfo[houseID][hID]);
			    	mysql_function_query(sqlHandle, admMsg, false, "", "");
					format(admMsg, sizeof(admMsg), "*** %s %s has changed the tax of house [%i] to '$%s'.", GetAdminRank(playerid), GetNameWithSpace(playerid), HouseInfo[houseID][hID], inputtext);
					AdminMessageLog(admMsg, playerid, "SETHOUSE - Change Tax");
				} else {
					SendClientMessage(playerid, COLOR_GREY, "不能超过20个字节.");
					ShowPlayerDialog(playerid, DIALOG_SETHOUSE_TAXES, DIALOG_STYLE_INPUT, "{FF9900}房屋管理", "请输入税收:", "提交", "取消");
				}
			}
		}
		case DIALOG_SETHOUSE_INTERIOR: {
			if(response) {
				new houseID = GetPVarInt(playerid, "HouseManager");
				if(listitem == HouseInfo[houseID][hInt]) {
				    SendClientMessage(playerid, COLOR_GREY, "你选择的内饰正是当前房屋内饰, 请选择其他.");
				} else {
				    new admMsg[128];
				    mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_houses` SET `interior` = %i WHERE `id` = %i", listitem, HouseInfo[houseID][hID]);
			    	mysql_function_query(sqlHandle, admMsg, false, "", "");
		            HouseInfo[houseID][hInt] = listitem;
					format(admMsg, sizeof(admMsg), "*** %s %s has changed the interior of house [%i] to '%i' (%s)'.", GetAdminRank(playerid), GetNameWithSpace(playerid), HouseInfo[houseID][hID], listitem, houseData[listitem][intName]);
					AdminMessageLog(admMsg, playerid, "SETHOUSE - Change Interior");
				}
			}
		}
		case DIALOG_SETHOUSE_PRICE: {
		    if(response) {
				if(IsNumeric(inputtext) && strval(inputtext) > 0) {
                    new houseID = GetPVarInt(playerid, "HouseManager"),
						admMsg[110];

                    HouseInfo[houseID][hPrice] = strval(inputtext);
                    mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_houses` SET `price` = %i WHERE `id` = %i", HouseInfo[houseID][hPrice], HouseInfo[houseID][hID]);
			    	mysql_function_query(sqlHandle, admMsg, false, "", "");
					format(admMsg, sizeof(admMsg), "*** %s %s has changed the price of house [%i] to '$%s'.", GetAdminRank(playerid), GetNameWithSpace(playerid), HouseInfo[houseID][hID], inputtext);
					AdminMessageLog(admMsg, playerid, "SETHOUSE - Change Price");
				} else {
					SendClientMessage(playerid, COLOR_GREY, "不能超过20字节.");
					ShowPlayerDialog(playerid, DIALOG_SETHOUSE_PRICE, DIALOG_STYLE_INPUT, "{FF9900}房屋管理", "请输入新的价格:", "提交", "取消");
				}
			}
		}
		case DIALOG_HOUSE:
		{
		    if(response)
			{
		        switch(listitem)
				{
		            case 0:
					{
						ShowPlayerDialog(playerid, DIALOG_HOUSE_MONEY, DIALOG_STYLE_INPUT, "{FF9900}房屋", "你想存多少钱到房子里:", "确定", "取消");
		            }
		            case 1:
					{
						ShowPlayerDialog(playerid, DIALOG_HOUSE_WMONEY, DIALOG_STYLE_INPUT, "{FF9900}房屋", "你想从房子里取多少钱:", "确定", "取消");
		            }
		            case 2:
					{
		                ShowPlayerDialog(playerid, DIALOG_HOUSE_RENTAL, DIALOG_STYLE_LIST, "{FF9900}房屋", "开启租赁\n关闭租赁\n逐出租客\n设置租费", "确定", "取消");
		            }
		            case 3:
					{
		                ShowPlayerDialog(playerid, DIALOG_HOUSE_RADIO, DIALOG_STYLE_LIST, "{FF9900}房屋", "开关电台\n切换频道\n使用外部URL\nRadio Los Angeles", "确定", "取消");
		            }
		            case 4:
					{
                        ShowPlayerDialog(playerid, DIALOG_HOUSE_DRUGS, DIALOG_STYLE_LIST, "{FF9900}房屋", "存放毒品\n取出毒品", "确定", "取消");
		            }
		            case 5:
				    {
						new string[128];
				        SendClientMessage(playerid, COLOR_LIGHTGREEN, "该房子内有以下物品:");
				        format(string, sizeof(string), "现金: [$%d] - 大麻: [%d] - 可卡因: [%d] - 天使粉: [%d] - 快克: [%d] - 海洛因: [%d]",HouseInfo[GetPlayerVirtualWorld(playerid)][hMoney], HouseInfo[GetPlayerVirtualWorld(playerid)][hWeed], HouseInfo[GetPlayerVirtualWorld(playerid)][hCocaine], HouseInfo[GetPlayerVirtualWorld(playerid)][hEcstasy], HouseInfo[GetPlayerVirtualWorld(playerid)][hCrack], HouseInfo[GetPlayerVirtualWorld(playerid)][hHeroin]);
						SendClientMessage(playerid, COLOR_GREY, string);
				    }
				    case 6:
				    {
				        ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM, DIALOG_STYLE_LIST, "{FF9900}房屋报警系统", "购买警报器\n出售警报器\n激活警报\n暂停警报\n设置密码\n关闭警报", "确定", "取消");
				    }
		        }
			}
		}
		case DIALOG_HOUSE_ALARM:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                new mess[128];
		                new vw = GetPlayerVirtualWorld(playerid);
		                if(!GetPVarInt(playerid, "InHouse")) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房子内.");
		                if(strcmp(HouseInfo[vw][hOwner], PlayerInfo[playerid][pName], true)) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "这不是你的房子.");
		                if(PlayerInfo[playerid][pMoney] <= ALARM_PRICE-1)
						{
						    format(mess, sizeof(mess), "你没有钱购买警报系统, 你需要 $%d", ALARM_PRICE);
						    SendClientMessage(playerid, COLOR_GREY, mess);
						    return 1;
						}
						if(HouseInfo[vw][hAlarm] != 0) return SendClientMessage(playerid, COLOR_GREY, "该房屋已有警报系统.");
						HouseInfo[vw][hActivatedHalarm] = false;
      					format(HouseInfo[vw][hAlarmPassword], 129, "1234");
						GivePlayerMoneyEx(playerid, -ALARM_PRICE);
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功为您的房屋装置了警报器系统.");
            			SendClientMessage(playerid, COLOR_LIGHTGREEN, "您的房屋警报系统密码当前为: 1234, 你可以使用 /house options 来管理");
            			HouseInfo[vw][hAlarm] = 1;
            			new query[100];
            			mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `pass` = 1234, `alarm` = 1 WHERE `owner` = '%e'", PlayerInfo[playerid][pName]);
		        		mysql_function_query(sqlHandle, query, false, "", "");
		            }
		            case 1:
		            {
		                new vw = GetPlayerVirtualWorld(playerid);
		                if(!GetPVarInt(playerid, "InHouse")) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房子内.");
						if(strcmp(HouseInfo[vw][hOwner], PlayerInfo[playerid][pName], true)) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "这不是你的房子.");
					 	if(HouseInfo[vw][hAlarm] != 1) return SendClientMessage(playerid, COLOR_GREY, "该房屋没有警报系统.");
						HouseInfo[vw][hActivatedHalarm] = false;
						HouseInfo[vw][hAlarm] = 0;
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "你将你的房屋警报器以原价百分之75的价格变卖.");
					    GivePlayerMoneyEx(playerid, 2625);
					    format(HouseInfo[vw][hAlarmPassword], 129, "");
					    new query[100];
					    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `pass` = NULL, `alarm` = 0 WHERE `owner` = '%e'", PlayerInfo[playerid][pName]);
		        		mysql_function_query(sqlHandle, query, false, "", "");
		            }
		            case 2:
		            {
		                new vw = GetPlayerVirtualWorld(playerid);
		                if(!GetPVarInt(playerid, "InHouse")) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房子内.");
		 				if(HouseInfo[vw][hAlarm] != 1) return SendClientMessage(playerid, COLOR_GREY, "该房屋没有警报系统.");
		            	ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_ACESS_ON, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请输入您的房屋警报密码进行认证:", "确定", "取消");
		            }
		            case 3:
		            {
		                new vw = GetPlayerVirtualWorld(playerid);
		                if(!GetPVarInt(playerid, "InHouse")) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房子内.");
		 				if(HouseInfo[vw][hAlarm] != 1) return SendClientMessage(playerid, COLOR_GREY, "该房屋没有警报系统.");
		            	ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_ACESS_OFF, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请输入您的房屋警报密码进行认证:", "确定", "取消");
		            }
		            case 4:
		            {
		                new vw = GetPlayerVirtualWorld(playerid);
		                if(!GetPVarInt(playerid, "InHouse")) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房子内.");
						if(strcmp(HouseInfo[vw][hOwner], PlayerInfo[playerid][pName]) == 1 && isnull(HouseInfo[vw][hOwner])) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "这不是你的房子.");
		 				if(HouseInfo[vw][hAlarm] != 1) return SendClientMessage(playerid, COLOR_GREY, "该房屋没有警报系统.");
		            	ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_CPASS, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请输入您的房屋警报密码...", "确定", "取消");
		            }
		            case 5:
		            {
		                new vw = GetPlayerVirtualWorld(playerid);
		                if(!GetPVarInt(playerid, "InHouse")) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房子内.");
		                if(HouseInfo[vw][hAlarm] != 1) return SendClientMessage(playerid, COLOR_GREY, "该房屋没有警报系统.");
		            	ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_ACESS_SHUT, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请输入您的房屋警报密码进行认证:", "确定", "取消");
		            }
		        }
		    }
		}
		case DIALOG_HOUSE_ALARM_ACESS_SHUT:
		{
		    if(response)
			{
			    new vw = GetPlayerVirtualWorld(playerid);
			    if(!GetPVarInt(playerid, "InHouse")) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房子内.");
		 		if(HouseInfo[vw][hAlarm] != 1) return SendClientMessage(playerid, COLOR_GREY, "该房屋没有警报系统.");
			    if(!GetPVarInt(playerid, "InHouse")) return ShowPlayerDialog(playerid, 5235, DIALOG_STYLE_MSGBOX, "{FF9900}提示", "你不在任何房子内, 操作拒绝!", "确定", "");
		        if(strlen(inputtext) > 0)
				{
		        	if(!isnull(inputtext) && !isnull(HouseInfo[vw][hAlarmPassword]) && strcmp(inputtext, HouseInfo[vw][hAlarmPassword]) == 0)
					{
		        	    StopAudioStreamForPlayer(playerid);
						HouseInfo[vw][hYellingAlarm] = false;
		        	    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功关闭了房屋警报.");
		        	}
					else
					{
		        	    SendClientMessage(playerid, COLOR_LIGHTRED, "警告: 密码错误.");
		        	    ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_ACESS_SHUT, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请输入您的房屋警报密码进行认证:", "提交", "取消");
		        	}
		        }
				else
				{
		            ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_ACESS_SHUT, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请输入您的房屋警报密码进行认证:", "提交", "取消");
		        }
		    }
		}
		case DIALOG_HOUSE_ALARM_ACESS_ON:
		{
		    if(response)
			{
			    new vw = GetPlayerVirtualWorld(playerid);
			    if(!GetPVarInt(playerid, "InHouse")) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房子内.");
		 		if(HouseInfo[vw][hAlarm] != 1) return SendClientMessage(playerid, COLOR_GREY, "该房屋没有警报系统.");
			    if(!GetPVarInt(playerid, "InHouse")) return ShowPlayerDialog(playerid, 5235, DIALOG_STYLE_MSGBOX, "{FF9900}提示", "你不在任何房子内, 操作拒绝!", "确定", "");
		        if(strlen(inputtext) > 0)
				{
		        	if(!isnull(inputtext) && !isnull(HouseInfo[vw][hAlarmPassword]) && strcmp(inputtext, HouseInfo[vw][hAlarmPassword]) == 0)
					{
		        	    HouseInfo[vw][hActivatedHalarm] = true;
		        	    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功激活了房屋警报.");
		        	}
					else
					{
		        	    SendClientMessage(playerid, COLOR_LIGHTRED, "警告: 密码错误.");
		        	    ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_ACESS_ON, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请输入您的房屋警报密码进行认证:", "提交", "取消");
		        	}
		        }
				else
				{
		            ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_ACESS_ON, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请输入您的房屋警报密码进行认证:", "提交", "取消");
		        }
		    }
		}
		case DIALOG_HOUSE_ALARM_ACESS_OFF:
		{
		    if(response)
			{
			    new vw = GetPlayerVirtualWorld(playerid);
			    if(!GetPVarInt(playerid, "InHouse")) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房子内.");
		 		if(HouseInfo[vw][hAlarm] != 1) return SendClientMessage(playerid, COLOR_GREY, "该房屋没有警报系统.");
			    if(!GetPVarInt(playerid, "InHouse")) return ShowPlayerDialog(playerid, 5235, DIALOG_STYLE_MSGBOX, "{FF9900}提示", "你不在任何房子内, 操作拒绝!", "确定", "");
		        if(strlen(inputtext) > 0)
				{
		        	if(!isnull(inputtext) && !isnull(HouseInfo[vw][hAlarmPassword]) && strcmp(inputtext, HouseInfo[vw][hAlarmPassword]) == 0)
					{
		        	    HouseInfo[vw][hActivatedHalarm] = false;
		        	    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功暂停了房屋警报.");
		        	}
					else
					{
		        	    SendClientMessage(playerid, COLOR_LIGHTRED, "警告: 密码错误.");
		        	    ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_ACESS_OFF, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请输入您的房屋警报密码进行认证:", "提交", "取消");
		        	}
		        }
				else
				{
		            ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_ACESS_OFF, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请输入您的房屋警报密码进行认证:", "提交", "取消");
		        }
		    }
		}
		case DIALOG_HOUSE_ALARM_CPASS:
		{
		    if(response)
			{
			    new vw = GetPlayerVirtualWorld(playerid);
			    if(!GetPVarInt(playerid, "InHouse")) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房子内.");
		 		if(HouseInfo[vw][hAlarm] != 1) return SendClientMessage(playerid, COLOR_GREY, "该房屋没有警报系统.");
			    if(!GetPVarInt(playerid, "InHouse")) return ShowPlayerDialog(playerid, 5235, DIALOG_STYLE_MSGBOX, "{FF9900}提示", "你不在任何房子内, 操作拒绝!", "确定", "");
		        if(strlen(inputtext) > 0)
				{
		        	if(!isnull(inputtext) && !isnull(HouseInfo[vw][hAlarmPassword]) && strcmp(inputtext, HouseInfo[vw][hAlarmPassword]) == 0)
					{
		        	    ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_NPASS, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请输入您的房屋警报新密码...", "提交", "取消");
		        	}
					else
					{
		        	    SendClientMessage(playerid, COLOR_LIGHTRED, "警告: 密码错误.");
		        	    ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_CPASS, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请再次输入您的房屋警报密码...", "提交", "取消");
		        	}
		        }
				else
				{
		            SendClientMessage(playerid, COLOR_GREY, "你必须输入你现在的密码来进行.");
		            ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_CPASS, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请再次输入您的房屋警报密码...", "提交", "取消");
		        }
		    }
		}
		case DIALOG_HOUSE_ALARM_NPASS: {
		    if(response)
			{
			    new vw = GetPlayerVirtualWorld(playerid);
			    new string[128], query[100];
			    if(!GetPVarInt(playerid, "InHouse")) return SendClientMessage(playerid, COLOR_GREY, "你不在任何房子内.");
		 		if(HouseInfo[vw][hAlarm] != 1) return SendClientMessage(playerid, COLOR_GREY, "该房屋没有警报系统.");
			    if(!GetPVarInt(playerid, "InHouse")) return ShowPlayerDialog(playerid, 5235, DIALOG_STYLE_MSGBOX, "{FF9900}提示", "你不在任何房子内, 操作拒绝!", "确定", "");
		        if(strlen(inputtext) > 0) {

					format(string, sizeof(string), "提示: 密码已被更改为 %s", inputtext);
		        	SendClientMessage(playerid, COLOR_LIGHTRED, string);
		        	format(HouseInfo[vw][hAlarmPassword], 129, inputtext);
		        	mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `pass` = '%e' WHERE `owner` = '%e'", HouseInfo[vw][hAlarmPassword], PlayerInfo[playerid][pName]);
		        	mysql_function_query(sqlHandle, query, false, "", "");
		        	
		        } else {
		            ShowPlayerDialog(playerid, DIALOG_HOUSE_ALARM_NPASS, DIALOG_STYLE_PASSWORD, "{FF9900}房屋报警系统", "请输入您的房屋警报新密码...", "提交", "取消");
		        }
		    }
		}
		case DIALOG_HOUSE_DRUGS:
		{
		    if(response)
			{
		        switch(listitem)
				{
				    case 0:
				    {
                        ShowPlayerDialog(playerid, DIALOG_HOUSE_DEPOSIT_DRUGS, DIALOG_STYLE_LIST, "{FF9900}房屋", "大麻\n可卡因\n天使粉\n快克\n海洛因", "选择", "取消");
				    }
				    case 1:
				    {
				        ShowPlayerDialog(playerid, DIALOG_HOUSE_WITHDRAW_DRUGS, DIALOG_STYLE_LIST, "{FF9900}房屋", "大麻\n可卡因\n天使粉\n快克\n海洛因", "选择", "取消");
				    }
				}
			}
		}
		case DIALOG_HOUSE_DEPOSIT_DRUGS:
		{
		    if(response)
			{
		        switch(listitem)
				{
				    case 0:
				    {
						ShowPlayerDialog(playerid, DIALOG_HOUSE_DEPOSIT_WEED, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入你想存放的数量:", "确定", "取消");
				    }
				    case 1:
				    {
				        ShowPlayerDialog(playerid, DIALOG_HOUSE_DEPOSIT_COCAINE, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入你想存放的数量:", "确定", "取消");
				    }
				    case 2:
				    {
				        ShowPlayerDialog(playerid, DIALOG_HOUSE_DEPOSIT_ECSTASY, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入你想存放的数量:", "确定", "取消");
				    }
				    case 3:
				    {
				        ShowPlayerDialog(playerid, DIALOG_HOUSE_DEPOSIT_CRACK, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入你想存放的数量:", "确定", "取消");
				    }
				    case 4:
				    {
                        ShowPlayerDialog(playerid, DIALOG_HOUSE_DEPOSIT_HEROIN, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入你想存放的数量:", "确定", "取消");
				    }
				}
			}
		}
		case DIALOG_HOUSE_WITHDRAW_DRUGS:
		{
		    if(response)
			{
		        switch(listitem)
				{
				    case 0:
				    {
						ShowPlayerDialog(playerid, DIALOG_HOUSE_WITHDRAW_WEED, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入你想取出的数量:", "确定", "取消");
				    }
				    case 1:
				    {
				        ShowPlayerDialog(playerid, DIALOG_HOUSE_WITHDRAW_COCAINE, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入你想取出的数量:", "确定", "取消");
				    }
				    case 2:
				    {
				        ShowPlayerDialog(playerid, DIALOG_HOUSE_WITHDRAW_ECSTASY, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入你想取出的数量:", "确定", "取消");
				    }
				    case 3:
				    {
				        ShowPlayerDialog(playerid, DIALOG_HOUSE_WITHDRAW_CRACK, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入你想取出的数量:", "确定", "取消");
				    }
				    case 4:
				    {
                        ShowPlayerDialog(playerid, DIALOG_HOUSE_WITHDRAW_HEROIN, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入你想取出的数量:", "确定", "取消");
				    }
				}
			}
		}
		case DIALOG_HOUSE_WITHDRAW_WEED:
		{
		    if(response)
			{
				new weed = strval(inputtext);
				if(IsNumeric(inputtext) && !isnull(inputtext) && weed > 0)
				{
					if(HouseInfo[GetPlayerVirtualWorld(playerid)][hWeed] < weed)
					{
					    SendClientMessage(playerid, COLOR_GREY, "你的房子里没有该数量的大麻.");
					}
					else
					{
					    new msg[128],
							msgPlayer[128],
							query[128];

					    PlayerInfo[playerid][pWeed] += weed;
						format(msg, sizeof(msg), "** %s 从房屋里取出一些东西.", GetNameWithSpace(playerid, 1));
						ProxDetector(12, playerid, msg, COLOR_PINK);

						format(msgPlayer, sizeof(msgPlayer), "你从房子里取出了 %i 克大麻.", weed);
						SendClientMessage(playerid, COLOR_LIGHTGREEN, msgPlayer);

						HouseInfo[GetPlayerVirtualWorld(playerid)][hWeed] -= weed;

						//mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `weed` = %i WHERE `id` = %i", HouseInfo[GetPlayerVirtualWorld(playerid)][hWeed], GetPlayerVirtualWorld(playerid));
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `weed` = %i WHERE `owner` = '%e'", HouseInfo[GetPlayerVirtualWorld(playerid)][hWeed], PlayerInfo[playerid][pName]);
						mysql_function_query(sqlHandle, query, false, "", "");
					}
				}
				else
				{
	                SendClientMessage(playerid, COLOR_GREY, "您必须输入一个正确的数量.");
				}
		    }
		}
		case DIALOG_HOUSE_WITHDRAW_COCAINE:
		{
		    if(response)
			{
				new cocaine = strval(inputtext);
				if(IsNumeric(inputtext) && !isnull(inputtext) && cocaine > 0)
				{
					if(HouseInfo[GetPlayerVirtualWorld(playerid)][hCocaine] < cocaine)
					{
					    SendClientMessage(playerid, COLOR_GREY, "你的房子里没有该数量的可卡因.");
					}
					else
					{
					    new msg[128],
							msgPlayer[128],
							query[128];

					    PlayerInfo[playerid][pCocaine] += cocaine;
						format(msg, sizeof(msg), "** %s 从房屋里取出一些东西.", GetNameWithSpace(playerid, 1));
						ProxDetector(12, playerid, msg, COLOR_PINK);

						format(msgPlayer, sizeof(msgPlayer), "你从房子里取出了 %i 克可卡因.", cocaine);
						SendClientMessage(playerid, COLOR_LIGHTGREEN, msgPlayer);

						HouseInfo[GetPlayerVirtualWorld(playerid)][hCocaine] -= cocaine;

						//mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `cocaine` = %i WHERE `id` = %i", HouseInfo[GetPlayerVirtualWorld(playerid)][hCocaine], GetPlayerVirtualWorld(playerid));
                        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `cocaine` = %i WHERE `owner` = '%e'", HouseInfo[GetPlayerVirtualWorld(playerid)][hCocaine], PlayerInfo[playerid][pName]);
						mysql_function_query(sqlHandle, query, false, "", "");
					}
				}
				else
				{
	                SendClientMessage(playerid, COLOR_GREY, "您必须输入一个正确的数量.");
				}
		    }
		}
		case DIALOG_HOUSE_WITHDRAW_ECSTASY:
		{
		    if(response)
			{
				new ecstasy = strval(inputtext);
				if(IsNumeric(inputtext) && !isnull(inputtext) && ecstasy > 0)
				{
					if(HouseInfo[GetPlayerVirtualWorld(playerid)][hEcstasy] < ecstasy)
					{
					    SendClientMessage(playerid, COLOR_GREY, "你的房子里没有该数量的天使粉.");
					}
					else
					{
					    new msg[128],
							msgPlayer[128],
							query[128];

					    PlayerInfo[playerid][pEcstasy] += ecstasy;
						format(msg, sizeof(msg), "** %s 从房屋里取出一些东西.", GetNameWithSpace(playerid, 1));
						ProxDetector(12, playerid, msg, COLOR_PINK);

						format(msgPlayer, sizeof(msgPlayer), "你从房子里取出了 %i 袋天使粉.", ecstasy);
						SendClientMessage(playerid, COLOR_LIGHTGREEN, msgPlayer);

						HouseInfo[GetPlayerVirtualWorld(playerid)][hEcstasy] -= ecstasy;

						//mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `ecstasy` = %i WHERE `id` = %i", HouseInfo[GetPlayerVirtualWorld(playerid)][hEcstasy], GetPlayerVirtualWorld(playerid));
                        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `ecstasy` = %i WHERE `owner` = '%e'", HouseInfo[GetPlayerVirtualWorld(playerid)][hEcstasy], PlayerInfo[playerid][pName]);
						mysql_function_query(sqlHandle, query, false, "", "");
					}
				}
				else
				{
	                SendClientMessage(playerid, COLOR_GREY, "您必须输入一个正确的数量.");
				}
		    }
		}
		case DIALOG_HOUSE_WITHDRAW_CRACK:
		{
		    if(response)
			{
				new crack = strval(inputtext);
				if(IsNumeric(inputtext) && !isnull(inputtext) && crack > 0)
				{
					if(HouseInfo[GetPlayerVirtualWorld(playerid)][hCrack] < crack)
					{
					    SendClientMessage(playerid, COLOR_GREY, "你的房子里没有该数量的快克.");
					}
					else
					{
					    new msg[128],
							msgPlayer[128],
							query[128];

					    PlayerInfo[playerid][pCrack] += crack;
						format(msg, sizeof(msg), "** %s 从房屋里取出一些东西.", GetNameWithSpace(playerid, 1));
						ProxDetector(12, playerid, msg, COLOR_PINK);

						format(msgPlayer, sizeof(msgPlayer), "你从房子里取出了 %i 克快克.", crack);
						SendClientMessage(playerid, COLOR_LIGHTGREEN, msgPlayer);

						HouseInfo[GetPlayerVirtualWorld(playerid)][hCrack] -= crack;

						//mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `crack` = %i WHERE `id` = %i", HouseInfo[GetPlayerVirtualWorld(playerid)][hCrack], GetPlayerVirtualWorld(playerid));
                        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `crack` = %i WHERE `owner` = '%e'", HouseInfo[GetPlayerVirtualWorld(playerid)][hCrack], PlayerInfo[playerid][pName]);
						mysql_function_query(sqlHandle, query, false, "", "");
					}
				}
				else
				{
	                SendClientMessage(playerid, COLOR_GREY, "您必须输入一个正确的数量.");
				}
		    }
		}
		case DIALOG_HOUSE_WITHDRAW_HEROIN:
		{
		    if(response)
			{
				new heroin = strval(inputtext);
				if(IsNumeric(inputtext) && !isnull(inputtext) && heroin > 0)
				{
					if(HouseInfo[GetPlayerVirtualWorld(playerid)][hHeroin] < heroin)
					{
					    SendClientMessage(playerid, COLOR_GREY, "你的房子里没有该数量的海洛因.");
					}
					else
					{
					    new msg[128],
							msgPlayer[128],
							query[128];

					    PlayerInfo[playerid][pHeroin] += heroin;
						format(msg, sizeof(msg), "** %s 从房屋里取出一些东西.", GetNameWithSpace(playerid, 1));
						ProxDetector(12, playerid, msg, COLOR_PINK);

						format(msgPlayer, sizeof(msgPlayer), "你从房子里取出了 %i 克海洛因.", heroin);
						SendClientMessage(playerid, COLOR_LIGHTGREEN, msgPlayer);

						HouseInfo[GetPlayerVirtualWorld(playerid)][hHeroin] -= heroin;

						//mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `heroin` = %i WHERE `id` = %i", HouseInfo[GetPlayerVirtualWorld(playerid)][hHeroin], GetPlayerVirtualWorld(playerid));
                        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `heroin` = %i WHERE `owner` = '%e'", HouseInfo[GetPlayerVirtualWorld(playerid)][hHeroin], PlayerInfo[playerid][pName]);
						mysql_function_query(sqlHandle, query, false, "", "");
					}
				}
				else
				{
	                SendClientMessage(playerid, COLOR_GREY, "您必须输入一个正确的数量.");
				}
		    }
		}
		case DIALOG_HOUSE_DEPOSIT_WEED:
		{
		    if(response)
			{
				new weed = strval(inputtext);
				if(IsNumeric(inputtext) && !isnull(inputtext) && weed > 0)
				{
					if(PlayerInfo[playerid][pWeed] < weed)
					{
					    SendClientMessage(playerid, COLOR_GREY, "你没有该数量的大麻.");
					}
					else
					{
					    new msg[128],
							msgPlayer[128],
							query[128];

         				PlayerInfo[playerid][pWeed] -= weed;
						format(msg, sizeof(msg), "** %s 将一些东西存放在房子里.", GetNameWithSpace(playerid, 1));
						ProxDetector(12, playerid, msg, COLOR_PINK);
						format(msgPlayer, sizeof(msgPlayer), "你将 %i 克大麻存进了房屋储物箱内.", weed);
						SendClientMessage(playerid, COLOR_LIGHTGREEN, msgPlayer);
						HouseInfo[GetPlayerVirtualWorld(playerid)][hWeed] = HouseInfo[GetPlayerVirtualWorld(playerid)][hWeed] + weed;
						mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `weed` = %i WHERE `owner` = '%e'", HouseInfo[GetPlayerVirtualWorld(playerid)][hWeed], PlayerInfo[playerid][pName]);
						//mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `weed` = %i WHERE `id` = %i", HouseInfo[GetPlayerVirtualWorld(playerid)][hWeed], GetPlayerVirtualWorld(playerid));
						mysql_function_query(sqlHandle, query, false, "", "");
					}
				}
				else
				{
	   				SendClientMessage(playerid, COLOR_GREY, "你没有该数量的大麻或你输入了错误的数据..");
				}
		    }
		}
		case DIALOG_HOUSE_DEPOSIT_COCAINE:
		{
		    if(response)
			{
				new cocaine = strval(inputtext);
				if(IsNumeric(inputtext) && !isnull(inputtext) && cocaine > 0)
				{
					if(PlayerInfo[playerid][pCocaine] < cocaine)
					{
					    SendClientMessage(playerid, COLOR_GREY, "你没有该数量的可卡因.");
					}
					else
					{
					    new msg[128],
							msgPlayer[128],
							query[128];

         				PlayerInfo[playerid][pCocaine] -= cocaine;
						format(msg, sizeof(msg), "** %s 将一些东西存放在房子里.", GetNameWithSpace(playerid, 1));
						ProxDetector(12, playerid, msg, COLOR_PINK);
						format(msgPlayer, sizeof(msgPlayer), "你将 %i 克可卡因存进了房屋储物箱内.", cocaine);
						SendClientMessage(playerid, COLOR_LIGHTGREEN, msgPlayer);
						HouseInfo[GetPlayerVirtualWorld(playerid)][hCocaine] = HouseInfo[GetPlayerVirtualWorld(playerid)][hCocaine] + cocaine;
						//mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `cocaine` = %i WHERE `id` = %i", HouseInfo[GetPlayerVirtualWorld(playerid)][hCocaine], GetPlayerVirtualWorld(playerid));
                        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `cocaine` = %i WHERE `owner` = '%e'", HouseInfo[GetPlayerVirtualWorld(playerid)][hCocaine], PlayerInfo[playerid][pName]);
						mysql_function_query(sqlHandle, query, false, "", "");
					}
				}
				else
				{
	   				SendClientMessage(playerid, COLOR_GREY, "你没有该数量的可卡因或你输入了错误的数据..");
				}
		    }
		}
		case DIALOG_HOUSE_DEPOSIT_ECSTASY:
		{
		    if(response)
			{
				new ecstasy = strval(inputtext);
				if(IsNumeric(inputtext) && !isnull(inputtext) && ecstasy > 0)
				{
					if(PlayerInfo[playerid][pEcstasy] < ecstasy)
					{
					    SendClientMessage(playerid, COLOR_GREY, "你没有该数量的天使粉.");
					}
					else
					{
					    new msg[128],
							msgPlayer[128],
							query[128];

         				PlayerInfo[playerid][pEcstasy] -= ecstasy;
						format(msg, sizeof(msg), "** %s 将一些东西存放在房子里.", GetNameWithSpace(playerid, 1));
						ProxDetector(12, playerid, msg, COLOR_PINK);
						format(msgPlayer, sizeof(msgPlayer), "你将 %i 袋天使粉存进了房屋储物箱内.", ecstasy);
						SendClientMessage(playerid, COLOR_LIGHTGREEN, msgPlayer);
						HouseInfo[GetPlayerVirtualWorld(playerid)][hEcstasy] = HouseInfo[GetPlayerVirtualWorld(playerid)][hEcstasy] + ecstasy;
						//mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `ecstasy` = %i WHERE `id` = %i", HouseInfo[GetPlayerVirtualWorld(playerid)][hEcstasy], GetPlayerVirtualWorld(playerid));
                        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `ecstasy` = %i WHERE `owner` = '%e'", HouseInfo[GetPlayerVirtualWorld(playerid)][hEcstasy], PlayerInfo[playerid][pName]);
						mysql_function_query(sqlHandle, query, false, "", "");
					}
				}
				else
				{
	   				SendClientMessage(playerid, COLOR_GREY, "你没有该数量的天使粉或你输入了错误的数据..");
				}
		    }
		}
		case DIALOG_HOUSE_DEPOSIT_CRACK:
		{
		    if(response)
			{
				new crack = strval(inputtext);
				if(IsNumeric(inputtext) && !isnull(inputtext) && crack > 0)
				{
					if(PlayerInfo[playerid][pCrack] < crack)
					{
					    SendClientMessage(playerid, COLOR_GREY, "你没有该数量的快克.");
					}
					else
					{
					    new msg[128],
							msgPlayer[128],
							query[128];

         				PlayerInfo[playerid][pCrack] -= crack;
						format(msg, sizeof(msg), "** %s 将一些东西存放在房子里.", GetNameWithSpace(playerid, 1));
						ProxDetector(12, playerid, msg, COLOR_PINK);
						format(msgPlayer, sizeof(msgPlayer), "你将 %i 克快克存进了房屋储物箱内.", crack);
						SendClientMessage(playerid, COLOR_LIGHTGREEN, msgPlayer);
						HouseInfo[GetPlayerVirtualWorld(playerid)][hCrack] = HouseInfo[GetPlayerVirtualWorld(playerid)][hCrack] + crack;
						//mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `crack` = %i WHERE `id` = %i", HouseInfo[GetPlayerVirtualWorld(playerid)][hCrack], GetPlayerVirtualWorld(playerid));
                        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `crack` = %i WHERE `owner` = '%e'", HouseInfo[GetPlayerVirtualWorld(playerid)][hCrack], PlayerInfo[playerid][pName]);
						mysql_function_query(sqlHandle, query, false, "", "");
					}
				}
				else
				{
	   				SendClientMessage(playerid, COLOR_GREY, "你没有该数量的快克或你输入了错误的数据..");
				}
		    }
		}
		case DIALOG_HOUSE_DEPOSIT_HEROIN:
		{
		    if(response)
			{
				new heroin = strval(inputtext);
				if(IsNumeric(inputtext) && !isnull(inputtext) && heroin > 0)
				{
					if(PlayerInfo[playerid][pHeroin] < heroin)
					{
					    SendClientMessage(playerid, COLOR_GREY, "你没有该数量的海洛因.");
					}
					else
					{
					    new msg[128],
							msgPlayer[128],
							query[128];

         				PlayerInfo[playerid][pHeroin] -= heroin;
						format(msg, sizeof(msg), "** %s 将一些东西存放在房子里.", GetNameWithSpace(playerid, 1));
						ProxDetector(12, playerid, msg, COLOR_PINK);
						format(msgPlayer, sizeof(msgPlayer), "你将 %i 克海洛因存进了房屋储物箱内.", heroin);
						SendClientMessage(playerid, COLOR_LIGHTGREEN, msgPlayer);
						HouseInfo[GetPlayerVirtualWorld(playerid)][hHeroin] = HouseInfo[GetPlayerVirtualWorld(playerid)][hHeroin] + heroin;
						//mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `heroin` = %i WHERE `id` = %i", HouseInfo[GetPlayerVirtualWorld(playerid)][hHeroin], GetPlayerVirtualWorld(playerid));
                        mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `heroin` = %i WHERE `owner` = '%e'", HouseInfo[GetPlayerVirtualWorld(playerid)][hHeroin], PlayerInfo[playerid][pName]);
						mysql_function_query(sqlHandle, query, false, "", "");
					}
				}
				else
				{
	   				SendClientMessage(playerid, COLOR_GREY, "你没有该数量的海洛因或你输入了错误的数据..");
				}
		    }
		}
		case DIALOG_SETBUSINESS: {//汉化
			if(response) {
				switch(listitem) {
					case 0: {
					    ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_NAME, DIALOG_STYLE_INPUT, "{FF9900}产业管理", "请输入新的产业名 (只限英文):", "提交", "取消");
					}
					case 1: {
					    ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_HOUSENUMBER, DIALOG_STYLE_INPUT, "{FF9900}产业管理", "请输入新的门面号码:", "提交", "取消");
					}
					case 2: {
					    ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_STREET, DIALOG_STYLE_INPUT, "{FF9900}产业管理", "请输入新的街道名称:", "提交", "取消");
					}
					case 3: {
         				ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_ZIP, DIALOG_STYLE_LIST, "{FF9900}产业管理", "Fort Carson / LV - 90206\nFlint County / Angel Pine - 90207\nEntire Red County - 90208\nMullholland - 90209\nRichman - 90210\nRodeo - 90211\nMarket / Vinewood - 90212\nSanta Maria / Verona Beach - 90213\nDowntown / Little Tokyo - 90214\nCommerce - 90215\nEast Los Angeles - 90216\nSeville - 90217\nSouth Los Angeles - 90218", "提交", "取消");
					}
					case 4: {
					    ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_TAXES, DIALOG_STYLE_INPUT, "{FF9900}产业管理", "请输入产业税收:", "提交", "取消");
					}
					case 5: {
					    format(gVar3000, sizeof(gVar3000), "%s", EOS);
					    for(new i = 0; i < sizeof(businessData); i++) {
					        if(isnull(gVar3000)) {
					            format(gVar3000, sizeof(gVar3000), "%s", businessData[i][intName]);
					        } else {
					            format(gVar3000, sizeof(gVar3000), "%s\n%s", gVar3000, businessData[i][intName]);
					        }
					    }

					    ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_INTERIOR, DIALOG_STYLE_LIST, "{FF9900}产业管理", gVar3000, "选择", "取消");
					    format(gVar3000, sizeof(gVar3000), "%s", EOS);
					}
					case 6: {
                        ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_PRICE, DIALOG_STYLE_INPUT, "{FF9900}产业管理", "请输入产业价格:", "提交", "取消");
					}
					case 7: {
					    if(strfind(BusinessInfo[GetPVarInt(playerid, "BusinessManager")][bOwner], "_") != -1) {
					        SendClientMessage(playerid, COLOR_GREY, "该产业已经被其他人购买.");
					    } else {
					    	ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_OWNER, DIALOG_STYLE_INPUT, "{FF9900}产业管理", "请输入新的产业户主:", "提交", "取消");
						}
					}
					case 8: {
					    new businessID = GetPVarInt(playerid, "BusinessManager");
					    if(strfind(BusinessInfo[businessID][bOwner], "_") == -1) {
					        SendClientMessage(playerid, COLOR_GREY, "该产业还没有被其他人购买.");
					    } else {
					        new id = GetPlayerID(BusinessInfo[businessID][bOwner]),
					            admMsg[128];

						    mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_businesses` SET `owner` = NULL WHERE `id` = %i", BusinessInfo[businessID][bID]);
			    		    mysql_function_query(sqlHandle, admMsg, false, "", "");
			    		    format(admMsg, sizeof(admMsg), "*** %s %s has removed %s from his position as owner of business [%i].", GetAdminRank(playerid), GetNameWithSpace(playerid), GetNameWithSpaceEx(BusinessInfo[businessID][bOwner]), BusinessInfo[businessID][bID]);
                            format(BusinessInfo[businessID][bOwner], MAX_PLAYER_NAME, "%s", EOS);
			    		    if(id != -1) {
								SetMapIcons(id);
							}

							AdminMessageLog(admMsg, playerid, "SETBUSINESS - Remove Owner");
						}
					}
					case 9: {
						new businessID = GetPVarInt(playerid, "BusinessManager"),
							query[120];
							
						if(BusinessInfo[businessID][bFaction] == 0) {
						    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_businesses` SET `factionbusiness` = 1 WHERE `id` = %i", BusinessInfo[businessID][bID]);
							mysql_function_query(sqlHandle, query, false, "", "");
							BusinessInfo[businessID][bFaction] = 1;
							format(query, sizeof(query), "*** %s %s turned the faction-business status of business [%i] on.", GetAdminRank(playerid), GetNameWithSpace(playerid), BusinessInfo[businessID][bID]);
							SendMessageToAdmins(query);
						} else {
							mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_businesses` SET `factionbusiness` = 0 WHERE `id` = %i", BusinessInfo[businessID][bID]);
							mysql_function_query(sqlHandle, query, false, "", "");
							BusinessInfo[businessID][bFaction] = 0;
							format(query, sizeof(query), "*** %s %s turned the faction-business status of business [%i] off.", GetAdminRank(playerid), GetNameWithSpace(playerid), BusinessInfo[businessID][bID]);
							SendMessageToAdmins(query);
						}
					}
				}
			}
		}
		case DIALOG_SETBUSINESS_OWNER: {
			if(response) {
				if(strlen(inputtext) != 0 || strlen(inputtext) > MAX_PLAYER_NAME) {
				    new query[75];
				    mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_users` WHERE `user` = '%e'", inputtext);
				    mysql_function_query(sqlHandle, query, true, "OnSetFactionBusinessOwner", "is", playerid, inputtext);
				} else {
					SendClientMessage(playerid, COLOR_GREY, "你需要输入一个玩家名称.");
					ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_OWNER, DIALOG_STYLE_INPUT, "{FF9900}产业管理", "请输入新的户主名称:", "提交", "取消");
				}
			}
		}
		case DIALOG_SETHOUSE_OWNER: {
			if(response) {
				if(strlen(inputtext) != 0 || strlen(inputtext) > MAX_PLAYER_NAME) {
				    new query[75];
				    mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_users` WHERE `user` = '%e'", inputtext);
				    mysql_function_query(sqlHandle, query, true, "OnSetFactionHouseOwner", "is", playerid, inputtext);
				} else {
					SendClientMessage(playerid, COLOR_GREY, "你需要输入一个玩家名称.");
					ShowPlayerDialog(playerid, DIALOG_SETHOUSE_OWNER, DIALOG_STYLE_INPUT, "{FF9900}房屋管理", "请输入新的户主名称:", "提交", "取消");
				}
			}
		}
		case DIALOG_SETBUSINESS_NAME: {
			if(response) {
				if(strlen(inputtext) > 0 && strlen(inputtext) <= 20) {
                    new businessID = GetPVarInt(playerid, "BusinessManager"),
						admMsg[125];

                    mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_businesses` SET `name` = '%e' WHERE `id` = %i", inputtext, BusinessInfo[businessID][bID]);
			    	mysql_function_query(sqlHandle, admMsg, false, "", "");
					format(BusinessInfo[businessID][bName], 20, "%s", inputtext);
					format(admMsg, sizeof(admMsg), "*** %s %s has changed the name of business [%i] to '%s'.", GetAdminRank(playerid), GetNameWithSpace(playerid), BusinessInfo[businessID][bID], inputtext);
					AdminMessageLog(admMsg, playerid, "SETBUSINESS - Change Name");
				} else {
					SendClientMessage(playerid, COLOR_GREY, "字节不能大于20.");
					ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_NAME, DIALOG_STYLE_INPUT, "{FF9900}产业管理", "请输入新的产业名称:", "提交", "取消");
				}
			}
		}
		case DIALOG_SETBUSINESS_HOUSENUMBER: {
			if(response) {
				if(IsNumeric(inputtext) && strval(inputtext) > 0) {
                    new businessID = GetPVarInt(playerid, "BusinessManager"),
						admMsg[110];

                    BusinessInfo[businessID][bHousenumber] = strval(inputtext);
                    mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_businesses` SET `housenumber` = %i WHERE `id` = %i", BusinessInfo[businessID][bHousenumber], BusinessInfo[businessID][bID]);
			    	mysql_function_query(sqlHandle, admMsg, false, "", "");
					format(admMsg, sizeof(admMsg), "*** %s %s has changed the house number of business [%i] to '%s'.", GetAdminRank(playerid), GetNameWithSpace(playerid), BusinessInfo[businessID][bID], inputtext);
					AdminMessageLog(admMsg, playerid, "SETBUSINESS - Change House Number");
				} else {
					SendClientMessage(playerid, COLOR_GREY, "字节不能大于20.");
					ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_HOUSENUMBER, DIALOG_STYLE_INPUT, "{FF9900}产业管理", "请输入产业门面号:", "提交", "取消");
				}
			}
		}
		case DIALOG_SETBUSINESS_STREET: {
			if(response) {
				if(strlen(inputtext) > 0 && strlen(inputtext) <= 40) {
                    new businessID = GetPVarInt(playerid, "BusinessManager"),
						admMsg[128];

                    mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_businesses` SET `street` = '%e' WHERE `id` = %i", inputtext, BusinessInfo[businessID][bID]);
			    	mysql_function_query(sqlHandle, admMsg, false, "", "");
					format(BusinessInfo[businessID][bStreet], 40, "%s", inputtext);
					format(admMsg, sizeof(admMsg), "*** %s %s has changed the name of the street of business [%i] to '%s'.", GetAdminRank(playerid), GetNameWithSpace(playerid), BusinessInfo[businessID][bID], inputtext);
					AdminMessageLog(admMsg, playerid, "SETBUSINESS - Change Street Name");
				} else {
					SendClientMessage(playerid, COLOR_GREY, "字节不能大于20.");
					ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_STREET, DIALOG_STYLE_INPUT, "{FF9900}产业管理", "请输入产业街道名称:", "提交", "取消");
				}
			}
		}
		case DIALOG_SETBUSINESS_ZIP: {
			if(response) {
				new businessID = GetPVarInt(playerid, "BusinessManager"),
					zip;

                switch(listitem) {
		            case 0: zip = 90206;
		            case 1: zip = 90207;
		            case 2: zip = 90208;
		            case 3: zip = 90209;
		            case 4: zip = 90210;
		            case 5: zip = 90211;
		            case 6: zip = 90212;
		            case 7: zip = 90213;
		            case 8: zip = 90214;
		            case 9: zip = 90215;
		            case 10: zip = 90216;
		            case 11: zip = 90217;
		            case 12: zip = 90218;
		        }

		        if(zip == BusinessInfo[businessID][bBusinesszip]) {
		            SendClientMessage(playerid, COLOR_GREY, "请选择其他邮政编码.");
		        } else {
		            new admMsg[128];
		            mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_businesses` SET `zip` = %i WHERE `id` = %i", zip, BusinessInfo[businessID][bID]);
			    	mysql_function_query(sqlHandle, admMsg, false, "", "");
		            BusinessInfo[businessID][bBusinesszip] = zip;
					format(admMsg, sizeof(admMsg), "*** %s %s has changed the zipcode of business [%i] to '%i (%s)'.", GetAdminRank(playerid), GetNameWithSpace(playerid), BusinessInfo[businessID][bID], zip, GetAreaName(zip));
					AdminMessageLog(admMsg, playerid, "SETBUSINESS - Change Zipcode");
		        }
			}
		}
		case DIALOG_SETBUSINESS_TAXES: {
			if(response) {
				if(IsNumeric(inputtext) && strval(inputtext) > 0) {
                    new businessID = GetPVarInt(playerid, "BusinessManager"),
						admMsg[110];

                    BusinessInfo[businessID][bTaxes] = strval(inputtext);
                    mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_businesses` SET `taxes` = %i WHERE `id` = %i", BusinessInfo[businessID][bTaxes], BusinessInfo[businessID][bID]);
			    	mysql_function_query(sqlHandle, admMsg, false, "", "");
					format(admMsg, sizeof(admMsg), "*** %s %s has changed the tax of business [%i] to '$%s'.", GetAdminRank(playerid), GetNameWithSpace(playerid), BusinessInfo[businessID][bID], inputtext);
					AdminMessageLog(admMsg, playerid, "SETBUSINESS - Change Tax");
				} else {
					SendClientMessage(playerid, COLOR_GREY, "字节不能大于20.");
					ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_TAXES, DIALOG_STYLE_INPUT, "{FF9900}产业管理", "请输入新的产业税收:", "提交", "取消");
				}
			}
		}
		case DIALOG_SETBUSINESS_INTERIOR: {
			if(response) {
				new businessID = GetPVarInt(playerid, "BusinessManager");
				if(listitem == BusinessInfo[businessID][bInt]) {
				    SendClientMessage(playerid, COLOR_GREY, "请选择其他内饰.");
				} else {
				    new admMsg[128];
				    mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_businesses` SET `interior` = %i WHERE `id` = %i", listitem, BusinessInfo[businessID][bID]);
			    	mysql_function_query(sqlHandle, admMsg, false, "", "");
		            BusinessInfo[businessID][bInt] = listitem;
					format(admMsg, sizeof(admMsg), "*** %s %s has changed the interior of business [%i] to '%i' (%s)'.", GetAdminRank(playerid), GetNameWithSpace(playerid), BusinessInfo[businessID][bID], listitem, businessData[listitem][intName]);
					AdminMessageLog(admMsg, playerid, "SETBUSINESS - Change Interior");
				}
			}
		}
		case DIALOG_SETBUSINESS_PRICE: {
			if(response) {
				if(IsNumeric(inputtext) && strval(inputtext) > 0) {
                    new businessID = GetPVarInt(playerid, "BusinessManager"),
						admMsg[110];

                    BusinessInfo[businessID][bPrice] = strval(inputtext);
                    mysql_format(sqlHandle, admMsg, sizeof(admMsg), "UPDATE `samp_businesses` SET `price` = %i WHERE `id` = %i", BusinessInfo[businessID][bPrice], BusinessInfo[businessID][bID]);
			    	mysql_function_query(sqlHandle, admMsg, false, "", "");
					format(admMsg, sizeof(admMsg), "*** %s %s has changed the price of business [%i] to '$%s'.", GetAdminRank(playerid), GetNameWithSpace(playerid), BusinessInfo[businessID][bID], inputtext);
					AdminMessageLog(admMsg, playerid, "SETBUSINESS - Change Price");
				} else {
					SendClientMessage(playerid, COLOR_GREY, "字节不能大于 20.");
					ShowPlayerDialog(playerid, DIALOG_SETBUSINESS_PRICE, DIALOG_STYLE_INPUT, "{FF9900}产业管理", "请输入产业价格:", "提交", "取消");
				}
			}
		}
		case DIALOG_BUSINESS: {
		    if(response) {
		        switch(listitem) {
		            case 0: {
		                ShowPlayerDialog(playerid, DIALOG_BUSINESS_MONEY, DIALOG_STYLE_INPUT, "{FF9900}产业", "请输入你想存入产业的现金数量:", "确定", "取消");
		            }
		            case 1: {
						ShowPlayerDialog(playerid, DIALOG_BUSINESS_WMONEY, DIALOG_STYLE_INPUT, "{FF9900}产业", "请输入你想从产业取出的现金数量:", "确定", "取消");
		            }
		            case 2: {
						ShowPlayerDialog(playerid, DIALOG_BUSINESS_RADIO, DIALOG_STYLE_LIST, "{FF9900}产业", "开关电台\n切换频道\n使用URL", "确定", "取消");
		            }
		            case 3: {
		                ShowPlayerDialog(playerid, DIALOG_BUSINESS_FEE, DIALOG_STYLE_INPUT, "{FF9900}产业", "请输入新的入场费:", "确定", "取消");
					}
		            case 4: {
		                ShowPlayerDialog(playerid, DIALOG_BUSINESS_NAME, DIALOG_STYLE_INPUT, "{FF9900}产业", "请输入新的产业名称:", "确定", "取消");
		            }
		            case 5: {
		                new businessID = GetPlayerVirtualWorld(playerid),
							dialogMsg[100];

				        format(dialogMsg, sizeof(dialogMsg), "[存款]:\t\t\t\t$%i", BusinessInfo[businessID][bMoney]);
				        ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, "{FF9900}产业", dialogMsg, "关闭", "");
		            }
		        }
			}
		}
		case DIALOG_BUSINESS_RADIO : {
		    if(response) {
				switch(listitem) {
				    case 0: {
				        if(isnull(BusinessInfo[GetPlayerVirtualWorld(playerid)][bRadio])) {
							new list[520];
							for(new i = 0; i != sizeof(radiochannels); i++) {
								if(isnull(list)) {
									format(list, sizeof(list), "%s\n", radiochannels[i][rName]);
								} else {
			                        format(list, sizeof(list), "%s%s\n", list, radiochannels[i][rName]);
								}
							}

							ShowPlayerDialog(playerid, DIALOG_BUSINESS_SELECTRADIO, DIALOG_STYLE_LIST, "{FF9900}产业", list, "播放", "取消");
						} else {
		    				new businessID = GetPlayerVirtualWorld(playerid),
								msg[70];

							format(BusinessInfo[businessID][bRadio], 200, "%s", EOS);
							format(msg, sizeof(msg), "** > %s 将产业电台关闭.", GetNameWithSpace(playerid, 1));
							SendClientMessage(playerid, COLOR_PINK, msg);
							strdel(msg, 3, 4);
							SetPlayerChatBubble(playerid, msg, COLOR_GREEN, 12.0, 10000);
							foreach(new i : Player) {
							    if(GetPlayerVirtualWorld(i) == businessID && GetPVarInt(i, "InBusiness") == 1) {
									StopAudioStreamForPlayer(i);
								}
							}
						}
	     			}
				    case 1: {
				        if(isnull(BusinessInfo[GetPlayerVirtualWorld(playerid)][bRadio])) {
	    					SendClientMessage(playerid, COLOR_GREY, "你无法切换频道. (电台当前是关闭着的)");
							ShowPlayerDialog(playerid, DIALOG_BUSINESS_RADIO, DIALOG_STYLE_LIST, "{FF9900}产业", "开关电台\n切换频道\n使用URL", "确定", "取消");
						} else {
    						new list[520];
				  			for(new i = 0; i != sizeof(radiochannels); i++) {
								if(isnull(list)) {
									format(list, sizeof(list), "%s\n", radiochannels[i][rName]);
								} else {
			                        format(list, sizeof(list), "%s%s\n", list, radiochannels[i][rName]);
								}
							}

							ShowPlayerDialog(playerid, DIALOG_BUSINESS_SELECTRADIO, DIALOG_STYLE_LIST, "{FF9900}产业", list, "播放", "取消");
						}
	     			}
				    case 2: {
				        ShowPlayerDialog(playerid, DIALOG_BUSINESS_RADIOLINK, DIALOG_STYLE_INPUT, "{FF9900}产业", "请输入歌曲外部链接:", "提交", "取消");
				    }
				}
			}
		}
		case DIALOG_BUSINESS_RADIOLINK: {
		    if(response) {
		        if(strlen(inputtext) > 0) {
		            new msg[70],
						businessID = GetPlayerVirtualWorld(playerid);

					format(msg, sizeof(msg), "** > %s 将产业电台打开.", GetNameWithSpace(playerid, 1));
					SendClientMessage(playerid, COLOR_PINK, msg);
					strdel(msg, 3, 4);
					SetPlayerChatBubble(playerid, msg, COLOR_GREEN, 12.0, 10000);
					format(BusinessInfo[businessID][bRadio], 200, "%s", inputtext);
		            foreach(new i : Player) {
						if(GetPlayerVirtualWorld(i) == businessID && GetPVarInt(i, "InBusiness") == 1) {
		            		PlayAudioStreamForPlayer(i, inputtext);
		            		PlayerInfo[playerid][pBoombox] = -1;
						}
					}
		        } else {
		            SendClientMessage(playerid, COLOR_GREY, "你需要输入一个URL.");
		            ShowPlayerDialog(playerid, DIALOG_BUSINESS_RADIOLINK, DIALOG_STYLE_INPUT, "{FF9900}产业", "请输入歌曲外部链接:", "提交", "取消");
		        }
		    }
		}
		case DIALOG_BUSINESS_SELECTRADIO: {
		    if(response) {
		        new msg[115],
					businessID = GetPlayerVirtualWorld(playerid);

				format(msg, sizeof(msg), "** > %s 将产业电台设置为 [%s].", GetNameWithSpace(playerid, 1), radiochannels[listitem][rName]);
				SendClientMessage(playerid, COLOR_PINK, msg);
				strdel(msg, 3, 4);
				SetPlayerChatBubble(playerid, msg, COLOR_GREEN, 12.0, 10000);
				format(BusinessInfo[businessID][bRadio], 200, radiochannels[listitem][rLink]);
				foreach(new i : Player) {
	   				if(GetPlayerVirtualWorld(i) == businessID && GetPVarInt(i, "InBusiness") == 1) {
						PlayAudioStreamForPlayer(i, radiochannels[listitem][rLink]);
						PlayerInfo[playerid][pBoombox] = -1;
		    		}
				}
		    }
		}
		case DIALOG_BUSINESS_FEE: {
		    if(response) {
		        if(IsNumeric(inputtext) && strval(inputtext) < GM_MAX_ENTRANCE_FEE) {
					new entranceFee = strval(inputtext),
						query[70],
						businessID = GetPlayerVirtualWorld(playerid);

					BusinessInfo[businessID][bFee] = entranceFee;
					mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_businesses` SET `fee` = %i WHERE `id` = %i", entranceFee, BusinessInfo[businessID][bID]);
					mysql_function_query(sqlHandle, query, false, "", "");
					format(query, sizeof(query), "你将产业入场费设置为 $%i.", entranceFee);
					SendClientMessage(playerid, COLOR_WHITE, query);
				} else {
				    new msg[70];
				    format(msg, sizeof(msg), "入场费需要在 $0 到 $%i 之间.", GM_MAX_ENTRANCE_FEE);
				    SendClientMessage(playerid, COLOR_GREY, msg);
				    ShowPlayerDialog(playerid, DIALOG_BUSINESS_FEE, DIALOG_STYLE_INPUT, "{FF9900}产业", "请输入新的产业入场费:", "确定", "取消");
				}
		    }
		}
		case DIALOG_BUSINESS_NAME: {
		    if(response) {
		        if(!isnull(inputtext) && strlen(inputtext) <= 20 && strfind(inputtext, "~") == -1) {
          			new businessID = GetPlayerVirtualWorld(playerid),
						query[85];

                    format(BusinessInfo[businessID][bName], 20, "%s", inputtext);
                    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_businesses` SET `name` = '%e' WHERE `id` = %i", inputtext, BusinessInfo[businessID][bID]);
		            mysql_function_query(sqlHandle, query, false, "", "");
		            format(query, sizeof(query), "你将产业名设置为 '%s'.", inputtext);
		            SendClientMessage(playerid, COLOR_WHITE, query);
		        } else {
		            SendClientMessage(playerid, COLOR_GREY, "你的产业名需要小于20字节并且不能使用中文或者Textdraw代码. (违反规则者可能将会收到产业召回处罚)");
		            ShowPlayerDialog(playerid, DIALOG_BUSINESS_NAME, DIALOG_STYLE_INPUT, "{FF9900}产业", "请输入你的产业名称 (只能为英文):", "确定", "取消");
		        }
		    }
		}
		case DIALOG_BANK:
		{
			if(response)
			{
			    switch(listitem)
				{
				    case 0:
					{
				        ShowPlayerDialog(playerid, DIALOG_BANK_WITHDRAW, DIALOG_STYLE_INPUT, "{FF9900}银行", "请输入你要取出的数量:", "提交", "取消");
				    }
				    case 1:
					{
				        ShowPlayerDialog(playerid, DIALOG_BANK_DEPOSIT, DIALOG_STYLE_INPUT, "{FF9900}银行", "请输入你要存入的数量:", "提交", "取消");
				    }
				    case 2:
					{
						if(PlayerInfo[playerid][pSavings] == 0)
						{
						    ShowPlayerDialog(playerid, DIALOG_BANK_SAVINGS_DEPOSIT, DIALOG_STYLE_INPUT, "{FF9900}银行", "请输入你将从银行存款内转移到\n个人储蓄里的金额 ($10,000 - $50,000):", "提交", "取消");
						}
						else
						{
                            ShowPlayerDialog(playerid, DIALOG_BANK_SAVINGS_WITHDRAW, DIALOG_STYLE_MSGBOX, "{FF9900}银行", "你真的想将你当前储蓄转移到你个人银行账户上吗?\n警告: 当你取出储蓄后, 储蓄将不会增长并且原来上涨的利息将降回原百分点.", "确定", "取消");
						}
					}
					case 3:
					{
                        if(PlayerInfo[playerid][pScore] >= 50 && PlayerInfo[playerid][pScore] <= 100)
						{
						    if(PlayerInfo[playerid][pLoaned] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "你之前已经借过一次贷了.");
                            ShowPlayerDialog(playerid, DIALOG_LOAN, DIALOG_STYLE_LIST, "{FF9900}银行", "贷款 $2,500\n贷款 $5,000\n贷款 $7,500\n贷款 $10,000", "选择", "取消");
					    }
					    else
					    {
                 			SendClientMessage(playerid, COLOR_LIGHTRED, "你的时间分必须大于50并且小于100才能进行贷款.");
					    }
					}
					case 4:
					{
         				new msg[128];
						if(PlayerInfo[playerid][pLoanCash] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你目前没有贷款.");
					    if(PlayerInfo[playerid][pMoney] >= PlayerInfo[playerid][pLoanCash])
					    {
					        format(msg, sizeof(msg), "你将贷款金额 $%i 退还给银行.", PlayerInfo[playerid][pLoanCash]);
				        	SendClientMessage(playerid, COLOR_LIGHTRED, msg);
					        GivePlayerMoneyEx(playerid, -PlayerInfo[playerid][pLoanCash]);
					        PlayerInfo[playerid][pLoanCash] = 0;
					        PlayerInfo[playerid][pLoaned] = 0;
					    }
					    else
					    {
					        format(msg, sizeof(msg), "你需要 $%i 才能支付贷款.", PlayerInfo[playerid][pLoanCash]);
				        	SendClientMessage(playerid, COLOR_LIGHTRED, msg);
					    }
					}
				}
			}
		}
		case DIALOG_LOAN:
		{
		    if(response)
			{
			    switch(listitem)
				{
				    case 0:
					{
					    if(PlayerInfo[playerid][pAge] >= 21)
					    {
					        PlayerInfo[playerid][pBank] += 2500;
					        PlayerInfo[playerid][pLoanCash] = 2500;
					        PlayerInfo[playerid][pLoaned] = 1;
					        SendClientMessage(playerid, COLOR_LIGHTRED, "你已收到 $2,500. 你将在以后的每个发薪日支付 $250 作为利息.");
					    }
					    else
					    {
                            SendClientMessage(playerid, COLOR_LIGHTRED, "你需要到 21 岁或者更大才能借贷.");
					    }
					}
					case 1:
					{
					    if(PlayerInfo[playerid][pAge] >= 21)
					    {
                            PlayerInfo[playerid][pBank] += 5000;
                            PlayerInfo[playerid][pLoanCash] = 5000;
                            PlayerInfo[playerid][pLoaned] = 1;
                            SendClientMessage(playerid, COLOR_LIGHTRED, "你已收到 $5,000. 你将在以后的每个发薪日支付 $250 作为利息.");
					    }
					    else
					    {
                            SendClientMessage(playerid, COLOR_LIGHTRED, "你需要到 21 岁或者更大才能借贷.");
					    }
					}
					case 2:
					{
					    if(PlayerInfo[playerid][pAge] >= 21)
					    {
                            PlayerInfo[playerid][pBank] += 7500;
                            PlayerInfo[playerid][pLoanCash] = 7500;
                            PlayerInfo[playerid][pLoaned] = 1;
                            SendClientMessage(playerid, COLOR_LIGHTRED, "你已收到 $7,500. 你将在以后的每个发薪日支付 $250 作为利息.");
					    }
					    else
					    {
                            SendClientMessage(playerid, COLOR_LIGHTRED, "你需要到 21 岁或者更大才能借贷.");
					    }
					}
					case 3:
					{
					    if(PlayerInfo[playerid][pAge] >= 21)
					    {
                            PlayerInfo[playerid][pBank] += 10000;
                            PlayerInfo[playerid][pLoanCash] = 10000;
                            PlayerInfo[playerid][pLoaned] = 1;
                            SendClientMessage(playerid, COLOR_LIGHTRED, "你已收到 $10,000. 你将在以后的每个发薪日支付 $250 作为利息.");
					    }
					    else
					    {
                            SendClientMessage(playerid, COLOR_LIGHTRED, "你需要到 21 岁或者更大才能借贷.");
					    }
					}
		        }
			}
		}
		case DIALOG_BANK_WITHDRAW: {
		    if(response) {
		        new money = strval(inputtext);
				if(IsNumeric(inputtext) && !isnull(inputtext) && money > 0) {
				    if(money <= PlayerInfo[playerid][pBank]) {
						new msg[100];
				        PlayerInfo[playerid][pBank] -= money;
				        GivePlayerMoneyEx(playerid, money);
				        format(msg, sizeof(msg), "** %s 将手伸进柜台并且取出了一些钱.", GetNameWithSpace(playerid, 1));
				        ProxDetector(12, playerid, msg, COLOR_PINK);
				        format(msg, sizeof(msg), "你从银行账户里取出了 $%i, 还剩: $%i.", money, PlayerInfo[playerid][pBank]);
				        SendClientMessage(playerid, COLOR_YELLOW, msg);
				    } else {
				        SendClientMessage(playerid, COLOR_GREY, "你银行账户里没有那么多钱.");
				        ShowPlayerDialog(playerid, DIALOG_BANK_WITHDRAW, DIALOG_STYLE_INPUT, "{FF9900}银行", "请输入你要取出的数量:", "提交", "取消");
				    }
				} else {
				    ShowPlayerDialog(playerid, DIALOG_BANK_WITHDRAW, DIALOG_STYLE_INPUT, "{FF9900}银行", "请输入你要取出的数量:", "提交", "取消");
				}
		    }
		}
		case DIALOG_BANK_DEPOSIT: {
		    if(response) {
		        new money = strval(inputtext);
				if(IsNumeric(inputtext) && !isnull(inputtext) && money > 0) {
				    if(money <= PlayerInfo[playerid][pMoney]) {
						new msg[110];
				        PlayerInfo[playerid][pBank] += money;
				        GivePlayerMoneyEx(playerid, -money);
				        format(msg, sizeof(msg), "** %s 从钱包里拿出现金并且伸手进入柜台将钱存进银行账户.", GetNameWithSpace(playerid, 1));
				        ProxDetector(12, playerid, msg, COLOR_PINK);
				        format(msg, sizeof(msg), "你存入 $%i 进你的银行账户, 余额: $%i.", money, PlayerInfo[playerid][pBank]);
				        SendClientMessage(playerid, COLOR_YELLOW, msg);
				    } else {
				        SendClientMessage(playerid, COLOR_GREY, "你银行账户里没有那么多钱.");
				        ShowPlayerDialog(playerid, DIALOG_BANK_DEPOSIT, DIALOG_STYLE_INPUT, "{FF9900}银行", "请输入你要存入的数量:", "提交", "取消");
				    }
				} else {
				    ShowPlayerDialog(playerid, DIALOG_BANK_DEPOSIT, DIALOG_STYLE_INPUT, "{FF9900}银行", "请输入你要存入的数量:", "提交", "取消");
				}
		    }
		}
		case DIALOG_BANK_SAVINGS_WITHDRAW: {
			if(response) {
			    new msg[100];
				PlayerInfo[playerid][pBank] += PlayerInfo[playerid][pSavings];
				PlayerInfo[playerid][pSavings] = 0;
				format(msg, sizeof(msg), "你的个人储蓄金被转移到你的账户上, 余额: $%i.", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_WHITE, msg);
			}
		}
		case DIALOG_BANK_SAVINGS_DEPOSIT: {
		    if(response) {
		        new money = strval(inputtext);
				if(IsNumeric(inputtext) && money >= 10000 && money <= 50000) {
					if(PlayerInfo[playerid][pBank] >= money) {
					    new msg[100];
					    PlayerInfo[playerid][pBank] -= money;
					    PlayerInfo[playerid][pSavings] = money;
					    format(msg, sizeof(msg), "你成功存入 $%i 进你的个人储蓄内, 余额: $%i.", money, PlayerInfo[playerid][pBank]);
					    SendClientMessage(playerid, COLOR_WHITE, msg);
					} else {
                        ShowPlayerDialog(playerid, DIALOG_BANK_SAVINGS_DEPOSIT, DIALOG_STYLE_INPUT, "{FF9900}银行", "请输入你将从银行存款内转移到\n个人储蓄里的金额 ($50,000 - $100,000):", "提交", "取消");
                    	SendClientMessage(playerid, COLOR_GREY, "你没有那么多钱.");
					}
				} else {
                    ShowPlayerDialog(playerid, DIALOG_BANK_SAVINGS_DEPOSIT, DIALOG_STYLE_INPUT, "{FF9900}银行", "请输入你将从银行存款内转移到\n个人储蓄里的金额 ($50,000 - $100,000):", "提交", "取消");
                    SendClientMessage(playerid, COLOR_GREY, "储蓄金需要在 $10,000 到 $50,000 之间.");
				}
			}
		}
		case DIALOG_BARRIER: {
			if(response) {
				if(PlayerInfo[playerid][pMoney] >= 15) {
				    new barrier = GetPVarInt(playerid, "Barrier");
				    switch(barrier) {
						case 0, 1: {
							MoveDynamicObject(Barrier[0], -78.79980469, -906.19921875, 16.90000038, 0.05, 0.00000000, 0, 152.97363281);
						}
					 	case 2: {
							MoveDynamicObject(Barrier[2], 1695.59997559, 417.39999390, 30.40000038, 0.05, 359.98901367, 0, 160.49670410);
						}
						case 3: {
	                        MoveDynamicObject(Barrier[3], 1709.00000000, 421.20001221, 30.50000076, 0.05, 0.00000000, 0, 341.99340820);
						}
						case 4: {
	                        MoveDynamicObject(Barrier[4], 600.20001221, 346.29998779, 18.59999924, 0.05, 0.00000000, 0, 33.99719238);
						}
						case 5: {
							MoveDynamicObject(Barrier[5], -183.89941406, 278.50000000, 11.99999981, 0.05, 0.00000000, 0, 163.98193359);
						}
						case 6: {
						    MoveDynamicObject(Barrier[6], -197.80000305, 282.39999390, 11.99999981, 0.05, 0.00000000, 0, 344.72912598);
						}
						case 7: {
						    MoveDynamicObject(Barrier[7], 607.59997559, -1201.90002441, 17.80000000, 0.05, 0.00000000, 0, 16.47131348);
						}
					 	case 8: {
		     				MoveDynamicObject(Barrier[8], 67.00000000, -1537.80004883, 4.70000010, 0.05, 0.00000000, 0, 265.72082520);
						}
						case 9: {
							MoveDynamicObject(Barrier[9], 38.39941406, -1525.69921875, 4.89999990, 0.05, 0.00000000, 0, 84.72106934);
						}
					 	case 10: {
							MoveDynamicObject(Barrier[10], 612.29998779, 354.10000610, 18.59999924, 0.05, 0.00000000, 0, 211.49218750);
						}
						case 11: {
							MoveDynamicObject(Barrier[11], -963.50000000, -284.39941406, 36.20000153, 0.05, 0.00000000, 0, 348.22265625);
						}
					 	case 12: {
							MoveDynamicObject(Barrier[12], -949.50000000, -287.50000000 ,36.20000153, 0.05, 0.00000000, 0, 166.72302246);
						}
						case 13: {
							MoveDynamicObject(Barrier[13], 628.50000000, -1193.80004883, 17.80000000, 0.05, 0.00000000, 0, 22.71850586);
						}
					}

					BarrierStatus[barrier] = 1;
					SetTimerEx("BarrierTimer", 7500, false, "i", barrier);
				    GivePlayerMoneyEx(playerid, -15);
				} else {
				    SendClientMessage(playerid, COLOR_GREY, "你没有钱通过收费站.");
				}
			}
		}
		case DIALOG_ATM: {
		    if(response) {
		        switch(listitem) {
					case 0: {
					    ShowPlayerDialog(playerid, DIALOG_ATM_WITHDRAW, DIALOG_STYLE_INPUT, "{FF9900}ATM", "请输入你要取出的数额:", "提交", "取消");
					}
				}
		    }
		}
		case DIALOG_ATM_WITHDRAW: {
		    if(response) {
			    if(IsNumeric(inputtext) && !isnull(inputtext) && strval(inputtext) > 0) {
			        new money = strval(inputtext);
		 			if(PlayerInfo[playerid][pBank] >= money) {
		 			    new msg[90];
		 			    PlayerInfo[playerid][pBank] -= money;
		    			GivePlayerMoneyEx(playerid, money);
		    			format(msg, sizeof(msg), "你通过ATM从银行账户内取出 $%i, 余额: $%i.", money, PlayerInfo[playerid][pBank]);
		    			SendClientMessage(playerid, COLOR_WHITE, msg);
		    		} else {
		      			SendClientMessage(playerid, COLOR_GREY, "你没有那么多钱.");
		  				ShowPlayerDialog(playerid, DIALOG_ATM_WITHDRAW, DIALOG_STYLE_INPUT, "{FF9900}ATM", "请输入你要取出的数额:", "提交", "取消");
		      		}
		       	} else {
		        	SendClientMessage(playerid, COLOR_GREY, "请输入正确的数额.");
		 	   		ShowPlayerDialog(playerid, DIALOG_ATM_WITHDRAW, DIALOG_STYLE_INPUT, "{FF9900}ATM", "请输入你要取出的数额:", "提交", "取消");
		    	}
      		}
		}
		case DIALOG_WEAPONS_AMMO:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
                        if(PlayerInfo[playerid][pMoney] >= 750)
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功购得该物品, 花费$750.");
						    GivePlayerMoneyEx(playerid, -750);
						    SetPlayerItem(playerid, 18, 100);
		    			}
		    			else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要$750才能购买该物品");
		    			}
					}
					case 1:
					{
                        if(PlayerInfo[playerid][pMoney] >= 250)
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功购得该物品, 花费$250.");
						    GivePlayerMoneyEx(playerid, -250);
						    SetPlayerItem(playerid, 18, 30);
		    			}
		    			else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要$250才能购买该物品.");
		    			}
					}
					case 2:
					{
					    if(PlayerInfo[playerid][pMoney] >= 500)
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功购得该物品, 花费$500.");
						    GivePlayerMoneyEx(playerid, -500);
						    SetPlayerItem(playerid, 17, 21);
		    			}
		    			else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要$500才能购买该物品.");
		    			}
					}
					case 3:
					{
					    if(PlayerInfo[playerid][pMoney] >= 200)
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功购得该物品, 花费$200.");
						    GivePlayerMoneyEx(playerid, -200);
						    SetPlayerItem(playerid, 17, 7);
		    			}
		    			else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要$200才能购买该物品.");
		    			}
					}
					case 4:
					{
					    if(PlayerInfo[playerid][pMoney] >= 250)
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功购得该物品, 花费$250.");
						    GivePlayerMoneyEx(playerid, -250);
						    SetPlayerItem(playerid, 19, 20);
		    			}
		    			else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你成功购得该物品, 花费$250.");
		    			}
					}
				}
			}
		}
		case DIALOG_FACTORY_STORE:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: // Mask ($1500)\nTool Kit ($1000)\nTent ($1000)\nHammer ($250)\Screwdriver ($250)
					{
					    if(PlayerInfo[playerid][pMoney] >= 750)
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 $750 购得一个面具.");
                            GivePlayerMoneyEx(playerid, -750);
                            PlayerInfo[playerid][pMask] = 1;
		    			}
		    			else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$750' 才能购买该物品.");
		    			}
					}
					case 1:
					{
					    if(PlayerInfo[playerid][pMoney] >= 1000)
						{
							GivePlayerMoneyEx(playerid, -1000);
                            PlayerInfo[playerid][pToolKit] += 3;
                            SendClientMessage(playerid, COLOR_LIGHTRED, "你购买了3个工具箱, 花费: $1000.");
		    			}
		    			else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$1000' 才能购买该物品.");
		    			}
					}
					case 2:
					{
					    if(PlayerInfo[playerid][pMoney] >= 1000)
						{
							GivePlayerMoneyEx(playerid, -1000);
                            PlayerInfo[playerid][pTentID] ++;
		  			        SendClientMessage(playerid, COLOR_LIGHTRED, "你花费 $1000 购买了一顶帐篷.");
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$1000' 才能购买该物品.");
		    			}
					}
					case 3:
					{
					    if(PlayerInfo[playerid][pMoney] >= 250)
						{
							SendClientMessage(playerid, COLOR_LIGHTRED, "请等待添加, 系统已经返还了你$250.");
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$250' 才能购买该物品.");
		    			}
					}
					case 4:
					{
					    if(PlayerInfo[playerid][pMoney] >= 250)
						{
                            SendClientMessage(playerid, COLOR_LIGHTRED, "请等待添加, 系统已经返还了你250$.");
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$250' 才能购买该物品.");
		    			}
					}
				}
			}
		}//等待添加
		case DIALOG_WEAPONS_HEAVY:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    if(PlayerInfo[playerid][pMoney] >= 3250)
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$3250' 购得一把 'AK-47'.");
						    GivePlayerMoneyEx(playerid, -3250);
						    SetPlayerItem(playerid, 214, 30);
		    			}
		    			else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$3250' 才能购买.");
		    			}
					}
					case 1:
					{
					    if(PlayerInfo[playerid][pMoney] >= 2900)
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$2900' 购得一把 'AK-74su'.");
						    GivePlayerMoneyEx(playerid, -2900);
						    SetPlayerItem(playerid, 221, 30);
		    			}
		    			else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$2900' 才能购买.");
		    			}
					}
					case 2:
					{
					    if(PlayerInfo[playerid][pMoney] >= 2750)
						{
	                        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$2750' 购得一把 'Tec-9'.");
	                        GivePlayerMoneyEx(playerid, -2750);
	                        SetPlayerItem(playerid, 215, 30);
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$2600' 才能购买.");
		    			}
					}
					case 3:
					{
					    if(PlayerInfo[playerid][pMoney] >= 2750)
						{
	                        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$2750' 购得一把 'Uzi'.");
	                        GivePlayerMoneyEx(playerid, -2750);
	                        SetPlayerItem(playerid, 212, 30);
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$2750' 才能购买.");
		    			}
					}
					case 4:
					{
					    if(PlayerInfo[playerid][pMoney] >= 2650)
						{
	                        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$2650' 购得一把 'Remington 870'.");
	                        GivePlayerMoneyEx(playerid, -2650);
	                        SetPlayerItem(playerid, 209, 4);
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$2650' 才能购买.");
		    			}
					}
					case 5:
					{
					    if(PlayerInfo[playerid][pMoney] >= 2500)
						{
	                        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$2500' 购得一把 'Desert Eagle'.");
	                        GivePlayerMoneyEx(playerid, -2500);
	                        SetPlayerItem(playerid, 223, 7);
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$2650' 才能购买.");
		    			}
					}
				}
			}
		}
        case DIALOG_WEAPONS_MILITARY:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    if(PlayerInfo[playerid][pMoney] >= 4500)
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$4500' 购得了一把 'AR-15'.");
						    GivePlayerMoneyEx(playerid, -4500);
						    SetPlayerItem(playerid, 219, 30);
		    			}
		    			else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$4500' 才能购买该物品.");
		    			}
					}
					case 1:
					{
					    if(PlayerInfo[playerid][pMoney] >= 4000)
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$4000' 成功购得'UMP 45'.");
						    GivePlayerMoneyEx(playerid, -4000);
						    SetPlayerItem(playerid, 220, 30);
		    			}
		    			else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$4000' 才能购买该物品.");
		    			}
					}
					case 2:
					{
					    if(PlayerInfo[playerid][pMoney] >= 2500)
						{
	                        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$2500' 成功购得'Mac-10'.");
	                        GivePlayerMoneyEx(playerid, -2500);
	                        SetPlayerItem(playerid, 222, 30);
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$2250' 才能购买该物品.");
		    			}
					}
					case 3:
					{
					    if(PlayerInfo[playerid][pMoney] >= 2750)
						{
	                        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$2750' 成功购得'Remington 870'.");
	                        GivePlayerMoneyEx(playerid, -2750);
	                        SetPlayerItem(playerid, 209, 4);
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$2600' 才能购买该物品.");
		    			}
					}
					case 4:
					{
					    if(PlayerInfo[playerid][pMoney] >= 2500)
						{
	                        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$2500' 成功购得'Sig Pro 9mm'.");
	                        GivePlayerMoneyEx(playerid, -2500);
	                        SetPlayerItem(playerid, 218, 7);
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$2500' 才能购买该物品.");
		    			}
					}
					case 5:
					{
					    if(PlayerInfo[playerid][pMoney] >= 25000)
						{
						    if(PlayerInfo[playerid][pCarBomb] == 1) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "你只能购买一个C4.");
                            SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$25,000' 成功购得'C4'.");
	                        GivePlayerMoneyEx(playerid, -25000);
	                        PlayerInfo[playerid][pCarBomb] = 1;
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$25,000' 才能购买该物品.");
		    			}
					}
				}
			}
		}
		case DIALOG_WEAPONS_FACTION:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    if(PlayerInfo[playerid][pMoney] >= 3500)
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$3500' 成功购得'AK-M'.");
						    GivePlayerMoneyEx(playerid, -3500);
						    SetPlayerItem(playerid, 255, 30);
		    			}
		    			else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$3500' 才能购买该物品.");
		    			}
					}
					case 1:
					{
					    if(PlayerInfo[playerid][pMoney] >= 2650)
						{
						    SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$2650' 成功购得'Remington 870'.");
						    GivePlayerMoneyEx(playerid, -2650);
						    SetPlayerItem(playerid, 209, 4);
		    			}
		    			else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$3500' 才能购买该物品.");
		    			}
					}
					case 2:
					{
					    if(PlayerInfo[playerid][pMoney] >= 2600)
						{
	                        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$2600' 成功购得'KG-9'.");
	                        GivePlayerMoneyEx(playerid, -2600);
	                        SetPlayerItem(playerid, 254, 30);
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$2600' 才能购买该物品.");
		    			}
					}
					case 3:
					{
					    if(PlayerInfo[playerid][pMoney] >= 2250)
						{
	                        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$2250' 成功购得'Beretta 92FS'.");
	                        GivePlayerMoneyEx(playerid, -2250);
	                        SetPlayerItem(playerid, 253, 7);
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$2250' 才能购买该物品.");
		    			}
					}
					case 4:
					{
					    if(PlayerInfo[playerid][pMoney] >= 1750)
						{
	                        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$1750' 成功购得'9mm'.");
	                        GivePlayerMoneyEx(playerid, -1750);
	                        SetPlayerItem(playerid, 206, 7);
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$1750' 才能购买该物品.");
		    			}
					}
					case 5:
					{
					    if(PlayerInfo[playerid][pMoney] >= 25000)
						{
						    if(PlayerInfo[playerid][pCarBomb] == 1) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "你只能购买一个C4.");
                            SendClientMessage(playerid, COLOR_LIGHTGREEN, "你花费 '$25,000' 成功购得 'C4'.");
	                        GivePlayerMoneyEx(playerid, -25000);
	                        PlayerInfo[playerid][pCarBomb] = 1;
      					}
      					else
		    			{
		    			    SendClientMessage(playerid, COLOR_LIGHTRED, "你需要 '$25,000' 才能购买该物品.");
		    			}
					}
				}
			}
		}
		case DIALOG_EMPLOY_CHOOSE: {
		    if(response) {
				switch(listitem) {
					case 0: {
	                    PlayerInfo[playerid][pJob] = 1;
				        PlayerInfo[playerid][pJobTime] = 0;
				        SendClientMessage(playerid, COLOR_LIGHTGREEN, "祝贺你有了新工作. 你现在去El Corona附近的垃圾回收场开始工作(/map).");
		   			}
					case 1: {
				        PlayerInfo[playerid][pJob] = 2;
				        PlayerInfo[playerid][pJobTime] = 0;
				        SendClientMessage(playerid, COLOR_LIGHTGREEN, "祝贺你有了新工作. 你现在可以去Idlewood Pizza stack开始工作(/map).");
					}
					case 2: {
					    PlayerInfo[playerid][pJob] = 3;
				        PlayerInfo[playerid][pJobTime] = 0;
				        SendClientMessage(playerid, COLOR_LIGHTGREEN, "祝贺你有了新工作. 你现在可以去Ocean Docks并且开始工作(/map).");
					}
					case 3: {
					    PlayerInfo[playerid][pJob] = 5;
				        PlayerInfo[playerid][pJobTime] = 0;
				        SendClientMessage(playerid, COLOR_LIGHTGREEN, "祝贺你有了新工作. 你现在可以去伐木场并且开始工作(/map).");
					}
					case 4: {
					    PlayerInfo[playerid][pJob] = 6;
				        PlayerInfo[playerid][pJobTime] = 0;
				        SendClientMessage(playerid, COLOR_LIGHTGREEN, "祝贺你有了新工作. 你现在可以去木材厂并且开始工作(/map).");
					}
				}
			}
		}
		case DIALOG_SAN_ADVERTISEMENT: {
   			if(response) {
    			SendClientMessage(playerid, COLOR_FADE3, "雇员: 为了提交和发布广告, 请填写下列表格.");
		        ShowPlayerDialog(playerid, DIALOG_ADVERTISEMENT, DIALOG_STYLE_INPUT, "{FF9900}California Network", "请输入你想发布的广告内容:", "提交", "取消");
			} else {
		        SendClientMessage(playerid, COLOR_FADE3, "雇员: 感谢光临.");
		    }
		}
		case DIALOG_ADVERTISEMENT:
		{
		    if(response)
			{
		        if(strlen(inputtext) >= 5)
				{
		            if(PlayerInfo[playerid][pMoney] >= 100 || PlayerInfo[playerid][pDonateRank] > 1)
					{
			            new buffer[225],
							message[128],
			                len = strlen(inputtext);

						strcat(message, inputtext);
						if(len + 16 > 128)
						{
						    strmid(buffer, message, 0, 128 - 16 - 4);
						    format(buffer, sizeof(buffer), "[个人广告] %s ...", buffer);
						    strdel(message, 0, 128 - 16 - 4);
							format(message, sizeof(message), "[个人广告] ... %s", message);
					   		SendClientMessageToAll(COLOR_ADVERT, buffer);
					   		SendClientMessageToAll(COLOR_ADVERT, message);
						}
						else
						{
					        format(message, sizeof(message), "[个人广告] %s", message);
                            SendClientMessageToAll(COLOR_ADVERT, message);
						}

						mysql_format(sqlHandle, buffer, sizeof(buffer), "INSERT INTO `samp_adverts` (`advert`, `owner`) VALUES ('%e', '%e')", inputtext, PlayerInfo[playerid][pName]);
						mysql_function_query(sqlHandle, buffer, false, "", "");
						if(PlayerInfo[playerid][pDonateRank] < 2)
						{
			    			GivePlayerMoneyEx(playerid, -100);
   						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "你没有钱发布广告.");
					}
		        }
				else
				{
		            ShowPlayerDialog(playerid, DIALOG_ADVERTISEMENT, DIALOG_STYLE_INPUT, "{FF9900}California Network", "请输入你要发布的广告:", "提交", "取消");
		            SendClientMessage(playerid, COLOR_GREY, "你至少需要输入5个字节.");
		        }
		    }
			else
			{
		        SendClientMessage(playerid, COLOR_FADE2, "雇员: 欢迎光临.");
		    }
		}
		case DIALOG_WARRANTS://以后添加删除
		{
			if(response)
			{
			    new caption[60];
			    SetPVarInt(playerid, "SeletedWarrant", listitem);
			    format(caption, sizeof(caption), "案底 {FF9900}卷宗#%i", WarrantInfo[PlayerInfo[playerid][pSearchID]][listitem][wID]);
				format(gVar3000, sizeof(gVar3000), "%s", EOS);
				format(gVar3000, sizeof(gVar3000), "圣安地列斯州立政府\n\n发行机构: LAPD\n执行人: %s\n原因: %s\n日期: %s", WarrantInfo[PlayerInfo[playerid][pSearchID]][listitem][wIssuer], WarrantInfo[PlayerInfo[playerid][pSearchID]][listitem][wReason], WarrantInfo[PlayerInfo[playerid][pSearchID]][listitem][wDate]);
				ShowPlayerDialog(playerid, DIALOG_WARRANTS_EDIT, DIALOG_STYLE_MSGBOX, caption, gVar3000, "编辑", "删除");
				format(gVar3000, sizeof(gVar3000), "%s", EOS);
			}
			else
			{
				for(new i = 0; i != MAX_WARRANTS; i++)
				{
				    WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wID] = 0;
					format(WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wReason], 120, "%s", EOS);
					format(WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wIssuer], MAX_PLAYER_NAME, "%s", EOS);
					format(WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wAgency], 30, "%s", EOS);
					format(WarrantInfo[PlayerInfo[playerid][pSearchID]][i][wDate], 30, "%s", EOS);
				}
   			}
		}
		case DIALOG_WARRANTS_EDIT:
		{


			if(response)
			{
			    ShowPlayerDialog(playerid, DIALOG_WARRANTS_CHA, DIALOG_STYLE_INPUT, "提示", "请输入新的指控", "确定", "取消");
			}
			else
			{
			    ShowPlayerDialog(playerid, DIALOG_WARRANTS_DEL, DIALOG_STYLE_MSGBOX, "提示", "你确定要删除该案底吗?", "确定", "取消");
			}
		}
		case DIALOG_WARRANTS_CHA: {
		    if(response) {
		        if(strlen(inputtext) != 0) {
		            new query[240],
						name[MAX_PLAYER_NAME];

		            GetPVarString(playerid, "SaveSeaName", name, sizeof(name));
		            //mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_warrants` SET `reason` = '%e' WHERE `user` = '%e'", inputtext, name);
		            //mysql_function_query(sqlHandle, query, false, "", "");
		            
       		    	new SeletedWarrant = GetPVarInt(playerid, "SeletedWarrant");

  					mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_warrants` SET `reason` = '%e' WHERE `user` = '%e' AND `reason` = '%e' AND `date` = '%e' AND `issuer` = '%e' ", inputtext, name, WarrantInfo[PlayerInfo[playerid][pSearchID]][SeletedWarrant][wReason], WarrantInfo[PlayerInfo[playerid][pSearchID]][SeletedWarrant][wDate], WarrantInfo[PlayerInfo[playerid][pSearchID]][SeletedWarrant][wIssuer]);

					mysql_function_query(sqlHandle, query, false, "", "");
				
		            new len = strlen(inputtext);
					if(len + MAX_PLAYER_NAME + 15 + 30 + MAX_PLAYER_NAME > 128)
					{
						new buffer[128];
					    strmid(buffer, inputtext, 0, len - MAX_PLAYER_NAME - 15 - 30 - MAX_PLAYER_NAME - 4);
					    format(buffer, sizeof(buffer), "** %s %s 更改了对 %s 的指控: %s ...", GetFactionRank(playerid), GetNameWithSpace(playerid, 1), GetNameWithSpaceEx(name), buffer);
					    strdel(inputtext, 0, len - MAX_PLAYER_NAME - 15 - 30 - MAX_PLAYER_NAME - 4);
						format(query, sizeof(query), "** ... %s", inputtext);
				   		foreach(new i : Player) {
							if(PlayerInfo[i][pFaction] == 1)
							{
								SendClientMessage(i, COLOR_COPBLUE, buffer);
								SendClientMessage(i, COLOR_COPBLUE, query);
							}
						}
					}
					else
					{
				        format(query, sizeof(query), "** %s %s 更改了对 %s 的指控: %s", GetFactionRank(playerid), GetNameWithSpace(playerid, 1), GetNameWithSpaceEx(name), inputtext);
						foreach(new i : Player)
						{
							if(PlayerInfo[i][pFaction] == 1)
							{
								SendClientMessage(i, COLOR_COPBLUE, query);
							}
						}
					}
		        }
				else
				{
		            ShowPlayerDialog(playerid, DIALOG_WARRANTS_CHA, DIALOG_STYLE_INPUT, "提示", "请输入新的指控", "确定", "取消");
		        }
		    }
		}
		case DIALOG_WARRANTS_DEL:
		{
  			new query[240],
				name[MAX_PLAYER_NAME];

			GetPVarString(playerid, "SaveSeaName", name, sizeof(name));
		    if(response)
		    {
		    	new SeletedWarrant = GetPVarInt(playerid, "SeletedWarrant");

  				mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_warrants` WHERE `user` = '%e' AND `reason` = '%e' AND `date` = '%e' AND `issuer` = '%e' ", name, WarrantInfo[PlayerInfo[playerid][pSearchID]][SeletedWarrant][wReason], WarrantInfo[PlayerInfo[playerid][pSearchID]][SeletedWarrant][wDate], WarrantInfo[PlayerInfo[playerid][pSearchID]][SeletedWarrant][wIssuer]);

				mysql_function_query(sqlHandle, query, false, "", "");
    			format(query, sizeof(query), "** %s %s 删除了对 %s 的指控: %s ...", GetFactionRank(playerid), GetNameWithSpace(playerid, 1), GetNameWithSpaceEx(name), WarrantInfo[PlayerInfo[playerid][pSearchID]][SeletedWarrant][wReason]);
				foreach(new i : Player)
				{
					if(PlayerInfo[i][pFaction] == 1)
					{
						SendClientMessage(i, COLOR_COPBLUE, query);
					}
				}
		    }
		}

		case DIALOG_CITATIONS: {
			if(response) {
			    new caption[60];
			    format(caption, sizeof(caption), "罚单 {FF9900}编号#%i", TicketInfo[playerid][listitem][tID]);
				format(gVar3000, sizeof(gVar3000), "%s", EOS);
				format(gVar3000, sizeof(gVar3000), "圣安地列斯州立政府\n\n日期: %s\n罚金: $%i\n机构: %s\n发行人: %s\n原因: %s\n\n有效期: %s", TicketInfo[playerid][listitem][tDate], TicketInfo[playerid][listitem][tCharge], TicketInfo[playerid][listitem][tAgency], TicketInfo[playerid][listitem][tIssuer], TicketInfo[playerid][listitem][tReason], (gettime() >= TicketInfo[playerid][listitem][tTimestamp] + 172800) ? ("有效") : ("过期"));
				ShowPlayerDialog(playerid, DIALOG_CITATION_VIEW, DIALOG_STYLE_MSGBOX, caption, gVar3000, "确定", "");
				format(gVar3000, sizeof(gVar3000), "%s", EOS);
			} else {
				for(new i = 0; i != MAX_TICKETS; i++) {
				    TicketInfo[playerid][i][tID] = 0;
				    TicketInfo[playerid][i][tCharge] = 0;
				    TicketInfo[playerid][i][tTimestamp] = 0;
					format(TicketInfo[playerid][i][tReason], 120, "%s", EOS);
					format(TicketInfo[playerid][i][tIssuer], MAX_PLAYER_NAME, "%s", EOS);
					format(TicketInfo[playerid][i][tAgency], 30, "%s", EOS);
					format(TicketInfo[playerid][i][tDate], 30, "%s", EOS);
				}
   			}
		}
		case DIALOG_CITATION_VIEW: {
			if(response) {
			    new i = 0;
			    format(gVar3000, sizeof(gVar3000), "%s", EOS);
			    while(TicketInfo[playerid][i][tID] != 0 && i < MAX_TICKETS && strlen(gVar3000) < 3000 - 175) {
		            if(isnull(gVar3000)) {
		                format(gVar3000, sizeof(gVar3000), "#%i [LAW] %s $%i %s", TicketInfo[playerid][i][tID], TicketInfo[playerid][i][tDate], TicketInfo[playerid][i][tCharge], TicketInfo[playerid][i][tReason]);
		            } else {
		                format(gVar3000, sizeof(gVar3000), "%s\n#%i [LAW] %s $%i %s", gVar3000, TicketInfo[playerid][i][tID], TicketInfo[playerid][i][tDate], TicketInfo[playerid][i][tCharge], TicketInfo[playerid][i][tReason]);
					}

					i++;
				}

                ShowPlayerDialog(playerid, DIALOG_CITATIONS, DIALOG_STYLE_LIST, "{FF9900}罚单", gVar3000, "查看", "取消");
			} else {
                for(new i = 0; i != MAX_TICKETS; i++) {
				    TicketInfo[playerid][i][tID] = 0;
				    TicketInfo[playerid][i][tCharge] = 0;
				    TicketInfo[playerid][i][tTimestamp] = 0;
					format(TicketInfo[playerid][i][tReason], 120, "%s", EOS);
					format(TicketInfo[playerid][i][tIssuer], MAX_PLAYER_NAME, "%s", EOS);
					format(TicketInfo[playerid][i][tAgency], 30, "%s", EOS);
					format(TicketInfo[playerid][i][tDate], 30, "%s", EOS);
				}
			}
		}
		case DIALOG_PAYCITATIONS:
		{
			if(response)
			{
			    new caption[60];
			    SetPVarInt(playerid, "CurCitation", listitem);
			    format(caption, sizeof(caption), "{FF9900}%s - #%i 罚单", TicketInfo[playerid][listitem][tAgency], TicketInfo[playerid][listitem][tID]);
				format(gVar3000, sizeof(gVar3000), "%s", EOS);
				format(gVar3000, sizeof(gVar3000), "圣安地列斯州立政府\n\n日期: %s\n罚金: $%i\n机构: %s\n发行人: %s\n原因: %s\n\n状态: %s", TicketInfo[playerid][listitem][tDate], TicketInfo[playerid][listitem][tCharge], TicketInfo[playerid][listitem][tAgency], TicketInfo[playerid][listitem][tIssuer], TicketInfo[playerid][listitem][tReason], (gettime() >= TicketInfo[playerid][listitem][tTimestamp] + 172800) ? ("有效") : ("过期"));
				ShowPlayerDialog(playerid, DIALOG_CITATION_PAY, DIALOG_STYLE_MSGBOX, caption, gVar3000, "支付", "取消");
				format(gVar3000, sizeof(gVar3000), "%s", EOS);
			}
			else
			{
                for(new i = 0; i != MAX_TICKETS; i++)
				{
				    TicketInfo[playerid][i][tID] = 0;
				    TicketInfo[playerid][i][tCharge] = 0;
				    TicketInfo[playerid][i][tTimestamp] = 0;
					format(TicketInfo[playerid][i][tReason], 120, "%s", EOS);
					format(TicketInfo[playerid][i][tIssuer], MAX_PLAYER_NAME, "%s", EOS);
					format(TicketInfo[playerid][i][tAgency], 30, "%s", EOS);
					format(TicketInfo[playerid][i][tDate], 30, "%s", EOS);
				}
			}
		}
		case DIALOG_CITATION_PAY: {
			if(response) {
			    new curCitation = GetPVarInt(playerid, "CurCitation");
			    if(PlayerInfo[playerid][pMoney] >= TicketInfo[playerid][curCitation][tCharge]) {
			        new msg[105];
			        SendClientMessage(playerid, COLOR_WHITE, "** 你成功支付了你的罚单.");
			        GivePlayerMoneyEx(playerid, -TicketInfo[playerid][curCitation][tCharge]);
			        mysql_format(sqlHandle, msg, sizeof(msg), "DELETE FROM `samp_tickets` WHERE `timestamp` = %i AND `user` = '%e'", TicketInfo[playerid][curCitation][tTimestamp], PlayerInfo[playerid][pName]);
			        mysql_function_query(sqlHandle, msg, false, "", "");
			    } else {
					SendClientMessage(playerid, COLOR_GREY, "你没有足够的钱支付罚单.");
				}
			}

   			for(new i = 0; i != MAX_TICKETS; i++) {
			    TicketInfo[playerid][i][tID] = 0;
			    TicketInfo[playerid][i][tCharge] = 0;
			    TicketInfo[playerid][i][tTimestamp] = 0;
				format(TicketInfo[playerid][i][tReason], 120, "%s", EOS);
				format(TicketInfo[playerid][i][tIssuer], MAX_PLAYER_NAME, "%s", EOS);
				format(TicketInfo[playerid][i][tAgency], 30, "%s", EOS);
				format(TicketInfo[playerid][i][tDate], 30, "%s", EOS);
			}
		}
		case DIALOG_LAPD:
		{
		    if(response)
			{
		        switch(listitem)
				{
		            case 0:
					{
		                new query[140];
						mysql_format(sqlHandle, query, sizeof(query), "SELECT `user`, `reason`, `charge`, `date`, `issuer`, `agency`, `timestamp` FROM `samp_tickets` WHERE `user` = '%e'", PlayerInfo[playerid][pName]);
						mysql_function_query(sqlHandle, query, true, "OnDialogPayCitations", "i", playerid);
		            }
		        }
		    }
		}
		case DIALOG_LAPD_ARMOURY_HEAVY:
		{
			if(response)
			{
			    if(GetPVarInt(playerid, "LAPDDuty") != 0)
				{
					switch(listitem)
					{
						case 0:
						{
						    if(PlayerInfo[playerid][pItemType][0] == 0)
							{
							    if(PlayerInfo[playerid][pRank] < 7) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要阶级大于7才能使用.");
						        SetPlayerItem(playerid, 30, 30);
						        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备了 M4A1.");
						    }
							else
							{
							    SendClientMessage(playerid, COLOR_LIGHTRED, "你手中已经携带了其他物品..");
							}
						}
						case 1:
						{
						    if(PlayerInfo[playerid][pItemType][0] == 0)
							{
							    if(PlayerInfo[playerid][pSWAT] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要在SWAT小组才能使用.");
                                SetPlayerItem(playerid, 219, 30);
						        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备了 AR-15.");
						    }
						    else
							{
							    SendClientMessage(playerid, COLOR_LIGHTRED, "你手中已经携带了其他物品..");
							}
						}
						case 2:
						{
						    if(PlayerInfo[playerid][pItemType][0] == 0)
							{
							    if(PlayerInfo[playerid][pSWAT] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要在SWAT小组才能使用.");
                                SetPlayerItem(playerid, 213, 30);
						        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备了 MP5.");
						    }
						    else
							{
							    SendClientMessage(playerid, COLOR_LIGHTRED, "你手中已经携带了其他物品..");
							}
						}
						case 3:
						{
						    if(PlayerInfo[playerid][pItemType][0] == 0)
							{
                                SetPlayerItem(playerid, 220, 30);
						        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备了 UMP 45.");
						    }
						    else
							{
							    SendClientMessage(playerid, COLOR_LIGHTRED, "你手中已经携带了其他物品..");
							}
						}
						case 4:
						{
						    if(PlayerInfo[playerid][pItemType][0] == 0)
							{
                                SetPlayerItem(playerid, 209, 4);
						        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备了 Remington 870.");
						    }
						    else
							{
							    SendClientMessage(playerid, COLOR_LIGHTRED, "你手中已经携带了其他物品..");
							}
						}
						case 5:
						{
						    if(PlayerInfo[playerid][pItemType][0] == 0)
							{
                                SetPlayerItem(playerid, 225, 5);
						        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备了震爆枪.");
						    }
						    else
							{
							    SendClientMessage(playerid, COLOR_LIGHTRED, "你手中已经携带了其他物品..");
							}
						}
						case 6:
						{
						    if(PlayerInfo[playerid][pSWAT] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "你需要在SWAT小组才能使用.");
						    if(PlayerInfo[playerid][pItemType][0] == 0)
							{
                                SetPlayerItem(playerid, 217, 20);
						        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备了 M24 Sniper Rifle.");
						    }
						    else
							{
							    SendClientMessage(playerid, COLOR_LIGHTRED, "你手中已经携带了其他物品..");
							}
						}
					}
				}
			}
		}
		case DIALOG_LAPD_ARMOURY_SIDE:
		{
			if(response)
			{
			    if(GetPVarInt(playerid, "LAPDDuty") != 0)
				{
					switch(listitem)
					{
						case 0:
						{
						    if(PlayerInfo[playerid][pItemType][0] == 0)
							{
						        SetPlayerItem(playerid, 253, 7);
						        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备了 Beretta 92FS.");
						    }
							else
							{
							    SendClientMessage(playerid, COLOR_LIGHTRED, "你手中已经携带了其他物品..");
							}
						}
						case 1:
						{
						    if(PlayerInfo[playerid][pItemType][0] == 0)
							{
						        SetPlayerItem(playerid, 211, 7);
						        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备了 Jericho 941F.");
						    }
							else
							{
							    SendClientMessage(playerid, COLOR_LIGHTRED, "你手中已经携带了其他物品..");
							}
						}
						case 2:
						{
						    if(PlayerInfo[playerid][pItemType][0] == 0)
							{
						        SetPlayerItem(playerid, 208, 7);
						        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备了 Glock .37.");
						    }
							else
							{
							    SendClientMessage(playerid, COLOR_LIGHTRED, "你手中已经携带了其他物品..");
							}
						}
						case 3:
						{
						    if(PlayerInfo[playerid][pItemType][0] == 0)
							{
						        SetPlayerItem(playerid, 206, 7);
						        SendClientMessage(playerid, COLOR_LIGHTGREEN, "你成功装备了 Beretta 9MM.");
						    }
							else
							{
							    SendClientMessage(playerid, COLOR_LIGHTRED, "你手中已经携带了其他物品..");
							}
						}
					}
				}
			}
		}
		case DIALOG_LAPD_MENU:
		{
			if(response)
			{
			    if(GetPVarInt(playerid, "LAPDDuty") != 0)
				{
					switch(listitem)
					{
						case 0:
						{
                            ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY_HEAVY, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "M4A1\nAR-15\nMP5\nUMP 45\nRemington 870\n震爆枪\n狙击步枪", "选择", "返回");
						}
						case 1:
						{
						    ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY_SIDE, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "Beretta 92FS\nJericho 941F\nGlock .37\n9mm", "选择", "返回");
						}
						case 2:
						{
						    ShowPlayerDialog(playerid, DIALOG_LAPD_OBJECTS, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "手电筒\n防爆盾\n警盔\n警帽\n防毒面具\n棕色警帽\n黑色警帽\n部门帽子\nSWAT防弹衣\nSWAT头盔\n警徽", "选择", "返回");
						}
						case 3:
						{
							SetPlayerArmour(playerid, 100.0);
							SendClientMessage(playerid, COLOR_WHITE, "** 你穿上了防弹衣.");
						}
						case 4:
						{
						    ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY_OTHER, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "手枪弹夹 (容量: 7)\n自动枪械弹匣 (容量: 30)\n重型枪械弹匣\n电击枪\n手铐\n无线电\n警棍\n摄像机", "选择", "返回");
						}
						case 5:
						{
							SetPlayerArmour(playerid, 0.0);
							SendClientMessage(playerid, COLOR_WHITE, "** 你脱下了防弹衣.");
						}
						case 6:
						{
						    new pItems[22],
								dialogMsg[850];

							getItemPage(playerid, pItems, sizeof(pItems), 1);
							if(pItems[0] != 0) {
								for(new i = 0; i != sizeof(pItems); i++) {
									if(pItems[i] == 0) {
										break;
									}

									if(isnull(dialogMsg)) {
									    if(pItems[i] >= 4 && pItems[i] <= 13) {
											format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 3) {
						    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 17) {
										    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 18) {
										    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 19) {
										    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, i));
                                        } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    							format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
										} else {
										    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
										}
									} else {
									    if(pItems[i] >= 4 && pItems[i] <= 13) {
											format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 3) {
						    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 17) {
										    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 18) {
										    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 19) {
										    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
                                        } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    							format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
										} else {
										    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
										}
									}

									if(getItemID(playerid, i) == PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]]) {
									    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
									}
								}

								if(itemIndexExists(playerid, 21)) {
									format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
								}

						        SetPVarInt(playerid, "CurrentItemPage", 1);
								ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY_RETURN, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", dialogMsg, "退还", "取消");
							} else {
								SendClientMessage(playerid, COLOR_GREY, "你没有可以退还的物品.");
							}
						}
					}
				}
				else
				{
				    new pItems[22],
						dialogMsg[850];

					getItemPage(playerid, pItems, sizeof(pItems), 1);
					if(pItems[0] != 0)
					{
						for(new i = 0; i != sizeof(pItems); i++)
						{
							if(pItems[i] == 0)
							{
								break;
							}

							if(isnull(dialogMsg)) {
							    if(pItems[i] >= 4 && pItems[i] <= 13) {
									format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 3) {
				    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 17) {
								    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 18) {
								    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 19) {
								    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, i));
                                } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    					format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
								} else {
								    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
								}
							} else {
							    if(pItems[i] >= 4 && pItems[i] <= 13) {
									format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 3) {
				    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 17) {
								    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 18) {
								    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 19) {
								    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
                                } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    					format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
								} else {
								    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
								}
							}

							if(getItemID(playerid, i) == PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]])
							{
							    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
							}
						}

						if(itemIndexExists(playerid, 21))
						{
							format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
						}

				        SetPVarInt(playerid, "CurrentItemPage", 1);
						ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY_RETURN, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", dialogMsg, "退还", "取消");
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "你没有可以退还的物品.");
					}
				}
			}
		}
		case DIALOG_LAPD_ARMOURY: {
			if(response) {
			    if(GetPVarInt(playerid, "LAPDDuty") != 0) {
					switch(listitem) {
						case 0: {
						    if(itemInPossession(playerid, 208) == 0) {
						        if(itemInPossession(playerid, 231) == 0) {
                                    if(itemInPossession(playerid, 232) == 0) {
                                        if(itemInPossession(playerid, 190) == 0) {
                                            if(itemInPossession(playerid, 224) == 0) {
                                                if(itemInPossession(playerid, 209) == 0) {
                                                    if(itemInPossession(playerid, 242) == 0) {
	                                                    if(GetPVarInt(playerid, "Handcuffed") == 0) {
															if(PlayerInfo[playerid][pItemType][0] == 0) {
																SetPlayerItem(playerid, 208, 7);
																SetPlayerItem(playerid, 231, 0);
																SetPlayerItem(playerid, 232, 0);
																SetPlayerItem(playerid, 190, 0);
																SetPlayerItem(playerid, 224, 100);
																SetPlayerItem(playerid, 209, 4);
																SetPlayerItem(playerid, 17, 7);
																SetPlayerItem(playerid, 17, 7);
																SetPlayerItem(playerid, 17, 7);
																SetPlayerItem(playerid, 19, 20);
																SetPlayerItem(playerid, 242, 1);
																SendClientMessage(playerid, COLOR_WHITE, "** 已装备常规巡逻装备.");
															} else {
															    SendClientMessage(playerid, COLOR_GREY, "你手里已经携带了其他物品.");
															}
														} else {
									     					SendClientMessage(playerid, COLOR_GREY, "你被铐住了, 无法使用 Remington 870.");
														}
                                                    } else {
									     				SendClientMessage(playerid, COLOR_GREY, "你已经有了一把电击枪.");
													}
						       					} else {
						       					    SendClientMessage(playerid, COLOR_GREY, "你已经有了一把Remingtong 870.");
						       					}
						       				} else {
						       				    SendClientMessage(playerid, COLOR_GREY, "你已经有了一瓶辣椒喷雾器.");
						       				}
						       			} else {
						       			    SendClientMessage(playerid, COLOR_GREY, "你已经有了一根警棍.");
						       		    }
						       		} else {
						       		    SendClientMessage(playerid, COLOR_GREY, "你已经有了一副手铐.");
						       		}
						        } else {
						            SendClientMessage(playerid, COLOR_GREY, "你已经有了一台无线电.");
						        }
						    } else {
						        SendClientMessage(playerid, COLOR_GREY, "你已经有了一把手枪.");
						    }
						    
						    ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "重型武器\n手枪\n装饰\n防弹衣\n额外物品\n退还防弹衣\n退还装备", "选择", "取消");
						}
						case 1: {
						    if(itemInPossession(playerid, 208) == 0) {
						        if(itemInPossession(playerid, 231) == 0) {
						            if(itemInPossession(playerid, 232) == 0) {
						                if(itemInPossession(playerid, 190) == 0) {
											if(itemInPossession(playerid, 224) == 0) {
											    if(itemInPossession(playerid, 30) == 0) {
											        if(itemInPossession(playerid, 242) == 0) {
												        if(GetPVarInt(playerid, "Handcuffed") == 0) {
															if(PlayerInfo[playerid][pItemType][0] == 0) {
														        SetPlayerItem(playerid, 208, 7);
																SetPlayerItem(playerid, 231, 0);
																SetPlayerItem(playerid, 232, 0);
																SetPlayerItem(playerid, 190, 0);
																SetPlayerItem(playerid, 224, 100);
																SetPlayerItem(playerid, 30, 30);
																SetPlayerItem(playerid, 17, 7);
																SetPlayerItem(playerid, 17, 7);
																SetPlayerItem(playerid, 17, 7);
																SetPlayerItem(playerid, 18, 30);
																SetPlayerItem(playerid, 18, 30);
																SetPlayerItem(playerid, 18, 30);
																SetPlayerItem(playerid, 242, 1);
																SendClientMessage(playerid, COLOR_WHITE, "** 已装备战术装备.");
	                                                    	} else {
															    SendClientMessage(playerid, COLOR_GREY, "你已经携带了一个物品.");
															}
														} else {
									     					SendClientMessage(playerid, COLOR_GREY, "你被铐住了, 无法使用M4.");
														}
                                                    } else {
							    				    	SendClientMessage(playerid, COLOR_GREY, "你已经有了一把电击枪.");
							    					}
							    				} else {
							    				    SendClientMessage(playerid, COLOR_GREY, "你已经有了一把 M4.");
							    				}
						    				} else {
						    				    SendClientMessage(playerid, COLOR_GREY, "你已经有了一瓶辣椒喷雾器.");
											}
						    			} else {
						    			    SendClientMessage(playerid, COLOR_GREY, "你已经有了一根警棍.");
						    			}
						    		} else {
						    		    SendClientMessage(playerid, COLOR_GREY, "你已经有了一副手铐.");
						    		}
						    	} else {
						    	    SendClientMessage(playerid, COLOR_GREY, "你已经有了一台无线电.");
						    	}
						    } else {
						        SendClientMessage(playerid, COLOR_GREY, "你已经有了一把手枪.");
						    }
						    
						    ShowPlayerDialog(playerid, DIALOG_LAPD_MENU, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "重型武器\n手枪\n装饰\n防弹衣\n额外物品\n退还防弹衣\n退还装备", "选择", "取消");
						}
						case 2: {
						    if(itemInPossession(playerid, 208) == 0) {
								SetPlayerItem(playerid, 208, 7);
						    } else {
								SendClientMessage(playerid, COLOR_GREY, "你已经有了一把手枪.");
							}
							
							ShowPlayerDialog(playerid, DIALOG_LAPD_MENU, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "重型武器\n手枪\n装饰\n防弹衣\n额外物品\n退还防弹衣\n退还装备", "选择", "取消");
						}
						case 3: {
							SetPlayerArmourAndLimit(playerid, 100.0);
							SendClientMessage(playerid, COLOR_WHITE, "** 防弹衣已装备.");
							ShowPlayerDialog(playerid, DIALOG_LAPD_MENU, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "重型武器\n手枪\n装饰\n防弹衣\n额外物品\n退还防弹衣\n退还装备", "选择", "取消");
						}
						case 4: {
						    ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY_OTHER, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "手枪弹夹 (容量: 7)\n自动枪械弹匣 (容量: 30)\n重型枪械弹匣\n电击枪\n手铐\n无线电\n警棍\n摄像机", "选择", "返回");
						}
						case 5:
						{
							SetPlayerArmour(playerid, 0.0);
							SendClientMessage(playerid, COLOR_WHITE, "** 防弹衣已退还.");
						}
						case 6: {
						    new pItems[22],
								dialogMsg[850];

							getItemPage(playerid, pItems, sizeof(pItems), 1);
							if(pItems[0] != 0) {
								for(new i = 0; i != sizeof(pItems); i++) {
									if(pItems[i] == 0) {
										break;
									}

									if(isnull(dialogMsg)) {
									    if(pItems[i] >= 4 && pItems[i] <= 13) {
											format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 3) {
						    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 17) {
										    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 18) {
										    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 19) {
										    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, i));
                                        } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    							format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
										} else {
										    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
										}
									} else {
									    if(pItems[i] >= 4 && pItems[i] <= 13) {
											format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 3) {
						    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 17) {
										    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 18) {
										    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
										} else if(pItems[i] == 19) {
										    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
                                        } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    							format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
										} else {
										    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
										}
									}

									if(getItemID(playerid, i) == PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]]) {
									    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
									}
								}

								if(itemIndexExists(playerid, 21)) {
									format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
								}

						        SetPVarInt(playerid, "CurrentItemPage", 1);
								ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY_RETURN, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", dialogMsg, "退还", "取消");
							} else {
								SendClientMessage(playerid, COLOR_GREY, "你没有可退还的物品.");
							}
						}
					}
				} else {
				    new pItems[22],
						dialogMsg[850];

					getItemPage(playerid, pItems, sizeof(pItems), 1);
					if(pItems[0] != 0) {
						for(new i = 0; i != sizeof(pItems); i++) {
							if(pItems[i] == 0) {
								break;
							}

							if(isnull(dialogMsg)) {
							    if(pItems[i] >= 4 && pItems[i] <= 13) {
									format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 3) {
				    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 17) {
								    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 18) {
								    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 19) {
								    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, i));
                                } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    					format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
								} else {
								    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
								}
							} else {
							    if(pItems[i] >= 4 && pItems[i] <= 13) {
									format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 3) {
				    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 17) {
								    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 18) {
								    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
								} else if(pItems[i] == 19) {
								    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
                                } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    					format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
								} else {
								    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
								}
							}

							if(getItemID(playerid, i) == PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]]) {
							    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
							}
						}

						if(itemIndexExists(playerid, 21)) {
							format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
						}

				        SetPVarInt(playerid, "CurrentItemPage", 1);
						ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY_RETURN, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", dialogMsg, "退还", "取消");
					} else {
						SendClientMessage(playerid, COLOR_GREY, "你没有可退还的物品.");
					}
				}
			}
		}
		case DIALOG_LAPD_OBJECTS:
		{
			if(response)
			{
			    switch(listitem)
				{
					case 0:
					{
					    if(itemInPossession(playerid, 23) == 0)
						{
							SetPlayerItem(playerid, 23, 0);
							SendClientMessage(playerid, COLOR_WHITE, "** 手电筒已装备.");
					    }
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "你已经有了一个手电筒.");
						}
					}
					case 1:
					{
					    if(itemInPossession(playerid, 233) == 0)
						{
					        if(PlayerInfo[playerid][pItemType][IDX_LEFT_ARM_ITEM] == 0)
							{
					            if(GetPVarInt(playerid, "Handcuffed") == 0)
								{
									SetPlayerItem(playerid, 233, 0);
									SendClientMessage(playerid, COLOR_WHITE, "** 防爆盾已装备.");
								}
								else
								{
                                    SendClientMessage(playerid, COLOR_GREY, "你被铐住了.");
								}
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "你正在携带此类物品.");
							}
					    }
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "你已经有了一个防爆盾.");
						}
					}
					case 2:
					{
					    if(itemInPossession(playerid, 234) == 0)
						{
							SetPlayerItem(playerid, 234, 0);
							SendClientMessage(playerid, COLOR_WHITE, "** 警盔已装备.");
					    }
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "你已经有了一个警盔.");
						}
					}
					case 3:
					{
					    if(itemInPossession(playerid, 235) == 0)
						{
							SetPlayerItem(playerid, 235, 0);
							SendClientMessage(playerid, COLOR_WHITE, "** 警帽已装备.");
					    }
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "你已经有了一个警帽.");
						}
					}
					case 4:
					{
					    if(itemInPossession(playerid, 236) == 0)
						{
							SetPlayerItem(playerid, 236, 0);
							SendClientMessage(playerid, COLOR_WHITE, "** 防毒面具已装备.");
					    }
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "你已经有了一副防毒面具.");
						}
					}
					case 5:
					{
					    if(itemInPossession(playerid, 237) == 0)
						{
							SetPlayerItem(playerid, 237, 0);
							SendClientMessage(playerid, COLOR_WHITE, "** 棕色警帽已装备.");
					    }
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "你已经有了一个警帽.");
						}
					}
					case 6:
					{
					    if(itemInPossession(playerid, 238) == 0)
						{
							SetPlayerItem(playerid, 238, 0);
							SendClientMessage(playerid, COLOR_WHITE, "** 黑色警帽已装备.");
					    }
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "你已经有了一个警帽.");
						}
					}
					case 7:
					{
					    if(itemInPossession(playerid, 239) == 0)
						{
							SetPlayerItem(playerid, 239, 0);
							SendClientMessage(playerid, COLOR_WHITE, "** 部门帽子已装备.");
					    }
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "你已经有了一个部门帽子.");
						}
					}
					case 8:
					{
					    if(itemInPossession(playerid, 226) == 0)
						{
							SetPlayerItem(playerid, 226, 0);
							SendClientMessage(playerid, COLOR_WHITE, "** SWAT防弹衣已装备.");
					    }
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "你已经有了一个SWAT防弹衣.");
						}
					}
					case 9:
					{
					    if(itemInPossession(playerid, 227) == 0)
						{
							SetPlayerItem(playerid, 227, 0);
							SendClientMessage(playerid, COLOR_WHITE, "** SWAT头盔已装备.");
					    }
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "你已经有了一个SWAT头盔.");
						}
					}
					case 10:
					{
					    if(itemInPossession(playerid, 243) == 0)
						{
							SetPlayerItem(playerid, 243, 0);
							SendClientMessage(playerid, COLOR_WHITE, "** 警徽已装备.");
					    }
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "你已经有了一个警徽.");
						}
					}
				}
			}
		}
		case DIALOG_LAPD_ARMOURY_OTHER:
		{
			if(response)
			{
			    switch(listitem)
				{
					case 0:
					{
					    SetPlayerItem(playerid, 17, 7);
					    SendClientMessage(playerid, COLOR_WHITE, "** 手枪弹夹 (容量: 7) 已装备.");
					}
					case 1:
					{
					    SetPlayerItem(playerid, 18, 30);
					    SendClientMessage(playerid, COLOR_WHITE, "** 自动枪械弹匣 (容量: 30) 已装备.");
					}
					case 2: // \nTazer\nHandcuffs\nRadio
					{
					    SetPlayerItem(playerid, 19, 20);
					    SendClientMessage(playerid, COLOR_WHITE, "** 重型枪械弹匣已装备.");
					}
					case 3:
					{
					    SetPlayerItem(playerid, 242, 0);
					    SendClientMessage(playerid, COLOR_WHITE, "** 电击枪已装备.");
					}
					case 4:
					{
					    SetPlayerItem(playerid, 232, 20);
					    SendClientMessage(playerid, COLOR_WHITE, "** 手铐已装备.");
					}
					case 5:
					{
					    SetPlayerItem(playerid, 231, 20);
					    SendClientMessage(playerid, COLOR_WHITE, "** 无线电已装备.");
					}
					case 6:
					{
					    SetPlayerItem(playerid, 190, 0);
					    SendClientMessage(playerid, COLOR_WHITE, "** 警棍已装备.");
					}
					case 7:
					{
					    SetPlayerItem(playerid, 14, 50);
					    SendClientMessage(playerid, COLOR_WHITE, "** 摄像机已装备.");
					}
				}
				
				ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY_OTHER, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "手枪弹夹 (容量: 7)\n自动枪械弹匣 (容量: 30)\n重型枪械弹匣\n电击枪\n手铐\n无线电\n警棍\n摄像机", "选择", "返回");
			}
			else
			{
			    ShowPlayerDialog(playerid, DIALOG_LAPD_MENU, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", "重型武器\n手枪\n装饰\n防弹衣\n额外物品\n退还防弹衣\n退还装备", "选择", "取消");
			}
		}
		case DIALOG_LAPD_ARMOURY_RETURN: {
		    if(response) {
		        new page = GetPVarInt(playerid, "CurrentItemPage");
				if(listitem == 21) {
				    new pItems[22],
						dialogMsg[850];

                    getItemPage(playerid, pItems, sizeof(pItems), page + 1);
					for(new i = 0; i != sizeof(pItems); i++) {
						if(pItems[i] == 0) {
							break;
						}

      					if(isnull(dialogMsg)) {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
							}
						} else {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
							}
						}

						if(PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]] == getItemID(playerid, (20 * page) + i)) {
						    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
						}
					}

					if(itemIndexExists(playerid, (page * 20) + 21)) {
						format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
					}

                    SetPVarInt(playerid, "CurrentItemPage", page + 1);
					ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY_RETURN, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", dialogMsg, "退还", "取消");
				} else {
				    new type = getItemType(playerid, (20 * (page - 1)) + listitem);
					if(items[type][PDReturnable] != 0) {
					    new id = getItemID(playerid, (20 * (page - 1)) + listitem),
							pItems[22],
							dialogMsg[850];

                        for(new i = 0; i != 10; i++) {
							if(PlayerInfo[playerid][pItemID][i] == id) {
							    if(i != 10) {
									RemovePlayerAttachedObject(playerid, i);
									if(items[PlayerInfo[playerid][pItemType][i]][itemType] == ITEM_WEAPON) {
										ResetPlayerWeapons(playerid);
									}
								}

								PlayerInfo[playerid][pItemVar][i] = 0;
								PlayerInfo[playerid][pItemType][i] = 0;
								PlayerInfo[playerid][pItemIndex][i] = 0;
								PlayerInfo[playerid][pItemID][i] = 0;
							}
						}
						
						mysql_format(sqlHandle, dialogMsg, sizeof(dialogMsg), "DELETE FROM `samp_items` WHERE `id` = %i", id);
						mysql_function_query(sqlHandle, dialogMsg, false, "", "");
						format(dialogMsg, sizeof(dialogMsg), "%s", EOS);
						RemovePlayerItemEx(playerid, id);
						//UnsetPlayerMask(playerid);
						SendClientMessage(playerid, COLOR_WHITE, "** 物品已被退回.");
						getItemPage(playerid, pItems, sizeof(pItems), 1);
						if(pItems[0] != 0) {
							for(new i = 0; i != sizeof(pItems); i++) {
								if(pItems[i] == 0) {
									break;
								}

								if(isnull(dialogMsg)) {
								    if(pItems[i] >= 4 && pItems[i] <= 13) {
										format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 3) {
						   				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 17) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 18) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 19) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, i));
                                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else {
									    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
									}
								} else {
									if(pItems[i] >= 4 && pItems[i] <= 13) {
										format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 3) {
						   				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 17) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 18) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 19) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
                                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
									}
								}

								if(getItemID(playerid, i) == PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]]) {
								    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
								}
							}

							if(itemIndexExists(playerid, 21)) {
								format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
							}

					        SetPVarInt(playerid, "CurrentItemPage", 1);
							ShowPlayerDialog(playerid, DIALOG_LAPD_ARMOURY_RETURN, DIALOG_STYLE_LIST, "{FF9900}Los Angeles Police Department", dialogMsg, "退还", "取消");
						}
					} else {
						SendClientMessage(playerid, COLOR_GREY, "该物品无法退还.");
					}
				}
		    }
		}
		case DIALOG_BADGE: {
			if(response) {
				if(strlen(inputtext) > 0 && IsNumeric(inputtext) && strval(inputtext) >= 1 && strval(inputtext) <= 9999) {
				    new query[80];
					mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_users` WHERE `badge` = %i AND `faction` = %i", strval(inputtext), PlayerInfo[playerid][pFaction]);
					mysql_function_query(sqlHandle, query, true, "OnDialogBadge", "ii", playerid, strval(inputtext));
				} else {
					SendClientMessage(playerid, COLOR_GREY, "你需要在 1 到 9999 中选择数字.");
					if(PlayerInfo[playerid][pFaction] == 1) {
						ShowPlayerDialog(playerid, DIALOG_BADGE, DIALOG_STYLE_INPUT, "{FF9900}警徽", "请输入一个独特的数组来创建警徽:", "提交", "取消");
					} else if(PlayerInfo[playerid][pFaction] == 3) {
					    ShowPlayerDialog(playerid, DIALOG_BADGE, DIALOG_STYLE_INPUT, "{FF9900}证件", "请输入一个独特的数组来创建证件:", "提交", "取消");
					}
				}
			} else {
				SetPVarInt(playerid, "CreateBadge", 0);
			}
		}
		case DIALOG_LAPDDUTY: {
		    if(response) {
		        new msg[100],
		            skin = GetPVarInt(playerid, "LAPDDuty");

		        PlayerInfo[playerid][pSkin] = skin;
		        // UpdatePlayerHandcuffs(playerid);
		        SetPlayerSkin(playerid, skin);
		        SetPVarInt(playerid, "LAPDDuty", 0);
		        format(msg, sizeof(msg), "** %s 打开储物柜并且放置脱下的制服之后打卡并下班.", GetNameWithSpace(playerid, 1));
		        ProxDetector(12, playerid, msg, COLOR_PINK);
		        UpdatePlayerColor(playerid);
		    }
		}
		case DIALOG_LSFDDUTY: {
		    if(response) {
		        new msg[100],
		            skin = GetPVarInt(playerid, "LSFDDuty");

		        PlayerInfo[playerid][pSkin] = skin;
		        // UpdatePlayerHandcuffs(playerid);
		        SetPlayerSkin(playerid, skin);
		        SetPVarInt(playerid, "LSFDDuty", 0);
		        format(msg, sizeof(msg), "** %s 打开储物柜并且放置脱下的制服之后打卡并下班.", GetNameWithSpace(playerid, 1));
		        ProxDetector(12, playerid, msg, COLOR_PINK);
		        UpdatePlayerColor(playerid);
		    }
		}
		case DIALOG_SANDUTY: {
		    if(response) {
		        new msg[100],
		            skin = GetPVarInt(playerid, "SanDuty");

		        PlayerInfo[playerid][pSkin] = skin;
		        // UpdatePlayerHandcuffs(playerid);
		        SetPlayerSkin(playerid, skin);
		        SetPVarInt(playerid, "SanDuty", 0);
		        format(msg, sizeof(msg), "** %s 打开储物柜并且放置脱下的制服之后打卡并下班.", GetNameWithSpace(playerid, 1));
		        ProxDetector(12, playerid, msg, COLOR_PINK);
		        UpdatePlayerColor(playerid);
		    }
		}
		case DIALOG_SEARCH_LOCKER: {
			if(response) {
			    new page = GetPVarInt(playerid, "CurrentItemPage");
				if(listitem == 21) {
				    new query[125],
				        user[MAX_PLAYER_NAME];

				    GetPVarString(playerid, "SearchLockerUsername", user, sizeof(user));
				    mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_lockers` WHERE `user` = '%e' AND `faction` = 1 LIMIT %i, 21", user, (page * 20) + 21);
				    mysql_function_query(sqlHandle, query, true, "OnPlayerSearchItemsInLocker", "isii", playerid, user, page + 1, 1);
				} else {
				    new query[130],
				        user[MAX_PLAYER_NAME];

				    GetPVarString(playerid, "SearchLockerUsername", user, sizeof(user));
				    mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var`, `id` FROM `samp_lockers` WHERE `user` = '%e' AND `faction` = 1 LIMIT %i, 1", user, (20 * (page - 1)) + listitem);
				    mysql_function_query(sqlHandle, query, true, "OnPlayerSearchLockerTakeItem", "is", playerid, user);
				}
			}
		}
		case DIALOG_LOCKER: {
            if(response) {
				switch(listitem) {
					case 0: {
					    new pItems[22],
							dialogMsg[850];

						getItemPage(playerid, pItems, sizeof(pItems), 1);
						if(pItems[0] != 0) {
							for(new i = 0; i != sizeof(pItems); i++) {
								if(pItems[i] == 0) {
									break;
								}

								if(isnull(dialogMsg)) {
								    if(pItems[i] >= 4 && pItems[i] <= 13) {
										format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 3) {
					    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 17) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 18) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 19) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, i));
                                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else {
									    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
									}
								} else {
									if(pItems[i] >= 4 && pItems[i] <= 13) {
										format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 3) {
					    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 17) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 18) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 19) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
                                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
									}
								}

								if(getItemID(playerid, i) == PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]]) {
								    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
								}
							}

							if(itemIndexExists(playerid, 21)) {
								format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
							}

					        SetPVarInt(playerid, "CurrentItemPage", 1);
							ShowPlayerDialog(playerid, DIALOG_LOCKER_STORE, DIALOG_STYLE_LIST, "{FF9900}储物箱", dialogMsg, "存放", "取消");
						} else {
							SendClientMessage(playerid, COLOR_GREY, "你没有任何物品.");
						}
					}
					case 1: {
						new query[120];
					    mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_lockers` WHERE `user` = '%e' AND `faction` = %i LIMIT 0, 21", PlayerInfo[playerid][pName], PlayerInfo[playerid][pFaction]);
					    mysql_function_query(sqlHandle, query, true, "OnPlayerLockerTakeItem", "iii", playerid, 1, 1);
					}
				}
			}
		}
		case DIALOG_LOCKER_STORE: {
			if(response) {
                new page = GetPVarInt(playerid, "CurrentItemPage");
				if(listitem == 21) {
				    new pItems[22],
						dialogMsg[850];

                    getItemPage(playerid, pItems, sizeof(pItems), page + 1);
					for(new i = 0; i != sizeof(pItems); i++) {
						if(pItems[i] == 0) {
							break;
						}

						if(isnull(dialogMsg)) {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
							}
						} else {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
							}
						}

						if(PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]] == getItemID(playerid, (20 * page) + i)) {
						    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
						}
					}

					if(itemIndexExists(playerid, (page * 20) + 21)) {
						format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
					}

                    SetPVarInt(playerid, "CurrentItemPage", page + 1);
					ShowPlayerDialog(playerid, DIALOG_LOCKER_STORE, DIALOG_STYLE_LIST, "{FF9900}储物箱", dialogMsg, "存放", "取消");
				} else {
				    new query[100];
					mysql_format(sqlHandle, query, sizeof(query), "SELECT `item` FROM `samp_lockers` WHERE `user` = '%e' AND `faction` = %i", PlayerInfo[playerid][pName], PlayerInfo[playerid][pFaction]);
					mysql_function_query(sqlHandle, query, true, "OnLockerCheckVolume", "iiii", playerid, getItemID(playerid, (20 * (page - 1)) + listitem), getItemType(playerid, (20 * (page - 1)) + listitem), getItemVar(playerid, (20 * (page - 1)) + listitem));
				}
			}
		}
		case DIALOG_LOCKER_TAKE: {
			if(response) {
			    new page = GetPVarInt(playerid, "CurrentItemPage");
				if(listitem == 21) {
				    new query[120];
					mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_lockers` WHERE `user` = '%e' AND `faction` = %i LIMIT %i, 21", PlayerInfo[playerid][pName], PlayerInfo[playerid][pFaction], (page * 20) + 21);
					mysql_function_query(sqlHandle, query, true, "OnPlayerLockerTakeItem", "iii", playerid, 1, 1);
				} else {
				    new query[130];
				    mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var`, `id` FROM `samp_lockers` WHERE `user` = '%e' AND `faction` = %i LIMIT %i, 1", PlayerInfo[playerid][pName], PlayerInfo[playerid][pFaction], (20 * (page - 1)) + listitem);
				    mysql_function_query(sqlHandle, query, true, "OnPlayerTakesItemFromLocker", "i", playerid);
				}
			}
		}
		case DIALOG_GIVE_ITEMS: {
			if(response) {
                new page = GetPVarInt(playerid, "CurrentItemPage");
				if(listitem == 21) {
				    new pItems[22],
						dialogMsg[850];

                    getItemPage(playerid, pItems, sizeof(pItems), page + 1);
					for(new i = 0; i != sizeof(pItems); i++) {
						if(pItems[i] == 0) {
							break;
						}

      					if(isnull(dialogMsg)) {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
							}
						} else {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
							}
						}

						if(PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]] == getItemID(playerid, (20 * page) + i)) {
						    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
						}
					}

					if(itemIndexExists(playerid, (page * 20) + 21)) {
						format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
					}

                    SetPVarInt(playerid, "CurrentItemPage", page + 1);
					ShowPlayerDialog(playerid, DIALOG_GIVE_ITEMS, DIALOG_STYLE_LIST, "{FF9900}物品", dialogMsg, "选择", "取消");
				} else {
				    new Float:X,
				        Float:Y,
				        Float:Z,
				        user = GetPVarInt(playerid, "GiveItemUser");

                    if(!IsPlayerConnected(user)) return SendClientMessage(playerid, COLOR_GREY, "对方不在线.");
					GetPlayerPos(user, X, Y, Z);
					if(IsPlayerInRangeOfPoint(playerid, 4, X, Y, Z)) {
						new type = getItemType(playerid, (20 * (page - 1)) + listitem);
                        if(PlayerInfo[user][pItemType][items[type][iIdx]] != 0 && items[type][storable] == 0) {
							SendClientMessage(playerid, COLOR_GREY, "对方已经携带了此类物品.");
						} else {
						    new query[90],
								id = getItemID(playerid, (20 * (page - 1)) + listitem);

							SetPlayerItem(user, type, getItemVar(playerid, (20 * (page - 1)) + listitem));
	                        for(new i = 0; i != 10; i++) {
								if(PlayerInfo[playerid][pItemID][i] == id) {
								    if(i != 10) {
										RemovePlayerAttachedObject(playerid, i);
										if(items[PlayerInfo[playerid][pItemType][i]][itemType] == ITEM_WEAPON) {
											ResetPlayerWeapons(playerid);
										}
									}

									PlayerInfo[playerid][pItemVar][i] = 0;
									PlayerInfo[playerid][pItemType][i] = 0;
									PlayerInfo[playerid][pItemIndex][i] = 0;
									PlayerInfo[playerid][pItemID][i] = 0;
									if(GetPVarInt(playerid, "Handcuffed") == 0) {
									    if(GetPVarInt(playerid, "Calling") == -1) {
											SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
										} else {
										    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
											SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
										}
									} else {
									    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
									    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
									}
								}
							}

							mysql_format(sqlHandle, query, sizeof(query), "DELETE FROM `samp_items` WHERE `id` = %i", id);
							mysql_function_query(sqlHandle, query, false, "", "");
							RemovePlayerItemEx(playerid, id);
							//UnsetPlayerMask(playerid);
							format(query, sizeof(query), "你给了 %s 一个 %s.", GetNameWithSpace(user, 1), itemLowerCase(type));
							SendClientMessage(playerid, COLOR_WHITE, query);
							format(query, sizeof(query), "%s 给了你 %s %s.", GetNameWithSpace(playerid, 1), itemLowerCase(type));
							SendClientMessage(user, COLOR_WHITE, query);
							format(query, sizeof(query), "** %s 给了 %s 一个 %s.", GetNameWithSpace(playerid, 1), GetNameWithSpace(user, 1), itemLowerCase(type));
							SetPlayerChatBubble(playerid, query, COLOR_PINK, 12.0, 10000);
							ShowPlayerGiveItemDialog(playerid);
						}
					} else {
						SendClientMessage(playerid, COLOR_GREY, "你需要靠近对方.");
					}
				}
			}
		}
		case DIALOG_TRUNK: {
			if(response) {
				switch(listitem) {
					case 0: {
					    new pItems[22],
							dialogMsg[850];

						getItemPage(playerid, pItems, sizeof(pItems), 1);
						if(pItems[0] != 0) {
							for(new i = 0; i != sizeof(pItems); i++) {
								if(pItems[i] == 0) {
									break;
								}

								if(isnull(dialogMsg)) {
								    if(pItems[i] >= 4 && pItems[i] <= 13) {
										format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 3) {
					    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 17) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 18) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 19) {
									    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, i));
                                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, i));
									} else {
									    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
									}
								} else {
									if(pItems[i] >= 4 && pItems[i] <= 13) {
										format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 3) {
					    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 17) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 18) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else if(pItems[i] == 19) {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
                                    } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    						format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, i));
									} else {
									    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
									}
								}

								if(getItemID(playerid, i) == PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]]) {
								    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
								}
							}

							if(itemIndexExists(playerid, 21)) {
								format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
							}

					        SetPVarInt(playerid, "CurrentItemPage", 1);
							ShowPlayerDialog(playerid, DIALOG_TRUNK_STORE, DIALOG_STYLE_LIST, "{FF9900}后备箱", dialogMsg, "存放", "取消");
						} else {
							SendClientMessage(playerid, COLOR_GREY, "你没有任何物品.");
						}
					}
					case 1: {
						if(GetPVarInt(playerid, "TrunkFaction") == 0) {
					    	new query[80],
					    	    vehicle = GetPVarInt(playerid, "TrunkVehicle");

					    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_trunks` WHERE `vehicle` = %i LIMIT 0, 21", VehicleInfo[vehicle][vID]);
					    	mysql_function_query(sqlHandle, query, true, "OnPlayerTrunkTakeItem", "iiii", playerid, vehicle, 1, 1);
					    } else {
					        new query[90],
					    	    vehicle = GetPVarInt(playerid, "TrunkVehicle");

					    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_faction_trunks` WHERE `vehicle` = %i LIMIT 0, 21", VehicleInfo[vehicle][vFVID]);
					    	mysql_function_query(sqlHandle, query, true, "OnPlayerTrunkTakeItem", "iiii", playerid, vehicle, 1, 1);
					    }
					}
				}
			}
		}
		case DIALOG_TRUNK_STORE: {
			if(response) {
                new page = GetPVarInt(playerid, "CurrentItemPage");
				if(listitem == 21) {
				    new pItems[22],
						dialogMsg[850];

                    getItemPage(playerid, pItems, sizeof(pItems), page + 1);
					for(new i = 0; i != sizeof(pItems); i++) {
						if(pItems[i] == 0) {
							break;
						}

						if(isnull(dialogMsg)) {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s [Ph.: %i]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iL]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/21]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/100]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s [%i/20]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s [%iML]", items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s", items[pItems[i]][itemName]);
							}
						} else {
						    if(pItems[i] >= 4 && pItems[i] <= 13) {
								format(dialogMsg, sizeof(dialogMsg), "%s\n%s [Ph.: %i]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 3) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iL]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 17) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/21]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 18) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/100]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else if(pItems[i] == 19) {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%i/20]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
                            } else if(pItems[i] == 28 || (pItems[i] >= 244 && pItems[i] <= 249)) {
			    				format(dialogMsg, sizeof(dialogMsg), "%s\n%s [%iML]", dialogMsg, items[pItems[i]][itemName], getItemVar(playerid, (20 * page) + i));
							} else {
							    format(dialogMsg, sizeof(dialogMsg), "%s\n%s", dialogMsg, items[pItems[i]][itemName]);
							}
						}

						if(PlayerInfo[playerid][pItemID][items[pItems[i]][iIdx]] == getItemID(playerid, (20 * page) + i)) {
						    format(dialogMsg, sizeof(dialogMsg), "%s (使用中)", dialogMsg);
						}
					}

					if(itemIndexExists(playerid, (page * 20) + 21)) {
						format(dialogMsg, sizeof(dialogMsg), "%s\n{FF9900}下一页 >>", dialogMsg);
					}

                    SetPVarInt(playerid, "CurrentItemPage", page + 1);
					ShowPlayerDialog(playerid, DIALOG_TRUNK_STORE, DIALOG_STYLE_LIST, "{FF9900}后备箱", dialogMsg, "存放", "取消");
				} else {
				    new query[65],
				        vehicle = GetPVarInt(playerid, "TrunkVehicle");

				    if(GetPVarInt(playerid, "TrunkFaction") == 0) {
						mysql_format(sqlHandle, query, sizeof(query), "SELECT `item` FROM `samp_trunks` WHERE `vehicle` = %i", VehicleInfo[vehicle][vID]);
					} else {
					    mysql_format(sqlHandle, query, sizeof(query), "SELECT `item` FROM `samp_faction_trunks` WHERE `vehicle` = %i", VehicleInfo[vehicle][vFVID]);
					}

					mysql_function_query(sqlHandle, query, true, "OnTrunkCheckVolume", "iiiii", playerid, getItemID(playerid, (20 * (page - 1)) + listitem), getItemType(playerid, (20 * (page - 1)) + listitem), getItemVar(playerid, (20 * (page - 1)) + listitem), vehicle);
				}
			}
		}
		case DIALOG_TRUNK_TAKE: {
			if(response) {
			    new page = GetPVarInt(playerid, "CurrentItemPage");
				if(listitem == 21) {
				    if(GetPVarInt(playerid, "TrunkFaction") == 0) {
					   	new query[80],
					   	    vehicle = GetPVarInt(playerid, "TrunkVehicle");

				    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_trunks` WHERE `vehicle` = %i LIMIT %i, 21", VehicleInfo[vehicle][vID], (20 * (page - 1)) + 21);
				    	mysql_function_query(sqlHandle, query, true, "OnPlayerTrunkTakeItem", "iiii", playerid, vehicle, GetPVarInt(playerid, "CurrentItemPage") + 1, 1);
				    } else {
				        new query[90],
				    	    vehicle = GetPVarInt(playerid, "TrunkVehicle");

				    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_faction_trunks` WHERE `vehicle` = %i LIMIT %i, 21", VehicleInfo[vehicle][vFVID], (20 * (page - 1)) + 21);
				    	mysql_function_query(sqlHandle, query, true, "OnPlayerTrunkTakeItem", "iiii", playerid, vehicle, GetPVarInt(playerid, "CurrentItemPage") + 1, 1);
				    }
				} else {
				    if(GetPVarInt(playerid, "TrunkFaction") == 0) {
					   	new query[85],
					   	    vehicle = GetPVarInt(playerid, "TrunkVehicle");

				    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var`, `id` FROM `samp_trunks` WHERE `vehicle` = %i LIMIT %i, 1", VehicleInfo[vehicle][vID], (20 * (page - 1)) + listitem);
						mysql_function_query(sqlHandle, query, true, "OnPlayerTakesItemFromTrunk", "ii", playerid, vehicle);
				    } else {
				        new query[95],
				    	    vehicle = GetPVarInt(playerid, "TrunkVehicle");

				    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var`, `id` FROM `samp_faction_trunks` WHERE `vehicle` = %i LIMIT %i, 1", VehicleInfo[vehicle][vFVID], (20 * (page - 1)) + listitem);
				    	mysql_function_query(sqlHandle, query, true, "OnPlayerTakesItemFromTrunk", "ii", playerid, vehicle);
				    }
				}
			}
		}
		case DIALOG_TRUNK_CHECK: {
		    if(response) {
			    new page = GetPVarInt(playerid, "CurrentItemPage");
				if(listitem == 21) {
				    if(GetPVarInt(playerid, "TrunkFaction") == 0) {
					   	new query[80],
					   	    vehicle = GetPVarInt(playerid, "TrunkVehicle");

				    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_trunks` WHERE `vehicle` = %i LIMIT %i, 21", VehicleInfo[vehicle][vID], (page * 20) + 21);
				    	mysql_function_query(sqlHandle, query, true, "OnPlayerCheckTrunk", "iiii", playerid, vehicle, GetPVarInt(playerid, "CurrentItemPage") + 1, 1);
				    } else {
				        new query[90],
				    	    vehicle = GetPVarInt(playerid, "TrunkVehicle");

				    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var` FROM `samp_faction_trunks` WHERE `vehicle` = %i LIMIT %i, 21", VehicleInfo[vehicle][vFVID], (page * 20) + 21);
				    	mysql_function_query(sqlHandle, query, true, "OnPlayerCheckTrunk", "iiii", playerid, vehicle, GetPVarInt(playerid, "CurrentItemPage") + 1, 1);
				    }
				} else {
				    SetPVarInt(playerid, "CheckTrunkItem", (20 * (page - 1)) + listitem);
				    ShowPlayerDialog(playerid, DIALOG_TRUNK_CHECK_ITEM, DIALOG_STYLE_LIST, "{FF9900}后备箱", "移除物品\n拿取物品", "选择", "取消");
				}
			}
		}
		case DIALOG_TRUNK_CHECK_ITEM: {
		    if(response) {
				switch(listitem) {
					case 0: {
					    new query[80],
					        vehicle = GetPVarInt(playerid, "TrunkVehicle");

					    if(GetPVarInt(playerid, "TrunkFaction") == 0) {
					   		mysql_format(sqlHandle, query, sizeof(query), "SELECT `id` FROM `samp_trunks` WHERE `vehicle` = %i LIMIT %i, 1", VehicleInfo[vehicle][vID], GetPVarInt(playerid, "CheckTrunkItem"));
						} else {
							mysql_format(sqlHandle, query, sizeof(query), "SELECT `id` FROM `samp_faction_trunks` WHERE `vehicle` = %i LIMIT %i, 1", VehicleInfo[vehicle][vFVID], GetPVarInt(playerid, "CheckTrunkItem"));
						}

						mysql_function_query(sqlHandle, query, true, "OnPlayerCheckTrunkRemoveItem", "ii", playerid, vehicle);
					}
					case 1: {
					    if(GetPVarInt(playerid, "TrunkFaction") == 0) {
						   	new query[85],
						   	    vehicle = GetPVarInt(playerid, "TrunkVehicle");

					    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var`, `id` FROM `samp_trunks` WHERE `vehicle` = %i LIMIT %i, 1", VehicleInfo[vehicle][vID], GetPVarInt(playerid, "CheckTrunkItem"));
							mysql_function_query(sqlHandle, query, true, "OnPlayerCheckTrunkTakeItem", "ii", playerid, vehicle);
					    } else {
					        new query[95],
					    	    vehicle = GetPVarInt(playerid, "TrunkVehicle");

					    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `item`, `var`, `id` FROM `samp_faction_trunks` WHERE `vehicle` = %i LIMIT %i, 1", VehicleInfo[vehicle][vFVID], GetPVarInt(playerid, "CheckTrunkItem"));
					    	mysql_function_query(sqlHandle, query, true, "OnPlayerCheckTrunkTakeItem", "ii", playerid, vehicle);
					    }
					}
				}
			}
		}
		case DIALOG_HOUSE_PRICE: {//汉化
		    if(response) {
			    if(IsNumeric(inputtext)) {
					new price = strval(inputtext);
					if(price >= GM_MIN_HOUSE_PRICE && price <= GM_MAX_HOUSE_PRICE) {
					    format(gVar3000, sizeof(gVar3000), "%s", EOS);
					    for(new i = 0; i < sizeof(houseData); i++) {
					        if(isnull(gVar3000)) {
					            format(gVar3000, sizeof(gVar3000), "%s", houseData[i][intName]);
					        } else {
					            format(gVar3000, sizeof(gVar3000), "%s\n%s", gVar3000, houseData[i][intName]);
					        }
					    }

					    HouseInfo[GetPVarInt(playerid, "CreateHouseID")][hPrice] = price;
					    ShowPlayerDialog(playerid, DIALOG_HOUSE_INTERIOR, DIALOG_STYLE_LIST, "{FF9900}创建房屋", gVar3000, "确定", "取消");
					    format(gVar3000, sizeof(gVar3000), "%s", EOS);
					} else {
					    new msg[65];
						format(msg, sizeof(msg), "服务器: 房屋价格应该在 $%i 到 $%i 之间.", GM_MIN_HOUSE_PRICE, GM_MAX_HOUSE_PRICE);
				        SendClientMessage(playerid, COLOR_LIGHTGREEN, msg);
				        ShowPlayerDialog(playerid, DIALOG_HOUSE_PRICE, DIALOG_STYLE_INPUT, "{FF9900}创建房屋", "请输入房屋价格:", "确定", "取消");
					}
			    } else {
					new msg[65];
					format(msg, sizeof(msg), "服务器: 房屋价格应该在 $%i 到 $%i 之间.", GM_MIN_HOUSE_PRICE, GM_MAX_HOUSE_PRICE);
			        SendClientMessage(playerid, COLOR_LIGHTGREEN, msg);
			        ShowPlayerDialog(playerid, DIALOG_HOUSE_PRICE, DIALOG_STYLE_INPUT, "{FF9900}创建房屋", "请输入房屋价格:", "确定", "取消");
			    }
			} else {
			    new houseID = GetPVarInt(playerid, "CreateHouseID");
			    HouseInfo[houseID][hID] = 0;
			    HouseInfo[houseID][hX] = 0;
			    HouseInfo[houseID][hY] = 0;
			    HouseInfo[houseID][hZ] = 0;
			}
		}
		case DIALOG_HOUSE_INTERIOR: {
		    if(response) {
	            new houseID = GetPVarInt(playerid, "CreateHouseID");
				HouseInfo[houseID][hInt] = listitem;
		 		HouseInfo[houseID][hMoney] = 0;
		 		HouseInfo[houseID][hLocked] = 0;
		 		ShowPlayerDialog(playerid, DIALOG_HOUSEADRESS, DIALOG_STYLE_INPUT, "{FF9900}创建房屋", "请输入房屋街区名称:", "提交", "取消");
			} else {
			    new houseID = GetPVarInt(playerid, "CreateHouseID");
			    HouseInfo[houseID][hID] = 0;
				HouseInfo[houseID][hPrice] = 0;
			    HouseInfo[houseID][hX] = 0;
			    HouseInfo[houseID][hY] = 0;
			    HouseInfo[houseID][hZ] = 0;
			}
		}
		case DIALOG_HOUSEADRESS: {
		    if(response) {
		        if(strlen(inputtext) != 0) {
		            new houseID = GetPVarInt(playerid, "CreateHouseID");
		            format(HouseInfo[houseID][hStreet], 40, "%s", inputtext);
	                ShowPlayerDialog(playerid, DIALOG_HOUSEZIP, DIALOG_STYLE_LIST, "{FF9900}创建房屋", "Fort Carson / LV - 90206\nFlint County / Angel Pine - 90207\nEntire Red County - 90208\nMullholland - 90209\
																												     \nRichman - 90210\nRodeo - 90211\nMarket / Vinewood - 90212\nSanta Maria / Verona Beach - 90213\nDowntown / \
																													 Little Tokyo - 90214\nCommerce - 90215\nEast Los Angeles - 90216\nSeville - 90217\nSouth Los Angeles - 90218", "提交", "取消");
				} else {
				    SendClientMessage(playerid, COLOR_GREY, "你必须输入一个街区名字才能进行.");
				    ShowPlayerDialog(playerid, DIALOG_HOUSEADRESS, DIALOG_STYLE_INPUT, "{FF9900}创建房屋", "请输入房屋街区名称:", "提交", "取消");
				}
		    } else {
		        new houseID = GetPVarInt(playerid, "CreateHouseID");
		        HouseInfo[houseID][hInt] = 0;
		        HouseInfo[houseID][hID] = 0;
				HouseInfo[houseID][hPrice] = 0;
			    HouseInfo[houseID][hX] = 0;
			    HouseInfo[houseID][hY] = 0;
			    HouseInfo[houseID][hZ] = 0;
		    }
		}
		case DIALOG_HOUSEZIP: {
		    if(response) {
		        new houseID = GetPVarInt(playerid, "CreateHouseID");
		  		switch(listitem) {
		            case 0: HouseInfo[houseID][hZip] = 90206;
		            case 1: HouseInfo[houseID][hZip] = 90207;
		            case 2: HouseInfo[houseID][hZip] = 90208;
		            case 3: HouseInfo[houseID][hZip] = 90209;
		            case 4: HouseInfo[houseID][hZip] = 90210;
		            case 5: HouseInfo[houseID][hZip] = 90211;
		            case 6: HouseInfo[houseID][hZip] = 90212;
		            case 7: HouseInfo[houseID][hZip] = 90213;
		            case 8: HouseInfo[houseID][hZip] = 90214;
		            case 9: HouseInfo[houseID][hZip] = 90215;
		            case 10: HouseInfo[houseID][hZip] = 90216;
		            case 11: HouseInfo[houseID][hZip] = 90217;
		            case 12: HouseInfo[houseID][hZip] = 90218;
		        }

                ShowPlayerDialog(playerid, DIALOG_HOUSETAXES, DIALOG_STYLE_INPUT, "{FF9900}创建房屋", "请输入房屋税金:", "提交", "取消");
		    } else {
		        new houseID = GetPVarInt(playerid, "CreateHouseID");
		        format(HouseInfo[houseID][hStreet], 40, "%s", EOS);
		        HouseInfo[houseID][hInt] = 0;
		        HouseInfo[houseID][hID] = 0;
				HouseInfo[houseID][hPrice] = 0;
			    HouseInfo[houseID][hX] = 0;
			    HouseInfo[houseID][hY] = 0;
			    HouseInfo[houseID][hZ] = 0;
		    }
		}
		case DIALOG_HOUSETAXES: {
			if(response) {
			    if(IsNumeric(inputtext) && strval(inputtext) > 0) {
			        HouseInfo[GetPVarInt(playerid, "CreateHouseID")][hTaxes] = strval(inputtext);
			        ShowPlayerDialog(playerid, DIALOG_HOUSENUMBER, DIALOG_STYLE_INPUT, "{FF9900}创建房屋", "请输入门面号码:", "提交", "取消");
				} else {
				    ShowPlayerDialog(playerid, DIALOG_HOUSETAXES, DIALOG_STYLE_INPUT, "{FF9900}创建房屋", "请输入房屋税金:", "提交", "取消");
				}
			} else {
			    new houseID = GetPVarInt(playerid, "CreateHouseID");
		        format(HouseInfo[houseID][hStreet], 40, "%s", EOS);
		        HouseInfo[houseID][hZip] = 0;
		        HouseInfo[houseID][hInt] = 0;
		        HouseInfo[houseID][hID] = 0;
				HouseInfo[houseID][hPrice] = 0;
			    HouseInfo[houseID][hX] = 0;
			    HouseInfo[houseID][hY] = 0;
			    HouseInfo[houseID][hZ] = 0;
			}
		}
		case DIALOG_HOUSENUMBER: {
		    if(response) {
		        if(IsNumeric(inputtext) && strval(inputtext) > 0) {
		            new houseID = GetPVarInt(playerid, "CreateHouseID"),
	                 	query[240];

					SetPVarInt(playerid, "CreateHouseID", 0);
		            HouseInfo[houseID][hHousenumber] = strval(inputtext);
		        	houseCP[houseID] = CreateDynamicCP(HouseInfo[houseID][hX], HouseInfo[houseID][hY], HouseInfo[houseID][hZ] - 1, 1.5, -1, -1, -1, 5.0);
					mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `samp_houses` (`x`, `y`, `z`, `interior`, `price`, `street`, `housenumber`, `zip`, `taxes`) \
																   VALUES (%f, %f, %f, %i, %i, '%e', %i, %i, %i)", HouseInfo[houseID][hX], HouseInfo[houseID][hY], HouseInfo[houseID][hZ],
																   HouseInfo[houseID][hInt], HouseInfo[houseID][hPrice], HouseInfo[houseID][hStreet], HouseInfo[houseID][hHousenumber],
																   HouseInfo[houseID][hZip], HouseInfo[houseID][hTaxes]);
					mysql_function_query(sqlHandle, query, false, "OnAdminCreateHouse", "ii", houseID, playerid);
				} else {
				    SendClientMessage(playerid, COLOR_GREY, "你需要输入正确的门面号码.");
				    ShowPlayerDialog(playerid, DIALOG_HOUSENUMBER, DIALOG_STYLE_INPUT, "{FF9900}创建房屋", "请输入门面号码:", "提交", "取消");
				}
		    } else {
		        new houseID = GetPVarInt(playerid, "CreateHouseID");
		        format(HouseInfo[houseID][hStreet], 40, "%s");
		        HouseInfo[houseID][hZip] = 0;
		        HouseInfo[houseID][hInt] = 0;
		        HouseInfo[houseID][hID] = 0;
				HouseInfo[houseID][hPrice] = 0;
			    HouseInfo[houseID][hX] = 0;
			    HouseInfo[houseID][hY] = 0;
			    HouseInfo[houseID][hZ] = 0;
			    HouseInfo[houseID][hTaxes] = 0;
		    }
		}
		case DIALOG_CHANGEPASS:
		{
		    if(response)
			{
		        if(strlen(inputtext) > 0)
				{
		        	new combination[250],
						hash[129];

		            strcat(combination, PlayerInfo[playerid][pSalt]);
					strcat(combination, inputtext);
					strcat(combination, GM_SCRIPT_PEPPER);
					WP_Hash(hash, 129, combination);
		        	if(!isnull(hash) && !isnull(PlayerInfo[playerid][pPassword]) && strcmp(hash, PlayerInfo[playerid][pPassword]) == 0)
					{
		        	    ShowPlayerDialog(playerid, DIALOG_CHANGEPASS_NEW, DIALOG_STYLE_PASSWORD, "{FF9900}修改密码", "请在下方输入你现在的密码:", "提交", "取消");
		        	}
					else
					{
		        	    SendClientMessage(playerid, COLOR_LIGHTRED, "警告: 密码错误.");
		        	    ShowPlayerDialog(playerid, DIALOG_CHANGEPASS, DIALOG_STYLE_PASSWORD, "{FF9900}修改密码", "请在下方输入你现在的密码:", "提交", "取消");
		        	}
		        }
				else
				{
		            SendClientMessage(playerid, COLOR_GREY, "你必须输入你现在的密码来进行.");
		            ShowPlayerDialog(playerid, DIALOG_CHANGEPASS, DIALOG_STYLE_PASSWORD, "{FF9900}修改密码", "请在下方输入你现在的密码:", "提交", "取消");
		        }
		    }
		}
		case DIALOG_CHANGEPASS_NEW: {
		    if(response) {
		        if(strlen(inputtext) > 0) {
		            new combination[250];
		            strcat(combination, PlayerInfo[playerid][pSalt]);
					strcat(combination, inputtext);
					strcat(combination, GM_SCRIPT_PEPPER);
					WP_Hash(PlayerInfo[playerid][pPassword], 129, combination);
		        	mysql_format(sqlHandle, combination, sizeof(combination), "UPDATE `samp_users` SET `password` = '%e' WHERE `user` = '%e'", PlayerInfo[playerid][pPassword], PlayerInfo[playerid][pName]);
		        	mysql_function_query(sqlHandle, combination, false, "", "");
		        	SendClientMessage(playerid, COLOR_LIGHTRED, "警告: 密码已被更改.");
		        	format(combination, sizeof(combination), "%s changed %s password.", PlayerInfo[playerid][pName], HisHer(playerid));
		        	Log(playerid, "Change Password", combination);
		        } else {
		            SendClientMessage(playerid, COLOR_GREY, "你必须输入你想要的密码来进行.");
		            ShowPlayerDialog(playerid, DIALOG_CHANGEPASS_NEW, DIALOG_STYLE_PASSWORD, "{FF9900}修改密码", "请在下方输入新的密码:", "提交", "取消");
		        }
		    }
		}
		case DIALOG_DMV: {
		    if(response) {
		        switch(listitem) {
					case 0: {
					    if(PlayerInfo[playerid][pMoney] >= 85) {
					        GivePlayerMoneyEx(playerid, -85);
						    SendClientMessage(playerid, COLOR_FADE3, "雇员说: 请出门并且进入一部车开始你的驾驶考试.");
						    SendClientMessage(playerid, COLOR_FADE3, "(( 在此之前, 你需要使用 /lock 解开车锁, 然后等待教程开始. ))");
						    SetPVarInt(playerid, "DMV", 1);
						} else {
						    SendClientMessage(playerid, COLOR_GREY, "你没有钱进行驾照考试.");
						}
					}
					case 1: {
					    SendClientMessage(playerid, COLOR_GREY, "雇员说: DMV目前无法进行出租车驾驶执照考试. 请下次再来.");
					    /*if(PlayerInfo[playerid][pMoney] >= 60) {
					        GivePlayerMoneyEx(playerid, -60);
					    	SetPVarInt(playerid, "DMV", 2);
                        } else {
						    SendClientMessage(playerid, COLOR_GREY, "You do not have enough money on you in order to take the exam for a taxi driver's license.");
						}*/
					}
					case 2: {
					    SendClientMessage(playerid, COLOR_GREY, "雇员说: DMV目前无法进行飞行驾驶执照考试. 请下次再来.");
					    /*if(PlayerInfo[playerid][pMoney] >= 9500) {
					        GivePlayerMoneyEx(playerid, -9500);
					    	SetPVarInt(playerid, "DMV", 3);
					    	for(new i = 0; i != MAX_VEHICLES; i++) {
								if(VehicleInfo[i][vType] == VEHICLE_DMV && GetVehicleModel(i) == 487) {
									SetVehicleParamsForPlayer(i, playerid, 0, 0);
								}
							}
								
					    	SendClientMessage(playerid, COLOR_FADE3, "Employee: In order to start your exam for your license, please enter the aircraft on the roof of this building, follow me ...");
					    	SetPlayerPosEx(playerid, 5, 1294.5759, -1196.2374, 65.3984, 269.9509);
                        } else {
						    SendClientMessage(playerid, COLOR_GREY, "You do not have enough money on you in order to take the exam for a pilot's license.");
						}*/
					}
				}
		    }
		}
		case DIALOG_REG_LEAVE: {
			SendClientMessage(playerid, COLOR_WHITE, "服务器: 感谢光临, 你可以在我们的网站里找到更多内容: {FF9900}www.lifengame.com");
			KickDelay(playerid);
		}
		case DIALOG_REGISTER: {
			if(response) {
			    if(strlen(inputtext) >= 4) {
			        new salt[60],
			        	size = 60,
						combination[500];
			            
                    while(size--) {
						salt[size] = random(2) ? (random(26) + (random(2) ? 'a' : 'A')) : (random(10) + '0');
					}

					strcat(combination, salt);
					strcat(combination, inputtext);
					strcat(combination, GM_SCRIPT_PEPPER);
					format(PlayerInfo[playerid][pSalt], 64, "%s", salt);
					WP_Hash(PlayerInfo[playerid][pPassword], 129, combination);//
		  			if(actToggle == 0)
					{
						mysql_format(sqlHandle, combination, sizeof(combination), "INSERT INTO `samp_users` (`user`, `password`, `salt`, `money`, `skin`, `age`, `ip`, `bank`, `health`, `armour`, `gender`, `activated`) VALUES ('%e', '%e', '%e', 400, %i, 20, '%e', 2000, 100.0, 0.0, 1, 1)", PlayerInfo[playerid][pName], PlayerInfo[playerid][pPassword], salt, GM_STD_SKIN, PlayerInfo[playerid][pIP]);
						mysql_function_query(sqlHandle, combination, false, "", "");
					} else {
					    mysql_format(sqlHandle, combination, sizeof(combination), "INSERT INTO `samp_users` (`user`, `password`, `salt`, `money`, `skin`, `age`, `ip`, `bank`, `health`, `armour`, `gender`) VALUES ('%e', '%e', '%e', 400, %i, 20, '%e', 2000, 100.0, 0.0, 1)", PlayerInfo[playerid][pName], PlayerInfo[playerid][pPassword], salt, GM_STD_SKIN, PlayerInfo[playerid][pIP]);
						mysql_function_query(sqlHandle, combination, false, "", "");
					}
					SendPlayerToCharacterCreation(playerid); // sends
			    } else {
					SendClientMessage(playerid, COLOR_GREY, "你必须选择一个至少四个字符的密码.");
					ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "{FF9900}注册", "欢迎来到 {FF9900}Los Angeles Roleplay{A9C4E4}!\n\n该用户名还没有被注册. 如果你想注册该用户名, 请在下方输入你的密码:", "提交", "离开");
				}
			} else {
			    SendClientMessage(playerid, COLOR_WHITE, "服务器: 感谢光临, 你可以在我们的网站里找到更多内容: {FF9900}www.lifengame.com");
				KickDelay(playerid);
			}
		}
	}
	
	/* --- Unchecked --- */

	if(dialogid == DIALOG_LOGIN)
	{
	    if(response) {
	        new combination[250],
				hash[129];

            strcat(combination, PlayerInfo[playerid][pSalt]);
			strcat(combination, inputtext);
			strcat(combination, GM_SCRIPT_PEPPER);
			WP_Hash(hash, 129, combination);
	        SetPVarString(playerid, "PlayerHash", hash);
	   	 	mysql_format(sqlHandle, combination, sizeof(combination), "SELECT `banned` FROM `samp_users` WHERE `user` = '%e'", PlayerInfo[playerid][pName]);
	   	 	mysql_function_query(sqlHandle, combination, true, "OnPlayerLoginBanCheck", "i", playerid);
    	} else {
		    new str[100];
		    format(str, sizeof(str), "User %s has been kicked for canceling login.", PlayerInfo[playerid][pName]);
    		Log(playerid, "Kick", str);
		    SendClientMessage(playerid, COLOR_LIGHTGREEN, "服务器: 登录取消.");
		    KickDelay(playerid);
		}
 	}
 	if(dialogid == DIALOG_SCAN + 0x0E)
    {
        if(!response)
		{
            PlayerPlaySound(playerid, 6400, 0.0, 0.0, 0.0);
		    return 0x0;
		}
	    if(response)
	    {
	        new string[128];
            if(sscanf(inputtext, "s[128]", string)) return ShowPlayerDialog(playerid, DIALOG_SCAN + 0x0E, DIALOG_STYLE_INPUT, "{FFB300}MDC {00D0FF}扫描名称", "请输入你要扫描的名字.", "确定", "取消");
			else
			{
				new query[256];
                mysql_format(sqlHandle, query, sizeof(query), "SELECT `user`, `skin`, `age`, `drivelic`, `weaponlic`, `gender` FROM `samp_users` WHERE `user` = '%e'", string);
				mysql_function_query(sqlHandle, query, true, "ShowPlayerInfo", "i", playerid);
			}
	    }
	    return 0x1;
    }
    else if(dialogid == DIALOG_SCAN + 0x0F)
    {
        if(!response)
		{
            PlayerPlaySound(playerid, 6400, 0.0, 0.0, 0.0);
		    return 0x0;
		}
	    if(response)
	    {
			new st[128];
            if(sscanf(inputtext, "s[128]", st)) return ShowPlayerDialog(playerid, DIALOG_SCAN + 0x0F, DIALOG_STYLE_INPUT, "{FFB300}MDC {00D0FF}扫描牌照", "请输入你要扫描的牌照号码.", "确定", "取消");
			else
			{
            	new query[100];
				mysql_format(sqlHandle, query, sizeof(query), "SELECT `owner`, `vehicle`, `color1`, `plate` FROM `samp_vehicles` WHERE `plate` = '%e'", st);
				mysql_function_query(sqlHandle, query, true, "ShowVehicleInfo", "i", playerid);
			}
  	    }
		return 0x1;
    }
	else if(dialogid == DIALOG_HOUSE_RADIO)
	{
	    if(response) {
			switch(listitem) {
			    case 0: {
			        switch(HouseInfo[GetPlayerVirtualWorld(playerid)][hRadio]) {
			        	case 0: {
                            new list[520];
			  				for(new i; i != sizeof(radiochannels); i++) {
								if(isnull(list)) {
									format(list, sizeof(list), "%s\n", radiochannels[i][rName]);
								} else {
		                            format(list, sizeof(list), "%s%s\n", list, radiochannels[i][rName]);
								}
							}

							ShowPlayerDialog(playerid, DIALOG_HOUSE_SELECTRADIO, DIALOG_STYLE_LIST, "{FF9900}房屋", list, "播放", "取消");
						}
						default: {
						    new vw = GetPlayerVirtualWorld(playerid),
								msg[70];
								
						    format(HouseInfo[vw][hRadio], 200, "%s", "");
							format(msg, sizeof(msg), "** > %s 将房屋电台关闭.", GetNameWithSpace(playerid, 1));
							SendClientMessage(playerid, COLOR_PINK, msg);
							strdel(msg, 3, 4);
							SetPlayerChatBubble(playerid, msg, COLOR_GREEN, 12.0, 10000);
						    foreach(new i : Player)
						    {
						        if(GetPlayerVirtualWorld(i) == vw  && GetPVarInt(i, "InHouse") == 1)
						        {
						    		StopAudioStreamForPlayer(i);
								}
							}
						}
					}
			    }
			    case 1: {
			        switch(HouseInfo[GetPlayerVirtualWorld(playerid)][hRadio]) {
			        	case 0: {
							SendClientMessage(playerid, COLOR_GREY, "电台已经被关闭了.");
          					ShowPlayerDialog(playerid, DIALOG_HOUSE_RADIO, DIALOG_STYLE_LIST, "{FF9900}房屋", "开关电台\n切换频道\n使用URL", "选择", "取消");
						}
						default: {
          					new list[520];
			  				for(new i; i != sizeof(radiochannels); i++) {
								if(isnull(list)) {
									format(list, sizeof(list), "%s\n", radiochannels[i][rName]);
								} else {
		                            format(list, sizeof(list), "%s%s\n", list, radiochannels[i][rName]);
								}
							}

							ShowPlayerDialog(playerid, DIALOG_HOUSE_SELECTRADIO, DIALOG_STYLE_LIST, "{FF9900}房屋", list, "播放", "取消");
						}
					}
			    }
			    case 2: {
			        ShowPlayerDialog(playerid, DIALOG_HOUSE_RADIOLINK, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入URL:", "提交", "取消");
			    }
			}
		}
	} else if(dialogid == DIALOG_HOUSE_SELECTRADIO) {
	    if(response) {
	        new msg[115],
				vw = GetPlayerVirtualWorld(playerid);
			
			format(msg, sizeof(msg), "** > %s 将房屋电台频道设置为 [%s].", GetNameWithSpace(playerid, 1), radiochannels[listitem][rName]);
			SendClientMessage(playerid, COLOR_PINK, msg);
			strdel(msg, 3, 4);
			SetPlayerChatBubble(playerid, msg, COLOR_GREEN, 12.0, 10000);
			format(HouseInfo[vw][hRadio], 200, radiochannels[listitem][rLink]);
   			foreach(new i : Player) {
      			if(GetPlayerVirtualWorld(i) == vw  && GetPVarInt(playerid, "InHouse") == 1) {
					PlayAudioStreamForPlayer(i, radiochannels[listitem][rLink]);
					PlayerInfo[playerid][pBoombox] = -1;
				}
			}
	    }
	} else if(dialogid == DIALOG_HOUSE_RADIOLINK) {
	    if(response) {
	        if(strlen(inputtext) > 0) {
	            new msg[70],
					vw = GetPlayerVirtualWorld(playerid);
				
				format(msg, sizeof(msg), "** > %s 将房屋电台打开.", GetNameWithSpace(playerid, 1));
				SendClientMessage(playerid, COLOR_PINK, msg);
				strdel(msg, 3, 4);
				SetPlayerChatBubble(playerid, msg, COLOR_GREEN, 12.0, 10000);
				format(HouseInfo[vw][hRadio], 200, "%s", inputtext);
	            foreach(new i : Player) {
					if(GetPlayerVirtualWorld(i) == vw  && GetPVarInt(playerid, "InHouse") == 1) {
	            		PlayAudioStreamForPlayer(i, inputtext);
	            		PlayerInfo[playerid][pBoombox] = -1;
					}
				}
	        } else {
	            SendClientMessage(playerid, COLOR_GREY, "你必须输入一个URL才能使用.");
	            ShowPlayerDialog(playerid, DIALOG_HOUSE_RADIOLINK, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入URL:", "提交", "取消");
	        }
	    }
	} else if(dialogid == DIALOG_HOUSE_MONEY) {
	    if(response) {
			new money = strval(inputtext);
			if(IsNumeric(inputtext) && !isnull(inputtext) && money > 0) {
				if(PlayerInfo[playerid][pMoney] < money) {
				    SendClientMessage(playerid, COLOR_GREY, "你没有那么多钱.");
				} else {
				    new msg[69],
						msgPlayer[47],
						query[90];

				    GivePlayerMoneyEx(playerid, -money);
					format(msg, sizeof(msg), "** %s 将一些钱存入房子内.", GetNameWithSpace(playerid, 1));
					ProxDetector(12, playerid, msg, COLOR_PINK);
					format(msgPlayer, sizeof(msgPlayer), "你将 $%i 存入进你的房子内.", money);
					SendClientMessage(playerid, COLOR_WHITE, msgPlayer);
					HouseInfo[GetPlayerVirtualWorld(playerid)][hMoney] = HouseInfo[GetPlayerVirtualWorld(playerid)][hMoney] + money;
					mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `money` = %i WHERE `id` = %i", HouseInfo[GetPlayerVirtualWorld(playerid)][hMoney], GetPlayerVirtualWorld(playerid));
					mysql_function_query(sqlHandle, query, false, "", "");
				}
			} else {
   				SendClientMessage(playerid, COLOR_GREY, "你必须输入一个正确的金额.");
			}
	    }
	} else if(dialogid == DIALOG_HOUSE_WMONEY) {
	    if(response) {
			new money = strval(inputtext);
			if(IsNumeric(inputtext) && !isnull(inputtext) && money > 0) {
				if(HouseInfo[GetPlayerVirtualWorld(playerid)][hMoney] < money){
				    SendClientMessage(playerid, COLOR_GREY, "房子里没有那么多钱.");
				} else {
				    new msg[74],
						msgPlayer[52],
						query[90];

				    GivePlayerMoneyEx(playerid, money);
					format(msg, sizeof(msg), "** %s 从房子里取出了一些钱.", GetNameWithSpace(playerid, 1));
					ProxDetector(12, playerid, msg, COLOR_PINK);

					format(msgPlayer, sizeof(msgPlayer), "你从房子里取出 $%i.", money);
					SendClientMessage(playerid, COLOR_WHITE, msgPlayer);

					HouseInfo[GetPlayerVirtualWorld(playerid)][hMoney] -= money;

					mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `money` = %i WHERE `id` = %i", HouseInfo[GetPlayerVirtualWorld(playerid)][hMoney], GetPlayerVirtualWorld(playerid));
					mysql_function_query(sqlHandle, query, false, "", "");
				}
			} else {
                SendClientMessage(playerid, COLOR_GREY, "你必须输入一个正确的金额.");
			}
	    }
	} else if(dialogid == DIALOG_HOUSE_RENTAL) {
	    if(response) {
	        switch(listitem) {
	            case 0: {
	                if(HouseInfo[GetPlayerVirtualWorld(playerid)][hRentalFee] == 0) {
					    ShowPlayerDialog(playerid, DIALOG_HOUSE_SETRENTAL, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入房屋租金:", "确定", "取消");
					} else {
					    SendClientMessage(playerid, COLOR_GREY, "此房已经开启租售了.");
					}
	            }
	            case 1: {
	                if(HouseInfo[GetPlayerVirtualWorld(playerid)][hRentalFee] == 0) {
					    SendClientMessage(playerid, COLOR_GREY, "此房还没有开启租售.");
					} else {
					    foreach(new i : Player) {
					        if(PlayerInfo[i][pRentHouse] == GetPlayerVirtualWorld(playerid)) {
					            PlayerInfo[i][pRentHouse] = 0;
					        }
					    }

					    new vw = GetPlayerVirtualWorld(playerid),
					        query[70];
					        
						HouseInfo[vw][hRentalFee] = 0;
			    		mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_houses` SET `rentalfee` = 0 WHERE `id` = %i", vw);
						mysql_function_query(sqlHandle, query, false, "", "");
					    SendClientMessage(playerid, COLOR_WHITE, "你关闭了房屋租赁, 所有租客将从即日起被逐出该房屋.");
					}
	            }
	            case 2: {
	                new query[65];
	                mysql_format(sqlHandle, query, sizeof(query), "SELECT `user` FROM `samp_users` WHERE `renthouse` = %i", GetPlayerVirtualWorld(playerid));
	                mysql_function_query(sqlHandle, query, true, "OnPlayerViewsRenters", "i", playerid);
	            }
	            case 3: {
	                if(HouseInfo[GetPlayerVirtualWorld(playerid)][hRentalFee] != 0) {
	                	ShowPlayerDialog(playerid, DIALOG_HOUSE_SETRENTALFEE, DIALOG_STYLE_INPUT, "{FF9900}房屋", "请输入房屋租金:", "确定", "取消");
					} else {
					    SendClientMessage(playerid, COLOR_GREY, "你需要先开启房屋租赁, 才能设置租金.");
					}
	            }
	        }
	    }
	}
	else if(dialogid == DIALOG_HOUSE_SETRENTAL)
	{
	    if(response)
	    {
			new fee = strval(inputtext);
			if(fee > GM_MAX_RENTALFEE || fee < GM_MIN_RENTALFEE)
			{
				new msg[60];
			    format(msg, sizeof(msg), "租费需要在 $%i 到 $%i 之间.", GM_MIN_RENTALFEE, GM_MAX_RENTALFEE);
			    SendClientMessage(playerid, COLOR_GREY, msg);
			}
			else
			{
			    new vw = GetPlayerVirtualWorld(playerid),
					msg[80];
					
			    mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_houses` SET `rentalfee` = %i WHERE `id` = %i", fee, vw);
				mysql_function_query(sqlHandle, msg, false, "", "");
			    HouseInfo[vw][hRentalFee] = fee;
			    format(msg, sizeof(msg), "你开始租售你的房屋, 租费 $%i.", fee);
			    SendClientMessage(playerid, COLOR_WHITE, msg);
			}
	    }
	}
	else if(dialogid == DIALOG_HOUSE_SETRENTALFEE)
	{
		if(response)
	    {
			new fee = strval(inputtext);
			if(fee > GM_MAX_RENTALFEE || fee < GM_MIN_RENTALFEE)
			{
				new msg[60];
			    format(msg, sizeof(msg), "租费需要在 $%i 到 $%i 之间.", GM_MIN_RENTALFEE, GM_MAX_RENTALFEE);
			    SendClientMessage(playerid, COLOR_GREY, msg);
			}
			else
			{
			    new vw = GetPlayerVirtualWorld(playerid),
					msg[90];
					
			    mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_houses` SET `rentalfee` = %i WHERE `id` = %i", fee, vw);
				mysql_function_query(sqlHandle, msg, false, "", "");
			    HouseInfo[vw][hRentalFee] = fee;
			    format(msg, sizeof(msg), "租费被设置为 $%i.", fee);
			    SendClientMessage(playerid, COLOR_WHITE, msg);
			}
	    }
	}
	else if(dialogid == DIALOG_HOUSE_RENTERS)
	{
	    if(response)
	    {
	        new msg[90], player, name[MAX_PLAYER_NAME], pos;
	        format(name, sizeof(name), "%s", renters[GetPlayerVirtualWorld(playerid)][listitem]);
	        pos = strfind(name, " ");
	        name[pos] = '_';
			player = GetPlayerID(name);
            if(IsPlayerConnected(player))
			{
				PlayerInfo[player][pRentHouse] = 0;
			}
			
            mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_users` SET `renthouse` = 0 WHERE `user` = '%e'", name);
			mysql_function_query(sqlHandle, msg, false, "", "");
            format(msg, sizeof(msg), "租客 %s 被你从房子内租出.", GetNameWithSpaceEx(name));
            SendClientMessage(playerid, COLOR_WHITE, msg);
	    }
	} else if(dialogid == DIALOG_SIREN) {
	    if(response) {
			switch(listitem)
			{
			    case 0:
				{
			        new vehicleid = GetPlayerVehicleID(playerid), model = GetVehicleModel(vehicleid), msg[104];
	        		format(msg, sizeof(msg), "** %s 伸手拿起一个警灯并且将它放置在车顶.", GetNameWithSpace(playerid, 1));
	        		ProxDetector(12, playerid, msg, COLOR_PINK);
			        if(model == 560)
					{
			        	VehicleInfo[vehicleid][vSiren] = CreateDynamicObject(18646, -0.35644531250, 0.0388183593, 0.863788605, 0.0, 0.0, 96.0);
						AttachDynamicObjectToVehicle(VehicleInfo[vehicleid][vSiren], vehicleid, -0.45644531250, 0.1388183593, 0.863788605, 0.0, 0.0, 0.0);
					}
					else if(model == 579)
					{
					    VehicleInfo[vehicleid][vSiren] = CreateDynamicObject(18646, -0.35644531250, 0.0388183593, 0.863788605, 0.0, 0.0, 96.0);
						AttachDynamicObjectToVehicle(VehicleInfo[vehicleid][vSiren], vehicleid, -0.55644531250, -0.0388183593, 1.263788605, 0.0, 0.0, 0.0);
					}
					else if(model == 426)
					{
					    VehicleInfo[vehicleid][vSiren] = CreateDynamicObject(18646, -0.35644531250, 0.0388183593, 0.863788605, 0.0, 0.0, 96.0);
						AttachDynamicObjectToVehicle(VehicleInfo[vehicleid][vSiren], vehicleid, -0.55644531250, 0.0588183593, 0.863788605, 0.0, 0.0, 0.0);
					}
			    }
			    case 1:
				{
     				new vehicleid = GetPlayerVehicleID(playerid), model = GetVehicleModel(vehicleid), msg[109];
	        		format(msg, sizeof(msg), "** %s 伸手拿起一个警灯并且将它放置在车内.", GetNameWithSpace(playerid, 1));
	        		ProxDetector(12, playerid, msg, COLOR_PINK);
			        if(model == 560)
					{
			            VehicleInfo[vehicleid][vSiren] = CreateDynamicObject(18646, 0.398071289, 0.75390625, 0.43879509, 0.0, 0.0, 96.0);
						AttachDynamicObjectToVehicle(VehicleInfo[vehicleid][vSiren], vehicleid, 0, 0.75390625, 0.43879509, 0.0, 0.0, 0.0);
					}
					else if(model == 579)
					{
					    VehicleInfo[vehicleid][vSiren] = CreateDynamicObject(18646, 0.398071289, 0.75390625, 0.43879509, 0.0, 0.0, 96.0);
						AttachDynamicObjectToVehicle(VehicleInfo[vehicleid][vSiren], vehicleid, 0, 0.47390625, 0.63879509, 0.0, 0.0, 0.0);
					}
					else if(model == 426)
					{
					    VehicleInfo[vehicleid][vSiren] = CreateDynamicObject(18646, 0.398071289, 0.75390625, 0.43879509, 0.0, 0.0, 96.0);
						AttachDynamicObjectToVehicle(VehicleInfo[vehicleid][vSiren], vehicleid, 0, 0.65390625, 0.38879509, 0.0, 0.0, 0.0);
					}
			    }
			}
	    }
	} else if(dialogid == DIALOG_BUSINESS_MONEY) {
	    if(response) {
			new money = strval(inputtext);
			if(IsNumeric(inputtext) && !isnull(inputtext) && money > 0) {
				if(PlayerInfo[playerid][pMoney] < money) {
				    SendClientMessage(playerid, COLOR_GREY, "你没有那么多钱.");
				} else {
				    new msg[90],
						vw = GetPlayerVirtualWorld(playerid);

				    GivePlayerMoneyEx(playerid, -money);
					format(msg, sizeof(msg), "** %s 将一些钱存入产业内.", GetNameWithSpace(playerid, 1));
					ProxDetector(12, playerid, msg, COLOR_PINK);
					format(msg, sizeof(msg), "你存入了 $%i 进你的产业内.", money);
					SendClientMessage(playerid, COLOR_WHITE, msg);
					BusinessInfo[vw][bMoney] += money;
					mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_businesses` SET `money` = %i WHERE `id` = %i", BusinessInfo[vw][bMoney], vw);
					mysql_function_query(sqlHandle, msg, false, "", "");
				}
            } else {
				SendClientMessage(playerid, COLOR_GREY, "你需要输入正确的数字.");
			}
	    }
	} else if(dialogid == DIALOG_BUSINESS_WMONEY) {
	    if(response) {
			new money = strval(inputtext);
			if(IsNumeric(inputtext) && !isnull(inputtext) && money > 0) {
				if(BusinessInfo[GetPlayerVirtualWorld(playerid)][bMoney] < money) {
				    SendClientMessage(playerid, COLOR_GREY, "你产业内没有那么多钱.");
				} else {
				    new msg[90],
						vw = GetPlayerVirtualWorld(playerid);

				    GivePlayerMoneyEx(playerid, money);
					format(msg, sizeof(msg), "** %s 从产业内取出一些钱.", GetNameWithSpace(playerid, 1));
					ProxDetector(12, playerid, msg, COLOR_PINK);
					format(msg, sizeof(msg), "你从产业内取出了 $%i.", money);
					SendClientMessage(playerid, COLOR_WHITE, msg);
					BusinessInfo[vw][bMoney] -= money;
					mysql_format(sqlHandle, msg, sizeof(msg), "UPDATE `samp_businesses` SET `money` = %i WHERE `id` = %i", BusinessInfo[vw][bMoney], vw);
					mysql_function_query(sqlHandle, msg, false, "", "");
				}
			} else {
				SendClientMessage(playerid, COLOR_GREY, "你需要输入正确的数字.");
			}
	    }
	} else if(dialogid == DIALOG_CAR_RADIO) {
	    if(response) {
			switch(listitem) {
          		case 0: {
			        switch(VehicleInfo[GetPlayerVehicleID(playerid)][vRadio]) {
			        	case 0: {
		  					new list[520];
		  					for(new i; i != sizeof(radiochannels); i++) {
								if(isnull(list)) {
									format(list, sizeof(list), "%s\n", radiochannels[i][rName]);
								} else {
                                    format(list, sizeof(list), "%s%s\n", list, radiochannels[i][rName]);
								}
							}

							ShowPlayerDialog(playerid, DIALOG_CAR_SELECTRADIO, DIALOG_STYLE_LIST, "{FF9900}载具", list, "播放", "取消");
						}
						default: {
						    new veh = GetPlayerVehicleID(playerid),
								msg[65];
								
						    format(VehicleInfo[veh][vRadio], 200, "%s", EOS);
                            format(msg, sizeof(msg), "** > %s 将车载电台关闭.", GetNameWithSpace(playerid, 1));
							SendClientMessage(playerid, COLOR_PINK, msg);
							strdel(msg, 3, 4);
							SetPlayerChatBubble(playerid, msg, COLOR_GREEN, 12.0, 10000);
						    foreach(new i : Player) {
						        if(GetPlayerVehicleID(i) == veh) {
						    		StopAudioStreamForPlayer(i);
								}
							}
						}
					}
			    }
       			case 1: {
                    switch(VehicleInfo[GetPlayerVehicleID(playerid)][vRadio]) {
			        	case 0: {
							SendClientMessage(playerid, COLOR_GREY, "车载电台已被关闭了.");
							ShowPlayerDialog(playerid, DIALOG_CAR_RADIO, DIALOG_STYLE_LIST, "{FF9900}载具", "开关电台\n切换频道\n使用外部URL", "确定", "取消");
						}
						default: {
						    new list[520];
		  					for(new i; i != sizeof(radiochannels); i++) {
								if(isnull(list)) {
									format(list, sizeof(list), "%s\n", radiochannels[i][rName]);
								} else {
                                    format(list, sizeof(list), "%s%s\n", list, radiochannels[i][rName]);
								}
							}

						    ShowPlayerDialog(playerid, DIALOG_CAR_SELECTRADIO, DIALOG_STYLE_LIST, "{FF9900}载具", list, "播放", "取消");
						}
					}
				}
			    case 2: {
			        ShowPlayerDialog(playerid, DIALOG_CAR_RADIOLINK, DIALOG_STYLE_INPUT, "{FF9900}载具", "请输入URL:", "确定", "取消");
			    }
			}
	    }
	} else if(dialogid == DIALOG_CAR_SELECTRADIO) {
	    if(response) {
	        new msg[115],
				veh = GetPlayerVehicleID(playerid);

			if(veh == 0) return SendClientMessage(playerid, COLOR_GREY, "你需要在一台车内.");
			format(msg, sizeof(msg), "** > %s 将车载电台频道设置为 [%s].", GetNameWithSpace(playerid, 1), radiochannels[listitem][rName]);
			SendClientMessage(playerid, COLOR_GREEN, msg);
			strdel(msg, 3, 4);
			SetPlayerChatBubble(playerid, msg, COLOR_PINK, 12.0, 10000);
			format(VehicleInfo[veh][vRadio], 200, radiochannels[listitem][rLink]);
			foreach(new i : Player) {
				if(IsPlayerInAnyVehicle(i) && GetPlayerVehicleID(i) == veh) {
					PlayAudioStreamForPlayer(i, radiochannels[listitem][rLink]);
					PlayerInfo[playerid][pBoombox] = -1;
				}
	        }
	    }
	} else if(dialogid == DIALOG_CAR_RADIOLINK) {
	    if(response) {
	        if(strlen(inputtext) > 0) {
	            new msg[65],
					veh = GetPlayerVehicleID(playerid);
					
				format(msg, sizeof(msg), "** > %s 将车载电台打开.", GetNameWithSpace(playerid, 1));
				SendClientMessage(playerid, COLOR_GREEN, msg);
				strdel(msg, 3, 4);
				SetPlayerChatBubble(playerid, msg, COLOR_PINK, 12.0, 10000);
				format(VehicleInfo[veh][vRadio], 200, "%s", inputtext);
	            foreach(new i : Player) {
					if(GetPlayerVehicleID(i) == veh) {
	            		PlayAudioStreamForPlayer(i, inputtext);
	            		PlayerInfo[playerid][pBoombox] = -1;
					}
				}
	        } else {
	            SendClientMessage(playerid, COLOR_GREY, "你需要输入一个外部链接.");
	            ShowPlayerDialog(playerid, DIALOG_CAR_RADIOLINK, DIALOG_STYLE_INPUT, "{FF9900}载具", "请输入正确的URL:", "提交", "取消");
	        }
	    }
	} else if(dialogid == DIALOG_FILL) {
	    if(response) {
	        if(strlen(inputtext) > 0 && IsNumeric(inputtext) && strval(inputtext) > 0) {
	            new vehicle = GetPlayerVehicleID(playerid),
	                model = GetVehicleModel(vehicle);
	                
	            if(VehicleInfo[vehicle][vFuel] + strval(inputtext) <= vehicleData[model - 400][tank])
				{
	                if(PlayerInfo[playerid][pFaction] == 1 && IsPlayerInRangeOfPoint(playerid, 15, 1584.1018,-1674.7207,5.9000)) {
	                    new msg[75],
	                        fuel = strval(inputtext);
	                    format(msg, sizeof(msg), "** 你的载具正在填装 %i 升汽油.", fuel);
					    SendClientMessage(playerid, COLOR_WHITE, msg);
					    VehicleInfo[vehicle][vFuel] += fuel;
 						PlayerTextDrawHide(playerid, TD_SM_Fuel_Value);
 		                format(msg, sizeof(msg), "%i/%i", VehicleInfo[vehicle][vFuel],vehicleData[model-400][tank]);
						PlayerTextDrawSetString(playerid, TD_SM_Fuel_Value, msg);
						PlayerTextDrawShow(playerid, TD_SM_Fuel_Value);
		                UnfreezeTimerVar[playerid] = SetTimerEx("UnfreezeTimer", 10000, false, "d", playerid);
						GameTextForPlayer(playerid, "~g~Refilling...", 10000, 6);
						FreezePlayer(playerid);
	                }
					else if(PlayerInfo[playerid][pMoney] - (strval(inputtext) * GM_GASPRICE) >= 0 || PlayerInfo[playerid][pDonateRank] != 0)
					{
					    new msg[75],
					        fuel = strval(inputtext);
					        
					    if(PlayerInfo[playerid][pDonateRank] == 0)
					    {
					    	format(msg, sizeof(msg), "** 你的载具正在填装 %i 升汽油, 花费 $%i.", fuel, fuel * GM_GASPRICE);
					    	SendClientMessage(playerid, COLOR_WHITE, msg);
					    	GivePlayerMoneyEx(playerid, -(strval(inputtext)*GM_GASPRICE));
						}
						else
						{
						    format(msg, sizeof(msg), "** 你的载具正在填装 %i 升汽油, 花费 $0. ((由于你是捐赠用户, 此次免费))", fuel);
					    	SendClientMessage(playerid, COLOR_WHITE, msg);
						}
					    VehicleInfo[vehicle][vFuel] += fuel;
 						PlayerTextDrawHide(playerid, TD_SM_Fuel_Value);
 		                format(msg, sizeof(msg), "%i/%i", VehicleInfo[vehicle][vFuel],vehicleData[model-400][tank]);
						PlayerTextDrawSetString(playerid, TD_SM_Fuel_Value, msg);
						PlayerTextDrawShow(playerid, TD_SM_Fuel_Value);
		                UnfreezeTimerVar[playerid] = SetTimerEx("UnfreezeTimer", 10000, false, "d", playerid);
						GameTextForPlayer(playerid, "~g~Refilling...", 10000, 6);
						FreezePlayer(playerid);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "你没有钱购买这么多汽油.");
	            		ShowPlayerDialog(playerid, DIALOG_FILL, DIALOG_STYLE_INPUT, "{FF9900}加油站", "你想加多少升的汽油?", "确定", "取消");
					}
	            } else {
	                new msg[60];
	                format(msg, sizeof(msg), "你的载具无法承受超过 %i 升的汽油.", vehicleData[model - 400][tank]);
	                SendClientMessage(playerid, COLOR_GREY, msg);
	            	ShowPlayerDialog(playerid, DIALOG_FILL, DIALOG_STYLE_INPUT, "{FF9900}加油站", "你想加多少升的汽油?", "确定", "取消");
	            }
	        } else {
	            ShowPlayerDialog(playerid, DIALOG_FILL, DIALOG_STYLE_INPUT, "{FF9900}加油站", "你想加多少升的汽油?", "确定", "取消");
	        }
	    }
	}
	/*else if(dialogid == DIALOG_LAPD_MDC)
	{
	    if(response)
	    {
			switch(listitem)
			{
			    case 0: // View Citations
			    {

			        new query[140];
			    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `user`, `reason`, `charge`, `date`, `issuer`, `agency`, `timestamp` FROM `samp_tickets` WHERE `user` = '%e'", PlayerInfo[PlayerInfo[playerid][pSearchID]][pName]);
					mysql_function_query(sqlHandle, query, true, "OnCommandLAPDViewCitations", "i", playerid);
			    }
			    case 2: // View Warrants
			    {

			        new query[140];
			    	mysql_format(sqlHandle, query, sizeof(query), "SELECT `user`, `reason`, `date`, `issuer`, `agency`, `timestamp` FROM `samp_warrants` WHERE `user` = '%e'", PlayerInfo[PlayerInfo[playerid][pSearchID]][pName]);
					mysql_function_query(sqlHandle, query, true, "OnCommandLAPDViewWarrants", "i", playerid);
			    }
			}
	    }
	}*/
	else if(dialogid == DIALOG_MDC_NAME)
	{
	    if(response)
		{
	        if(strlen(inputtext) != 0 && strlen(inputtext) <= 25)
			{
	            new id = GetPlayerID(inputtext);
	            if(id != -1)
				{
	                SetPVarString(playerid, "MDCCheck", inputtext);
	                ShowPlayerDialog(playerid, DIALOG_MDC_INFO, DIALOG_STYLE_LIST, "{FF9900}LAPD", "个人信息\n资产信息\n犯罪案底\n登出", "选择", "取消");
	            }
				else
				{
	                new query[80];
	                mysql_format(sqlHandle, query, sizeof(query), "SELECT NULL FROM `samp_users` WHERE `user` = '%e'", inputtext);
	                mysql_function_query(sqlHandle, query, true, "OnPlayerMDCSearchName", "is", playerid, inputtext);
	            }
	        }
			else
			{
	            SendClientMessage(playerid, COLOR_GREY, "你需要输入一个名称.");
	            ShowPlayerDialog(playerid, DIALOG_MDC_NAME, DIALOG_STYLE_INPUT, "{FF9900}LAPD", "请输入市民名称进行查看:", "提交", "取消");
	        }
	    }
	}
	else if(dialogid == DIALOG_MDC_INFO)//全新的 /mdc里的搜索名称
	{
	    if(response)
	    {
			switch(listitem)
			{
			    case 0:
			    {
			        new string[128], query[256];
			        if(!response)
					{
		            	PlayerPlaySound(playerid, 6400, 0.0, 0.0, 0.0);
					}
				    else
				    {
	            		if(sscanf(inputtext, "s[128]", string)) return ShowPlayerDialog(playerid, DIALOG_SCAN_NAME, DIALOG_STYLE_INPUT, "搜索名称", "请输入一个名称:" ,"确定", "取消");
						else
						{
			                mysql_format(sqlHandle, query, sizeof(query), "SELECT `user`, `age`, `drivelic`, `weaponlic`, `gender` FROM `samp_users` WHERE `user` = '%e'", string);
							mysql_function_query(sqlHandle, query, true, "ScanNameResult", "i", playerid);
						}
		    		}
			    }
			    case 1:
			    {
					// House and Building Information
			    }
			    case 2:
			    {
					// Criminal Record
			    }
			    case 3:
			    {
			        SetPVarString(playerid, "MDCCheck", "None");
			        SendClientMessage(playerid, COLOR_GREY, "你登出了MDC.");
	    		}
	    	}
		}
	}
	else if(dialogid == DIALOG_WALKSTYLE_CHOOSE) {
	    if(response) {
	        PlayerInfo[playerid][pWalkstyle] = listitem;
	        switch(listitem) {
	            case 0: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将行走风格设置为 'Default'.");
	            }
	            case 1: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将行走风格设置为 '帮派成员1'.");
	            }
	            case 2: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将行走风格设置为 '胖乎乎的'.");
	            }
	            case 3: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将行走风格设置为 '正常的'.");
	            }
	            case 4: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将行走风格设置为 '年迈的'.");
	            }
	            case 5: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将行走风格设置为 '帮派成员2'.");
	            }
	            case 6: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将行走风格设置为 '普通'.");
	            }
	            case 7: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将行走风格设置为 '女性化'.");
	            }
 				case 8: {
                 	SendClientMessage(playerid, COLOR_WHITE, "你将行走风格设置为 '性感的'.");
	            }
	        }
	    }
	} else if(dialogid == DIALOG_CHATSTYLE_CHOOSE) {
	    if(response) {
	        PlayerInfo[playerid][pChatstyle] = listitem;
	        switch(listitem) {
	            case 0: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将谈话风格设置为 'Default'.");
	            }
	            case 1: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将谈话风格设置为 'Chatstyle 1'.");
	            }
	            case 2: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将谈话风格设置为 'Chatstyle 2'.");
	            }
	            case 3: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将谈话风格设置为 'Chatstyle 3'.");
	            }
	            case 4: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将谈话风格设置为 'Chatstyle 4'.");
	            }
	            case 5: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将谈话风格设置为 'Chatstyle 5'.");
	            }
	            case 6: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将谈话风格设置为 'Chatstyle 6'.");
	            }
	            case 7: {
	                SendClientMessage(playerid, COLOR_WHITE, "你将谈话风格设置为 'Chatstyle 7'.");
	            }
	            case 8: {
                 	SendClientMessage(playerid, COLOR_WHITE, "你将谈话风格设置为 'Chatstyle 8'.");
	            }
	        }
	    }
	} else if(dialogid == DIALOG_STAFFLOGIN)
	{
	    if(response)
	    {
	        if(strlen(inputtext) > 0)
	        {
	            new hash[129];
	       		WP_Hash(hash, sizeof(hash), inputtext);
	            if(strcmp(hash, PlayerInfo[playerid][pStaffPassword]) == 0)
	            {
	                new msg[60];
	                format(msg, sizeof(msg), "*** %s 成功登入到工作账户.", GetNameWithSpace(playerid));
  					SendMessageToAdmins(msg);
					SetPVarInt(playerid, "StaffLogin", 1);
	            }
	            else
	            {
	                if(GetPVarInt(playerid, "StaffLogAttempts") < 3)
	                {
	                    ShowPlayerDialog(playerid, DIALOG_STAFFLOGIN, DIALOG_STYLE_PASSWORD, "{FF9900}工作账户登录", "请输入你的工作组密码:", "登录", "取消");
	                	SetPVarInt(playerid, "StaffLogAttempts", GetPVarInt(playerid, "StaffLogAttempts")+1);
	                	SendClientMessage(playerid, COLOR_LIGHTRED, "警告: 密码错误.");
					}
					else
					{
					    new msg[100];
					    format(msg, sizeof(msg), "*** %s 尝试登录工作组失败 - IP: %s.", GetNameWithSpace(playerid), PlayerInfo[playerid][pIP]);
					    AdminMessageLog(msg, playerid, "Staff Login Failed");
					    KickDelay(playerid);
					}
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "你必须要输入密码以确认自己是工作人员.");
	            ShowPlayerDialog(playerid, DIALOG_STAFFLOGIN, DIALOG_STYLE_INPUT, "{FF9900}工作账户登录", "请输入你的工作组密码:", "登录", "取消");
	        }
	    }
	} else if(dialogid == DIALOG_CREATESTAFFLOGIN) {
	    if(response) {
	        if(strlen(inputtext) != 0) {
	            new hash[129];
	       		WP_Hash(hash, sizeof(hash), inputtext);
	       		if(strcmp(hash, PlayerInfo[playerid][pPassword]) != 0) {
	       		    new query[225];
	       		    format(PlayerInfo[playerid][pStaffPassword], 129, "%s", hash);
	       		    SetPVarInt(playerid, "StaffLogin", 1);
	       		    SendClientMessage(playerid, COLOR_LIGHTGREEN, "工作账户创建成功, 你现在已经自动登录了.");
	       		    mysql_format(sqlHandle, query, sizeof(query), "UPDATE `samp_users` SET `staffpassword` = '%e' WHERE `user` = '%e'", hash, PlayerInfo[playerid][pName]);
	       		    mysql_function_query(sqlHandle, query, false, "", "");
	       		} else {
	       		    SendClientMessage(playerid, COLOR_GREY, "你必须输入一个密码不同于您现在的帐户密码.");
	       		    ShowPlayerDialog(playerid, DIALOG_CREATESTAFFLOGIN, DIALOG_STYLE_PASSWORD, "{FF9900}工作账户登录", "你还没有工作账户, 请输入新的密码:", "确定", "取消");
	       		}
	        } else {
	            SendClientMessage(playerid, COLOR_GREY, "你需要输入一个密码.");
	    		ShowPlayerDialog(playerid, DIALOG_CREATESTAFFLOGIN, DIALOG_STYLE_PASSWORD, "{FF9900}工作账户登录", "你还没有工作账户, 请输入新的密码:", "确定", "取消");
			}
		}
	} else if(dialogid == DIALOG_PDROADBLOCK) {
		if(response) {
		    new Float:X, Float:Y, Float:Z, Float:angle;
		    GetPlayerPos(playerid, X, Y, Z);
		    GetPlayerFacingAngle(playerid, angle);

			switch(listitem) {
				case 0: {
				    if(PlayerInfo[playerid][pFaction] == 1) {
	                    for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eRoadblocks[i][objectID] == 0) {
								eRoadblocks[i][objectID] = CreateDynamicObject(1423, X, Y, Z - 0.31, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
					} else if(PlayerInfo[playerid][pFaction] == 2) {
                        for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eFDRoadblocks[i][objectID] == 0) {
								eFDRoadblocks[i][objectID] = CreateDynamicObject(1423, X, Y, Z - 0.31, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
					}
				}
				case 1: {
				    if(PlayerInfo[playerid][pFaction] == 1) {
					    for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eRoadblocks[i][objectID] == 0) {
								eRoadblocks[i][objectID] = CreateDynamicObject(1424, X, Y, Z - 0.46, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
                    } else if(PlayerInfo[playerid][pFaction] == 2) {
                        for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eFDRoadblocks[i][objectID] == 0) {
								eFDRoadblocks[i][objectID] = CreateDynamicObject(1423, X, Y, Z - 0.31, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
					}
				}
				case 2: {
				    if(PlayerInfo[playerid][pFaction] == 1) {
					    for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eRoadblocks[i][objectID] == 0) {
								eRoadblocks[i][objectID] = CreateDynamicObject(1425, X, Y, Z - 0.52, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
                    } else if(PlayerInfo[playerid][pFaction] == 2) {
                        for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eFDRoadblocks[i][objectID] == 0) {
								eFDRoadblocks[i][objectID] = CreateDynamicObject(1423, X, Y, Z - 0.31, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
					}
				}
				case 3: {
				    if(PlayerInfo[playerid][pFaction] == 1) {
					    for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eRoadblocks[i][objectID] == 0) {
								eRoadblocks[i][objectID] = CreateDynamicObject(1427, X, Y, Z - 0.45, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
                    } else if(PlayerInfo[playerid][pFaction] == 2) {
                        for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eFDRoadblocks[i][objectID] == 0) {
								eFDRoadblocks[i][objectID] = CreateDynamicObject(1423, X, Y, Z - 0.31, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
					}
				}
				case 4: {
				    if(PlayerInfo[playerid][pFaction] == 1) {
					    for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eRoadblocks[i][objectID] == 0) {
								eRoadblocks[i][objectID] = CreateDynamicObject(1459, X, Y, Z - 0.44, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
                    } else if(PlayerInfo[playerid][pFaction] == 2) {
                        for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eFDRoadblocks[i][objectID] == 0) {
								eFDRoadblocks[i][objectID] = CreateDynamicObject(1423, X, Y, Z - 0.31, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
					}
				}
				case 5: {
				    if(PlayerInfo[playerid][pFaction] == 1) {
					    for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eRoadblocks[i][objectID] == 0) {
								eRoadblocks[i][objectID] = CreateDynamicObject(1237, X, Y, Z - 1.25, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
                    } else if(PlayerInfo[playerid][pFaction] == 2) {
                        for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eFDRoadblocks[i][objectID] == 0) {
								eFDRoadblocks[i][objectID] = CreateDynamicObject(1423, X, Y, Z - 0.31, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
					}
				}
				case 6: {
				    if(PlayerInfo[playerid][pFaction] == 1) {
					    for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eRoadblocks[i][objectID] == 0) {
								eRoadblocks[i][objectID] = CreateDynamicObject(978, X, Y, Z - 0.35, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
                    } else if(PlayerInfo[playerid][pFaction] == 2) {
                        for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eFDRoadblocks[i][objectID] == 0) {
								eFDRoadblocks[i][objectID] = CreateDynamicObject(1423, X, Y, Z - 0.31, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
					}
				}
				case 7:
				{
				    if(PlayerInfo[playerid][pFaction] == 1) {
					    for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eRoadblocks[i][objectID] == 0) {
								eRoadblocks[i][objectID] = CreateDynamicObject(1238, X, Y, Z - 0.7, 0, 0, angle);
                    			EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
                    } else if(PlayerInfo[playerid][pFaction] == 2) {
                        for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eFDRoadblocks[i][objectID] == 0) {
								eFDRoadblocks[i][objectID] = CreateDynamicObject(1423, X, Y, Z - 0.31, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
					}
				}
				case 8:
				{
				    if(PlayerInfo[playerid][pFaction] == 1) {
					    for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eRoadblocks[i][objectID] == 0) {
								eRoadblocks[i][objectID] = CreateDynamicObject(19944, X, Y, Z, 0, 0, angle);
								EditDynamicObject(playerid, eRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
                    } else if(PlayerInfo[playerid][pFaction] == 2) {
                        for(new i = 0; i != MAX_ROADBLOCKS; i++) {
	                        if(eFDRoadblocks[i][objectID] == 0) {
								eFDRoadblocks[i][objectID] = CreateDynamicObject(19944, X, Y, Z, 0, 0, angle);
								EditDynamicObject(playerid, eFDRoadblocks[i][objectID]);
								SetPVarInt(playerid, "ROADBLOCK_EDIT", 1);
								return 1;
							}
						}
					}
				}
			}

			SendClientMessage(playerid, COLOR_GREY, "已经达到最大障碍物数量.");
		}
	}
	else if(dialogid == DIALOG_LOTTERY && !response)
	{
	    DisplayLottery(playerid);
	    for(new i = 0; i <= 2; i++) PlayerInfo[playerid][PNumbers][i] = 0;
	    GivePlayerMoneyEx(playerid, -10);
	}
	else if(dialogid == DIALOG_ADMIN_GUIDE && response)
	{
		PlayerInfo[playerid][pAdminGuide]++;
		if(PlayerInfo[playerid][pAdminGuide] == 4) return SendClientMessage(playerid, COLOR_GREY, "你没有权限查看该指令.");
        ShowPlayerDialog(playerid, DIALOG_ADMIN_GUIDE, DIALOG_STYLE_MSGBOX, "管理员指令", GetHelpDialog(PlayerInfo[playerid][pAdminGuide], playerid), "下一页", "关闭");
	}
	else if(dialogid == DIALOG_SHOW_LOCATIONS && response)
	{
		new message[150];
	    format(message, 150, "%s %s{FFFFFF} 将地点 {FF6347}%s{FFFFFF} 标记在你的地图上.", PlayerInfo[playerid][pAdminlevel] == 0? ("测试员{6f1919}") : ("管理员{4e6c82}"), GetNameWithSpace(playerid),Locs[listitem][locName]);
	    SendClientMessage(PlayerInfo[playerid][pShowtheway_ID], -1, message);
        format(message, 150, "你成功将地点 {FF6347}%s{FFFFFF} 标记在 {FF6347}%s{FFFFFF} 的地图上.",Locs[listitem][locName], GetNameWithSpace(PlayerInfo[playerid][pShowtheway_ID]));
	    SendClientMessage(playerid, -1, message);
	    SendClientMessage(PlayerInfo[playerid][pShowtheway_ID], -1, "你可以使用 {FF6347}/removecp{FFFFFF} 移除红点.");
		PlayerInfo[playerid][pLocations] = SetPlayerRaceCheckpoint(PlayerInfo[playerid][pShowtheway_ID], 2, Locs[listitem][locX], Locs[listitem][locY], Locs[listitem][locZ], 0, 0, 0, 3.0);
	}
	else if (dialogid == DIALOG_GARBAGE_INSTRUCTIONS && response)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, 	"____________________________工作说明书___________________");
		SendClientMessage(playerid, -1, 				"垃圾收集工作需要操作一个垃圾收集器和收集城市垃圾.");
	 	SendClientMessage(playerid, -1, 				"雇员需要去指定地点获得卡车并且在指定地点卸载垃圾.");
 	 	SendClientMessage(playerid, -1, 				"{FF6347}/taketrash{FFFFFF} 收集垃圾. {FF6347}/puttrash{FFFFFF} 放进收集箱内.");
 	 	SendClientMessage(playerid, -1, 				"{FF6347}/unload{FFFFFF} 卸载垃圾.");
 	 	SendClientMessage(playerid, COLOR_LIGHTRED, 	"_______________________________________________________________");
	}
	return 1;
}

/* mdc shit starts here */
stock CarTheft(playerid)
{
	new zName[MAX_ZONE_NAME], str[129];
	new vehicle = PlayerToCar(playerid,2,4.0);
	new Float:ppcX, Float:ppcY, Float:ppcZ;
	GetPlayerPos(playerid, ppcX, ppcY, ppcZ);
	GetPlayerZone(playerid, zName, sizeof(zName));
	
	format(str, sizeof(str), "[车辆盗窃]: 载具 %s, 地点: %s", vehicleData[GetVehicleModel(vehicle) - 400][typeName], zName);
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][pFaction] == 1)
		{
			SendClientMessage(i, COLOR_BLUE, str);
		}
	}
}

stock RequestBackup(playerid)
{
	new zName[MAX_ZONE_NAME], str[256], Float:x, Float:y, Float:z;
	GetPlayerZone(playerid, zName, sizeof(zName));
	GetPlayerPos(playerid, x, y, z);
	format(str, sizeof(str), "[LAW]: 警官 %s 请求支援, 所在地: %s (以蓝色警灯方式标记在小地图)", PlayerInfo[playerid][pName], zName);
	SetTimerEx("RecallBackup", 3000, false, "i", playerid);
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][pFaction] == 1)
		{
			SendClientMessage(i, COLOR_BLUE, str);
			SetPlayerRaceCheckpoint(i, 2, x, y, z, 0, 0, 0, 3.0);
			SetPlayerMapIcon(i, XB_TARGET_MAPICON,  x, y, z, 30, 0, MAPICON_GLOBAL);
		}
	}
}
forward RecallBackup(playerid);
public RecallBackup(playerid)
{
	new zName[MAX_ZONE_NAME], str[256], Float:x, Float:y, Float:z;
	GetPlayerZone(playerid, zName, sizeof(zName));
	GetPlayerPos(playerid, x, y, z);
	format(str, sizeof(str), "[LAW]: 警官 %s 请求支援, 所在地: %s (以蓝色警灯方式标记在小地图)", PlayerInfo[playerid][pName], zName);
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][pFaction] == 1)
		{
			SendClientMessage(i, COLOR_BLUE, str);
			SetPlayerRaceCheckpoint(i, 2, x, y, z, 0, 0, 0, 3.0);
			SetPlayerMapIcon(i, XB_TARGET_MAPICON,  x, y, z, 30, 0, MAPICON_GLOBAL);
		}
	}
	return 1;
}

forward ScanPhoneResult(playerid);
public ScanPhoneResult(playerid)
{
	new
	fields,
 		rows,
			owner[128];


	cache_get_data(rows, fields);

	if(rows == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "没有这个手机号码.");
	}
	else
	{
		for(new i = 0; i != rows; i++)
		{
			cache_get_row(i, 0, owner);
			if(!IsPlayerConnected(GetPlayerIdFromName(owner))) return SendClientMessage(playerid, COLOR_GREY, "对方不在线.");
			new zName[MAX_ZONE_NAME], str[129];
			GetPlayerZone(GetPlayerIdFromName(owner), zName, sizeof(zName));
			format(str, sizeof(str), "号码持有人为: %s, 地址: %s.", GetNameWithSpaceEx(owner), zName);
			SendClientMessage(i, COLOR_BLUE, str);
		}
	}
	return 1;
}

/*forward ScanPhoneResult(playerid);
public ScanPhoneResult(playerid)
{
	new
	fields,
 		rows,
			owner[128];


	cache_get_data(rows, fields);

	if(rows == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "该手机不存在.");
	}
	else
	{
		for(new i = 0; i != rows; i++)
		{
			cache_get_row(i, 0, owner);
			new pid=GetPlayerID(owner);
			printf（"owner:%s playerid:%d  i:%d",owner,pid,i);
			if(pid==-1) return SendClientMessage(playerid, COLOR_GREY, "对方不在线.");
			new zName[MAX_ZONE_NAME], str[129];
			
			GetPlayerZone(pid, zName, MAX_ZONE_NAME);
			
			format(str, sizeof(str), "[结果]: 号码合法持有人为: %s 手机归属地为 %s", GetNameWithSpaceEx(owner), zName);
			SendClientMessage(i, COLOR_BLUE, str);
			
		}
	}
	return 1;
}*/

forward ScanHouseResult(playerid);
public ScanHouseResult(playerid)
{
	new fields,
	    rows,
	    string[128],
		owner[128],
		Float:X,
		Float:Y,
		Float:Z,
		street[128],
		housenumber,
		zip;

	cache_get_data(rows, fields);

	if(rows == 0)
	{
        SendClientMessage(playerid, COLOR_GREY, "Los Angeles 没有该地址.");
	}
	else
	{
	    for(new i = 0; i != rows; i++)
 		{
 		    cache_get_row(i, 0, owner);
 		    X = cache_get_row_float(0, 1);
 		    Y = cache_get_row_float(0, 2);
 		    Z = cache_get_row_float(0, 3);
 		    cache_get_row(i, 4, street);
 			housenumber = cache_get_row_int(i, 5);
 			zip = cache_get_row_int(i, 6);
            format(string, sizeof(string), "%s\n%i %s\n%i", owner, housenumber, street, zip);
			ShowPlayerDialog(playerid, DIALOG_NAME_VIEW, DIALOG_STYLE_MSGBOX, "扫描结果", string, "关闭", "");
			SendClientMessage(playerid, COLOR_LIGHTRED, "该地址已经被标记在地图上.");
			HouseScanCP[playerid]  = SetPlayerCheckpoint(playerid, X, Y, Z, 3.0);
			HouseScanMission[playerid] = 1;
		}
	}
	return 1;
}

forward ScanNameResult(playerid);
public ScanNameResult(playerid)
{
	new fields,
	    rows,
	    string[128],
		user[128],
		age,
		drivelic,
		weaponlic,
		gender;
		
	new vlic[12], dlic[12], sex[12];
	cache_get_data(rows, fields);

	if(rows == 0)
	{
        SendClientMessage(playerid, COLOR_GREY, "该名称不是Los Angeles市民.");
	}
	else
	{
	    for(new i = 0; i != rows; i++)
 		{
 		    cache_get_row(i, 0, user);
 			age = cache_get_row_int(i, 1);
 			drivelic = cache_get_row_int(i, 2);
 			weaponlic = cache_get_row_int(i, 3);
 			gender = cache_get_row_int(i, 4);
			if(gender == 1) sex = "男性";
			else sex = "女性";
			if(drivelic == 1) vlic = "通过";
			else vlic = "未通过";
			if(weaponlic == 1) dlic = "通过";
			else dlic = "未通过";
            format(string, sizeof(string), "名称: %s\n性别: %s\n年龄: %d\n驾照: %s\n持枪证: %s", user, sex, age, vlic, dlic);
			ShowPlayerDialog(playerid, DIALOG_NAME_VIEW, DIALOG_STYLE_MSGBOX, "扫描结果", string, "关闭", "");
		}
	}
	return 1;
}

forward ScanPlateResult(playerid);
public ScanPlateResult(playerid)
{
	new fields,
	    rows,
		vehicle,
		string[128],
		owner[128],
		plate[128];

	cache_get_data(rows, fields);

	if(rows == 0)
	{
        SendClientMessage(playerid, COLOR_GREY, "该牌照无法在DMV数据库中找到.");
	}
	else
	{
	    for(new i = 0; i != rows; i++)
 		{
 		    cache_get_row(i, 0, owner);
 			vehicle = cache_get_row_int(i, 1);
 			cache_get_row(i, 3, plate);
	 		format(string, sizeof(string), "拥有人: %s\n载具: %s\n牌照: %s", owner, vehicleData[vehicle - 400][typeName], plate);
	 		ShowPlayerDialog(playerid, DIALOG_PLATE_VIEW, DIALOG_STYLE_MSGBOX, "扫描结果", string, "关闭", "");
 		}
	}
	return 1;
}

forward ShowPlayerInfo(playerid);
public ShowPlayerInfo(playerid)
{
	new fields,
	    rows,
		user[128],
		skin,
		age,
		drivelic,
		weaponlic,
		gender;

	cache_get_data(rows, fields);

	if(rows == 0)
	{
        SendClientMessage(playerid, COLOR_GREY, "该名称不是洛杉矶市民.");
	}
	else
	{
	    for(new i = 0; i != rows; i++)
 		{
 		    cache_get_row(i, 0, user);
 			skin = cache_get_row_int(i, 1);
 			age = cache_get_row_int(i, 2);
 			drivelic = cache_get_row_int(i, 3);
 			weaponlic = cache_get_row_int(i, 4);
 			gender = cache_get_row_int(i, 5);

			new vlic[12], dlic[12], sex[12];
			
			if(gender == 1) sex = "Male";
			else sex = "Female";
			
			if(drivelic == 1) vlic = "Passed";
			else vlic = "No";
			
			if(weaponlic == 1) dlic = "Passed";
			else dlic = "No";
			
	 		format(gVar3000, sizeof(gVar3000), "Name: %s~n~Gender: %s~n~Age: %d~n~Driving License: %s~n~Weapon License: %s", user, sex, age, vlic, dlic);
			PlayerTextDrawSetString(playerid, mdc_Info[playerid], gVar3000);
			TextDrawShowForPlayer(playerid, MDC[7]);
			PlayerTextDrawSetPreviewModel(playerid, mdc_Preview[playerid], skin);
			PlayerTextDrawSetPreviewRot(playerid, mdc_Preview[playerid], -10.0, 0.0, 25.0, 0.9);
			PlayerTextDrawShow(playerid, mdc_Preview[playerid]);
			PlayerTextDrawShow(playerid, mdc_Info[playerid]);
		}
	}
	return 1;
}

forward ShowVehicleInfo(playerid);
public ShowVehicleInfo(playerid)
{
	new fields,
	    rows,
		vehicle,
		owner[128],
		plate[128];

	cache_get_data(rows, fields);
	
	if(rows == 0)
	{
        SendClientMessage(playerid, COLOR_GREY, "该牌照无法在DMV数据库内找到.");
	}
	else
	{
	    for(new i = 0; i != rows; i++)
 		{
 		    cache_get_row(i, 0, owner);
 			vehicle = cache_get_row_int(i, 1);
 			cache_get_row(i, 3, plate);
	 		/*format(str, sizeof(str), "Owner: %s - Plate: %s - VehicleID: %i - Color: %i", owner, plate, vehicle, model);
	 		SendClientMessage(playerid, COLOR_BLUE, str);*/
	 		format(gVar3000, sizeof(gVar3000), "Owner: %s~n~Vehicle: %s~n~Plate: %s", owner, vehicleData[vehicle - 400][typeName], plate);
			PlayerTextDrawSetString(playerid, mdc_Info[playerid], gVar3000);
			TextDrawShowForPlayer(playerid, MDC[7]);
			PlayerTextDrawSetPreviewModel(playerid, mdc_Preview[playerid], vehicle);
			PlayerTextDrawSetPreviewRot(playerid, mdc_Preview[playerid], -10.0, 0.0, 25.0, 0.9);
			PlayerTextDrawShow(playerid, mdc_Preview[playerid]);
			PlayerTextDrawShow(playerid, mdc_Info[playerid]);
 		}
	}
	return 1;
}

stock ShowDashCam(playerid)
{
    PlayerTextDrawShow(playerid, pDashCam[playerid]);
	TextDrawShowForPlayer(playerid, DashCam[0]);
	TextDrawShowForPlayer(playerid, DashCam[1]);
}

stock HideDashCam(playerid)
{
    PlayerTextDrawHide(playerid, pDashCam[playerid]);
    TextDrawHideForPlayer(playerid, DashCam[0]);
	TextDrawHideForPlayer(playerid, DashCam[1]);
}

stock EnterMDC(playerid)
{
	for(new i = 0; i < sizeof(MDC); i++)
	{
		TextDrawShowForPlayer(playerid, MDC[i]);
	}
	TextDrawHideForPlayer(playerid, MDC[7]);
	PlayerTextDrawShow(playerid, mdc_Close[playerid]);
	PlayerTextDrawShow(playerid, mdc_Players[playerid]);
	PlayerTextDrawShow(playerid, mdc_Vehicles[playerid]);
	PlayerTextDrawShow(playerid, mdc_Main[playerid]);
	PlayerTextDrawShow(playerid, mdc_DashCamMenu[playerid]);
	SelectTextDraw(playerid, 0x36FFC6AA);
	PlayerPlaySound(playerid, 21001, 0.0, 0.0, 0.0);
}

stock ExitMDC(playerid)
{
    for(new i = 0; i < sizeof(MDC); i++)
	{
		TextDrawHideForPlayer(playerid, MDC[i]);
	}
	PlayerTextDrawHide(playerid, mdc_Close[playerid]);
	PlayerTextDrawHide(playerid, mdc_Players[playerid]);
	PlayerTextDrawHide(playerid, mdc_Vehicles[playerid]);
	PlayerTextDrawHide(playerid, mdc_Preview[playerid]);
	PlayerTextDrawHide(playerid, mdc_Info[playerid]);
	PlayerTextDrawHide(playerid, mdc_Main[playerid]);
	PlayerTextDrawHide(playerid, mdc_DashCamMenu[playerid]);
	CancelSelectTextDraw(playerid);
}

stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ)
{
    return floatsqroot(floatadd(floatadd(floatpower(floatsub(X, PointX), 2.0), floatpower(floatsub(Y, PointY), 2.0)), floatpower(floatsub(Z, PointZ), 2.0)));
}

stock GetNearestVehicle(playerid, Float:Distance = 1000.0)
{
	new Float:cPos[6], Float:NearestPos = floatabs(Distance), NearestVehicle = INVALID_VEHICLE_ID;
	GetPlayerPos(playerid, cPos[0], cPos[1], cPos[2]);
	for(new i; i < MAX_VEHICLES; i++)
	{
		if(!IsVehicleStreamedIn(i, playerid) || IsPlayerInVehicle(playerid, i)) continue;
		GetVehiclePos(i, cPos[3], cPos[4], cPos[5]);
		if(NearestPos > GetDistanceBetweenPoints(cPos[0], cPos[1], cPos[2], cPos[3], cPos[4], cPos[5]))
		{
		    NearestPos = GetDistanceBetweenPoints(cPos[0], cPos[1], cPos[2], cPos[3], cPos[4], cPos[5]);
			NearestVehicle = i;
		}
	}
	return NearestVehicle;
}

stock GetPlayerZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
 	for(new i = 0; i != sizeof(gSAZones); i++)
 	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4] && z >= gSAZones[i][SAZONE_AREA][2] && z <= gSAZones[i][SAZONE_AREA][5])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock LoadTextDraws()
{
    AntiRadar[0] = TextDrawCreate(14.000000, 379.000000, "hud:radar_light");
	TextDrawFont(AntiRadar[0], 4);
	TextDrawLetterSize(AntiRadar[0], 0.500000, 1.000000);
	TextDrawColor(AntiRadar[0], 0xFFFFFF30);
	TextDrawTextSize(AntiRadar[0], 12.000000, 12.000000);

	AntiRadar[1] = TextDrawCreate(14.000000, 379.000000, "hud:radar_light");
	TextDrawFont(AntiRadar[1], 4);
	TextDrawLetterSize(AntiRadar[1], 0.500000, 1.000000);
	TextDrawColor(AntiRadar[1], 0xFF0000FF);
	TextDrawTextSize(AntiRadar[1], 12.000000, 12.000000);

    DashCam[0] = TextDrawCreate(558.000000, 185.000000, "DashCam");
	TextDrawBackgroundColor(DashCam[0], 255);
	TextDrawFont(DashCam[0], 1);
	TextDrawLetterSize(DashCam[0], 0.360000, 2.200000);
	TextDrawColor(DashCam[0], -1);
	TextDrawSetOutline(DashCam[0], 1);
	TextDrawSetProportional(DashCam[0], 1);
	TextDrawSetShadow(DashCam[0], 1);

	DashCam[1] = TextDrawCreate(521.000000, 201.000000, ".");
	TextDrawBackgroundColor(DashCam[1], 255);
	TextDrawFont(DashCam[1], 1);
	TextDrawLetterSize(DashCam[1], 11.320007, 0.599999);
	TextDrawColor(DashCam[1], -1);
	TextDrawSetOutline(DashCam[1], 0);
	TextDrawSetProportional(DashCam[1], 1);
	TextDrawSetShadow(DashCam[1], 1);

	MDC[0] = TextDrawCreate(135.000000, 112.000000, "_");
	TextDrawBackgroundColor(MDC[0], 255);
	TextDrawFont(MDC[0], 1);
	TextDrawLetterSize(MDC[0], 0.500000, 21.499998);
	TextDrawColor(MDC[0], -1);
	TextDrawSetOutline(MDC[0], 0);
	TextDrawSetProportional(MDC[0], 1);
	TextDrawSetShadow(MDC[0], 1);
	TextDrawUseBox(MDC[0], 1);
	TextDrawBoxColor(MDC[0], 64);
	TextDrawTextSize(MDC[0], 494.000000, 0.000000);

	MDC[1] = TextDrawCreate(136.000000, 113.000000, "_");
	TextDrawBackgroundColor(MDC[1], 255);
	TextDrawFont(MDC[1], 1);
	TextDrawLetterSize(MDC[1], 0.500000, 21.099996);
	TextDrawColor(MDC[1], -1);
	TextDrawSetOutline(MDC[1], 0);
	TextDrawSetProportional(MDC[1], 1);
	TextDrawSetShadow(MDC[1], 1);
	TextDrawUseBox(MDC[1], 1);
	TextDrawBoxColor(MDC[1], 168492912);
	TextDrawTextSize(MDC[1], 492.000000, 0.000000);

	MDC[2] = TextDrawCreate(114.000000, 103.000000, ".");
	TextDrawBackgroundColor(MDC[2], 255);
	TextDrawFont(MDC[2], 1);
	TextDrawLetterSize(MDC[2], 39.369972, 1.000000);
	TextDrawColor(MDC[2], 1431699312);
	TextDrawSetOutline(MDC[2], 1);
	TextDrawSetProportional(MDC[2], 1);

	MDC[3] = TextDrawCreate(114.000000, 300.000000, ".");
	TextDrawBackgroundColor(MDC[3], 255);
	TextDrawFont(MDC[3], 1);
	TextDrawLetterSize(MDC[3], 39.369972, 1.000000);
	TextDrawColor(MDC[3], 1431699312);
	TextDrawSetOutline(MDC[3], 1);
	TextDrawSetProportional(MDC[3], 1);

	MDC[4] = TextDrawCreate(213.000000, 120.000000, "ld_drv:gold");
	TextDrawBackgroundColor(MDC[4], 255);
	TextDrawFont(MDC[4], 4);
	TextDrawLetterSize(MDC[4], 0.200000, -11.199998);
	TextDrawColor(MDC[4], -176);
	TextDrawSetOutline(MDC[4], 0);
	TextDrawSetProportional(MDC[4], 1);
	TextDrawSetShadow(MDC[4], 1);
	TextDrawUseBox(MDC[4], 1);
	TextDrawBoxColor(MDC[4], -224);
	TextDrawTextSize(MDC[4], 201.000000, 176.000000);

	MDC[5] = TextDrawCreate(134.000000, 112.000000, "ld_otb2:butnb");
	TextDrawBackgroundColor(MDC[5], 255);
	TextDrawFont(MDC[5], 4);
	TextDrawLetterSize(MDC[5], 0.200000, -11.199998);
	TextDrawColor(MDC[5], -176);
	TextDrawSetOutline(MDC[5], 0);
	TextDrawSetProportional(MDC[5], 1);
	TextDrawSetShadow(MDC[5], 1);
	TextDrawUseBox(MDC[5], 1);
	TextDrawBoxColor(MDC[5], -224);
	TextDrawTextSize(MDC[5], 48.000000, 30.000000);

	MDC[6] = TextDrawCreate(182.000000, 112.000000, "ld_otb2:butnb");
	TextDrawBackgroundColor(MDC[6], 255);
	TextDrawFont(MDC[6], 4);
	TextDrawLetterSize(MDC[6], 0.200000, -11.199998);
	TextDrawColor(MDC[6], -176);
	TextDrawSetOutline(MDC[6], 0);
	TextDrawSetProportional(MDC[6], 1);
	TextDrawSetShadow(MDC[6], 1);
	TextDrawUseBox(MDC[6], 1);
	TextDrawBoxColor(MDC[6], -224);
	TextDrawTextSize(MDC[6], 48.000000, 30.000000);

	MDC[7] = TextDrawCreate(136.000000, 156.000000, "ld_poke:cd9s");
	TextDrawBackgroundColor(MDC[7], 255);
	TextDrawFont(MDC[7], 4);
	TextDrawLetterSize(MDC[7], 0.500000, 1.000000);
	TextDrawColor(MDC[7], 37);
	TextDrawSetOutline(MDC[7], 0);
	TextDrawSetProportional(MDC[7], 1);
	TextDrawSetShadow(MDC[7], 1);
	TextDrawUseBox(MDC[7], 1);
	TextDrawBoxColor(MDC[7], 37);
	TextDrawTextSize(MDC[7], 77.000000, 65.000000);

	MDC[8] = TextDrawCreate(230.000000, 112.000000, "ld_otb2:butnb");
	TextDrawBackgroundColor(MDC[8], 255);
	TextDrawFont(MDC[8], 4);
	TextDrawLetterSize(MDC[8], 0.200000, -11.199997);
	TextDrawColor(MDC[8], -176);
	TextDrawSetOutline(MDC[8], 0);
	TextDrawSetProportional(MDC[8], 1);
	TextDrawSetShadow(MDC[8], 1);
	TextDrawUseBox(MDC[8], 1);
	TextDrawBoxColor(MDC[8], -224);
	TextDrawTextSize(MDC[8], 48.000000, 30.000000);

	MDC[9] = TextDrawCreate(414.000000, 114.000000, "ld_poke:cd9s");
	TextDrawBackgroundColor(MDC[9], 255);
	TextDrawFont(MDC[9], 4);
	TextDrawLetterSize(MDC[9], 0.500000, 1.000000);
	TextDrawColor(MDC[9], 37);
	TextDrawSetOutline(MDC[9], 0);
	TextDrawSetProportional(MDC[9], 1);
	TextDrawSetShadow(MDC[9], 1);
	TextDrawUseBox(MDC[9], 1);
	TextDrawBoxColor(MDC[9], 37);
	TextDrawTextSize(MDC[9], 77.000000, 18.000000);

	MDC[10] = TextDrawCreate(448.000000, 119.000000, "date");
	TextDrawBackgroundColor(MDC[10], 32);
	TextDrawFont(MDC[10], 2);
	TextDrawLetterSize(MDC[10], 0.170000, 0.899999);
	TextDrawColor(MDC[10], -144);
	TextDrawSetOutline(MDC[10], 0);
	TextDrawSetProportional(MDC[10], 1);
	TextDrawSetShadow(MDC[10], 1);

	MDC[11] = TextDrawCreate(420.000000, 119.000000, "time");
	TextDrawBackgroundColor(MDC[11], 32);
	TextDrawFont(MDC[11], 2);
	TextDrawLetterSize(MDC[11], 0.170000, 0.899999);
	TextDrawColor(MDC[11], -144);
	TextDrawSetOutline(MDC[11], 0);
	TextDrawSetProportional(MDC[11], 1);
	TextDrawSetShadow(MDC[11], 1);
}

stock LoadPlayerTextDraws(playerid)
{
	pDashCam[playerid] = CreatePlayerTextDraw(playerid, 558.000000, 210.000000, "P N/A~n~S N/A kmph~n~D N/A m");
	PlayerTextDrawBackgroundColor(playerid, pDashCam[playerid], 255);
	PlayerTextDrawFont(playerid, pDashCam[playerid], 1);
	PlayerTextDrawLetterSize(playerid, pDashCam[playerid], 0.250000, 0.899999);
	PlayerTextDrawColor(playerid, pDashCam[playerid], -1);
	PlayerTextDrawSetOutline(playerid, pDashCam[playerid], 1);
	PlayerTextDrawSetProportional(playerid, pDashCam[playerid], 1);
	PlayerTextDrawSetShadow(playerid, pDashCam[playerid], 1);

	mdc_Close[playerid] = CreatePlayerTextDraw(playerid, 481.000000, 290.000000, "ld_beat:cross");
	PlayerTextDrawBackgroundColor(playerid, mdc_Close[playerid], 255);
	PlayerTextDrawFont(playerid, mdc_Close[playerid], 4);
	PlayerTextDrawLetterSize(playerid, mdc_Close[playerid], 0.200000, -11.199998);
	PlayerTextDrawColor(playerid, mdc_Close[playerid], -176);
	PlayerTextDrawSetOutline(playerid, mdc_Close[playerid], 0);
	PlayerTextDrawSetProportional(playerid, mdc_Close[playerid], 1);
	PlayerTextDrawSetShadow(playerid, mdc_Close[playerid], 1);
	PlayerTextDrawUseBox(playerid, mdc_Close[playerid], 1);
	PlayerTextDrawBoxColor(playerid, mdc_Close[playerid], -224);
	PlayerTextDrawTextSize(playerid, mdc_Close[playerid], 11.000000, 14.000000);
	PlayerTextDrawSetSelectable(playerid, mdc_Close[playerid], 1);

	mdc_Players[playerid] = CreatePlayerTextDraw(playerid, 145.000000, 115.000000, "User");
	PlayerTextDrawBackgroundColor(playerid, mdc_Players[playerid], 128);
	PlayerTextDrawFont(playerid, mdc_Players[playerid], 1);
	PlayerTextDrawLetterSize(playerid, mdc_Players[playerid], 0.209999, 1.000000);
	PlayerTextDrawColor(playerid, mdc_Players[playerid], 1431699328);
	PlayerTextDrawSetOutline(playerid, mdc_Players[playerid], 1);
	PlayerTextDrawSetProportional(playerid, mdc_Players[playerid], 1);
	PlayerTextDrawTextSize(playerid, mdc_Players[playerid], 175.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, mdc_Players[playerid], 1);

	mdc_Vehicles[playerid] = CreatePlayerTextDraw(playerid, 192.000000, 115.000000, "Plate");
	PlayerTextDrawBackgroundColor(playerid, mdc_Vehicles[playerid], 128);
	PlayerTextDrawFont(playerid, mdc_Vehicles[playerid], 1);
	PlayerTextDrawLetterSize(playerid, mdc_Vehicles[playerid], 0.209999, 1.000000);
	PlayerTextDrawColor(playerid, mdc_Vehicles[playerid], 1431699328);
	PlayerTextDrawSetOutline(playerid, mdc_Vehicles[playerid], 1);
	PlayerTextDrawSetProportional(playerid, mdc_Vehicles[playerid], 1);
	PlayerTextDrawTextSize(playerid, mdc_Vehicles[playerid], 223.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, mdc_Vehicles[playerid], 1);

	mdc_Preview[playerid] = CreatePlayerTextDraw(playerid, 139.000000, 158.000000, "Model Preview");
	PlayerTextDrawFont(playerid, mdc_Preview[playerid], TEXT_DRAW_FONT_MODEL_PREVIEW);
	PlayerTextDrawBackgroundColor(playerid, mdc_Preview[playerid], 0x1F1FFF40);
	PlayerTextDrawTextSize(playerid, mdc_Preview[playerid], 71.000000, 61.000000);

	mdc_Info[playerid] = CreatePlayerTextDraw(playerid, 216.000000, 160.000000, "Name: Example_example~n~Age: 34~n~Gender: Male~n~Vehicle License: Yes~n~Weapon License: No~n~Wanted: Yes");
	PlayerTextDrawBackgroundColor(playerid, mdc_Info[playerid], 96);
	PlayerTextDrawFont(playerid, mdc_Info[playerid], 2);
	PlayerTextDrawLetterSize(playerid, mdc_Info[playerid], 0.200000, 1.000000);
	PlayerTextDrawColor(playerid, mdc_Info[playerid], -112);
	PlayerTextDrawSetOutline(playerid, mdc_Info[playerid], 1);
	PlayerTextDrawSetProportional(playerid, mdc_Info[playerid], 1);

	mdc_Main[playerid] = CreatePlayerTextDraw(playerid, 138.000000, 225.000000, "Backup");
	PlayerTextDrawBackgroundColor(playerid, mdc_Main[playerid], 112);
	PlayerTextDrawFont(playerid, mdc_Main[playerid], 1);
	PlayerTextDrawLetterSize(playerid, mdc_Main[playerid], 0.400000, 2.000000);
	PlayerTextDrawColor(playerid, mdc_Main[playerid], -1);
	PlayerTextDrawSetOutline(playerid, mdc_Main[playerid], 0);
	PlayerTextDrawSetProportional(playerid, mdc_Main[playerid], 1);
	PlayerTextDrawSetShadow(playerid, mdc_Main[playerid], 1);
	PlayerTextDrawTextSize(playerid, mdc_Main[playerid], 180.000000, 15.000000);
	PlayerTextDrawSetSelectable(playerid, mdc_Main[playerid], 1);

	mdc_DashCamMenu[playerid] = CreatePlayerTextDraw(playerid, 239.000000, 115.000000, "DashCam");
	PlayerTextDrawBackgroundColor(playerid, mdc_DashCamMenu[playerid], 128);
	PlayerTextDrawFont(playerid, mdc_DashCamMenu[playerid], 1);
	PlayerTextDrawLetterSize(playerid, mdc_DashCamMenu[playerid], 0.209998, 1.000000);
	PlayerTextDrawColor(playerid, mdc_DashCamMenu[playerid], 1431699328);
	PlayerTextDrawSetOutline(playerid, mdc_DashCamMenu[playerid], 1);
	PlayerTextDrawSetProportional(playerid, mdc_DashCamMenu[playerid], 1);
	PlayerTextDrawTextSize(playerid, mdc_DashCamMenu[playerid], 271.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, mdc_DashCamMenu[playerid], 1);
}

stock SprayTag_Create(playerid, iIndex)
{
	if(IsPlayerConnected(playerid))
	{
		new
			szMessage[128]
		;

		SprayTags[playerid][iIndex][_spPosX] = spraytag_positions[playerid][0];
		SprayTags[playerid][iIndex][_spPosY] = spraytag_positions[playerid][1];
		SprayTags[playerid][iIndex][_spPosZ] = spraytag_positions[playerid][2];
		SprayTags[playerid][iIndex][_spPosRX] = spraytag_positions[playerid][3];
		SprayTags[playerid][iIndex][_spPosRY] = spraytag_positions[playerid][4];
		SprayTags[playerid][iIndex][_spPosRZ] = spraytag_positions[playerid][5];

		format(SprayTags[playerid][iIndex][_spText], 50, spraytag_text[playerid]);
		format(SprayTags[playerid][iIndex][_spFont], 50, spraytag_font[playerid]);

		SprayTags[playerid][iIndex][_spFontColor] = spraytag_color[playerid];
		SprayTags[playerid][iIndex][_spFontSize] = spraytag_size[playerid];
		SprayTags[playerid][iIndex][_spBold] = spraytag_bold[playerid];

		SprayTag_Spawn(playerid, iIndex);
		Tags_Save(playerid, iIndex);

		format(szMessage, sizeof szMessage, "你成功创建涂鸦. (ID: %i).", iIndex);
		SendClientMessage(playerid, -1, szMessage);
	}
}

stock SprayTag_Spawn(playerid, iIndex)
{
	SprayTags[playerid][iIndex][_spObject] = CreateDynamicObject(SPRAY_TAG_OBJECT, SprayTags[playerid][iIndex][_spPosX], SprayTags[playerid][iIndex][_spPosY], SprayTags[playerid][iIndex][_spPosZ], SprayTags[playerid][iIndex][_spPosRX], SprayTags[playerid][iIndex][_spPosRY], SprayTags[playerid][iIndex][_spPosRZ], SprayTags[playerid][iIndex][_spVW], SprayTags[playerid][iIndex][_spInt], -1, SPRAY_TAG_OBJECT_DISTANCE);
	SetDynamicObjectMaterialText(SprayTags[playerid][iIndex][_spObject], 0, SprayTags[playerid][iIndex][_spText], OBJECT_MATERIAL_SIZE_512x512, SprayTags[playerid][iIndex][_spFont], SprayTags[playerid][iIndex][_spFontSize], SprayTags[playerid][iIndex][_spBold], SprayTags[playerid][iIndex][_spFontColor], 0, 1);
	return 1;
}

stock Tag_Load(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new
			szFile[64],
			szLine[36],
			szName[MAX_PLAYER_NAME+4]
		;
		GetPlayerName(playerid, szName, MAX_PLAYER_NAME);
		format(szFile, 40, SPRAYTAG_FOLDER, szName);

		for(new i; i < MAX_PLAYERS_TAGS; i++)
		{
			format(szLine, sizeof szLine, "Text%i", i); format(SprayTags[playerid][i][_spText], 50, DOF2_GetString(szFile, szLine));
			format(szLine, sizeof szLine, "Font%i", i); format(SprayTags[playerid][i][_spFont], 50, DOF2_GetString(szFile, szLine));
			format(szLine, sizeof szLine, "FontSize%i", i); SprayTags[playerid][i][_spFontSize] = DOF2_GetInt(szFile, szLine);
			format(szLine, sizeof szLine, "FontBold%i", i); SprayTags[playerid][i][_spBold] = DOF2_GetInt(szFile, szLine);
			format(szLine, sizeof szLine, "FontColor%i", i); SprayTags[playerid][i][_spFontColor] = DOF2_GetInt(szFile, szLine);
			format(szLine, sizeof szLine, "PosX%i", i); SprayTags[playerid][i][_spPosX] = DOF2_GetFloat(szFile, szLine);
			format(szLine, sizeof szLine, "PosY%i", i); SprayTags[playerid][i][_spPosY] = DOF2_GetFloat(szFile, szLine);
			format(szLine, sizeof szLine, "PosZ%i", i); SprayTags[playerid][i][_spPosZ] = DOF2_GetFloat(szFile, szLine);
			format(szLine, sizeof szLine, "RotX%i", i); SprayTags[playerid][i][_spPosRX] = DOF2_GetFloat(szFile, szLine);
			format(szLine, sizeof szLine, "RotY%i", i); SprayTags[playerid][i][_spPosRY] = DOF2_GetFloat(szFile, szLine);
			format(szLine, sizeof szLine, "RotZ%i", i); SprayTags[playerid][i][_spPosRZ] = DOF2_GetFloat(szFile, szLine);
			format(szLine, sizeof szLine, "VirtualWorld%i", i); SprayTags[playerid][i][_spVW] = DOF2_GetInt(szFile, szLine);
			format(szLine, sizeof szLine, "Interior%i", i); SprayTags[playerid][i][_spInt] = DOF2_GetInt(szFile, szLine);

			if(SprayTags[playerid][i][_spPosX] != 0.0)
			{
				SprayTag_Spawn(playerid, i);
			}
		}
	}
	return 1;
}

stock Tags_Clear(playerid, iIndex)
{
	format(SprayTags[playerid][iIndex][_spText], 50, "Example");
	format(SprayTags[playerid][iIndex][_spFont], 50, "Arial");
	SprayTags[playerid][iIndex][_spFontSize] = 24;
	SprayTags[playerid][iIndex][_spBold] = 0;
	SprayTags[playerid][iIndex][_spFontColor] = -1;
	SprayTags[playerid][iIndex][_spPosX] = 0.0;
	SprayTags[playerid][iIndex][_spPosY] = 0.0;
	SprayTags[playerid][iIndex][_spPosZ] = 0.0;
	SprayTags[playerid][iIndex][_spPosRX] = 0.0;
	SprayTags[playerid][iIndex][_spPosRY] = 0.0;
	SprayTags[playerid][iIndex][_spPosRZ] = 0.0;
	SprayTags[playerid][iIndex][_spVW] = 0;
	SprayTags[playerid][iIndex][_spInt] = 0;
	DestroyDynamicObject(SprayTags[playerid][iIndex][_spObject]);
	Tags_Save(playerid, iIndex);
	return 1;
}

stock Tags_Save(playerid, iIndex)
{
	if(IsPlayerConnected(playerid))
	{
		new
			szFile[64],
			szLine[128],
			szName[MAX_PLAYER_NAME+4]
		;

		GetPlayerName(playerid, szName, MAX_PLAYER_NAME);
		format(szFile, 32, SPRAYTAG_FOLDER, szName);
		if(!DOF2_FileExists(szFile)) DOF2_CreateFile(szFile);
		{
			format(szLine, sizeof szLine, "Text%i", iIndex); DOF2_SetString(szFile, szLine, SprayTags[playerid][iIndex][_spText]);
			format(szLine, sizeof szLine, "Font%i", iIndex); DOF2_SetString(szFile, szLine, SprayTags[playerid][iIndex][_spFont]);
			format(szLine, sizeof szLine, "FontSize%i", iIndex); DOF2_SetInt(szFile, szLine, SprayTags[playerid][iIndex][_spFontSize]);
			format(szLine, sizeof szLine, "FontBold%i", iIndex); DOF2_SetInt(szFile, szLine, SprayTags[playerid][iIndex][_spBold]);
			format(szLine, sizeof szLine, "FontColor%i", iIndex); DOF2_SetInt(szFile, szLine, SprayTags[playerid][iIndex][_spFontColor]);
			format(szLine, sizeof szLine, "PosX%i", iIndex); DOF2_SetFloat(szFile, szLine, SprayTags[playerid][iIndex][_spPosX]);
			format(szLine, sizeof szLine, "PosY%i", iIndex); DOF2_SetFloat(szFile, szLine, SprayTags[playerid][iIndex][_spPosY]);
			format(szLine, sizeof szLine, "PosZ%i", iIndex); DOF2_SetFloat(szFile, szLine, SprayTags[playerid][iIndex][_spPosZ]);
			format(szLine, sizeof szLine, "RotX%i", iIndex); DOF2_SetFloat(szFile, szLine, SprayTags[playerid][iIndex][_spPosRX]);
			format(szLine, sizeof szLine, "RotY%i", iIndex); DOF2_SetFloat(szFile, szLine, SprayTags[playerid][iIndex][_spPosRY]);
			format(szLine, sizeof szLine, "RotZ%i", iIndex); DOF2_SetFloat(szFile, szLine, SprayTags[playerid][iIndex][_spPosRZ]);
			format(szLine, sizeof szLine, "VirtualWorld%i", iIndex); DOF2_SetInt(szFile, szLine, SprayTags[playerid][iIndex][_spVW]);
			format(szLine, sizeof szLine, "Interior%i", iIndex); DOF2_SetInt(szFile, szLine, SprayTags[playerid][iIndex][_spInt]);
			DOF2_SaveFile();
		}
	}
	return 1;
}

stock HexToInt(string[]) // Created by Zamaroth
{
	if (string[0] == 0) return 0;

	new
		i,
		cur = 1,
		res = 0
	;

	for (i = strlen(string); i > 0; i --) {
		if (string[i-1] < 58) res = res + cur * (string[i-1]-48); else res = res + cur * (string[i-1]-65+10);
		cur = cur * 16;
	}
	return res;
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	if(response == EDIT_RESPONSE_FINAL)
	{
	    if( GetPVarInt(playerid, "GraffitiCreating") == 1 )
		{

		    XYZ[playerid][0] = x;
			XYZ[playerid][1] = y;
			XYZ[playerid][2] = z;
			XYZ[playerid][3] = rx;
			XYZ[playerid][4] = ry;
			XYZ[playerid][5] = rz;
			SCM(playerid, COLOR_LIGHTRED, "提示: 请喷涂你的涂鸦直到它创建成功.");
			DestroyDynamicObject( POBJECT[playerid] );
			//GivePlayerWeapon( playerid, 41, 9999 ); // 移除该行 用GRAFFITI检测
			spraytimerx[playerid] = SetTimerEx( "killgr", 90000, true, "i", playerid );

		}
	    if(GetPVarInt(playerid, "POLICELINE_EDIT") != 0)
	    {
			SetDynamicObjectPos(objectid, x, y, z);
			SetDynamicObjectRot(objectid, rx, ry, rz);
			SendClientMessage(playerid, -1, "警戒线已更新.");
			DeletePVar(playerid, "POLICELINE_EDIT");
	        return 1;
	    }
	    if(GetPVarInt(playerid, "ROADBLOCK_EDIT") != 0)
		{
			SetDynamicObjectPos(objectid, x, y, z);
			SetDynamicObjectRot(objectid, rx, ry, rz);
			SendClientMessage(playerid, -1, "OBJECT 已成功更新.");
			DeletePVar(playerid, "ROADBLOCK_EDIT");
		    return 1;
		}
		if(GetPVarInt(playerid, "SPRAYTAG_EDIT") == 1)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 3, x, y, z))
			{
				DestroyDynamicObject(spraytag_object[playerid]);
				DeletePVar(playerid, "SPRAYTAG_EDIT");
				return SendClientMessage(playerid, -1, "你没有靠近涂鸦.");
			}

			spraytag_positions[playerid][0] = x;
			spraytag_positions[playerid][1] = y;
			spraytag_positions[playerid][2] = z;
			spraytag_positions[playerid][3] = rx;
			spraytag_positions[playerid][4] = ry;
			spraytag_positions[playerid][5] = rz;

			spraytag_timer[playerid] = SetTimerEx("SprayTag", 1000, true, "ii", playerid, 2);

			ApplyAnimation(playerid, "SPRAYCAN", "spraycan_full", 4.0, 1, 1, 1, 0, 0, 1);

			spraytag_timer_left[playerid] = SPRAY_TAG_TIMER;
			DestroyDynamicObject(spraytag_object[playerid]);
		}
		if(GetPVarInt(playerid, "SPRAYTAG_EDIT") == 2)
		{
			new
				iIndex = spraytag_slot[playerid]
			;

			if(!IsPlayerInRangeOfPoint(playerid, 3, x, y, z))
			{
				DestroyDynamicObject(SprayTags[playerid][iIndex][_spObject]);
				SprayTag_Spawn(playerid, iIndex);
				DeletePVar(playerid, "SPRAYTAG_EDIT");
				return SendClientMessage(playerid, -1, "你没有靠近涂鸦.");
			}

			spraytag_positions[playerid][0] = x;
			spraytag_positions[playerid][1] = y;
			spraytag_positions[playerid][2] = z;
			spraytag_positions[playerid][3] = rx;
			spraytag_positions[playerid][4] = ry;
			spraytag_positions[playerid][5] = rz;

			spraytag_timer[playerid] = SetTimerEx("SprayTag", 1000, true, "ii", playerid, 1);

			ApplyAnimation(playerid, "SPRAYCAN", "spraycan_full", 4.0, 1, 1, 1, 0, 0, 1);

			spraytag_timer_left[playerid] = SPRAY_TAG_TIMER;
			DestroyDynamicObject(SprayTags[playerid][iIndex][_spObject]);
		}
	}
	if(response == EDIT_RESPONSE_CANCEL)
	{
		if(GetPVarInt(playerid, "SPRAYTAG_EDIT") >= 1)
		{
			DestroyDynamicObject(spraytag_object[playerid]);
			DestroyDynamicObject(SprayTags[playerid][spraytag_slot[playerid]][_spObject]);
			SprayTag_Spawn(playerid, spraytag_slot[playerid]);
			DeletePVar(playerid, "SPRAYTAG_EDIT");
		}
		if( GetPVarInt(playerid, "GraffitiCreating") == 1 )
		{
			DestroyDynamicObject( POBJECT[playerid] );
			SendClientMessage( playerid,0xFF6800FF,"涂鸦创作取消" );
			DeletePVar( playerid,"GraffitiCreating" );
		}
	}
	return 1;
}

forward WhenDiagnosed(playerid);
public WhenDiagnosed(playerid)
{
	new id = GetPVarInt(playerid, "DiagnosedID"),
	    title[40],
		string[300],
		holder[300];

	DeletePVar(playerid, "Diagnosing");
	UnfreezePlayer(id);
	DestroyDynamicObject(diagnosisLazer);
	SCM(id, -1, "正在输出医疗报告...");
	SCM(playerid, -1, "正在输出医疗报告...");
	format(title, sizeof(title), "[奥斯星医院] %s 的诊断报告如下", GetNameWithSpace(id, 1));
	if(sInfo[id][Misc] == 0 && sInfo[id][Head] == 0 && sInfo[id][Chest] == 0 && sInfo[id][Crotch] == 0 && sInfo[id][LArm] == 0 && sInfo[id][RArm] == 0 && sInfo[id][LLeg] == 0 && sInfo[id][RLeg] == 0)
	{
	    ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, title, "没有检查出任何疾病, 身体状态良好...", "关闭", "");
	    ShowPlayerDialog(id, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, title, "没有检查出任何疾病, 你的身体状态良好...", "关闭", "");
		return 1;
	}
	if(sInfo[id][Misc] > 0)
	{
		format(string, sizeof(string), "患者受过%d次来自钝器的击打伤害.\n", sInfo[id][Misc]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][Head] > 0)
	{
		format(string, sizeof(string), "患者头部内有%d颗子弹.\n", sInfo[id][Head]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][Chest] > 0)
	{
		format(string, sizeof(string), "患者胸口内有%d颗子弹.\n", sInfo[id][Chest]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][Crotch] > 0)
	{
		format(string, sizeof(string), "患者胯部内有%d颗子弹\n", sInfo[id][Crotch]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][LArm] > 0)
	{
		format(string, sizeof(string), "患者左手内有%d颗子弹.\n", sInfo[id][LArm]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][RArm] > 0)
	{
		format(string, sizeof(string), "患者右手内有%d颗子弹.\n", sInfo[id][RArm]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][LLeg] > 0)
	{
		format(string, sizeof(string), "患者左腿内有%d颗子弹.\n", sInfo[id][LLeg]);
		strcat(holder, string, sizeof(holder));
	}
	if(sInfo[id][RLeg] > 0)
	{
		format(string, sizeof(string), "患者右腿内有%d颗子弹.\n", sInfo[id][RLeg]);
		strcat(holder, string, sizeof(holder));
	}
	if(PlayerInfo[id][pCold] > 0)
	{
		format(string, sizeof(string), "患者患上了感冒.\n");
		strcat(holder, string, sizeof(holder));
	}
	if(PlayerInfo[id][pCancer] > 0)
	{
		format(string, sizeof(string), "患者得了癌症.\n");
		strcat(holder, string, sizeof(holder));
	}
	if(BrokenLegs[id] != 0)
	{
		format(string, sizeof(string), "患者腿部骨折.\n");
		strcat(holder, string, sizeof(holder));
	}
	ShowPlayerDialog(playerid, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, title, holder, "关闭", "");
	ShowPlayerDialog(id, DIALOG_CLOSE, DIALOG_STYLE_MSGBOX, title, holder, "关闭", "");
	SetPVarInt(playerid, "WasDiagnosed", 1);
	return 1;
}

forward SprayTag(playerid, type);
public SprayTag(playerid, type)
{
	new
		iIndex = spraytag_slot[playerid]
	;

	if(!IsPlayerConnected(playerid))
	{
		spraytag_timer_left[playerid] = 0;
		DeletePVar(playerid, "SPRAYTAG_EDIT");
		KillTimer(spraytag_timer[playerid]);
		return 1;
	}

	spraytag_timer_left[playerid]--;

	switch(type)
	{
		case 1:
		{
			if(spraytag_timer_left[playerid] == 0)
			{
				DestroyDynamicObject(SprayTags[playerid][iIndex][_spObject]);
				DestroyDynamicObject(spraytag_object[playerid]);

				format(SprayTags[playerid][iIndex][_spText], 50, spraytag_text[playerid]);
				format(SprayTags[playerid][iIndex][_spFont], 50, spraytag_font[playerid]);

				SprayTags[playerid][iIndex][_spPosX] = spraytag_positions[playerid][0];
				SprayTags[playerid][iIndex][_spPosY] = spraytag_positions[playerid][1];
				SprayTags[playerid][iIndex][_spPosZ] = spraytag_positions[playerid][2];
				SprayTags[playerid][iIndex][_spPosRX] = spraytag_positions[playerid][3];
				SprayTags[playerid][iIndex][_spPosRY] = spraytag_positions[playerid][4];
				SprayTags[playerid][iIndex][_spPosRZ] = spraytag_positions[playerid][5];
				SprayTags[playerid][iIndex][_spFontColor] = spraytag_color[playerid];
				SprayTags[playerid][iIndex][_spFontSize] = spraytag_size[playerid];
				SprayTags[playerid][iIndex][_spBold] = spraytag_bold[playerid];

				SprayTag_Spawn(playerid, iIndex);
				Tags_Save(playerid, iIndex);

				ClearAnimations(playerid);
				ApplyAnimation(playerid, "GRAFFITI", "graffiti_Chkout", 4.0, 0, 0, 0, 0, 0, 1);
				KillTimer(spraytag_timer[playerid]);
			}
		}
		case 2:
		{
			if(spraytag_timer_left[playerid] == 0)
			{
				SprayTag_Create(playerid, spraytag_slot[playerid]);
				ClearAnimations(playerid);
				ApplyAnimation(playerid, "GRAFFITI", "graffiti_Chkout", 4.0, 0, 0, 0, 0, 0, 1);
				KillTimer(spraytag_timer[playerid]);
			}
		}
	}
	DeletePVar(playerid, "SPRAYTAG_EDIT");
	return 1;
}

forward UpdateAntiRadar(playerid);
public UpdateAntiRadar(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid)) return 0x1;
    new pcv = GetNearestVehicle(playerid, ar_Distance);
    new Float:vPos[3];
    new pvid = GetPlayerVehicleID(playerid);
    GetVehiclePos(pvid, vPos[0], vPos[1], vPos[2]);
    new Float:distance = GetVehicleDistanceFromPoint(pcv, vPos[0], vPos[1], vPos[2]);
    if(IsPlayerInAnyVehicle(playerid) && VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] == 1)
	{
        if(floatround(distance) <= ar_Distance - 25.0)
		{
			if(gAntiRadarBeep{playerid} == 0)
			{
                PlayerPlaySound(playerid, 17006, 0.0, 0.0, 0.0);
                TextDrawHideForPlayer(playerid, AntiRadar[0]);
	            TextDrawShowForPlayer(playerid, AntiRadar[1]);
				gAntiRadarBeep{playerid} = 1;
			}
			else if(gAntiRadarBeep{playerid} == 1)
			{
                PlayerPlaySound(playerid, 17006, 0.0, 0.0, 0.0);
				TextDrawShowForPlayer(playerid, AntiRadar[0]);
	            TextDrawHideForPlayer(playerid, AntiRadar[1]);
	            gAntiRadarBeep{playerid} = 0;
			}
		}
		else
		{
		    TextDrawShowForPlayer(playerid, AntiRadar[0]);
            TextDrawHideForPlayer(playerid, AntiRadar[1]);
		    gAntiRadarBeep{playerid} = 0;
		}
    }
	return 0x1;
}

forward Float:GetVehicleSpeed2(vehicleid, Miles);
public Float:GetVehicleSpeed2(vehicleid, Miles)
{
    new Float:Speed[4];
    GetVehicleVelocity(vehicleid, Speed[0], Speed[1], Speed[2]);
    if(Miles == 0) Speed[3] = floatsqroot(((Speed[0] * Speed[0]) + (Speed[1] * Speed[1])) + (Speed[2] * Speed[2])) * 136.666667;
    else Speed[3] = floatsqroot(((Speed[0] * Speed[0]) + (Speed[1] * Speed[1])) + (Speed[2] * Speed[2])) * 85.4166672;
    floatround(Speed[3], floatround_round);
    return Speed[3];
}

forward UpdateDashCam(playerid);
public UpdateDashCam(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return 0x0;
	if(IsPlayerInAnyVehicle(playerid) && VehicleInfo[GetPlayerVehicleID(playerid)][vFaction] == 1)
	{
        new string[40], Float:vPos[3];
		new pcv = GetNearestVehicle(playerid, dcam_Distance);
		if(pcv == INVALID_VEHICLE_ID)
		{
            format(string, sizeof(string), "P N/A~n~S N/A kmph~n~D N/A m");
            PlayerTextDrawSetString(playerid, pDashCam[playerid], string);
            return 0x1;
		}
		new pvid = GetPlayerVehicleID(playerid);
		GetVehiclePos(pvid, vPos[0], vPos[1], vPos[2]);
		new Float:distance = GetVehicleDistanceFromPoint(pcv, vPos[0], vPos[1], vPos[2]);
		new Float:speed = GetVehicleSpeed2(pcv, 0);
		if(floatround(distance) <= dcam_Distance - 5.0)
		{
            format(string, sizeof(string), "P %s~n~S %d kmph~n~D %d m", VehicleInfo[pcv][vPlate], floatround(speed), floatround(distance));
		}
		else format(string, sizeof(string), "P N/A~n~S N/A kmph~n~D N/A m");
        PlayerTextDrawSetString(playerid, pDashCam[playerid], string);
	}
    return 0x1;
}

forward UpdateTimeAndDate();
public UpdateTimeAndDate()
{
    gettime(hour1, minute1);
   	format(timestr, sizeof(timestr), "%02d:%02d", hour1, minute1);
   	TextDrawSetString(MDC[11], timestr);

   	getdate(year1, month1, day1);
   	format(datestr, sizeof(datestr), "%02d/%02d/%04d", day1, month1, year1);
    TextDrawSetString(MDC[10], datestr);
    //if(!Lotteryavailable && hour1 == 19) Lotterystart();
    //if(Lotteryavailable && hour1 == 20) Lotteryend();
}

forward Lotterystart();
public Lotterystart()
{
    /*Lotteryavailable = true;
    SendClientMessageToAll(COLOR_ADVERT, "[Advertisement] The lottery has started! Feel free to vist our stands at Idlewood's center!");
    for(new i = 0; i <= 2; i++)
	{
		Lotterynumbers[i] = random(9-1)+1;
	}
	foreach(new i : Player)
	{
		PlayerInfo[i][pMayLotto] = true;
		PlayerInfo[i][pTicket] = 0;
		if(!IsPlayerNPC(i) && IsPlayerConnected(i)) o++;
	}
	if(o <= 30) o = 30;
	Lotterynumbers[3] = random(o);*/
}

/*forward Lotteryend();
public Lotteryend()
{
    Lotteryavailable = false;
    SendClientMessageToAll(COLOR_ADVERT, "[Advertisement] The lottery is over! Feel free to try your luck again at Idlewood's center!");
}*/


forward HandleFlashbangStage(playerid);
public HandleFlashbangStage(playerid)
{
	switch (FlashbangStage[playerid])
	{
	    case 1 .. 5:
	    {
	        SetPlayerDrunkLevel(playerid, (FlashbangStage[playerid] == 1) ? 50000 : GetPlayerDrunkLevel(playerid));
	        if (FlashbangStage[playerid] == 2)
	        {
	            FlashbangSwayLevel[playerid] = 1;
    			HandleFlashbangSway(playerid);
	        }
			if (FlashbangStage[playerid] < 5)
				TextDrawShowForPlayer(playerid, flashbangStage[FlashbangStage[playerid]]);
			if (FlashbangStage[playerid] > 1)
				TextDrawHideForPlayer(playerid, flashbangStage[FlashbangStage[playerid] - 1]);
			FlashbangStage[playerid] = ((FlashbangStage[playerid] == 5) ? -1 : FlashbangStage[playerid]);
	    }
	}

	if (FlashbangStage[playerid] < 5 && FlashbangStage[playerid] != -1)
	{
		FlashbangStage[playerid]++;

		new time = (FlashbangStage[playerid] == 2) ? 1800 : 100;
		SetTimerEx("HandleFlashbangStage", time, false, "i", playerid);
	}
    return 1;
}

forward HandleFlashbangSway(playerid);
public HandleFlashbangSway(playerid)
{
    switch (FlashbangSwayLevel[playerid])
	{
     case 1 .. 6:
	    {
	        SetPlayerDrunkLevel(playerid, 10000 - (2000 * (FlashbangSwayLevel[playerid] - 1)));
			if (FlashbangSwayLevel[playerid] == 6)
			    FlashbangSwayLevel[playerid] = -1;
	    }
	}

	if (FlashbangSwayLevel[playerid] < 6 && FlashbangSwayLevel[playerid] != -1)
	{
		FlashbangSwayLevel[playerid]++;

		new time = (FlashbangSwayLevel[playerid] == 5) ? 1000 : 600;
		SetTimerEx("HandleFlashbangSway", time, false, "i", playerid);
	}
}
///
//==============================================================================
forward Tent_ProcedureTimer(playerid, procedure);
public Tent_ProcedureTimer(playerid, procedure)
{
	new
		gameetext[25],
		infomessage[250],
		pal = PlayerInfo[playerid][pTentID],
		zName[MAX_ZONE_NAME];
  if(PlayerInfo[playerid][pTentTimerVar] == 1000)
	{
	    switch(PlayerInfo[playerid][pTentProcess])
	    {
	        case 1:
		    {
		        //SendClientMessage(playerid, -1, "Procedure 1");
			    GetPlayerPos(playerid, TentInfo[pal][tPos][0], TentInfo[pal][tPos][1], TentInfo[pal][tPos][2]);
				GetPlayerZone(playerid, zName, sizeof(zName));
				TentInfo[PlayerInfo[playerid][pTentID]][tObject] = CreateDynamicObject(2060, TentInfo[pal][tPos][0], TentInfo[pal][tPos][1], TentInfo[pal][tPos][2]-0.85, 0, 0, 0, GetPlayerVirtualWorld(playerid));
				format(infomessage, 250, "帐篷 ID:{ffffff} %d#\n{FF9900}地址::{ffffff} %s\n{FF9900}状态:{ffffff} 已拆卸\n{FF9900}可用指令:{ffffff} [/tent establish]", PlayerInfo[playerid][pTentID], zName);
				TentInfo[PlayerInfo[playerid][pTentID]][tLebal] = CreateDynamic3DTextLabel(infomessage, 0xFF9900FF, TentInfo[pal][tPos][0], TentInfo[pal][tPos][1], TentInfo[pal][tPos][2]-0.5, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
				PlayerInfo[playerid][pTentID] = -1;
				ClearAnimations(playerid);
		    }
		    case 2:
		    {
		        GetPlayerZone(playerid, zName, sizeof(zName));
		        DestroyDynamic3DTextLabel(TentInfo[PlayerInfo[playerid][pTentID]][tLebal]);
				format(infomessage, 250, "帐篷 ID:{ffffff} %d#\n{FF9900}地址:{FFFFFF} %s\n{FF9900}状态:{ffffff} 已放置\n{FF9900}可用指令:{ffffff} [/tent enter]", PlayerInfo[playerid][pTentID], zName);
				TentInfo[PlayerInfo[playerid][pTentID]][tLebal] = CreateDynamic3DTextLabel(infomessage, 0xFF9900FF, TentInfo[pal][tPos][0], TentInfo[pal][tPos][1], TentInfo[pal][tPos][2]-0.5, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
				DestroyObject(TentInfo[PlayerInfo[playerid][pTentID]][tObject]);
				TentInfo[PlayerInfo[playerid][pTentID]][tObject] = CreateDynamicObject(3243, TentInfo[pal][tPos][0], TentInfo[pal][tPos][1], TentInfo[pal][tPos][2]-0.85, 0, 0, 0, GetPlayerVirtualWorld(playerid));
				PlayerInfo[playerid][pTentID] = -1;
				ClearAnimations(playerid);
				SetPlayerPos(playerid, TentInfo[pal][tPos][0], TentInfo[pal][tPos][1], TentInfo[pal][tPos][2]+3);
			}
		}
		SetPVarInt(playerid, "Muted", 0);
        KillTimer(PlayerInfo[playerid][pTentTimer]);
        GameTextForPlayer(playerid, "~w~The process is ~g~accomplished~w~100%", 5000, 5);
        PlayerInfo[playerid][pTentTimerVar] = 0;
        PlayerInfo[playerid][pTentProcess] = 0;
	}
	else
	{
		format(gameetext, 25, "~g~%s:~W~ %d%",PlayerInfo[playerid][pTentProcess] == 1? ("DISASSEMBLING") :("ESTABLISHING"), PlayerInfo[playerid][pTentTimerVar]/10);
		GameTextForPlayer(playerid, gameetext, 100, 5);
	    SetTimerEx("Tent_ProcedureTimer",100,0,"%d %d",playerid, 1);
	    PlayerInfo[playerid][pTentTimerVar]++;
	}
}

public OnPlayerRapidFire(playerid, weaponid, intervals)
{
    if(OPRF_Processed[playerid] == true) return 0;

    if(GetPlayerWeapon(playerid) == 30 || GetPlayerWeapon(playerid) == 31) return 0; //A small issue with assault rifles for now, check the "NOTES" on the topic to know about this issue.
    new
        string[128];

    format(string, sizeof(string), "系统: %s 被请出服务器, 原因: [快速射击作弊]", GetNameWithSpace(playerid));
    SendClientMessageToAll(COLOR_LIGHTRED, string);
    KickLog(playerid, "SYSTEM", "Rapid Fire");
    OPRF_Processed[playerid] = true;
    KickDelay(playerid);
    return 1;
}

forward SprayTag_Dialog(iPlayerID, iType);
public SprayTag_Dialog(iPlayerID, iType)
{
	new
		szDialog[500],
		szText[50],
		szFont[50],
		szBold[4],
		szColor[30]
	;

	switch(iType)
	{
		case TYPE_LIST_MENU:
		{
			ShowPlayerDialog(iPlayerID, SPRAYTAG_MENU, DIALOG_STYLE_LIST, "涂鸦菜单", "创建涂鸦\n编辑涂鸦\n删除已有涂鸦\n查看涂鸦", "选择", "取消");
		}
		case TYPE_LIST_CREATE:
		{
			switch(spraytag_bold[iPlayerID])
			{
				case 0: szBold = "否";
				case 1: szBold = "是";
			}
			switch(spraytag_color[iPlayerID])
			{
				case -65536: szColor = "红色";
				case -16468988: szColor = "绿色";
				case -16730675: szColor = "高亮蓝";
				case -256: szColor = "黄色";
				case -16776961: szColor = "蓝色";
				case -8092540: szColor = "灰色";
				case -65281: szColor = "粉色";
				case -1: szColor = "白色";
			}

			format(szText, 50, spraytag_text[iPlayerID]);
			format(szFont, 50, spraytag_font[iPlayerID]);

			format(szDialog, sizeof szDialog, "\
				内容: %s\n\
				字体: %s\n\
				大小: %d\n\
				颜色: %s\n\
				是否使用粗体: %s\n\
				创建涂鸦",
				szText,
				szFont,
				spraytag_size[iPlayerID],
				szColor,
				szBold
			);
			ShowPlayerDialog(iPlayerID, SPRAYTAG_CREATE_MAIN, DIALOG_STYLE_LIST, "涂鸦", szDialog, "选择", "返回");
		}
		case TYPE_LIST_EDIT:
		{
			switch(spraytag_bold[iPlayerID])
			{
				case 0: szBold = "否";
				case 1: szBold = "是";
			}
			switch(spraytag_color[iPlayerID])
			{
				case -65536: szColor = "红色";
				case -16468988: szColor = "绿色";
				case -16730675: szColor = "高亮蓝";
				case -256: szColor = "黄色";
				case -16776961: szColor = "蓝色";
				case -8092540: szColor = "灰色";
				case -65281: szColor = "粉色";
				case -1: szColor = "白色";
			}

			format(szDialog, sizeof szDialog, "\
				内容: %s\n\
				字体: %s\n\
				大小: %d\n\
				颜色: %s\n\
				是否使用粗体: %s\n\
				编辑涂鸦",
				spraytag_text[iPlayerID],
				spraytag_font[iPlayerID],
				spraytag_size[iPlayerID],
				szColor,
				szBold
			);
			ShowPlayerDialog(iPlayerID, SPRAYTAG_EDIT_LIST, DIALOG_STYLE_LIST, "涂鸦", szDialog, "选择", "返回");
		}
		case TYPE_LIST_TAGS:
		{
			new
				szName[MAX_PLAYER_NAME]
			;

			GetPlayerName(iPlayerID, szName, sizeof szName);
			for(new i; i < MAX_PLAYERS_TAGS; i++)
			{
				new szTag[24];
				format(szTag, sizeof szTag, "Free");
				if(SprayTags[iPlayerID][i][_spPosX] != 0.0 && SprayTags[iPlayerID][i][_spPosY] != 0.0)
				{
					format(szTag, sizeof(szTag), "涂鸦 #%i", i);
				}
				format(szDialog, sizeof(szDialog), "%s%s\n", szDialog, szTag);
			}

			ShowPlayerDialog(iPlayerID, SPRAYTAG_EDIT_MAIN, DIALOG_STYLE_LIST, "涂鸦", szDialog, "选择", "返回");
		}
		case TYPE_LIST_TAGS_DELETE:
		{
			new
				szName[MAX_PLAYER_NAME]
			;

			GetPlayerName(iPlayerID, szName, sizeof szName);

			for(new i; i < MAX_PLAYERS_TAGS; i++)
			{
				new szTag[24];
				format(szTag, sizeof szTag, "Free");
				if(SprayTags[iPlayerID][i][_spPosX] != 0.0 && SprayTags[iPlayerID][i][_spPosY] != 0.0)
				{
					format(szTag, sizeof(szTag), "涂鸦 #%i", i);
				}
				format(szDialog, sizeof(szDialog), "%s%s\n", szDialog, szTag);
			}
			ShowPlayerDialog(iPlayerID, SPRAYTAG_DELETE, DIALOG_STYLE_LIST, "涂鸦", szDialog, "选择", "返回");
		}
		case TYPE_LIST_TAGS_CREATE:
		{
			new
				szName[MAX_PLAYER_NAME]
			;

			GetPlayerName(iPlayerID, szName, sizeof szName);

			for(new i; i < MAX_PLAYERS_TAGS; i++)
			{
				new szTag[24];
				format(szTag, sizeof szTag, "Free");
				if(SprayTags[iPlayerID][i][_spPosX] != 0.0 && SprayTags[iPlayerID][i][_spPosY] != 0.0)
				{
					format(szTag, sizeof(szTag), "涂鸦 #%i", i);
				}
				format(szDialog, sizeof(szDialog), "%s%s\n", szDialog, szTag);
			}
			ShowPlayerDialog(iPlayerID, SPRAYTAG_CREATE, DIALOG_STYLE_LIST, "涂鸦", szDialog, "选择", "返回");
		}
		case TYPE_LIST_TAGS_FIND:
		{
			new
				szName[MAX_PLAYER_NAME]
			;

			GetPlayerName(iPlayerID, szName, sizeof szName);

			for(new i; i < MAX_PLAYERS_TAGS; i++)
			{
				new szTag[24];
				format(szTag, sizeof szTag, "Free");
				if(SprayTags[iPlayerID][i][_spPosX] != 0.0 && SprayTags[iPlayerID][i][_spPosY] != 0.0)
				{
					format(szTag, sizeof(szTag), "涂鸦 #%i", i);
				}
				format(szDialog, sizeof(szDialog), "%s%s\n", szDialog, szTag);
			}
			ShowPlayerDialog(iPlayerID, SPRAYTAG_FIND, DIALOG_STYLE_LIST, "涂鸦", szDialog, "选择", "返回");
		}
	}
	return 1;
}

public UpdateCmdFreq()
{
    for(new playerid;playerid<MAX_PLAYERS;playerid++)
    {
    	if(PlayerCmdFrq[playerid] > 0)
	  	{
	  		PlayerCmdFrq[playerid]--;
	  	}
    }
}

/*stock Float:GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
    new Float:a;
    GetPlayerPos(playerid, x, y, a);
    if (IsPlayerInAnyVehicle(playerid))
        GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
    else
        GetPlayerFacingAngle(playerid, a);
    x += (distance * floatsin(-a, degrees));
    y += (distance * floatcos(-a, degrees));
    return a;
}*/

stock FPSPlayer(playerid, num)
{
	switch(num)
	{
	    case 0:
		{
            if(GetPVarInt(playerid, "FPObject") > 0) DestroyObject(GetPVarInt(playerid, "FPObject"));
	        DeletePVar(playerid, "FPObject");
	        if(GetPVarInt(playerid, "VPObject") > 0) DestroyPlayerObject(playerid,GetPVarInt(playerid, "VPObject"));
	        DeletePVar(playerid, "VPObject");
	        SetCameraBehindPlayer(playerid);
	        DeletePVar(playerid, "FPS");
	    }
	    case 1:
		{
		    SetPVarInt(playerid, "FPS", 1);
	        new id;
	        if(IsPlayerInAnyVehicle(playerid))
	        {
	            id = CreatePlayerObject(playerid,19300, 0.0000, -1282.9984, 10.1493, 0.0000, -1, -1, 100);
	            AttachPlayerObjectToVehicle(playerid,id,GetPlayerVehicleID(playerid),-0.314999, -0.195000, 0.510000, 0.000000, 0.000000, 0.000000);
	            AttachCameraToPlayerObject(playerid,id);
	            SetPVarInt(playerid, "VPObject", id);
	        }
	        else
	        {
                id = CreateObject(19300, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
                AttachObjectToPlayer(id, playerid, 0.0, 0.1, 0.7, 0.0, 0.0, 0.0);
                AttachCameraToObject(playerid, id);
                SetPVarInt(playerid, "FPObject", id);
            }
	    }
	}
	return 1;
}

stock PlayerToCar(playerid,type,Float:distance)
{
    new Float:x, Float:y, Float:z;
    for(new c =0; c < MAX_VEHICLES ;c++)
    {
        if(IsVehicleStreamedIn(c, playerid))
        {
            GetVehiclePos(c,x,y,z);
            if(IsPlayerInRangeOfPoint(playerid,distance,x,y,z))
            {
			    switch(type)
			    {
			        case 1: return true;
			        case 2: return c;
			    }
            }
        }
    }
    if(type == 1) return false;
    return INVALID_VEHICLE_ID;
}

stock GetPlayerIdFromName(playername[])
{
  for(new i = 0; i <= MAX_PLAYERS; i++)
  {
    if(IsPlayerConnected(i))
    {
      new playername2[MAX_PLAYER_NAME];
      GetPlayerName(i, playername2, sizeof(playername2));
      if(strcmp(playername2, playername, true, strlen(playername)) == 0)
      {
        return i;
      }
    }
  }
  return INVALID_PLAYER_ID;
}

stock IsPlayerInWater(playerid)
{
    new anim = GetPlayerAnimationIndex(playerid);
    if (((anim >=  1538) && (anim <= 1542)) || (anim == 1544) || (anim == 1250) || (anim == 1062)) return true;
	return false;
}

stock PlayerToPlayer(playerid,targetid,Float:distance)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid,x,y,z);
    if(IsPlayerConnected(targetid)&&IsPlayerInRangeOfPoint(targetid,distance,x,y,z)&&IsPlayerStreamedIn(targetid, playerid)) return true;
    return false;
}

stock IsPlayerRunning(playerid)
{
    new ai = GetPlayerAnimationIndex(playerid);

    if(ai == 1231) return true;

    return false;
}
stock IsPlayerFalling(playerid)
{
    new index = GetPlayerAnimationIndex(playerid);

    if(index >= 958 && index <= 979 || index == 1130 || index == 1195 || index == 1132) return true;

    return false;
}
stock GetFullTime()
{
	new date[128];
	new hour, minute, second;
	gettime(hour, minute, second);
	format(date, sizeof(date), "%02d:%02d:%02d",hour, minute, second);
	return date;
}
stock nGraffiti()
{
	new ID[64]; for(new h = 0; h <= 200; h++){
	format(ID, sizeof(ID), Graffitis, h);if(!dini_Exists(ID)) return h; }return true;
}

stock LoadGraffitis()
{
	new string[70];
    for(new ID = 0; ID < sizeof(gInfo); ID++)
	{
		format(string, sizeof(string), Graffitis, ID);
	    if(dini_Exists(string))
		{
		    strmid(gInfo[ID][graffcreator],dini_Get(string,"graffcreator"),0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
		    strmid(gInfo[ID][graffname],dini_Get(string,"graffname"),0,96,96);
		    gInfo[ID][OBJECTID] =  dini_Int(string, "OBJECTID");
			gInfo[ID][Xpos] =  dini_Float(string, "Xpos");
		   	gInfo[ID][Ypos] =  dini_Float(string, "Ypos");
		    gInfo[ID][Zpos] =  dini_Float(string, "Zpos");
   			gInfo[ID][XYpos] =  dini_Float(string, "XYpos");
		   	gInfo[ID][YYpos] =  dini_Float(string, "YYpos");
		    gInfo[ID][ZYpos] =  dini_Float(string, "ZYpos");

   		}
	}
	return 1;
}

stock SaveGraffitis()
{
	new string[50];
 	for(new ID = 0; ID < sizeof(gInfo); ID++)
	{
	    format(string, sizeof(string), Graffitis, ID);
	    if(dini_Exists(string))
	    {
	        dini_Set(string,"graffcreator",gInfo[ID][graffcreator]);
	        dini_Set(string,"graffname",gInfo[ID][graffname]);
	        dini_Set(string,"OBJECTID", gInfo[ID][OBJECTID]);
		 	dini_FloatSet(string,"Xpos", gInfo[ID][Xpos]);
		  	dini_FloatSet(string,"Ypos", gInfo[ID][Ypos]);
		   	dini_FloatSet(string,"Zpos", gInfo[ID][Zpos]);
		 	dini_FloatSet(string,"XYpos", gInfo[ID][XYpos]);
		  	dini_FloatSet(string,"YYpos", gInfo[ID][YYpos]);
		   	dini_FloatSet(string,"ZYpos", gInfo[ID][ZYpos]);

	    }
    }
	return 1;
}
stock GetName(playerid)
{
	new name[MAX_PLAYER_NAME];
 	GetPlayerName(playerid,name,sizeof(name));
	return name;
}
public loadgraffs()
{

	for(new ID = 0; ID < MAXGRAFFS; ID++)
	{

			gInfo[ID][OBJECTID] = CreateDynamicObject( 19482, gInfo[ID][Xpos],gInfo[ID][Ypos],gInfo[ID][Zpos], gInfo[ID][XYpos], gInfo[ID][YYpos], gInfo[ID][ZYpos], -1, 0, -1, 200 ); //创建OBJ
   			SetDynamicObjectMaterialText( gInfo[ID][OBJECTID], 0, gInfo[ID][graffname], OBJECT_MATERIAL_SIZE_512x512, "Impact", 25, 1, 0xFFFFFFFF, 0, 1 ); // 设置OBJ的颜色
   			gammount ++;

	}
	return 1;
}
public creategraff( playerid )
{
	new v = random(200+200);
	printf("%d",v);
	POBJECT[playerid] += v;
    DestroyDynamicObject( POBJECT[playerid] );
    POBJECT[playerid] = CreateDynamicObject( 19482, XYZ[playerid][0], XYZ[playerid][1], XYZ[playerid][2], XYZ[playerid][3], XYZ[playerid][4], XYZ[playerid][5], GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 200 );
	SetDynamicObjectMaterialText( POBJECT[playerid], 0, POBJECTN[playerid], OBJECT_MATERIAL_SIZE_512x512, "Impact", 25, 1, 0xFFFFFFFF, 0, 1 );
	GameTextForPlayer( playerid, "] ~w~SPRAYED ]",5000,5 );
	DeletePVar( playerid,"GraffitiCreating" );
	sprayammount[playerid] = 0;
	GRAVEH[playerid] = 0;
	isveh[playerid] = 0;
	sprays ++;
	creator[playerid] = GetName(playerid);
	new string[20];
	new id = nGraffiti();
	format(string, sizeof(string),Graffitis, id);
	dini_Create(string);
	strmid(gInfo[id][graffname] , POBJECTN[playerid], 0, strlen(POBJECTN[playerid]), 32);
	gInfo[id][graffcreator] = GetName(playerid);
	gInfo[id][OBJECTID] = POBJECT[playerid];
	gInfo[id][Xpos] = XYZ[playerid][0];
	gInfo[id][Ypos] = XYZ[playerid][1];
	gInfo[id][Zpos] = XYZ[playerid][2];
	gInfo[id][XYpos] = XYZ[playerid][3];
	gInfo[id][YYpos] = XYZ[playerid][4];
	gInfo[id][ZYpos] = XYZ[playerid][5];
	SaveGraffitis();
	StopAudioStreamForPlayer(playerid);
	return 1;
}
public killgr(playerid)
{
    sprayammount[playerid] = 0;
   	DeletePVar( playerid,"GraffitiCreating" );
	sprayammountch[playerid] = 0;
	graffmenup[playerid] = 0;
	return 1;
}



public spraying( playerid )
{
    if(IsPlayerInRangeOfPoint(playerid, 2.0, XYZ[playerid][0], XYZ[playerid][1], XYZ[playerid][2]))
    {
		sprayammount[playerid] ++;

		if( sprayammount[playerid] == sprayammountch[playerid] )
		{
			KillTimer( spraytimer[playerid] );
	    	creategraff( playerid );
	 		return 1;
		}
		new string[64];
		format( string, sizeof(string),"~r~] ~g~SPRAYING~n~ ~r~] ~w~%d/%d",sprayammount[playerid], sprayammountch[playerid]); // <----
		GameTextForPlayer( playerid, string, 1000,5 );
		return 1;
	}
	else
	{
		GameTextForPlayer(playerid, "] ~r~Sorry, you are too far away\n-2 points deducted ~y~]",5000, 5);
		sprayammount[playerid] -= 2;
		return 1;
	}

}
public sprayingch( playerid )
{
	graffmenup[playerid] ++;

	if( graffmenup[playerid] == 5 )
	{
		KillTimer( spraytimerch[playerid] );
	    GRAFFDIALOG
	 	return 1;
	}
	new string[64];
	format( string, sizeof(string),"~r~] ~g~KEEP SPRAYING FOR GRAFFITI MENU~n~ ~r~] ~w~%d/5",graffmenup[playerid]);
	GameTextForPlayer( playerid, string, 1000,5 );
	return 1;
}
forward startgraff(playerid);
public startgraff (playerid)
{
	new	Float:X[3];
	GetPlayerPos( playerid, X[0], X[1], X[2] );
	POBJECT[playerid] = CreateDynamicObject( 19482, X[0], X[1], X[2], 0.0, 0.0, 0.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid, 200 );
	SetDynamicObjectMaterialText( POBJECT[playerid], 0, POBJECTN[playerid], OBJECT_MATERIAL_SIZE_512x512, "Impact", 25, 1, 0xFFFFFFFF, 0, 1 );
	EditDynamicObject( playerid, POBJECT[playerid] );
	SetPVarInt( playerid, "GraffitiCreating",1 );
	return 1;
}
forward OnPlayerSpray(playerid);
public OnPlayerSpray(playerid)
{
	new IDOut = GetPVarInt(playerid, "SavePlayerID");
    if(mechpick == 1) {
    	ChangeVehicleColor(MechVehID, mechcolor, 0); }
	else {
	ChangeVehicleColor(MechVehID, 0, mechcolor); }
	KillTimer(SprayT);
	MechSpray[playerid] = 0;
	Service[playerid][0] = 0;
	ServiceOffer[IDOut][0] = 0;
	SendClientMessage(playerid, COLOR_GREEN, "你成功将该载具换漆.");
	SendClientMessage(IDOut, COLOR_GREEN, "对方成功为您更换了新漆.");
	return 1;
}
forward OnPlayerSprayBW(playerid);
public OnPlayerSprayBW(playerid)
{
	new fixpanels,fixdoors,fixlights,fixtires;
	new IDOut = GetPVarInt(playerid, "SavePlayerID");
	fixtires = fixencode_tires(0, 0, 0, 0); // fix all tires
	fixpanels = fixencode_panels(0, 0, 0, 0, 0, 0, 0); // fix all panels
	fixdoors = fixencode_doors(0, 0, 0, 0, 0, 0); // fix all doors
 	fixlights = fixencode_lights(0, 0, 0, 0); // fix all lights
	UpdateVehicleDamageStatus(MechVehID, fixpanels, fixdoors, fixlights, fixtires);
	Service[playerid][1] = 0;
	ServiceOffer[IDOut][1] = 0;
	KillTimer(SprayTBW);
	SendClientMessage(playerid, COLOR_GREEN, "你成功修复该车外观.");
	SendClientMessage(IDOut, COLOR_GREEN, "对方成功为您修复了外观.");
	return 1;
}
forward OnPlayerSprayEN(playerid);
public OnPlayerSprayEN(playerid)
{
    new IDOut = GetPVarInt(playerid, "SavePlayerID");
	SetVehicleHealth(MechVehID, 1000.0);
	Service[playerid][2] = 0;
	ServiceOffer[IDOut][2] = 0;
	KillTimer(SprayTEN);
	SendClientMessage(playerid, COLOR_GREEN, "你成功修复该车引擎");
	SendClientMessage(IDOut, COLOR_GREEN, "对方成功为您更换了新的引擎.");
	return 1;
}
/*public OnPlayerShotVehicle(playerid, vehicleid, weaponid, Float:amount, bodypart)
{
	if(!VehicleEmpty(vehicleid)) return 1;
	return 1;
}
public OnPlayerEditVehicleObject(playerid, vehicleid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	return 1;
}*/
stock VehicleEmpty(vehicleid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerInVehicle(i, vehicleid)) return 0;
	}
	return 1;
}

BreakCarHandler(playerid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	new vehicle = GetPVarInt(playerid, "SaveVehicleID");
	//new bk_string[64];
	
	for(new i = 1; i < MAX_VEHICLES; i++)
	{
		if(VehicleInfo[i][vIsBreak])
		{
			new Float:testpos[3];
			GetVehiclePos(vehicle, testpos[0], testpos[1], testpos[2]);
			new Float:vehdis = Float:XB_GetDistanceBetweenPoints(x, y, testpos[0], testpos[1]);
			if(vehdis < 2)
			{
				new damage;
				switch(GetPlayerWeapon(playerid))
				{
				    case 0:damage=1+random(1);
					case 2:damage=1+random(2);
					case 5:damage=3+random(3);
					case 6:damage=4+random(4);
					case 7:damage=2+random(3);
				}
				//format(bk_string, sizeof(bk_string), "-%d", damage);
				//SCM(playerid, COLOR_WHITE, bk_string);
				VehicleTakeDamage(i, damage);
				break;
			}
		}
	}
}

VehicleTakeDamage(vehid, amount)
{
	VehicleInfo[vehid][vDamages] -= amount;
	if(VehicleInfo[vehid][vDamages] <= 0)
	{
		VehicleInfo[vehid][vIsBreak] = false;
		return 1;
	}
	UpdateCarLabel(vehid);
	return 2;
}

UpdateCarLabel(vehid)
{
	new string[128];
	format(string, sizeof(string), "%d", VehicleInfo[vehid][vDamages]);
	Update3DTextLabelText(BreakCarLB[vehid], COLOR_WHITE, string);
}

forward BreakCarCD(playerid);
public BreakCarCD(playerid)
{
	BreakinCD[playerid] = false;
}

forward EnterCD(playerid);
public EnterCD(playerid)
{
	EntranceCD[playerid] = false;
}

forward OnLightFlash(vehicleid);
public OnLightFlash(vehicleid)
{
    new panels, doors, lights, tires;
	GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);

	switch(Flash[vehicleid])
	{
        case 0: UpdateVehicleDamageStatus(vehicleid, panels, doors, 2, tires);

	    case 1: UpdateVehicleDamageStatus(vehicleid, panels, doors, 5, tires);

	    case 2: UpdateVehicleDamageStatus(vehicleid, panels, doors, 2, tires);

	    case 3: UpdateVehicleDamageStatus(vehicleid, panels, doors, 4, tires);

	    case 4: UpdateVehicleDamageStatus(vehicleid, panels, doors, 5, tires);

	    case 5: UpdateVehicleDamageStatus(vehicleid, panels, doors, 4, tires);
	}
	if(Flash[vehicleid] >=5) Flash[vehicleid] = 0;
	else Flash[vehicleid] ++;
	return 1;
}
forward OnVehicleSirenStateChange(playerid, vehicleid, newstate);
public OnVehicleSirenStateChange(playerid, vehicleid, newstate)
{
	if(newstate)
	{
	    FlashTime[vehicleid] = SetTimerEx("OnLightFlash", flashtime, true, "d", vehicleid);
	}

	if(!newstate)
	{
		new panels, doors, lights, tires;

		KillTimer(FlashTime[vehicleid]);

		GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
	    UpdateVehicleDamageStatus(vehicleid, panels, doors, 0, tires);
	}
	return 1;
}

stock Float:abs(Float:value)
{
	return value < 0 ? value * -1 : value;
}


forward UpdatePlayer(playerid,suspectid);
public UpdatePlayer(playerid,suspectid)
{
 new Float:Velocity[3], string[200],zone[30],name[20],tires,panels,doors,lights,Float:health;
 GetPlayerName(suspectid,name,20);
 if(IsPlayerInAnyVehicle(suspectid))
 GetVehicleVelocity(GetPlayerVehicleID(suspectid),Velocity[0],Velocity[1],Velocity[2]);
 else
  GetPlayerVelocity(suspectid, Velocity[0], Velocity[1], Velocity[2]);
 GetPlayer2DZone(suspectid,zone,30);
  format(string,200,"Suspect: %s~n~Location: %s",name,zone);
 if(Velocity[0] == 0.0 && Velocity[1] == 0.0 )
 {
  format(string,200,"%s~n~Stationary ",string);
 }else{
  if(abs(Velocity[1])>abs(Velocity[0]))
  {
   if(Velocity[1]>0)
    format(string,200,"%s~n~Heading: Northbound",string);
   else
    format(string,200,"%s~n~Heading: Southbound",string);
  }else{
   if(Velocity[0]>0)
    format(string,200,"%s~n~Heading: Eastbound",string);
   else
    format(string,200,"%s~n~Heading: Westbound",string);
  }
 }
 if(IsPlayerInAnyVehicle(suspectid))
 {
  new suspectcar = GetPlayerVehicleID(suspectid);
  format(string,200,"%s~n~Vehicle: %s",string, vehicleData[GetVehicleModel(suspectid) - 400][typeName]);
  GetVehicleDamageStatus(suspectcar,panels,doors,lights,tires);
  new t1 = 1 & tires; new t2 = ((1 << 1) & tires) >> 1; new t3 = ((1 << 2) & tires) >> 2; new t4 = ((1 << 3) & tires) >> 3;
  new tiresdown=t1+t2+t3+t4;
  if(tiresdown>0)
  {
   format(string,200,"%s~n~~b~%i~w~ TIRES DOWN!",string,tiresdown);
  }
  GetVehicleHealth(suspectcar,health);
  if(health<250)
  {
  format(string,200,"%s~n~~r~VEHICLE BROKEN!",string);
  }
 }


 TextDrawSetString(updateTD[playerid],string);
 return 1;
}

IsABike(model)
{
	if(model == 481||model == 509||model == 510)
	{
		return true;
	}
	return false;
}

IsACopCar(model)
{
	if(model ==  523||model == 427||model == 490||model == 528||model == 598||model == 497||model == 597||model == 599||model == 596||model == 432||model == 601)
	{
		return true;
	}

	return false;
}

IsABoat(model)
{
	if(model == 472||model == 473||model == 493||model == 595||model == 484||model == 430||model == 453||model == 452||model == 446||model == 454)
	{
		return true;
	}
	return false;
}

IsAPlane(model)
{
	if(model ==  592||model == 577||model == 511||model == 512||model == 593||model == 520||model == 553||model == 476||model == 460||model == 513||model == 548||model == 425||model == 417||model == 487||model == 488||model == 497||model == 563||model == 447||model == 469)
	{
		return true;
	}
	return false;
}

IsANPlane(model)
{
	if(model == 519)
	{
		return true;
	}
	return false;
}

XB_GivePlayerThirst(playerid,amount)
{
	PlayerInfo[playerid][pThirst] += amount;
	if(PlayerInfo[playerid][pThirst] > 1000)
	PlayerInfo[playerid][pThirst] = 1000;
	XB_SetHungerTxd(playerid);
}

XB_GivePlayerHunger(playerid,amount)
{
    PlayerInfo[playerid][pHunger]+=amount;
	if(PlayerInfo[playerid][pHunger]>1000)
	PlayerInfo[playerid][pHunger]=1000;
	XB_SetHungerTxd(playerid);
}

XB_SetHungerTxd(playerid)
{
    if(GetPVarInt(playerid, "MapInfoHide") == 0)
    {
		new Float:percentage;
		percentage=PlayerInfo[playerid][pHunger]*6/100;
		PlayerTextDrawTextSize(playerid, TD_R_HungerText, 535.0+percentage, 0.000000);
		PlayerTextDrawShow(playerid,TD_R_HungerText);
		percentage=PlayerInfo[playerid][pThirst]*6/100;
		PlayerTextDrawTextSize(playerid, TD_R_ThirstText, 535.0+percentage, 0.000000);
		PlayerTextDrawShow(playerid,TD_R_ThirstText);
		
    }
}

XB_WeatherReport(Weather)
{
	switch(Weather)
	{
		case 19:
		{
			SendClientMessageToAll(COLOR_YELLOW2,"[橙色警报]: 天空中出现轻微雾霾, 请市民不要在外面闲逛, 以免患上呼吸道疾病.");
		}
		case 16:
		{
            SendClientMessageToAll(COLOR_YELLOW2,"[橙色警报]: 现在正在下雷阵雨, 请市民尽量不要外出, 以免着凉感冒.");
		}
		case 9:
		{
			SendClientMessageToAll(COLOR_RED,"[红色警报]: 天空中出现重度雾霾, 请市民不要在外面闲逛, 以免患上呼吸道疾病!");
		}
		case 8:
		{
            SendClientMessageToAll(COLOR_RED,"[红色警报]: 现在正在下暴雨, 请市民尽量不要外出, 以免着凉感冒!'");
		}
	}
}
//19 癌症几率较小 9 癌症几率大
//16 感冒 几率较小  8 感冒几率较大
XB_IsInWeather(playerid)
{
	if(GetPlayerInterior(playerid)!=0||GetPlayerVirtualWorld(playerid)!=0)return false;
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vid=GetPlayerVehicleID(playerid);
		new rand=GetPlayerVehicleID(vid);
		if(IsABike(rand))return true;
		return false;
	}
	return true;
		
}
forward Opering(playerid);
public Opering(playerid)
{
    if(IsPlayerConnected(playerid))
    {
		new rand;
		new pid = GetPVarInt(playerid, "OperID");
		rand = random(10);
		new msg[128];
		switch(rand)
		{
		    case 0:
			{
		       
		        format(msg, sizeof(msg), "** 手术失败! (( %s ))", GetNameWithSpace(playerid, 1));
				ProxDetector(15, playerid, msg, COLOR_PINK);
				SetPlayerHealth(pid, 0.0);
				SetPVarInt(pid, "DeadWithoutMB",1);
				SCM(pid, COLOR_LIGHTRED, "由于你死于手术台, 医疗账单已免去.");
				SCM(playerid, COLOR_LIGHTRED, "手术失败, 患者已经死亡.");
				UnfreezePlayer(playerid);
				UnfreezePlayer(pid);
				DeletePVar(playerid, "OperID");

		    }
		    default:
			{
		 		format(msg, sizeof(msg), "** 手术成功! (( %s ))", GetNameWithSpace(playerid, 1));
				ProxDetector(15, playerid, msg, COLOR_PINK);
				SCM(pid, COLOR_LIGHTRED, "手术非常成功, 你现在还是昏迷的, 请等待对方将你送入病房.");
				SCM(playerid, COLOR_LIGHTRED, "手术非常成功, 对方现在还是昏迷的, 你需要将对方送入病房内休息.");
				UnfreezePlayer(playerid);
				UnfreezePlayer(pid);
				PlayerInfo[playerid][pHunger]=500;
	    		PlayerInfo[playerid][pThirst]=500;
				PlayerInfo[pid][pCancer] = 0;
				BrokenLegs[pid] = 0;
				PlayerInfo[pid][pCold] = 0;
				sInfo[pid][Misc] = 0;
				sInfo[pid][Head] = 0;
				sInfo[pid][Chest] = 0;
				sInfo[pid][Crotch] = 0;
				sInfo[pid][LArm] = 0;
				sInfo[pid][RArm] = 0;
				sInfo[pid][LLeg] = 0;
				sInfo[pid][RLeg] = 0;
				DeletePVar(playerid, "OperID");
		 	}
		}
	} else SCM(playerid, COLOR_LIGHTRED, "对方已经下线..");
	return 1;
}
stock randomEx(min, max)
{
    new rand = random(max-min)+min;
    return rand;
}
stock GetReqID(playerid)
{
    return tempSerial[playerid];
}

XB_GetIDByMask(maskid)
{
	for(new i; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMaskID] == maskid)
			return i;
		}
	}
	return -1;
}

XB_GetIDFromSerial(serid)
{
	if(serid==0) return -1;
	for(new i; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(tempSerial[i] == serid)
			return i;
		}
	}
	return -1;
}

forward RemainsTimer();
public RemainsTimer()
{
	new
			iter_next;
	foreach(Remains, a)
	{
		if(RemainsData[a][Time] > 0)
			RemainsData[a][Time]--;
		else
		{
			DestroyRemains(a, true);
			Iter_SafeRemove(Remains, a, iter_next);
			a = iter_next;
		}
	}
	return true;
}

stock IsVehicleRemainsType(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case
			400..402, 404, 405, 409..413, 415, 418..422, 424, 426, 429, 434, 436,
			438..440, 442, 445, 451, 457..459, 466, 467, 470, 474, 475, 477..480,
			482, 483, 485, 489..492, 494..496, 500, 502..507, 516..518, 525..531,
			533..536, 540..543, 545..547, 549..552, 554, 555, 558..562, 565..568,
			572..576, 578..580, 582, 583, 585, 587, 589, 596..605:
				return true;
	}
	return false;
}

stock CreateRemains(type, model, time, age, name[], Float:pos_x, Float:pos_y, Float:pos_z, Float:angle, world, interior, Float:distance = 150.0)
{
	new r_id = Iter_Free(Remains);
	if(r_id == INVALID_SCRIPT_ID)
		return INVALID_SCRIPT_ID;
	Iter_Add(Remains, r_id);
	// ACTOR类型
	RemainsData[r_id][Type]	= type;
	// ACTOR模型.
	switch(type)
	{
		case TYPE_REMAINS_PERSON:
		{
			// 创建Acotr.
			RemainsData[r_id][Model] = CreateActor(model, pos_x, pos_y, pos_z, angle);
			SetActorVirtualWorld(RemainsData[r_id][Model], world);
			SetActorHealth(RemainsData[r_id][Model], 0.0);
			format(RemainsData[r_id][Name], MAX_PLAYER_NAME, "%s", name);
			RemainsData[r_id][Age] = age;
//			RemainsData[r_id][coPos][0] = pos_x;
//			RemainsData[r_id][coPos][1] = pos_y;
//			RemainsData[r_id][coPos][2] = pos_z;
			pos_z = (pos_z - 0.5);
		}
		case TYPE_REMAINS_CAR:
		{
			// 创建车辆残骸.
			RemainsData[r_id][Model] = CreateDynamicObject(12957, pos_x, pos_y, pos_z, 0.0, 0.0, (angle + 180.0), world, interior, INVALID_SCRIPT_ID, distance);
			pos_z = (pos_z + 1.0);
		}
	}
	// 销毁时间.
	RemainsData[r_id][Time]	= time;
	// 创建OBJ的3DTEXT.
	RemainsData[r_id][Information] = CreateDynamic3DTextLabel(Remains_Label(type), 0x00E1FFFF, pos_x, pos_y, pos_z, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, world, interior, INVALID_SCRIPT_ID, 10.0);
	return r_id;
}

stock DestroyRemains(r_id, bool:iter = false)
{
	if(!Iter_Contains(Remains, r_id))
		return false;
	if(!iter)
		Iter_Remove(Remains, r_id);
	// 判断类型.
	switch(RemainsData[r_id][Type])
	{
		case TYPE_REMAINS_PERSON:
		{
			if(IsValidActor(RemainsData[r_id][Model]))
				DestroyActor(RemainsData[r_id][Model]);
		}
		case TYPE_REMAINS_CAR:
		{
			if(IsValidDynamicObject(RemainsData[r_id][Model]))
				DestroyDynamicObject(RemainsData[r_id][Model]);
		}
	}
	RemainsData[r_id][Model] = 0xFFFF;
	// 删除类型.
	RemainsData[r_id][Type]	= 0;
	// 重置时间
	RemainsData[r_id][Time]	= 0;
	// 销毁3DTEXT.
	if(IsValidDynamic3DTextLabel(RemainsData[r_id][Information]))
	{
		DestroyDynamic3DTextLabel(RemainsData[r_id][Information]);
		RemainsData[r_id][Information] = Text3D:INVALID_3DTEXT_ID;
	}
	return true;
}

stock Remains_Label(type)
{
	new string[57];
	switch(type)
	{
		case TYPE_REMAINS_PERSON: format(string, 54, "尸体\n按下'C'键查看");
		case TYPE_REMAINS_CAR: format(string, 57, "汽车残骸");
	}
	return string;
}

CorpseHandler(playerid)
{
	for(new r = 0; r != MAX_REMAINS; r++)
	{
		if(RemainsData[r][Type] == 1)
		{
		    new Float:remainpos[3];
			GetActorPos(RemainsData[r][Model], remainpos[0], remainpos[1], remainpos[2]);
			if(IsPlayerInRangeOfPoint(playerid, 2.0, remainpos[0], remainpos[1], remainpos[2]))
			{
				ShowPlayerDialog(playerid, DIALOG_CORPSE, DIALOG_STYLE_LIST, "尸体操作", "查看信息\n放入车内\n装进裹尸袋", "确定", "取消");
				SetPlayerCheckingCorpse(playerid);
				SetPVarInt(playerid, "CorpseID", r);
				break;
			}
		}
	}
}

SetPlayerCheckingCorpse(playerid)
{
	IsChecking[playerid] = true;
}
forward SetPlayerBackToDeath(playerid);
public SetPlayerBackToDeath(playerid)
{
 	SCM(playerid, COLOR_YELLOW, "[!] -> 脚本检测到您最后一次离线时角色状态为死亡, 脚本自动将您恢复之前的环境.");
	SetPlayerHealth(playerid, 0); // 将玩家设置为死亡
	return 1;
}
stock ShowBlood(playerid)
{
	if(GetPVarInt(playerid, "Death") == 0 && GetPVarInt(playerid,"PlayerBlood") == 0)
	{
        TextDrawHideForPlayer(playerid, BloodDraw[0]);
		TextDrawHideForPlayer(playerid, BloodDraw[1]);
		TextDrawHideForPlayer(playerid, BloodDraw[2]);
        TextDrawShowForPlayer(playerid, BloodDraw[0]);
		TextDrawShowForPlayer(playerid, BloodDraw[1]);
		TextDrawShowForPlayer(playerid, BloodDraw[2]);
        SetPVarInt(playerid, "PlayerBlood", 2);
    }
    return true;
}

